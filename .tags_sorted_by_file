!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
-format	GNUmakefile	/^	git archive --format=tar HEAD | gzip > lab$(LAB)-handin.tar.gz$/;"	m
AR	GNUmakefile	/^AR	:= $(GCCPREFIX)ar$/;"	m
AS	GNUmakefile	/^AS	:= $(GCCPREFIX)as$/;"	m
CC	GNUmakefile	/^CC	:= $(GCCPREFIX)gcc -pipe$/;"	m
CFLAGS	GNUmakefile	/^CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -O1 -fno-builtin -I$(TOP) -MD$/;"	m
CPUS	GNUmakefile	/^CPUS ?= 1$/;"	m
GCCPREFIX	GNUmakefile	/^GCCPREFIX := $(shell if i386-jos-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >\/dev\/null 2>&1; \\$/;"	m
GCC_LIB	GNUmakefile	/^GCC_LIB := $(shell $(CC) $(CFLAGS) -print-libgcc-file-name)$/;"	m
GDBPORT	GNUmakefile	/^GDBPORT	:= $(shell expr `id -u` % 5000 + 25000)$/;"	m
IMAGES	GNUmakefile	/^IMAGES = $(OBJDIR)\/kern\/kernel.img$/;"	m
KERN_CFLAGS	GNUmakefile	/^KERN_CFLAGS := $(CFLAGS) -DJOS_KERNEL -gstabs$/;"	m
LABSETUP	GNUmakefile	/^LABSETUP ?= .\/$/;"	m
LD	GNUmakefile	/^LD	:= $(GCCPREFIX)ld$/;"	m
LDFLAGS	GNUmakefile	/^LDFLAGS := -m elf_i386$/;"	m
NATIVE_CFLAGS	GNUmakefile	/^NATIVE_CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -I$(TOP) -MD -Wall$/;"	m
NCC	GNUmakefile	/^NCC	:= gcc $(CC_VER) -pipe$/;"	m
NM	GNUmakefile	/^NM	:= $(GCCPREFIX)nm$/;"	m
OBJCOPY	GNUmakefile	/^OBJCOPY	:= $(GCCPREFIX)objcopy$/;"	m
OBJDIR	GNUmakefile	/^OBJDIR := obj$/;"	m
OBJDIRS	GNUmakefile	/^OBJDIRS :=$/;"	m
OBJDUMP	GNUmakefile	/^OBJDUMP	:= $(GCCPREFIX)objdump$/;"	m
PERL	GNUmakefile	/^PERL	:= perl$/;"	m
PORT7	GNUmakefile	/^PORT7	:= $(shell expr $(GDBPORT) + 1)$/;"	m
PORT80	GNUmakefile	/^PORT80	:= $(shell expr $(GDBPORT) + 2)$/;"	m
QEMU	GNUmakefile	/^QEMU := $(shell if which qemu > \/dev\/null; \\$/;"	m
QEMUOPTS	GNUmakefile	/^QEMUOPTS = -hda $(OBJDIR)\/kern\/kernel.img -serial mon:stdio -gdb tcp::$(GDBPORT)$/;"	m
TAR	GNUmakefile	/^TAR	:= gtar$/;"	m
TOP	GNUmakefile	/^TOP = .$/;"	m
ULDFLAGS	GNUmakefile	/^ULDFLAGS := -T user\/user.ld$/;"	m
USER_CFLAGS	GNUmakefile	/^USER_CFLAGS := $(CFLAGS) -DJOS_USER -gstabs$/;"	m
WEBSUB	GNUmakefile	/^WEBSUB = https:\/\/ccutler.scripts.mit.edu\/6.828\/handin.py$/;"	m
gdt	boot/boot.S	/^gdt:$/;"	l
gdtdesc	boot/boot.S	/^gdtdesc:$/;"	l
protcseg	boot/boot.S	/^protcseg:$/;"	l
spin	boot/boot.S	/^spin:$/;"	l
start	boot/boot.S	/^start:$/;"	l
ELFHDR	boot/main.c	33;"	d	file:
SECTSIZE	boot/main.c	32;"	d	file:
bootmain	boot/main.c	/^bootmain(void)$/;"	f
readsect	boot/main.c	/^readsect(void *dst, uint32_t offset)$/;"	f
readseg	boot/main.c	/^readseg(uint32_t pa, uint32_t count, uint32_t offset)$/;"	f
waitdisk	boot/main.c	/^waitdisk(void)$/;"	f
V	conf/env.mk	/^V = @$/;"	m
LAB	conf/lab.mk	/^LAB=6$/;"	m
PACKAGEDATE	conf/lab.mk	/^PACKAGEDATE=Mon Nov 17 18:30:59 EST 2014$/;"	m
bc_init	fs/bc.c	/^bc_init(void)$/;"	f
bc_pgfault	fs/bc.c	/^bc_pgfault(struct UTrapframe *utf)$/;"	f	file:
check_bc	fs/bc.c	/^check_bc(void)$/;"	f	file:
diskaddr	fs/bc.c	/^diskaddr(uint32_t blockno)$/;"	f
flush_block	fs/bc.c	/^flush_block(void *addr)$/;"	f
va_is_dirty	fs/bc.c	/^va_is_dirty(void *va)$/;"	f
va_is_mapped	fs/bc.c	/^va_is_mapped(void *va)$/;"	f
alloc_block	fs/fs.c	/^alloc_block(void)$/;"	f
block_is_free	fs/fs.c	/^block_is_free(uint32_t blockno)$/;"	f
check_bitmap	fs/fs.c	/^check_bitmap(void)$/;"	f
check_super	fs/fs.c	/^check_super(void)$/;"	f
dir_alloc_file	fs/fs.c	/^dir_alloc_file(struct File *dir, struct File **file)$/;"	f	file:
dir_lookup	fs/fs.c	/^dir_lookup(struct File *dir, const char *name, struct File **file)$/;"	f	file:
file_block_walk	fs/fs.c	/^file_block_walk(struct File *f, uint32_t filebno, uint32_t **ppdiskbno, bool alloc)$/;"	f	file:
file_create	fs/fs.c	/^file_create(const char *path, struct File **pf)$/;"	f
file_flush	fs/fs.c	/^file_flush(struct File *f)$/;"	f
file_free_block	fs/fs.c	/^file_free_block(struct File *f, uint32_t filebno)$/;"	f	file:
file_get_block	fs/fs.c	/^file_get_block(struct File *f, uint32_t filebno, char **blk)$/;"	f
file_open	fs/fs.c	/^file_open(const char *path, struct File **pf)$/;"	f
file_read	fs/fs.c	/^file_read(struct File *f, void *buf, size_t count, off_t offset)$/;"	f
file_set_size	fs/fs.c	/^file_set_size(struct File *f, off_t newsize)$/;"	f
file_truncate_blocks	fs/fs.c	/^file_truncate_blocks(struct File *f, off_t newsize)$/;"	f	file:
file_write	fs/fs.c	/^file_write(struct File *f, const void *buf, size_t count, off_t offset)$/;"	f
free_block	fs/fs.c	/^free_block(uint32_t blockno)$/;"	f
fs_init	fs/fs.c	/^fs_init(void)$/;"	f
fs_sync	fs/fs.c	/^fs_sync(void)$/;"	f
skip_slash	fs/fs.c	/^skip_slash(const char *p)$/;"	f	file:
walk_path	fs/fs.c	/^walk_path(const char *path, struct File **pdir, struct File **pf, char *lastelem)$/;"	f	file:
BLKSECTS	fs/fs.h	5;"	d
DISKMAP	fs/fs.h	9;"	d
DISKSIZE	fs/fs.h	12;"	d
SECTSIZE	fs/fs.h	4;"	d
bitmap	fs/fs.h	/^uint32_t *bitmap;		\/\/ bitmap blocks mapped in memory$/;"	v
super	fs/fs.h	/^struct Super *super;		\/\/ superblock$/;"	v	typeref:struct:Super
Dir	fs/fsformat.c	/^struct Dir$/;"	s	file:
JOS_INC_TYPES_H	fs/fsformat.c	25;"	d	file:
MAX_DIR_ENTS	fs/fsformat.c	35;"	d	file:
ROUNDUP	fs/fsformat.c	34;"	d	file:
alloc	fs/fsformat.c	/^alloc(uint32_t bytes)$/;"	f
bitmap	fs/fsformat.c	/^uint32_t *bitmap;$/;"	v
blockof	fs/fsformat.c	/^blockof(void *pos)$/;"	f
bool	fs/fsformat.c	/^typedef int bool;$/;"	t	file:
bool	fs/fsformat.c	21;"	d	file:
bool	fs/fsformat.c	7;"	d	file:
diradd	fs/fsformat.c	/^diradd(struct Dir *d, uint32_t type, const char *name)$/;"	f
diskmap	fs/fsformat.c	/^char *diskmap, *diskpos;$/;"	v
diskpos	fs/fsformat.c	/^char *diskmap, *diskpos;$/;"	v
ents	fs/fsformat.c	/^	struct File *ents;$/;"	m	struct:Dir	typeref:struct:Dir::File	file:
f	fs/fsformat.c	/^	struct File *f;$/;"	m	struct:Dir	typeref:struct:Dir::File	file:
finishdir	fs/fsformat.c	/^finishdir(struct Dir *d)$/;"	f
finishdisk	fs/fsformat.c	/^finishdisk(void)$/;"	f
finishfile	fs/fsformat.c	/^finishfile(struct File *f, uint32_t start, uint32_t len)$/;"	f
main	fs/fsformat.c	/^main(int argc, char **argv)$/;"	f
n	fs/fsformat.c	/^	int n;$/;"	m	struct:Dir	file:
nblocks	fs/fsformat.c	/^uint32_t nblocks;$/;"	v
off_t	fs/fsformat.c	/^typedef uint32_t off_t;$/;"	t	file:
off_t	fs/fsformat.c	20;"	d	file:
off_t	fs/fsformat.c	6;"	d	file:
opendisk	fs/fsformat.c	/^opendisk(const char *name)$/;"	f
panic	fs/fsformat.c	/^panic(const char *fmt, ...)$/;"	f
physaddr_t	fs/fsformat.c	/^typedef uint32_t physaddr_t;$/;"	t	file:
readn	fs/fsformat.c	/^readn(int f, void *out, size_t n)$/;"	f
startdir	fs/fsformat.c	/^startdir(struct File *f, struct Dir *dout)$/;"	f
super	fs/fsformat.c	/^struct Super *super;$/;"	v	typeref:struct:Super
usage	fs/fsformat.c	/^usage(void)$/;"	f
writefile	fs/fsformat.c	/^writefile(struct Dir *dir, const char *name)$/;"	f
IDE_BSY	fs/ide.c	10;"	d	file:
IDE_DF	fs/ide.c	12;"	d	file:
IDE_DRDY	fs/ide.c	11;"	d	file:
IDE_ERR	fs/ide.c	13;"	d	file:
diskno	fs/ide.c	/^static int diskno = 1;$/;"	v	file:
ide_probe_disk1	fs/ide.c	/^ide_probe_disk1(void)$/;"	f
ide_read	fs/ide.c	/^ide_read(uint32_t secno, void *dst, size_t nsecs)$/;"	f
ide_set_disk	fs/ide.c	/^ide_set_disk(int d)$/;"	f
ide_wait_ready	fs/ide.c	/^ide_wait_ready(bool check_error)$/;"	f	file:
ide_write	fs/ide.c	/^ide_write(uint32_t secno, const void *src, size_t nsecs)$/;"	f
FILEVA	fs/serv.c	41;"	d	file:
MAXOPEN	fs/serv.c	40;"	d	file:
NHANDLERS	fs/serv.c	312;"	d	file:
OpenFile	fs/serv.c	/^struct OpenFile {$/;"	s	file:
debug	fs/serv.c	12;"	d	file:
fshandler	fs/serv.c	/^typedef int (*fshandler)(envid_t envid, union Fsipc *req);$/;"	t	file:
fsreq	fs/serv.c	/^union Fsipc *fsreq = (union Fsipc *)0x0ffff000;$/;"	v	typeref:union:Fsipc
handlers	fs/serv.c	/^fshandler handlers[] = {$/;"	v
o_fd	fs/serv.c	/^	struct Fd *o_fd;	\/\/ Fd page$/;"	m	struct:OpenFile	typeref:struct:OpenFile::Fd	file:
o_file	fs/serv.c	/^	struct File *o_file;	\/\/ mapped descriptor for open file$/;"	m	struct:OpenFile	typeref:struct:OpenFile::File	file:
o_fileid	fs/serv.c	/^	uint32_t o_fileid;	\/\/ file id$/;"	m	struct:OpenFile	file:
o_mode	fs/serv.c	/^	int o_mode;		\/\/ open mode$/;"	m	struct:OpenFile	file:
openfile_alloc	fs/serv.c	/^openfile_alloc(struct OpenFile **o)$/;"	f
openfile_lookup	fs/serv.c	/^openfile_lookup(envid_t envid, uint32_t fileid, struct OpenFile **po)$/;"	f
opentab	fs/serv.c	/^struct OpenFile opentab[MAXOPEN] = {$/;"	v	typeref:struct:OpenFile
serve	fs/serv.c	/^serve(void)$/;"	f
serve_flush	fs/serv.c	/^serve_flush(envid_t envid, struct Fsreq_flush *req)$/;"	f
serve_init	fs/serv.c	/^serve_init(void)$/;"	f
serve_open	fs/serv.c	/^serve_open(envid_t envid, struct Fsreq_open *req,$/;"	f
serve_read	fs/serv.c	/^serve_read(envid_t envid, union Fsipc *ipc)$/;"	f
serve_set_size	fs/serv.c	/^serve_set_size(envid_t envid, struct Fsreq_set_size *req)$/;"	f
serve_stat	fs/serv.c	/^serve_stat(envid_t envid, union Fsipc *ipc)$/;"	f
serve_sync	fs/serv.c	/^serve_sync(envid_t envid, union Fsipc *req)$/;"	f
serve_write	fs/serv.c	/^serve_write(envid_t envid, struct Fsreq_write *req)$/;"	f
umain	fs/serv.c	/^umain(int argc, char **argv)$/;"	f
fs_test	fs/test.c	/^fs_test(void)$/;"	f
msg	fs/test.c	/^static char *msg = "This is the NEW message of the day!\\n\\n";$/;"	v	file:
BACKTRACE_RE	grade-lab1	/^BACKTRACE_RE = r"^ *ebp +f01[0-9a-z]{5} +eip +f0100[0-9a-z]{3} +args +([0-9a-z]+)"$/;"	v
r	grade-lab1	/^r = Runner(save("jos.out"),$/;"	v
test_backtrace_arguments	grade-lab1	/^def test_backtrace_arguments():$/;"	f
test_backtrace_count	grade-lab1	/^def test_backtrace_count():$/;"	f
test_backtrace_lines	grade-lab1	/^def test_backtrace_lines():$/;"	f
test_backtrace_symbols	grade-lab1	/^def test_backtrace_symbols():$/;"	f
test_jos	grade-lab1	/^def test_jos():$/;"	f
test_printf	grade-lab1	/^def test_printf():$/;"	f
r	grade-lab2	/^r = Runner(save("jos.out"),$/;"	v
test_check_kern_pgdir	grade-lab2	/^def test_check_kern_pgdir():$/;"	f
test_check_page	grade-lab2	/^def test_check_page():$/;"	f
test_check_page_alloc	grade-lab2	/^def test_check_page_alloc():$/;"	f
test_check_page_installed_pgdir	grade-lab2	/^def test_check_page_installed_pgdir():$/;"	f
test_jos	grade-lab2	/^def test_jos():$/;"	f
r	grade-lab3	/^r = Runner(save("jos.out"),$/;"	v
test_badsegment	grade-lab3	/^def test_badsegment():$/;"	f
test_breakpoint	grade-lab3	/^def test_breakpoint():$/;"	f
test_buggyhello	grade-lab3	/^def test_buggyhello():$/;"	f
test_buggyhello2	grade-lab3	/^def test_buggyhello2():$/;"	f
test_divzero	grade-lab3	/^def test_divzero():$/;"	f
test_evilhello	grade-lab3	/^def test_evilhello():$/;"	f
test_faultread	grade-lab3	/^def test_faultread():$/;"	f
test_faultreadkernel	grade-lab3	/^def test_faultreadkernel():$/;"	f
test_faultwrite	grade-lab3	/^def test_faultwrite():$/;"	f
test_faultwritekernel	grade-lab3	/^def test_faultwritekernel():$/;"	f
test_hello	grade-lab3	/^def test_hello():$/;"	f
test_softint	grade-lab3	/^def test_softint():$/;"	f
test_testbss	grade-lab3	/^def test_testbss():$/;"	f
E	grade-lab4	/^def E(s, trim=False):$/;"	f
r	grade-lab4	/^r = Runner(save("jos.out"),$/;"	v
test_dumbfork	grade-lab4	/^def test_dumbfork():$/;"	f
test_faultalloc	grade-lab4	/^def test_faultalloc():$/;"	f
test_faultallocbad	grade-lab4	/^def test_faultallocbad():$/;"	f
test_faultbadhandler	grade-lab4	/^def test_faultbadhandler():$/;"	f
test_faultdie	grade-lab4	/^def test_faultdie():$/;"	f
test_faultevilhandler	grade-lab4	/^def test_faultevilhandler():$/;"	f
test_faultnostack	grade-lab4	/^def test_faultnostack():$/;"	f
test_faultread	grade-lab4	/^def test_faultread():$/;"	f
test_faultregs	grade-lab4	/^def test_faultregs():$/;"	f
test_faultwrite	grade-lab4	/^def test_faultwrite():$/;"	f
test_forktree	grade-lab4	/^def test_forktree():$/;"	f
test_pingpong	grade-lab4	/^def test_pingpong():$/;"	f
test_primes	grade-lab4	/^def test_primes():$/;"	f
test_sendpage	grade-lab4	/^def test_sendpage():$/;"	f
test_spin	grade-lab4	/^def test_spin():$/;"	f
test_stresssched	grade-lab4	/^def test_stresssched():$/;"	f
do_test	grade-lab5	/^    def do_test():$/;"	f	function:matchtest
gen_primes	grade-lab5	/^def gen_primes(n):$/;"	f
matchtest	grade-lab5	/^def matchtest(parent, name, *args, **kw):$/;"	f
r	grade-lab5	/^r = Runner(save("jos.out"),$/;"	v
test_fd_share	grade-lab5	/^def test_fd_share():$/;"	f
test_fs	grade-lab5	/^def test_fs():$/;"	f
test_icode	grade-lab5	/^def test_icode():$/;"	f
test_primespipe	grade-lab5	/^def test_primespipe():$/;"	f
test_pte_share	grade-lab5	/^def test_pte_share():$/;"	f
test_spawn	grade-lab5	/^def test_spawn():$/;"	f
test_testfile	grade-lab5	/^def test_testfile():$/;"	f
test_testshell	grade-lab5	/^def test_testshell():$/;"	f
ascii_to_bytes	grade-lab6	/^def ascii_to_bytes(s):$/;"	f
echo_port	grade-lab6	/^echo_port = QEMU.get_gdb_port() + 1$/;"	v
hexdump	grade-lab6	/^def hexdump(data):$/;"	f
http_port	grade-lab6	/^http_port = QEMU.get_gdb_port() + 2$/;"	v
match_packet_seq	grade-lab6	/^def match_packet_seq(got, expect):$/;"	f
mk_test_httpd	grade-lab6	/^def mk_test_httpd(url, expect_code, expect_data):$/;"	f
r	grade-lab6	/^r = Runner(save("jos.out"),$/;"	v
read_pcap	grade-lab6	/^def read_pcap():$/;"	f
ready	grade-lab6	/^        def ready(line):$/;"	f	function:mk_test_httpd.test_httpd_test
ready	grade-lab6	/^    def ready(line):$/;"	f	function:test_echosrv
save_pcap	grade-lab6	/^    def save_pcap(fail):$/;"	f	function:save_pcap_on_fail
save_pcap_on_fail	grade-lab6	/^def save_pcap_on_fail():$/;"	f
send_packets	grade-lab6	/^    def send_packets():$/;"	f	function:test_testinput_helper
test_echosrv	grade-lab6	/^def test_echosrv():$/;"	f
test_httpd	grade-lab6	/^def test_httpd():$/;"	f
test_httpd_test	grade-lab6	/^    def test_httpd_test():$/;"	f	function:mk_test_httpd
test_pci_attach	grade-lab6	/^def test_pci_attach():$/;"	f
test_testinput_100	grade-lab6	/^def test_testinput_100():$/;"	f
test_testinput_5	grade-lab6	/^def test_testinput_5():$/;"	f
test_testinput_helper	grade-lab6	/^def test_testinput_helper(count):$/;"	f
test_testoutput_100	grade-lab6	/^def test_testoutput_100():$/;"	f
test_testoutput_5	grade-lab6	/^def test_testoutput_5():$/;"	f
test_testoutput_helper	grade-lab6	/^def test_testoutput_helper(count):$/;"	f
test_testtime	grade-lab6	/^def test_testtime():$/;"	f
COLORS	gradelib.py	/^COLORS = {"default": "\\033[0m", "red": "\\033[31m", "green": "\\033[32m"}$/;"	v
CURRENT_TEST	gradelib.py	/^CURRENT_TEST = None$/;"	v
GDBClient	gradelib.py	/^class GDBClient(object):$/;"	c
MAKE_TIMESTAMP	gradelib.py	/^MAKE_TIMESTAMP = 0$/;"	v
QEMU	gradelib.py	/^class QEMU(object):$/;"	c
Runner	gradelib.py	/^class Runner():$/;"	c
TESTS	gradelib.py	/^TESTS = []$/;"	v
TerminateTest	gradelib.py	/^class TerminateTest(Exception):$/;"	c
_GDBPORT	gradelib.py	/^    _GDBPORT = None$/;"	v	class:QEMU
__all__	gradelib.py	/^__all__ = []$/;"	v
__init__	gradelib.py	/^    def __init__(self, *default_monitors):$/;"	m	class:Runner
__init__	gradelib.py	/^    def __init__(self, *make_args):$/;"	m	class:QEMU
__init__	gradelib.py	/^    def __init__(self, port, timeout=15):$/;"	m	class:GDBClient
__monitor_start	gradelib.py	/^    def __monitor_start(self, output):$/;"	m	class:Runner	file:
__react	gradelib.py	/^    def __react(self, reactors, timeout):$/;"	m	class:Runner	file:
__send	gradelib.py	/^    def __send(self, cmd):$/;"	m	class:GDBClient	file:
__send_break	gradelib.py	/^    def __send_break(self):$/;"	m	class:GDBClient	file:
assert_equal	gradelib.py	/^def assert_equal(got, expect, msg=""):$/;"	f
assert_lines_match	gradelib.py	/^def assert_lines_match(text, *regexps, **kw):$/;"	f
assert_lines_match_kw	gradelib.py	/^    def assert_lines_match_kw(no=[]):$/;"	f	function:assert_lines_match
breakpoint	gradelib.py	/^    def breakpoint(self, addr):$/;"	m	class:GDBClient
call_on_line	gradelib.py	/^def call_on_line(regexp, callback):$/;"	f
close	gradelib.py	/^    def close(self):$/;"	m	class:GDBClient
color	gradelib.py	/^def color(name, text):$/;"	f
cont	gradelib.py	/^    def cont(self):$/;"	m	class:GDBClient
end_part	gradelib.py	/^def end_part(name):$/;"	f
fileno	gradelib.py	/^    def fileno(self):$/;"	f
fileno	gradelib.py	/^    def fileno(self):$/;"	m	class:GDBClient
get_current_test	gradelib.py	/^def get_current_test():$/;"	f
get_gdb_port	gradelib.py	/^    def get_gdb_port():$/;"	f
handle_output	gradelib.py	/^        def handle_output(output):$/;"	f	function:call_on_line.setup_call_on_line
handle_read	gradelib.py	/^    def handle_read(self):$/;"	f
handle_read	gradelib.py	/^    def handle_read(self):$/;"	m	class:GDBClient
kill	gradelib.py	/^    def kill(self):$/;"	f
make	gradelib.py	/^def make(*target):$/;"	f
match	gradelib.py	/^    def match(self, *args, **kwargs):$/;"	m	class:Runner
maybe_unlink	gradelib.py	/^def maybe_unlink(*paths):$/;"	f
post_make	gradelib.py	/^def post_make():$/;"	f
pre_make	gradelib.py	/^def pre_make():$/;"	f
register_test	gradelib.py	/^    def register_test(fn, title=title):$/;"	f	function:test
reset_fs	gradelib.py	/^def reset_fs():$/;"	f
run_qemu	gradelib.py	/^    def run_qemu(self, *monitors, **kw):$/;"	m	class:Runner
run_qemu_kw	gradelib.py	/^        def run_qemu_kw(target_base="qemu", make_args=[], timeout=30):$/;"	f	function:Runner.run_qemu
run_test	gradelib.py	/^        def run_test():$/;"	f	function:test.register_test
run_tests	gradelib.py	/^def run_tests():$/;"	f
save	gradelib.py	/^def save(path):$/;"	f
save_on_finish	gradelib.py	/^    def save_on_finish(fail):$/;"	f	function:save
setup_breakpoint	gradelib.py	/^    def setup_breakpoint(runner):$/;"	f	function:stop_breakpoint
setup_call_on_line	gradelib.py	/^    def setup_call_on_line(runner):$/;"	f	function:call_on_line
setup_save	gradelib.py	/^    def setup_save(runner):$/;"	f	function:save
show_command	gradelib.py	/^def show_command(cmd):$/;"	f
show_part	gradelib.py	/^    def show_part():$/;"	f	function:end_part
stop	gradelib.py	/^    def stop(line):$/;"	f	function:stop_on_line
stop_breakpoint	gradelib.py	/^def stop_breakpoint(addr):$/;"	f
stop_on_line	gradelib.py	/^def stop_on_line(regexp):$/;"	f
test	gradelib.py	/^def test(points, title=None, parent=None):$/;"	f
user_test	gradelib.py	/^    def user_test(self, binary, *monitors, **kw):$/;"	m	class:Runner
wait	gradelib.py	/^    def wait(self):$/;"	f
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
Argstate	inc/args.h	/^struct Argstate {$/;"	s
JOS_INC_ARGS_H	inc/args.h	2;"	d
argc	inc/args.h	/^	int *argc;$/;"	m	struct:Argstate
argv	inc/args.h	/^	const char **argv;$/;"	m	struct:Argstate
argvalue	inc/args.h	/^	const char *argvalue;$/;"	m	struct:Argstate
curarg	inc/args.h	/^	const char *curarg;$/;"	m	struct:Argstate
JOS_INC_ASSERT_H	inc/assert.h	4;"	d
assert	inc/assert.h	14;"	d
panic	inc/assert.h	12;"	d
static_assert	inc/assert.h	18;"	d
warn	inc/assert.h	11;"	d
ELF_MAGIC	inc/elf.h	4;"	d
ELF_PROG_FLAG_EXEC	inc/elf.h	52;"	d
ELF_PROG_FLAG_READ	inc/elf.h	54;"	d
ELF_PROG_FLAG_WRITE	inc/elf.h	53;"	d
ELF_PROG_LOAD	inc/elf.h	49;"	d
ELF_SHN_UNDEF	inc/elf.h	63;"	d
ELF_SHT_NULL	inc/elf.h	57;"	d
ELF_SHT_PROGBITS	inc/elf.h	58;"	d
ELF_SHT_STRTAB	inc/elf.h	60;"	d
ELF_SHT_SYMTAB	inc/elf.h	59;"	d
Elf	inc/elf.h	/^struct Elf {$/;"	s
JOS_INC_ELF_H	inc/elf.h	2;"	d
Proghdr	inc/elf.h	/^struct Proghdr {$/;"	s
Secthdr	inc/elf.h	/^struct Secthdr {$/;"	s
e_ehsize	inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:Elf
e_elf	inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	struct:Elf
e_entry	inc/elf.h	/^	uint32_t e_entry;$/;"	m	struct:Elf
e_flags	inc/elf.h	/^	uint32_t e_flags;$/;"	m	struct:Elf
e_machine	inc/elf.h	/^	uint16_t e_machine;$/;"	m	struct:Elf
e_magic	inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	struct:Elf
e_phentsize	inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:Elf
e_phnum	inc/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:Elf
e_phoff	inc/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:Elf
e_shentsize	inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:Elf
e_shnum	inc/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:Elf
e_shoff	inc/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:Elf
e_shstrndx	inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	struct:Elf
e_type	inc/elf.h	/^	uint16_t e_type;$/;"	m	struct:Elf
e_version	inc/elf.h	/^	uint32_t e_version;$/;"	m	struct:Elf
p_align	inc/elf.h	/^	uint32_t p_align;$/;"	m	struct:Proghdr
p_filesz	inc/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:Proghdr
p_flags	inc/elf.h	/^	uint32_t p_flags;$/;"	m	struct:Proghdr
p_memsz	inc/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:Proghdr
p_offset	inc/elf.h	/^	uint32_t p_offset;$/;"	m	struct:Proghdr
p_pa	inc/elf.h	/^	uint32_t p_pa;$/;"	m	struct:Proghdr
p_type	inc/elf.h	/^	uint32_t p_type;$/;"	m	struct:Proghdr
p_va	inc/elf.h	/^	uint32_t p_va;$/;"	m	struct:Proghdr
sh_addr	inc/elf.h	/^	uint32_t sh_addr;$/;"	m	struct:Secthdr
sh_addralign	inc/elf.h	/^	uint32_t sh_addralign;$/;"	m	struct:Secthdr
sh_entsize	inc/elf.h	/^	uint32_t sh_entsize;$/;"	m	struct:Secthdr
sh_flags	inc/elf.h	/^	uint32_t sh_flags;$/;"	m	struct:Secthdr
sh_info	inc/elf.h	/^	uint32_t sh_info;$/;"	m	struct:Secthdr
sh_link	inc/elf.h	/^	uint32_t sh_link;$/;"	m	struct:Secthdr
sh_name	inc/elf.h	/^	uint32_t sh_name;$/;"	m	struct:Secthdr
sh_offset	inc/elf.h	/^	uint32_t sh_offset;$/;"	m	struct:Secthdr
sh_size	inc/elf.h	/^	uint32_t sh_size;$/;"	m	struct:Secthdr
sh_type	inc/elf.h	/^	uint32_t sh_type;$/;"	m	struct:Secthdr
ENVX	inc/env.h	30;"	d
ENV_DYING	inc/env.h	/^	ENV_DYING,$/;"	e	enum:__anon43
ENV_FREE	inc/env.h	/^	ENV_FREE = 0,$/;"	e	enum:__anon43
ENV_NOT_RUNNABLE	inc/env.h	/^	ENV_NOT_RUNNABLE$/;"	e	enum:__anon43
ENV_RUNNABLE	inc/env.h	/^	ENV_RUNNABLE,$/;"	e	enum:__anon43
ENV_RUNNING	inc/env.h	/^	ENV_RUNNING,$/;"	e	enum:__anon43
ENV_TYPE_FS	inc/env.h	/^	ENV_TYPE_FS,		\/\/ File system server$/;"	e	enum:EnvType
ENV_TYPE_NS	inc/env.h	/^	ENV_TYPE_NS,		\/\/ Network server$/;"	e	enum:EnvType
ENV_TYPE_USER	inc/env.h	/^	ENV_TYPE_USER = 0,$/;"	e	enum:EnvType
Env	inc/env.h	/^struct Env {$/;"	s
EnvType	inc/env.h	/^enum EnvType {$/;"	g
JOS_INC_ENV_H	inc/env.h	4;"	d
LOG2NENV	inc/env.h	28;"	d
NENV	inc/env.h	29;"	d
env_cpunum	inc/env.h	/^	int env_cpunum;			\/\/ The CPU that the env is running on$/;"	m	struct:Env
env_id	inc/env.h	/^	envid_t env_id;			\/\/ Unique environment identifier$/;"	m	struct:Env
env_ipc_dstva	inc/env.h	/^	void *env_ipc_dstva;		\/\/ VA at which to map received page$/;"	m	struct:Env
env_ipc_from	inc/env.h	/^	envid_t env_ipc_from;		\/\/ envid of the sender$/;"	m	struct:Env
env_ipc_perm	inc/env.h	/^	int env_ipc_perm;		\/\/ Perm of page mapping received$/;"	m	struct:Env
env_ipc_recving	inc/env.h	/^	bool env_ipc_recving;		\/\/ Env is blocked receiving$/;"	m	struct:Env
env_ipc_value	inc/env.h	/^	uint32_t env_ipc_value;		\/\/ Data value sent to us$/;"	m	struct:Env
env_link	inc/env.h	/^	struct Env *env_link;		\/\/ Next free Env$/;"	m	struct:Env	typeref:struct:Env::Env
env_parent_id	inc/env.h	/^	envid_t env_parent_id;		\/\/ env_id of this env's parent$/;"	m	struct:Env
env_pgdir	inc/env.h	/^	pde_t *env_pgdir;		\/\/ Kernel virtual address of page dir$/;"	m	struct:Env
env_pgfault_upcall	inc/env.h	/^	void *env_pgfault_upcall;	\/\/ Page fault upcall entry point$/;"	m	struct:Env
env_runs	inc/env.h	/^	uint32_t env_runs;		\/\/ Number of times environment has run$/;"	m	struct:Env
env_status	inc/env.h	/^	unsigned env_status;		\/\/ Status of the environment$/;"	m	struct:Env
env_tf	inc/env.h	/^	struct Trapframe env_tf;	\/\/ Saved registers$/;"	m	struct:Env	typeref:struct:Env::Trapframe
env_type	inc/env.h	/^	enum EnvType env_type;		\/\/ Indicates special system environments$/;"	m	struct:Env	typeref:enum:Env::EnvType
envid_t	inc/env.h	/^typedef int32_t envid_t;$/;"	t
E_BAD_ENV	inc/error.h	/^	E_BAD_ENV	,	\/\/ Environment doesn't exist or otherwise$/;"	e	enum:__anon44
E_BAD_PATH	inc/error.h	/^	E_BAD_PATH	,	\/\/ Bad path$/;"	e	enum:__anon44
E_EOF	inc/error.h	/^	E_EOF		,	\/\/ Unexpected end of file$/;"	e	enum:__anon44
E_FAULT	inc/error.h	/^	E_FAULT		,	\/\/ Memory fault$/;"	e	enum:__anon44
E_FILE_EXISTS	inc/error.h	/^	E_FILE_EXISTS	,	\/\/ File already exists$/;"	e	enum:__anon44
E_INVAL	inc/error.h	/^	E_INVAL		,	\/\/ Invalid parameter$/;"	e	enum:__anon44
E_IPC_NOT_RECV	inc/error.h	/^	E_IPC_NOT_RECV	,	\/\/ Attempt to send to env that is not recving$/;"	e	enum:__anon44
E_MAX_OPEN	inc/error.h	/^	E_MAX_OPEN	,	\/\/ Too many files are open$/;"	e	enum:__anon44
E_NOT_EXEC	inc/error.h	/^	E_NOT_EXEC	,	\/\/ File not a valid executable$/;"	e	enum:__anon44
E_NOT_FOUND	inc/error.h	/^	E_NOT_FOUND	, 	\/\/ File or block not found$/;"	e	enum:__anon44
E_NOT_SUPP	inc/error.h	/^	E_NOT_SUPP	,	\/\/ Operation not supported$/;"	e	enum:__anon44
E_NO_DISK	inc/error.h	/^	E_NO_DISK	,	\/\/ No free space left on disk$/;"	e	enum:__anon44
E_NO_FREE_ENV	inc/error.h	/^	E_NO_FREE_ENV	,	\/\/ Attempt to create a new environment beyond$/;"	e	enum:__anon44
E_NO_MEM	inc/error.h	/^	E_NO_MEM	,	\/\/ Request failed due to memory shortage$/;"	e	enum:__anon44
E_TX_BAD_LEN	inc/error.h	/^	E_TX_BAD_LEN,		\/\/transmit packet's length is out of range$/;"	e	enum:__anon44
E_TX_QUEUE_FULL	inc/error.h	/^	E_TX_QUEUE_FULL,	\/\/transmit queue is full$/;"	e	enum:__anon44
E_UNSPECIFIED	inc/error.h	/^	E_UNSPECIFIED	= 1,	\/\/ Unspecified or unknown problem$/;"	e	enum:__anon44
JOS_INC_ERROR_H	inc/error.h	4;"	d
MAXERROR	inc/error.h	/^	MAXERROR$/;"	e	enum:__anon44
Dev	inc/fd.h	/^struct Dev {$/;"	s
Fd	inc/fd.h	/^struct Fd {$/;"	s
FdFile	inc/fd.h	/^struct FdFile {$/;"	s
FdSock	inc/fd.h	/^struct FdSock {$/;"	s
JOS_INC_FD_H	inc/fd.h	6;"	d
Stat	inc/fd.h	/^struct Stat {$/;"	s
dev_close	inc/fd.h	/^	int (*dev_close)(struct Fd *fd);$/;"	m	struct:Dev
dev_id	inc/fd.h	/^	int dev_id;$/;"	m	struct:Dev
dev_name	inc/fd.h	/^	const char *dev_name;$/;"	m	struct:Dev
dev_read	inc/fd.h	/^	ssize_t (*dev_read)(struct Fd *fd, void *buf, size_t len);$/;"	m	struct:Dev
dev_stat	inc/fd.h	/^	int (*dev_stat)(struct Fd *fd, struct Stat *stat);$/;"	m	struct:Dev
dev_trunc	inc/fd.h	/^	int (*dev_trunc)(struct Fd *fd, off_t length);$/;"	m	struct:Dev
dev_write	inc/fd.h	/^	ssize_t (*dev_write)(struct Fd *fd, const void *buf, size_t len);$/;"	m	struct:Dev
fd_dev_id	inc/fd.h	/^	int fd_dev_id;$/;"	m	struct:Fd
fd_file	inc/fd.h	/^		struct FdFile fd_file;$/;"	m	union:Fd::__anon47	typeref:struct:Fd::__anon47::FdFile
fd_offset	inc/fd.h	/^	off_t fd_offset;$/;"	m	struct:Fd
fd_omode	inc/fd.h	/^	int fd_omode;$/;"	m	struct:Fd
fd_sock	inc/fd.h	/^		struct FdSock fd_sock;$/;"	m	union:Fd::__anon47	typeref:struct:Fd::__anon47::FdSock
id	inc/fd.h	/^	int id;$/;"	m	struct:FdFile
sockid	inc/fd.h	/^	int sockid;$/;"	m	struct:FdSock
st_dev	inc/fd.h	/^	struct Dev *st_dev;$/;"	m	struct:Stat	typeref:struct:Stat::Dev
st_isdir	inc/fd.h	/^	int st_isdir;$/;"	m	struct:Stat
st_name	inc/fd.h	/^	char st_name[MAXNAMELEN];$/;"	m	struct:Stat
st_size	inc/fd.h	/^	off_t st_size;$/;"	m	struct:Stat
BLKBITSIZE	inc/fs.h	13;"	d
BLKFILES	inc/fs.h	45;"	d
BLKSIZE	inc/fs.h	12;"	d
FSREQ_FLUSH	inc/fs.h	/^	FSREQ_FLUSH,$/;"	e	enum:__anon48
FSREQ_OPEN	inc/fs.h	/^	FSREQ_OPEN = 1,$/;"	e	enum:__anon48
FSREQ_READ	inc/fs.h	/^	FSREQ_READ,$/;"	e	enum:__anon48
FSREQ_REMOVE	inc/fs.h	/^	FSREQ_REMOVE,$/;"	e	enum:__anon48
FSREQ_SET_SIZE	inc/fs.h	/^	FSREQ_SET_SIZE,$/;"	e	enum:__anon48
FSREQ_STAT	inc/fs.h	/^	FSREQ_STAT,$/;"	e	enum:__anon48
FSREQ_SYNC	inc/fs.h	/^	FSREQ_SYNC$/;"	e	enum:__anon48
FSREQ_WRITE	inc/fs.h	/^	FSREQ_WRITE,$/;"	e	enum:__anon48
FS_MAGIC	inc/fs.h	54;"	d
FTYPE_DIR	inc/fs.h	49;"	d
FTYPE_REG	inc/fs.h	48;"	d
File	inc/fs.h	/^struct File {$/;"	s
Fsipc	inc/fs.h	/^union Fsipc {$/;"	u
Fsreq_flush	inc/fs.h	/^	struct Fsreq_flush {$/;"	s	union:Fsipc
Fsreq_open	inc/fs.h	/^	struct Fsreq_open {$/;"	s	union:Fsipc
Fsreq_read	inc/fs.h	/^	struct Fsreq_read {$/;"	s	union:Fsipc
Fsreq_remove	inc/fs.h	/^	struct Fsreq_remove {$/;"	s	union:Fsipc
Fsreq_set_size	inc/fs.h	/^	struct Fsreq_set_size {$/;"	s	union:Fsipc
Fsreq_stat	inc/fs.h	/^	struct Fsreq_stat {$/;"	s	union:Fsipc
Fsreq_write	inc/fs.h	/^	struct Fsreq_write {$/;"	s	union:Fsipc
Fsret_read	inc/fs.h	/^	struct Fsret_read {$/;"	s	union:Fsipc
Fsret_stat	inc/fs.h	/^	struct Fsret_stat {$/;"	s	union:Fsipc
JOS_INC_FS_H	inc/fs.h	4;"	d
MAXFILESIZE	inc/fs.h	27;"	d
MAXNAMELEN	inc/fs.h	17;"	d
MAXPATHLEN	inc/fs.h	20;"	d
NDIRECT	inc/fs.h	23;"	d
NINDIRECT	inc/fs.h	25;"	d
Super	inc/fs.h	/^struct Super {$/;"	s
_pad	inc/fs.h	/^	char _pad[PGSIZE];$/;"	m	union:Fsipc
f_direct	inc/fs.h	/^	uint32_t f_direct[NDIRECT];	\/\/ direct blocks$/;"	m	struct:File
f_indirect	inc/fs.h	/^	uint32_t f_indirect;		\/\/ indirect block$/;"	m	struct:File
f_name	inc/fs.h	/^	char f_name[MAXNAMELEN];	\/\/ filename$/;"	m	struct:File
f_pad	inc/fs.h	/^	uint8_t f_pad[256 - MAXNAMELEN - 8 - 4*NDIRECT - 4];$/;"	m	struct:File
f_size	inc/fs.h	/^	off_t f_size;			\/\/ file size in bytes$/;"	m	struct:File
f_type	inc/fs.h	/^	uint32_t f_type;		\/\/ file type$/;"	m	struct:File
flush	inc/fs.h	/^	} flush;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_flush
open	inc/fs.h	/^	} open;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_open
read	inc/fs.h	/^	} read;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_read
readRet	inc/fs.h	/^	} readRet;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsret_read
remove	inc/fs.h	/^	} remove;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_remove
req_buf	inc/fs.h	/^		char req_buf[PGSIZE - (sizeof(int) + sizeof(size_t))];$/;"	m	struct:Fsipc::Fsreq_write
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_flush
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_read
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_set_size
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_stat
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_write
req_n	inc/fs.h	/^		size_t req_n;$/;"	m	struct:Fsipc::Fsreq_read
req_n	inc/fs.h	/^		size_t req_n;$/;"	m	struct:Fsipc::Fsreq_write
req_omode	inc/fs.h	/^		int req_omode;$/;"	m	struct:Fsipc::Fsreq_open
req_path	inc/fs.h	/^		char req_path[MAXPATHLEN];$/;"	m	struct:Fsipc::Fsreq_open
req_path	inc/fs.h	/^		char req_path[MAXPATHLEN];$/;"	m	struct:Fsipc::Fsreq_remove
req_size	inc/fs.h	/^		off_t req_size;$/;"	m	struct:Fsipc::Fsreq_set_size
ret_buf	inc/fs.h	/^		char ret_buf[PGSIZE];$/;"	m	struct:Fsipc::Fsret_read
ret_isdir	inc/fs.h	/^		int ret_isdir;$/;"	m	struct:Fsipc::Fsret_stat
ret_name	inc/fs.h	/^		char ret_name[MAXNAMELEN];$/;"	m	struct:Fsipc::Fsret_stat
ret_size	inc/fs.h	/^		off_t ret_size;$/;"	m	struct:Fsipc::Fsret_stat
s_magic	inc/fs.h	/^	uint32_t s_magic;		\/\/ Magic number: FS_MAGIC$/;"	m	struct:Super
s_nblocks	inc/fs.h	/^	uint32_t s_nblocks;		\/\/ Total number of blocks on disk$/;"	m	struct:Super
s_root	inc/fs.h	/^	struct File s_root;		\/\/ Root directory node$/;"	m	struct:Super	typeref:struct:Super::File
set_size	inc/fs.h	/^	} set_size;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_set_size
stat	inc/fs.h	/^	} stat;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_stat
statRet	inc/fs.h	/^	} statRet;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsret_stat
write	inc/fs.h	/^	} write;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_write
CMDBYTE	inc/kbdreg.h	60;"	d
JOS_KBDREG_H	inc/kbdreg.h	2;"	d
KBCMDP	inc/kbdreg.h	29;"	d
KBC_AUXDISABLE	inc/kbdreg.h	32;"	d
KBC_AUXECHO	inc/kbdreg.h	36;"	d
KBC_AUXENABLE	inc/kbdreg.h	33;"	d
KBC_AUXTEST	inc/kbdreg.h	34;"	d
KBC_AUXWRITE	inc/kbdreg.h	37;"	d
KBC_DISABLE	inc/kbdreg.h	66;"	d
KBC_ECHO	inc/kbdreg.h	71;"	d
KBC_ENABLE	inc/kbdreg.h	67;"	d
KBC_KBDDISABLE	inc/kbdreg.h	40;"	d
KBC_KBDECHO	inc/kbdreg.h	35;"	d
KBC_KBDENABLE	inc/kbdreg.h	41;"	d
KBC_KBDTEST	inc/kbdreg.h	39;"	d
KBC_MODEIND	inc/kbdreg.h	70;"	d
KBC_PULSE0	inc/kbdreg.h	42;"	d
KBC_PULSE1	inc/kbdreg.h	43;"	d
KBC_PULSE2	inc/kbdreg.h	44;"	d
KBC_PULSE3	inc/kbdreg.h	45;"	d
KBC_RAMREAD	inc/kbdreg.h	30;"	d
KBC_RAMWRITE	inc/kbdreg.h	31;"	d
KBC_RESEND	inc/kbdreg.h	64;"	d
KBC_RESET	inc/kbdreg.h	63;"	d
KBC_SELFTEST	inc/kbdreg.h	38;"	d
KBC_SETDEFAULT	inc/kbdreg.h	65;"	d
KBC_SETTABLE	inc/kbdreg.h	69;"	d
KBC_TYPEMATIC	inc/kbdreg.h	68;"	d
KBDATAP	inc/kbdreg.h	47;"	d
KBOUTP	inc/kbdreg.h	48;"	d
KBR_ACK	inc/kbdreg.h	76;"	d
KBR_BREAK	inc/kbdreg.h	79;"	d
KBR_ECHO	inc/kbdreg.h	81;"	d
KBR_EXTENDED	inc/kbdreg.h	74;"	d
KBR_FAILURE	inc/kbdreg.h	78;"	d
KBR_OVERRUN	inc/kbdreg.h	77;"	d
KBR_RESEND	inc/kbdreg.h	75;"	d
KBR_RSTDONE	inc/kbdreg.h	80;"	d
KBSTATP	inc/kbdreg.h	19;"	d
KBS_DIB	inc/kbdreg.h	20;"	d
KBS_IBF	inc/kbdreg.h	21;"	d
KBS_NOSEC	inc/kbdreg.h	24;"	d
KBS_OCMD	inc/kbdreg.h	23;"	d
KBS_PERR	inc/kbdreg.h	27;"	d
KBS_RERR	inc/kbdreg.h	26;"	d
KBS_TERR	inc/kbdreg.h	25;"	d
KBS_WARM	inc/kbdreg.h	22;"	d
KC8_CPU	inc/kbdreg.h	57;"	d
KC8_IGNSEC	inc/kbdreg.h	56;"	d
KC8_KDISABLE	inc/kbdreg.h	55;"	d
KC8_KENABLE	inc/kbdreg.h	59;"	d
KC8_MDISABLE	inc/kbdreg.h	54;"	d
KC8_MENABLE	inc/kbdreg.h	58;"	d
KC8_TRANS	inc/kbdreg.h	53;"	d
KEY_DEL	inc/kbdreg.h	14;"	d
KEY_DN	inc/kbdreg.h	8;"	d
KEY_END	inc/kbdreg.h	6;"	d
KEY_HOME	inc/kbdreg.h	5;"	d
KEY_INS	inc/kbdreg.h	13;"	d
KEY_LF	inc/kbdreg.h	9;"	d
KEY_PGDN	inc/kbdreg.h	12;"	d
KEY_PGUP	inc/kbdreg.h	11;"	d
KEY_RT	inc/kbdreg.h	10;"	d
KEY_UP	inc/kbdreg.h	7;"	d
K_LDCMDBYTE	inc/kbdreg.h	51;"	d
K_RDCMDBYTE	inc/kbdreg.h	50;"	d
JOS_INC_LIB_H	inc/lib.h	8;"	d
O_ACCMODE	inc/lib.h	148;"	d
O_CREAT	inc/lib.h	150;"	d
O_EXCL	inc/lib.h	152;"	d
O_MKDIR	inc/lib.h	153;"	d
O_RDONLY	inc/lib.h	145;"	d
O_RDWR	inc/lib.h	147;"	d
O_TRUNC	inc/lib.h	151;"	d
O_WRONLY	inc/lib.h	146;"	d
PTE_SHARE	inc/lib.h	84;"	d
USED	inc/lib.h	26;"	d
sys_exofork	inc/lib.h	/^sys_exofork(void)$/;"	f
JOS_INC_MALLOC_H	inc/malloc.h	2;"	d
EXTPHYSMEM	inc/memlayout.h	93;"	d
GD_KD	inc/memlayout.h	16;"	d
GD_KT	inc/memlayout.h	15;"	d
GD_TSS0	inc/memlayout.h	19;"	d
GD_UD	inc/memlayout.h	18;"	d
GD_UT	inc/memlayout.h	17;"	d
IOPHYSMEM	inc/memlayout.h	92;"	d
JOS_INC_MEMLAYOUT_H	inc/memlayout.h	2;"	d
KERNBASE	inc/memlayout.h	87;"	d
KSTACKTOP	inc/memlayout.h	96;"	d
KSTKGAP	inc/memlayout.h	98;"	d
KSTKSIZE	inc/memlayout.h	97;"	d
MMIOBASE	inc/memlayout.h	102;"	d
MMIOLIM	inc/memlayout.h	101;"	d
MPENTRY_PADDR	inc/memlayout.h	142;"	d
PFTEMP	inc/memlayout.h	137;"	d
PageInfo	inc/memlayout.h	/^struct PageInfo {$/;"	s
UENVS	inc/memlayout.h	116;"	d
ULIM	inc/memlayout.h	104;"	d
UPAGES	inc/memlayout.h	114;"	d
USTABDATA	inc/memlayout.h	139;"	d
USTACKTOP	inc/memlayout.h	128;"	d
UTEMP	inc/memlayout.h	134;"	d
UTEXT	inc/memlayout.h	131;"	d
UTOP	inc/memlayout.h	123;"	d
UVPT	inc/memlayout.h	112;"	d
UXSTACKTOP	inc/memlayout.h	125;"	d
pde_t	inc/memlayout.h	/^typedef uint32_t pde_t;$/;"	t
pp_link	inc/memlayout.h	/^	struct PageInfo *pp_link;$/;"	m	struct:PageInfo	typeref:struct:PageInfo::PageInfo
pp_ref	inc/memlayout.h	/^	uint16_t pp_ref;$/;"	m	struct:PageInfo
pte_t	inc/memlayout.h	/^typedef uint32_t pte_t;$/;"	t
CR0_AM	inc/mmu.h	86;"	d
CR0_CD	inc/mmu.h	88;"	d
CR0_EM	inc/mmu.h	81;"	d
CR0_ET	inc/mmu.h	83;"	d
CR0_MP	inc/mmu.h	80;"	d
CR0_NE	inc/mmu.h	84;"	d
CR0_NW	inc/mmu.h	87;"	d
CR0_PE	inc/mmu.h	79;"	d
CR0_PG	inc/mmu.h	89;"	d
CR0_TS	inc/mmu.h	82;"	d
CR0_WP	inc/mmu.h	85;"	d
CR4_DE	inc/mmu.h	94;"	d
CR4_MCE	inc/mmu.h	92;"	d
CR4_PCE	inc/mmu.h	91;"	d
CR4_PSE	inc/mmu.h	93;"	d
CR4_PVI	inc/mmu.h	96;"	d
CR4_TSD	inc/mmu.h	95;"	d
CR4_VME	inc/mmu.h	97;"	d
FEC_PR	inc/mmu.h	123;"	d
FEC_U	inc/mmu.h	125;"	d
FEC_WR	inc/mmu.h	124;"	d
FL_AC	inc/mmu.h	117;"	d
FL_AF	inc/mmu.h	102;"	d
FL_CF	inc/mmu.h	100;"	d
FL_DF	inc/mmu.h	107;"	d
FL_ID	inc/mmu.h	120;"	d
FL_IF	inc/mmu.h	106;"	d
FL_IOPL_0	inc/mmu.h	110;"	d
FL_IOPL_1	inc/mmu.h	111;"	d
FL_IOPL_2	inc/mmu.h	112;"	d
FL_IOPL_3	inc/mmu.h	113;"	d
FL_IOPL_MASK	inc/mmu.h	109;"	d
FL_NT	inc/mmu.h	114;"	d
FL_OF	inc/mmu.h	108;"	d
FL_PF	inc/mmu.h	101;"	d
FL_RF	inc/mmu.h	115;"	d
FL_SF	inc/mmu.h	104;"	d
FL_TF	inc/mmu.h	105;"	d
FL_VIF	inc/mmu.h	118;"	d
FL_VIP	inc/mmu.h	119;"	d
FL_VM	inc/mmu.h	116;"	d
FL_ZF	inc/mmu.h	103;"	d
Gatedesc	inc/mmu.h	/^struct Gatedesc {$/;"	s
JOS_INC_MMU_H	inc/mmu.h	2;"	d
NPDENTRIES	inc/mmu.h	45;"	d
NPTENTRIES	inc/mmu.h	46;"	d
PDX	inc/mmu.h	33;"	d
PDXSHIFT	inc/mmu.h	55;"	d
PGADDR	inc/mmu.h	42;"	d
PGNUM	inc/mmu.h	30;"	d
PGOFF	inc/mmu.h	39;"	d
PGSHIFT	inc/mmu.h	49;"	d
PGSIZE	inc/mmu.h	48;"	d
PTE_A	inc/mmu.h	63;"	d
PTE_ADDR	inc/mmu.h	76;"	d
PTE_AVAIL	inc/mmu.h	70;"	d
PTE_D	inc/mmu.h	64;"	d
PTE_G	inc/mmu.h	66;"	d
PTE_P	inc/mmu.h	58;"	d
PTE_PCD	inc/mmu.h	62;"	d
PTE_PS	inc/mmu.h	65;"	d
PTE_PWT	inc/mmu.h	61;"	d
PTE_SYSCALL	inc/mmu.h	73;"	d
PTE_U	inc/mmu.h	60;"	d
PTE_W	inc/mmu.h	59;"	d
PTSHIFT	inc/mmu.h	52;"	d
PTSIZE	inc/mmu.h	51;"	d
PTX	inc/mmu.h	36;"	d
PTXSHIFT	inc/mmu.h	54;"	d
Pseudodesc	inc/mmu.h	/^struct Pseudodesc {$/;"	s
SEG	inc/mmu.h	142;"	d
SEG	inc/mmu.h	172;"	d
SEG16	inc/mmu.h	176;"	d
SEG_FAULT	inc/mmu.h	170;"	d
SEG_NULL	inc/mmu.h	139;"	d
SEG_NULL	inc/mmu.h	168;"	d
SETCALLGATE	inc/mmu.h	296;"	d
SETGATE	inc/mmu.h	282;"	d
STA_A	inc/mmu.h	189;"	d
STA_C	inc/mmu.h	186;"	d
STA_E	inc/mmu.h	185;"	d
STA_R	inc/mmu.h	188;"	d
STA_W	inc/mmu.h	187;"	d
STA_X	inc/mmu.h	184;"	d
STS_CG16	inc/mmu.h	195;"	d
STS_CG32	inc/mmu.h	201;"	d
STS_IG16	inc/mmu.h	197;"	d
STS_IG32	inc/mmu.h	202;"	d
STS_LDT	inc/mmu.h	193;"	d
STS_T16A	inc/mmu.h	192;"	d
STS_T16B	inc/mmu.h	194;"	d
STS_T32A	inc/mmu.h	199;"	d
STS_T32B	inc/mmu.h	200;"	d
STS_TG	inc/mmu.h	196;"	d
STS_TG16	inc/mmu.h	198;"	d
STS_TG32	inc/mmu.h	203;"	d
Segdesc	inc/mmu.h	/^struct Segdesc {$/;"	s
Taskstate	inc/mmu.h	/^struct Taskstate {$/;"	s
gd_args	inc/mmu.h	/^	unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:Gatedesc
gd_dpl	inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:Gatedesc
gd_off_15_0	inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:Gatedesc
gd_off_31_16	inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:Gatedesc
gd_p	inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:Gatedesc
gd_rsv1	inc/mmu.h	/^	unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:Gatedesc
gd_s	inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:Gatedesc
gd_sel	inc/mmu.h	/^	unsigned gd_sel : 16;        \/\/ segment selector$/;"	m	struct:Gatedesc
gd_type	inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:Gatedesc
pd_base	inc/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc
pd_lim	inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc
sd_avl	inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:Segdesc
sd_base_15_0	inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:Segdesc
sd_base_23_16	inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:Segdesc
sd_base_31_24	inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:Segdesc
sd_db	inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:Segdesc
sd_dpl	inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:Segdesc
sd_g	inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:Segdesc
sd_lim_15_0	inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:Segdesc
sd_lim_19_16	inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:Segdesc
sd_p	inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:Segdesc
sd_rsv1	inc/mmu.h	/^	unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	struct:Segdesc
sd_s	inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:Segdesc
sd_type	inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:Segdesc
ts_cr3	inc/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:Taskstate
ts_cs	inc/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:Taskstate
ts_ds	inc/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:Taskstate
ts_eax	inc/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:Taskstate
ts_ebp	inc/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:Taskstate
ts_ebx	inc/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:Taskstate
ts_ecx	inc/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:Taskstate
ts_edi	inc/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:Taskstate
ts_edx	inc/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:Taskstate
ts_eflags	inc/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:Taskstate
ts_eip	inc/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:Taskstate
ts_es	inc/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:Taskstate
ts_esi	inc/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:Taskstate
ts_esp	inc/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:Taskstate
ts_esp0	inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:Taskstate
ts_esp1	inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:Taskstate
ts_esp2	inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:Taskstate
ts_fs	inc/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:Taskstate
ts_gs	inc/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:Taskstate
ts_iomb	inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:Taskstate
ts_ldt	inc/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:Taskstate
ts_link	inc/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:Taskstate
ts_padding1	inc/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:Taskstate
ts_padding10	inc/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:Taskstate
ts_padding2	inc/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:Taskstate
ts_padding3	inc/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:Taskstate
ts_padding4	inc/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:Taskstate
ts_padding5	inc/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:Taskstate
ts_padding6	inc/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:Taskstate
ts_padding7	inc/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:Taskstate
ts_padding8	inc/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:Taskstate
ts_padding9	inc/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:Taskstate
ts_ss	inc/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:Taskstate
ts_ss0	inc/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:Taskstate
ts_ss1	inc/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:Taskstate
ts_ss2	inc/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:Taskstate
ts_t	inc/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:Taskstate
JOS_INC_NS_H	inc/ns.h	4;"	d
NSREQ_ACCEPT	inc/ns.h	/^	NSREQ_ACCEPT = 1,$/;"	e	enum:__anon42
NSREQ_BIND	inc/ns.h	/^	NSREQ_BIND,$/;"	e	enum:__anon42
NSREQ_CLOSE	inc/ns.h	/^	NSREQ_CLOSE,$/;"	e	enum:__anon42
NSREQ_CONNECT	inc/ns.h	/^	NSREQ_CONNECT,$/;"	e	enum:__anon42
NSREQ_INPUT	inc/ns.h	/^	NSREQ_INPUT,$/;"	e	enum:__anon42
NSREQ_LISTEN	inc/ns.h	/^	NSREQ_LISTEN,$/;"	e	enum:__anon42
NSREQ_OUTPUT	inc/ns.h	/^	NSREQ_OUTPUT,$/;"	e	enum:__anon42
NSREQ_RECV	inc/ns.h	/^	NSREQ_RECV,$/;"	e	enum:__anon42
NSREQ_SEND	inc/ns.h	/^	NSREQ_SEND,$/;"	e	enum:__anon42
NSREQ_SHUTDOWN	inc/ns.h	/^	NSREQ_SHUTDOWN,$/;"	e	enum:__anon42
NSREQ_SOCKET	inc/ns.h	/^	NSREQ_SOCKET,$/;"	e	enum:__anon42
NSREQ_TIMER	inc/ns.h	/^	NSREQ_TIMER,$/;"	e	enum:__anon42
Nsipc	inc/ns.h	/^union Nsipc {$/;"	u
Nsreq_accept	inc/ns.h	/^	struct Nsreq_accept {$/;"	s	union:Nsipc
Nsreq_bind	inc/ns.h	/^	struct Nsreq_bind {$/;"	s	union:Nsipc
Nsreq_close	inc/ns.h	/^	struct Nsreq_close {$/;"	s	union:Nsipc
Nsreq_connect	inc/ns.h	/^	struct Nsreq_connect {$/;"	s	union:Nsipc
Nsreq_listen	inc/ns.h	/^	struct Nsreq_listen {$/;"	s	union:Nsipc
Nsreq_recv	inc/ns.h	/^	struct Nsreq_recv {$/;"	s	union:Nsipc
Nsreq_send	inc/ns.h	/^	struct Nsreq_send {$/;"	s	union:Nsipc
Nsreq_shutdown	inc/ns.h	/^	struct Nsreq_shutdown {$/;"	s	union:Nsipc
Nsreq_socket	inc/ns.h	/^	struct Nsreq_socket {$/;"	s	union:Nsipc
Nsret_accept	inc/ns.h	/^	struct Nsret_accept {$/;"	s	union:Nsipc
Nsret_recv	inc/ns.h	/^	struct Nsret_recv {$/;"	s	union:Nsipc
_pad	inc/ns.h	/^	char _pad[PGSIZE];$/;"	m	union:Nsipc
accept	inc/ns.h	/^	} accept;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_accept
acceptRet	inc/ns.h	/^	} acceptRet;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsret_accept
bind	inc/ns.h	/^	} bind;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_bind
close	inc/ns.h	/^	} close;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_close
connect	inc/ns.h	/^	} connect;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_connect
jif_pkt	inc/ns.h	/^struct jif_pkt {$/;"	s
jp_data	inc/ns.h	/^	char jp_data[0];$/;"	m	struct:jif_pkt
jp_len	inc/ns.h	/^	int jp_len;$/;"	m	struct:jif_pkt
listen	inc/ns.h	/^	} listen;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_listen
pkt	inc/ns.h	/^	struct jif_pkt pkt;$/;"	m	union:Nsipc	typeref:struct:Nsipc::jif_pkt
recv	inc/ns.h	/^	} recv;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_recv
recvRet	inc/ns.h	/^	} recvRet;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsret_recv
req_addrlen	inc/ns.h	/^		socklen_t req_addrlen;$/;"	m	struct:Nsipc::Nsreq_accept
req_backlog	inc/ns.h	/^		int req_backlog;$/;"	m	struct:Nsipc::Nsreq_listen
req_buf	inc/ns.h	/^		char req_buf[0];$/;"	m	struct:Nsipc::Nsreq_send
req_domain	inc/ns.h	/^		int req_domain;$/;"	m	struct:Nsipc::Nsreq_socket
req_flags	inc/ns.h	/^		unsigned int req_flags;$/;"	m	struct:Nsipc::Nsreq_recv
req_flags	inc/ns.h	/^		unsigned int req_flags;$/;"	m	struct:Nsipc::Nsreq_send
req_how	inc/ns.h	/^		int req_how;$/;"	m	struct:Nsipc::Nsreq_shutdown
req_len	inc/ns.h	/^		int req_len;$/;"	m	struct:Nsipc::Nsreq_recv
req_name	inc/ns.h	/^		struct sockaddr req_name;$/;"	m	struct:Nsipc::Nsreq_bind	typeref:struct:Nsipc::Nsreq_bind::sockaddr
req_name	inc/ns.h	/^		struct sockaddr req_name;$/;"	m	struct:Nsipc::Nsreq_connect	typeref:struct:Nsipc::Nsreq_connect::sockaddr
req_namelen	inc/ns.h	/^		socklen_t req_namelen;$/;"	m	struct:Nsipc::Nsreq_bind
req_namelen	inc/ns.h	/^		socklen_t req_namelen;$/;"	m	struct:Nsipc::Nsreq_connect
req_protocol	inc/ns.h	/^		int req_protocol;$/;"	m	struct:Nsipc::Nsreq_socket
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_accept
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_bind
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_close
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_connect
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_listen
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_recv
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_send
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_shutdown
req_size	inc/ns.h	/^		int req_size;$/;"	m	struct:Nsipc::Nsreq_send
req_type	inc/ns.h	/^		int req_type;$/;"	m	struct:Nsipc::Nsreq_socket
ret_addr	inc/ns.h	/^		struct sockaddr ret_addr;$/;"	m	struct:Nsipc::Nsret_accept	typeref:struct:Nsipc::Nsret_accept::sockaddr
ret_addrlen	inc/ns.h	/^		socklen_t ret_addrlen;$/;"	m	struct:Nsipc::Nsret_accept
ret_buf	inc/ns.h	/^		char ret_buf[0];$/;"	m	struct:Nsipc::Nsret_recv
send	inc/ns.h	/^	} send;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_send
shutdown	inc/ns.h	/^	} shutdown;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_shutdown
socket	inc/ns.h	/^	} socket;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_socket
JOS_INC_PARTITION_H	inc/partition.h	2;"	d
PTABLE_MAGIC	inc/partition.h	14;"	d
PTABLE_MAGIC_OFFSET	inc/partition.h	13;"	d
PTABLE_OFFSET	inc/partition.h	11;"	d
PTYPE_DOS_EXTENDED	inc/partition.h	20;"	d
PTYPE_JOSFS	inc/partition.h	18;"	d
PTYPE_JOS_KERN	inc/partition.h	17;"	d
PTYPE_LINUX_EXTENDED	inc/partition.h	22;"	d
PTYPE_W95_EXTENDED	inc/partition.h	21;"	d
Partitiondesc	inc/partition.h	/^struct Partitiondesc {$/;"	s
boot	inc/partition.h	/^	uint8_t boot;$/;"	m	struct:Partitiondesc
chs_begin	inc/partition.h	/^	uint8_t chs_begin[3];$/;"	m	struct:Partitiondesc
chs_end	inc/partition.h	/^	uint8_t chs_end[3];$/;"	m	struct:Partitiondesc
lba_length	inc/partition.h	/^	uint32_t lba_length;$/;"	m	struct:Partitiondesc
lba_start	inc/partition.h	/^	uint32_t lba_start;$/;"	m	struct:Partitiondesc
type	inc/partition.h	/^	uint8_t type;$/;"	m	struct:Partitiondesc
JOS_STAB_H	inc/stab.h	2;"	d
N_BCOMM	inc/stab.h	37;"	d
N_BINCL	inc/stab.h	29;"	d
N_BSLINE	inc/stab.h	25;"	d
N_DSLINE	inc/stab.h	24;"	d
N_ECOML	inc/stab.h	39;"	d
N_ECOMM	inc/stab.h	38;"	d
N_EINCL	inc/stab.h	32;"	d
N_ENTRY	inc/stab.h	33;"	d
N_EXCL	inc/stab.h	35;"	d
N_FNAME	inc/stab.h	16;"	d
N_FUN	inc/stab.h	17;"	d
N_GSYM	inc/stab.h	15;"	d
N_LBRAC	inc/stab.h	34;"	d
N_LCSYM	inc/stab.h	19;"	d
N_LENG	inc/stab.h	40;"	d
N_LSYM	inc/stab.h	28;"	d
N_MAIN	inc/stab.h	20;"	d
N_PC	inc/stab.h	21;"	d
N_PSYM	inc/stab.h	31;"	d
N_RBRAC	inc/stab.h	36;"	d
N_RSYM	inc/stab.h	22;"	d
N_SLINE	inc/stab.h	23;"	d
N_SO	inc/stab.h	27;"	d
N_SOL	inc/stab.h	30;"	d
N_SSYM	inc/stab.h	26;"	d
N_STSYM	inc/stab.h	18;"	d
Stab	inc/stab.h	/^struct Stab {$/;"	s
n_desc	inc/stab.h	/^	uint16_t n_desc;        \/\/ description field$/;"	m	struct:Stab
n_other	inc/stab.h	/^	uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:Stab
n_strx	inc/stab.h	/^	uint32_t n_strx;	\/\/ index into string table of name$/;"	m	struct:Stab
n_type	inc/stab.h	/^	uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:Stab
n_value	inc/stab.h	/^	uintptr_t n_value;	\/\/ value of symbol$/;"	m	struct:Stab
JOS_INC_STDARG_H	inc/stdarg.h	4;"	d
va_arg	inc/stdarg.h	10;"	d
va_end	inc/stdarg.h	12;"	d
va_list	inc/stdarg.h	/^typedef __builtin_va_list va_list;$/;"	t
va_start	inc/stdarg.h	8;"	d
JOS_INC_STDIO_H	inc/stdio.h	2;"	d
NULL	inc/stdio.h	7;"	d
JOS_INC_STRING_H	inc/string.h	2;"	d
JOS_INC_SYSCALL_H	inc/syscall.h	2;"	d
NSYSCALLS	inc/syscall.h	/^	NSYSCALLS$/;"	e	enum:__anon45
SYS_cgetc	inc/syscall.h	/^	SYS_cgetc,$/;"	e	enum:__anon45
SYS_cputs	inc/syscall.h	/^	SYS_cputs = 0,$/;"	e	enum:__anon45
SYS_env_destroy	inc/syscall.h	/^	SYS_env_destroy,$/;"	e	enum:__anon45
SYS_env_set_pgfault_upcall	inc/syscall.h	/^	SYS_env_set_pgfault_upcall,$/;"	e	enum:__anon45
SYS_env_set_status	inc/syscall.h	/^	SYS_env_set_status,$/;"	e	enum:__anon45
SYS_env_set_trapframe	inc/syscall.h	/^	SYS_env_set_trapframe,$/;"	e	enum:__anon45
SYS_exofork	inc/syscall.h	/^	SYS_exofork,$/;"	e	enum:__anon45
SYS_getenvid	inc/syscall.h	/^	SYS_getenvid,$/;"	e	enum:__anon45
SYS_ipc_recv	inc/syscall.h	/^	SYS_ipc_recv,$/;"	e	enum:__anon45
SYS_ipc_try_send	inc/syscall.h	/^	SYS_ipc_try_send,$/;"	e	enum:__anon45
SYS_page_alloc	inc/syscall.h	/^	SYS_page_alloc,$/;"	e	enum:__anon45
SYS_page_map	inc/syscall.h	/^	SYS_page_map,$/;"	e	enum:__anon45
SYS_page_unmap	inc/syscall.h	/^	SYS_page_unmap,$/;"	e	enum:__anon45
SYS_time_msec	inc/syscall.h	/^	SYS_time_msec,$/;"	e	enum:__anon45
SYS_transmit_packet	inc/syscall.h	/^	SYS_transmit_packet,$/;"	e	enum:__anon45
SYS_yield	inc/syscall.h	/^	SYS_yield,$/;"	e	enum:__anon45
IRQ_ERROR	inc/trap.h	40;"	d
IRQ_IDE	inc/trap.h	39;"	d
IRQ_KBD	inc/trap.h	36;"	d
IRQ_OFFSET	inc/trap.h	32;"	d
IRQ_SERIAL	inc/trap.h	37;"	d
IRQ_SPURIOUS	inc/trap.h	38;"	d
IRQ_TIMER	inc/trap.h	35;"	d
JOS_INC_TRAP_H	inc/trap.h	2;"	d
PushRegs	inc/trap.h	/^struct PushRegs {$/;"	s
T_ALIGN	inc/trap.h	23;"	d
T_BOUND	inc/trap.h	11;"	d
T_BRKPT	inc/trap.h	9;"	d
T_DBLFLT	inc/trap.h	14;"	d
T_DEBUG	inc/trap.h	7;"	d
T_DEFAULT	inc/trap.h	30;"	d
T_DEVICE	inc/trap.h	13;"	d
T_DIVIDE	inc/trap.h	6;"	d
T_FPERR	inc/trap.h	22;"	d
T_GPFLT	inc/trap.h	19;"	d
T_ILLOP	inc/trap.h	12;"	d
T_MCHK	inc/trap.h	24;"	d
T_NMI	inc/trap.h	8;"	d
T_OFLOW	inc/trap.h	10;"	d
T_PGFLT	inc/trap.h	20;"	d
T_SEGNP	inc/trap.h	17;"	d
T_SIMDERR	inc/trap.h	25;"	d
T_STACK	inc/trap.h	18;"	d
T_SYSCALL	inc/trap.h	29;"	d
T_TSS	inc/trap.h	16;"	d
Trapframe	inc/trap.h	/^struct Trapframe {$/;"	s
UTrapframe	inc/trap.h	/^struct UTrapframe {$/;"	s
reg_eax	inc/trap.h	/^	uint32_t reg_eax;$/;"	m	struct:PushRegs
reg_ebp	inc/trap.h	/^	uint32_t reg_ebp;$/;"	m	struct:PushRegs
reg_ebx	inc/trap.h	/^	uint32_t reg_ebx;$/;"	m	struct:PushRegs
reg_ecx	inc/trap.h	/^	uint32_t reg_ecx;$/;"	m	struct:PushRegs
reg_edi	inc/trap.h	/^	uint32_t reg_edi;$/;"	m	struct:PushRegs
reg_edx	inc/trap.h	/^	uint32_t reg_edx;$/;"	m	struct:PushRegs
reg_esi	inc/trap.h	/^	uint32_t reg_esi;$/;"	m	struct:PushRegs
reg_oesp	inc/trap.h	/^	uint32_t reg_oesp;		\/* Useless *\/$/;"	m	struct:PushRegs
tf_cs	inc/trap.h	/^	uint16_t tf_cs;$/;"	m	struct:Trapframe
tf_ds	inc/trap.h	/^	uint16_t tf_ds;$/;"	m	struct:Trapframe
tf_eflags	inc/trap.h	/^	uint32_t tf_eflags;$/;"	m	struct:Trapframe
tf_eip	inc/trap.h	/^	uintptr_t tf_eip;$/;"	m	struct:Trapframe
tf_err	inc/trap.h	/^	uint32_t tf_err;$/;"	m	struct:Trapframe
tf_es	inc/trap.h	/^	uint16_t tf_es;$/;"	m	struct:Trapframe
tf_esp	inc/trap.h	/^	uintptr_t tf_esp;$/;"	m	struct:Trapframe
tf_padding1	inc/trap.h	/^	uint16_t tf_padding1;$/;"	m	struct:Trapframe
tf_padding2	inc/trap.h	/^	uint16_t tf_padding2;$/;"	m	struct:Trapframe
tf_padding3	inc/trap.h	/^	uint16_t tf_padding3;$/;"	m	struct:Trapframe
tf_padding4	inc/trap.h	/^	uint16_t tf_padding4;$/;"	m	struct:Trapframe
tf_regs	inc/trap.h	/^	struct PushRegs tf_regs;$/;"	m	struct:Trapframe	typeref:struct:Trapframe::PushRegs
tf_ss	inc/trap.h	/^	uint16_t tf_ss;$/;"	m	struct:Trapframe
tf_trapno	inc/trap.h	/^	uint32_t tf_trapno;$/;"	m	struct:Trapframe
utf_eflags	inc/trap.h	/^	uint32_t utf_eflags;$/;"	m	struct:UTrapframe
utf_eip	inc/trap.h	/^	uintptr_t utf_eip;$/;"	m	struct:UTrapframe
utf_err	inc/trap.h	/^	uint32_t utf_err;$/;"	m	struct:UTrapframe
utf_esp	inc/trap.h	/^	uintptr_t utf_esp;$/;"	m	struct:UTrapframe
utf_fault_va	inc/trap.h	/^	uint32_t utf_fault_va;	\/* va for T_PGFLT, 0 otherwise *\/$/;"	m	struct:UTrapframe
utf_regs	inc/trap.h	/^	struct PushRegs utf_regs;$/;"	m	struct:UTrapframe	typeref:struct:UTrapframe::PushRegs
JOS_INC_TYPES_H	inc/types.h	2;"	d
MAX	inc/types.h	49;"	d
MIN	inc/types.h	43;"	d
NULL	inc/types.h	5;"	d
ROUNDDOWN	inc/types.h	58;"	d
ROUNDUP	inc/types.h	64;"	d
bool	inc/types.h	/^typedef _Bool bool;$/;"	t
false	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon46
int16_t	inc/types.h	/^typedef short int16_t;$/;"	t
int32_t	inc/types.h	/^typedef int int32_t;$/;"	t
int64_t	inc/types.h	/^typedef long long int64_t;$/;"	t
int8_t	inc/types.h	/^typedef __signed char int8_t;$/;"	t
intptr_t	inc/types.h	/^typedef int32_t intptr_t;$/;"	t
off_t	inc/types.h	/^typedef int32_t off_t;$/;"	t
offsetof	inc/types.h	71;"	d
physaddr_t	inc/types.h	/^typedef uint32_t physaddr_t;$/;"	t
ppn_t	inc/types.h	/^typedef uint32_t ppn_t;$/;"	t
size_t	inc/types.h	/^typedef uint32_t size_t;$/;"	t
ssize_t	inc/types.h	/^typedef int32_t ssize_t;$/;"	t
true	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon46
uint16_t	inc/types.h	/^typedef unsigned short uint16_t;$/;"	t
uint32_t	inc/types.h	/^typedef unsigned int uint32_t;$/;"	t
uint64_t	inc/types.h	/^typedef unsigned long long uint64_t;$/;"	t
uint8_t	inc/types.h	/^typedef unsigned char uint8_t;$/;"	t
uintptr_t	inc/types.h	/^typedef uint32_t uintptr_t;$/;"	t
JOS_INC_X86_H	inc/x86.h	2;"	d
breakpoint	inc/x86.h	/^breakpoint(void)$/;"	f
cpuid	inc/x86.h	/^cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)$/;"	f
inb	inc/x86.h	/^inb(int port)$/;"	f
inl	inc/x86.h	/^inl(int port)$/;"	f
insb	inc/x86.h	/^insb(int port, void *addr, int cnt)$/;"	f
insl	inc/x86.h	/^insl(int port, void *addr, int cnt)$/;"	f
insw	inc/x86.h	/^insw(int port, void *addr, int cnt)$/;"	f
invlpg	inc/x86.h	/^invlpg(void *addr)$/;"	f
inw	inc/x86.h	/^inw(int port)$/;"	f
lcr0	inc/x86.h	/^lcr0(uint32_t val)$/;"	f
lcr3	inc/x86.h	/^lcr3(uint32_t val)$/;"	f
lcr4	inc/x86.h	/^lcr4(uint32_t val)$/;"	f
lgdt	inc/x86.h	/^lgdt(void *p)$/;"	f
lidt	inc/x86.h	/^lidt(void *p)$/;"	f
lldt	inc/x86.h	/^lldt(uint16_t sel)$/;"	f
ltr	inc/x86.h	/^ltr(uint16_t sel)$/;"	f
outb	inc/x86.h	/^outb(int port, uint8_t data)$/;"	f
outl	inc/x86.h	/^outl(int port, uint32_t data)$/;"	f
outsb	inc/x86.h	/^outsb(int port, const void *addr, int cnt)$/;"	f
outsl	inc/x86.h	/^outsl(int port, const void *addr, int cnt)$/;"	f
outsw	inc/x86.h	/^outsw(int port, const void *addr, int cnt)$/;"	f
outw	inc/x86.h	/^outw(int port, uint16_t data)$/;"	f
rcr0	inc/x86.h	/^rcr0(void)$/;"	f
rcr2	inc/x86.h	/^rcr2(void)$/;"	f
rcr3	inc/x86.h	/^rcr3(void)$/;"	f
rcr4	inc/x86.h	/^rcr4(void)$/;"	f
read_ebp	inc/x86.h	/^read_ebp(void)$/;"	f
read_eflags	inc/x86.h	/^read_eflags(void)$/;"	f
read_esp	inc/x86.h	/^read_esp(void)$/;"	f
read_tsc	inc/x86.h	/^read_tsc(void)$/;"	f
tlbflush	inc/x86.h	/^tlbflush(void)$/;"	f
write_eflags	inc/x86.h	/^write_eflags(uint32_t eflags)$/;"	f
xchg	inc/x86.h	/^xchg(volatile uint32_t *addr, uint32_t newval)$/;"	f
_panic	init.s	/^_panic:$/;"	l
_warn	init.s	/^_warn:$/;"	l
i386_init	init.s	/^i386_init:$/;"	l
test_backtrace	init.s	/^test_backtrace:$/;"	l
ALT	kern/console.c	223;"	d	file:
C	kern/console.c	290;"	d	file:
CAPSLOCK	kern/console.c	225;"	d	file:
COM1	kern/console.c	27;"	d	file:
COM_DLL	kern/console.c	31;"	d	file:
COM_DLM	kern/console.c	32;"	d	file:
COM_FCR	kern/console.c	36;"	d	file:
COM_IER	kern/console.c	33;"	d	file:
COM_IER_RDI	kern/console.c	34;"	d	file:
COM_IIR	kern/console.c	35;"	d	file:
COM_LCR	kern/console.c	37;"	d	file:
COM_LCR_DLAB	kern/console.c	38;"	d	file:
COM_LCR_WLEN8	kern/console.c	39;"	d	file:
COM_LSR	kern/console.c	44;"	d	file:
COM_LSR_DATA	kern/console.c	45;"	d	file:
COM_LSR_TSRE	kern/console.c	47;"	d	file:
COM_LSR_TXRDY	kern/console.c	46;"	d	file:
COM_MCR	kern/console.c	40;"	d	file:
COM_MCR_DTR	kern/console.c	42;"	d	file:
COM_MCR_OUT2	kern/console.c	43;"	d	file:
COM_MCR_RTS	kern/console.c	41;"	d	file:
COM_RX	kern/console.c	29;"	d	file:
COM_TX	kern/console.c	30;"	d	file:
CONSBUFSIZE	kern/console.c	389;"	d	file:
CTL	kern/console.c	222;"	d	file:
E0ESC	kern/console.c	229;"	d	file:
NO	kern/console.c	219;"	d	file:
NUMLOCK	kern/console.c	226;"	d	file:
SCROLLLOCK	kern/console.c	227;"	d	file:
SHIFT	kern/console.c	221;"	d	file:
addr_6845	kern/console.c	/^static unsigned addr_6845;$/;"	v	file:
buf	kern/console.c	/^	uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon34	file:
cga_init	kern/console.c	/^cga_init(void)$/;"	f	file:
cga_putc	kern/console.c	/^cga_putc(int c)$/;"	f	file:
charcode	kern/console.c	/^static uint8_t *charcode[4] = {$/;"	v	file:
cons	kern/console.c	/^} cons;$/;"	v	typeref:struct:__anon34	file:
cons_getc	kern/console.c	/^cons_getc(void)$/;"	f
cons_init	kern/console.c	/^cons_init(void)$/;"	f
cons_intr	kern/console.c	/^cons_intr(int (*proc)(void))$/;"	f	file:
cons_putc	kern/console.c	/^cons_putc(int c)$/;"	f	file:
cputchar	kern/console.c	/^cputchar(int c)$/;"	f
crt_buf	kern/console.c	/^static uint16_t *crt_buf;$/;"	v	file:
crt_pos	kern/console.c	/^static uint16_t crt_pos;$/;"	v	file:
ctlmap	kern/console.c	/^static uint8_t ctlmap[256] =$/;"	v	file:
delay	kern/console.c	/^delay(void)$/;"	f	file:
getchar	kern/console.c	/^getchar(void)$/;"	f
iscons	kern/console.c	/^iscons(int fdnum)$/;"	f
kbd_init	kern/console.c	/^kbd_init(void)$/;"	f	file:
kbd_intr	kern/console.c	/^kbd_intr(void)$/;"	f
kbd_proc_data	kern/console.c	/^kbd_proc_data(void)$/;"	f	file:
lpt_putc	kern/console.c	/^lpt_putc(int c)$/;"	f	file:
normalmap	kern/console.c	/^static uint8_t normalmap[256] =$/;"	v	file:
rpos	kern/console.c	/^	uint32_t rpos;$/;"	m	struct:__anon34	file:
serial_exists	kern/console.c	/^static bool serial_exists;$/;"	v	file:
serial_init	kern/console.c	/^serial_init(void)$/;"	f	file:
serial_intr	kern/console.c	/^serial_intr(void)$/;"	f
serial_proc_data	kern/console.c	/^serial_proc_data(void)$/;"	f	file:
serial_putc	kern/console.c	/^serial_putc(int c)$/;"	f	file:
shiftcode	kern/console.c	/^static uint8_t shiftcode[256] =$/;"	v	file:
shiftmap	kern/console.c	/^static uint8_t shiftmap[256] =$/;"	v	file:
togglecode	kern/console.c	/^static uint8_t togglecode[256] =$/;"	v	file:
wpos	kern/console.c	/^	uint32_t wpos;$/;"	m	struct:__anon34	file:
CGA_BASE	kern/console.h	13;"	d
CGA_BUF	kern/console.h	14;"	d
CRT_COLS	kern/console.h	17;"	d
CRT_ROWS	kern/console.h	16;"	d
CRT_SIZE	kern/console.h	18;"	d
MONO_BASE	kern/console.h	11;"	d
MONO_BUF	kern/console.h	12;"	d
_CONSOLE_H_	kern/console.h	4;"	d
CPU_HALTED	kern/cpu.h	/^	CPU_HALTED,$/;"	e	enum:__anon33
CPU_STARTED	kern/cpu.h	/^	CPU_STARTED,$/;"	e	enum:__anon33
CPU_UNUSED	kern/cpu.h	/^	CPU_UNUSED = 0,$/;"	e	enum:__anon33
CpuInfo	kern/cpu.h	/^struct CpuInfo {$/;"	s
JOS_INC_CPU_H	kern/cpu.h	3;"	d
NCPU	kern/cpu.h	11;"	d
cpu_env	kern/cpu.h	/^	struct Env *cpu_env;            \/\/ The currently-running environment.$/;"	m	struct:CpuInfo	typeref:struct:CpuInfo::Env
cpu_id	kern/cpu.h	/^	uint8_t cpu_id;                 \/\/ Local APIC ID; index into cpus[] below$/;"	m	struct:CpuInfo
cpu_status	kern/cpu.h	/^	volatile unsigned cpu_status;   \/\/ The status of the CPU$/;"	m	struct:CpuInfo
cpu_ts	kern/cpu.h	/^	struct Taskstate cpu_ts;        \/\/ Used by x86 to find stack for interrupt$/;"	m	struct:CpuInfo	typeref:struct:CpuInfo::Taskstate
thiscpu	kern/cpu.h	38;"	d
e1000	kern/e1000.c	/^volatile uint32_t *e1000;$/;"	v
firstround	kern/e1000.c	/^uint32_t firstround = 1;$/;"	v
init_transmit	kern/e1000.c	/^init_transmit()$/;"	f
pci_e1000_attach	kern/e1000.c	/^pci_e1000_attach(struct pci_func *pcif)$/;"	f
test	kern/e1000.c	3;"	d	file:
transmit_packet	kern/e1000.c	/^transmit_packet(uint32_t pa, uint32_t len)$/;"	f
tsmitqueue	kern/e1000.c	/^struct e1000_tx_desc *tsmitqueue;$/;"	v	typeref:struct:e1000_tx_desc
E1000_DEV_ID_82540EM	kern/e1000.h	12;"	d
E1000_STATUS	kern/e1000.h	28;"	d
E1000_TCTL	kern/e1000.h	29;"	d
E1000_TCTL_BCE	kern/e1000.h	54;"	d
E1000_TCTL_COLD	kern/e1000.h	57;"	d
E1000_TCTL_COLD_SHIFT	kern/e1000.h	69;"	d
E1000_TCTL_CT	kern/e1000.h	56;"	d
E1000_TCTL_CT_SHIFT	kern/e1000.h	68;"	d
E1000_TCTL_EN	kern/e1000.h	53;"	d
E1000_TCTL_MULR	kern/e1000.h	62;"	d
E1000_TCTL_NRTU	kern/e1000.h	61;"	d
E1000_TCTL_PBE	kern/e1000.h	59;"	d
E1000_TCTL_PSP	kern/e1000.h	55;"	d
E1000_TCTL_RST	kern/e1000.h	52;"	d
E1000_TCTL_RTLC	kern/e1000.h	60;"	d
E1000_TCTL_SWXOFF	kern/e1000.h	58;"	d
E1000_TDBAH	kern/e1000.h	32;"	d
E1000_TDBAL	kern/e1000.h	31;"	d
E1000_TDH	kern/e1000.h	34;"	d
E1000_TDLEN	kern/e1000.h	33;"	d
E1000_TDT	kern/e1000.h	35;"	d
E1000_TIDV	kern/e1000.h	36;"	d
E1000_TIPG	kern/e1000.h	30;"	d
E1000_TIPG_IPGR1	kern/e1000.h	46;"	d
E1000_TIPG_IPGR1_SHIFT	kern/e1000.h	41;"	d
E1000_TIPG_IPGR2	kern/e1000.h	47;"	d
E1000_TIPG_IPGR2_SHIFT	kern/e1000.h	42;"	d
E1000_TIPG_IPGT	kern/e1000.h	45;"	d
E1000_TIPG_IPGT_SHIFT	kern/e1000.h	40;"	d
E1000_TIPG_RESV	kern/e1000.h	48;"	d
E1000_TIPG_RESV_SHIFT	kern/e1000.h	43;"	d
E1000_TXD_CMD_DEXT	kern/e1000.h	115;"	d
E1000_TXD_CMD_EOP	kern/e1000.h	110;"	d
E1000_TXD_CMD_IC	kern/e1000.h	112;"	d
E1000_TXD_CMD_IDE	kern/e1000.h	117;"	d
E1000_TXD_CMD_IFCS	kern/e1000.h	111;"	d
E1000_TXD_CMD_IP	kern/e1000.h	123;"	d
E1000_TXD_CMD_RPS	kern/e1000.h	114;"	d
E1000_TXD_CMD_RS	kern/e1000.h	113;"	d
E1000_TXD_CMD_TCP	kern/e1000.h	122;"	d
E1000_TXD_CMD_TSE	kern/e1000.h	124;"	d
E1000_TXD_CMD_VLE	kern/e1000.h	116;"	d
E1000_TXD_DTYP_C	kern/e1000.h	107;"	d
E1000_TXD_DTYP_D	kern/e1000.h	106;"	d
E1000_TXD_POPTS_IXSM	kern/e1000.h	108;"	d
E1000_TXD_POPTS_TXSM	kern/e1000.h	109;"	d
E1000_TXD_STAT_DD	kern/e1000.h	118;"	d
E1000_TXD_STAT_EC	kern/e1000.h	119;"	d
E1000_TXD_STAT_LC	kern/e1000.h	120;"	d
E1000_TXD_STAT_TC	kern/e1000.h	125;"	d
E1000_TXD_STAT_TU	kern/e1000.h	121;"	d
E1000_VDR_ID	kern/e1000.h	10;"	d
FIXSEG	kern/e1000.h	78;"	d
JOS_KERN_E1000_H	kern/e1000.h	2;"	d
PACKET_MAX_LEN	kern/e1000.h	104;"	d
PACKET_MIN_LEN	kern/e1000.h	103;"	d
TDLEN_ALIGN	kern/e1000.h	14;"	d
buffer_addr	kern/e1000.h	/^	uint64_t buffer_addr;       \/* Address of the descriptor's data buffer *\/$/;"	m	struct:e1000_tx_desc
cmd	kern/e1000.h	/^            uint8_t cmd;        \/* Descriptor control *\/$/;"	m	struct:e1000_tx_desc::__anon37::__anon38
cso	kern/e1000.h	/^            uint8_t cso;        \/* Checksum offset *\/$/;"	m	struct:e1000_tx_desc::__anon37::__anon38
css	kern/e1000.h	/^            uint8_t css;        \/* Checksum start *\/$/;"	m	struct:e1000_tx_desc::__anon39::__anon40
e1000_tx_desc	kern/e1000.h	/^struct e1000_tx_desc{$/;"	s
fields	kern/e1000.h	/^        uint32_t fields;$/;"	m	union:e1000_tx_desc::__anon39
flags	kern/e1000.h	/^        uint32_t flags;$/;"	m	union:e1000_tx_desc::__anon37
length	kern/e1000.h	/^            uint16_t length;    \/* Data buffer length *\/$/;"	m	struct:e1000_tx_desc::__anon37::__anon38
lower	kern/e1000.h	/^    } lower;$/;"	m	struct:e1000_tx_desc	typeref:union:e1000_tx_desc::__anon37
special	kern/e1000.h	/^            uint16_t special;$/;"	m	struct:e1000_tx_desc::__anon39::__anon40
status	kern/e1000.h	/^            uint8_t status;     \/* Descriptor status *\/$/;"	m	struct:e1000_tx_desc::__anon39::__anon40
upper	kern/e1000.h	/^    } upper;$/;"	m	struct:e1000_tx_desc	typeref:union:e1000_tx_desc::__anon39
CHECKSUM	kern/entry.S	/^#define CHECKSUM (-(MULTIBOOT_HEADER_MAGIC + MULTIBOOT_HEADER_FLAGS))$/;"	d
MULTIBOOT_HEADER_FLAGS	kern/entry.S	/^#define MULTIBOOT_HEADER_FLAGS (0)$/;"	d
MULTIBOOT_HEADER_MAGIC	kern/entry.S	/^#define MULTIBOOT_HEADER_MAGIC (0x1BADB002)$/;"	d
RELOC	kern/entry.S	/^#define	RELOC(x) ((x) - KERNBASE)$/;"	d
SRL	kern/entry.S	/^#define SRL(val, shamt)		(((val) >> (shamt)) & ~(-1 << (32 - (shamt))))$/;"	d
_start	kern/entry.S	/^_start = RELOC(entry)$/;"	d
bootstack	kern/entry.S	/^bootstack:$/;"	l
bootstacktop	kern/entry.S	/^bootstacktop:$/;"	l
entry	kern/entry.S	/^entry:$/;"	l
relocated	kern/entry.S	/^relocated:$/;"	l
spin	kern/entry.S	/^spin:	jmp	spin$/;"	l
entry_pgdir	kern/entrypgdir.c	/^pde_t entry_pgdir[NPDENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES];$/;"	v
ENVGENSHIFT	kern/env.c	22;"	d	file:
env_alloc	kern/env.c	/^env_alloc(struct Env **newenv_store, envid_t parent_id)$/;"	f
env_create	kern/env.c	/^env_create(uint8_t *binary, enum EnvType type)$/;"	f
env_destroy	kern/env.c	/^env_destroy(struct Env *e)$/;"	f
env_free	kern/env.c	/^env_free(struct Env *e)$/;"	f
env_free_list	kern/env.c	/^static struct Env *env_free_list;	\/\/ Free environment list$/;"	v	typeref:struct:Env	file:
env_init	kern/env.c	/^env_init(void)$/;"	f
env_init_percpu	kern/env.c	/^env_init_percpu(void)$/;"	f
env_pop_tf	kern/env.c	/^env_pop_tf(struct Trapframe *tf)$/;"	f
env_run	kern/env.c	/^env_run(struct Env *e)$/;"	f
env_setup_vm	kern/env.c	/^env_setup_vm(struct Env *e)$/;"	f	file:
envid2env	kern/env.c	/^envid2env(envid_t envid, struct Env **env_store, bool checkperm)$/;"	f
envs	kern/env.c	/^struct Env *envs = NULL;		\/\/ All environments$/;"	v	typeref:struct:Env
gdt	kern/env.c	/^struct Segdesc gdt[NCPU + 5] =$/;"	v	typeref:struct:Segdesc
gdt_pd	kern/env.c	/^struct Pseudodesc gdt_pd = {$/;"	v	typeref:struct:Pseudodesc
load_icode	kern/env.c	/^load_icode(struct Env *e, uint8_t *binary)$/;"	f	file:
region_alloc	kern/env.c	/^region_alloc(struct Env *e, void *va, size_t len)$/;"	f	file:
ENV_CREATE	kern/env.h	29;"	d
ENV_PASTE3	kern/env.h	27;"	d
JOS_KERN_ENV_H	kern/env.h	4;"	d
curenv	kern/env.h	10;"	d
_panic	kern/init.c	/^_panic(const char *file, int line, const char *fmt,...)$/;"	f
_warn	kern/init.c	/^_warn(const char *file, int line, const char *fmt,...)$/;"	f
boot_aps	kern/init.c	/^boot_aps(void)$/;"	f	file:
i386_init	kern/init.c	/^i386_init(void)$/;"	f
mp_main	kern/init.c	/^mp_main(void)$/;"	f
mpentry_kstack	kern/init.c	/^void *mpentry_kstack;$/;"	v
panicstr	kern/init.c	/^const char *panicstr;$/;"	v
mc146818_read	kern/kclock.c	/^mc146818_read(unsigned reg)$/;"	f
mc146818_write	kern/kclock.c	/^mc146818_write(unsigned reg, unsigned datum)$/;"	f
IO_RTC	kern/kclock.h	9;"	d
JOS_KERN_KCLOCK_H	kern/kclock.h	4;"	d
MC_NVRAM_SIZE	kern/kclock.h	12;"	d
MC_NVRAM_START	kern/kclock.h	11;"	d
NVRAM_BASEHI	kern/kclock.h	16;"	d
NVRAM_BASELO	kern/kclock.h	15;"	d
NVRAM_CENTURY	kern/kclock.h	27;"	d
NVRAM_EXTHI	kern/kclock.h	20;"	d
NVRAM_EXTLO	kern/kclock.h	19;"	d
NVRAM_PEXTHI	kern/kclock.h	24;"	d
NVRAM_PEXTLO	kern/kclock.h	23;"	d
UserStabData	kern/kdebug.c	/^struct UserStabData {$/;"	s	file:
debuginfo_eip	kern/kdebug.c	/^debuginfo_eip(uintptr_t addr, struct Eipdebuginfo *info)$/;"	f
stab_binsearch	kern/kdebug.c	/^stab_binsearch(const struct Stab *stabs, int *region_left, int *region_right,$/;"	f	file:
stab_end	kern/kdebug.c	/^	const struct Stab *stab_end;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:
stabs	kern/kdebug.c	/^	const struct Stab *stabs;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:
stabstr	kern/kdebug.c	/^	const char *stabstr;$/;"	m	struct:UserStabData	file:
stabstr_end	kern/kdebug.c	/^	const char *stabstr_end;$/;"	m	struct:UserStabData	file:
Eipdebuginfo	kern/kdebug.h	/^struct Eipdebuginfo {$/;"	s
JOS_KERN_KDEBUG_H	kern/kdebug.h	2;"	d
eip_file	kern/kdebug.h	/^	const char *eip_file;		\/\/ Source code filename for EIP$/;"	m	struct:Eipdebuginfo
eip_fn_addr	kern/kdebug.h	/^	uintptr_t eip_fn_addr;		\/\/ Address of start of function$/;"	m	struct:Eipdebuginfo
eip_fn_name	kern/kdebug.h	/^	const char *eip_fn_name;	\/\/ Name of function containing EIP$/;"	m	struct:Eipdebuginfo
eip_fn_namelen	kern/kdebug.h	/^	int eip_fn_namelen;		\/\/ Length of function name$/;"	m	struct:Eipdebuginfo
eip_fn_narg	kern/kdebug.h	/^	int eip_fn_narg;		\/\/ Number of function arguments$/;"	m	struct:Eipdebuginfo
eip_line	kern/kdebug.h	/^	int eip_line;			\/\/ Source code linenumber for EIP$/;"	m	struct:Eipdebuginfo
ASSERT	kern/lapic.c	25;"	d	file:
BCAST	kern/lapic.c	28;"	d	file:
BUSY	kern/lapic.c	30;"	d	file:
DEASSERT	kern/lapic.c	26;"	d	file:
DELIVS	kern/lapic.c	24;"	d	file:
ENABLE	kern/lapic.c	19;"	d	file:
EOI	kern/lapic.c	17;"	d	file:
ERROR	kern/lapic.c	39;"	d	file:
ESR	kern/lapic.c	20;"	d	file:
FIXED	kern/lapic.c	31;"	d	file:
ICRHI	kern/lapic.c	32;"	d	file:
ICRLO	kern/lapic.c	21;"	d	file:
ID	kern/lapic.c	14;"	d	file:
INIT	kern/lapic.c	22;"	d	file:
IO_RTC	kern/lapic.c	137;"	d	file:
LEVEL	kern/lapic.c	27;"	d	file:
LINT0	kern/lapic.c	37;"	d	file:
LINT1	kern/lapic.c	38;"	d	file:
MASKED	kern/lapic.c	40;"	d	file:
OTHERS	kern/lapic.c	29;"	d	file:
PCINT	kern/lapic.c	36;"	d	file:
PERIODIC	kern/lapic.c	35;"	d	file:
STARTUP	kern/lapic.c	23;"	d	file:
SVR	kern/lapic.c	18;"	d	file:
TCCR	kern/lapic.c	42;"	d	file:
TDCR	kern/lapic.c	43;"	d	file:
TICR	kern/lapic.c	41;"	d	file:
TIMER	kern/lapic.c	33;"	d	file:
TPR	kern/lapic.c	16;"	d	file:
VER	kern/lapic.c	15;"	d	file:
X1	kern/lapic.c	34;"	d	file:
cpunum	kern/lapic.c	/^cpunum(void)$/;"	f
lapic	kern/lapic.c	/^volatile uint32_t *lapic;$/;"	v
lapic_eoi	kern/lapic.c	/^lapic_eoi(void)$/;"	f
lapic_init	kern/lapic.c	/^lapic_init(void)$/;"	f
lapic_ipi	kern/lapic.c	/^lapic_ipi(int vector)$/;"	f
lapic_startap	kern/lapic.c	/^lapic_startap(uint8_t apicid, uint32_t addr)$/;"	f
lapicaddr	kern/lapic.c	/^physaddr_t lapicaddr;        \/\/ Initialized in mpconfig.c$/;"	v
lapicw	kern/lapic.c	/^lapicw(int index, int value)$/;"	f	file:
microdelay	kern/lapic.c	/^microdelay(int us)$/;"	f	file:
CMDBUF_SIZE	kern/monitor.c	15;"	d	file:
Command	kern/monitor.c	/^struct Command {$/;"	s	file:
MAXARGS	kern/monitor.c	90;"	d	file:
NCOMMANDS	kern/monitor.c	30;"	d	file:
WHITESPACE	kern/monitor.c	89;"	d	file:
commands	kern/monitor.c	/^static struct Command commands[] = {$/;"	v	typeref:struct:Command	file:
desc	kern/monitor.c	/^	const char *desc;$/;"	m	struct:Command	file:
func	kern/monitor.c	/^	int (*func)(int argc, char** argv, struct Trapframe* tf);$/;"	m	struct:Command	file:
mon_backtrace	kern/monitor.c	/^mon_backtrace(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_help	kern/monitor.c	/^mon_help(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_kerninfo	kern/monitor.c	/^mon_kerninfo(int argc, char **argv, struct Trapframe *tf)$/;"	f
monitor	kern/monitor.c	/^monitor(struct Trapframe *tf)$/;"	f
name	kern/monitor.c	/^	const char *name;$/;"	m	struct:Command	file:
runcmd	kern/monitor.c	/^runcmd(char *buf, struct Trapframe *tf)$/;"	f	file:
JOS_KERN_MONITOR_H	kern/monitor.h	2;"	d
MPBUS	kern/mpconfig.c	67;"	d	file:
MPIOAPIC	kern/mpconfig.c	68;"	d	file:
MPIOINTR	kern/mpconfig.c	69;"	d	file:
MPLINTR	kern/mpconfig.c	70;"	d	file:
MPPROC	kern/mpconfig.c	66;"	d	file:
MPPROC_BOOT	kern/mpconfig.c	63;"	d	file:
apicid	kern/mpconfig.c	/^	uint8_t apicid;                 \/\/ local APIC id$/;"	m	struct:mpproc	file:
bootcpu	kern/mpconfig.c	/^struct CpuInfo *bootcpu;$/;"	v	typeref:struct:CpuInfo
checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mp	file:
checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mpconf	file:
cpus	kern/mpconfig.c	/^struct CpuInfo cpus[NCPU];$/;"	v	typeref:struct:CpuInfo
entries	kern/mpconfig.c	/^	uint8_t entries[0];             \/\/ table entries$/;"	m	struct:mpconf	file:
entry	kern/mpconfig.c	/^	uint16_t entry;                 \/\/ entry count$/;"	m	struct:mpconf	file:
feature	kern/mpconfig.c	/^	uint32_t feature;               \/\/ feature flags from CPUID instruction$/;"	m	struct:mpproc	file:
flags	kern/mpconfig.c	/^	uint8_t flags;                  \/\/ CPU flags$/;"	m	struct:mpproc	file:
imcrp	kern/mpconfig.c	/^	uint8_t imcrp;$/;"	m	struct:mp	file:
ismp	kern/mpconfig.c	/^int ismp;$/;"	v
lapicaddr	kern/mpconfig.c	/^	physaddr_t lapicaddr;           \/\/ address of local APIC$/;"	m	struct:mpconf	file:
length	kern/mpconfig.c	/^	uint16_t length;                \/\/ total table length$/;"	m	struct:mpconf	file:
length	kern/mpconfig.c	/^	uint8_t length;                 \/\/ 1$/;"	m	struct:mp	file:
mp	kern/mpconfig.c	/^struct mp {             \/\/ floating pointer [MP 4.1]$/;"	s	file:
mp_init	kern/mpconfig.c	/^mp_init(void)$/;"	f
mpconf	kern/mpconfig.c	/^struct mpconf {         \/\/ configuration table header [MP 4.2]$/;"	s	file:
mpconfig	kern/mpconfig.c	/^mpconfig(struct mp **pmp)$/;"	f	file:
mpproc	kern/mpconfig.c	/^struct mpproc {         \/\/ processor table entry [MP 4.3.1]$/;"	s	file:
mpsearch	kern/mpconfig.c	/^mpsearch(void)$/;"	f	file:
mpsearch1	kern/mpconfig.c	/^mpsearch1(physaddr_t a, int len)$/;"	f	file:
ncpu	kern/mpconfig.c	/^int ncpu;$/;"	v
oemlength	kern/mpconfig.c	/^	uint16_t oemlength;             \/\/ OEM table length$/;"	m	struct:mpconf	file:
oemtable	kern/mpconfig.c	/^	physaddr_t oemtable;            \/\/ OEM table pointer$/;"	m	struct:mpconf	file:
percpu_kstacks	kern/mpconfig.c	/^unsigned char percpu_kstacks[NCPU][KSTKSIZE]$/;"	v
physaddr	kern/mpconfig.c	/^	physaddr_t physaddr;            \/\/ phys addr of MP config table$/;"	m	struct:mp	file:
product	kern/mpconfig.c	/^	uint8_t product[20];            \/\/ product id$/;"	m	struct:mpconf	file:
reserved	kern/mpconfig.c	/^	uint8_t reserved;$/;"	m	struct:mpconf	file:
reserved	kern/mpconfig.c	/^	uint8_t reserved[3];$/;"	m	struct:mp	file:
reserved	kern/mpconfig.c	/^	uint8_t reserved[8];$/;"	m	struct:mpproc	file:
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "PCMP"$/;"	m	struct:mpconf	file:
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "_MP_"$/;"	m	struct:mp	file:
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ CPU signature$/;"	m	struct:mpproc	file:
specrev	kern/mpconfig.c	/^	uint8_t specrev;                \/\/ [14]$/;"	m	struct:mp	file:
sum	kern/mpconfig.c	/^sum(void *addr, int len)$/;"	f	file:
type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ MP system config type$/;"	m	struct:mp	file:
type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ entry type (0)$/;"	m	struct:mpproc	file:
version	kern/mpconfig.c	/^	uint8_t version;                \/\/ [14]$/;"	m	struct:mpconf	file:
version	kern/mpconfig.c	/^	uint8_t version;                \/\/ local APIC version$/;"	m	struct:mpproc	file:
xchecksum	kern/mpconfig.c	/^	uint8_t xchecksum;              \/\/ extended table checksum$/;"	m	struct:mpconf	file:
xlength	kern/mpconfig.c	/^	uint16_t xlength;               \/\/ extended table length$/;"	m	struct:mpconf	file:
MPBOOTPHYS	kern/mpentry.S	/^#define MPBOOTPHYS(s) ((s) - mpentry_start + MPENTRY_PADDR)$/;"	d
RELOC	kern/mpentry.S	/^#define RELOC(x) ((x) - KERNBASE)$/;"	d
gdt	kern/mpentry.S	/^gdt:$/;"	l
gdtdesc	kern/mpentry.S	/^gdtdesc:$/;"	l
mpentry_end	kern/mpentry.S	/^mpentry_end:$/;"	l
mpentry_start	kern/mpentry.S	/^mpentry_start:$/;"	l
spin	kern/mpentry.S	/^spin:$/;"	l
start32	kern/mpentry.S	/^start32:$/;"	l
attachfn	kern/pci.c	/^	int (*attachfn) (struct pci_func *pcif);$/;"	m	struct:pci_driver	file:
key1	kern/pci.c	/^	uint32_t key1, key2;$/;"	m	struct:pci_driver	file:
key2	kern/pci.c	/^	uint32_t key1, key2;$/;"	m	struct:pci_driver	file:
pci_attach	kern/pci.c	/^pci_attach(struct pci_func *f)$/;"	f	file:
pci_attach_class	kern/pci.c	/^struct pci_driver pci_attach_class[] = {$/;"	v	typeref:struct:pci_driver
pci_attach_match	kern/pci.c	/^pci_attach_match(uint32_t key1, uint32_t key2,$/;"	f	file:
pci_attach_vendor	kern/pci.c	/^struct pci_driver pci_attach_vendor[] = {$/;"	v	typeref:struct:pci_driver
pci_bridge_attach	kern/pci.c	/^pci_bridge_attach(struct pci_func *pcif)$/;"	f	file:
pci_class	kern/pci.c	/^static const char *pci_class[] =$/;"	v	file:
pci_conf1_addr_ioport	kern/pci.c	/^static uint32_t pci_conf1_addr_ioport = 0x0cf8;$/;"	v	file:
pci_conf1_data_ioport	kern/pci.c	/^static uint32_t pci_conf1_data_ioport = 0x0cfc;$/;"	v	file:
pci_conf1_set_addr	kern/pci.c	/^pci_conf1_set_addr(uint32_t bus,$/;"	f	file:
pci_conf_read	kern/pci.c	/^pci_conf_read(struct pci_func *f, uint32_t off)$/;"	f	file:
pci_conf_write	kern/pci.c	/^pci_conf_write(struct pci_func *f, uint32_t off, uint32_t v)$/;"	f	file:
pci_driver	kern/pci.c	/^struct pci_driver {$/;"	s	file:
pci_func_enable	kern/pci.c	/^pci_func_enable(struct pci_func *f)$/;"	f
pci_init	kern/pci.c	/^pci_init(void)$/;"	f
pci_print_func	kern/pci.c	/^pci_print_func(struct pci_func *f)$/;"	f	file:
pci_scan_bus	kern/pci.c	/^pci_scan_bus(struct pci_bus *bus)$/;"	f	file:
pci_show_addrs	kern/pci.c	/^static int pci_show_addrs = 0;$/;"	v	file:
pci_show_devs	kern/pci.c	/^static int pci_show_devs = 1;$/;"	v	file:
JOS_KERN_PCI_H	kern/pci.h	2;"	d
bus	kern/pci.h	/^    struct pci_bus *bus;	\/\/ Primary bus for bridges$/;"	m	struct:pci_func	typeref:struct:pci_func::pci_bus
busno	kern/pci.h	/^    uint32_t busno;$/;"	m	struct:pci_bus
dev	kern/pci.h	/^    uint32_t dev;$/;"	m	struct:pci_func
dev_class	kern/pci.h	/^    uint32_t dev_class;$/;"	m	struct:pci_func
dev_id	kern/pci.h	/^    uint32_t dev_id;$/;"	m	struct:pci_func
func	kern/pci.h	/^    uint32_t func;$/;"	m	struct:pci_func
irq_line	kern/pci.h	/^    uint8_t irq_line;$/;"	m	struct:pci_func
parent_bridge	kern/pci.h	/^    struct pci_func *parent_bridge;$/;"	m	struct:pci_bus	typeref:struct:pci_bus::pci_func
pci_bus	kern/pci.h	/^struct pci_bus {$/;"	s
pci_func	kern/pci.h	/^struct pci_func {$/;"	s
pci_res_bus	kern/pci.h	/^enum { pci_res_bus, pci_res_mem, pci_res_io, pci_res_max };$/;"	e	enum:__anon36
pci_res_io	kern/pci.h	/^enum { pci_res_bus, pci_res_mem, pci_res_io, pci_res_max };$/;"	e	enum:__anon36
pci_res_max	kern/pci.h	/^enum { pci_res_bus, pci_res_mem, pci_res_io, pci_res_max };$/;"	e	enum:__anon36
pci_res_mem	kern/pci.h	/^enum { pci_res_bus, pci_res_mem, pci_res_io, pci_res_max };$/;"	e	enum:__anon36
reg_base	kern/pci.h	/^    uint32_t reg_base[6];$/;"	m	struct:pci_func
reg_size	kern/pci.h	/^    uint32_t reg_size[6];$/;"	m	struct:pci_func
PCI32_DMA_BOUNCE_THRESHOLD	kern/pcireg.h	708;"	d
PCI_BHLC_CODE	kern/pcireg.h	329;"	d
PCI_BHLC_REG	kern/pcireg.h	302;"	d
PCI_BIST	kern/pcireg.h	306;"	d
PCI_BIST_MASK	kern/pcireg.h	305;"	d
PCI_BIST_SHIFT	kern/pcireg.h	304;"	d
PCI_BRIDGE_BUS_PRIMARY_SHIFT	kern/pcireg.h	590;"	d
PCI_BRIDGE_BUS_REG	kern/pcireg.h	589;"	d
PCI_BRIDGE_BUS_SECONDARY_SHIFT	kern/pcireg.h	591;"	d
PCI_BRIDGE_BUS_SUBORDINATE_SHIFT	kern/pcireg.h	592;"	d
PCI_BRIDGE_CONTROL_DISC_TIMER_SERR	kern/pcireg.h	639;"	d
PCI_BRIDGE_CONTROL_DISC_TIMER_STAT	kern/pcireg.h	638;"	d
PCI_BRIDGE_CONTROL_ISA	kern/pcireg.h	630;"	d
PCI_BRIDGE_CONTROL_MABRT	kern/pcireg.h	633;"	d
PCI_BRIDGE_CONTROL_MASK	kern/pcireg.h	627;"	d
PCI_BRIDGE_CONTROL_PERE	kern/pcireg.h	628;"	d
PCI_BRIDGE_CONTROL_PRI_DISC_TIMER	kern/pcireg.h	636;"	d
PCI_BRIDGE_CONTROL_REG	kern/pcireg.h	625;"	d
PCI_BRIDGE_CONTROL_SECBR	kern/pcireg.h	634;"	d
PCI_BRIDGE_CONTROL_SECFASTB2B	kern/pcireg.h	635;"	d
PCI_BRIDGE_CONTROL_SEC_DISC_TIMER	kern/pcireg.h	637;"	d
PCI_BRIDGE_CONTROL_SERR	kern/pcireg.h	629;"	d
PCI_BRIDGE_CONTROL_SHIFT	kern/pcireg.h	626;"	d
PCI_BRIDGE_CONTROL_VGA	kern/pcireg.h	631;"	d
PCI_BRIDGE_IOHIGH_BASE_MASK	kern/pcireg.h	622;"	d
PCI_BRIDGE_IOHIGH_BASE_SHIFT	kern/pcireg.h	620;"	d
PCI_BRIDGE_IOHIGH_LIMIT_MASK	kern/pcireg.h	623;"	d
PCI_BRIDGE_IOHIGH_LIMIT_SHIFT	kern/pcireg.h	621;"	d
PCI_BRIDGE_IOHIGH_REG	kern/pcireg.h	619;"	d
PCI_BRIDGE_IO_32BITS	kern/pcireg.h	601;"	d
PCI_BRIDGE_MEMORY_BASE_MASK	kern/pcireg.h	606;"	d
PCI_BRIDGE_MEMORY_BASE_SHIFT	kern/pcireg.h	604;"	d
PCI_BRIDGE_MEMORY_LIMIT_MASK	kern/pcireg.h	607;"	d
PCI_BRIDGE_MEMORY_LIMIT_SHIFT	kern/pcireg.h	605;"	d
PCI_BRIDGE_MEMORY_REG	kern/pcireg.h	603;"	d
PCI_BRIDGE_PREFETCHBASE32_REG	kern/pcireg.h	616;"	d
PCI_BRIDGE_PREFETCHLIMIT32_REG	kern/pcireg.h	617;"	d
PCI_BRIDGE_PREFETCHMEM_64BITS	kern/pcireg.h	614;"	d
PCI_BRIDGE_PREFETCHMEM_BASE_MASK	kern/pcireg.h	612;"	d
PCI_BRIDGE_PREFETCHMEM_BASE_SHIFT	kern/pcireg.h	610;"	d
PCI_BRIDGE_PREFETCHMEM_LIMIT_MASK	kern/pcireg.h	613;"	d
PCI_BRIDGE_PREFETCHMEM_LIMIT_SHIFT	kern/pcireg.h	611;"	d
PCI_BRIDGE_PREFETCHMEM_REG	kern/pcireg.h	609;"	d
PCI_BRIDGE_STATIO_IOBASE_MASK	kern/pcireg.h	598;"	d
PCI_BRIDGE_STATIO_IOBASE_SHIFT	kern/pcireg.h	595;"	d
PCI_BRIDGE_STATIO_IOLIMIT_MASK	kern/pcireg.h	599;"	d
PCI_BRIDGE_STATIO_IOLIMIT_SHIFT	kern/pcireg.h	596;"	d
PCI_BRIDGE_STATIO_REG	kern/pcireg.h	594;"	d
PCI_BRIDGE_STATIO_STATUS_MASK	kern/pcireg.h	600;"	d
PCI_BRIDGE_STATIO_STATUS_SHIFT	kern/pcireg.h	597;"	d
PCI_CACHELINE	kern/pcireg.h	326;"	d
PCI_CACHELINE_MASK	kern/pcireg.h	325;"	d
PCI_CACHELINE_SHIFT	kern/pcireg.h	324;"	d
PCI_CAPLISTPTR_REG	kern/pcireg.h	412;"	d
PCI_CAPLIST_CAP	kern/pcireg.h	416;"	d
PCI_CAPLIST_NEXT	kern/pcireg.h	415;"	d
PCI_CAPLIST_PTR	kern/pcireg.h	414;"	d
PCI_CAP_AGP	kern/pcireg.h	420;"	d
PCI_CAP_AGP8	kern/pcireg.h	433;"	d
PCI_CAP_AGP_MAJOR	kern/pcireg.h	421;"	d
PCI_CAP_AGP_MINOR	kern/pcireg.h	422;"	d
PCI_CAP_CPCI_HOTSWAP	kern/pcireg.h	426;"	d
PCI_CAP_CPCI_RSRCCTL	kern/pcireg.h	431;"	d
PCI_CAP_DEBUGPORT	kern/pcireg.h	430;"	d
PCI_CAP_HOTPLUG	kern/pcireg.h	432;"	d
PCI_CAP_LDT	kern/pcireg.h	428;"	d
PCI_CAP_MSI	kern/pcireg.h	425;"	d
PCI_CAP_MSIX	kern/pcireg.h	436;"	d
PCI_CAP_PCIEXPRESS	kern/pcireg.h	435;"	d
PCI_CAP_PCIX	kern/pcireg.h	427;"	d
PCI_CAP_PWRMGMT	kern/pcireg.h	419;"	d
PCI_CAP_RESERVED0	kern/pcireg.h	418;"	d
PCI_CAP_SECURE	kern/pcireg.h	434;"	d
PCI_CAP_SLOTID	kern/pcireg.h	424;"	d
PCI_CAP_VENDSPEC	kern/pcireg.h	429;"	d
PCI_CAP_VPD	kern/pcireg.h	423;"	d
PCI_CARDBUS_CAPLISTPTR_REG	kern/pcireg.h	413;"	d
PCI_CARDBUS_CIS_REG	kern/pcireg.h	400;"	d
PCI_CLASS	kern/pcireg.h	118;"	d
PCI_CLASS_BRIDGE	kern/pcireg.h	148;"	d
PCI_CLASS_CODE	kern/pcireg.h	136;"	d
PCI_CLASS_COMMUNICATIONS	kern/pcireg.h	149;"	d
PCI_CLASS_CRYPTO	kern/pcireg.h	158;"	d
PCI_CLASS_DASP	kern/pcireg.h	159;"	d
PCI_CLASS_DISPLAY	kern/pcireg.h	145;"	d
PCI_CLASS_DOCK	kern/pcireg.h	152;"	d
PCI_CLASS_I2O	kern/pcireg.h	156;"	d
PCI_CLASS_INPUT	kern/pcireg.h	151;"	d
PCI_CLASS_MASK	kern/pcireg.h	117;"	d
PCI_CLASS_MASS_STORAGE	kern/pcireg.h	143;"	d
PCI_CLASS_MEMORY	kern/pcireg.h	147;"	d
PCI_CLASS_MULTIMEDIA	kern/pcireg.h	146;"	d
PCI_CLASS_NETWORK	kern/pcireg.h	144;"	d
PCI_CLASS_PREHISTORIC	kern/pcireg.h	142;"	d
PCI_CLASS_PROCESSOR	kern/pcireg.h	153;"	d
PCI_CLASS_REG	kern/pcireg.h	109;"	d
PCI_CLASS_SATCOM	kern/pcireg.h	157;"	d
PCI_CLASS_SERIALBUS	kern/pcireg.h	154;"	d
PCI_CLASS_SHIFT	kern/pcireg.h	116;"	d
PCI_CLASS_SYSTEM	kern/pcireg.h	150;"	d
PCI_CLASS_UNDEFINED	kern/pcireg.h	160;"	d
PCI_CLASS_WIRELESS	kern/pcireg.h	155;"	d
PCI_COMMAND_BACKTOBACK_ENABLE	kern/pcireg.h	89;"	d
PCI_COMMAND_INVALIDATE_ENABLE	kern/pcireg.h	84;"	d
PCI_COMMAND_IO_ENABLE	kern/pcireg.h	80;"	d
PCI_COMMAND_MASK	kern/pcireg.h	72;"	d
PCI_COMMAND_MASTER_ENABLE	kern/pcireg.h	82;"	d
PCI_COMMAND_MEM_ENABLE	kern/pcireg.h	81;"	d
PCI_COMMAND_PALETTE_ENABLE	kern/pcireg.h	85;"	d
PCI_COMMAND_PARITY_ENABLE	kern/pcireg.h	86;"	d
PCI_COMMAND_SERR_ENABLE	kern/pcireg.h	88;"	d
PCI_COMMAND_SHIFT	kern/pcireg.h	71;"	d
PCI_COMMAND_SPECIAL_ENABLE	kern/pcireg.h	83;"	d
PCI_COMMAND_STATUS_CODE	kern/pcireg.h	76;"	d
PCI_COMMAND_STATUS_REG	kern/pcireg.h	70;"	d
PCI_COMMAND_STEPPING_ENABLE	kern/pcireg.h	87;"	d
PCI_HDRTYPE	kern/pcireg.h	311;"	d
PCI_HDRTYPE_DEVICE	kern/pcireg.h	339;"	d
PCI_HDRTYPE_MASK	kern/pcireg.h	310;"	d
PCI_HDRTYPE_MULTIFN	kern/pcireg.h	316;"	d
PCI_HDRTYPE_PCB	kern/pcireg.h	341;"	d
PCI_HDRTYPE_PPB	kern/pcireg.h	340;"	d
PCI_HDRTYPE_SHIFT	kern/pcireg.h	309;"	d
PCI_HDRTYPE_TYPE	kern/pcireg.h	314;"	d
PCI_ID_CODE	kern/pcireg.h	63;"	d
PCI_ID_REG	kern/pcireg.h	48;"	d
PCI_INTERFACE	kern/pcireg.h	128;"	d
PCI_INTERFACE_MASK	kern/pcireg.h	127;"	d
PCI_INTERFACE_SHIFT	kern/pcireg.h	126;"	d
PCI_INTERRUPT_CODE	kern/pcireg.h	575;"	d
PCI_INTERRUPT_GRANT	kern/pcireg.h	557;"	d
PCI_INTERRUPT_GRANT_MASK	kern/pcireg.h	556;"	d
PCI_INTERRUPT_GRANT_SHIFT	kern/pcireg.h	555;"	d
PCI_INTERRUPT_LATENCY	kern/pcireg.h	562;"	d
PCI_INTERRUPT_LATENCY_MASK	kern/pcireg.h	561;"	d
PCI_INTERRUPT_LATENCY_SHIFT	kern/pcireg.h	560;"	d
PCI_INTERRUPT_LINE	kern/pcireg.h	572;"	d
PCI_INTERRUPT_LINE_MASK	kern/pcireg.h	571;"	d
PCI_INTERRUPT_LINE_SHIFT	kern/pcireg.h	570;"	d
PCI_INTERRUPT_PIN	kern/pcireg.h	567;"	d
PCI_INTERRUPT_PIN_A	kern/pcireg.h	582;"	d
PCI_INTERRUPT_PIN_B	kern/pcireg.h	583;"	d
PCI_INTERRUPT_PIN_C	kern/pcireg.h	584;"	d
PCI_INTERRUPT_PIN_D	kern/pcireg.h	585;"	d
PCI_INTERRUPT_PIN_MASK	kern/pcireg.h	566;"	d
PCI_INTERRUPT_PIN_MAX	kern/pcireg.h	586;"	d
PCI_INTERRUPT_PIN_NONE	kern/pcireg.h	581;"	d
PCI_INTERRUPT_PIN_SHIFT	kern/pcireg.h	565;"	d
PCI_INTERRUPT_REG	kern/pcireg.h	538;"	d
PCI_LATTIMER	kern/pcireg.h	321;"	d
PCI_LATTIMER_MASK	kern/pcireg.h	320;"	d
PCI_LATTIMER_SHIFT	kern/pcireg.h	319;"	d
PCI_MAPREG_END	kern/pcireg.h	347;"	d
PCI_MAPREG_IO_ADDR	kern/pcireg.h	384;"	d
PCI_MAPREG_IO_ADDR_MASK	kern/pcireg.h	388;"	d
PCI_MAPREG_IO_SIZE	kern/pcireg.h	386;"	d
PCI_MAPREG_MEM64_ADDR	kern/pcireg.h	378;"	d
PCI_MAPREG_MEM64_ADDR_MASK	kern/pcireg.h	382;"	d
PCI_MAPREG_MEM64_SIZE	kern/pcireg.h	380;"	d
PCI_MAPREG_MEM_ADDR	kern/pcireg.h	372;"	d
PCI_MAPREG_MEM_ADDR_MASK	kern/pcireg.h	376;"	d
PCI_MAPREG_MEM_PREFETCHABLE	kern/pcireg.h	368;"	d
PCI_MAPREG_MEM_PREFETCHABLE_MASK	kern/pcireg.h	370;"	d
PCI_MAPREG_MEM_SIZE	kern/pcireg.h	374;"	d
PCI_MAPREG_MEM_TYPE	kern/pcireg.h	360;"	d
PCI_MAPREG_MEM_TYPE_32BIT	kern/pcireg.h	364;"	d
PCI_MAPREG_MEM_TYPE_32BIT_1M	kern/pcireg.h	365;"	d
PCI_MAPREG_MEM_TYPE_64BIT	kern/pcireg.h	366;"	d
PCI_MAPREG_MEM_TYPE_MASK	kern/pcireg.h	362;"	d
PCI_MAPREG_NUM	kern/pcireg.h	393;"	d
PCI_MAPREG_PCB_END	kern/pcireg.h	350;"	d
PCI_MAPREG_PPB_END	kern/pcireg.h	349;"	d
PCI_MAPREG_ROM	kern/pcireg.h	348;"	d
PCI_MAPREG_ROM_ENABLE	kern/pcireg.h	358;"	d
PCI_MAPREG_SIZE_TO_MASK	kern/pcireg.h	390;"	d
PCI_MAPREG_START	kern/pcireg.h	346;"	d
PCI_MAPREG_TYPE	kern/pcireg.h	352;"	d
PCI_MAPREG_TYPE_IO	kern/pcireg.h	357;"	d
PCI_MAPREG_TYPE_MASK	kern/pcireg.h	354;"	d
PCI_MAPREG_TYPE_MEM	kern/pcireg.h	356;"	d
PCI_MAX_LAT	kern/pcireg.h	547;"	d
PCI_MAX_LAT_MASK	kern/pcireg.h	546;"	d
PCI_MAX_LAT_SHIFT	kern/pcireg.h	545;"	d
PCI_MIN_GNT	kern/pcireg.h	552;"	d
PCI_MIN_GNT_MASK	kern/pcireg.h	551;"	d
PCI_MIN_GNT_SHIFT	kern/pcireg.h	550;"	d
PCI_PCIX_CMD	kern/pcireg.h	477;"	d
PCI_PCIX_CMD_BCNT_1024	kern/pcireg.h	483;"	d
PCI_PCIX_CMD_BCNT_2048	kern/pcireg.h	484;"	d
PCI_PCIX_CMD_BCNT_4096	kern/pcireg.h	485;"	d
PCI_PCIX_CMD_BCNT_512	kern/pcireg.h	482;"	d
PCI_PCIX_CMD_BYTECNT_MASK	kern/pcireg.h	480;"	d
PCI_PCIX_CMD_BYTECNT_SHIFT	kern/pcireg.h	481;"	d
PCI_PCIX_CMD_PERR_RECOVER	kern/pcireg.h	478;"	d
PCI_PCIX_CMD_RELAXED_ORDER	kern/pcireg.h	479;"	d
PCI_PCIX_CMD_SPLTRANS_1	kern/pcireg.h	487;"	d
PCI_PCIX_CMD_SPLTRANS_12	kern/pcireg.h	492;"	d
PCI_PCIX_CMD_SPLTRANS_16	kern/pcireg.h	493;"	d
PCI_PCIX_CMD_SPLTRANS_2	kern/pcireg.h	488;"	d
PCI_PCIX_CMD_SPLTRANS_3	kern/pcireg.h	489;"	d
PCI_PCIX_CMD_SPLTRANS_32	kern/pcireg.h	494;"	d
PCI_PCIX_CMD_SPLTRANS_4	kern/pcireg.h	490;"	d
PCI_PCIX_CMD_SPLTRANS_8	kern/pcireg.h	491;"	d
PCI_PCIX_CMD_SPLTRANS_MASK	kern/pcireg.h	486;"	d
PCI_PCIX_STATUS	kern/pcireg.h	499;"	d
PCI_PCIX_STATUS_133	kern/pcireg.h	504;"	d
PCI_PCIX_STATUS_64BIT	kern/pcireg.h	503;"	d
PCI_PCIX_STATUS_BUS_MASK	kern/pcireg.h	502;"	d
PCI_PCIX_STATUS_DEVCPLX	kern/pcireg.h	507;"	d
PCI_PCIX_STATUS_DEV_MASK	kern/pcireg.h	501;"	d
PCI_PCIX_STATUS_FN_MASK	kern/pcireg.h	500;"	d
PCI_PCIX_STATUS_MAXB_1024	kern/pcireg.h	511;"	d
PCI_PCIX_STATUS_MAXB_2048	kern/pcireg.h	512;"	d
PCI_PCIX_STATUS_MAXB_4096	kern/pcireg.h	513;"	d
PCI_PCIX_STATUS_MAXB_512	kern/pcireg.h	510;"	d
PCI_PCIX_STATUS_MAXB_MASK	kern/pcireg.h	508;"	d
PCI_PCIX_STATUS_MAXB_SHIFT	kern/pcireg.h	509;"	d
PCI_PCIX_STATUS_MAXRS_128K	kern/pcireg.h	531;"	d
PCI_PCIX_STATUS_MAXRS_16K	kern/pcireg.h	528;"	d
PCI_PCIX_STATUS_MAXRS_1K	kern/pcireg.h	524;"	d
PCI_PCIX_STATUS_MAXRS_2K	kern/pcireg.h	525;"	d
PCI_PCIX_STATUS_MAXRS_32K	kern/pcireg.h	529;"	d
PCI_PCIX_STATUS_MAXRS_4K	kern/pcireg.h	526;"	d
PCI_PCIX_STATUS_MAXRS_64K	kern/pcireg.h	530;"	d
PCI_PCIX_STATUS_MAXRS_8K	kern/pcireg.h	527;"	d
PCI_PCIX_STATUS_MAXRS_MASK	kern/pcireg.h	523;"	d
PCI_PCIX_STATUS_MAXST_1	kern/pcireg.h	515;"	d
PCI_PCIX_STATUS_MAXST_12	kern/pcireg.h	520;"	d
PCI_PCIX_STATUS_MAXST_16	kern/pcireg.h	521;"	d
PCI_PCIX_STATUS_MAXST_2	kern/pcireg.h	516;"	d
PCI_PCIX_STATUS_MAXST_3	kern/pcireg.h	517;"	d
PCI_PCIX_STATUS_MAXST_32	kern/pcireg.h	522;"	d
PCI_PCIX_STATUS_MAXST_4	kern/pcireg.h	518;"	d
PCI_PCIX_STATUS_MAXST_8	kern/pcireg.h	519;"	d
PCI_PCIX_STATUS_MAXST_MASK	kern/pcireg.h	514;"	d
PCI_PCIX_STATUS_SCERR	kern/pcireg.h	532;"	d
PCI_PCIX_STATUS_SPLDISC	kern/pcireg.h	505;"	d
PCI_PCIX_STATUS_SPLUNEX	kern/pcireg.h	506;"	d
PCI_PMCR	kern/pcireg.h	453;"	d
PCI_PMCR_D1SUPP	kern/pcireg.h	454;"	d
PCI_PMCR_D2SUPP	kern/pcireg.h	455;"	d
PCI_PMCSR	kern/pcireg.h	457;"	d
PCI_PMCSR_STATE_D0	kern/pcireg.h	459;"	d
PCI_PMCSR_STATE_D1	kern/pcireg.h	460;"	d
PCI_PMCSR_STATE_D2	kern/pcireg.h	461;"	d
PCI_PMCSR_STATE_D3	kern/pcireg.h	462;"	d
PCI_PMCSR_STATE_MASK	kern/pcireg.h	458;"	d
PCI_PRODUCT	kern/pcireg.h	60;"	d
PCI_PRODUCT_MASK	kern/pcireg.h	59;"	d
PCI_PRODUCT_SHIFT	kern/pcireg.h	58;"	d
PCI_REVISION	kern/pcireg.h	133;"	d
PCI_REVISION_MASK	kern/pcireg.h	132;"	d
PCI_REVISION_SHIFT	kern/pcireg.h	131;"	d
PCI_STATUS_66MHZ_SUPPORT	kern/pcireg.h	92;"	d
PCI_STATUS_BACKTOBACK_SUPPORT	kern/pcireg.h	94;"	d
PCI_STATUS_CAPLIST_SUPPORT	kern/pcireg.h	91;"	d
PCI_STATUS_DEVSEL_FAST	kern/pcireg.h	96;"	d
PCI_STATUS_DEVSEL_MASK	kern/pcireg.h	99;"	d
PCI_STATUS_DEVSEL_MEDIUM	kern/pcireg.h	97;"	d
PCI_STATUS_DEVSEL_SLOW	kern/pcireg.h	98;"	d
PCI_STATUS_MASK	kern/pcireg.h	74;"	d
PCI_STATUS_MASTER_ABORT	kern/pcireg.h	102;"	d
PCI_STATUS_MASTER_TARGET_ABORT	kern/pcireg.h	101;"	d
PCI_STATUS_PARITY_DETECT	kern/pcireg.h	104;"	d
PCI_STATUS_PARITY_ERROR	kern/pcireg.h	95;"	d
PCI_STATUS_SHIFT	kern/pcireg.h	73;"	d
PCI_STATUS_SPECIAL_ERROR	kern/pcireg.h	103;"	d
PCI_STATUS_TARGET_TARGET_ABORT	kern/pcireg.h	100;"	d
PCI_STATUS_UDF_SUPPORT	kern/pcireg.h	93;"	d
PCI_SUBCLASS	kern/pcireg.h	123;"	d
PCI_SUBCLASS_BRIDGE_CARDBUS	kern/pcireg.h	211;"	d
PCI_SUBCLASS_BRIDGE_EISA	kern/pcireg.h	206;"	d
PCI_SUBCLASS_BRIDGE_HOST	kern/pcireg.h	204;"	d
PCI_SUBCLASS_BRIDGE_INFINIBAND	kern/pcireg.h	214;"	d
PCI_SUBCLASS_BRIDGE_ISA	kern/pcireg.h	205;"	d
PCI_SUBCLASS_BRIDGE_MC	kern/pcireg.h	207;"	d
PCI_SUBCLASS_BRIDGE_MISC	kern/pcireg.h	215;"	d
PCI_SUBCLASS_BRIDGE_NUBUS	kern/pcireg.h	210;"	d
PCI_SUBCLASS_BRIDGE_PCI	kern/pcireg.h	208;"	d
PCI_SUBCLASS_BRIDGE_PCMCIA	kern/pcireg.h	209;"	d
PCI_SUBCLASS_BRIDGE_RACEWAY	kern/pcireg.h	212;"	d
PCI_SUBCLASS_BRIDGE_STPCI	kern/pcireg.h	213;"	d
PCI_SUBCLASS_COMMUNICATIONS_GPIB	kern/pcireg.h	222;"	d
PCI_SUBCLASS_COMMUNICATIONS_MISC	kern/pcireg.h	224;"	d
PCI_SUBCLASS_COMMUNICATIONS_MODEM	kern/pcireg.h	221;"	d
PCI_SUBCLASS_COMMUNICATIONS_MPSERIAL	kern/pcireg.h	220;"	d
PCI_SUBCLASS_COMMUNICATIONS_PARALLEL	kern/pcireg.h	219;"	d
PCI_SUBCLASS_COMMUNICATIONS_SERIAL	kern/pcireg.h	218;"	d
PCI_SUBCLASS_COMMUNICATIONS_SMARTCARD	kern/pcireg.h	223;"	d
PCI_SUBCLASS_CRYPTO_ENTERTAINMENT	kern/pcireg.h	289;"	d
PCI_SUBCLASS_CRYPTO_MISC	kern/pcireg.h	290;"	d
PCI_SUBCLASS_CRYPTO_NETCOMP	kern/pcireg.h	288;"	d
PCI_SUBCLASS_DASP_DPIO	kern/pcireg.h	293;"	d
PCI_SUBCLASS_DASP_MGMT	kern/pcireg.h	296;"	d
PCI_SUBCLASS_DASP_MISC	kern/pcireg.h	297;"	d
PCI_SUBCLASS_DASP_SYNC	kern/pcireg.h	295;"	d
PCI_SUBCLASS_DASP_TIMEFREQ	kern/pcireg.h	294;"	d
PCI_SUBCLASS_DISPLAY_3D	kern/pcireg.h	189;"	d
PCI_SUBCLASS_DISPLAY_MISC	kern/pcireg.h	190;"	d
PCI_SUBCLASS_DISPLAY_VGA	kern/pcireg.h	187;"	d
PCI_SUBCLASS_DISPLAY_XGA	kern/pcireg.h	188;"	d
PCI_SUBCLASS_DOCK_GENERIC	kern/pcireg.h	243;"	d
PCI_SUBCLASS_DOCK_MISC	kern/pcireg.h	244;"	d
PCI_SUBCLASS_I2O_STANDARD	kern/pcireg.h	278;"	d
PCI_SUBCLASS_INPUT_DIGITIZER	kern/pcireg.h	236;"	d
PCI_SUBCLASS_INPUT_GAMEPORT	kern/pcireg.h	239;"	d
PCI_SUBCLASS_INPUT_KEYBOARD	kern/pcireg.h	235;"	d
PCI_SUBCLASS_INPUT_MISC	kern/pcireg.h	240;"	d
PCI_SUBCLASS_INPUT_MOUSE	kern/pcireg.h	237;"	d
PCI_SUBCLASS_INPUT_SCANNER	kern/pcireg.h	238;"	d
PCI_SUBCLASS_MASK	kern/pcireg.h	122;"	d
PCI_SUBCLASS_MASS_STORAGE_ATA	kern/pcireg.h	172;"	d
PCI_SUBCLASS_MASS_STORAGE_FLOPPY	kern/pcireg.h	169;"	d
PCI_SUBCLASS_MASS_STORAGE_IDE	kern/pcireg.h	168;"	d
PCI_SUBCLASS_MASS_STORAGE_IPI	kern/pcireg.h	170;"	d
PCI_SUBCLASS_MASS_STORAGE_MISC	kern/pcireg.h	174;"	d
PCI_SUBCLASS_MASS_STORAGE_RAID	kern/pcireg.h	171;"	d
PCI_SUBCLASS_MASS_STORAGE_SATA	kern/pcireg.h	173;"	d
PCI_SUBCLASS_MASS_STORAGE_SCSI	kern/pcireg.h	167;"	d
PCI_SUBCLASS_MEMORY_FLASH	kern/pcireg.h	200;"	d
PCI_SUBCLASS_MEMORY_MISC	kern/pcireg.h	201;"	d
PCI_SUBCLASS_MEMORY_RAM	kern/pcireg.h	199;"	d
PCI_SUBCLASS_MULTIMEDIA_AUDIO	kern/pcireg.h	194;"	d
PCI_SUBCLASS_MULTIMEDIA_MISC	kern/pcireg.h	196;"	d
PCI_SUBCLASS_MULTIMEDIA_TELEPHONY	kern/pcireg.h	195;"	d
PCI_SUBCLASS_MULTIMEDIA_VIDEO	kern/pcireg.h	193;"	d
PCI_SUBCLASS_NETWORK_ATM	kern/pcireg.h	180;"	d
PCI_SUBCLASS_NETWORK_ETHERNET	kern/pcireg.h	177;"	d
PCI_SUBCLASS_NETWORK_FDDI	kern/pcireg.h	179;"	d
PCI_SUBCLASS_NETWORK_ISDN	kern/pcireg.h	181;"	d
PCI_SUBCLASS_NETWORK_MISC	kern/pcireg.h	184;"	d
PCI_SUBCLASS_NETWORK_PCIMGMULTICOMP	kern/pcireg.h	183;"	d
PCI_SUBCLASS_NETWORK_TOKENRING	kern/pcireg.h	178;"	d
PCI_SUBCLASS_NETWORK_WORLDFIP	kern/pcireg.h	182;"	d
PCI_SUBCLASS_PREHISTORIC_MISC	kern/pcireg.h	163;"	d
PCI_SUBCLASS_PREHISTORIC_VGA	kern/pcireg.h	164;"	d
PCI_SUBCLASS_PROCESSOR_386	kern/pcireg.h	247;"	d
PCI_SUBCLASS_PROCESSOR_486	kern/pcireg.h	248;"	d
PCI_SUBCLASS_PROCESSOR_ALPHA	kern/pcireg.h	250;"	d
PCI_SUBCLASS_PROCESSOR_COPROC	kern/pcireg.h	253;"	d
PCI_SUBCLASS_PROCESSOR_MIPS	kern/pcireg.h	252;"	d
PCI_SUBCLASS_PROCESSOR_PENTIUM	kern/pcireg.h	249;"	d
PCI_SUBCLASS_PROCESSOR_POWERPC	kern/pcireg.h	251;"	d
PCI_SUBCLASS_SATCOM_AUDIO	kern/pcireg.h	283;"	d
PCI_SUBCLASS_SATCOM_DATA	kern/pcireg.h	285;"	d
PCI_SUBCLASS_SATCOM_TV	kern/pcireg.h	282;"	d
PCI_SUBCLASS_SATCOM_VOICE	kern/pcireg.h	284;"	d
PCI_SUBCLASS_SERIALBUS_ACCESS	kern/pcireg.h	257;"	d
PCI_SUBCLASS_SERIALBUS_CANBUS	kern/pcireg.h	265;"	d
PCI_SUBCLASS_SERIALBUS_FIBER	kern/pcireg.h	260;"	d
PCI_SUBCLASS_SERIALBUS_FIREWIRE	kern/pcireg.h	256;"	d
PCI_SUBCLASS_SERIALBUS_INFINIBAND	kern/pcireg.h	262;"	d
PCI_SUBCLASS_SERIALBUS_IPMI	kern/pcireg.h	263;"	d
PCI_SUBCLASS_SERIALBUS_SERCOS	kern/pcireg.h	264;"	d
PCI_SUBCLASS_SERIALBUS_SMBUS	kern/pcireg.h	261;"	d
PCI_SUBCLASS_SERIALBUS_SSA	kern/pcireg.h	258;"	d
PCI_SUBCLASS_SERIALBUS_USB	kern/pcireg.h	259;"	d
PCI_SUBCLASS_SHIFT	kern/pcireg.h	121;"	d
PCI_SUBCLASS_SYSTEM_DMA	kern/pcireg.h	228;"	d
PCI_SUBCLASS_SYSTEM_MISC	kern/pcireg.h	232;"	d
PCI_SUBCLASS_SYSTEM_PCIHOTPLUG	kern/pcireg.h	231;"	d
PCI_SUBCLASS_SYSTEM_PIC	kern/pcireg.h	227;"	d
PCI_SUBCLASS_SYSTEM_RTC	kern/pcireg.h	230;"	d
PCI_SUBCLASS_SYSTEM_TIMER	kern/pcireg.h	229;"	d
PCI_SUBCLASS_WIRELESS_802_11A	kern/pcireg.h	273;"	d
PCI_SUBCLASS_WIRELESS_802_11B	kern/pcireg.h	274;"	d
PCI_SUBCLASS_WIRELESS_BLUETOOTH	kern/pcireg.h	271;"	d
PCI_SUBCLASS_WIRELESS_BROADBAND	kern/pcireg.h	272;"	d
PCI_SUBCLASS_WIRELESS_CONSUMERIR	kern/pcireg.h	269;"	d
PCI_SUBCLASS_WIRELESS_IRDA	kern/pcireg.h	268;"	d
PCI_SUBCLASS_WIRELESS_MISC	kern/pcireg.h	275;"	d
PCI_SUBCLASS_WIRELESS_RF	kern/pcireg.h	270;"	d
PCI_SUBSYS_ID_REG	kern/pcireg.h	407;"	d
PCI_VENDOR	kern/pcireg.h	55;"	d
PCI_VENDOR_MASK	kern/pcireg.h	54;"	d
PCI_VENDOR_SHIFT	kern/pcireg.h	53;"	d
PCI_VPDRES_ISLARGE	kern/pcireg.h	657;"	d
PCI_VPDRES_LARGE_NAME	kern/pcireg.h	662;"	d
PCI_VPDRES_SMALL_LENGTH	kern/pcireg.h	659;"	d
PCI_VPDRES_SMALL_NAME	kern/pcireg.h	660;"	d
PCI_VPDRES_TYPE_COMPATIBLE_DEVICE_ID	kern/pcireg.h	664;"	d
PCI_VPDRES_TYPE_END_TAG	kern/pcireg.h	666;"	d
PCI_VPDRES_TYPE_IDENTIFIER_STRING	kern/pcireg.h	668;"	d
PCI_VPDRES_TYPE_VENDOR_DEFINED	kern/pcireg.h	665;"	d
PCI_VPDRES_TYPE_VPD	kern/pcireg.h	669;"	d
PCI_VPD_ADDRESS	kern/pcireg.h	443;"	d
PCI_VPD_ADDRESS_MASK	kern/pcireg.h	441;"	d
PCI_VPD_ADDRESS_SHIFT	kern/pcireg.h	442;"	d
PCI_VPD_DATAREG	kern/pcireg.h	445;"	d
PCI_VPD_OPFLAG	kern/pcireg.h	446;"	d
_DEV_PCI_PCIREG_H_	kern/pcireg.h	35;"	d
pci_class_t	kern/pcireg.h	/^typedef uint8_t pci_class_t;$/;"	t
pci_interface_t	kern/pcireg.h	/^typedef uint8_t pci_interface_t;$/;"	t
pci_intr_grant_t	kern/pcireg.h	/^typedef uint8_t pci_intr_grant_t;$/;"	t
pci_intr_latency_t	kern/pcireg.h	/^typedef uint8_t pci_intr_latency_t;$/;"	t
pci_intr_line_t	kern/pcireg.h	/^typedef uint8_t pci_intr_line_t;$/;"	t
pci_intr_pin_t	kern/pcireg.h	/^typedef uint8_t pci_intr_pin_t;$/;"	t
pci_product_id_t	kern/pcireg.h	/^typedef uint16_t pci_product_id_t;$/;"	t
pci_revision_t	kern/pcireg.h	/^typedef uint8_t pci_revision_t;$/;"	t
pci_subclass_t	kern/pcireg.h	/^typedef uint8_t pci_subclass_t;$/;"	t
pci_vendor_id_t	kern/pcireg.h	/^typedef uint16_t pci_vendor_id_t;$/;"	t
pci_vpd	kern/pcireg.h	/^struct pci_vpd {$/;"	s
pci_vpd_largeres	kern/pcireg.h	/^struct pci_vpd_largeres {$/;"	s
pci_vpd_smallres	kern/pcireg.h	/^struct pci_vpd_smallres {$/;"	s
vpd_key0	kern/pcireg.h	/^	uint8_t		vpd_key0;$/;"	m	struct:pci_vpd
vpd_key1	kern/pcireg.h	/^	uint8_t		vpd_key1;$/;"	m	struct:pci_vpd
vpd_len	kern/pcireg.h	/^	uint8_t		vpd_len;		\/* length of data only *\/$/;"	m	struct:pci_vpd
vpdres_byte0	kern/pcireg.h	/^	uint8_t		vpdres_byte0;		\/* length of data + tag *\/$/;"	m	struct:pci_vpd_smallres
vpdres_byte0	kern/pcireg.h	/^	uint8_t		vpdres_byte0;$/;"	m	struct:pci_vpd_largeres
vpdres_len_lsb	kern/pcireg.h	/^	uint8_t		vpdres_len_lsb;		\/* length of data only *\/$/;"	m	struct:pci_vpd_largeres
vpdres_len_msb	kern/pcireg.h	/^	uint8_t		vpdres_len_msb;$/;"	m	struct:pci_vpd_largeres
didinit	kern/picirq.c	/^static bool didinit;$/;"	v	file:
irq_eoi	kern/picirq.c	/^irq_eoi(void)$/;"	f
irq_mask_8259A	kern/picirq.c	/^uint16_t irq_mask_8259A = 0xFFFF & ~(1<<IRQ_SLAVE);$/;"	v
irq_setmask_8259A	kern/picirq.c	/^irq_setmask_8259A(uint16_t mask)$/;"	f
pic_init	kern/picirq.c	/^pic_init(void)$/;"	f
IO_PIC1	kern/picirq.h	12;"	d
IO_PIC2	kern/picirq.h	13;"	d
IRQ_SLAVE	kern/picirq.h	15;"	d
JOS_KERN_PICIRQ_H	kern/picirq.h	4;"	d
MAX_IRQS	kern/picirq.h	9;"	d
boot_alloc	kern/pmap.c	/^boot_alloc(uint32_t n)$/;"	f	file:
boot_map_region	kern/pmap.c	/^boot_map_region(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)$/;"	f	file:
check_kern_pgdir	kern/pmap.c	/^check_kern_pgdir(void)$/;"	f	file:
check_page	kern/pmap.c	/^check_page(void)$/;"	f	file:
check_page_alloc	kern/pmap.c	/^check_page_alloc(void)$/;"	f	file:
check_page_free_list	kern/pmap.c	/^check_page_free_list(bool only_low_memory)$/;"	f	file:
check_page_installed_pgdir	kern/pmap.c	/^check_page_installed_pgdir(void)$/;"	f	file:
check_va2pa	kern/pmap.c	/^check_va2pa(pde_t *pgdir, uintptr_t va)$/;"	f	file:
i386_detect_memory	kern/pmap.c	/^i386_detect_memory(void)$/;"	f	file:
kern_pgdir	kern/pmap.c	/^pde_t *kern_pgdir;		\/\/ Kernel's initial page directory$/;"	v
mem_init	kern/pmap.c	/^mem_init(void)$/;"	f
mem_init_mp	kern/pmap.c	/^mem_init_mp(void)$/;"	f	file:
mmio_map_region	kern/pmap.c	/^mmio_map_region(physaddr_t pa, size_t size)$/;"	f
npages	kern/pmap.c	/^size_t npages;			\/\/ Amount of physical memory (in pages)$/;"	v
npages_basemem	kern/pmap.c	/^static size_t npages_basemem;	\/\/ Amount of base memory (in pages)$/;"	v	file:
nvram_read	kern/pmap.c	/^nvram_read(int r)$/;"	f	file:
page_alloc	kern/pmap.c	/^page_alloc(int alloc_flags)$/;"	f
page_decref	kern/pmap.c	/^page_decref(struct PageInfo* pp)$/;"	f
page_free	kern/pmap.c	/^page_free(struct PageInfo *pp)$/;"	f
page_free_list	kern/pmap.c	/^static struct PageInfo *page_free_list;	\/\/ Free list of physical pages$/;"	v	typeref:struct:PageInfo	file:
page_init	kern/pmap.c	/^page_init(void)$/;"	f
page_insert	kern/pmap.c	/^page_insert(pde_t *pgdir, struct PageInfo *pp, void *va, int perm)$/;"	f
page_lookup	kern/pmap.c	/^page_lookup(pde_t *pgdir, void *va, pte_t **pte_store)$/;"	f
page_remove	kern/pmap.c	/^page_remove(pde_t *pgdir, void *va)$/;"	f
pages	kern/pmap.c	/^struct PageInfo *pages;		\/\/ Physical page state array$/;"	v	typeref:struct:PageInfo
pgdir_walk	kern/pmap.c	/^pgdir_walk(pde_t *pgdir, const void *va, int create)$/;"	f
tlb_invalidate	kern/pmap.c	/^tlb_invalidate(pde_t *pgdir, void *va)$/;"	f
user_mem_assert	kern/pmap.c	/^user_mem_assert(struct Env *env, const void *va, size_t len, int perm)$/;"	f
user_mem_check	kern/pmap.c	/^user_mem_check(struct Env *env, const void *va, size_t len, int perm)$/;"	f
user_mem_check_addr	kern/pmap.c	/^static uintptr_t user_mem_check_addr;$/;"	v	file:
ALLOC_ZERO	kern/pmap.h	/^	ALLOC_ZERO = 1<<0,$/;"	e	enum:__anon35
JOS_KERN_PMAP_H	kern/pmap.h	4;"	d
KADDR	kern/pmap.h	38;"	d
PADDR	kern/pmap.h	26;"	d
_kaddr	kern/pmap.h	/^_kaddr(const char *file, int line, physaddr_t pa)$/;"	f
_paddr	kern/pmap.h	/^_paddr(const char *file, int line, void *kva)$/;"	f
pa2page	kern/pmap.h	/^pa2page(physaddr_t pa)$/;"	f
page2kva	kern/pmap.h	/^page2kva(struct PageInfo *pp)$/;"	f
page2pa	kern/pmap.h	/^page2pa(struct PageInfo *pp)$/;"	f
cprintf	kern/printf.c	/^cprintf(const char *fmt, ...)$/;"	f
putch	kern/printf.c	/^putch(int ch, int *cnt)$/;"	f	file:
vcprintf	kern/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f
sched_halt	kern/sched.c	/^sched_halt(void)$/;"	f
sched_yield	kern/sched.c	/^sched_yield(void)$/;"	f
JOS_KERN_SCHED_H	kern/sched.h	4;"	d
__spin_initlock	kern/spinlock.c	/^__spin_initlock(struct spinlock *lk, char *name)$/;"	f
get_caller_pcs	kern/spinlock.c	/^get_caller_pcs(uint32_t pcs[])$/;"	f	file:
holding	kern/spinlock.c	/^holding(struct spinlock *lock)$/;"	f	file:
kernel_lock	kern/spinlock.c	/^struct spinlock kernel_lock = {$/;"	v	typeref:struct:spinlock
spin_lock	kern/spinlock.c	/^spin_lock(struct spinlock *lk)$/;"	f
spin_unlock	kern/spinlock.c	/^spin_unlock(struct spinlock *lk)$/;"	f
DEBUG_SPINLOCK	kern/spinlock.h	7;"	d
JOS_INC_SPINLOCK_H	kern/spinlock.h	2;"	d
cpu	kern/spinlock.h	/^	struct CpuInfo *cpu;   \/\/ The CPU holding the lock.$/;"	m	struct:spinlock	typeref:struct:spinlock::CpuInfo
lock_kernel	kern/spinlock.h	/^lock_kernel(void)$/;"	f
locked	kern/spinlock.h	/^	unsigned locked;       \/\/ Is the lock held?$/;"	m	struct:spinlock
name	kern/spinlock.h	/^	char *name;            \/\/ Name of lock.$/;"	m	struct:spinlock
pcs	kern/spinlock.h	/^	uintptr_t pcs[10];     \/\/ The call stack (an array of program counters)$/;"	m	struct:spinlock
spin_initlock	kern/spinlock.h	26;"	d
spinlock	kern/spinlock.h	/^struct spinlock {$/;"	s
unlock_kernel	kern/spinlock.h	/^unlock_kernel(void)$/;"	f
sys_cgetc	kern/syscall.c	/^sys_cgetc(void)$/;"	f	file:
sys_cputs	kern/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f	file:
sys_env_destroy	kern/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f	file:
sys_env_set_pgfault_upcall	kern/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *func)$/;"	f	file:
sys_env_set_status	kern/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f	file:
sys_env_set_trapframe	kern/syscall.c	/^sys_env_set_trapframe(envid_t envid, struct Trapframe *tf)$/;"	f	file:
sys_exofork	kern/syscall.c	/^sys_exofork(void)$/;"	f	file:
sys_getenvid	kern/syscall.c	/^sys_getenvid(void)$/;"	f	file:
sys_ipc_recv	kern/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f	file:
sys_ipc_try_send	kern/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, unsigned perm)$/;"	f	file:
sys_page_alloc	kern/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f	file:
sys_page_map	kern/syscall.c	/^sys_page_map(envid_t srcenvid, void *srcva,$/;"	f	file:
sys_page_unmap	kern/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f	file:
sys_time_msec	kern/syscall.c	/^sys_time_msec(void)$/;"	f	file:
sys_transmit_packet	kern/syscall.c	/^sys_transmit_packet(void *va, size_t len)$/;"	f	file:
sys_yield	kern/syscall.c	/^sys_yield(void)$/;"	f	file:
syscall	kern/syscall.c	/^syscall(uint32_t syscallno, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f
JOS_KERN_SYSCALL_H	kern/syscall.h	2;"	d
ticks	kern/time.c	/^static unsigned int ticks;$/;"	v	file:
time_init	kern/time.c	/^time_init(void)$/;"	f
time_msec	kern/time.c	/^time_msec(void)$/;"	f
time_tick	kern/time.c	/^time_tick(void)$/;"	f
JOS_KERN_TIME_H	kern/time.h	2;"	d
idt	kern/trap.c	/^struct Gatedesc idt[256] = { { 0 } };$/;"	v	typeref:struct:Gatedesc
idt_pd	kern/trap.c	/^struct Pseudodesc idt_pd = {$/;"	v	typeref:struct:Pseudodesc
last_tf	kern/trap.c	/^static struct Trapframe *last_tf;$/;"	v	typeref:struct:Trapframe	file:
page_fault_handler	kern/trap.c	/^page_fault_handler(struct Trapframe *tf)$/;"	f
print_regs	kern/trap.c	/^print_regs(struct PushRegs *regs)$/;"	f
print_trapframe	kern/trap.c	/^print_trapframe(struct Trapframe *tf)$/;"	f
trap	kern/trap.c	/^trap(struct Trapframe *tf)$/;"	f
trap_dispatch	kern/trap.c	/^trap_dispatch(struct Trapframe *tf)$/;"	f	file:
trap_init	kern/trap.c	/^trap_init(void)$/;"	f
trap_init_percpu	kern/trap.c	/^trap_init_percpu(void)$/;"	f
trapname	kern/trap.c	/^static const char *trapname(int trapno)$/;"	f	file:
ts	kern/trap.c	/^static struct Taskstate ts;$/;"	v	typeref:struct:Taskstate	file:
JOS_KERN_TRAP_H	kern/trap.h	4;"	d
TRAPHANDLER	kern/trapentry.S	/^#define TRAPHANDLER(name, num)						\\$/;"	d
TRAPHANDLER_NOEC	kern/trapentry.S	/^#define TRAPHANDLER_NOEC(name, num)					\\$/;"	d
_alltraps	kern/trapentry.S	/^ _alltraps:$/;"	l
name	kern/trapentry.S	/^	name:								\\$/;"	l
name	kern/trapentry.S	/^	name:			\/* function starts here *\/		\\$/;"	l
argnext	lib/args.c	/^argnext(struct Argstate *args)$/;"	f
argnextvalue	lib/args.c	/^argnextvalue(struct Argstate *args)$/;"	f
argstart	lib/args.c	/^argstart(int *argc, char **argv, struct Argstate *args)$/;"	f
argvalue	lib/args.c	/^argvalue(struct Argstate *args)$/;"	f
cputchar	lib/console.c	/^cputchar(int ch)$/;"	f
devcons	lib/console.c	/^struct Dev devcons =$/;"	v	typeref:struct:Dev
devcons_close	lib/console.c	/^devcons_close(struct Fd *fd)$/;"	f	file:
devcons_read	lib/console.c	/^devcons_read(struct Fd *fd, void *vbuf, size_t n)$/;"	f	file:
devcons_stat	lib/console.c	/^devcons_stat(struct Fd *fd, struct Stat *stat)$/;"	f	file:
devcons_write	lib/console.c	/^devcons_write(struct Fd *fd, const void *vbuf, size_t n)$/;"	f	file:
getchar	lib/console.c	/^getchar(void)$/;"	f
iscons	lib/console.c	/^iscons(int fdnum)$/;"	f
opencons	lib/console.c	/^opencons(void)$/;"	f
_start	lib/entry.S	/^_start:$/;"	l
args_exist	lib/entry.S	/^args_exist:$/;"	l
exit	lib/exit.c	/^exit(void)$/;"	f
FDTABLE	lib/fd.c	8;"	d	file:
FILEDATA	lib/fd.c	11;"	d	file:
INDEX2DATA	lib/fd.c	16;"	d	file:
INDEX2FD	lib/fd.c	14;"	d	file:
MAXFD	lib/fd.c	6;"	d	file:
close	lib/fd.c	/^close(int fdnum)$/;"	f
close_all	lib/fd.c	/^close_all(void)$/;"	f
debug	lib/fd.c	3;"	d	file:
dev_lookup	lib/fd.c	/^dev_lookup(int dev_id, struct Dev **dev)$/;"	f
devtab	lib/fd.c	/^static struct Dev *devtab[] =$/;"	v	typeref:struct:Dev	file:
dup	lib/fd.c	/^dup(int oldfdnum, int newfdnum)$/;"	f
fd2data	lib/fd.c	/^fd2data(struct Fd *fd)$/;"	f
fd2num	lib/fd.c	/^fd2num(struct Fd *fd)$/;"	f
fd_alloc	lib/fd.c	/^fd_alloc(struct Fd **fd_store)$/;"	f
fd_close	lib/fd.c	/^fd_close(struct Fd *fd, bool must_exist)$/;"	f
fd_lookup	lib/fd.c	/^fd_lookup(int fdnum, struct Fd **fd_store)$/;"	f
fstat	lib/fd.c	/^fstat(int fdnum, struct Stat *stat)$/;"	f
ftruncate	lib/fd.c	/^ftruncate(int fdnum, off_t newsize)$/;"	f
read	lib/fd.c	/^read(int fdnum, void *buf, size_t n)$/;"	f
readn	lib/fd.c	/^readn(int fdnum, void *buf, size_t n)$/;"	f
seek	lib/fd.c	/^seek(int fdnum, off_t offset)$/;"	f
stat	lib/fd.c	/^stat(const char *path, struct Stat *stat)$/;"	f
write	lib/fd.c	/^write(int fdnum, const void *buf, size_t n)$/;"	f
debug	lib/file.c	5;"	d	file:
devfile	lib/file.c	/^struct Dev devfile =$/;"	v	typeref:struct:Dev
devfile_flush	lib/file.c	/^devfile_flush(struct Fd *fd)$/;"	f	file:
devfile_read	lib/file.c	/^devfile_read(struct Fd *fd, void *buf, size_t n)$/;"	f	file:
devfile_stat	lib/file.c	/^devfile_stat(struct Fd *fd, struct Stat *st)$/;"	f	file:
devfile_trunc	lib/file.c	/^devfile_trunc(struct Fd *fd, off_t newsize)$/;"	f	file:
devfile_write	lib/file.c	/^devfile_write(struct Fd *fd, const void *buf, size_t n)$/;"	f	file:
fsipc	lib/file.c	/^fsipc(unsigned type, void *dstva)$/;"	f	file:
fsipcbuf	lib/file.c	/^union Fsipc fsipcbuf __attribute__((aligned(PGSIZE)));$/;"	v	typeref:union:Fsipc
open	lib/file.c	/^open(const char *path, int mode)$/;"	f
sync	lib/file.c	/^sync(void)$/;"	f
PTE_COW	lib/fork.c	8;"	d	file:
duppage	lib/fork.c	/^duppage(envid_t envid, unsigned pn)$/;"	f	file:
fork	lib/fork.c	/^fork(void)$/;"	f
pgfault	lib/fork.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:
sfork	lib/fork.c	/^sfork(void)$/;"	f
buf	lib/fprintf.c	/^	char buf[256];$/;"	m	struct:printbuf	file:
error	lib/fprintf.c	/^	int error;	\/\/ first error that occurred$/;"	m	struct:printbuf	file:
fd	lib/fprintf.c	/^	int fd;		\/\/ file descriptor$/;"	m	struct:printbuf	file:
fprintf	lib/fprintf.c	/^fprintf(int fd, const char *fmt, ...)$/;"	f
idx	lib/fprintf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	file:
printbuf	lib/fprintf.c	/^struct printbuf {$/;"	s	file:
printf	lib/fprintf.c	/^printf(const char *fmt, ...)$/;"	f
putch	lib/fprintf.c	/^putch(int ch, void *thunk)$/;"	f	file:
result	lib/fprintf.c	/^	ssize_t result;	\/\/ accumulated results from write$/;"	m	struct:printbuf	file:
vfprintf	lib/fprintf.c	/^vfprintf(int fd, const char *fmt, va_list ap)$/;"	f
writebuf	lib/fprintf.c	/^writebuf(struct printbuf *b)$/;"	f	file:
ipc_find_env	lib/ipc.c	/^ipc_find_env(enum EnvType type)$/;"	f
ipc_recv	lib/ipc.c	/^ipc_recv(envid_t *from_env_store, void *pg, int *perm_store)$/;"	f
ipc_send	lib/ipc.c	/^ipc_send(envid_t to_env, uint32_t val, void *pg, int perm)$/;"	f
binaryname	lib/libmain.c	/^const char *binaryname = "<unknown>";$/;"	v
libmain	lib/libmain.c	/^libmain(int argc, char **argv)$/;"	f
thisenv	lib/libmain.c	/^const volatile struct Env *thisenv;$/;"	v	typeref:struct:Env
MAXMALLOC	lib/malloc.c	/^	MAXMALLOC = 1024*1024	\/* max size of one allocated chunk *\/$/;"	e	enum:__anon1	file:
PTE_CONTINUED	lib/malloc.c	23;"	d	file:
free	lib/malloc.c	/^free(void *v)$/;"	f
isfree	lib/malloc.c	/^isfree(void *v, size_t n)$/;"	f	file:
malloc	lib/malloc.c	/^malloc(size_t n)$/;"	f
mbegin	lib/malloc.c	/^static uint8_t *mbegin = (uint8_t*) 0x08000000;$/;"	v	file:
mend	lib/malloc.c	/^static uint8_t *mend   = (uint8_t*) 0x10000000;$/;"	v	file:
mptr	lib/malloc.c	/^static uint8_t *mptr;$/;"	v	file:
REQVA	lib/nsipc.c	8;"	d	file:
debug	lib/nsipc.c	5;"	d	file:
nsipc	lib/nsipc.c	/^nsipc(unsigned type)$/;"	f	file:
nsipc_accept	lib/nsipc.c	/^nsipc_accept(int s, struct sockaddr *addr, socklen_t *addrlen)$/;"	f
nsipc_bind	lib/nsipc.c	/^nsipc_bind(int s, struct sockaddr *name, socklen_t namelen)$/;"	f
nsipc_close	lib/nsipc.c	/^nsipc_close(int s)$/;"	f
nsipc_connect	lib/nsipc.c	/^nsipc_connect(int s, const struct sockaddr *name, socklen_t namelen)$/;"	f
nsipc_listen	lib/nsipc.c	/^nsipc_listen(int s, int backlog)$/;"	f
nsipc_recv	lib/nsipc.c	/^nsipc_recv(int s, void *mem, int len, unsigned int flags)$/;"	f
nsipc_send	lib/nsipc.c	/^nsipc_send(int s, const void *buf, int size, unsigned int flags)$/;"	f
nsipc_shutdown	lib/nsipc.c	/^nsipc_shutdown(int s, int how)$/;"	f
nsipc_socket	lib/nsipc.c	/^nsipc_socket(int domain, int type, int protocol)$/;"	f
nsipcbuf	lib/nsipc.c	/^union Nsipc nsipcbuf __attribute__((aligned(PGSIZE)));$/;"	v	typeref:union:Nsipc
pageref	lib/pageref.c	/^pageref(void *v)$/;"	f
_panic	lib/panic.c	/^_panic(const char *file, int line, const char *fmt, ...)$/;"	f
_pgfault_upcall	lib/pfentry.S	/^_pgfault_upcall:$/;"	l
_pgfault_handler	lib/pgfault.c	/^void (*_pgfault_handler)(struct UTrapframe *utf);$/;"	v
set_pgfault_handler	lib/pgfault.c	/^set_pgfault_handler(void (*handler)(struct UTrapframe *utf))$/;"	f
PIPEBUFSIZ	lib/pipe.c	20;"	d	file:
Pipe	lib/pipe.c	/^struct Pipe {$/;"	s	file:
_pipeisclosed	lib/pipe.c	/^_pipeisclosed(struct Fd *fd, struct Pipe *p)$/;"	f	file:
debug	lib/pipe.c	3;"	d	file:
devpipe	lib/pipe.c	/^struct Dev devpipe =$/;"	v	typeref:struct:Dev
devpipe_close	lib/pipe.c	/^devpipe_close(struct Fd *fd)$/;"	f	file:
devpipe_read	lib/pipe.c	/^devpipe_read(struct Fd *fd, void *vbuf, size_t n)$/;"	f	file:
devpipe_stat	lib/pipe.c	/^devpipe_stat(struct Fd *fd, struct Stat *stat)$/;"	f	file:
devpipe_write	lib/pipe.c	/^devpipe_write(struct Fd *fd, const void *vbuf, size_t n)$/;"	f	file:
p_buf	lib/pipe.c	/^	uint8_t p_buf[PIPEBUFSIZ];	\/\/ data buffer$/;"	m	struct:Pipe	file:
p_rpos	lib/pipe.c	/^	off_t p_rpos;		\/\/ read position$/;"	m	struct:Pipe	file:
p_wpos	lib/pipe.c	/^	off_t p_wpos;		\/\/ write position$/;"	m	struct:Pipe	file:
pipe	lib/pipe.c	/^pipe(int pfd[2])$/;"	f
pipeisclosed	lib/pipe.c	/^pipeisclosed(int fdnum)$/;"	f
buf	lib/printf.c	/^	char buf[256];$/;"	m	struct:printbuf	file:
cnt	lib/printf.c	/^	int cnt;	\/\/ total bytes printed so far$/;"	m	struct:printbuf	file:
cprintf	lib/printf.c	/^cprintf(const char *fmt, ...)$/;"	f
idx	lib/printf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	file:
printbuf	lib/printf.c	/^struct printbuf {$/;"	s	file:
putch	lib/printf.c	/^putch(int ch, struct printbuf *b)$/;"	f	file:
vcprintf	lib/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f
buf	lib/printfmt.c	/^	char *buf;$/;"	m	struct:sprintbuf	file:
cnt	lib/printfmt.c	/^	int cnt;$/;"	m	struct:sprintbuf	file:
color	lib/printfmt.c	/^int color;$/;"	v
ebuf	lib/printfmt.c	/^	char *ebuf;$/;"	m	struct:sprintbuf	file:
error_string	lib/printfmt.c	/^static const char * const error_string[MAXERROR] =$/;"	v	file:
getint	lib/printfmt.c	/^getint(va_list *ap, int lflag)$/;"	f	file:
getuint	lib/printfmt.c	/^getuint(va_list *ap, int lflag)$/;"	f	file:
printfmt	lib/printfmt.c	/^printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...)$/;"	f
printnum	lib/printfmt.c	/^printnum(void (*putch)(int, void*), void *putdat,$/;"	f	file:
snprintf	lib/printfmt.c	/^snprintf(char *buf, int n, const char *fmt, ...)$/;"	f
sprintbuf	lib/printfmt.c	/^struct sprintbuf {$/;"	s	file:
sprintputch	lib/printfmt.c	/^sprintputch(int ch, struct sprintbuf *b)$/;"	f	file:
vprintfmt	lib/printfmt.c	/^vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)$/;"	f
vsnprintf	lib/printfmt.c	/^vsnprintf(char *buf, int n, const char *fmt, va_list ap)$/;"	f
BUFLEN	lib/readline.c	4;"	d	file:
buf	lib/readline.c	/^static char buf[BUFLEN];$/;"	v	file:
readline	lib/readline.c	/^readline(const char *prompt)$/;"	f
accept	lib/sockets.c	/^accept(int s, struct sockaddr *addr, socklen_t *addrlen)$/;"	f
alloc_sockfd	lib/sockets.c	/^alloc_sockfd(int sockid)$/;"	f	file:
bind	lib/sockets.c	/^bind(int s, struct sockaddr *name, socklen_t namelen)$/;"	f
connect	lib/sockets.c	/^connect(int s, const struct sockaddr *name, socklen_t namelen)$/;"	f
devsock	lib/sockets.c	/^struct Dev devsock =$/;"	v	typeref:struct:Dev
devsock_close	lib/sockets.c	/^devsock_close(struct Fd *fd)$/;"	f	file:
devsock_read	lib/sockets.c	/^devsock_read(struct Fd *fd, void *buf, size_t n)$/;"	f	file:
devsock_stat	lib/sockets.c	/^devsock_stat(struct Fd *fd, struct Stat *stat)$/;"	f	file:
devsock_write	lib/sockets.c	/^devsock_write(struct Fd *fd, const void *buf, size_t n)$/;"	f	file:
fd2sockid	lib/sockets.c	/^fd2sockid(int fd)$/;"	f	file:
listen	lib/sockets.c	/^listen(int s, int backlog)$/;"	f
shutdown	lib/sockets.c	/^shutdown(int s, int how)$/;"	f
socket	lib/sockets.c	/^socket(int domain, int type, int protocol)$/;"	f
UTEMP2	lib/spawn.c	5;"	d	file:
UTEMP2USTACK	lib/spawn.c	4;"	d	file:
UTEMP3	lib/spawn.c	6;"	d	file:
copy_shared_pages	lib/spawn.c	/^copy_shared_pages(envid_t child)$/;"	f	file:
init_stack	lib/spawn.c	/^init_stack(envid_t child, const char **argv, uintptr_t *init_esp)$/;"	f	file:
map_segment	lib/spawn.c	/^map_segment(envid_t child, uintptr_t va, size_t memsz,$/;"	f	file:
spawn	lib/spawn.c	/^spawn(const char *prog, const char **argv)$/;"	f
spawnl	lib/spawn.c	/^spawnl(const char *prog, const char *arg0, ...)$/;"	f
ASM	lib/string.c	9;"	d	file:
memcmp	lib/string.c	/^memcmp(const void *v1, const void *v2, size_t n)$/;"	f
memcpy	lib/string.c	/^memcpy(void *dst, const void *src, size_t n)$/;"	f
memfind	lib/string.c	/^memfind(const void *s, int c, size_t n)$/;"	f
memmove	lib/string.c	/^memmove(void *dst, const void *src, size_t n)$/;"	f
memset	lib/string.c	/^memset(void *v, int c, size_t n)$/;"	f
strcat	lib/string.c	/^strcat(char *dst, const char *src)$/;"	f
strchr	lib/string.c	/^strchr(const char *s, char c)$/;"	f
strcmp	lib/string.c	/^strcmp(const char *p, const char *q)$/;"	f
strcpy	lib/string.c	/^strcpy(char *dst, const char *src)$/;"	f
strfind	lib/string.c	/^strfind(const char *s, char c)$/;"	f
strlcpy	lib/string.c	/^strlcpy(char *dst, const char *src, size_t size)$/;"	f
strlen	lib/string.c	/^strlen(const char *s)$/;"	f
strncmp	lib/string.c	/^strncmp(const char *p, const char *q, size_t n)$/;"	f
strncpy	lib/string.c	/^strncpy(char *dst, const char *src, size_t size) {$/;"	f
strnlen	lib/string.c	/^strnlen(const char *s, size_t size)$/;"	f
strtol	lib/string.c	/^strtol(const char *s, char **endptr, int base)$/;"	f
sys_cgetc	lib/syscall.c	/^sys_cgetc(void)$/;"	f
sys_cputs	lib/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f
sys_env_destroy	lib/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f
sys_env_set_pgfault_upcall	lib/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *upcall)$/;"	f
sys_env_set_status	lib/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f
sys_env_set_trapframe	lib/syscall.c	/^sys_env_set_trapframe(envid_t envid, struct Trapframe *tf)$/;"	f
sys_getenvid	lib/syscall.c	/^sys_getenvid(void)$/;"	f
sys_ipc_recv	lib/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f
sys_ipc_try_send	lib/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, int perm)$/;"	f
sys_page_alloc	lib/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f
sys_page_map	lib/syscall.c	/^sys_page_map(envid_t srcenv, void *srcva, envid_t dstenv, void *dstva, int perm)$/;"	f
sys_page_unmap	lib/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f
sys_time_msec	lib/syscall.c	/^sys_time_msec(void)$/;"	f
sys_transmit_packet	lib/syscall.c	/^sys_transmit_packet(void *va, size_t len)$/;"	f
sys_yield	lib/syscall.c	/^sys_yield(void)$/;"	f
syscall	lib/syscall.c	/^syscall(int num, int check, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f	file:
wait	lib/wait.c	/^wait(envid_t envid)$/;"	f
readdeps	mergedep.pl	/^sub readdeps {$/;"	s
input	net/input.c	/^input(envid_t ns_envid)$/;"	f
netconn_accept	net/lwip/api/api_lib.c	/^netconn_accept(struct netconn *conn)$/;"	f
netconn_bind	net/lwip/api/api_lib.c	/^netconn_bind(struct netconn *conn, struct ip_addr *addr, u16_t port)$/;"	f
netconn_close	net/lwip/api/api_lib.c	/^netconn_close(struct netconn *conn)$/;"	f
netconn_connect	net/lwip/api/api_lib.c	/^netconn_connect(struct netconn *conn, struct ip_addr *addr, u16_t port)$/;"	f
netconn_delete	net/lwip/api/api_lib.c	/^netconn_delete(struct netconn *conn)$/;"	f
netconn_disconnect	net/lwip/api/api_lib.c	/^netconn_disconnect(struct netconn *conn)$/;"	f
netconn_getaddr	net/lwip/api/api_lib.c	/^netconn_getaddr(struct netconn *conn, struct ip_addr *addr, u16_t *port, u8_t local)$/;"	f
netconn_gethostbyname	net/lwip/api/api_lib.c	/^netconn_gethostbyname(const char *name, struct ip_addr *addr)$/;"	f
netconn_join_leave_group	net/lwip/api/api_lib.c	/^netconn_join_leave_group(struct netconn *conn,$/;"	f
netconn_listen_with_backlog	net/lwip/api/api_lib.c	/^netconn_listen_with_backlog(struct netconn *conn, u8_t backlog)$/;"	f
netconn_new_with_proto_and_callback	net/lwip/api/api_lib.c	/^netconn_new_with_proto_and_callback(enum netconn_type t, u8_t proto, netconn_callback callback)$/;"	f
netconn_recv	net/lwip/api/api_lib.c	/^netconn_recv(struct netconn *conn)$/;"	f
netconn_send	net/lwip/api/api_lib.c	/^netconn_send(struct netconn *conn, struct netbuf *buf)$/;"	f
netconn_sendto	net/lwip/api/api_lib.c	/^netconn_sendto(struct netconn *conn, struct netbuf *buf, struct ip_addr *addr, u16_t port)$/;"	f
netconn_type	net/lwip/api/api_lib.c	/^netconn_type(struct netconn *conn)$/;"	f
netconn_write	net/lwip/api/api_lib.c	/^netconn_write(struct netconn *conn, const void *dataptr, int size, u8_t apiflags)$/;"	f
accept_function	net/lwip/api/api_msg.c	/^accept_function(void *arg, struct tcp_pcb *newpcb, err_t err)$/;"	f	file:
do_bind	net/lwip/api/api_msg.c	/^do_bind(struct api_msg_msg *msg)$/;"	f
do_close	net/lwip/api/api_msg.c	/^do_close(struct api_msg_msg *msg)$/;"	f
do_close_internal	net/lwip/api/api_msg.c	/^do_close_internal(struct netconn *conn)$/;"	f	file:
do_connect	net/lwip/api/api_msg.c	/^do_connect(struct api_msg_msg *msg)$/;"	f
do_connected	net/lwip/api/api_msg.c	/^do_connected(void *arg, struct tcp_pcb *pcb, err_t err)$/;"	f	file:
do_delconn	net/lwip/api/api_msg.c	/^do_delconn(struct api_msg_msg *msg)$/;"	f
do_disconnect	net/lwip/api/api_msg.c	/^do_disconnect(struct api_msg_msg *msg)$/;"	f
do_dns_found	net/lwip/api/api_msg.c	/^do_dns_found(const char *name, struct ip_addr *ipaddr, void *arg)$/;"	f	file:
do_getaddr	net/lwip/api/api_msg.c	/^do_getaddr(struct api_msg_msg *msg)$/;"	f
do_gethostbyname	net/lwip/api/api_msg.c	/^do_gethostbyname(void *arg)$/;"	f
do_join_leave_group	net/lwip/api/api_msg.c	/^do_join_leave_group(struct api_msg_msg *msg)$/;"	f
do_listen	net/lwip/api/api_msg.c	/^do_listen(struct api_msg_msg *msg)$/;"	f
do_newconn	net/lwip/api/api_msg.c	/^do_newconn(struct api_msg_msg *msg)$/;"	f
do_recv	net/lwip/api/api_msg.c	/^do_recv(struct api_msg_msg *msg)$/;"	f
do_send	net/lwip/api/api_msg.c	/^do_send(struct api_msg_msg *msg)$/;"	f
do_write	net/lwip/api/api_msg.c	/^do_write(struct api_msg_msg *msg)$/;"	f
do_writemore	net/lwip/api/api_msg.c	/^do_writemore(struct netconn *conn)$/;"	f	file:
err_tcp	net/lwip/api/api_msg.c	/^err_tcp(void *arg, err_t err)$/;"	f	file:
netconn_alloc	net/lwip/api/api_msg.c	/^netconn_alloc(enum netconn_type t, netconn_callback callback)$/;"	f
netconn_free	net/lwip/api/api_msg.c	/^netconn_free(struct netconn *conn)$/;"	f
pcb_new	net/lwip/api/api_msg.c	/^pcb_new(struct api_msg_msg *msg)$/;"	f	file:
poll_tcp	net/lwip/api/api_msg.c	/^poll_tcp(void *arg, struct tcp_pcb *pcb)$/;"	f	file:
recv_raw	net/lwip/api/api_msg.c	/^recv_raw(void *arg, struct raw_pcb *pcb, struct pbuf *p,$/;"	f	file:
recv_tcp	net/lwip/api/api_msg.c	/^recv_tcp(void *arg, struct tcp_pcb *pcb, struct pbuf *p, err_t err)$/;"	f	file:
recv_udp	net/lwip/api/api_msg.c	/^recv_udp(void *arg, struct udp_pcb *pcb, struct pbuf *p,$/;"	f	file:
sent_tcp	net/lwip/api/api_msg.c	/^sent_tcp(void *arg, struct tcp_pcb *pcb, u16_t len)$/;"	f	file:
setup_tcp	net/lwip/api/api_msg.c	/^setup_tcp(struct netconn *conn)$/;"	f	file:
err_strerr	net/lwip/api/err.c	/^static const char *err_strerr[] = {$/;"	v	file:
lwip_strerr	net/lwip/api/err.c	/^lwip_strerr(err_t err)$/;"	f
netbuf_alloc	net/lwip/api/netbuf.c	/^netbuf_alloc(struct netbuf *buf, u16_t size)$/;"	f
netbuf_chain	net/lwip/api/netbuf.c	/^netbuf_chain(struct netbuf *head, struct netbuf *tail)$/;"	f
netbuf_data	net/lwip/api/netbuf.c	/^netbuf_data(struct netbuf *buf, void **dataptr, u16_t *len)$/;"	f
netbuf_delete	net/lwip/api/netbuf.c	/^netbuf_delete(struct netbuf *buf)$/;"	f
netbuf_first	net/lwip/api/netbuf.c	/^netbuf_first(struct netbuf *buf)$/;"	f
netbuf_free	net/lwip/api/netbuf.c	/^netbuf_free(struct netbuf *buf)$/;"	f
netbuf_new	net/lwip/api/netbuf.c	/^netbuf *netbuf_new(void)$/;"	f
netbuf_next	net/lwip/api/netbuf.c	/^netbuf_next(struct netbuf *buf)$/;"	f
netbuf_ref	net/lwip/api/netbuf.c	/^netbuf_ref(struct netbuf *buf, const void *dataptr, u16_t size)$/;"	f
HOSTENT_STORAGE	net/lwip/api/netdb.c	65;"	d	file:
HOSTENT_STORAGE	net/lwip/api/netdb.c	67;"	d	file:
LWIP_DNS_API_HOSTENT_STORAGE	net/lwip/api/netdb.c	60;"	d	file:
addr	net/lwip/api/netdb.c	/^  struct ip_addr addr;$/;"	m	struct:gethostbyname_r_helper	typeref:struct:gethostbyname_r_helper::ip_addr	file:
addrs	net/lwip/api/netdb.c	/^  struct ip_addr *addrs;$/;"	m	struct:gethostbyname_r_helper	typeref:struct:gethostbyname_r_helper::ip_addr	file:
aliases	net/lwip/api/netdb.c	/^  char *aliases;$/;"	m	struct:gethostbyname_r_helper	file:
gethostbyname_r_helper	net/lwip/api/netdb.c	/^struct gethostbyname_r_helper {$/;"	s	file:
h_errno	net/lwip/api/netdb.c	/^int h_errno;$/;"	v
lwip_freeaddrinfo	net/lwip/api/netdb.c	/^lwip_freeaddrinfo(struct addrinfo *ai)$/;"	f
lwip_getaddrinfo	net/lwip/api/netdb.c	/^lwip_getaddrinfo(const char *nodename, const char *servname,$/;"	f
lwip_gethostbyname	net/lwip/api/netdb.c	/^lwip_gethostbyname(const char *name)$/;"	f
lwip_gethostbyname_r	net/lwip/api/netdb.c	/^lwip_gethostbyname_r(const char *name, struct hostent *ret, char *buf,$/;"	f
do_netifapi_netif_add	net/lwip/api/netifapi.c	/^do_netifapi_netif_add( struct netifapi_msg_msg *msg)$/;"	f
do_netifapi_netif_common	net/lwip/api/netifapi.c	/^do_netifapi_netif_common( struct netifapi_msg_msg *msg)$/;"	f
netifapi_netif_add	net/lwip/api/netifapi.c	/^netifapi_netif_add(struct netif *netif,$/;"	f
netifapi_netif_common	net/lwip/api/netifapi.c	/^netifapi_netif_common( struct netif *netif,$/;"	f
ERR_TO_ERRNO_TABLE_SIZE	net/lwip/api/sockets.c	145;"	d	file:
NUM_SOCKETS	net/lwip/api/sockets.c	57;"	d	file:
alloc_socket	net/lwip/api/sockets.c	/^alloc_socket(struct netconn *newconn)$/;"	f	file:
conn	net/lwip/api/sockets.c	/^  struct netconn *conn;$/;"	m	struct:lwip_socket	typeref:struct:lwip_socket::netconn	file:
err	net/lwip/api/sockets.c	/^  err_t err;$/;"	m	struct:lwip_setgetsockopt_data	file:
err	net/lwip/api/sockets.c	/^  int err;$/;"	m	struct:lwip_socket	file:
err_to_errno	net/lwip/api/sockets.c	148;"	d	file:
err_to_errno_table	net/lwip/api/sockets.c	/^static const int err_to_errno_table[] = {$/;"	v	file:
event_callback	net/lwip/api/sockets.c	/^event_callback(struct netconn *conn, enum netconn_evt evt, u16_t len)$/;"	f	file:
exceptset	net/lwip/api/sockets.c	/^  fd_set *exceptset;$/;"	m	struct:lwip_select_cb	file:
flags	net/lwip/api/sockets.c	/^  u16_t flags;$/;"	m	struct:lwip_socket	file:
get_socket	net/lwip/api/sockets.c	/^get_socket(int s)$/;"	f	file:
lastdata	net/lwip/api/sockets.c	/^  struct netbuf *lastdata;$/;"	m	struct:lwip_socket	typeref:struct:lwip_socket::netbuf	file:
lastoffset	net/lwip/api/sockets.c	/^  u16_t lastoffset;$/;"	m	struct:lwip_socket	file:
level	net/lwip/api/sockets.c	/^  int level;$/;"	m	struct:lwip_setgetsockopt_data	file:
lwip_accept	net/lwip/api/sockets.c	/^lwip_accept(int s, struct sockaddr *addr, socklen_t *addrlen)$/;"	f
lwip_bind	net/lwip/api/sockets.c	/^lwip_bind(int s, struct sockaddr *name, socklen_t namelen)$/;"	f
lwip_close	net/lwip/api/sockets.c	/^lwip_close(int s)$/;"	f
lwip_connect	net/lwip/api/sockets.c	/^lwip_connect(int s, const struct sockaddr *name, socklen_t namelen)$/;"	f
lwip_getaddrname	net/lwip/api/sockets.c	/^lwip_getaddrname(int s, struct sockaddr *name, socklen_t *namelen, u8_t local)$/;"	f	file:
lwip_getpeername	net/lwip/api/sockets.c	/^lwip_getpeername(int s, struct sockaddr *name, socklen_t *namelen)$/;"	f
lwip_getsockname	net/lwip/api/sockets.c	/^lwip_getsockname(int s, struct sockaddr *name, socklen_t *namelen)$/;"	f
lwip_getsockopt	net/lwip/api/sockets.c	/^lwip_getsockopt(int s, int level, int optname, void *optval, socklen_t *optlen)$/;"	f
lwip_getsockopt_internal	net/lwip/api/sockets.c	/^lwip_getsockopt_internal(void *arg)$/;"	f	file:
lwip_ioctl	net/lwip/api/sockets.c	/^lwip_ioctl(int s, long cmd, void *argp)$/;"	f
lwip_listen	net/lwip/api/sockets.c	/^lwip_listen(int s, int backlog)$/;"	f
lwip_read	net/lwip/api/sockets.c	/^lwip_read(int s, void *mem, int len)$/;"	f
lwip_recv	net/lwip/api/sockets.c	/^lwip_recv(int s, void *mem, int len, unsigned int flags)$/;"	f
lwip_recvfrom	net/lwip/api/sockets.c	/^lwip_recvfrom(int s, void *mem, int len, unsigned int flags,$/;"	f
lwip_select	net/lwip/api/sockets.c	/^lwip_select(int maxfdp1, fd_set *readset, fd_set *writeset, fd_set *exceptset,$/;"	f
lwip_select_cb	net/lwip/api/sockets.c	/^struct lwip_select_cb {$/;"	s	file:
lwip_selscan	net/lwip/api/sockets.c	/^lwip_selscan(int maxfdp1, fd_set *readset, fd_set *writeset, fd_set *exceptset)$/;"	f	file:
lwip_send	net/lwip/api/sockets.c	/^lwip_send(int s, const void *data, int size, unsigned int flags)$/;"	f
lwip_sendto	net/lwip/api/sockets.c	/^lwip_sendto(int s, const void *data, int size, unsigned int flags,$/;"	f
lwip_setgetsockopt_data	net/lwip/api/sockets.c	/^struct lwip_setgetsockopt_data {$/;"	s	file:
lwip_setsockopt	net/lwip/api/sockets.c	/^lwip_setsockopt(int s, int level, int optname, const void *optval, socklen_t optlen)$/;"	f
lwip_setsockopt_internal	net/lwip/api/sockets.c	/^lwip_setsockopt_internal(void *arg)$/;"	f	file:
lwip_shutdown	net/lwip/api/sockets.c	/^lwip_shutdown(int s, int how)$/;"	f
lwip_socket	net/lwip/api/sockets.c	/^lwip_socket(int domain, int type, int protocol)$/;"	f
lwip_socket	net/lwip/api/sockets.c	/^struct lwip_socket {$/;"	s	file:
lwip_socket_init	net/lwip/api/sockets.c	/^lwip_socket_init(void)$/;"	f
lwip_write	net/lwip/api/sockets.c	/^lwip_write(int s, const void *data, int size)$/;"	f
next	net/lwip/api/sockets.c	/^  struct lwip_select_cb *next;$/;"	m	struct:lwip_select_cb	typeref:struct:lwip_select_cb::lwip_select_cb	file:
optlen	net/lwip/api/sockets.c	/^  socklen_t *optlen;$/;"	m	struct:lwip_setgetsockopt_data	file:
optname	net/lwip/api/sockets.c	/^  int optname;$/;"	m	struct:lwip_setgetsockopt_data	file:
optval	net/lwip/api/sockets.c	/^  void *optval;$/;"	m	struct:lwip_setgetsockopt_data	file:
rcvevent	net/lwip/api/sockets.c	/^  u16_t rcvevent;$/;"	m	struct:lwip_socket	file:
readset	net/lwip/api/sockets.c	/^  fd_set *readset;$/;"	m	struct:lwip_select_cb	file:
s	net/lwip/api/sockets.c	/^  int s;$/;"	m	struct:lwip_setgetsockopt_data	file:
select_cb_list	net/lwip/api/sockets.c	/^static struct lwip_select_cb *select_cb_list;$/;"	v	typeref:struct:lwip_select_cb	file:
selectsem	net/lwip/api/sockets.c	/^static sys_sem_t selectsem;$/;"	v	file:
sem	net/lwip/api/sockets.c	/^  sys_sem_t sem;$/;"	m	struct:lwip_select_cb	file:
sem_signalled	net/lwip/api/sockets.c	/^  int sem_signalled;$/;"	m	struct:lwip_select_cb	file:
sendevent	net/lwip/api/sockets.c	/^  u16_t sendevent;$/;"	m	struct:lwip_socket	file:
set_errno	net/lwip/api/sockets.c	153;"	d	file:
set_errno	net/lwip/api/sockets.c	155;"	d	file:
sock	net/lwip/api/sockets.c	/^  struct lwip_socket *sock;$/;"	m	struct:lwip_setgetsockopt_data	typeref:struct:lwip_setgetsockopt_data::lwip_socket	file:
sock_set_errno	net/lwip/api/sockets.c	158;"	d	file:
sockets	net/lwip/api/sockets.c	/^static struct lwip_socket sockets[NUM_SOCKETS];$/;"	v	typeref:struct:lwip_socket	file:
socksem	net/lwip/api/sockets.c	/^static sys_sem_t socksem;$/;"	v	file:
writeset	net/lwip/api/sockets.c	/^  fd_set *writeset;$/;"	m	struct:lwip_select_cb	file:
arp_timer	net/lwip/api/tcpip.c	/^arp_timer(void *arg)$/;"	f	file:
autoip_timer	net/lwip/api/tcpip.c	/^autoip_timer(void *arg)$/;"	f	file:
dhcp_timer_coarse	net/lwip/api/tcpip.c	/^dhcp_timer_coarse(void *arg)$/;"	f	file:
dhcp_timer_fine	net/lwip/api/tcpip.c	/^dhcp_timer_fine(void *arg)$/;"	f	file:
dns_timer	net/lwip/api/tcpip.c	/^dns_timer(void *arg)$/;"	f	file:
igmp_timer	net/lwip/api/tcpip.c	/^igmp_timer(void *arg)$/;"	f	file:
ip_reass_timer	net/lwip/api/tcpip.c	/^ip_reass_timer(void *arg)$/;"	f	file:
lock_tcpip_core	net/lwip/api/tcpip.c	/^sys_sem_t lock_tcpip_core;$/;"	v
mbox	net/lwip/api/tcpip.c	/^static sys_mbox_t mbox = SYS_MBOX_NULL;$/;"	v	file:
mem_free_callback	net/lwip/api/tcpip.c	/^mem_free_callback(void *m)$/;"	f
pbuf_free_callback	net/lwip/api/tcpip.c	/^pbuf_free_callback(struct pbuf *p)$/;"	f
pbuf_free_int	net/lwip/api/tcpip.c	/^pbuf_free_int(void *p)$/;"	f	file:
tcp_timer_needed	net/lwip/api/tcpip.c	/^tcp_timer_needed(void)$/;"	f
tcpip_apimsg	net/lwip/api/tcpip.c	/^tcpip_apimsg(struct api_msg *apimsg)$/;"	f
tcpip_apimsg_lock	net/lwip/api/tcpip.c	/^tcpip_apimsg_lock(struct api_msg *apimsg)$/;"	f
tcpip_callback_with_block	net/lwip/api/tcpip.c	/^tcpip_callback_with_block(void (*f)(void *ctx), void *ctx, u8_t block)$/;"	f
tcpip_init	net/lwip/api/tcpip.c	/^tcpip_init(void (* initfunc)(void *), void *arg)$/;"	f
tcpip_init_done	net/lwip/api/tcpip.c	/^static void (* tcpip_init_done)(void *arg);$/;"	v	file:
tcpip_init_done_arg	net/lwip/api/tcpip.c	/^static void *tcpip_init_done_arg;$/;"	v	file:
tcpip_input	net/lwip/api/tcpip.c	/^tcpip_input(struct pbuf *p, struct netif *inp)$/;"	f
tcpip_netifapi	net/lwip/api/tcpip.c	/^tcpip_netifapi(struct netifapi_msg* netifapimsg)$/;"	f
tcpip_netifapi_lock	net/lwip/api/tcpip.c	/^tcpip_netifapi_lock(struct netifapi_msg* netifapimsg)$/;"	f
tcpip_tcp_timer	net/lwip/api/tcpip.c	/^tcpip_tcp_timer(void *arg)$/;"	f	file:
tcpip_tcp_timer_active	net/lwip/api/tcpip.c	/^static int tcpip_tcp_timer_active;$/;"	v	file:
tcpip_thread	net/lwip/api/tcpip.c	/^tcpip_thread(void *arg)$/;"	f	file:
tcpip_timeout	net/lwip/api/tcpip.c	/^tcpip_timeout(u32_t msecs, sys_timeout_handler h, void *arg)$/;"	f
dhcp_arp_reply	net/lwip/core/dhcp.c	/^void dhcp_arp_reply(struct netif *netif, struct ip_addr *addr)$/;"	f
dhcp_bind	net/lwip/core/dhcp.c	/^dhcp_bind(struct netif *netif)$/;"	f	file:
dhcp_check	net/lwip/core/dhcp.c	/^dhcp_check(struct netif *netif)$/;"	f	file:
dhcp_coarse_tmr	net/lwip/core/dhcp.c	/^dhcp_coarse_tmr()$/;"	f
dhcp_create_request	net/lwip/core/dhcp.c	/^dhcp_create_request(struct netif *netif)$/;"	f	file:
dhcp_decline	net/lwip/core/dhcp.c	/^dhcp_decline(struct netif *netif)$/;"	f	file:
dhcp_delete_request	net/lwip/core/dhcp.c	/^dhcp_delete_request(struct netif *netif)$/;"	f	file:
dhcp_discover	net/lwip/core/dhcp.c	/^dhcp_discover(struct netif *netif)$/;"	f	file:
dhcp_fine_tmr	net/lwip/core/dhcp.c	/^dhcp_fine_tmr()$/;"	f
dhcp_free_reply	net/lwip/core/dhcp.c	/^static void dhcp_free_reply(struct dhcp *dhcp)$/;"	f	file:
dhcp_get_option_byte	net/lwip/core/dhcp.c	/^dhcp_get_option_byte(u8_t *ptr)$/;"	f	file:
dhcp_get_option_long	net/lwip/core/dhcp.c	/^static u32_t dhcp_get_option_long(u8_t *ptr)$/;"	f	file:
dhcp_get_option_ptr	net/lwip/core/dhcp.c	/^static u8_t *dhcp_get_option_ptr(struct dhcp *dhcp, u8_t option_type)$/;"	f	file:
dhcp_handle_ack	net/lwip/core/dhcp.c	/^dhcp_handle_ack(struct netif *netif)$/;"	f	file:
dhcp_handle_nak	net/lwip/core/dhcp.c	/^dhcp_handle_nak(struct netif *netif)$/;"	f	file:
dhcp_handle_offer	net/lwip/core/dhcp.c	/^dhcp_handle_offer(struct netif *netif)$/;"	f	file:
dhcp_inform	net/lwip/core/dhcp.c	/^dhcp_inform(struct netif *netif)$/;"	f
dhcp_option	net/lwip/core/dhcp.c	/^dhcp_option(struct dhcp *dhcp, u8_t option_type, u8_t option_len)$/;"	f	file:
dhcp_option_byte	net/lwip/core/dhcp.c	/^dhcp_option_byte(struct dhcp *dhcp, u8_t value)$/;"	f	file:
dhcp_option_long	net/lwip/core/dhcp.c	/^dhcp_option_long(struct dhcp *dhcp, u32_t value)$/;"	f	file:
dhcp_option_short	net/lwip/core/dhcp.c	/^dhcp_option_short(struct dhcp *dhcp, u16_t value)$/;"	f	file:
dhcp_option_trailer	net/lwip/core/dhcp.c	/^dhcp_option_trailer(struct dhcp *dhcp)$/;"	f	file:
dhcp_rebind	net/lwip/core/dhcp.c	/^dhcp_rebind(struct netif *netif)$/;"	f	file:
dhcp_recv	net/lwip/core/dhcp.c	/^static void dhcp_recv(void *arg, struct udp_pcb *pcb, struct pbuf *p, struct ip_addr *addr, u16_t port)$/;"	f	file:
dhcp_release	net/lwip/core/dhcp.c	/^dhcp_release(struct netif *netif)$/;"	f
dhcp_renew	net/lwip/core/dhcp.c	/^dhcp_renew(struct netif *netif)$/;"	f
dhcp_select	net/lwip/core/dhcp.c	/^dhcp_select(struct netif *netif)$/;"	f	file:
dhcp_set_state	net/lwip/core/dhcp.c	/^dhcp_set_state(struct dhcp *dhcp, u8_t new_state)$/;"	f	file:
dhcp_start	net/lwip/core/dhcp.c	/^dhcp_start(struct netif *netif)$/;"	f
dhcp_stop	net/lwip/core/dhcp.c	/^dhcp_stop(struct netif *netif)$/;"	f
dhcp_t1_timeout	net/lwip/core/dhcp.c	/^dhcp_t1_timeout(struct netif *netif)$/;"	f	file:
dhcp_t2_timeout	net/lwip/core/dhcp.c	/^dhcp_t2_timeout(struct netif *netif)$/;"	f	file:
dhcp_timeout	net/lwip/core/dhcp.c	/^dhcp_timeout(struct netif *netif)$/;"	f	file:
dhcp_unfold_reply	net/lwip/core/dhcp.c	/^dhcp_unfold_reply(struct dhcp *dhcp)$/;"	f	file:
xid	net/lwip/core/dhcp.c	/^static u32_t xid = 0xABCD0000;$/;"	v	file:
DNS_FLAG1_AUTHORATIVE	net/lwip/core/dns.c	110;"	d	file:
DNS_FLAG1_OPCODE_INVERSE	net/lwip/core/dns.c	108;"	d	file:
DNS_FLAG1_OPCODE_STANDARD	net/lwip/core/dns.c	109;"	d	file:
DNS_FLAG1_OPCODE_STATUS	net/lwip/core/dns.c	107;"	d	file:
DNS_FLAG1_RD	net/lwip/core/dns.c	112;"	d	file:
DNS_FLAG1_RESPONSE	net/lwip/core/dns.c	106;"	d	file:
DNS_FLAG1_TRUNC	net/lwip/core/dns.c	111;"	d	file:
DNS_FLAG2_ERR_MASK	net/lwip/core/dns.c	114;"	d	file:
DNS_FLAG2_ERR_NAME	net/lwip/core/dns.c	116;"	d	file:
DNS_FLAG2_ERR_NONE	net/lwip/core/dns.c	115;"	d	file:
DNS_FLAG2_RA	net/lwip/core/dns.c	113;"	d	file:
DNS_MAX_RETRIES	net/lwip/core/dns.c	97;"	d	file:
DNS_MAX_TTL	net/lwip/core/dns.c	102;"	d	file:
DNS_SERVER_ADDRESS	net/lwip/core/dns.c	87;"	d	file:
DNS_SERVER_PORT	net/lwip/core/dns.c	92;"	d	file:
DNS_STATE_ASKING	net/lwip/core/dns.c	121;"	d	file:
DNS_STATE_DONE	net/lwip/core/dns.c	122;"	d	file:
DNS_STATE_NEW	net/lwip/core/dns.c	120;"	d	file:
DNS_STATE_UNUSED	net/lwip/core/dns.c	119;"	d	file:
PACK_STRUCT_STRUCT	net/lwip/core/dns.c	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:dns_answer
PACK_STRUCT_STRUCT	net/lwip/core/dns.c	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:dns_hdr
PACK_STRUCT_STRUCT	net/lwip/core/dns.c	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:dns_query
arg	net/lwip/core/dns.c	/^  void *arg;$/;"	m	struct:dns_table_entry	file:
class	net/lwip/core/dns.c	/^  u16_t class;$/;"	m	struct:dns_answer	file:
class	net/lwip/core/dns.c	/^  u16_t class;$/;"	m	struct:dns_query	file:
dns_answer	net/lwip/core/dns.c	/^struct dns_answer {$/;"	s	file:
dns_check_entries	net/lwip/core/dns.c	/^dns_check_entries(void)$/;"	f	file:
dns_check_entry	net/lwip/core/dns.c	/^dns_check_entry(u8_t i)$/;"	f	file:
dns_compare_name	net/lwip/core/dns.c	/^dns_compare_name(unsigned char *query, unsigned char *response)$/;"	f	file:
dns_enqueue	net/lwip/core/dns.c	/^dns_enqueue(const char *name, dns_found_callback found, void *callback_arg)$/;"	f	file:
dns_gethostbyname	net/lwip/core/dns.c	/^dns_gethostbyname(const char *hostname, struct ip_addr *addr, dns_found_callback found,$/;"	f
dns_getserver	net/lwip/core/dns.c	/^dns_getserver(u8_t numdns)$/;"	f
dns_hdr	net/lwip/core/dns.c	/^struct dns_hdr {$/;"	s	file:
dns_init	net/lwip/core/dns.c	/^dns_init()$/;"	f
dns_lookup	net/lwip/core/dns.c	/^dns_lookup(const char *name)$/;"	f	file:
dns_parse_name	net/lwip/core/dns.c	/^dns_parse_name(unsigned char *query)$/;"	f	file:
dns_payload	net/lwip/core/dns.c	/^static u8_t                   dns_payload[DNS_MSG_SIZE];$/;"	v	file:
dns_pcb	net/lwip/core/dns.c	/^static struct udp_pcb        *dns_pcb;$/;"	v	typeref:struct:udp_pcb	file:
dns_query	net/lwip/core/dns.c	/^struct dns_query {$/;"	s	file:
dns_recv	net/lwip/core/dns.c	/^dns_recv(void *arg, struct udp_pcb *pcb, struct pbuf *p, struct ip_addr *addr, u16_t port)$/;"	f	file:
dns_send	net/lwip/core/dns.c	/^dns_send(u8_t numdns, const char* name, u8_t id)$/;"	f	file:
dns_seqno	net/lwip/core/dns.c	/^static u8_t                   dns_seqno;$/;"	v	file:
dns_servers	net/lwip/core/dns.c	/^static struct ip_addr         dns_servers[DNS_MAX_SERVERS];$/;"	v	typeref:struct:ip_addr	file:
dns_setserver	net/lwip/core/dns.c	/^dns_setserver(u8_t numdns, struct ip_addr *dnsserver)$/;"	f
dns_table	net/lwip/core/dns.c	/^static struct dns_table_entry dns_table[DNS_TABLE_SIZE];$/;"	v	typeref:struct:dns_table_entry	file:
dns_table_entry	net/lwip/core/dns.c	/^struct dns_table_entry {$/;"	s	file:
dns_tmr	net/lwip/core/dns.c	/^dns_tmr(void)$/;"	f
err	net/lwip/core/dns.c	/^  u8_t  err;$/;"	m	struct:dns_table_entry	file:
flags1	net/lwip/core/dns.c	/^  u8_t flags1;$/;"	m	struct:dns_hdr	file:
flags2	net/lwip/core/dns.c	/^  u8_t flags2;$/;"	m	struct:dns_hdr	file:
found	net/lwip/core/dns.c	/^  dns_found_callback found;$/;"	m	struct:dns_table_entry	file:
id	net/lwip/core/dns.c	/^  u16_t id;$/;"	m	struct:dns_hdr	file:
ipaddr	net/lwip/core/dns.c	/^  struct ip_addr ipaddr;$/;"	m	struct:dns_table_entry	typeref:struct:dns_table_entry::ip_addr	file:
len	net/lwip/core/dns.c	/^  u16_t len;$/;"	m	struct:dns_answer	file:
name	net/lwip/core/dns.c	/^  char name[DNS_MAX_NAME_LENGTH];$/;"	m	struct:dns_table_entry	file:
numanswers	net/lwip/core/dns.c	/^  u16_t numanswers;$/;"	m	struct:dns_hdr	file:
numauthrr	net/lwip/core/dns.c	/^  u16_t numauthrr;$/;"	m	struct:dns_hdr	file:
numdns	net/lwip/core/dns.c	/^  u8_t  numdns;$/;"	m	struct:dns_table_entry	file:
numextrarr	net/lwip/core/dns.c	/^  u16_t numextrarr;$/;"	m	struct:dns_hdr	file:
numquestions	net/lwip/core/dns.c	/^  u16_t numquestions;$/;"	m	struct:dns_hdr	file:
retries	net/lwip/core/dns.c	/^  u8_t  retries;$/;"	m	struct:dns_table_entry	file:
seqno	net/lwip/core/dns.c	/^  u8_t  seqno;$/;"	m	struct:dns_table_entry	file:
state	net/lwip/core/dns.c	/^  u8_t  state;$/;"	m	struct:dns_table_entry	file:
tmr	net/lwip/core/dns.c	/^  u8_t  tmr;$/;"	m	struct:dns_table_entry	file:
ttl	net/lwip/core/dns.c	/^  u32_t ttl;$/;"	m	struct:dns_answer	file:
ttl	net/lwip/core/dns.c	/^  u32_t ttl;$/;"	m	struct:dns_table_entry	file:
type	net/lwip/core/dns.c	/^  u16_t type;$/;"	m	struct:dns_answer	file:
type	net/lwip/core/dns.c	/^  u16_t type;$/;"	m	struct:dns_query	file:
lwip_init	net/lwip/core/init.c	/^lwip_init(void)$/;"	f
lwip_sanity_check	net/lwip/core/init.c	/^lwip_sanity_check(void)$/;"	f	file:
lwip_sanity_check	net/lwip/core/init.c	209;"	d	file:
LWIP_AUTOIP_RAND	net/lwip/core/ipv4/autoip.c	82;"	d	file:
autoip_arp_announce	net/lwip/core/ipv4/autoip.c	/^autoip_arp_announce(struct netif *netif)$/;"	f	file:
autoip_arp_reply	net/lwip/core/ipv4/autoip.c	/^autoip_arp_reply(struct netif *netif, struct etharp_hdr *hdr)$/;"	f
autoip_bind	net/lwip/core/ipv4/autoip.c	/^autoip_bind(struct netif *netif)$/;"	f	file:
autoip_create_rand_addr	net/lwip/core/ipv4/autoip.c	/^autoip_create_rand_addr(struct netif *netif, struct ip_addr *RandomIPAddr)$/;"	f	file:
autoip_handle_arp_conflict	net/lwip/core/ipv4/autoip.c	/^autoip_handle_arp_conflict(struct netif *netif)$/;"	f	file:
autoip_init	net/lwip/core/ipv4/autoip.c	/^autoip_init(void)$/;"	f
autoip_start	net/lwip/core/ipv4/autoip.c	/^autoip_start(struct netif *netif)$/;"	f
autoip_stop	net/lwip/core/ipv4/autoip.c	/^autoip_stop(struct netif *netif)$/;"	f
autoip_tmr	net/lwip/core/ipv4/autoip.c	/^autoip_tmr()$/;"	f
ICMP_DEST_UNREACH_DATASIZE	net/lwip/core/ipv4/icmp.c	57;"	d	file:
icmp_dest_unreach	net/lwip/core/ipv4/icmp.c	/^icmp_dest_unreach(struct pbuf *p, enum icmp_dur_type t)$/;"	f
icmp_input	net/lwip/core/ipv4/icmp.c	/^icmp_input(struct pbuf *p, struct netif *inp)$/;"	f
icmp_time_exceeded	net/lwip/core/ipv4/icmp.c	/^icmp_time_exceeded(struct pbuf *p, enum icmp_te_type t)$/;"	f
allrouters	net/lwip/core/ipv4/igmp.c	/^static struct ip_addr     allrouters;$/;"	v	typeref:struct:ip_addr	file:
allsystems	net/lwip/core/ipv4/igmp.c	/^static struct ip_addr     allsystems;$/;"	v	typeref:struct:ip_addr	file:
igmp_delaying_member	net/lwip/core/ipv4/igmp.c	/^igmp_delaying_member( struct igmp_group *group, u8_t maxresp)$/;"	f
igmp_dump_group_list	net/lwip/core/ipv4/igmp.c	/^igmp_dump_group_list()$/;"	f
igmp_dump_group_list	net/lwip/core/ipv4/igmp.c	137;"	d	file:
igmp_group_list	net/lwip/core/ipv4/igmp.c	/^static struct igmp_group* igmp_group_list;$/;"	v	typeref:struct:igmp_group	file:
igmp_init	net/lwip/core/ipv4/igmp.c	/^igmp_init(void)$/;"	f
igmp_input	net/lwip/core/ipv4/igmp.c	/^igmp_input(struct pbuf *p, struct netif *inp, struct ip_addr *dest)$/;"	f
igmp_ip_output_if	net/lwip/core/ipv4/igmp.c	/^igmp_ip_output_if(struct pbuf *p, struct ip_addr *src, struct ip_addr *dest,$/;"	f
igmp_joingroup	net/lwip/core/ipv4/igmp.c	/^igmp_joingroup(struct ip_addr *ifaddr, struct ip_addr *groupaddr)$/;"	f
igmp_leavegroup	net/lwip/core/ipv4/igmp.c	/^igmp_leavegroup(struct ip_addr *ifaddr, struct ip_addr *groupaddr)$/;"	f
igmp_lookfor_group	net/lwip/core/ipv4/igmp.c	/^igmp_lookfor_group(struct netif *ifp, struct ip_addr *addr)$/;"	f
igmp_lookup_group	net/lwip/core/ipv4/igmp.c	/^igmp_lookup_group(struct netif *ifp, struct ip_addr *addr)$/;"	f
igmp_remove_group	net/lwip/core/ipv4/igmp.c	/^igmp_remove_group(struct igmp_group *group)$/;"	f
igmp_report_groups	net/lwip/core/ipv4/igmp.c	/^igmp_report_groups( struct netif *netif)$/;"	f
igmp_send	net/lwip/core/ipv4/igmp.c	/^igmp_send(struct igmp_group *group, u8_t type)$/;"	f
igmp_start	net/lwip/core/ipv4/igmp.c	/^igmp_start(struct netif *netif)$/;"	f
igmp_start_timer	net/lwip/core/ipv4/igmp.c	/^igmp_start_timer(struct igmp_group *group, u8_t max_time)$/;"	f
igmp_stop	net/lwip/core/ipv4/igmp.c	/^igmp_stop(struct netif *netif)$/;"	f
igmp_stop_timer	net/lwip/core/ipv4/igmp.c	/^igmp_stop_timer(struct igmp_group *group)$/;"	f
igmp_timeout	net/lwip/core/ipv4/igmp.c	/^igmp_timeout(struct igmp_group *group)$/;"	f
igmp_tmr	net/lwip/core/ipv4/igmp.c	/^igmp_tmr(void)$/;"	f
htonl	net/lwip/core/ipv4/inet.c	/^htonl(u32_t n)$/;"	f
htons	net/lwip/core/ipv4/inet.c	/^htons(u16_t n)$/;"	f
in_range	net/lwip/core/ipv4/inet.c	45;"	d	file:
inet_addr	net/lwip/core/ipv4/inet.c	/^inet_addr(const char *cp)$/;"	f
inet_aton	net/lwip/core/ipv4/inet.c	/^inet_aton(const char *cp, struct in_addr *addr)$/;"	f
inet_ntoa	net/lwip/core/ipv4/inet.c	/^inet_ntoa(struct in_addr addr)$/;"	f
isdigit	net/lwip/core/ipv4/inet.c	47;"	d	file:
islower	net/lwip/core/ipv4/inet.c	49;"	d	file:
isprint	net/lwip/core/ipv4/inet.c	46;"	d	file:
isspace	net/lwip/core/ipv4/inet.c	50;"	d	file:
isxdigit	net/lwip/core/ipv4/inet.c	48;"	d	file:
ntohl	net/lwip/core/ipv4/inet.c	/^ntohl(u32_t n)$/;"	f
ntohs	net/lwip/core/ipv4/inet.c	/^ntohs(u16_t n)$/;"	f
FOLD_U32T	net/lwip/core/ipv4/inet_chksum.c	69;"	d	file:
LWIP_CHKSUM	net/lwip/core/ipv4/inet_chksum.c	56;"	d	file:
LWIP_CHKSUM_ALGORITHM	net/lwip/core/ipv4/inet_chksum.c	58;"	d	file:
LWIP_CHKSUM_ALGORITHM	net/lwip/core/ipv4/inet_chksum.c	63;"	d	file:
SWAP_BYTES_IN_WORD	net/lwip/core/ipv4/inet_chksum.c	67;"	d	file:
inet_chksum	net/lwip/core/ipv4/inet_chksum.c	/^inet_chksum(void *dataptr, u16_t len)$/;"	f
inet_chksum_pbuf	net/lwip/core/ipv4/inet_chksum.c	/^inet_chksum_pbuf(struct pbuf *p)$/;"	f
inet_chksum_pseudo	net/lwip/core/ipv4/inet_chksum.c	/^inet_chksum_pseudo(struct pbuf *p,$/;"	f
inet_chksum_pseudo_partial	net/lwip/core/ipv4/inet_chksum.c	/^inet_chksum_pseudo_partial(struct pbuf *p,$/;"	f
lwip_standard_chksum	net/lwip/core/ipv4/inet_chksum.c	/^lwip_standard_chksum(void *dataptr, int len)$/;"	f	file:
lwip_standard_chksum	net/lwip/core/ipv4/inet_chksum.c	/^lwip_standard_chksum(void *dataptr, u16_t len)$/;"	f	file:
ip_debug_print	net/lwip/core/ipv4/ip.c	/^ip_debug_print(struct pbuf *p)$/;"	f
ip_forward	net/lwip/core/ipv4/ip.c	/^ip_forward(struct pbuf *p, struct ip_hdr *iphdr, struct netif *inp)$/;"	f	file:
ip_input	net/lwip/core/ipv4/ip.c	/^ip_input(struct pbuf *p, struct netif *inp)$/;"	f
ip_output	net/lwip/core/ipv4/ip.c	/^ip_output(struct pbuf *p, struct ip_addr *src, struct ip_addr *dest,$/;"	f
ip_output_if	net/lwip/core/ipv4/ip.c	/^ip_output_if(struct pbuf *p, struct ip_addr *src, struct ip_addr *dest,$/;"	f
ip_route	net/lwip/core/ipv4/ip.c	/^ip_route(struct ip_addr *dest)$/;"	f
IP_ADDR_ANY_VALUE	net/lwip/core/ipv4/ip_addr.c	44;"	d	file:
IP_ADDR_BROADCAST_VALUE	net/lwip/core/ipv4/ip_addr.c	45;"	d	file:
ip_addr_any	net/lwip/core/ipv4/ip_addr.c	/^const struct ip_addr ip_addr_any = { IP_ADDR_ANY_VALUE };$/;"	v	typeref:struct:ip_addr
ip_addr_broadcast	net/lwip/core/ipv4/ip_addr.c	/^const struct ip_addr ip_addr_broadcast = { IP_ADDR_BROADCAST_VALUE };$/;"	v	typeref:struct:ip_addr
ip_addr_isbroadcast	net/lwip/core/ipv4/ip_addr.c	/^u8_t ip_addr_isbroadcast(struct ip_addr *addr, struct netif *netif)$/;"	f
IP_ADDRESSES_AND_ID_MATCH	net/lwip/core/ipv4/ip_frag.c	91;"	d	file:
IP_REASS_CHECK_OVERLAP	net/lwip/core/ipv4/ip_frag.c	68;"	d	file:
IP_REASS_FLAG_LASTFRAG	net/lwip/core/ipv4/ip_frag.c	79;"	d	file:
IP_REASS_FREE_OLDEST	net/lwip/core/ipv4/ip_frag.c	76;"	d	file:
buf	net/lwip/core/ipv4/ip_frag.c	/^static u8_t buf[LWIP_MEM_ALIGN_SIZE(IP_FRAG_MAX_MTU)];$/;"	v	file:
end	net/lwip/core/ipv4/ip_frag.c	/^  u16_t end;$/;"	m	struct:ip_reass_helper	file:
ip_frag	net/lwip/core/ipv4/ip_frag.c	/^ip_frag(struct pbuf *p, struct netif *netif, struct ip_addr *dest)$/;"	f
ip_reass	net/lwip/core/ipv4/ip_frag.c	/^ip_reass(struct pbuf *p)$/;"	f
ip_reass_chain_frag_into_datagram_and_validate	net/lwip/core/ipv4/ip_frag.c	/^ip_reass_chain_frag_into_datagram_and_validate(struct ip_reassdata *ipr, struct pbuf *new_p)$/;"	f	file:
ip_reass_dequeue_datagram	net/lwip/core/ipv4/ip_frag.c	/^ip_reass_dequeue_datagram(struct ip_reassdata *ipr, struct ip_reassdata *prev)$/;"	f	file:
ip_reass_enqueue_new_datagram	net/lwip/core/ipv4/ip_frag.c	/^ip_reass_enqueue_new_datagram(struct ip_hdr *fraghdr, int clen)$/;"	f	file:
ip_reass_free_complete_datagram	net/lwip/core/ipv4/ip_frag.c	/^ip_reass_free_complete_datagram(struct ip_reassdata *ipr, struct ip_reassdata *prev)$/;"	f	file:
ip_reass_helper	net/lwip/core/ipv4/ip_frag.c	/^struct ip_reass_helper {$/;"	s	file:
ip_reass_pbufcount	net/lwip/core/ipv4/ip_frag.c	/^static u16_t ip_reass_pbufcount;$/;"	v	file:
ip_reass_remove_oldest_datagram	net/lwip/core/ipv4/ip_frag.c	/^ip_reass_remove_oldest_datagram(struct ip_hdr *fraghdr, int pbufs_needed)$/;"	f	file:
ip_reass_tmr	net/lwip/core/ipv4/ip_frag.c	/^ip_reass_tmr(void)$/;"	f
next_pbuf	net/lwip/core/ipv4/ip_frag.c	/^  struct pbuf *next_pbuf;$/;"	m	struct:ip_reass_helper	typeref:struct:ip_reass_helper::pbuf	file:
reassdatagrams	net/lwip/core/ipv4/ip_frag.c	/^static struct ip_reassdata *reassdatagrams;$/;"	v	typeref:struct:ip_reassdata	file:
start	net/lwip/core/ipv4/ip_frag.c	/^  u16_t start;$/;"	m	struct:ip_reass_helper	file:
icmp_dest_unreach	net/lwip/core/ipv6/icmp6.c	/^icmp_dest_unreach(struct pbuf *p, enum icmp_dur_type t)$/;"	f
icmp_input	net/lwip/core/ipv6/icmp6.c	/^icmp_input(struct pbuf *p, struct netif *inp)$/;"	f
icmp_time_exceeded	net/lwip/core/ipv6/icmp6.c	/^icmp_time_exceeded(struct pbuf *p, enum icmp_te_type t)$/;"	f
chksum	net/lwip/core/ipv6/inet6.c	/^chksum(void *dataptr, u16_t len)$/;"	f	file:
inet_chksum	net/lwip/core/ipv6/inet6.c	/^inet_chksum(void *dataptr, u16_t len)$/;"	f
inet_chksum_pbuf	net/lwip/core/ipv6/inet6.c	/^inet_chksum_pbuf(struct pbuf *p)$/;"	f
inet_chksum_pseudo	net/lwip/core/ipv6/inet6.c	/^inet_chksum_pseudo(struct pbuf *p,$/;"	f
ip_debug_print	net/lwip/core/ipv6/ip6.c	/^ip_debug_print(struct pbuf *p)$/;"	f
ip_forward	net/lwip/core/ipv6/ip6.c	/^ip_forward(struct pbuf *p, struct ip_hdr *iphdr)$/;"	f	file:
ip_init	net/lwip/core/ipv6/ip6.c	/^ip_init(void)$/;"	f
ip_input	net/lwip/core/ipv6/ip6.c	/^ip_input(struct pbuf *p, struct netif *inp) {$/;"	f
ip_output	net/lwip/core/ipv6/ip6.c	/^ip_output(struct pbuf *p, struct ip_addr *src, struct ip_addr *dest,$/;"	f
ip_output_if	net/lwip/core/ipv6/ip6.c	/^ip_output_if (struct pbuf *p, struct ip_addr *src, struct ip_addr *dest,$/;"	f
ip_route	net/lwip/core/ipv6/ip6.c	/^ip_route(struct ip_addr *dest)$/;"	f
ip_addr_cmp	net/lwip/core/ipv6/ip6_addr.c	/^ip_addr_cmp(struct ip_addr *addr1, struct ip_addr *addr2)$/;"	f
ip_addr_isany	net/lwip/core/ipv6/ip6_addr.c	/^ip_addr_isany(struct ip_addr *addr)$/;"	f
ip_addr_netcmp	net/lwip/core/ipv6/ip6_addr.c	/^ip_addr_netcmp(struct ip_addr *addr1, struct ip_addr *addr2,$/;"	f
ip_addr_set	net/lwip/core/ipv6/ip6_addr.c	/^ip_addr_set(struct ip_addr *dest, struct ip_addr *src)$/;"	f
LWIP_MEM_ALLOC_DECL_PROTECT	net/lwip/core/mem.c	192;"	d	file:
LWIP_MEM_ALLOC_DECL_PROTECT	net/lwip/core/mem.c	203;"	d	file:
LWIP_MEM_ALLOC_PROTECT	net/lwip/core/mem.c	193;"	d	file:
LWIP_MEM_ALLOC_PROTECT	net/lwip/core/mem.c	204;"	d	file:
LWIP_MEM_ALLOC_UNPROTECT	net/lwip/core/mem.c	194;"	d	file:
LWIP_MEM_ALLOC_UNPROTECT	net/lwip/core/mem.c	205;"	d	file:
LWIP_MEM_FREE_DECL_PROTECT	net/lwip/core/mem.c	189;"	d	file:
LWIP_MEM_FREE_DECL_PROTECT	net/lwip/core/mem.c	199;"	d	file:
LWIP_MEM_FREE_PROTECT	net/lwip/core/mem.c	190;"	d	file:
LWIP_MEM_FREE_PROTECT	net/lwip/core/mem.c	200;"	d	file:
LWIP_MEM_FREE_UNPROTECT	net/lwip/core/mem.c	191;"	d	file:
LWIP_MEM_FREE_UNPROTECT	net/lwip/core/mem.c	201;"	d	file:
MEM_SIZE_ALIGNED	net/lwip/core/mem.c	170;"	d	file:
MIN_SIZE	net/lwip/core/mem.c	165;"	d	file:
MIN_SIZE_ALIGNED	net/lwip/core/mem.c	168;"	d	file:
SIZEOF_STRUCT_MEM	net/lwip/core/mem.c	169;"	d	file:
lfree	net/lwip/core/mem.c	/^static struct mem *lfree;$/;"	v	typeref:struct:mem	file:
mem	net/lwip/core/mem.c	/^struct mem {$/;"	s	file:
mem_calloc	net/lwip/core/mem.c	/^void *mem_calloc(mem_size_t count, mem_size_t size)$/;"	f
mem_free	net/lwip/core/mem.c	/^mem_free(void *rmem)$/;"	f
mem_free_count	net/lwip/core/mem.c	/^static volatile u8_t mem_free_count;$/;"	v	file:
mem_helper	net/lwip/core/mem.c	/^struct mem_helper$/;"	s	file:
mem_init	net/lwip/core/mem.c	/^mem_init(void)$/;"	f
mem_malloc	net/lwip/core/mem.c	/^mem_malloc(mem_size_t size)$/;"	f
mem_realloc	net/lwip/core/mem.c	/^mem_realloc(void *rmem, mem_size_t newsize)$/;"	f
mem_sem	net/lwip/core/mem.c	/^static sys_sem_t mem_sem;$/;"	v	file:
next	net/lwip/core/mem.c	/^  mem_size_t next;$/;"	m	struct:mem	file:
plug_holes	net/lwip/core/mem.c	/^plug_holes(struct mem *mem)$/;"	f	file:
poolnr	net/lwip/core/mem.c	/^   memp_t poolnr;$/;"	m	struct:mem_helper	file:
prev	net/lwip/core/mem.c	/^  mem_size_t prev;$/;"	m	struct:mem	file:
ram	net/lwip/core/mem.c	/^static u8_t *ram;$/;"	v	file:
ram_end	net/lwip/core/mem.c	/^static struct mem *ram_end;$/;"	v	typeref:struct:mem	file:
ram_heap	net/lwip/core/mem.c	/^static u8_t ram_heap[MEM_SIZE_ALIGNED + (2*SIZEOF_STRUCT_MEM) + MEM_ALIGNMENT];$/;"	v	file:
used	net/lwip/core/mem.c	/^  u8_t used;$/;"	m	struct:mem	file:
LWIP_MEMPOOL	net/lwip/core/memp.c	117;"	d	file:
LWIP_MEMPOOL	net/lwip/core/memp.c	123;"	d	file:
LWIP_MEMPOOL	net/lwip/core/memp.c	130;"	d	file:
LWIP_MEMPOOL	net/lwip/core/memp.c	137;"	d	file:
MEMP_ALIGN_SIZE	net/lwip/core/memp.c	104;"	d	file:
MEMP_ALIGN_SIZE	net/lwip/core/memp.c	95;"	d	file:
MEMP_SANITY_REGION_AFTER	net/lwip/core/memp.c	85;"	d	file:
MEMP_SANITY_REGION_AFTER_ALIGNED	net/lwip/core/memp.c	88;"	d	file:
MEMP_SANITY_REGION_AFTER_ALIGNED	net/lwip/core/memp.c	90;"	d	file:
MEMP_SANITY_REGION_BEFORE	net/lwip/core/memp.c	77;"	d	file:
MEMP_SANITY_REGION_BEFORE_ALIGNED	net/lwip/core/memp.c	80;"	d	file:
MEMP_SANITY_REGION_BEFORE_ALIGNED	net/lwip/core/memp.c	82;"	d	file:
MEMP_SIZE	net/lwip/core/memp.c	103;"	d	file:
MEMP_SIZE	net/lwip/core/memp.c	94;"	d	file:
file	net/lwip/core/memp.c	/^  const char *file;$/;"	m	struct:memp	file:
line	net/lwip/core/memp.c	/^  int line;$/;"	m	struct:memp	file:
memp	net/lwip/core/memp.c	/^struct memp {$/;"	s	file:
memp_desc	net/lwip/core/memp.c	/^static const char *memp_desc[MEMP_MAX] = {$/;"	v	file:
memp_free	net/lwip/core/memp.c	/^memp_free(memp_t type, void *mem)$/;"	f
memp_init	net/lwip/core/memp.c	/^memp_init(void)$/;"	f
memp_malloc	net/lwip/core/memp.c	/^memp_malloc(memp_t type)$/;"	f
memp_memory	net/lwip/core/memp.c	/^static u8_t memp_memory[MEM_ALIGNMENT - 1 $/;"	v	file:
memp_num	net/lwip/core/memp.c	/^static const u16_t memp_num[MEMP_MAX] = {$/;"	v	file:
memp_overflow_check_all	net/lwip/core/memp.c	/^memp_overflow_check_all(void)$/;"	f	file:
memp_overflow_check_element	net/lwip/core/memp.c	/^memp_overflow_check_element(struct memp *p, u16_t memp_size)$/;"	f	file:
memp_overflow_init	net/lwip/core/memp.c	/^memp_overflow_init(void)$/;"	f	file:
memp_sanity	net/lwip/core/memp.c	/^memp_sanity(void)$/;"	f	file:
memp_sizes	net/lwip/core/memp.c	/^const u16_t memp_sizes[MEMP_MAX] = {$/;"	v	file:
memp_tab	net/lwip/core/memp.c	/^static struct memp *memp_tab[MEMP_MAX];$/;"	v	typeref:struct:memp	file:
next	net/lwip/core/memp.c	/^  struct memp *next;$/;"	m	struct:memp	typeref:struct:memp::memp	file:
NETIF_LINK_CALLBACK	net/lwip/core/netif.c	62;"	d	file:
NETIF_LINK_CALLBACK	net/lwip/core/netif.c	64;"	d	file:
NETIF_STATUS_CALLBACK	net/lwip/core/netif.c	56;"	d	file:
NETIF_STATUS_CALLBACK	net/lwip/core/netif.c	58;"	d	file:
netif_add	net/lwip/core/netif.c	/^netif_add(struct netif *netif, struct ip_addr *ipaddr, struct ip_addr *netmask,$/;"	f
netif_default	net/lwip/core/netif.c	/^struct netif *netif_default;$/;"	v	typeref:struct:netif
netif_find	net/lwip/core/netif.c	/^netif_find(char *name)$/;"	f
netif_is_link_up	net/lwip/core/netif.c	/^u8_t netif_is_link_up(struct netif *netif)$/;"	f
netif_is_up	net/lwip/core/netif.c	/^u8_t netif_is_up(struct netif *netif)$/;"	f
netif_list	net/lwip/core/netif.c	/^struct netif *netif_list;$/;"	v	typeref:struct:netif
netif_loop_output	net/lwip/core/netif.c	/^netif_loop_output(struct netif *netif, struct pbuf *p,$/;"	f
netif_poll	net/lwip/core/netif.c	/^netif_poll(struct netif *netif)$/;"	f
netif_poll_all	net/lwip/core/netif.c	/^netif_poll_all(void)$/;"	f
netif_remove	net/lwip/core/netif.c	/^void netif_remove(struct netif * netif)$/;"	f
netif_set_addr	net/lwip/core/netif.c	/^netif_set_addr(struct netif *netif, struct ip_addr *ipaddr, struct ip_addr *netmask,$/;"	f
netif_set_default	net/lwip/core/netif.c	/^netif_set_default(struct netif *netif)$/;"	f
netif_set_down	net/lwip/core/netif.c	/^void netif_set_down(struct netif *netif)$/;"	f
netif_set_gw	net/lwip/core/netif.c	/^netif_set_gw(struct netif *netif, struct ip_addr *gw)$/;"	f
netif_set_ipaddr	net/lwip/core/netif.c	/^netif_set_ipaddr(struct netif *netif, struct ip_addr *ipaddr)$/;"	f
netif_set_link_callback	net/lwip/core/netif.c	/^void netif_set_link_callback(struct netif *netif, void (* link_callback)(struct netif *netif ))$/;"	f
netif_set_link_down	net/lwip/core/netif.c	/^void netif_set_link_down(struct netif *netif )$/;"	f
netif_set_link_up	net/lwip/core/netif.c	/^void netif_set_link_up(struct netif *netif )$/;"	f
netif_set_netmask	net/lwip/core/netif.c	/^netif_set_netmask(struct netif *netif, struct ip_addr *netmask)$/;"	f
netif_set_status_callback	net/lwip/core/netif.c	/^void netif_set_status_callback(struct netif *netif, void (* status_callback)(struct netif *netif ))$/;"	f
netif_set_up	net/lwip/core/netif.c	/^void netif_set_up(struct netif *netif)$/;"	f
PBUF_POOL_BUFSIZE_ALIGNED	net/lwip/core/pbuf.c	79;"	d	file:
SIZEOF_STRUCT_PBUF	net/lwip/core/pbuf.c	76;"	d	file:
pbuf_alloc	net/lwip/core/pbuf.c	/^pbuf_alloc(pbuf_layer layer, u16_t length, pbuf_type type)$/;"	f
pbuf_cat	net/lwip/core/pbuf.c	/^pbuf_cat(struct pbuf *h, struct pbuf *t)$/;"	f
pbuf_chain	net/lwip/core/pbuf.c	/^pbuf_chain(struct pbuf *h, struct pbuf *t)$/;"	f
pbuf_clen	net/lwip/core/pbuf.c	/^pbuf_clen(struct pbuf *p)$/;"	f
pbuf_copy	net/lwip/core/pbuf.c	/^pbuf_copy(struct pbuf *p_to, struct pbuf *p_from)$/;"	f
pbuf_copy_partial	net/lwip/core/pbuf.c	/^pbuf_copy_partial(struct pbuf *buf, void *dataptr, u16_t len, u16_t offset)$/;"	f
pbuf_dechain	net/lwip/core/pbuf.c	/^pbuf_dechain(struct pbuf *p)$/;"	f
pbuf_free	net/lwip/core/pbuf.c	/^pbuf_free(struct pbuf *p)$/;"	f
pbuf_header	net/lwip/core/pbuf.c	/^pbuf_header(struct pbuf *p, s16_t header_size_increment)$/;"	f
pbuf_realloc	net/lwip/core/pbuf.c	/^pbuf_realloc(struct pbuf *p, u16_t new_len)$/;"	f
pbuf_ref	net/lwip/core/pbuf.c	/^pbuf_ref(struct pbuf *p)$/;"	f
raw_bind	net/lwip/core/raw.c	/^raw_bind(struct raw_pcb *pcb, struct ip_addr *ipaddr)$/;"	f
raw_connect	net/lwip/core/raw.c	/^raw_connect(struct raw_pcb *pcb, struct ip_addr *ipaddr)$/;"	f
raw_input	net/lwip/core/raw.c	/^raw_input(struct pbuf *p, struct netif *inp)$/;"	f
raw_new	net/lwip/core/raw.c	/^raw_new(u8_t proto) {$/;"	f
raw_pcbs	net/lwip/core/raw.c	/^static struct raw_pcb *raw_pcbs;$/;"	v	typeref:struct:raw_pcb	file:
raw_recv	net/lwip/core/raw.c	/^raw_recv(struct raw_pcb *pcb,$/;"	f
raw_remove	net/lwip/core/raw.c	/^raw_remove(struct raw_pcb *pcb)$/;"	f
raw_send	net/lwip/core/raw.c	/^raw_send(struct raw_pcb *pcb, struct pbuf *p)$/;"	f
raw_sendto	net/lwip/core/raw.c	/^raw_sendto(struct raw_pcb *pcb, struct pbuf *p, struct ip_addr *ipaddr)$/;"	f
snmp_asn1_dec_length	net/lwip/core/snmp/asn1_dec.c	/^snmp_asn1_dec_length(struct pbuf *p, u16_t ofs, u8_t *octets_used, u16_t *length)$/;"	f
snmp_asn1_dec_oid	net/lwip/core/snmp/asn1_dec.c	/^snmp_asn1_dec_oid(struct pbuf *p, u16_t ofs, u16_t len, struct snmp_obj_id *oid)$/;"	f
snmp_asn1_dec_raw	net/lwip/core/snmp/asn1_dec.c	/^snmp_asn1_dec_raw(struct pbuf *p, u16_t ofs, u16_t len, u16_t raw_len, u8_t *raw)$/;"	f
snmp_asn1_dec_s32t	net/lwip/core/snmp/asn1_dec.c	/^snmp_asn1_dec_s32t(struct pbuf *p, u16_t ofs, u16_t len, s32_t *value)$/;"	f
snmp_asn1_dec_type	net/lwip/core/snmp/asn1_dec.c	/^snmp_asn1_dec_type(struct pbuf *p, u16_t ofs, u8_t *type)$/;"	f
snmp_asn1_dec_u32t	net/lwip/core/snmp/asn1_dec.c	/^snmp_asn1_dec_u32t(struct pbuf *p, u16_t ofs, u16_t len, u32_t *value)$/;"	f
snmp_asn1_enc_length	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_length(struct pbuf *p, u16_t ofs, u16_t length)$/;"	f
snmp_asn1_enc_length_cnt	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_length_cnt(u16_t length, u8_t *octets_needed)$/;"	f
snmp_asn1_enc_oid	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_oid(struct pbuf *p, u16_t ofs, u8_t ident_len, s32_t *ident)$/;"	f
snmp_asn1_enc_oid_cnt	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_oid_cnt(u8_t ident_len, s32_t *ident, u16_t *octets_needed)$/;"	f
snmp_asn1_enc_raw	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_raw(struct pbuf *p, u16_t ofs, u8_t raw_len, u8_t *raw)$/;"	f
snmp_asn1_enc_s32t	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_s32t(struct pbuf *p, u16_t ofs, u8_t octets_needed, s32_t value)$/;"	f
snmp_asn1_enc_s32t_cnt	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_s32t_cnt(s32_t value, u16_t *octets_needed)$/;"	f
snmp_asn1_enc_type	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_type(struct pbuf *p, u16_t ofs, u8_t type)$/;"	f
snmp_asn1_enc_u32t	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_u32t(struct pbuf *p, u16_t ofs, u8_t octets_needed, u32_t value)$/;"	f
snmp_asn1_enc_u32t_cnt	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_u32t_cnt(u32_t value, u16_t *octets_needed)$/;"	f
MIB2_GROUPS	net/lwip/core/snmp/mib2.c	677;"	d	file:
MIB2_GROUPS	net/lwip/core/snmp/mib2.c	679;"	d	file:
SNMP_ENTERPRISE_ID	net/lwip/core/snmp/mib2.c	65;"	d	file:
SNMP_GET_SYSUPTIME	net/lwip/core/snmp/mib2.c	74;"	d	file:
SNMP_SYSOBJID	net/lwip/core/snmp/mib2.c	67;"	d	file:
SNMP_SYSOBJID_LEN	net/lwip/core/snmp/mib2.c	66;"	d	file:
SNMP_SYSSERVICES	net/lwip/core/snmp/mib2.c	70;"	d	file:
arptree_root	net/lwip/core/snmp/mib2.c	/^struct mib_list_rootnode arptree_root = {$/;"	v	typeref:struct:mib_list_rootnode
at	net/lwip/core/snmp/mib2.c	/^struct mib_ram_array_node at = {$/;"	v	typeref:struct:mib_ram_array_node
at_id	net/lwip/core/snmp/mib2.c	/^s32_t at_id = 1;$/;"	v
atentry	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node atentry = {$/;"	v	typeref:struct:mib_array_node
atentry_get_object_def	net/lwip/core/snmp/mib2.c	/^atentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
atentry_get_value	net/lwip/core/snmp/mib2.c	/^atentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
atentry_ids	net/lwip/core/snmp/mib2.c	/^const s32_t atentry_ids[3] = { 1, 2, 3 };$/;"	v
atentry_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const atentry_nodes[3] = {$/;"	v
attable	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node attable = {$/;"	v	typeref:struct:mib_array_node
attable_id	net/lwip/core/snmp/mib2.c	/^const s32_t attable_id = 1;$/;"	v
attable_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* const attable_node = (struct mib_node* const)&atentry;$/;"	v
icmp	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node icmp = {$/;"	v	typeref:struct:mib_array_node
icmp_get_object_def	net/lwip/core/snmp/mib2.c	/^icmp_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
icmp_get_value	net/lwip/core/snmp/mib2.c	/^icmp_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
icmp_ids	net/lwip/core/snmp/mib2.c	/^const s32_t icmp_ids[26] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 };$/;"	v
icmp_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const icmp_nodes[26] = {$/;"	v
icmp_scalar	net/lwip/core/snmp/mib2.c	/^const mib_scalar_node icmp_scalar = {$/;"	v
icmpinaddrmaskreps	net/lwip/core/snmp/mib2.c	/^             icmpinaddrmaskreps = 0,$/;"	v	file:
icmpinaddrmasks	net/lwip/core/snmp/mib2.c	/^             icmpinaddrmasks = 0,$/;"	v	file:
icmpindestunreachs	net/lwip/core/snmp/mib2.c	/^             icmpindestunreachs = 0,$/;"	v	file:
icmpinechoreps	net/lwip/core/snmp/mib2.c	/^             icmpinechoreps = 0,$/;"	v	file:
icmpinechos	net/lwip/core/snmp/mib2.c	/^             icmpinechos = 0,$/;"	v	file:
icmpinerrors	net/lwip/core/snmp/mib2.c	/^             icmpinerrors = 0,$/;"	v	file:
icmpinmsgs	net/lwip/core/snmp/mib2.c	/^static u32_t icmpinmsgs = 0,$/;"	v	file:
icmpinparmprobs	net/lwip/core/snmp/mib2.c	/^             icmpinparmprobs = 0,$/;"	v	file:
icmpinredirects	net/lwip/core/snmp/mib2.c	/^             icmpinredirects = 0,$/;"	v	file:
icmpinsrcquenchs	net/lwip/core/snmp/mib2.c	/^             icmpinsrcquenchs = 0,$/;"	v	file:
icmpintimeexcds	net/lwip/core/snmp/mib2.c	/^             icmpintimeexcds = 0,$/;"	v	file:
icmpintimestampreps	net/lwip/core/snmp/mib2.c	/^             icmpintimestampreps = 0,$/;"	v	file:
icmpintimestamps	net/lwip/core/snmp/mib2.c	/^             icmpintimestamps = 0,$/;"	v	file:
icmpoutaddrmaskreps	net/lwip/core/snmp/mib2.c	/^             icmpoutaddrmaskreps = 0;$/;"	v	file:
icmpoutaddrmasks	net/lwip/core/snmp/mib2.c	/^             icmpoutaddrmasks = 0,$/;"	v	file:
icmpoutdestunreachs	net/lwip/core/snmp/mib2.c	/^             icmpoutdestunreachs = 0,$/;"	v	file:
icmpoutechoreps	net/lwip/core/snmp/mib2.c	/^             icmpoutechoreps = 0,$/;"	v	file:
icmpoutechos	net/lwip/core/snmp/mib2.c	/^             icmpoutechos = 0,$/;"	v	file:
icmpouterrors	net/lwip/core/snmp/mib2.c	/^             icmpouterrors = 0,$/;"	v	file:
icmpoutmsgs	net/lwip/core/snmp/mib2.c	/^             icmpoutmsgs = 0,$/;"	v	file:
icmpoutparmprobs	net/lwip/core/snmp/mib2.c	/^             icmpoutparmprobs = 0,$/;"	v	file:
icmpoutredirects	net/lwip/core/snmp/mib2.c	/^             icmpoutredirects = 0,$/;"	v	file:
icmpoutsrcquenchs	net/lwip/core/snmp/mib2.c	/^             icmpoutsrcquenchs = 0,$/;"	v	file:
icmpouttimeexcds	net/lwip/core/snmp/mib2.c	/^             icmpouttimeexcds = 0,$/;"	v	file:
icmpouttimestampreps	net/lwip/core/snmp/mib2.c	/^             icmpouttimestampreps = 0,$/;"	v	file:
icmpouttimestamps	net/lwip/core/snmp/mib2.c	/^             icmpouttimestamps = 0,$/;"	v	file:
ifentry	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node ifentry = {$/;"	v	typeref:struct:mib_array_node
ifentry_get_object_def	net/lwip/core/snmp/mib2.c	/^ifentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
ifentry_get_value	net/lwip/core/snmp/mib2.c	/^ifentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ifentry_ids	net/lwip/core/snmp/mib2.c	/^const s32_t ifentry_ids[22] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22 };$/;"	v
ifentry_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const ifentry_nodes[22] = {$/;"	v
ifentry_set_test	net/lwip/core/snmp/mib2.c	/^ifentry_set_test (struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ifentry_set_value	net/lwip/core/snmp/mib2.c	/^ifentry_set_value (struct obj_def *od, u16_t len, void *value)$/;"	f	file:
iflist_root	net/lwip/core/snmp/mib2.c	/^struct mib_list_rootnode iflist_root = {$/;"	v	typeref:struct:mib_list_rootnode
ifspecific	net/lwip/core/snmp/mib2.c	/^static const struct snmp_obj_id ifspecific = {2, {0, 0}};$/;"	v	typeref:struct:snmp_obj_id	file:
iftable	net/lwip/core/snmp/mib2.c	/^struct mib_ram_array_node iftable = {$/;"	v	typeref:struct:mib_ram_array_node
iftable_id	net/lwip/core/snmp/mib2.c	/^s32_t iftable_id = 1;$/;"	v
iftable_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* iftable_node = (struct mib_node* const)&ifentry;$/;"	v	typeref:struct:mib_node
interfaces	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node interfaces = {$/;"	v	typeref:struct:mib_array_node
interfaces_get_object_def	net/lwip/core/snmp/mib2.c	/^interfaces_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
interfaces_get_value	net/lwip/core/snmp/mib2.c	/^interfaces_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
interfaces_ids	net/lwip/core/snmp/mib2.c	/^const s32_t interfaces_ids[2] = { 1, 2 };$/;"	v
interfaces_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const interfaces_nodes[2] = {$/;"	v
interfaces_scalar	net/lwip/core/snmp/mib2.c	/^const mib_scalar_node interfaces_scalar = {$/;"	v
internet	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node internet = {$/;"	v	typeref:struct:mib_array_node
internet_ids	net/lwip/core/snmp/mib2.c	/^const s32_t internet_ids[1] = { 2 };$/;"	v
internet_ids	net/lwip/core/snmp/mib2.c	/^s32_t internet_ids[2] = { 2, 4 };$/;"	v
internet_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const internet_nodes[1] = { (struct mib_node* const)&mgmt };$/;"	v
internet_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const internet_nodes[2] = { (struct mib_node* const)&mgmt, (struct mib_node* const)&private };$/;"	v
ip_addrentry_get_object_def	net/lwip/core/snmp/mib2.c	/^ip_addrentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
ip_addrentry_get_value	net/lwip/core/snmp/mib2.c	/^ip_addrentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ip_get_object_def	net/lwip/core/snmp/mib2.c	/^ip_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
ip_get_value	net/lwip/core/snmp/mib2.c	/^ip_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ip_ids	net/lwip/core/snmp/mib2.c	/^const s32_t ip_ids[23] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 };$/;"	v
ip_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const ip_nodes[23] = {$/;"	v
ip_ntomentry_get_object_def	net/lwip/core/snmp/mib2.c	/^ip_ntomentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
ip_ntomentry_get_value	net/lwip/core/snmp/mib2.c	/^ip_ntomentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ip_rteentry_get_object_def	net/lwip/core/snmp/mib2.c	/^ip_rteentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
ip_rteentry_get_value	net/lwip/core/snmp/mib2.c	/^ip_rteentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ip_scalar	net/lwip/core/snmp/mib2.c	/^const mib_scalar_node ip_scalar = {$/;"	v
ip_set_test	net/lwip/core/snmp/mib2.c	/^ip_set_test(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ipaddrentry	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node ipaddrentry = {$/;"	v	typeref:struct:mib_array_node
ipaddrentry_ids	net/lwip/core/snmp/mib2.c	/^const s32_t ipaddrentry_ids[5] = { 1, 2, 3, 4, 5 };$/;"	v
ipaddrentry_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const ipaddrentry_nodes[5] = {$/;"	v
ipaddrtable	net/lwip/core/snmp/mib2.c	/^struct mib_ram_array_node ipaddrtable = {$/;"	v	typeref:struct:mib_ram_array_node
ipaddrtable_id	net/lwip/core/snmp/mib2.c	/^s32_t ipaddrtable_id = 1;$/;"	v
ipaddrtable_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* ipaddrtable_node = (struct mib_node* const)&ipaddrentry;$/;"	v	typeref:struct:mib_node
ipaddrtree_root	net/lwip/core/snmp/mib2.c	/^struct mib_list_rootnode ipaddrtree_root = {$/;"	v	typeref:struct:mib_list_rootnode
ipforwdatagrams	net/lwip/core/snmp/mib2.c	/^             ipforwdatagrams = 0,$/;"	v	file:
ipfragcreates	net/lwip/core/snmp/mib2.c	/^             ipfragcreates = 0,$/;"	v	file:
ipfragfails	net/lwip/core/snmp/mib2.c	/^             ipfragfails = 0,$/;"	v	file:
ipfragoks	net/lwip/core/snmp/mib2.c	/^             ipfragoks = 0,$/;"	v	file:
ipinaddrerrors	net/lwip/core/snmp/mib2.c	/^             ipinaddrerrors = 0,$/;"	v	file:
ipindelivers	net/lwip/core/snmp/mib2.c	/^             ipindelivers = 0,$/;"	v	file:
ipindiscards	net/lwip/core/snmp/mib2.c	/^             ipindiscards = 0,$/;"	v	file:
ipinhdrerrors	net/lwip/core/snmp/mib2.c	/^             ipinhdrerrors = 0,$/;"	v	file:
ipinreceives	net/lwip/core/snmp/mib2.c	/^static u32_t ipinreceives = 0,$/;"	v	file:
ipinunknownprotos	net/lwip/core/snmp/mib2.c	/^             ipinunknownprotos = 0,$/;"	v	file:
ipntomentry	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node ipntomentry = {$/;"	v	typeref:struct:mib_array_node
ipntomentry_ids	net/lwip/core/snmp/mib2.c	/^const s32_t ipntomentry_ids[4] = { 1, 2, 3, 4 };$/;"	v
ipntomentry_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const ipntomentry_nodes[4] = {$/;"	v
ipntomtable	net/lwip/core/snmp/mib2.c	/^struct mib_ram_array_node ipntomtable = {$/;"	v	typeref:struct:mib_ram_array_node
ipntomtable_id	net/lwip/core/snmp/mib2.c	/^s32_t ipntomtable_id = 1;$/;"	v
ipntomtable_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* ipntomtable_node = (struct mib_node* const)&ipntomentry;$/;"	v	typeref:struct:mib_node
ipntomtree_root	net/lwip/core/snmp/mib2.c	/^struct mib_list_rootnode ipntomtree_root = {$/;"	v	typeref:struct:mib_list_rootnode
ipoutdiscards	net/lwip/core/snmp/mib2.c	/^             ipoutdiscards = 0,$/;"	v	file:
ipoutnoroutes	net/lwip/core/snmp/mib2.c	/^             ipoutnoroutes = 0,$/;"	v	file:
ipoutrequests	net/lwip/core/snmp/mib2.c	/^             ipoutrequests = 0,$/;"	v	file:
ipreasmfails	net/lwip/core/snmp/mib2.c	/^             ipreasmfails = 0,$/;"	v	file:
ipreasmoks	net/lwip/core/snmp/mib2.c	/^             ipreasmoks = 0,$/;"	v	file:
ipreasmreqds	net/lwip/core/snmp/mib2.c	/^             ipreasmreqds = 0,$/;"	v	file:
iprouteinfo	net/lwip/core/snmp/mib2.c	/^static const struct snmp_obj_id iprouteinfo = {2, {0, 0}};$/;"	v	typeref:struct:snmp_obj_id	file:
iproutingdiscards	net/lwip/core/snmp/mib2.c	/^             iproutingdiscards = 0;$/;"	v	file:
iprteentry	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node iprteentry = {$/;"	v	typeref:struct:mib_array_node
iprteentry_ids	net/lwip/core/snmp/mib2.c	/^const s32_t iprteentry_ids[13] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 };$/;"	v
iprteentry_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const iprteentry_nodes[13] = {$/;"	v
iprtetable	net/lwip/core/snmp/mib2.c	/^struct mib_ram_array_node iprtetable = {$/;"	v	typeref:struct:mib_ram_array_node
iprtetable_id	net/lwip/core/snmp/mib2.c	/^s32_t iprtetable_id = 1;$/;"	v
iprtetable_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* iprtetable_node = (struct mib_node* const)&iprteentry;$/;"	v	typeref:struct:mib_node
iprtetree_root	net/lwip/core/snmp/mib2.c	/^struct mib_list_rootnode iprtetree_root = {$/;"	v	typeref:struct:mib_list_rootnode
mgmt	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node mgmt = {$/;"	v	typeref:struct:mib_array_node
mgmt_ids	net/lwip/core/snmp/mib2.c	/^const s32_t mgmt_ids[1] = { 1 };$/;"	v
mgmt_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const mgmt_nodes[1] = { (struct mib_node* const)&mib2 };$/;"	v
mib2	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node mib2 = {$/;"	v	typeref:struct:mib_array_node
mib2_at_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* mib2_at_node = (struct mib_node* const)&attable;$/;"	v	typeref:struct:mib_node
mib2_ids	net/lwip/core/snmp/mib2.c	/^const s32_t mib2_ids[MIB2_GROUPS] =$/;"	v
mib2_ip	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node mib2_ip = {$/;"	v	typeref:struct:mib_array_node
mib2_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const mib2_nodes[MIB2_GROUPS] = {$/;"	v
noleafs_get_object_def	net/lwip/core/snmp/mib2.c	/^noleafs_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f
noleafs_get_value	net/lwip/core/snmp/mib2.c	/^noleafs_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f
noleafs_set_test	net/lwip/core/snmp/mib2.c	/^noleafs_set_test(struct obj_def *od, u16_t len, void *value)$/;"	f
noleafs_set_value	net/lwip/core/snmp/mib2.c	/^noleafs_set_value(struct obj_def *od, u16_t len, void *value)$/;"	f
objectidncpy	net/lwip/core/snmp/mib2.c	/^void objectidncpy(s32_t *dst, s32_t *src, u8_t n)$/;"	f
ocstrncpy	net/lwip/core/snmp/mib2.c	/^void ocstrncpy(u8_t *dst, u8_t *src, u8_t n)$/;"	f
snmp	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node snmp = {$/;"	v	typeref:struct:mib_array_node
snmp_add_ifinoctets	net/lwip/core/snmp/mib2.c	/^void snmp_add_ifinoctets(struct netif *ni, u32_t value)$/;"	f
snmp_add_ifoutoctets	net/lwip/core/snmp/mib2.c	/^void snmp_add_ifoutoctets(struct netif *ni, u32_t value)$/;"	f
snmp_add_snmpintotalreqvars	net/lwip/core/snmp/mib2.c	/^void snmp_add_snmpintotalreqvars(u8_t value)$/;"	f
snmp_add_snmpintotalsetvars	net/lwip/core/snmp/mib2.c	/^void snmp_add_snmpintotalsetvars(u8_t value)$/;"	f
snmp_add_sysuptime	net/lwip/core/snmp/mib2.c	/^void snmp_add_sysuptime(u32_t value)$/;"	f
snmp_dec_iflist	net/lwip/core/snmp/mib2.c	/^void snmp_dec_iflist(void)$/;"	f
snmp_delete_arpidx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_delete_arpidx_tree(struct netif *ni, struct ip_addr *ip)$/;"	f
snmp_delete_ipaddridx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_delete_ipaddridx_tree(struct netif *ni)$/;"	f
snmp_delete_iprteidx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_delete_iprteidx_tree(u8_t dflt, struct netif *ni)$/;"	f
snmp_delete_udpidx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_delete_udpidx_tree(struct udp_pcb *pcb)$/;"	f
snmp_get_object_def	net/lwip/core/snmp/mib2.c	/^snmp_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
snmp_get_snmpenableauthentraps	net/lwip/core/snmp/mib2.c	/^void snmp_get_snmpenableauthentraps(u8_t *value)$/;"	f
snmp_get_snmpgrpid_ptr	net/lwip/core/snmp/mib2.c	/^void snmp_get_snmpgrpid_ptr(struct snmp_obj_id **oid)$/;"	f
snmp_get_sysobjid_ptr	net/lwip/core/snmp/mib2.c	/^void snmp_get_sysobjid_ptr(struct snmp_obj_id **oid)$/;"	f
snmp_get_sysuptime	net/lwip/core/snmp/mib2.c	/^void snmp_get_sysuptime(u32_t *value)$/;"	f
snmp_get_value	net/lwip/core/snmp/mib2.c	/^snmp_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
snmp_ids	net/lwip/core/snmp/mib2.c	/^const s32_t snmp_ids[28] = {$/;"	v
snmp_inc_icmpinaddrmaskreps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinaddrmaskreps(void)$/;"	f
snmp_inc_icmpinaddrmasks	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinaddrmasks(void)$/;"	f
snmp_inc_icmpindestunreachs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpindestunreachs(void)$/;"	f
snmp_inc_icmpinechoreps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinechoreps(void)$/;"	f
snmp_inc_icmpinechos	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinechos(void)$/;"	f
snmp_inc_icmpinerrors	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinerrors(void)$/;"	f
snmp_inc_icmpinmsgs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinmsgs(void)$/;"	f
snmp_inc_icmpinparmprobs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinparmprobs(void)$/;"	f
snmp_inc_icmpinredirects	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinredirects(void)$/;"	f
snmp_inc_icmpinsrcquenchs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinsrcquenchs(void)$/;"	f
snmp_inc_icmpintimeexcds	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpintimeexcds(void)$/;"	f
snmp_inc_icmpintimestampreps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpintimestampreps(void)$/;"	f
snmp_inc_icmpintimestamps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpintimestamps(void)$/;"	f
snmp_inc_icmpoutaddrmaskreps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutaddrmaskreps(void)$/;"	f
snmp_inc_icmpoutaddrmasks	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutaddrmasks(void)$/;"	f
snmp_inc_icmpoutdestunreachs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutdestunreachs(void)$/;"	f
snmp_inc_icmpoutechoreps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutechoreps(void)$/;"	f
snmp_inc_icmpoutechos	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutechos(void)$/;"	f
snmp_inc_icmpouterrors	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpouterrors(void)$/;"	f
snmp_inc_icmpoutmsgs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutmsgs(void)$/;"	f
snmp_inc_icmpoutparmprobs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutparmprobs(void)$/;"	f
snmp_inc_icmpoutredirects	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutredirects(void)$/;"	f
snmp_inc_icmpoutsrcquenchs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutsrcquenchs(void)$/;"	f
snmp_inc_icmpouttimeexcds	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpouttimeexcds(void)$/;"	f
snmp_inc_icmpouttimestampreps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpouttimestampreps(void)$/;"	f
snmp_inc_icmpouttimestamps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpouttimestamps(void)$/;"	f
snmp_inc_ifindiscards	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ifindiscards(struct netif *ni)$/;"	f
snmp_inc_ifinnucastpkts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ifinnucastpkts(struct netif *ni)$/;"	f
snmp_inc_ifinucastpkts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ifinucastpkts(struct netif *ni)$/;"	f
snmp_inc_iflist	net/lwip/core/snmp/mib2.c	/^void snmp_inc_iflist(void)$/;"	f
snmp_inc_ifoutdiscards	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ifoutdiscards(struct netif *ni)$/;"	f
snmp_inc_ifoutnucastpkts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ifoutnucastpkts(struct netif *ni)$/;"	f
snmp_inc_ifoutucastpkts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ifoutucastpkts(struct netif *ni)$/;"	f
snmp_inc_ipforwdatagrams	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipforwdatagrams(void)$/;"	f
snmp_inc_ipfragcreates	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipfragcreates(void)$/;"	f
snmp_inc_ipfragfails	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipfragfails(void)$/;"	f
snmp_inc_ipfragoks	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipfragoks(void)$/;"	f
snmp_inc_ipinaddrerrors	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipinaddrerrors(void)$/;"	f
snmp_inc_ipindelivers	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipindelivers(void)$/;"	f
snmp_inc_ipindiscards	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipindiscards(void)$/;"	f
snmp_inc_ipinhdrerrors	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipinhdrerrors(void)$/;"	f
snmp_inc_ipinreceives	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipinreceives(void)$/;"	f
snmp_inc_ipinunknownprotos	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipinunknownprotos(void)$/;"	f
snmp_inc_ipoutdiscards	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipoutdiscards(void)$/;"	f
snmp_inc_ipoutnoroutes	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipoutnoroutes(void)$/;"	f
snmp_inc_ipoutrequests	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipoutrequests(void)$/;"	f
snmp_inc_ipreasmfails	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipreasmfails(void)$/;"	f
snmp_inc_ipreasmoks	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipreasmoks(void)$/;"	f
snmp_inc_ipreasmreqds	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipreasmreqds(void)$/;"	f
snmp_inc_iproutingdiscards	net/lwip/core/snmp/mib2.c	/^void snmp_inc_iproutingdiscards(void)$/;"	f
snmp_inc_snmpinasnparseerrs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinasnparseerrs(void)$/;"	f
snmp_inc_snmpinbadcommunitynames	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinbadcommunitynames(void)$/;"	f
snmp_inc_snmpinbadcommunityuses	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinbadcommunityuses(void)$/;"	f
snmp_inc_snmpinbadvalues	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinbadvalues(void)$/;"	f
snmp_inc_snmpinbadversions	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinbadversions(void)$/;"	f
snmp_inc_snmpingenerrs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpingenerrs(void)$/;"	f
snmp_inc_snmpingetnexts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpingetnexts(void)$/;"	f
snmp_inc_snmpingetrequests	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpingetrequests(void)$/;"	f
snmp_inc_snmpingetresponses	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpingetresponses(void)$/;"	f
snmp_inc_snmpinnosuchnames	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinnosuchnames(void)$/;"	f
snmp_inc_snmpinpkts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinpkts(void)$/;"	f
snmp_inc_snmpinreadonlys	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinreadonlys(void)$/;"	f
snmp_inc_snmpinsetrequests	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinsetrequests(void)$/;"	f
snmp_inc_snmpintoobigs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpintoobigs(void)$/;"	f
snmp_inc_snmpintraps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpintraps(void)$/;"	f
snmp_inc_snmpoutbadvalues	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutbadvalues(void)$/;"	f
snmp_inc_snmpoutgenerrs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutgenerrs(void)$/;"	f
snmp_inc_snmpoutgetnexts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutgetnexts(void)$/;"	f
snmp_inc_snmpoutgetrequests	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutgetrequests(void)$/;"	f
snmp_inc_snmpoutgetresponses	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutgetresponses(void)$/;"	f
snmp_inc_snmpoutnosuchnames	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutnosuchnames(void)$/;"	f
snmp_inc_snmpoutpkts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutpkts(void)$/;"	f
snmp_inc_snmpoutsetrequests	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutsetrequests(void)$/;"	f
snmp_inc_snmpouttoobigs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpouttoobigs(void)$/;"	f
snmp_inc_snmpouttraps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpouttraps(void)$/;"	f
snmp_inc_sysuptime	net/lwip/core/snmp/mib2.c	/^void snmp_inc_sysuptime(void)$/;"	f
snmp_inc_tcpactiveopens	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpactiveopens(void)$/;"	f
snmp_inc_tcpattemptfails	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpattemptfails(void)$/;"	f
snmp_inc_tcpestabresets	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpestabresets(void)$/;"	f
snmp_inc_tcpinerrs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpinerrs(void)$/;"	f
snmp_inc_tcpinsegs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpinsegs(void)$/;"	f
snmp_inc_tcpoutrsts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpoutrsts(void)$/;"	f
snmp_inc_tcpoutsegs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpoutsegs(void)$/;"	f
snmp_inc_tcppassiveopens	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcppassiveopens(void)$/;"	f
snmp_inc_tcpretranssegs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpretranssegs(void)$/;"	f
snmp_inc_udpindatagrams	net/lwip/core/snmp/mib2.c	/^void snmp_inc_udpindatagrams(void)$/;"	f
snmp_inc_udpinerrors	net/lwip/core/snmp/mib2.c	/^void snmp_inc_udpinerrors(void)$/;"	f
snmp_inc_udpnoports	net/lwip/core/snmp/mib2.c	/^void snmp_inc_udpnoports(void)$/;"	f
snmp_inc_udpoutdatagrams	net/lwip/core/snmp/mib2.c	/^void snmp_inc_udpoutdatagrams(void)$/;"	f
snmp_insert_arpidx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_insert_arpidx_tree(struct netif *ni, struct ip_addr *ip)$/;"	f
snmp_insert_ipaddridx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_insert_ipaddridx_tree(struct netif *ni)$/;"	f
snmp_insert_iprteidx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_insert_iprteidx_tree(u8_t dflt, struct netif *ni)$/;"	f
snmp_insert_udpidx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_insert_udpidx_tree(struct udp_pcb *pcb)$/;"	f
snmp_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const snmp_nodes[28] = {$/;"	v
snmp_scalar	net/lwip/core/snmp/mib2.c	/^const mib_scalar_node snmp_scalar = {$/;"	v
snmp_set_snmpenableauthentraps	net/lwip/core/snmp/mib2.c	/^void snmp_set_snmpenableauthentraps(u8_t *value)$/;"	f
snmp_set_syscontact	net/lwip/core/snmp/mib2.c	/^void snmp_set_syscontact(u8_t *ocstr, u8_t *ocstrlen)$/;"	f
snmp_set_sysdesr	net/lwip/core/snmp/mib2.c	/^void snmp_set_sysdesr(u8_t *str, u8_t *len)$/;"	f
snmp_set_syslocation	net/lwip/core/snmp/mib2.c	/^void snmp_set_syslocation(u8_t *ocstr, u8_t *ocstrlen)$/;"	f
snmp_set_sysname	net/lwip/core/snmp/mib2.c	/^void snmp_set_sysname(u8_t *ocstr, u8_t *ocstrlen)$/;"	f
snmp_set_sysobjid	net/lwip/core/snmp/mib2.c	/^void snmp_set_sysobjid(struct snmp_obj_id *oid)$/;"	f
snmp_set_test	net/lwip/core/snmp/mib2.c	/^snmp_set_test(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
snmp_set_value	net/lwip/core/snmp/mib2.c	/^snmp_set_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
snmpenableauthentraps_default	net/lwip/core/snmp/mib2.c	/^static const u8_t snmpenableauthentraps_default = 2; \/* disabled *\/$/;"	v	file:
snmpenableauthentraps_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* snmpenableauthentraps_ptr = (u8_t*)&snmpenableauthentraps_default;$/;"	v	file:
snmpgrp_id	net/lwip/core/snmp/mib2.c	/^static struct snmp_obj_id snmpgrp_id = {7,{1,3,6,1,2,1,11}};$/;"	v	typeref:struct:snmp_obj_id	file:
snmpinasnparseerrs	net/lwip/core/snmp/mib2.c	/^             snmpinasnparseerrs = 0,$/;"	v	file:
snmpinbadcommunitynames	net/lwip/core/snmp/mib2.c	/^             snmpinbadcommunitynames = 0,$/;"	v	file:
snmpinbadcommunityuses	net/lwip/core/snmp/mib2.c	/^             snmpinbadcommunityuses = 0,$/;"	v	file:
snmpinbadvalues	net/lwip/core/snmp/mib2.c	/^             snmpinbadvalues = 0,$/;"	v	file:
snmpinbadversions	net/lwip/core/snmp/mib2.c	/^             snmpinbadversions = 0,$/;"	v	file:
snmpingenerrs	net/lwip/core/snmp/mib2.c	/^             snmpingenerrs = 0,$/;"	v	file:
snmpingetnexts	net/lwip/core/snmp/mib2.c	/^             snmpingetnexts = 0,$/;"	v	file:
snmpingetrequests	net/lwip/core/snmp/mib2.c	/^             snmpingetrequests = 0,$/;"	v	file:
snmpingetresponses	net/lwip/core/snmp/mib2.c	/^             snmpingetresponses = 0,$/;"	v	file:
snmpinnosuchnames	net/lwip/core/snmp/mib2.c	/^             snmpinnosuchnames = 0,$/;"	v	file:
snmpinpkts	net/lwip/core/snmp/mib2.c	/^static u32_t snmpinpkts = 0,$/;"	v	file:
snmpinreadonlys	net/lwip/core/snmp/mib2.c	/^             snmpinreadonlys = 0,$/;"	v	file:
snmpinsetrequests	net/lwip/core/snmp/mib2.c	/^             snmpinsetrequests = 0,$/;"	v	file:
snmpintoobigs	net/lwip/core/snmp/mib2.c	/^             snmpintoobigs = 0,$/;"	v	file:
snmpintotalreqvars	net/lwip/core/snmp/mib2.c	/^             snmpintotalreqvars = 0,$/;"	v	file:
snmpintotalsetvars	net/lwip/core/snmp/mib2.c	/^             snmpintotalsetvars = 0,$/;"	v	file:
snmpintraps	net/lwip/core/snmp/mib2.c	/^             snmpintraps = 0,$/;"	v	file:
snmpoutbadvalues	net/lwip/core/snmp/mib2.c	/^             snmpoutbadvalues = 0,$/;"	v	file:
snmpoutgenerrs	net/lwip/core/snmp/mib2.c	/^             snmpoutgenerrs = 0,$/;"	v	file:
snmpoutgetnexts	net/lwip/core/snmp/mib2.c	/^             snmpoutgetnexts = 0,$/;"	v	file:
snmpoutgetrequests	net/lwip/core/snmp/mib2.c	/^             snmpoutgetrequests = 0,$/;"	v	file:
snmpoutgetresponses	net/lwip/core/snmp/mib2.c	/^             snmpoutgetresponses = 0,$/;"	v	file:
snmpoutnosuchnames	net/lwip/core/snmp/mib2.c	/^             snmpoutnosuchnames = 0,$/;"	v	file:
snmpoutpkts	net/lwip/core/snmp/mib2.c	/^             snmpoutpkts = 0,$/;"	v	file:
snmpoutsetrequests	net/lwip/core/snmp/mib2.c	/^             snmpoutsetrequests = 0,$/;"	v	file:
snmpouttoobigs	net/lwip/core/snmp/mib2.c	/^             snmpouttoobigs = 0,$/;"	v	file:
snmpouttraps	net/lwip/core/snmp/mib2.c	/^             snmpouttraps = 0;$/;"	v	file:
sys_tem	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node sys_tem = {$/;"	v	typeref:struct:mib_array_node
sys_tem_ids	net/lwip/core/snmp/mib2.c	/^const s32_t sys_tem_ids[7] = { 1, 2, 3, 4, 5, 6, 7 };$/;"	v
sys_tem_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const sys_tem_nodes[7] = {$/;"	v
sys_tem_scalar	net/lwip/core/snmp/mib2.c	/^const mib_scalar_node sys_tem_scalar = {$/;"	v
syscontact_default	net/lwip/core/snmp/mib2.c	/^static const u8_t syscontact_default[] = "";$/;"	v	file:
syscontact_len_default	net/lwip/core/snmp/mib2.c	/^static const u8_t syscontact_len_default = 0;$/;"	v	file:
syscontact_len_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* syscontact_len_ptr = (u8_t*)&syscontact_len_default;$/;"	v	file:
syscontact_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* syscontact_ptr = (u8_t*)&syscontact_default[0];$/;"	v	file:
sysdescr_default	net/lwip/core/snmp/mib2.c	/^static const u8_t sysdescr_default[] = "lwIP";$/;"	v	file:
sysdescr_len_default	net/lwip/core/snmp/mib2.c	/^static const u8_t sysdescr_len_default = 4;$/;"	v	file:
sysdescr_len_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* sysdescr_len_ptr = (u8_t*)&sysdescr_len_default;$/;"	v	file:
sysdescr_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* sysdescr_ptr = (u8_t*)&sysdescr_default[0];$/;"	v	file:
syslocation_default	net/lwip/core/snmp/mib2.c	/^static const u8_t syslocation_default[] = "";$/;"	v	file:
syslocation_len_default	net/lwip/core/snmp/mib2.c	/^static const u8_t syslocation_len_default = 0;$/;"	v	file:
syslocation_len_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* syslocation_len_ptr = (u8_t*)&syslocation_len_default;$/;"	v	file:
syslocation_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* syslocation_ptr = (u8_t*)&syslocation_default[0];$/;"	v	file:
sysname_default	net/lwip/core/snmp/mib2.c	/^static const u8_t sysname_default[] = "FQDN-unk";$/;"	v	file:
sysname_len_default	net/lwip/core/snmp/mib2.c	/^static const u8_t sysname_len_default = 8;$/;"	v	file:
sysname_len_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* sysname_len_ptr = (u8_t*)&sysname_len_default;$/;"	v	file:
sysname_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* sysname_ptr = (u8_t*)&sysname_default[0];$/;"	v	file:
sysobjid	net/lwip/core/snmp/mib2.c	/^static struct snmp_obj_id sysobjid = {SNMP_SYSOBJID_LEN, SNMP_SYSOBJID};$/;"	v	typeref:struct:snmp_obj_id	file:
sysservices	net/lwip/core/snmp/mib2.c	/^static const s32_t sysservices = SNMP_SYSSERVICES;$/;"	v	file:
system_get_object_def	net/lwip/core/snmp/mib2.c	/^system_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
system_get_value	net/lwip/core/snmp/mib2.c	/^system_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
system_set_test	net/lwip/core/snmp/mib2.c	/^system_set_test(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
system_set_value	net/lwip/core/snmp/mib2.c	/^system_set_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
sysuptime	net/lwip/core/snmp/mib2.c	/^static u32_t sysuptime = 0;$/;"	v	file:
tcp	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node tcp = {$/;"	v	typeref:struct:mib_array_node
tcp_get_object_def	net/lwip/core/snmp/mib2.c	/^tcp_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
tcp_get_value	net/lwip/core/snmp/mib2.c	/^tcp_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
tcp_ids	net/lwip/core/snmp/mib2.c	/^const s32_t tcp_ids[15] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 };$/;"	v
tcp_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const tcp_nodes[15] = {$/;"	v
tcp_scalar	net/lwip/core/snmp/mib2.c	/^const mib_scalar_node tcp_scalar = {$/;"	v
tcpactiveopens	net/lwip/core/snmp/mib2.c	/^static u32_t tcpactiveopens = 0,$/;"	v	file:
tcpattemptfails	net/lwip/core/snmp/mib2.c	/^             tcpattemptfails = 0,$/;"	v	file:
tcpconnentry	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node tcpconnentry = {$/;"	v	typeref:struct:mib_array_node
tcpconnentry_get_object_def	net/lwip/core/snmp/mib2.c	/^tcpconnentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
tcpconnentry_get_value	net/lwip/core/snmp/mib2.c	/^tcpconnentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
tcpconnentry_ids	net/lwip/core/snmp/mib2.c	/^const s32_t tcpconnentry_ids[5] = { 1, 2, 3, 4, 5 };$/;"	v
tcpconnentry_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const tcpconnentry_nodes[5] = {$/;"	v
tcpconntable	net/lwip/core/snmp/mib2.c	/^struct mib_ram_array_node tcpconntable = {$/;"	v	typeref:struct:mib_ram_array_node
tcpconntable_id	net/lwip/core/snmp/mib2.c	/^s32_t tcpconntable_id = 1;$/;"	v
tcpconntable_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* tcpconntable_node = (struct mib_node* const)&tcpconnentry;$/;"	v	typeref:struct:mib_node
tcpconntree_root	net/lwip/core/snmp/mib2.c	/^struct mib_list_rootnode tcpconntree_root = {$/;"	v	typeref:struct:mib_list_rootnode
tcpestabresets	net/lwip/core/snmp/mib2.c	/^             tcpestabresets = 0,$/;"	v	file:
tcpinerrs	net/lwip/core/snmp/mib2.c	/^             tcpinerrs = 0,$/;"	v	file:
tcpinsegs	net/lwip/core/snmp/mib2.c	/^             tcpinsegs = 0,$/;"	v	file:
tcpoutrsts	net/lwip/core/snmp/mib2.c	/^             tcpoutrsts = 0;$/;"	v	file:
tcpoutsegs	net/lwip/core/snmp/mib2.c	/^             tcpoutsegs = 0,$/;"	v	file:
tcppassiveopens	net/lwip/core/snmp/mib2.c	/^             tcppassiveopens = 0,$/;"	v	file:
tcpretranssegs	net/lwip/core/snmp/mib2.c	/^             tcpretranssegs = 0,$/;"	v	file:
udp	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node udp = {$/;"	v	typeref:struct:mib_array_node
udp_get_object_def	net/lwip/core/snmp/mib2.c	/^udp_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
udp_get_value	net/lwip/core/snmp/mib2.c	/^udp_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
udp_ids	net/lwip/core/snmp/mib2.c	/^const s32_t udp_ids[5] = { 1, 2, 3, 4, 5 };$/;"	v
udp_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const udp_nodes[5] = {$/;"	v
udp_root	net/lwip/core/snmp/mib2.c	/^struct mib_list_rootnode udp_root = {$/;"	v	typeref:struct:mib_list_rootnode
udp_scalar	net/lwip/core/snmp/mib2.c	/^const mib_scalar_node udp_scalar = {$/;"	v
udpentry	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node udpentry = {$/;"	v	typeref:struct:mib_array_node
udpentry_get_object_def	net/lwip/core/snmp/mib2.c	/^udpentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
udpentry_get_value	net/lwip/core/snmp/mib2.c	/^udpentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
udpentry_ids	net/lwip/core/snmp/mib2.c	/^const s32_t udpentry_ids[2] = { 1, 2 };$/;"	v
udpentry_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const udpentry_nodes[2] = {$/;"	v
udpindatagrams	net/lwip/core/snmp/mib2.c	/^static u32_t udpindatagrams = 0,$/;"	v	file:
udpinerrors	net/lwip/core/snmp/mib2.c	/^             udpinerrors = 0,$/;"	v	file:
udpnoports	net/lwip/core/snmp/mib2.c	/^             udpnoports = 0,$/;"	v	file:
udpoutdatagrams	net/lwip/core/snmp/mib2.c	/^             udpoutdatagrams = 0;$/;"	v	file:
udptable	net/lwip/core/snmp/mib2.c	/^struct mib_ram_array_node udptable = {$/;"	v	typeref:struct:mib_ram_array_node
udptable_id	net/lwip/core/snmp/mib2.c	/^s32_t udptable_id = 1;$/;"	v
udptable_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* udptable_node = (struct mib_node* const)&udpentry;$/;"	v	typeref:struct:mib_node
NODE_STACK_SIZE	net/lwip/core/snmp/mib_structs.c	45;"	d	file:
empty_table	net/lwip/core/snmp/mib_structs.c	/^empty_table(struct mib_node *node)$/;"	f	file:
node_stack	net/lwip/core/snmp/mib_structs.c	/^static struct nse node_stack[NODE_STACK_SIZE];$/;"	v	typeref:struct:nse	file:
node_stack_cnt	net/lwip/core/snmp/mib_structs.c	/^static u8_t node_stack_cnt;$/;"	v	file:
nse	net/lwip/core/snmp/mib_structs.c	/^struct nse$/;"	s	file:
pop_node	net/lwip/core/snmp/mib_structs.c	/^pop_node(struct nse* node)$/;"	f	file:
prefix	net/lwip/core/snmp/mib_structs.c	/^const s32_t prefix[4] = {1, 3, 6, 1};$/;"	v
push_node	net/lwip/core/snmp/mib_structs.c	/^push_node(struct nse* node)$/;"	f	file:
r_id	net/lwip/core/snmp/mib_structs.c	/^  s32_t r_id;$/;"	m	struct:nse	file:
r_nl	net/lwip/core/snmp/mib_structs.c	/^  u8_t r_nl;$/;"	m	struct:nse	file:
r_ptr	net/lwip/core/snmp/mib_structs.c	/^  struct mib_node* r_ptr;$/;"	m	struct:nse	typeref:struct:nse::mib_node	file:
snmp_expand_tree	net/lwip/core/snmp/mib_structs.c	/^snmp_expand_tree(struct mib_node *node, u8_t ident_len, s32_t *ident, struct snmp_obj_id *oidret)$/;"	f
snmp_ifindextonetif	net/lwip/core/snmp/mib_structs.c	/^snmp_ifindextonetif(s32_t ifindex, struct netif **netif)$/;"	f
snmp_iptooid	net/lwip/core/snmp/mib_structs.c	/^snmp_iptooid(struct ip_addr *ip, s32_t *ident)$/;"	f
snmp_iso_prefix_expand	net/lwip/core/snmp/mib_structs.c	/^snmp_iso_prefix_expand(u8_t ident_len, s32_t *ident, struct snmp_obj_id *oidret)$/;"	f
snmp_iso_prefix_tst	net/lwip/core/snmp/mib_structs.c	/^snmp_iso_prefix_tst(u8_t ident_len, s32_t *ident)$/;"	f
snmp_mib_ln_alloc	net/lwip/core/snmp/mib_structs.c	/^snmp_mib_ln_alloc(s32_t id)$/;"	f
snmp_mib_ln_free	net/lwip/core/snmp/mib_structs.c	/^snmp_mib_ln_free(struct mib_list_node *ln)$/;"	f
snmp_mib_lrn_alloc	net/lwip/core/snmp/mib_structs.c	/^snmp_mib_lrn_alloc(void)$/;"	f
snmp_mib_lrn_free	net/lwip/core/snmp/mib_structs.c	/^snmp_mib_lrn_free(struct mib_list_rootnode *lrn)$/;"	f
snmp_mib_node_delete	net/lwip/core/snmp/mib_structs.c	/^snmp_mib_node_delete(struct mib_list_rootnode *rn, struct mib_list_node *n)$/;"	f
snmp_mib_node_find	net/lwip/core/snmp/mib_structs.c	/^snmp_mib_node_find(struct mib_list_rootnode *rn, s32_t objid, struct mib_list_node **fn)$/;"	f
snmp_mib_node_insert	net/lwip/core/snmp/mib_structs.c	/^snmp_mib_node_insert(struct mib_list_rootnode *rn, s32_t objid, struct mib_list_node **insn)$/;"	f
snmp_netiftoifindex	net/lwip/core/snmp/mib_structs.c	/^snmp_netiftoifindex(struct netif *netif, s32_t *ifidx)$/;"	f
snmp_oidtoip	net/lwip/core/snmp/mib_structs.c	/^snmp_oidtoip(s32_t *ident, struct ip_addr *ip)$/;"	f
snmp_search_tree	net/lwip/core/snmp/mib_structs.c	/^snmp_search_tree(struct mib_node *node, u8_t ident_len, s32_t *ident, struct snmp_name_ptr *np)$/;"	f
msg_input_list	net/lwip/core/snmp/msg_in.c	/^struct snmp_msg_pstat msg_input_list[SNMP_CONCURRENT_REQUESTS];$/;"	v	typeref:struct:snmp_msg_pstat
snmp1_pcb	net/lwip/core/snmp/msg_in.c	/^struct udp_pcb *snmp1_pcb;$/;"	v	typeref:struct:udp_pcb
snmp_error_response	net/lwip/core/snmp/msg_in.c	/^snmp_error_response(struct snmp_msg_pstat *msg_ps, u8_t error)$/;"	f	file:
snmp_init	net/lwip/core/snmp/msg_in.c	/^snmp_init(void)$/;"	f
snmp_msg_event	net/lwip/core/snmp/msg_in.c	/^snmp_msg_event(u8_t request_id)$/;"	f
snmp_msg_get_event	net/lwip/core/snmp/msg_in.c	/^snmp_msg_get_event(u8_t request_id, struct snmp_msg_pstat *msg_ps)$/;"	f	file:
snmp_msg_getnext_event	net/lwip/core/snmp/msg_in.c	/^snmp_msg_getnext_event(u8_t request_id, struct snmp_msg_pstat *msg_ps)$/;"	f	file:
snmp_msg_set_event	net/lwip/core/snmp/msg_in.c	/^snmp_msg_set_event(u8_t request_id, struct snmp_msg_pstat *msg_ps)$/;"	f	file:
snmp_ok_response	net/lwip/core/snmp/msg_in.c	/^snmp_ok_response(struct snmp_msg_pstat *msg_ps)$/;"	f	file:
snmp_pdu_dec_varbindlist	net/lwip/core/snmp/msg_in.c	/^snmp_pdu_dec_varbindlist(struct pbuf *p, u16_t ofs, u16_t *ofs_ret, struct snmp_msg_pstat *m_stat)$/;"	f	file:
snmp_pdu_header_check	net/lwip/core/snmp/msg_in.c	/^snmp_pdu_header_check(struct pbuf *p, u16_t ofs, u16_t pdu_len, u16_t *ofs_ret, struct snmp_msg_pstat *m_stat)$/;"	f	file:
snmp_publiccommunity	net/lwip/core/snmp/msg_in.c	/^const char snmp_publiccommunity[7] = "public";$/;"	v
snmp_recv	net/lwip/core/snmp/msg_in.c	/^snmp_recv(void *arg, struct udp_pcb *pcb, struct pbuf *p, struct ip_addr *addr, u16_t port)$/;"	f	file:
snmp_varbind_alloc	net/lwip/core/snmp/msg_in.c	/^snmp_varbind_alloc(struct snmp_obj_id *oid, u8_t type, u8_t len)$/;"	f
snmp_varbind_free	net/lwip/core/snmp/msg_in.c	/^snmp_varbind_free(struct snmp_varbind *vb)$/;"	f
snmp_varbind_list_free	net/lwip/core/snmp/msg_in.c	/^snmp_varbind_list_free(struct snmp_varbind_root *root)$/;"	f
snmp_varbind_tail_add	net/lwip/core/snmp/msg_in.c	/^snmp_varbind_tail_add(struct snmp_varbind_root *root, struct snmp_varbind *vb)$/;"	f
snmp_varbind_tail_remove	net/lwip/core/snmp/msg_in.c	/^snmp_varbind_tail_remove(struct snmp_varbind_root *root)$/;"	f
snmp_version	net/lwip/core/snmp/msg_in.c	/^const s32_t snmp_version = 0;$/;"	v
dip	net/lwip/core/snmp/msg_out.c	/^  struct ip_addr dip;$/;"	m	struct:snmp_trap_dst	typeref:struct:snmp_trap_dst::ip_addr	file:
enable	net/lwip/core/snmp/msg_out.c	/^  u8_t enable;$/;"	m	struct:snmp_trap_dst	file:
snmp_authfail_trap	net/lwip/core/snmp/msg_out.c	/^snmp_authfail_trap(void)$/;"	f
snmp_coldstart_trap	net/lwip/core/snmp/msg_out.c	/^snmp_coldstart_trap(void)$/;"	f
snmp_resp_header_enc	net/lwip/core/snmp/msg_out.c	/^snmp_resp_header_enc(struct snmp_msg_pstat *m_stat, struct pbuf *p)$/;"	f	file:
snmp_resp_header_sum	net/lwip/core/snmp/msg_out.c	/^snmp_resp_header_sum(struct snmp_msg_pstat *m_stat, u16_t vb_len)$/;"	f	file:
snmp_send_response	net/lwip/core/snmp/msg_out.c	/^snmp_send_response(struct snmp_msg_pstat *m_stat)$/;"	f
snmp_send_trap	net/lwip/core/snmp/msg_out.c	/^snmp_send_trap(s8_t generic_trap, struct snmp_obj_id *eoid, s32_t specific_trap)$/;"	f
snmp_trap_dst	net/lwip/core/snmp/msg_out.c	/^struct snmp_trap_dst$/;"	s	file:
snmp_trap_dst_enable	net/lwip/core/snmp/msg_out.c	/^snmp_trap_dst_enable(u8_t dst_idx, u8_t enable)$/;"	f
snmp_trap_dst_ip_set	net/lwip/core/snmp/msg_out.c	/^snmp_trap_dst_ip_set(u8_t dst_idx, struct ip_addr *dst)$/;"	f
snmp_trap_header_enc	net/lwip/core/snmp/msg_out.c	/^snmp_trap_header_enc(struct snmp_msg_trap *m_trap, struct pbuf *p)$/;"	f	file:
snmp_trap_header_sum	net/lwip/core/snmp/msg_out.c	/^snmp_trap_header_sum(struct snmp_msg_trap *m_trap, u16_t vb_len)$/;"	f	file:
snmp_varbind_list_enc	net/lwip/core/snmp/msg_out.c	/^snmp_varbind_list_enc(struct snmp_varbind_root *root, struct pbuf *p, u16_t ofs)$/;"	f	file:
snmp_varbind_list_sum	net/lwip/core/snmp/msg_out.c	/^snmp_varbind_list_sum(struct snmp_varbind_root *root)$/;"	f	file:
trap_dst	net/lwip/core/snmp/msg_out.c	/^struct snmp_trap_dst trap_dst[SNMP_TRAP_DESTINATIONS];$/;"	v	typeref:struct:snmp_trap_dst
trap_msg	net/lwip/core/snmp/msg_out.c	/^struct snmp_msg_trap trap_msg;$/;"	v	typeref:struct:snmp_msg_trap
LWIP_MEMPOOL	net/lwip/core/stats.c	103;"	d	file:
lwip_stats	net/lwip/core/stats.c	/^struct stats_ lwip_stats;$/;"	v	typeref:struct:stats_
stats_display	net/lwip/core/stats.c	/^stats_display(void)$/;"	f
stats_display_igmp	net/lwip/core/stats.c	/^stats_display_igmp(struct stats_igmp *igmp)$/;"	f
stats_display_mem	net/lwip/core/stats.c	/^stats_display_mem(struct stats_mem *mem, char *name)$/;"	f
stats_display_memp	net/lwip/core/stats.c	/^stats_display_memp(struct stats_mem *mem, int index)$/;"	f
stats_display_proto	net/lwip/core/stats.c	/^stats_display_proto(struct stats_proto *proto, char *name)$/;"	f
stats_display_sys	net/lwip/core/stats.c	/^stats_display_sys(struct stats_sys *sys)$/;"	f
psem	net/lwip/core/sys.c	/^  sys_sem_t *psem;$/;"	m	struct:sswt_cb	file:
sswt_cb	net/lwip/core/sys.c	/^struct sswt_cb$/;"	s	file:
sswt_handler	net/lwip/core/sys.c	/^sswt_handler(void *arg)$/;"	f	file:
sys_mbox_fetch	net/lwip/core/sys.c	/^sys_mbox_fetch(sys_mbox_t mbox, void **msg)$/;"	f
sys_msleep	net/lwip/core/sys.c	/^sys_msleep(u32_t ms)$/;"	f
sys_sem_wait	net/lwip/core/sys.c	/^sys_sem_wait(sys_sem_t sem)$/;"	f
sys_sem_wait_timeout	net/lwip/core/sys.c	/^sys_sem_wait_timeout(sys_sem_t sem, u32_t timeout)$/;"	f
sys_timeout	net/lwip/core/sys.c	/^sys_timeout(u32_t msecs, sys_timeout_handler h, void *arg)$/;"	f
sys_untimeout	net/lwip/core/sys.c	/^sys_untimeout(sys_timeout_handler h, void *arg)$/;"	f
timeflag	net/lwip/core/sys.c	/^  s16_t timeflag;$/;"	m	struct:sswt_cb	file:
TCP_LOCAL_PORT_RANGE_END	net/lwip/core/tcp.c	445;"	d	file:
TCP_LOCAL_PORT_RANGE_START	net/lwip/core/tcp.c	444;"	d	file:
tcp_abort	net/lwip/core/tcp.c	/^tcp_abort(struct tcp_pcb *pcb)$/;"	f
tcp_accept	net/lwip/core/tcp.c	/^tcp_accept(struct tcp_pcb *pcb,$/;"	f
tcp_accept_null	net/lwip/core/tcp.c	/^tcp_accept_null(void *arg, struct tcp_pcb *pcb, err_t err)$/;"	f	file:
tcp_active_pcbs	net/lwip/core/tcp.c	/^struct tcp_pcb *tcp_active_pcbs;  $/;"	v	typeref:struct:tcp_pcb
tcp_alloc	net/lwip/core/tcp.c	/^tcp_alloc(u8_t prio)$/;"	f
tcp_arg	net/lwip/core/tcp.c	/^tcp_arg(struct tcp_pcb *pcb, void *arg)$/;"	f
tcp_backoff	net/lwip/core/tcp.c	/^const u8_t tcp_backoff[13] =$/;"	v
tcp_bind	net/lwip/core/tcp.c	/^tcp_bind(struct tcp_pcb *pcb, struct ip_addr *ipaddr, u16_t port)$/;"	f
tcp_bound_pcbs	net/lwip/core/tcp.c	/^struct tcp_pcb *tcp_bound_pcbs;  $/;"	v	typeref:struct:tcp_pcb
tcp_close	net/lwip/core/tcp.c	/^tcp_close(struct tcp_pcb *pcb)$/;"	f
tcp_connect	net/lwip/core/tcp.c	/^tcp_connect(struct tcp_pcb *pcb, struct ip_addr *ipaddr, u16_t port,$/;"	f
tcp_debug_print	net/lwip/core/tcp.c	/^tcp_debug_print(struct tcp_hdr *tcphdr)$/;"	f
tcp_debug_print_flags	net/lwip/core/tcp.c	/^tcp_debug_print_flags(u8_t flags)$/;"	f
tcp_debug_print_pcbs	net/lwip/core/tcp.c	/^tcp_debug_print_pcbs(void)$/;"	f
tcp_debug_print_state	net/lwip/core/tcp.c	/^tcp_debug_print_state(enum tcp_state s)$/;"	f
tcp_eff_send_mss	net/lwip/core/tcp.c	/^tcp_eff_send_mss(u16_t sendmss, struct ip_addr *addr)$/;"	f
tcp_err	net/lwip/core/tcp.c	/^tcp_err(struct tcp_pcb *pcb,$/;"	f
tcp_fasttmr	net/lwip/core/tcp.c	/^tcp_fasttmr(void)$/;"	f
tcp_kill_prio	net/lwip/core/tcp.c	/^tcp_kill_prio(u8_t prio)$/;"	f	file:
tcp_kill_timewait	net/lwip/core/tcp.c	/^tcp_kill_timewait(void)$/;"	f	file:
tcp_listen_pcbs	net/lwip/core/tcp.c	/^union tcp_listen_pcbs_t tcp_listen_pcbs;$/;"	v	typeref:union:tcp_listen_pcbs_t
tcp_listen_with_backlog	net/lwip/core/tcp.c	/^tcp_listen_with_backlog(struct tcp_pcb *pcb, u8_t backlog)$/;"	f
tcp_new	net/lwip/core/tcp.c	/^tcp_new(void)$/;"	f
tcp_new_port	net/lwip/core/tcp.c	/^tcp_new_port(void)$/;"	f	file:
tcp_next_iss	net/lwip/core/tcp.c	/^tcp_next_iss(void)$/;"	f
tcp_pcb_purge	net/lwip/core/tcp.c	/^tcp_pcb_purge(struct tcp_pcb *pcb)$/;"	f
tcp_pcb_remove	net/lwip/core/tcp.c	/^tcp_pcb_remove(struct tcp_pcb **pcblist, struct tcp_pcb *pcb)$/;"	f
tcp_pcbs_sane	net/lwip/core/tcp.c	/^tcp_pcbs_sane(void)$/;"	f
tcp_persist_backoff	net/lwip/core/tcp.c	/^const u8_t tcp_persist_backoff[7] = { 3, 6, 12, 24, 48, 96, 120 };$/;"	v
tcp_poll	net/lwip/core/tcp.c	/^tcp_poll(struct tcp_pcb *pcb,$/;"	f
tcp_recv	net/lwip/core/tcp.c	/^tcp_recv(struct tcp_pcb *pcb,$/;"	f
tcp_recv_null	net/lwip/core/tcp.c	/^tcp_recv_null(void *arg, struct tcp_pcb *pcb, struct pbuf *p, err_t err)$/;"	f	file:
tcp_recved	net/lwip/core/tcp.c	/^tcp_recved(struct tcp_pcb *pcb, u16_t len)$/;"	f
tcp_seg_copy	net/lwip/core/tcp.c	/^tcp_seg_copy(struct tcp_seg *seg)$/;"	f
tcp_seg_free	net/lwip/core/tcp.c	/^tcp_seg_free(struct tcp_seg *seg)$/;"	f
tcp_segs_free	net/lwip/core/tcp.c	/^tcp_segs_free(struct tcp_seg *seg)$/;"	f
tcp_sent	net/lwip/core/tcp.c	/^tcp_sent(struct tcp_pcb *pcb,$/;"	f
tcp_setprio	net/lwip/core/tcp.c	/^tcp_setprio(struct tcp_pcb *pcb, u8_t prio)$/;"	f
tcp_slowtmr	net/lwip/core/tcp.c	/^tcp_slowtmr(void)$/;"	f
tcp_ticks	net/lwip/core/tcp.c	/^u32_t tcp_ticks;$/;"	v
tcp_timer	net/lwip/core/tcp.c	/^static u8_t tcp_timer;$/;"	v	file:
tcp_tmp_pcb	net/lwip/core/tcp.c	/^struct tcp_pcb *tcp_tmp_pcb;$/;"	v	typeref:struct:tcp_pcb
tcp_tmr	net/lwip/core/tcp.c	/^tcp_tmr(void)$/;"	f
tcp_tw_pcbs	net/lwip/core/tcp.c	/^struct tcp_pcb *tcp_tw_pcbs;$/;"	v	typeref:struct:tcp_pcb
ackno	net/lwip/core/tcp_in.c	/^static u32_t seqno, ackno;$/;"	v	file:
flags	net/lwip/core/tcp_in.c	/^static u8_t flags;$/;"	v	file:
inseg	net/lwip/core/tcp_in.c	/^static struct tcp_seg inseg;$/;"	v	typeref:struct:tcp_seg	file:
iphdr	net/lwip/core/tcp_in.c	/^static struct ip_hdr *iphdr;$/;"	v	typeref:struct:ip_hdr	file:
recv_data	net/lwip/core/tcp_in.c	/^static struct pbuf *recv_data;$/;"	v	typeref:struct:pbuf	file:
recv_flags	net/lwip/core/tcp_in.c	/^static u8_t recv_flags;$/;"	v	file:
seqno	net/lwip/core/tcp_in.c	/^static u32_t seqno, ackno;$/;"	v	file:
tcp_input	net/lwip/core/tcp_in.c	/^tcp_input(struct pbuf *p, struct netif *inp)$/;"	f
tcp_input_pcb	net/lwip/core/tcp_in.c	/^struct tcp_pcb *tcp_input_pcb;$/;"	v	typeref:struct:tcp_pcb
tcp_listen_input	net/lwip/core/tcp_in.c	/^tcp_listen_input(struct tcp_pcb_listen *pcb)$/;"	f	file:
tcp_parseopt	net/lwip/core/tcp_in.c	/^tcp_parseopt(struct tcp_pcb *pcb)$/;"	f	file:
tcp_process	net/lwip/core/tcp_in.c	/^tcp_process(struct tcp_pcb *pcb)$/;"	f	file:
tcp_receive	net/lwip/core/tcp_in.c	/^tcp_receive(struct tcp_pcb *pcb)$/;"	f	file:
tcp_timewait_input	net/lwip/core/tcp_in.c	/^tcp_timewait_input(struct tcp_pcb *pcb)$/;"	f	file:
tcphdr	net/lwip/core/tcp_in.c	/^static struct tcp_hdr *tcphdr;$/;"	v	typeref:struct:tcp_hdr	file:
tcplen	net/lwip/core/tcp_in.c	/^static u16_t tcplen;$/;"	v	file:
tcp_enqueue	net/lwip/core/tcp_out.c	/^tcp_enqueue(struct tcp_pcb *pcb, void *arg, u16_t len,$/;"	f
tcp_keepalive	net/lwip/core/tcp_out.c	/^tcp_keepalive(struct tcp_pcb *pcb)$/;"	f
tcp_output	net/lwip/core/tcp_out.c	/^tcp_output(struct tcp_pcb *pcb)$/;"	f
tcp_output_segment	net/lwip/core/tcp_out.c	/^tcp_output_segment(struct tcp_seg *seg, struct tcp_pcb *pcb)$/;"	f	file:
tcp_rexmit	net/lwip/core/tcp_out.c	/^tcp_rexmit(struct tcp_pcb *pcb)$/;"	f
tcp_rexmit_rto	net/lwip/core/tcp_out.c	/^tcp_rexmit_rto(struct tcp_pcb *pcb)$/;"	f
tcp_rst	net/lwip/core/tcp_out.c	/^tcp_rst(u32_t seqno, u32_t ackno,$/;"	f
tcp_send_ctrl	net/lwip/core/tcp_out.c	/^tcp_send_ctrl(struct tcp_pcb *pcb, u8_t flags)$/;"	f
tcp_write	net/lwip/core/tcp_out.c	/^tcp_write(struct tcp_pcb *pcb, const void *data, u16_t len, u8_t apiflags)$/;"	f
tcp_zero_window_probe	net/lwip/core/tcp_out.c	/^tcp_zero_window_probe(struct tcp_pcb *pcb)$/;"	f
UDP_LOCAL_PORT_RANGE_END	net/lwip/core/udp.c	608;"	d	file:
UDP_LOCAL_PORT_RANGE_START	net/lwip/core/udp.c	607;"	d	file:
udp_bind	net/lwip/core/udp.c	/^udp_bind(struct udp_pcb *pcb, struct ip_addr *ipaddr, u16_t port)$/;"	f
udp_connect	net/lwip/core/udp.c	/^udp_connect(struct udp_pcb *pcb, struct ip_addr *ipaddr, u16_t port)$/;"	f
udp_debug_print	net/lwip/core/udp.c	/^udp_debug_print(struct udp_hdr *udphdr)$/;"	f
udp_disconnect	net/lwip/core/udp.c	/^udp_disconnect(struct udp_pcb *pcb)$/;"	f
udp_input	net/lwip/core/udp.c	/^udp_input(struct pbuf *p, struct netif *inp)$/;"	f
udp_new	net/lwip/core/udp.c	/^udp_new(void)$/;"	f
udp_pcbs	net/lwip/core/udp.c	/^struct udp_pcb *udp_pcbs;$/;"	v	typeref:struct:udp_pcb
udp_recv	net/lwip/core/udp.c	/^udp_recv(struct udp_pcb *pcb,$/;"	f
udp_remove	net/lwip/core/udp.c	/^udp_remove(struct udp_pcb *pcb)$/;"	f
udp_send	net/lwip/core/udp.c	/^udp_send(struct udp_pcb *pcb, struct pbuf *p)$/;"	f
udp_sendto	net/lwip/core/udp.c	/^udp_sendto(struct udp_pcb *pcb, struct pbuf *p,$/;"	f
udp_sendto_if	net/lwip/core/udp.c	/^udp_sendto_if(struct udp_pcb *pcb, struct pbuf *p,$/;"	f
ANNOUNCE_INTERVAL	net/lwip/include/ipv4/lwip/autoip.h	65;"	d
ANNOUNCE_NUM	net/lwip/include/ipv4/lwip/autoip.h	64;"	d
ANNOUNCE_WAIT	net/lwip/include/ipv4/lwip/autoip.h	66;"	d
AUTOIP_STATE_ANNOUNCING	net/lwip/include/ipv4/lwip/autoip.h	74;"	d
AUTOIP_STATE_BOUND	net/lwip/include/ipv4/lwip/autoip.h	75;"	d
AUTOIP_STATE_OFF	net/lwip/include/ipv4/lwip/autoip.h	72;"	d
AUTOIP_STATE_PROBING	net/lwip/include/ipv4/lwip/autoip.h	73;"	d
AUTOIP_TICKS_PER_SECOND	net/lwip/include/ipv4/lwip/autoip.h	57;"	d
AUTOIP_TMR_INTERVAL	net/lwip/include/ipv4/lwip/autoip.h	56;"	d
DEFEND_INTERVAL	net/lwip/include/ipv4/lwip/autoip.h	69;"	d
MAX_CONFLICTS	net/lwip/include/ipv4/lwip/autoip.h	67;"	d
PROBE_MAX	net/lwip/include/ipv4/lwip/autoip.h	62;"	d
PROBE_MIN	net/lwip/include/ipv4/lwip/autoip.h	61;"	d
PROBE_NUM	net/lwip/include/ipv4/lwip/autoip.h	63;"	d
PROBE_WAIT	net/lwip/include/ipv4/lwip/autoip.h	60;"	d
RATE_LIMIT_INTERVAL	net/lwip/include/ipv4/lwip/autoip.h	68;"	d
__LWIP_AUTOIP_H__	net/lwip/include/ipv4/lwip/autoip.h	45;"	d
autoip	net/lwip/include/ipv4/lwip/autoip.h	/^struct autoip$/;"	s
lastconflict	net/lwip/include/ipv4/lwip/autoip.h	/^  u8_t lastconflict;        \/* ticks until a conflict can be solved by defending *\/$/;"	m	struct:autoip
llipaddr	net/lwip/include/ipv4/lwip/autoip.h	/^  struct ip_addr llipaddr;  \/* the currently selected, probed, announced or used LL IP-Address *\/$/;"	m	struct:autoip	typeref:struct:autoip::ip_addr
sent_num	net/lwip/include/ipv4/lwip/autoip.h	/^  u8_t sent_num;            \/* sent number of probes or announces, dependent on state *\/$/;"	m	struct:autoip
state	net/lwip/include/ipv4/lwip/autoip.h	/^  u8_t state;               \/* current AutoIP state machine state *\/$/;"	m	struct:autoip
tried_llipaddr	net/lwip/include/ipv4/lwip/autoip.h	/^  u8_t tried_llipaddr;      \/* total number of probed\/used Link Local IP-Addresses *\/$/;"	m	struct:autoip
ttw	net/lwip/include/ipv4/lwip/autoip.h	/^  u16_t ttw;                \/* ticks to wait, tick is AUTOIP_TMR_INTERVAL long *\/$/;"	m	struct:autoip
ICMPH_CODE	net/lwip/include/ipv4/lwip/icmp.h	110;"	d
ICMPH_CODE_SET	net/lwip/include/ipv4/lwip/icmp.h	113;"	d
ICMPH_TYPE	net/lwip/include/ipv4/lwip/icmp.h	109;"	d
ICMPH_TYPE_SET	net/lwip/include/ipv4/lwip/icmp.h	112;"	d
ICMP_DUR	net/lwip/include/ipv4/lwip/icmp.h	48;"	d
ICMP_DUR_FRAG	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_FRAG = 4,   \/* fragmentation needed and DF set *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_HOST	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_HOST = 1,   \/* host unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_NET	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_NET = 0,    \/* net unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_PORT	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_PORT = 3,   \/* port unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_PROTO	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_PROTO = 2,  \/* protocol unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_SR	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_SR = 5      \/* source route failed *\/$/;"	e	enum:icmp_dur_type
ICMP_ECHO	net/lwip/include/ipv4/lwip/icmp.h	51;"	d
ICMP_ER	net/lwip/include/ipv4/lwip/icmp.h	47;"	d
ICMP_IR	net/lwip/include/ipv4/lwip/icmp.h	57;"	d
ICMP_IRQ	net/lwip/include/ipv4/lwip/icmp.h	56;"	d
ICMP_PP	net/lwip/include/ipv4/lwip/icmp.h	53;"	d
ICMP_RD	net/lwip/include/ipv4/lwip/icmp.h	50;"	d
ICMP_SQ	net/lwip/include/ipv4/lwip/icmp.h	49;"	d
ICMP_TE	net/lwip/include/ipv4/lwip/icmp.h	52;"	d
ICMP_TE_FRAG	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_TE_FRAG = 1     \/* fragment reassembly time exceeded *\/$/;"	e	enum:icmp_te_type
ICMP_TE_TTL	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_TE_TTL = 0,     \/* time to live exceeded in transit *\/$/;"	e	enum:icmp_te_type
ICMP_TS	net/lwip/include/ipv4/lwip/icmp.h	54;"	d
ICMP_TSR	net/lwip/include/ipv4/lwip/icmp.h	55;"	d
PACK_STRUCT_STRUCT	net/lwip/include/ipv4/lwip/icmp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:icmp_dur_hdr
PACK_STRUCT_STRUCT	net/lwip/include/ipv4/lwip/icmp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:icmp_echo_hdr
PACK_STRUCT_STRUCT	net/lwip/include/ipv4/lwip/icmp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:icmp_te_hdr
__LWIP_ICMP_H__	net/lwip/include/ipv4/lwip/icmp.h	33;"	d
icmp_dur_hdr	net/lwip/include/ipv4/lwip/icmp.h	/^struct icmp_dur_hdr {$/;"	s
icmp_dur_type	net/lwip/include/ipv4/lwip/icmp.h	/^enum icmp_dur_type {$/;"	g
icmp_echo_hdr	net/lwip/include/ipv4/lwip/icmp.h	/^struct icmp_echo_hdr {$/;"	s
icmp_te_hdr	net/lwip/include/ipv4/lwip/icmp.h	/^struct icmp_te_hdr {$/;"	s
icmp_te_type	net/lwip/include/ipv4/lwip/icmp.h	/^enum icmp_te_type {$/;"	g
IGMP_ADD_MAC_FILTER	net/lwip/include/ipv4/lwip/igmp.h	73;"	d
IGMP_DEL_MAC_FILTER	net/lwip/include/ipv4/lwip/igmp.h	72;"	d
IGMP_GROUP_DELAYING_MEMBER	net/lwip/include/ipv4/lwip/igmp.h	77;"	d
IGMP_GROUP_IDLE_MEMBER	net/lwip/include/ipv4/lwip/igmp.h	78;"	d
IGMP_GROUP_NON_MEMBER	net/lwip/include/ipv4/lwip/igmp.h	76;"	d
IGMP_JOIN_DELAYING_MEMBER_TMR	net/lwip/include/ipv4/lwip/igmp.h	69;"	d
IGMP_LEAVE_GROUP	net/lwip/include/ipv4/lwip/igmp.h	64;"	d
IGMP_MEMB_QUERY	net/lwip/include/ipv4/lwip/igmp.h	61;"	d
IGMP_MINLEN	net/lwip/include/ipv4/lwip/igmp.h	54;"	d
IGMP_TMR_INTERVAL	net/lwip/include/ipv4/lwip/igmp.h	67;"	d
IGMP_TTL	net/lwip/include/ipv4/lwip/igmp.h	53;"	d
IGMP_V1_DELAYING_MEMBER_TMR	net/lwip/include/ipv4/lwip/igmp.h	68;"	d
IGMP_V1_MEMB_REPORT	net/lwip/include/ipv4/lwip/igmp.h	62;"	d
IGMP_V2_MEMB_REPORT	net/lwip/include/ipv4/lwip/igmp.h	63;"	d
IP_PROTO_IGMP	net/lwip/include/ipv4/lwip/igmp.h	52;"	d
PACK_STRUCT_STRUCT	net/lwip/include/ipv4/lwip/igmp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:igmp_msg
ROUTER_ALERT	net/lwip/include/ipv4/lwip/igmp.h	55;"	d
ROUTER_ALERTLEN	net/lwip/include/ipv4/lwip/igmp.h	56;"	d
__LWIP_IGMP_H__	net/lwip/include/ipv4/lwip/igmp.h	36;"	d
group_address	net/lwip/include/ipv4/lwip/igmp.h	/^  struct ip_addr     group_address;$/;"	m	struct:igmp_group	typeref:struct:igmp_group::ip_addr
group_state	net/lwip/include/ipv4/lwip/igmp.h	/^  u8_t               group_state;$/;"	m	struct:igmp_group
igmp_group	net/lwip/include/ipv4/lwip/igmp.h	/^struct igmp_group {$/;"	s
igmp_msg	net/lwip/include/ipv4/lwip/igmp.h	/^struct igmp_msg {$/;"	s
interface	net/lwip/include/ipv4/lwip/igmp.h	/^  struct netif      *interface;$/;"	m	struct:igmp_group	typeref:struct:igmp_group::netif
last_reporter_flag	net/lwip/include/ipv4/lwip/igmp.h	/^  u8_t               last_reporter_flag; \/* signifies we were the last person to report *\/$/;"	m	struct:igmp_group
next	net/lwip/include/ipv4/lwip/igmp.h	/^  struct igmp_group *next;$/;"	m	struct:igmp_group	typeref:struct:igmp_group::igmp_group
timer	net/lwip/include/ipv4/lwip/igmp.h	/^  u16_t              timer;$/;"	m	struct:igmp_group
use	net/lwip/include/ipv4/lwip/igmp.h	/^  u8_t               use; \/* counter of simultaneous uses *\/$/;"	m	struct:igmp_group
LWIP_PLATFORM_BYTESWAP	net/lwip/include/ipv4/lwip/inet.h	66;"	d
__LWIP_INET_H__	net/lwip/include/ipv4/lwip/inet.h	33;"	d
htonl	net/lwip/include/ipv4/lwip/inet.h	56;"	d
htonl	net/lwip/include/ipv4/lwip/inet.h	72;"	d
htonl	net/lwip/include/ipv4/lwip/inet.h	79;"	d
htonl	net/lwip/include/ipv4/lwip/inet.h	85;"	d
htons	net/lwip/include/ipv4/lwip/inet.h	53;"	d
htons	net/lwip/include/ipv4/lwip/inet.h	70;"	d
htons	net/lwip/include/ipv4/lwip/inet.h	77;"	d
htons	net/lwip/include/ipv4/lwip/inet.h	83;"	d
in_addr	net/lwip/include/ipv4/lwip/inet.h	/^struct in_addr {$/;"	s
ntohl	net/lwip/include/ipv4/lwip/inet.h	62;"	d
ntohl	net/lwip/include/ipv4/lwip/inet.h	73;"	d
ntohl	net/lwip/include/ipv4/lwip/inet.h	80;"	d
ntohl	net/lwip/include/ipv4/lwip/inet.h	86;"	d
ntohs	net/lwip/include/ipv4/lwip/inet.h	59;"	d
ntohs	net/lwip/include/ipv4/lwip/inet.h	71;"	d
ntohs	net/lwip/include/ipv4/lwip/inet.h	78;"	d
ntohs	net/lwip/include/ipv4/lwip/inet.h	84;"	d
s_addr	net/lwip/include/ipv4/lwip/inet.h	/^  u32_t s_addr;$/;"	m	struct:in_addr
__LWIP_INET_CHKSUM_H__	net/lwip/include/ipv4/lwip/inet_chksum.h	33;"	d
IPH_CHKSUM	net/lwip/include/ipv4/lwip/ip.h	151;"	d
IPH_CHKSUM_SET	net/lwip/include/ipv4/lwip/ip.h	159;"	d
IPH_HL	net/lwip/include/ipv4/lwip/ip.h	144;"	d
IPH_ID	net/lwip/include/ipv4/lwip/ip.h	147;"	d
IPH_ID_SET	net/lwip/include/ipv4/lwip/ip.h	155;"	d
IPH_LEN	net/lwip/include/ipv4/lwip/ip.h	146;"	d
IPH_LEN_SET	net/lwip/include/ipv4/lwip/ip.h	154;"	d
IPH_OFFSET	net/lwip/include/ipv4/lwip/ip.h	148;"	d
IPH_OFFSET_SET	net/lwip/include/ipv4/lwip/ip.h	156;"	d
IPH_PROTO	net/lwip/include/ipv4/lwip/ip.h	150;"	d
IPH_PROTO_SET	net/lwip/include/ipv4/lwip/ip.h	158;"	d
IPH_TOS	net/lwip/include/ipv4/lwip/ip.h	145;"	d
IPH_TTL	net/lwip/include/ipv4/lwip/ip.h	149;"	d
IPH_TTL_SET	net/lwip/include/ipv4/lwip/ip.h	157;"	d
IPH_V	net/lwip/include/ipv4/lwip/ip.h	143;"	d
IPH_VHLTOS_SET	net/lwip/include/ipv4/lwip/ip.h	153;"	d
IP_DF	net/lwip/include/ipv4/lwip/ip.h	127;"	d
IP_HDRINCL	net/lwip/include/ipv4/lwip/ip.h	66;"	d
IP_HDRINCL	net/lwip/include/ipv4/lwip/ip.h	68;"	d
IP_HLEN	net/lwip/include/ipv4/lwip/ip.h	55;"	d
IP_MF	net/lwip/include/ipv4/lwip/ip.h	128;"	d
IP_OFFMASK	net/lwip/include/ipv4/lwip/ip.h	129;"	d
IP_PCB	net/lwip/include/ipv4/lwip/ip.h	/^  IP_PCB;$/;"	m	struct:ip_pcb
IP_PCB	net/lwip/include/ipv4/lwip/ip.h	80;"	d
IP_PCB_ADDRHINT	net/lwip/include/ipv4/lwip/ip.h	71;"	d
IP_PCB_ADDRHINT	net/lwip/include/ipv4/lwip/ip.h	73;"	d
IP_PROTO_ICMP	net/lwip/include/ipv4/lwip/ip.h	57;"	d
IP_PROTO_TCP	net/lwip/include/ipv4/lwip/ip.h	60;"	d
IP_PROTO_UDP	net/lwip/include/ipv4/lwip/ip.h	58;"	d
IP_PROTO_UDPLITE	net/lwip/include/ipv4/lwip/ip.h	59;"	d
IP_RF	net/lwip/include/ipv4/lwip/ip.h	126;"	d
PACK_STRUCT_STRUCT	net/lwip/include/ipv4/lwip/ip.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ip_hdr
SOF_ACCEPTCONN	net/lwip/include/ipv4/lwip/ip.h	102;"	d
SOF_BROADCAST	net/lwip/include/ipv4/lwip/ip.h	106;"	d
SOF_DEBUG	net/lwip/include/ipv4/lwip/ip.h	101;"	d
SOF_DONTROUTE	net/lwip/include/ipv4/lwip/ip.h	105;"	d
SOF_KEEPALIVE	net/lwip/include/ipv4/lwip/ip.h	104;"	d
SOF_LINGER	net/lwip/include/ipv4/lwip/ip.h	108;"	d
SOF_OOBINLINE	net/lwip/include/ipv4/lwip/ip.h	109;"	d
SOF_REUSEADDR	net/lwip/include/ipv4/lwip/ip.h	103;"	d
SOF_REUSEPORT	net/lwip/include/ipv4/lwip/ip.h	110;"	d
SOF_USELOOPBACK	net/lwip/include/ipv4/lwip/ip.h	107;"	d
__LWIP_IP_H__	net/lwip/include/ipv4/lwip/ip.h	33;"	d
ip_hdr	net/lwip/include/ipv4/lwip/ip.h	/^struct ip_hdr {$/;"	s
ip_init	net/lwip/include/ipv4/lwip/ip.h	46;"	d
ip_pcb	net/lwip/include/ipv4/lwip/ip.h	/^struct ip_pcb {$/;"	s
INADDR_LOOPBACK	net/lwip/include/ipv4/lwip/ip_addr.h	81;"	d
INADDR_NONE	net/lwip/include/ipv4/lwip/ip_addr.h	80;"	d
IN_BADCLASS	net/lwip/include/ipv4/lwip/ip_addr.h	112;"	d
IN_CLASSA	net/lwip/include/ipv4/lwip/ip_addr.h	88;"	d
IN_CLASSA_HOST	net/lwip/include/ipv4/lwip/ip_addr.h	91;"	d
IN_CLASSA_MAX	net/lwip/include/ipv4/lwip/ip_addr.h	92;"	d
IN_CLASSA_NET	net/lwip/include/ipv4/lwip/ip_addr.h	89;"	d
IN_CLASSA_NSHIFT	net/lwip/include/ipv4/lwip/ip_addr.h	90;"	d
IN_CLASSB	net/lwip/include/ipv4/lwip/ip_addr.h	94;"	d
IN_CLASSB_HOST	net/lwip/include/ipv4/lwip/ip_addr.h	97;"	d
IN_CLASSB_MAX	net/lwip/include/ipv4/lwip/ip_addr.h	98;"	d
IN_CLASSB_NET	net/lwip/include/ipv4/lwip/ip_addr.h	95;"	d
IN_CLASSB_NSHIFT	net/lwip/include/ipv4/lwip/ip_addr.h	96;"	d
IN_CLASSC	net/lwip/include/ipv4/lwip/ip_addr.h	100;"	d
IN_CLASSC_HOST	net/lwip/include/ipv4/lwip/ip_addr.h	103;"	d
IN_CLASSC_NET	net/lwip/include/ipv4/lwip/ip_addr.h	101;"	d
IN_CLASSC_NSHIFT	net/lwip/include/ipv4/lwip/ip_addr.h	102;"	d
IN_CLASSD	net/lwip/include/ipv4/lwip/ip_addr.h	105;"	d
IN_CLASSD_HOST	net/lwip/include/ipv4/lwip/ip_addr.h	108;"	d
IN_CLASSD_NET	net/lwip/include/ipv4/lwip/ip_addr.h	106;"	d
IN_CLASSD_NSHIFT	net/lwip/include/ipv4/lwip/ip_addr.h	107;"	d
IN_EXPERIMENTAL	net/lwip/include/ipv4/lwip/ip_addr.h	111;"	d
IN_LOOPBACKNET	net/lwip/include/ipv4/lwip/ip_addr.h	114;"	d
IN_MULTICAST	net/lwip/include/ipv4/lwip/ip_addr.h	109;"	d
IP4_ADDR	net/lwip/include/ipv4/lwip/ip_addr.h	116;"	d
IP_ADDR_ANY	net/lwip/include/ipv4/lwip/ip_addr.h	77;"	d
IP_ADDR_BROADCAST	net/lwip/include/ipv4/lwip/ip_addr.h	78;"	d
PACK_STRUCT_STRUCT	net/lwip/include/ipv4/lwip/ip_addr.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ip_addr
PACK_STRUCT_STRUCT	net/lwip/include/ipv4/lwip/ip_addr.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ip_addr2
__LWIP_IP_ADDR_H__	net/lwip/include/ipv4/lwip/ip_addr.h	33;"	d
ip4_addr1	net/lwip/include/ipv4/lwip/ip_addr.h	156;"	d
ip4_addr2	net/lwip/include/ipv4/lwip/ip_addr.h	157;"	d
ip4_addr3	net/lwip/include/ipv4/lwip/ip_addr.h	158;"	d
ip4_addr4	net/lwip/include/ipv4/lwip/ip_addr.h	159;"	d
ip_addr	net/lwip/include/ipv4/lwip/ip_addr.h	/^struct ip_addr {$/;"	s
ip_addr2	net/lwip/include/ipv4/lwip/ip_addr.h	/^struct ip_addr2 {$/;"	s
ip_addr_cmp	net/lwip/include/ipv4/lwip/ip_addr.h	137;"	d
ip_addr_debug_print	net/lwip/include/ipv4/lwip/ip_addr.h	147;"	d
ip_addr_isany	net/lwip/include/ipv4/lwip/ip_addr.h	139;"	d
ip_addr_islinklocal	net/lwip/include/ipv4/lwip/ip_addr.h	145;"	d
ip_addr_ismulticast	net/lwip/include/ipv4/lwip/ip_addr.h	143;"	d
ip_addr_netcmp	net/lwip/include/ipv4/lwip/ip_addr.h	133;"	d
ip_addr_set	net/lwip/include/ipv4/lwip/ip_addr.h	122;"	d
IP_TMR_INTERVAL	net/lwip/include/ipv4/lwip/ip_frag.h	49;"	d
__LWIP_IP_FRAG_H__	net/lwip/include/ipv4/lwip/ip_frag.h	34;"	d
datagram_len	net/lwip/include/ipv4/lwip/ip_frag.h	/^  u16_t datagram_len;$/;"	m	struct:ip_reassdata
flags	net/lwip/include/ipv4/lwip/ip_frag.h	/^  u8_t flags;$/;"	m	struct:ip_reassdata
ip_reassdata	net/lwip/include/ipv4/lwip/ip_frag.h	/^struct ip_reassdata {$/;"	s
iphdr	net/lwip/include/ipv4/lwip/ip_frag.h	/^  struct ip_hdr iphdr;$/;"	m	struct:ip_reassdata	typeref:struct:ip_reassdata::ip_hdr
next	net/lwip/include/ipv4/lwip/ip_frag.h	/^  struct ip_reassdata *next;$/;"	m	struct:ip_reassdata	typeref:struct:ip_reassdata::ip_reassdata
p	net/lwip/include/ipv4/lwip/ip_frag.h	/^  struct pbuf *p;$/;"	m	struct:ip_reassdata	typeref:struct:ip_reassdata::pbuf
timer	net/lwip/include/ipv4/lwip/ip_frag.h	/^  u8_t timer;$/;"	m	struct:ip_reassdata
ICMP6_DUR	net/lwip/include/ipv6/lwip/icmp.h	46;"	d
ICMP6_ECHO	net/lwip/include/ipv6/lwip/icmp.h	48;"	d
ICMP6_ER	net/lwip/include/ipv6/lwip/icmp.h	49;"	d
ICMP6_TE	net/lwip/include/ipv6/lwip/icmp.h	47;"	d
ICMP_DUR_FRAG	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_FRAG = 4,   \/* fragmentation needed and DF set *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_HOST	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_HOST = 1,   \/* host unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_NET	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_NET = 0,    \/* net unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_PORT	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_PORT = 3,   \/* port unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_PROTO	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_PROTO = 2,  \/* protocol unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_SR	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_SR = 5      \/* source route failed *\/$/;"	e	enum:icmp_dur_type
ICMP_TE_FRAG	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_TE_FRAG = 1     \/* fragment reassembly time exceeded *\/$/;"	e	enum:icmp_te_type
ICMP_TE_TTL	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_TE_TTL = 0,     \/* time to live exceeded in transit *\/$/;"	e	enum:icmp_te_type
__LWIP_ICMP_H__	net/lwip/include/ipv6/lwip/icmp.h	33;"	d
chksum	net/lwip/include/ipv6/lwip/icmp.h	/^  u16_t chksum;$/;"	m	struct:icmp_dur_hdr
chksum	net/lwip/include/ipv6/lwip/icmp.h	/^  u16_t chksum;$/;"	m	struct:icmp_echo_hdr
chksum	net/lwip/include/ipv6/lwip/icmp.h	/^  u16_t chksum;$/;"	m	struct:icmp_te_hdr
icmp_dur_hdr	net/lwip/include/ipv6/lwip/icmp.h	/^struct icmp_dur_hdr {$/;"	s
icmp_dur_type	net/lwip/include/ipv6/lwip/icmp.h	/^enum icmp_dur_type {$/;"	g
icmp_echo_hdr	net/lwip/include/ipv6/lwip/icmp.h	/^struct icmp_echo_hdr {$/;"	s
icmp_te_hdr	net/lwip/include/ipv6/lwip/icmp.h	/^struct icmp_te_hdr {$/;"	s
icmp_te_type	net/lwip/include/ipv6/lwip/icmp.h	/^enum icmp_te_type {$/;"	g
icode	net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t icode;$/;"	m	struct:icmp_dur_hdr
icode	net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t icode;$/;"	m	struct:icmp_echo_hdr
icode	net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t icode;$/;"	m	struct:icmp_te_hdr
id	net/lwip/include/ipv6/lwip/icmp.h	/^  u16_t id;$/;"	m	struct:icmp_echo_hdr
seqno	net/lwip/include/ipv6/lwip/icmp.h	/^  u16_t seqno;$/;"	m	struct:icmp_echo_hdr
type	net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t type;$/;"	m	struct:icmp_dur_hdr
type	net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t type;$/;"	m	struct:icmp_echo_hdr
type	net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t type;$/;"	m	struct:icmp_te_hdr
unused	net/lwip/include/ipv6/lwip/icmp.h	/^  u32_t unused;$/;"	m	struct:icmp_dur_hdr
unused	net/lwip/include/ipv6/lwip/icmp.h	/^  u32_t unused;$/;"	m	struct:icmp_te_hdr
__LWIP_INET_H__	net/lwip/include/ipv6/lwip/inet.h	33;"	d
IPH_PROTO	net/lwip/include/ipv6/lwip/ip.h	99;"	d
IP_HDRINCL	net/lwip/include/ipv6/lwip/ip.h	57;"	d
IP_HDRINCL	net/lwip/include/ipv6/lwip/ip.h	59;"	d
IP_HLEN	net/lwip/include/ipv6/lwip/ip.h	46;"	d
IP_PCB	net/lwip/include/ipv6/lwip/ip.h	71;"	d
IP_PCB_ADDRHINT	net/lwip/include/ipv6/lwip/ip.h	62;"	d
IP_PCB_ADDRHINT	net/lwip/include/ipv6/lwip/ip.h	64;"	d
IP_PROTO_ICMP	net/lwip/include/ipv6/lwip/ip.h	48;"	d
IP_PROTO_TCP	net/lwip/include/ipv6/lwip/ip.h	51;"	d
IP_PROTO_UDP	net/lwip/include/ipv6/lwip/ip.h	49;"	d
IP_PROTO_UDPLITE	net/lwip/include/ipv6/lwip/ip.h	50;"	d
__LWIP_IP_H__	net/lwip/include/ipv6/lwip/ip.h	33;"	d
dest	net/lwip/include/ipv6/lwip/ip.h	/^  struct ip_addr src, dest;          \/* source and destination IP addresses *\/$/;"	m	struct:ip_hdr	typeref:struct:ip_hdr::
flow1	net/lwip/include/ipv6/lwip/ip.h	/^  u8_t flow1:4, tclass2:4;  $/;"	m	struct:ip_hdr
flow2	net/lwip/include/ipv6/lwip/ip.h	/^  u16_t flow2;$/;"	m	struct:ip_hdr
hoplim	net/lwip/include/ipv6/lwip/ip.h	/^  u8_t hoplim;              \/* hop limit (TTL) *\/$/;"	m	struct:ip_hdr
ip_hdr	net/lwip/include/ipv6/lwip/ip.h	/^struct ip_hdr {$/;"	s
len	net/lwip/include/ipv6/lwip/ip.h	/^  u16_t len;                \/* payload length *\/$/;"	m	struct:ip_hdr
nexthdr	net/lwip/include/ipv6/lwip/ip.h	/^  u8_t nexthdr;             \/* next header *\/$/;"	m	struct:ip_hdr
src	net/lwip/include/ipv6/lwip/ip.h	/^  struct ip_addr src, dest;          \/* source and destination IP addresses *\/$/;"	m	struct:ip_hdr	typeref:struct:ip_hdr::ip_addr
tclass1	net/lwip/include/ipv6/lwip/ip.h	/^  u8_t tclass1:4, v:4;$/;"	m	struct:ip_hdr
tclass2	net/lwip/include/ipv6/lwip/ip.h	/^  u8_t flow1:4, tclass2:4;  $/;"	m	struct:ip_hdr
v	net/lwip/include/ipv6/lwip/ip.h	/^  u8_t tclass1:4, v:4;$/;"	m	struct:ip_hdr
IP6_ADDR	net/lwip/include/ipv6/lwip/ip_addr.h	71;"	d
IP_ADDR_ANY	net/lwip/include/ipv6/lwip/ip_addr.h	41;"	d
PACK_STRUCT_STRUCT	net/lwip/include/ipv6/lwip/ip_addr.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ip_addr
PACK_STRUCT_STRUCT	net/lwip/include/ipv6/lwip/ip_addr.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ip_addr2
__LWIP_IP_ADDR_H__	net/lwip/include/ipv6/lwip/ip_addr.h	33;"	d
ip_addr	net/lwip/include/ipv6/lwip/ip_addr.h	/^ struct ip_addr {$/;"	s
ip_addr2	net/lwip/include/ipv6/lwip/ip_addr.h	/^struct ip_addr2 {$/;"	s
ip_addr_debug_print	net/lwip/include/ipv6/lwip/ip_addr.h	82;"	d
API_EVENT	net/lwip/include/lwip/api.h	158;"	d
NETCONNTYPE_DATAGRAM	net/lwip/include/lwip/api.h	60;"	d
NETCONNTYPE_GROUP	net/lwip/include/lwip/api.h	59;"	d
NETCONN_CLOSE	net/lwip/include/lwip/api.h	/^  NETCONN_CLOSE$/;"	e	enum:netconn_state
NETCONN_CONNECT	net/lwip/include/lwip/api.h	/^  NETCONN_CONNECT,$/;"	e	enum:netconn_state
NETCONN_COPY	net/lwip/include/lwip/api.h	55;"	d
NETCONN_EVT_RCVMINUS	net/lwip/include/lwip/api.h	/^  NETCONN_EVT_RCVMINUS,$/;"	e	enum:netconn_evt
NETCONN_EVT_RCVPLUS	net/lwip/include/lwip/api.h	/^  NETCONN_EVT_RCVPLUS,$/;"	e	enum:netconn_evt
NETCONN_EVT_SENDMINUS	net/lwip/include/lwip/api.h	/^  NETCONN_EVT_SENDMINUS$/;"	e	enum:netconn_evt
NETCONN_EVT_SENDPLUS	net/lwip/include/lwip/api.h	/^  NETCONN_EVT_SENDPLUS,$/;"	e	enum:netconn_evt
NETCONN_INVALID	net/lwip/include/lwip/api.h	/^  NETCONN_INVALID    = 0,$/;"	e	enum:netconn_type
NETCONN_JOIN	net/lwip/include/lwip/api.h	/^  NETCONN_JOIN,$/;"	e	enum:netconn_igmp
NETCONN_LEAVE	net/lwip/include/lwip/api.h	/^  NETCONN_LEAVE$/;"	e	enum:netconn_igmp
NETCONN_LISTEN	net/lwip/include/lwip/api.h	/^  NETCONN_LISTEN,$/;"	e	enum:netconn_state
NETCONN_MORE	net/lwip/include/lwip/api.h	56;"	d
NETCONN_NOCOPY	net/lwip/include/lwip/api.h	54;"	d
NETCONN_NOFLAG	net/lwip/include/lwip/api.h	53;"	d
NETCONN_NONE	net/lwip/include/lwip/api.h	/^  NETCONN_NONE,$/;"	e	enum:netconn_state
NETCONN_RAW	net/lwip/include/lwip/api.h	/^  NETCONN_RAW        = 0x40$/;"	e	enum:netconn_type
NETCONN_TCP	net/lwip/include/lwip/api.h	/^  NETCONN_TCP        = 0x10,$/;"	e	enum:netconn_type
NETCONN_UDP	net/lwip/include/lwip/api.h	/^  NETCONN_UDP        = 0x20,$/;"	e	enum:netconn_type
NETCONN_UDPLITE	net/lwip/include/lwip/api.h	/^  NETCONN_UDPLITE    = 0x21,$/;"	e	enum:netconn_type
NETCONN_UDPNOCHKSUM	net/lwip/include/lwip/api.h	/^  NETCONN_UDPNOCHKSUM= 0x22,$/;"	e	enum:netconn_type
NETCONN_WRITE	net/lwip/include/lwip/api.h	/^  NETCONN_WRITE,$/;"	e	enum:netconn_state
__LWIP_API_H__	net/lwip/include/lwip/api.h	33;"	d
acceptmbox	net/lwip/include/lwip/api.h	/^  sys_mbox_t acceptmbox;$/;"	m	struct:netconn
callback	net/lwip/include/lwip/api.h	/^  netconn_callback callback;$/;"	m	struct:netconn
err	net/lwip/include/lwip/api.h	/^  err_t err;$/;"	m	struct:netconn
ip	net/lwip/include/lwip/api.h	/^    struct ip_pcb  *ip;$/;"	m	union:netconn::__anon21	typeref:struct:netconn::__anon21::ip_pcb
netconn	net/lwip/include/lwip/api.h	/^struct netconn {$/;"	s
netconn_addr	net/lwip/include/lwip/api.h	176;"	d
netconn_callback	net/lwip/include/lwip/api.h	/^typedef void (* netconn_callback)(struct netconn *, enum netconn_evt, u16_t len);$/;"	t
netconn_err	net/lwip/include/lwip/api.h	208;"	d
netconn_evt	net/lwip/include/lwip/api.h	/^enum netconn_evt {$/;"	g
netconn_igmp	net/lwip/include/lwip/api.h	/^enum netconn_igmp {$/;"	g
netconn_listen	net/lwip/include/lwip/api.h	186;"	d
netconn_new	net/lwip/include/lwip/api.h	163;"	d
netconn_new_with_callback	net/lwip/include/lwip/api.h	164;"	d
netconn_peer	net/lwip/include/lwip/api.h	175;"	d
netconn_recv_bufsize	net/lwip/include/lwip/api.h	209;"	d
netconn_state	net/lwip/include/lwip/api.h	/^enum netconn_state {$/;"	g
netconn_type	net/lwip/include/lwip/api.h	/^enum netconn_type {$/;"	g
op_completed	net/lwip/include/lwip/api.h	/^  sys_sem_t op_completed;$/;"	m	struct:netconn
pcb	net/lwip/include/lwip/api.h	/^  } pcb;$/;"	m	struct:netconn	typeref:union:netconn::__anon21
raw	net/lwip/include/lwip/api.h	/^    struct raw_pcb *raw;$/;"	m	union:netconn::__anon21	typeref:struct:netconn::__anon21::raw_pcb
recv_avail	net/lwip/include/lwip/api.h	/^  u16_t recv_avail;$/;"	m	struct:netconn
recv_bufsize	net/lwip/include/lwip/api.h	/^  int recv_bufsize;$/;"	m	struct:netconn
recv_timeout	net/lwip/include/lwip/api.h	/^  int recv_timeout;$/;"	m	struct:netconn
recvmbox	net/lwip/include/lwip/api.h	/^  sys_mbox_t recvmbox;$/;"	m	struct:netconn
socket	net/lwip/include/lwip/api.h	/^  int socket;$/;"	m	struct:netconn
state	net/lwip/include/lwip/api.h	/^  enum netconn_state state;$/;"	m	struct:netconn	typeref:enum:netconn::netconn_state
tcp	net/lwip/include/lwip/api.h	/^    struct tcp_pcb *tcp;$/;"	m	union:netconn::__anon21	typeref:struct:netconn::__anon21::tcp_pcb
type	net/lwip/include/lwip/api.h	/^  enum netconn_type type;$/;"	m	struct:netconn	typeref:enum:netconn::netconn_type
udp	net/lwip/include/lwip/api.h	/^    struct udp_pcb *udp;$/;"	m	union:netconn::__anon21	typeref:struct:netconn::__anon21::udp_pcb
write_delayed	net/lwip/include/lwip/api.h	/^  u8_t write_delayed;$/;"	m	struct:netconn
write_msg	net/lwip/include/lwip/api.h	/^  struct api_msg_msg *write_msg;$/;"	m	struct:netconn	typeref:struct:netconn::api_msg_msg
write_offset	net/lwip/include/lwip/api.h	/^  int write_offset;$/;"	m	struct:netconn
__LWIP_API_MSG_H__	net/lwip/include/lwip/api_msg.h	33;"	d
ad	net/lwip/include/lwip/api_msg.h	/^    } ad;$/;"	m	union:api_msg_msg::__anon25	typeref:struct:api_msg_msg::__anon25::__anon28
addr	net/lwip/include/lwip/api_msg.h	/^  struct ip_addr *addr;$/;"	m	struct:dns_api_msg	typeref:struct:dns_api_msg::ip_addr
api_msg	net/lwip/include/lwip/api_msg.h	/^struct api_msg {$/;"	s
api_msg_msg	net/lwip/include/lwip/api_msg.h	/^struct api_msg_msg {$/;"	s
apiflags	net/lwip/include/lwip/api_msg.h	/^      u8_t apiflags;$/;"	m	struct:api_msg_msg::__anon25::__anon29
b	net/lwip/include/lwip/api_msg.h	/^    struct netbuf *b;$/;"	m	union:api_msg_msg::__anon25	typeref:struct:api_msg_msg::__anon25::netbuf
backlog	net/lwip/include/lwip/api_msg.h	/^      u8_t backlog;$/;"	m	struct:api_msg_msg::__anon25::__anon32
bc	net/lwip/include/lwip/api_msg.h	/^    } bc;$/;"	m	union:api_msg_msg::__anon25	typeref:struct:api_msg_msg::__anon25::__anon27
conn	net/lwip/include/lwip/api_msg.h	/^  struct netconn *conn;$/;"	m	struct:api_msg_msg	typeref:struct:api_msg_msg::netconn
dataptr	net/lwip/include/lwip/api_msg.h	/^      const void *dataptr;$/;"	m	struct:api_msg_msg::__anon25::__anon29
dns_api_msg	net/lwip/include/lwip/api_msg.h	/^struct dns_api_msg {$/;"	s
err	net/lwip/include/lwip/api_msg.h	/^  err_t *err;$/;"	m	struct:dns_api_msg
function	net/lwip/include/lwip/api_msg.h	/^  void (* function)(struct api_msg_msg *msg);$/;"	m	struct:api_msg
interface	net/lwip/include/lwip/api_msg.h	/^      struct ip_addr *interface;$/;"	m	struct:api_msg_msg::__anon25::__anon31	typeref:struct:api_msg_msg::__anon25::__anon31::ip_addr
ipaddr	net/lwip/include/lwip/api_msg.h	/^      struct ip_addr *ipaddr;$/;"	m	struct:api_msg_msg::__anon25::__anon27	typeref:struct:api_msg_msg::__anon25::__anon27::ip_addr
ipaddr	net/lwip/include/lwip/api_msg.h	/^      struct ip_addr *ipaddr;$/;"	m	struct:api_msg_msg::__anon25::__anon28	typeref:struct:api_msg_msg::__anon25::__anon28::ip_addr
jl	net/lwip/include/lwip/api_msg.h	/^    } jl;$/;"	m	union:api_msg_msg::__anon25	typeref:struct:api_msg_msg::__anon25::__anon31
join_or_leave	net/lwip/include/lwip/api_msg.h	/^      enum netconn_igmp join_or_leave;$/;"	m	struct:api_msg_msg::__anon25::__anon31	typeref:enum:api_msg_msg::__anon25::__anon31::netconn_igmp
lb	net/lwip/include/lwip/api_msg.h	/^    } lb;$/;"	m	union:api_msg_msg::__anon25	typeref:struct:api_msg_msg::__anon25::__anon32
len	net/lwip/include/lwip/api_msg.h	/^      int len;$/;"	m	struct:api_msg_msg::__anon25::__anon29
len	net/lwip/include/lwip/api_msg.h	/^      u16_t len;$/;"	m	struct:api_msg_msg::__anon25::__anon30
local	net/lwip/include/lwip/api_msg.h	/^      u8_t local;$/;"	m	struct:api_msg_msg::__anon25::__anon28
msg	net/lwip/include/lwip/api_msg.h	/^  struct api_msg_msg msg;$/;"	m	struct:api_msg	typeref:struct:api_msg::api_msg_msg
msg	net/lwip/include/lwip/api_msg.h	/^  } msg;$/;"	m	struct:api_msg_msg	typeref:union:api_msg_msg::__anon25
multiaddr	net/lwip/include/lwip/api_msg.h	/^      struct ip_addr *multiaddr;$/;"	m	struct:api_msg_msg::__anon25::__anon31	typeref:struct:api_msg_msg::__anon25::__anon31::ip_addr
n	net/lwip/include/lwip/api_msg.h	/^    } n;$/;"	m	union:api_msg_msg::__anon25	typeref:struct:api_msg_msg::__anon25::__anon26
name	net/lwip/include/lwip/api_msg.h	/^  const char *name;$/;"	m	struct:dns_api_msg
port	net/lwip/include/lwip/api_msg.h	/^      u16_t *port;$/;"	m	struct:api_msg_msg::__anon25::__anon28
port	net/lwip/include/lwip/api_msg.h	/^      u16_t port;$/;"	m	struct:api_msg_msg::__anon25::__anon27
proto	net/lwip/include/lwip/api_msg.h	/^      u8_t proto;$/;"	m	struct:api_msg_msg::__anon25::__anon26
r	net/lwip/include/lwip/api_msg.h	/^    } r;$/;"	m	union:api_msg_msg::__anon25	typeref:struct:api_msg_msg::__anon25::__anon30
sem	net/lwip/include/lwip/api_msg.h	/^  sys_sem_t sem;$/;"	m	struct:dns_api_msg
w	net/lwip/include/lwip/api_msg.h	/^    } w;$/;"	m	union:api_msg_msg::__anon25	typeref:struct:api_msg_msg::__anon25::__anon29
BIG_ENDIAN	net/lwip/include/lwip/arch.h	40;"	d
E2BIG	net/lwip/include/lwip/arch.h	75;"	d
EACCES	net/lwip/include/lwip/arch.h	81;"	d
EADDRINUSE	net/lwip/include/lwip/arch.h	168;"	d
EADDRNOTAVAIL	net/lwip/include/lwip/arch.h	169;"	d
EADV	net/lwip/include/lwip/arch.h	138;"	d
EAFNOSUPPORT	net/lwip/include/lwip/arch.h	167;"	d
EAGAIN	net/lwip/include/lwip/arch.h	79;"	d
EALREADY	net/lwip/include/lwip/arch.h	184;"	d
EBADE	net/lwip/include/lwip/arch.h	120;"	d
EBADF	net/lwip/include/lwip/arch.h	77;"	d
EBADFD	net/lwip/include/lwip/arch.h	147;"	d
EBADMSG	net/lwip/include/lwip/arch.h	144;"	d
EBADR	net/lwip/include/lwip/arch.h	121;"	d
EBADRQC	net/lwip/include/lwip/arch.h	124;"	d
EBADSLT	net/lwip/include/lwip/arch.h	125;"	d
EBFONT	net/lwip/include/lwip/arch.h	129;"	d
EBUSY	net/lwip/include/lwip/arch.h	84;"	d
ECHILD	net/lwip/include/lwip/arch.h	78;"	d
ECHRNG	net/lwip/include/lwip/arch.h	112;"	d
ECOMM	net/lwip/include/lwip/arch.h	140;"	d
ECONNABORTED	net/lwip/include/lwip/arch.h	173;"	d
ECONNREFUSED	net/lwip/include/lwip/arch.h	181;"	d
ECONNRESET	net/lwip/include/lwip/arch.h	174;"	d
EDEADLK	net/lwip/include/lwip/arch.h	103;"	d
EDEADLOCK	net/lwip/include/lwip/arch.h	127;"	d
EDESTADDRREQ	net/lwip/include/lwip/arch.h	159;"	d
EDOM	net/lwip/include/lwip/arch.h	101;"	d
EDOTDOT	net/lwip/include/lwip/arch.h	143;"	d
EDQUOT	net/lwip/include/lwip/arch.h	192;"	d
EEXIST	net/lwip/include/lwip/arch.h	85;"	d
EFAULT	net/lwip/include/lwip/arch.h	82;"	d
EFBIG	net/lwip/include/lwip/arch.h	95;"	d
EHOSTDOWN	net/lwip/include/lwip/arch.h	182;"	d
EHOSTUNREACH	net/lwip/include/lwip/arch.h	183;"	d
EIDRM	net/lwip/include/lwip/arch.h	111;"	d
EILSEQ	net/lwip/include/lwip/arch.h	154;"	d
EINPROGRESS	net/lwip/include/lwip/arch.h	185;"	d
EINTR	net/lwip/include/lwip/arch.h	72;"	d
EINVAL	net/lwip/include/lwip/arch.h	90;"	d
EIO	net/lwip/include/lwip/arch.h	73;"	d
EISCONN	net/lwip/include/lwip/arch.h	176;"	d
EISDIR	net/lwip/include/lwip/arch.h	89;"	d
EISNAM	net/lwip/include/lwip/arch.h	190;"	d
EL2HLT	net/lwip/include/lwip/arch.h	119;"	d
EL2NSYNC	net/lwip/include/lwip/arch.h	113;"	d
EL3HLT	net/lwip/include/lwip/arch.h	114;"	d
EL3RST	net/lwip/include/lwip/arch.h	115;"	d
ELIBACC	net/lwip/include/lwip/arch.h	149;"	d
ELIBBAD	net/lwip/include/lwip/arch.h	150;"	d
ELIBEXEC	net/lwip/include/lwip/arch.h	153;"	d
ELIBMAX	net/lwip/include/lwip/arch.h	152;"	d
ELIBSCN	net/lwip/include/lwip/arch.h	151;"	d
ELNRNG	net/lwip/include/lwip/arch.h	116;"	d
ELOOP	net/lwip/include/lwip/arch.h	108;"	d
EMEDIUMTYPE	net/lwip/include/lwip/arch.h	195;"	d
EMFILE	net/lwip/include/lwip/arch.h	92;"	d
EMLINK	net/lwip/include/lwip/arch.h	99;"	d
EMSGSIZE	net/lwip/include/lwip/arch.h	160;"	d
EMULTIHOP	net/lwip/include/lwip/arch.h	142;"	d
ENAMETOOLONG	net/lwip/include/lwip/arch.h	104;"	d
ENAVAIL	net/lwip/include/lwip/arch.h	189;"	d
ENETDOWN	net/lwip/include/lwip/arch.h	170;"	d
ENETRESET	net/lwip/include/lwip/arch.h	172;"	d
ENETUNREACH	net/lwip/include/lwip/arch.h	171;"	d
ENFILE	net/lwip/include/lwip/arch.h	91;"	d
ENOANO	net/lwip/include/lwip/arch.h	123;"	d
ENOBUFS	net/lwip/include/lwip/arch.h	175;"	d
ENOCSI	net/lwip/include/lwip/arch.h	118;"	d
ENODATA	net/lwip/include/lwip/arch.h	131;"	d
ENODEV	net/lwip/include/lwip/arch.h	87;"	d
ENOENT	net/lwip/include/lwip/arch.h	70;"	d
ENOEXEC	net/lwip/include/lwip/arch.h	76;"	d
ENOLCK	net/lwip/include/lwip/arch.h	105;"	d
ENOLINK	net/lwip/include/lwip/arch.h	137;"	d
ENOMEDIUM	net/lwip/include/lwip/arch.h	194;"	d
ENOMEM	net/lwip/include/lwip/arch.h	80;"	d
ENOMSG	net/lwip/include/lwip/arch.h	110;"	d
ENONET	net/lwip/include/lwip/arch.h	134;"	d
ENOPKG	net/lwip/include/lwip/arch.h	135;"	d
ENOPROTOOPT	net/lwip/include/lwip/arch.h	162;"	d
ENOSPC	net/lwip/include/lwip/arch.h	96;"	d
ENOSR	net/lwip/include/lwip/arch.h	133;"	d
ENOSTR	net/lwip/include/lwip/arch.h	130;"	d
ENOSYS	net/lwip/include/lwip/arch.h	106;"	d
ENOTBLK	net/lwip/include/lwip/arch.h	83;"	d
ENOTCONN	net/lwip/include/lwip/arch.h	177;"	d
ENOTDIR	net/lwip/include/lwip/arch.h	88;"	d
ENOTEMPTY	net/lwip/include/lwip/arch.h	107;"	d
ENOTNAM	net/lwip/include/lwip/arch.h	188;"	d
ENOTSOCK	net/lwip/include/lwip/arch.h	158;"	d
ENOTTY	net/lwip/include/lwip/arch.h	93;"	d
ENOTUNIQ	net/lwip/include/lwip/arch.h	146;"	d
ENSRBADFAMILY	net/lwip/include/lwip/arch.h	207;"	d
ENSRBADNAME	net/lwip/include/lwip/arch.h	206;"	d
ENSRBADQUERY	net/lwip/include/lwip/arch.h	205;"	d
ENSRBADRESP	net/lwip/include/lwip/arch.h	208;"	d
ENSRCNAMELOOP	net/lwip/include/lwip/arch.h	216;"	d
ENSRCONNREFUSED	net/lwip/include/lwip/arch.h	209;"	d
ENSRDESTRUCTION	net/lwip/include/lwip/arch.h	214;"	d
ENSRFILE	net/lwip/include/lwip/arch.h	212;"	d
ENSRFORMERR	net/lwip/include/lwip/arch.h	200;"	d
ENSRNODATA	net/lwip/include/lwip/arch.h	199;"	d
ENSRNOMEM	net/lwip/include/lwip/arch.h	213;"	d
ENSRNOTFOUND	net/lwip/include/lwip/arch.h	202;"	d
ENSRNOTIMP	net/lwip/include/lwip/arch.h	203;"	d
ENSROF	net/lwip/include/lwip/arch.h	211;"	d
ENSROK	net/lwip/include/lwip/arch.h	198;"	d
ENSRQUERYDOMAINTOOLONG	net/lwip/include/lwip/arch.h	215;"	d
ENSRREFUSED	net/lwip/include/lwip/arch.h	204;"	d
ENSRSERVFAIL	net/lwip/include/lwip/arch.h	201;"	d
ENSRTIMEOUT	net/lwip/include/lwip/arch.h	210;"	d
ENXIO	net/lwip/include/lwip/arch.h	74;"	d
EOPNOTSUPP	net/lwip/include/lwip/arch.h	165;"	d
EOVERFLOW	net/lwip/include/lwip/arch.h	145;"	d
EPERM	net/lwip/include/lwip/arch.h	69;"	d
EPFNOSUPPORT	net/lwip/include/lwip/arch.h	166;"	d
EPIPE	net/lwip/include/lwip/arch.h	100;"	d
EPROTO	net/lwip/include/lwip/arch.h	141;"	d
EPROTONOSUPPORT	net/lwip/include/lwip/arch.h	163;"	d
EPROTOTYPE	net/lwip/include/lwip/arch.h	161;"	d
ERANGE	net/lwip/include/lwip/arch.h	102;"	d
EREMCHG	net/lwip/include/lwip/arch.h	148;"	d
EREMOTE	net/lwip/include/lwip/arch.h	136;"	d
EREMOTEIO	net/lwip/include/lwip/arch.h	191;"	d
ERESTART	net/lwip/include/lwip/arch.h	155;"	d
EROFS	net/lwip/include/lwip/arch.h	98;"	d
ESHUTDOWN	net/lwip/include/lwip/arch.h	178;"	d
ESOCKTNOSUPPORT	net/lwip/include/lwip/arch.h	164;"	d
ESPIPE	net/lwip/include/lwip/arch.h	97;"	d
ESRCH	net/lwip/include/lwip/arch.h	71;"	d
ESRMNT	net/lwip/include/lwip/arch.h	139;"	d
ESTALE	net/lwip/include/lwip/arch.h	186;"	d
ESTRPIPE	net/lwip/include/lwip/arch.h	156;"	d
ETIME	net/lwip/include/lwip/arch.h	132;"	d
ETIMEDOUT	net/lwip/include/lwip/arch.h	180;"	d
ETOOMANYREFS	net/lwip/include/lwip/arch.h	179;"	d
ETXTBSY	net/lwip/include/lwip/arch.h	94;"	d
EUCLEAN	net/lwip/include/lwip/arch.h	187;"	d
EUNATCH	net/lwip/include/lwip/arch.h	117;"	d
EUSERS	net/lwip/include/lwip/arch.h	157;"	d
EWOULDBLOCK	net/lwip/include/lwip/arch.h	109;"	d
EXDEV	net/lwip/include/lwip/arch.h	86;"	d
EXFULL	net/lwip/include/lwip/arch.h	122;"	d
LITTLE_ENDIAN	net/lwip/include/lwip/arch.h	36;"	d
LWIP_UNUSED_ARG	net/lwip/include/lwip/arch.h	63;"	d
PACK_STRUCT_BEGIN	net/lwip/include/lwip/arch.h	50;"	d
PACK_STRUCT_END	net/lwip/include/lwip/arch.h	54;"	d
PACK_STRUCT_FIELD	net/lwip/include/lwip/arch.h	58;"	d
__LWIP_ARCH_H__	net/lwip/include/lwip/arch.h	33;"	d
LWIP_ASSERT	net/lwip/include/lwip/debug.h	64;"	d
LWIP_ASSERT	net/lwip/include/lwip/debug.h	67;"	d
LWIP_DBG_FRESH	net/lwip/include/lwip/debug.h	59;"	d
LWIP_DBG_HALT	net/lwip/include/lwip/debug.h	61;"	d
LWIP_DBG_LEVEL_OFF	net/lwip/include/lwip/debug.h	43;"	d
LWIP_DBG_LEVEL_SERIOUS	net/lwip/include/lwip/debug.h	45;"	d
LWIP_DBG_LEVEL_SEVERE	net/lwip/include/lwip/debug.h	46;"	d
LWIP_DBG_LEVEL_WARNING	net/lwip/include/lwip/debug.h	44;"	d
LWIP_DBG_MASK_LEVEL	net/lwip/include/lwip/debug.h	47;"	d
LWIP_DBG_OFF	net/lwip/include/lwip/debug.h	52;"	d
LWIP_DBG_ON	net/lwip/include/lwip/debug.h	50;"	d
LWIP_DBG_STATE	net/lwip/include/lwip/debug.h	57;"	d
LWIP_DBG_TRACE	net/lwip/include/lwip/debug.h	55;"	d
LWIP_DEBUGF	net/lwip/include/lwip/debug.h	80;"	d
LWIP_DEBUGF	net/lwip/include/lwip/debug.h	93;"	d
LWIP_ERROR	net/lwip/include/lwip/debug.h	72;"	d
__LWIP_DEBUG_H__	net/lwip/include/lwip/debug.h	33;"	d
LWIP_MAX	net/lwip/include/lwip/def.h	38;"	d
LWIP_MIN	net/lwip/include/lwip/def.h	39;"	d
NULL	net/lwip/include/lwip/def.h	42;"	d
__LWIP_DEF_H__	net/lwip/include/lwip/def.h	33;"	d
DHCP_ACK	net/lwip/include/lwip/dhcp.h	188;"	d
DHCP_AUTOIP_COOP_STATE_OFF	net/lwip/include/lwip/dhcp.h	178;"	d
DHCP_AUTOIP_COOP_STATE_ON	net/lwip/include/lwip/dhcp.h	179;"	d
DHCP_BACKING_OFF	net/lwip/include/lwip/dhcp.h	174;"	d
DHCP_BOOTREPLY	net/lwip/include/lwip/dhcp.h	182;"	d
DHCP_BOOTREQUEST	net/lwip/include/lwip/dhcp.h	181;"	d
DHCP_BOUND	net/lwip/include/lwip/dhcp.h	172;"	d
DHCP_BROADCAST_FLAG	net/lwip/include/lwip/dhcp.h	197;"	d
DHCP_BROADCAST_MASK	net/lwip/include/lwip/dhcp.h	198;"	d
DHCP_CHADDR_LEN	net/lwip/include/lwip/dhcp.h	93;"	d
DHCP_CHADDR_OFS	net/lwip/include/lwip/dhcp.h	151;"	d
DHCP_CHECKING	net/lwip/include/lwip/dhcp.h	170;"	d
DHCP_CIADDR_OFS	net/lwip/include/lwip/dhcp.h	147;"	d
DHCP_CLIENT_PORT	net/lwip/include/lwip/dhcp.h	159;"	d
DHCP_COARSE_TIMER_MSECS	net/lwip/include/lwip/dhcp.h	21;"	d
DHCP_COARSE_TIMER_SECS	net/lwip/include/lwip/dhcp.h	19;"	d
DHCP_COOKIE_OFS	net/lwip/include/lwip/dhcp.h	156;"	d
DHCP_DECLINE	net/lwip/include/lwip/dhcp.h	187;"	d
DHCP_DISCOVER	net/lwip/include/lwip/dhcp.h	184;"	d
DHCP_FILE_LEN	net/lwip/include/lwip/dhcp.h	97;"	d
DHCP_FILE_OFS	net/lwip/include/lwip/dhcp.h	153;"	d
DHCP_FINE_TIMER_MSECS	net/lwip/include/lwip/dhcp.h	23;"	d
DHCP_FLAGS_OFS	net/lwip/include/lwip/dhcp.h	146;"	d
DHCP_GIADDR_OFS	net/lwip/include/lwip/dhcp.h	150;"	d
DHCP_HLEN_ETH	net/lwip/include/lwip/dhcp.h	195;"	d
DHCP_HLEN_OFS	net/lwip/include/lwip/dhcp.h	142;"	d
DHCP_HOPS_OFS	net/lwip/include/lwip/dhcp.h	143;"	d
DHCP_HTYPE_ETH	net/lwip/include/lwip/dhcp.h	193;"	d
DHCP_HTYPE_OFS	net/lwip/include/lwip/dhcp.h	141;"	d
DHCP_INFORM	net/lwip/include/lwip/dhcp.h	191;"	d
DHCP_INFORMING	net/lwip/include/lwip/dhcp.h	169;"	d
DHCP_INIT	net/lwip/include/lwip/dhcp.h	164;"	d
DHCP_MAX_DNS	net/lwip/include/lwip/dhcp.h	55;"	d
DHCP_MIN_OPTIONS_LEN	net/lwip/include/lwip/dhcp.h	100;"	d
DHCP_MSG_LEN	net/lwip/include/lwip/dhcp.h	154;"	d
DHCP_MSG_OFS	net/lwip/include/lwip/dhcp.h	139;"	d
DHCP_NAK	net/lwip/include/lwip/dhcp.h	189;"	d
DHCP_OFF	net/lwip/include/lwip/dhcp.h	175;"	d
DHCP_OFFER	net/lwip/include/lwip/dhcp.h	185;"	d
DHCP_OPTIONS_LEN	net/lwip/include/lwip/dhcp.h	103;"	d
DHCP_OPTIONS_LEN	net/lwip/include/lwip/dhcp.h	108;"	d
DHCP_OPTIONS_OFS	net/lwip/include/lwip/dhcp.h	157;"	d
DHCP_OPTION_BOOTFILE	net/lwip/include/lwip/dhcp.h	232;"	d
DHCP_OPTION_BROADCAST	net/lwip/include/lwip/dhcp.h	208;"	d
DHCP_OPTION_CLIENT_ID	net/lwip/include/lwip/dhcp.h	230;"	d
DHCP_OPTION_DNS_SERVER	net/lwip/include/lwip/dhcp.h	204;"	d
DHCP_OPTION_END	net/lwip/include/lwip/dhcp.h	210;"	d
DHCP_OPTION_HOSTNAME	net/lwip/include/lwip/dhcp.h	205;"	d
DHCP_OPTION_IP_TTL	net/lwip/include/lwip/dhcp.h	206;"	d
DHCP_OPTION_LEASE_TIME	net/lwip/include/lwip/dhcp.h	214;"	d
DHCP_OPTION_MAX_MSG_SIZE	net/lwip/include/lwip/dhcp.h	224;"	d
DHCP_OPTION_MAX_MSG_SIZE_LEN	net/lwip/include/lwip/dhcp.h	225;"	d
DHCP_OPTION_MESSAGE_TYPE	net/lwip/include/lwip/dhcp.h	217;"	d
DHCP_OPTION_MESSAGE_TYPE_LEN	net/lwip/include/lwip/dhcp.h	218;"	d
DHCP_OPTION_MTU	net/lwip/include/lwip/dhcp.h	207;"	d
DHCP_OPTION_OVERLOAD	net/lwip/include/lwip/dhcp.h	215;"	d
DHCP_OPTION_PAD	net/lwip/include/lwip/dhcp.h	201;"	d
DHCP_OPTION_PARAMETER_REQUEST_LIST	net/lwip/include/lwip/dhcp.h	222;"	d
DHCP_OPTION_REQUESTED_IP	net/lwip/include/lwip/dhcp.h	213;"	d
DHCP_OPTION_ROUTER	net/lwip/include/lwip/dhcp.h	203;"	d
DHCP_OPTION_SERVER_ID	net/lwip/include/lwip/dhcp.h	221;"	d
DHCP_OPTION_SUBNET_MASK	net/lwip/include/lwip/dhcp.h	202;"	d
DHCP_OPTION_T1	net/lwip/include/lwip/dhcp.h	227;"	d
DHCP_OPTION_T2	net/lwip/include/lwip/dhcp.h	228;"	d
DHCP_OPTION_TCP_TTL	net/lwip/include/lwip/dhcp.h	209;"	d
DHCP_OPTION_TFTP_SERVERNAME	net/lwip/include/lwip/dhcp.h	231;"	d
DHCP_OPTION_US	net/lwip/include/lwip/dhcp.h	229;"	d
DHCP_OP_OFS	net/lwip/include/lwip/dhcp.h	140;"	d
DHCP_OVERLOAD_FILE	net/lwip/include/lwip/dhcp.h	236;"	d
DHCP_OVERLOAD_NONE	net/lwip/include/lwip/dhcp.h	235;"	d
DHCP_OVERLOAD_SNAME	net/lwip/include/lwip/dhcp.h	237;"	d
DHCP_OVERLOAD_SNAME_FILE	net/lwip/include/lwip/dhcp.h	238;"	d
DHCP_PERMANENT	net/lwip/include/lwip/dhcp.h	171;"	d
DHCP_REBINDING	net/lwip/include/lwip/dhcp.h	166;"	d
DHCP_REBOOTING	net/lwip/include/lwip/dhcp.h	165;"	d
DHCP_RELEASE	net/lwip/include/lwip/dhcp.h	190;"	d
DHCP_RENEWING	net/lwip/include/lwip/dhcp.h	167;"	d
DHCP_REQUEST	net/lwip/include/lwip/dhcp.h	186;"	d
DHCP_REQUESTING	net/lwip/include/lwip/dhcp.h	163;"	d
DHCP_SECS_OFS	net/lwip/include/lwip/dhcp.h	145;"	d
DHCP_SELECTING	net/lwip/include/lwip/dhcp.h	168;"	d
DHCP_SERVER_PORT	net/lwip/include/lwip/dhcp.h	160;"	d
DHCP_SIADDR_OFS	net/lwip/include/lwip/dhcp.h	149;"	d
DHCP_SNAME_LEN	net/lwip/include/lwip/dhcp.h	95;"	d
DHCP_SNAME_OFS	net/lwip/include/lwip/dhcp.h	152;"	d
DHCP_XID_OFS	net/lwip/include/lwip/dhcp.h	144;"	d
DHCP_YIADDR_OFS	net/lwip/include/lwip/dhcp.h	148;"	d
PACK_STRUCT_STRUCT	net/lwip/include/lwip/dhcp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:dhcp_msg
__LWIP_DHCP_H__	net/lwip/include/lwip/dhcp.h	5;"	d
autoip_coop_state	net/lwip/include/lwip/dhcp.h	/^  u8_t autoip_coop_state;$/;"	m	struct:dhcp
dhcp	net/lwip/include/lwip/dhcp.h	/^struct dhcp$/;"	s
dhcp_msg	net/lwip/include/lwip/dhcp.h	/^struct dhcp_msg$/;"	s
dns_count	net/lwip/include/lwip/dhcp.h	/^  u32_t dns_count; \/* actual number of DNS servers obtained *\/$/;"	m	struct:dhcp
msg_in	net/lwip/include/lwip/dhcp.h	/^  struct dhcp_msg *msg_in;$/;"	m	struct:dhcp	typeref:struct:dhcp::dhcp_msg
msg_out	net/lwip/include/lwip/dhcp.h	/^  struct dhcp_msg *msg_out; \/* outgoing msg *\/$/;"	m	struct:dhcp	typeref:struct:dhcp::dhcp_msg
offered_bc_addr	net/lwip/include/lwip/dhcp.h	/^  struct ip_addr offered_bc_addr;$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr
offered_dns_addr	net/lwip/include/lwip/dhcp.h	/^  struct ip_addr offered_dns_addr[DHCP_MAX_DNS]; \/* DNS server addresses *\/$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr
offered_gw_addr	net/lwip/include/lwip/dhcp.h	/^  struct ip_addr offered_gw_addr;$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr
offered_ip_addr	net/lwip/include/lwip/dhcp.h	/^  struct ip_addr offered_ip_addr;$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr
offered_sn_mask	net/lwip/include/lwip/dhcp.h	/^  struct ip_addr offered_sn_mask;$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr
offered_t0_lease	net/lwip/include/lwip/dhcp.h	/^  u32_t offered_t0_lease; \/* lease period (in seconds) *\/$/;"	m	struct:dhcp
offered_t1_renew	net/lwip/include/lwip/dhcp.h	/^  u32_t offered_t1_renew; \/* recommended renew time (usually 50% of lease period) *\/$/;"	m	struct:dhcp
offered_t2_rebind	net/lwip/include/lwip/dhcp.h	/^  u32_t offered_t2_rebind; \/* recommended rebind time (usually 66% of lease period)  *\/$/;"	m	struct:dhcp
options_in	net/lwip/include/lwip/dhcp.h	/^  struct dhcp_msg *options_in; $/;"	m	struct:dhcp	typeref:struct:dhcp::dhcp_msg
options_in_len	net/lwip/include/lwip/dhcp.h	/^  u16_t options_in_len;$/;"	m	struct:dhcp
options_out_len	net/lwip/include/lwip/dhcp.h	/^  u16_t options_out_len; \/* outgoing msg options length *\/$/;"	m	struct:dhcp
p	net/lwip/include/lwip/dhcp.h	/^  struct pbuf *p;$/;"	m	struct:dhcp	typeref:struct:dhcp::pbuf
p_out	net/lwip/include/lwip/dhcp.h	/^  struct pbuf *p_out; \/* pbuf of outcoming msg *\/$/;"	m	struct:dhcp	typeref:struct:dhcp::pbuf
pcb	net/lwip/include/lwip/dhcp.h	/^  struct udp_pcb *pcb;$/;"	m	struct:dhcp	typeref:struct:dhcp::udp_pcb
request_timeout	net/lwip/include/lwip/dhcp.h	/^  u16_t request_timeout; \/* #ticks with period DHCP_FINE_TIMER_SECS for request timeout *\/$/;"	m	struct:dhcp
server_ip_addr	net/lwip/include/lwip/dhcp.h	/^  struct ip_addr server_ip_addr; \/* dhcp server address that offered this lease *\/$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr
state	net/lwip/include/lwip/dhcp.h	/^  u8_t state;$/;"	m	struct:dhcp
t1_timeout	net/lwip/include/lwip/dhcp.h	/^  u16_t t1_timeout;  \/* #ticks with period DHCP_COARSE_TIMER_SECS for renewal time *\/$/;"	m	struct:dhcp
t2_timeout	net/lwip/include/lwip/dhcp.h	/^  u16_t t2_timeout;  \/* #ticks with period DHCP_COARSE_TIMER_SECS for rebind time *\/$/;"	m	struct:dhcp
tries	net/lwip/include/lwip/dhcp.h	/^  u8_t tries;$/;"	m	struct:dhcp
xid	net/lwip/include/lwip/dhcp.h	/^  u32_t xid;$/;"	m	struct:dhcp
DNS_RRCLASS_CH	net/lwip/include/lwip/dns.h	65;"	d
DNS_RRCLASS_CS	net/lwip/include/lwip/dns.h	64;"	d
DNS_RRCLASS_FLUSH	net/lwip/include/lwip/dns.h	67;"	d
DNS_RRCLASS_HS	net/lwip/include/lwip/dns.h	66;"	d
DNS_RRCLASS_IN	net/lwip/include/lwip/dns.h	63;"	d
DNS_RRTYPE_A	net/lwip/include/lwip/dns.h	45;"	d
DNS_RRTYPE_CNAME	net/lwip/include/lwip/dns.h	49;"	d
DNS_RRTYPE_HINFO	net/lwip/include/lwip/dns.h	57;"	d
DNS_RRTYPE_MB	net/lwip/include/lwip/dns.h	51;"	d
DNS_RRTYPE_MD	net/lwip/include/lwip/dns.h	47;"	d
DNS_RRTYPE_MF	net/lwip/include/lwip/dns.h	48;"	d
DNS_RRTYPE_MG	net/lwip/include/lwip/dns.h	52;"	d
DNS_RRTYPE_MINFO	net/lwip/include/lwip/dns.h	58;"	d
DNS_RRTYPE_MR	net/lwip/include/lwip/dns.h	53;"	d
DNS_RRTYPE_MX	net/lwip/include/lwip/dns.h	59;"	d
DNS_RRTYPE_NS	net/lwip/include/lwip/dns.h	46;"	d
DNS_RRTYPE_NULL	net/lwip/include/lwip/dns.h	54;"	d
DNS_RRTYPE_PTR	net/lwip/include/lwip/dns.h	56;"	d
DNS_RRTYPE_SOA	net/lwip/include/lwip/dns.h	50;"	d
DNS_RRTYPE_TXT	net/lwip/include/lwip/dns.h	60;"	d
DNS_RRTYPE_WKS	net/lwip/include/lwip/dns.h	55;"	d
DNS_TMR_INTERVAL	net/lwip/include/lwip/dns.h	42;"	d
__LWIP_DNS_H__	net/lwip/include/lwip/dns.h	35;"	d
dns_found_callback	net/lwip/include/lwip/dns.h	/^typedef void (*dns_found_callback)(const char *name, struct ip_addr *ipaddr, void *callback_arg);$/;"	t
ERR_ABRT	net/lwip/include/lwip/err.h	60;"	d
ERR_ARG	net/lwip/include/lwip/err.h	67;"	d
ERR_BUF	net/lwip/include/lwip/err.h	54;"	d
ERR_CLSD	net/lwip/include/lwip/err.h	62;"	d
ERR_CONN	net/lwip/include/lwip/err.h	63;"	d
ERR_IF	net/lwip/include/lwip/err.h	71;"	d
ERR_INPROGRESS	net/lwip/include/lwip/err.h	74;"	d
ERR_ISCONN	net/lwip/include/lwip/err.h	72;"	d
ERR_IS_FATAL	net/lwip/include/lwip/err.h	58;"	d
ERR_MEM	net/lwip/include/lwip/err.h	53;"	d
ERR_OK	net/lwip/include/lwip/err.h	52;"	d
ERR_RST	net/lwip/include/lwip/err.h	61;"	d
ERR_RTE	net/lwip/include/lwip/err.h	56;"	d
ERR_TIMEOUT	net/lwip/include/lwip/err.h	55;"	d
ERR_USE	net/lwip/include/lwip/err.h	69;"	d
ERR_VAL	net/lwip/include/lwip/err.h	65;"	d
__LWIP_ERR_H__	net/lwip/include/lwip/err.h	33;"	d
err_t	net/lwip/include/lwip/err.h	/^ typedef s8_t err_t;$/;"	t
err_t	net/lwip/include/lwip/err.h	/^typedef LWIP_ERR_T err_t;$/;"	t
lwip_strerr	net/lwip/include/lwip/err.h	80;"	d
__LWIP_INIT_H__	net/lwip/include/lwip/init.h	33;"	d
LWIP_MEM_ALIGN	net/lwip/include/lwip/mem.h	96;"	d
LWIP_MEM_ALIGN_SIZE	net/lwip/include/lwip/mem.h	92;"	d
__LWIP_MEM_H__	net/lwip/include/lwip/mem.h	33;"	d
mem_calloc	net/lwip/include/lwip/mem.h	59;"	d
mem_free	net/lwip/include/lwip/mem.h	53;"	d
mem_init	net/lwip/include/lwip/mem.h	48;"	d
mem_init	net/lwip/include/lwip/mem.h	77;"	d
mem_malloc	net/lwip/include/lwip/mem.h	56;"	d
mem_realloc	net/lwip/include/lwip/mem.h	62;"	d
mem_realloc	net/lwip/include/lwip/mem.h	80;"	d
mem_size_t	net/lwip/include/lwip/mem.h	/^typedef size_t mem_size_t;$/;"	t
mem_size_t	net/lwip/include/lwip/mem.h	/^typedef u16_t mem_size_t;$/;"	t
mem_size_t	net/lwip/include/lwip/mem.h	/^typedef u32_t mem_size_t;$/;"	t
LWIP_MALLOC_MEMPOOL	net/lwip/include/lwip/memp.h	57;"	d
LWIP_MALLOC_MEMPOOL	net/lwip/include/lwip/memp.h	66;"	d
LWIP_MALLOC_MEMPOOL_END	net/lwip/include/lwip/memp.h	58;"	d
LWIP_MALLOC_MEMPOOL_END	net/lwip/include/lwip/memp.h	67;"	d
LWIP_MALLOC_MEMPOOL_START	net/lwip/include/lwip/memp.h	56;"	d
LWIP_MALLOC_MEMPOOL_START	net/lwip/include/lwip/memp.h	65;"	d
LWIP_MEMPOOL	net/lwip/include/lwip/memp.h	44;"	d
LWIP_MEMPOOL	net/lwip/include/lwip/memp.h	55;"	d
LWIP_MEMPOOL	net/lwip/include/lwip/memp.h	64;"	d
MEMP_MAX	net/lwip/include/lwip/memp.h	/^  MEMP_MAX$/;"	e	enum:__anon15
MEMP_POOL_FIRST	net/lwip/include/lwip/memp.h	74;"	d
MEMP_POOL_HELPER_FIRST	net/lwip/include/lwip/memp.h	/^    MEMP_POOL_HELPER_FIRST = ((u8_t)$/;"	e	enum:__anon16
MEMP_POOL_HELPER_LAST	net/lwip/include/lwip/memp.h	/^    MEMP_POOL_HELPER_LAST = ((u8_t)$/;"	e	enum:__anon16
MEMP_POOL_LAST	net/lwip/include/lwip/memp.h	75;"	d
__LWIP_MEMP_H__	net/lwip/include/lwip/memp.h	34;"	d
memp_malloc	net/lwip/include/lwip/memp.h	84;"	d
memp_pool_helper_t	net/lwip/include/lwip/memp.h	/^} memp_pool_helper_t;$/;"	t	typeref:enum:__anon16
memp_t	net/lwip/include/lwip/memp.h	/^} memp_t;$/;"	t	typeref:enum:__anon15
LWIP_MALLOC_MEMPOOL	net/lwip/include/lwip/memp_std.h	14;"	d
LWIP_MALLOC_MEMPOOL	net/lwip/include/lwip/memp_std.h	98;"	d
LWIP_MALLOC_MEMPOOL_END	net/lwip/include/lwip/memp_std.h	100;"	d
LWIP_MALLOC_MEMPOOL_END	net/lwip/include/lwip/memp_std.h	16;"	d
LWIP_MALLOC_MEMPOOL_START	net/lwip/include/lwip/memp_std.h	15;"	d
LWIP_MALLOC_MEMPOOL_START	net/lwip/include/lwip/memp_std.h	99;"	d
LWIP_MEMPOOL	net/lwip/include/lwip/memp_std.h	97;"	d
LWIP_PBUF_MEMPOOL	net/lwip/include/lwip/memp_std.h	101;"	d
LWIP_PBUF_MEMPOOL	net/lwip/include/lwip/memp_std.h	22;"	d
__LWIP_NETBUF_H__	net/lwip/include/lwip/netbuf.h	33;"	d
addr	net/lwip/include/lwip/netbuf.h	/^  struct ip_addr *addr;$/;"	m	struct:netbuf	typeref:struct:netbuf::ip_addr
netbuf	net/lwip/include/lwip/netbuf.h	/^struct netbuf {$/;"	s
netbuf_copy	net/lwip/include/lwip/netbuf.h	67;"	d
netbuf_copy_partial	net/lwip/include/lwip/netbuf.h	65;"	d
netbuf_fromaddr	net/lwip/include/lwip/netbuf.h	69;"	d
netbuf_fromport	net/lwip/include/lwip/netbuf.h	70;"	d
netbuf_len	net/lwip/include/lwip/netbuf.h	68;"	d
p	net/lwip/include/lwip/netbuf.h	/^  struct pbuf *p, *ptr;$/;"	m	struct:netbuf	typeref:struct:netbuf::pbuf
port	net/lwip/include/lwip/netbuf.h	/^  u16_t port;$/;"	m	struct:netbuf
ptr	net/lwip/include/lwip/netbuf.h	/^  struct pbuf *p, *ptr;$/;"	m	struct:netbuf	typeref:struct:netbuf::
EAI_FAIL	net/lwip/include/lwip/netdb.h	53;"	d
EAI_MEMORY	net/lwip/include/lwip/netdb.h	54;"	d
EAI_NONAME	net/lwip/include/lwip/netdb.h	51;"	d
EAI_SERVICE	net/lwip/include/lwip/netdb.h	52;"	d
HOST_NOT_FOUND	net/lwip/include/lwip/netdb.h	56;"	d
LWIP_DNS_API_DECLARE_H_ERRNO	net/lwip/include/lwip/netdb.h	38;"	d
LWIP_DNS_API_DECLARE_STRUCTS	net/lwip/include/lwip/netdb.h	46;"	d
LWIP_DNS_API_DEFINE_ERRORS	net/lwip/include/lwip/netdb.h	42;"	d
NO_DATA	net/lwip/include/lwip/netdb.h	57;"	d
NO_RECOVERY	net/lwip/include/lwip/netdb.h	58;"	d
TRY_AGAIN	net/lwip/include/lwip/netdb.h	59;"	d
addrinfo	net/lwip/include/lwip/netdb.h	/^struct addrinfo {$/;"	s
ai_addr	net/lwip/include/lwip/netdb.h	/^    struct sockaddr  *ai_addr;       \/* Socket address of socket. *\/$/;"	m	struct:addrinfo	typeref:struct:addrinfo::sockaddr
ai_addrlen	net/lwip/include/lwip/netdb.h	/^    socklen_t         ai_addrlen;    \/* Length of socket address. *\/$/;"	m	struct:addrinfo
ai_canonname	net/lwip/include/lwip/netdb.h	/^    char             *ai_canonname;  \/* Canonical name of service location. *\/$/;"	m	struct:addrinfo
ai_family	net/lwip/include/lwip/netdb.h	/^    int               ai_family;     \/* Address family of socket. *\/$/;"	m	struct:addrinfo
ai_flags	net/lwip/include/lwip/netdb.h	/^    int               ai_flags;      \/* Input flags. *\/$/;"	m	struct:addrinfo
ai_next	net/lwip/include/lwip/netdb.h	/^    struct addrinfo  *ai_next;       \/* Pointer to next in list. *\/$/;"	m	struct:addrinfo	typeref:struct:addrinfo::addrinfo
ai_protocol	net/lwip/include/lwip/netdb.h	/^    int               ai_protocol;   \/* Protocol of socket. *\/$/;"	m	struct:addrinfo
ai_socktype	net/lwip/include/lwip/netdb.h	/^    int               ai_socktype;   \/* Socket type. *\/$/;"	m	struct:addrinfo
freeaddrinfo	net/lwip/include/lwip/netdb.h	104;"	d
getaddrinfo	net/lwip/include/lwip/netdb.h	105;"	d
gethostbyname	net/lwip/include/lwip/netdb.h	101;"	d
gethostbyname_r	net/lwip/include/lwip/netdb.h	102;"	d
h_addr	net/lwip/include/lwip/netdb.h	71;"	d
h_addr_list	net/lwip/include/lwip/netdb.h	/^    char **h_addr_list; \/* A pointer to an array of pointers to network addresses (in$/;"	m	struct:hostent
h_addrtype	net/lwip/include/lwip/netdb.h	/^    int    h_addrtype;  \/* Address type. *\/$/;"	m	struct:hostent
h_aliases	net/lwip/include/lwip/netdb.h	/^    char **h_aliases;   \/* A pointer to an array of pointers to alternative host names,$/;"	m	struct:hostent
h_length	net/lwip/include/lwip/netdb.h	/^    int    h_length;    \/* The length, in bytes, of the address. *\/$/;"	m	struct:hostent
h_name	net/lwip/include/lwip/netdb.h	/^    char  *h_name;      \/* Official name of the host. *\/$/;"	m	struct:hostent
hostent	net/lwip/include/lwip/netdb.h	/^struct hostent {$/;"	s
ENABLE_LOOPBACK	net/lwip/include/lwip/netif.h	37;"	d
NETIF_FLAG_BROADCAST	net/lwip/include/lwip/netif.h	71;"	d
NETIF_FLAG_DHCP	net/lwip/include/lwip/netif.h	75;"	d
NETIF_FLAG_ETHARP	net/lwip/include/lwip/netif.h	80;"	d
NETIF_FLAG_IGMP	net/lwip/include/lwip/netif.h	82;"	d
NETIF_FLAG_LINK_UP	net/lwip/include/lwip/netif.h	78;"	d
NETIF_FLAG_POINTTOPOINT	net/lwip/include/lwip/netif.h	73;"	d
NETIF_FLAG_UP	net/lwip/include/lwip/netif.h	69;"	d
NETIF_INIT_SNMP	net/lwip/include/lwip/netif.h	181;"	d
NETIF_INIT_SNMP	net/lwip/include/lwip/netif.h	196;"	d
NETIF_MAX_HWADDR_LEN	net/lwip/include/lwip/netif.h	61;"	d
__LWIP_NETIF_H__	net/lwip/include/lwip/netif.h	33;"	d
addr_hint	net/lwip/include/lwip/netif.h	/^  u8_t *addr_hint;$/;"	m	struct:netif
autoip	net/lwip/include/lwip/netif.h	/^  struct autoip *autoip;$/;"	m	struct:netif	typeref:struct:netif::autoip
dhcp	net/lwip/include/lwip/netif.h	/^  struct dhcp *dhcp;$/;"	m	struct:netif	typeref:struct:netif::dhcp
flags	net/lwip/include/lwip/netif.h	/^  u8_t flags;$/;"	m	struct:netif
gw	net/lwip/include/lwip/netif.h	/^  struct ip_addr gw;$/;"	m	struct:netif	typeref:struct:netif::ip_addr
hostname	net/lwip/include/lwip/netif.h	/^  char*  hostname;$/;"	m	struct:netif
hwaddr	net/lwip/include/lwip/netif.h	/^  u8_t hwaddr[NETIF_MAX_HWADDR_LEN];$/;"	m	struct:netif
hwaddr_len	net/lwip/include/lwip/netif.h	/^  u8_t hwaddr_len;$/;"	m	struct:netif
ifindiscards	net/lwip/include/lwip/netif.h	/^  u32_t ifindiscards;$/;"	m	struct:netif
ifinnucastpkts	net/lwip/include/lwip/netif.h	/^  u32_t ifinnucastpkts;$/;"	m	struct:netif
ifinoctets	net/lwip/include/lwip/netif.h	/^  u32_t ifinoctets;$/;"	m	struct:netif
ifinucastpkts	net/lwip/include/lwip/netif.h	/^  u32_t ifinucastpkts;$/;"	m	struct:netif
ifoutdiscards	net/lwip/include/lwip/netif.h	/^  u32_t ifoutdiscards;$/;"	m	struct:netif
ifoutnucastpkts	net/lwip/include/lwip/netif.h	/^  u32_t ifoutnucastpkts;$/;"	m	struct:netif
ifoutoctets	net/lwip/include/lwip/netif.h	/^  u32_t ifoutoctets;$/;"	m	struct:netif
ifoutucastpkts	net/lwip/include/lwip/netif.h	/^  u32_t ifoutucastpkts;$/;"	m	struct:netif
igmp_mac_filter	net/lwip/include/lwip/netif.h	/^  err_t (*igmp_mac_filter)( struct netif *netif, struct ip_addr *group, u8_t action);$/;"	m	struct:netif
input	net/lwip/include/lwip/netif.h	/^  err_t (* input)(struct pbuf *p, struct netif *inp);$/;"	m	struct:netif
ip_addr	net/lwip/include/lwip/netif.h	/^  struct ip_addr ip_addr;$/;"	m	struct:netif	typeref:struct:netif::ip_addr
link_callback	net/lwip/include/lwip/netif.h	/^  void (* link_callback)(struct netif *netif);$/;"	m	struct:netif
link_speed	net/lwip/include/lwip/netif.h	/^  u32_t link_speed;$/;"	m	struct:netif
link_type	net/lwip/include/lwip/netif.h	/^  u8_t link_type;$/;"	m	struct:netif
linkoutput	net/lwip/include/lwip/netif.h	/^  err_t (* linkoutput)(struct netif *netif, struct pbuf *p);$/;"	m	struct:netif
loop_cnt_current	net/lwip/include/lwip/netif.h	/^  u16_t loop_cnt_current;$/;"	m	struct:netif
loop_first	net/lwip/include/lwip/netif.h	/^  struct pbuf *loop_first;$/;"	m	struct:netif	typeref:struct:netif::pbuf
loop_last	net/lwip/include/lwip/netif.h	/^  struct pbuf *loop_last;$/;"	m	struct:netif	typeref:struct:netif::pbuf
mtu	net/lwip/include/lwip/netif.h	/^  u16_t mtu;$/;"	m	struct:netif
name	net/lwip/include/lwip/netif.h	/^  char name[2];$/;"	m	struct:netif
netif	net/lwip/include/lwip/netif.h	/^struct netif {$/;"	s
netif_init	net/lwip/include/lwip/netif.h	205;"	d
netmask	net/lwip/include/lwip/netif.h	/^  struct ip_addr netmask;$/;"	m	struct:netif	typeref:struct:netif::ip_addr
next	net/lwip/include/lwip/netif.h	/^  struct netif *next;$/;"	m	struct:netif	typeref:struct:netif::netif
num	net/lwip/include/lwip/netif.h	/^  u8_t num;$/;"	m	struct:netif
output	net/lwip/include/lwip/netif.h	/^  err_t (* output)(struct netif *netif, struct pbuf *p,$/;"	m	struct:netif
state	net/lwip/include/lwip/netif.h	/^  void *state;$/;"	m	struct:netif
status_callback	net/lwip/include/lwip/netif.h	/^  void (* status_callback)(struct netif *netif);$/;"	m	struct:netif
ts	net/lwip/include/lwip/netif.h	/^  u32_t ts;$/;"	m	struct:netif
__LWIP_NETIFAPI_H__	net/lwip/include/lwip/netifapi.h	29;"	d
add	net/lwip/include/lwip/netifapi.h	/^    } add;$/;"	m	union:netifapi_msg_msg::__anon22	typeref:struct:netifapi_msg_msg::__anon22::__anon23
common	net/lwip/include/lwip/netifapi.h	/^    } common;$/;"	m	union:netifapi_msg_msg::__anon22	typeref:struct:netifapi_msg_msg::__anon22::__anon24
err	net/lwip/include/lwip/netifapi.h	/^  err_t err;$/;"	m	struct:netifapi_msg_msg
errtfunc	net/lwip/include/lwip/netifapi.h	/^      err_t (* errtfunc)(struct netif *netif);$/;"	m	struct:netifapi_msg_msg::__anon22::__anon24
function	net/lwip/include/lwip/netifapi.h	/^  void (* function)(struct netifapi_msg_msg *msg);$/;"	m	struct:netifapi_msg
gw	net/lwip/include/lwip/netifapi.h	/^      struct ip_addr *gw;$/;"	m	struct:netifapi_msg_msg::__anon22::__anon23	typeref:struct:netifapi_msg_msg::__anon22::__anon23::ip_addr
init	net/lwip/include/lwip/netifapi.h	/^      err_t (* init) (struct netif *netif);$/;"	m	struct:netifapi_msg_msg::__anon22::__anon23
input	net/lwip/include/lwip/netifapi.h	/^      err_t (* input)(struct pbuf *p, struct netif *netif);$/;"	m	struct:netifapi_msg_msg::__anon22::__anon23
ipaddr	net/lwip/include/lwip/netifapi.h	/^      struct ip_addr *ipaddr;$/;"	m	struct:netifapi_msg_msg::__anon22::__anon23	typeref:struct:netifapi_msg_msg::__anon22::__anon23::ip_addr
msg	net/lwip/include/lwip/netifapi.h	/^  struct netifapi_msg_msg msg;$/;"	m	struct:netifapi_msg	typeref:struct:netifapi_msg::netifapi_msg_msg
msg	net/lwip/include/lwip/netifapi.h	/^  } msg;$/;"	m	struct:netifapi_msg_msg	typeref:union:netifapi_msg_msg::__anon22
netif	net/lwip/include/lwip/netifapi.h	/^  struct netif *netif;$/;"	m	struct:netifapi_msg_msg	typeref:struct:netifapi_msg_msg::netif
netifapi_autoip_start	net/lwip/include/lwip/netifapi.h	91;"	d
netifapi_autoip_stop	net/lwip/include/lwip/netifapi.h	92;"	d
netifapi_dhcp_start	net/lwip/include/lwip/netifapi.h	89;"	d
netifapi_dhcp_stop	net/lwip/include/lwip/netifapi.h	90;"	d
netifapi_msg	net/lwip/include/lwip/netifapi.h	/^struct netifapi_msg {$/;"	s
netifapi_msg_msg	net/lwip/include/lwip/netifapi.h	/^struct netifapi_msg_msg {$/;"	s
netifapi_netif_remove	net/lwip/include/lwip/netifapi.h	85;"	d
netifapi_netif_set_default	net/lwip/include/lwip/netifapi.h	88;"	d
netifapi_netif_set_down	net/lwip/include/lwip/netifapi.h	87;"	d
netifapi_netif_set_up	net/lwip/include/lwip/netifapi.h	86;"	d
netmask	net/lwip/include/lwip/netifapi.h	/^      struct ip_addr *netmask;$/;"	m	struct:netifapi_msg_msg::__anon22::__anon23	typeref:struct:netifapi_msg_msg::__anon22::__anon23::ip_addr
sem	net/lwip/include/lwip/netifapi.h	/^  sys_sem_t sem;$/;"	m	struct:netifapi_msg_msg
state	net/lwip/include/lwip/netifapi.h	/^      void *state;$/;"	m	struct:netifapi_msg_msg::__anon22::__anon23
voidfunc	net/lwip/include/lwip/netifapi.h	/^      void  (* voidfunc)(struct netif *netif);$/;"	m	struct:netifapi_msg_msg::__anon22::__anon24
API_LIB_DEBUG	net/lwip/include/lwip/opt.h	1497;"	d
API_MSG_DEBUG	net/lwip/include/lwip/opt.h	1504;"	d
ARP_QUEUEING	net/lwip/include/lwip/opt.h	336;"	d
ARP_TABLE_SIZE	net/lwip/include/lwip/opt.h	328;"	d
AUTOIP_DEBUG	net/lwip/include/lwip/opt.h	1680;"	d
CBCP_SUPPORT	net/lwip/include/lwip/opt.h	1302;"	d
CCP_SUPPORT	net/lwip/include/lwip/opt.h	1309;"	d
CHAP_DEFTIMEOUT	net/lwip/include/lwip/opt.h	1354;"	d
CHAP_DEFTRANSMITS	net/lwip/include/lwip/opt.h	1358;"	d
CHAP_SUPPORT	net/lwip/include/lwip/opt.h	1288;"	d
CHECKSUM_CHECK_IP	net/lwip/include/lwip/opt.h	1433;"	d
CHECKSUM_CHECK_TCP	net/lwip/include/lwip/opt.h	1447;"	d
CHECKSUM_CHECK_UDP	net/lwip/include/lwip/opt.h	1440;"	d
CHECKSUM_GEN_IP	net/lwip/include/lwip/opt.h	1412;"	d
CHECKSUM_GEN_TCP	net/lwip/include/lwip/opt.h	1426;"	d
CHECKSUM_GEN_UDP	net/lwip/include/lwip/opt.h	1419;"	d
DEFAULT_ACCEPTMBOX_SIZE	net/lwip/include/lwip/opt.h	1043;"	d
DEFAULT_RAW_RECVMBOX_SIZE	net/lwip/include/lwip/opt.h	1016;"	d
DEFAULT_TCP_RECVMBOX_SIZE	net/lwip/include/lwip/opt.h	1034;"	d
DEFAULT_THREAD_NAME	net/lwip/include/lwip/opt.h	989;"	d
DEFAULT_THREAD_PRIO	net/lwip/include/lwip/opt.h	1007;"	d
DEFAULT_THREAD_STACKSIZE	net/lwip/include/lwip/opt.h	998;"	d
DEFAULT_UDP_RECVMBOX_SIZE	net/lwip/include/lwip/opt.h	1025;"	d
DHCP_DEBUG	net/lwip/include/lwip/opt.h	1673;"	d
DHCP_DOES_ARP_CHECK	net/lwip/include/lwip/opt.h	490;"	d
DNS_DEBUG	net/lwip/include/lwip/opt.h	1701;"	d
DNS_DOES_NAME_CHECK	net/lwip/include/lwip/opt.h	600;"	d
DNS_MAX_NAME_LENGTH	net/lwip/include/lwip/opt.h	590;"	d
DNS_MAX_SERVERS	net/lwip/include/lwip/opt.h	595;"	d
DNS_MSG_SIZE	net/lwip/include/lwip/opt.h	612;"	d
DNS_TABLE_SIZE	net/lwip/include/lwip/opt.h	585;"	d
DNS_USES_STATIC_BUF	net/lwip/include/lwip/opt.h	607;"	d
ETHARP_DEBUG	net/lwip/include/lwip/opt.h	1476;"	d
ETHARP_STATS	net/lwip/include/lwip/opt.h	1157;"	d
ETHARP_TRUST_IP_MAC	net/lwip/include/lwip/opt.h	348;"	d
FSM_DEFMAXCONFREQS	net/lwip/include/lwip/opt.h	1338;"	d
FSM_DEFMAXNAKLOOPS	net/lwip/include/lwip/opt.h	1342;"	d
FSM_DEFMAXTERMREQS	net/lwip/include/lwip/opt.h	1334;"	d
FSM_DEFTIMEOUT	net/lwip/include/lwip/opt.h	1330;"	d
ICMP_DEBUG	net/lwip/include/lwip/opt.h	1518;"	d
ICMP_STATS	net/lwip/include/lwip/opt.h	1179;"	d
ICMP_STATS	net/lwip/include/lwip/opt.h	1231;"	d
ICMP_TTL	net/lwip/include/lwip/opt.h	452;"	d
IGMP_DEBUG	net/lwip/include/lwip/opt.h	1525;"	d
IGMP_STATS	net/lwip/include/lwip/opt.h	1186;"	d
IGMP_STATS	net/lwip/include/lwip/opt.h	1232;"	d
INET_DEBUG	net/lwip/include/lwip/opt.h	1532;"	d
IPFRAG_STATS	net/lwip/include/lwip/opt.h	1172;"	d
IPFRAG_STATS	net/lwip/include/lwip/opt.h	1230;"	d
IP_DEBUG	net/lwip/include/lwip/opt.h	1539;"	d
IP_DEFAULT_TTL	net/lwip/include/lwip/opt.h	432;"	d
IP_FORWARD	net/lwip/include/lwip/opt.h	362;"	d
IP_FRAG	net/lwip/include/lwip/opt.h	389;"	d
IP_FRAG_MAX_MTU	net/lwip/include/lwip/opt.h	425;"	d
IP_FRAG_USES_STATIC_BUF	net/lwip/include/lwip/opt.h	417;"	d
IP_OPTIONS_ALLOWED	net/lwip/include/lwip/opt.h	371;"	d
IP_REASSEMBLY	net/lwip/include/lwip/opt.h	380;"	d
IP_REASS_DEBUG	net/lwip/include/lwip/opt.h	1546;"	d
IP_REASS_MAXAGE	net/lwip/include/lwip/opt.h	398;"	d
IP_REASS_MAX_PBUFS	net/lwip/include/lwip/opt.h	408;"	d
IP_STATS	net/lwip/include/lwip/opt.h	1164;"	d
IP_STATS	net/lwip/include/lwip/opt.h	1229;"	d
LCP_ECHOINTERVAL	net/lwip/include/lwip/opt.h	1363;"	d
LCP_MAXECHOFAILS	net/lwip/include/lwip/opt.h	1368;"	d
LINK_STATS	net/lwip/include/lwip/opt.h	1150;"	d
LINK_STATS	net/lwip/include/lwip/opt.h	1228;"	d
LWIP_ALLOW_MEM_FREE_FROM_OTHER_CONTEXT	net/lwip/include/lwip/opt.h	177;"	d
LWIP_ARP	net/lwip/include/lwip/opt.h	321;"	d
LWIP_AUTOIP	net/lwip/include/lwip/opt.h	502;"	d
LWIP_CALLBACK_API	net/lwip/include/lwip/opt.h	762;"	d
LWIP_CALLBACK_API	net/lwip/include/lwip/opt.h	765;"	d
LWIP_COMPAT_SOCKETS	net/lwip/include/lwip/opt.h	1083;"	d
LWIP_DBG_MIN_LEVEL	net/lwip/include/lwip/opt.h	1461;"	d
LWIP_DBG_TYPES_ON	net/lwip/include/lwip/opt.h	1469;"	d
LWIP_DHCP	net/lwip/include/lwip/opt.h	483;"	d
LWIP_DHCP_AUTOIP_COOP	net/lwip/include/lwip/opt.h	510;"	d
LWIP_DNS	net/lwip/include/lwip/opt.h	580;"	d
LWIP_EVENT_API	net/lwip/include/lwip/opt.h	761;"	d
LWIP_EVENT_API	net/lwip/include/lwip/opt.h	764;"	d
LWIP_HAVE_LOOPIF	net/lwip/include/lwip/opt.h	881;"	d
LWIP_HAVE_SLIPIF	net/lwip/include/lwip/opt.h	893;"	d
LWIP_ICMP	net/lwip/include/lwip/opt.h	445;"	d
LWIP_IGMP	net/lwip/include/lwip/opt.h	567;"	d
LWIP_LOOPBACK_MAX_PBUFS	net/lwip/include/lwip/opt.h	852;"	d
LWIP_NETCONN	net/lwip/include/lwip/opt.h	1063;"	d
LWIP_NETIF_API	net/lwip/include/lwip/opt.h	809;"	d
LWIP_NETIF_HOSTNAME	net/lwip/include/lwip/opt.h	802;"	d
LWIP_NETIF_HWADDRHINT	net/lwip/include/lwip/opt.h	836;"	d
LWIP_NETIF_LINK_CALLBACK	net/lwip/include/lwip/opt.h	825;"	d
LWIP_NETIF_LOOPBACK	net/lwip/include/lwip/opt.h	844;"	d
LWIP_NETIF_LOOPBACK_MULTITHREADING	net/lwip/include/lwip/opt.h	869;"	d
LWIP_NETIF_STATUS_CALLBACK	net/lwip/include/lwip/opt.h	817;"	d
LWIP_POSIX_SOCKETS_IO_NAMES	net/lwip/include/lwip/opt.h	1092;"	d
LWIP_RAW	net/lwip/include/lwip/opt.h	464;"	d
LWIP_SNMP	net/lwip/include/lwip/opt.h	523;"	d
LWIP_SOCKET	net/lwip/include/lwip/opt.h	1075;"	d
LWIP_SO_RCVBUF	net/lwip/include/lwip/opt.h	1115;"	d
LWIP_SO_RCVTIMEO	net/lwip/include/lwip/opt.h	1108;"	d
LWIP_STATS	net/lwip/include/lwip/opt.h	1134;"	d
LWIP_STATS_DISPLAY	net/lwip/include/lwip/opt.h	1143;"	d
LWIP_STATS_DISPLAY	net/lwip/include/lwip/opt.h	1238;"	d
LWIP_TCP	net/lwip/include/lwip/opt.h	650;"	d
LWIP_TCPIP_CORE_LOCKING	net/lwip/include/lwip/opt.h	1056;"	d
LWIP_TCP_KEEPALIVE	net/lwip/include/lwip/opt.h	1101;"	d
LWIP_UDP	net/lwip/include/lwip/opt.h	624;"	d
LWIP_UDPLITE	net/lwip/include/lwip/opt.h	631;"	d
MAXNAMELEN	net/lwip/include/lwip/opt.h	1398;"	d
MAXSECRETLEN	net/lwip/include/lwip/opt.h	1399;"	d
MD5_SUPPORT	net/lwip/include/lwip/opt.h	1323;"	d
MEMCPY	net/lwip/include/lwip/opt.h	76;"	d
MEMP_DEBUG	net/lwip/include/lwip/opt.h	1567;"	d
MEMP_NUM_ARP_QUEUE	net/lwip/include/lwip/opt.h	250;"	d
MEMP_NUM_IGMP_GROUP	net/lwip/include/lwip/opt.h	260;"	d
MEMP_NUM_NETBUF	net/lwip/include/lwip/opt.h	276;"	d
MEMP_NUM_NETCONN	net/lwip/include/lwip/opt.h	284;"	d
MEMP_NUM_PBUF	net/lwip/include/lwip/opt.h	191;"	d
MEMP_NUM_RAW_PCB	net/lwip/include/lwip/opt.h	199;"	d
MEMP_NUM_REASSDATA	net/lwip/include/lwip/opt.h	240;"	d
MEMP_NUM_SYS_TIMEOUT	net/lwip/include/lwip/opt.h	268;"	d
MEMP_NUM_TCPIP_MSG_API	net/lwip/include/lwip/opt.h	293;"	d
MEMP_NUM_TCPIP_MSG_INPKT	net/lwip/include/lwip/opt.h	302;"	d
MEMP_NUM_TCP_PCB	net/lwip/include/lwip/opt.h	216;"	d
MEMP_NUM_TCP_PCB_LISTEN	net/lwip/include/lwip/opt.h	224;"	d
MEMP_NUM_TCP_SEG	net/lwip/include/lwip/opt.h	232;"	d
MEMP_NUM_UDP_PCB	net/lwip/include/lwip/opt.h	208;"	d
MEMP_OVERFLOW_CHECK	net/lwip/include/lwip/opt.h	128;"	d
MEMP_SANITY_CHECK	net/lwip/include/lwip/opt.h	136;"	d
MEMP_STATS	net/lwip/include/lwip/opt.h	1216;"	d
MEMP_STATS	net/lwip/include/lwip/opt.h	1236;"	d
MEMP_USE_CUSTOM_POOLS	net/lwip/include/lwip/opt.h	155;"	d
MEM_ALIGNMENT	net/lwip/include/lwip/opt.h	107;"	d
MEM_DEBUG	net/lwip/include/lwip/opt.h	1560;"	d
MEM_LIBC_MALLOC	net/lwip/include/lwip/opt.h	98;"	d
MEM_SIZE	net/lwip/include/lwip/opt.h	115;"	d
MEM_STATS	net/lwip/include/lwip/opt.h	1209;"	d
MEM_STATS	net/lwip/include/lwip/opt.h	1235;"	d
MEM_USE_POOLS	net/lwip/include/lwip/opt.h	145;"	d
MSCHAP_SUPPORT	net/lwip/include/lwip/opt.h	1295;"	d
NETIF_DEBUG	net/lwip/include/lwip/opt.h	1483;"	d
NO_SYS	net/lwip/include/lwip/opt.h	68;"	d
NUM_PPP	net/lwip/include/lwip/opt.h	1274;"	d
PAP_SUPPORT	net/lwip/include/lwip/opt.h	1281;"	d
PBUF_DEBUG	net/lwip/include/lwip/opt.h	1490;"	d
PBUF_LINK_HLEN	net/lwip/include/lwip/opt.h	780;"	d
PBUF_POOL_BUFSIZE	net/lwip/include/lwip/opt.h	789;"	d
PBUF_POOL_SIZE	net/lwip/include/lwip/opt.h	309;"	d
PPPOE_SUPPORT	net/lwip/include/lwip/opt.h	1258;"	d
PPPOS_SUPPORT	net/lwip/include/lwip/opt.h	1265;"	d
PPP_DEBUG	net/lwip/include/lwip/opt.h	1659;"	d
PPP_DEFMRU	net/lwip/include/lwip/opt.h	1393;"	d
PPP_MAXIDLEFLAG	net/lwip/include/lwip/opt.h	1373;"	d
PPP_MAXMRU	net/lwip/include/lwip/opt.h	1391;"	d
PPP_MAXMTU	net/lwip/include/lwip/opt.h	1387;"	d
PPP_MINMRU	net/lwip/include/lwip/opt.h	1395;"	d
PPP_MINMTU	net/lwip/include/lwip/opt.h	1389;"	d
PPP_MRU	net/lwip/include/lwip/opt.h	1390;"	d
PPP_MTU	net/lwip/include/lwip/opt.h	1384;"	d
PPP_SUPPORT	net/lwip/include/lwip/opt.h	1251;"	d
PPP_THREAD_NAME	net/lwip/include/lwip/opt.h	964;"	d
PPP_THREAD_PRIO	net/lwip/include/lwip/opt.h	982;"	d
PPP_THREAD_STACKSIZE	net/lwip/include/lwip/opt.h	973;"	d
RAW_DEBUG	net/lwip/include/lwip/opt.h	1553;"	d
RAW_TTL	net/lwip/include/lwip/opt.h	471;"	d
SLIPIF_THREAD_NAME	net/lwip/include/lwip/opt.h	939;"	d
SLIPIF_THREAD_PRIO	net/lwip/include/lwip/opt.h	957;"	d
SLIPIF_THREAD_STACKSIZE	net/lwip/include/lwip/opt.h	948;"	d
SLIP_DEBUG	net/lwip/include/lwip/opt.h	1666;"	d
SMEMCPY	net/lwip/include/lwip/opt.h	84;"	d
SNMP_CONCURRENT_REQUESTS	net/lwip/include/lwip/opt.h	531;"	d
SNMP_MIB_DEBUG	net/lwip/include/lwip/opt.h	1694;"	d
SNMP_MSG_DEBUG	net/lwip/include/lwip/opt.h	1687;"	d
SNMP_PRIVATE_MIB	net/lwip/include/lwip/opt.h	546;"	d
SNMP_SAFE_REQUESTS	net/lwip/include/lwip/opt.h	555;"	d
SNMP_TRAP_DESTINATIONS	net/lwip/include/lwip/opt.h	539;"	d
SOCKETS_DEBUG	net/lwip/include/lwip/opt.h	1511;"	d
SO_REUSE	net/lwip/include/lwip/opt.h	1122;"	d
SYS_DEBUG	net/lwip/include/lwip/opt.h	1574;"	d
SYS_LIGHTWEIGHT_PROT	net/lwip/include/lwip/opt.h	60;"	d
SYS_STATS	net/lwip/include/lwip/opt.h	1223;"	d
SYS_STATS	net/lwip/include/lwip/opt.h	1237;"	d
TCPIP_DEBUG	net/lwip/include/lwip/opt.h	1652;"	d
TCPIP_MBOX_SIZE	net/lwip/include/lwip/opt.h	932;"	d
TCPIP_THREAD_NAME	net/lwip/include/lwip/opt.h	905;"	d
TCPIP_THREAD_PRIO	net/lwip/include/lwip/opt.h	923;"	d
TCPIP_THREAD_STACKSIZE	net/lwip/include/lwip/opt.h	914;"	d
TCP_CALCULATE_EFF_SEND_MSS	net/lwip/include/lwip/opt.h	709;"	d
TCP_CWND_DEBUG	net/lwip/include/lwip/opt.h	1610;"	d
TCP_DEBUG	net/lwip/include/lwip/opt.h	1581;"	d
TCP_DEFAULT_LISTEN_BACKLOG	net/lwip/include/lwip/opt.h	750;"	d
TCP_FR_DEBUG	net/lwip/include/lwip/opt.h	1595;"	d
TCP_INPUT_DEBUG	net/lwip/include/lwip/opt.h	1588;"	d
TCP_LISTEN_BACKLOG	net/lwip/include/lwip/opt.h	741;"	d
TCP_MAXRTX	net/lwip/include/lwip/opt.h	671;"	d
TCP_MSS	net/lwip/include/lwip/opt.h	697;"	d
TCP_OUTPUT_DEBUG	net/lwip/include/lwip/opt.h	1624;"	d
TCP_QLEN_DEBUG	net/lwip/include/lwip/opt.h	1638;"	d
TCP_QUEUE_OOSEQ	net/lwip/include/lwip/opt.h	686;"	d
TCP_RST_DEBUG	net/lwip/include/lwip/opt.h	1631;"	d
TCP_RTO_DEBUG	net/lwip/include/lwip/opt.h	1603;"	d
TCP_SNDLOWAT	net/lwip/include/lwip/opt.h	734;"	d
TCP_SND_BUF	net/lwip/include/lwip/opt.h	717;"	d
TCP_SND_QUEUELEN	net/lwip/include/lwip/opt.h	725;"	d
TCP_STATS	net/lwip/include/lwip/opt.h	1202;"	d
TCP_STATS	net/lwip/include/lwip/opt.h	1234;"	d
TCP_SYNMAXRTX	net/lwip/include/lwip/opt.h	678;"	d
TCP_TTL	net/lwip/include/lwip/opt.h	657;"	d
TCP_WND	net/lwip/include/lwip/opt.h	664;"	d
TCP_WND_DEBUG	net/lwip/include/lwip/opt.h	1617;"	d
UDP_DEBUG	net/lwip/include/lwip/opt.h	1645;"	d
UDP_STATS	net/lwip/include/lwip/opt.h	1194;"	d
UDP_STATS	net/lwip/include/lwip/opt.h	1233;"	d
UDP_TTL	net/lwip/include/lwip/opt.h	638;"	d
UPAP_DEFREQTIME	net/lwip/include/lwip/opt.h	1350;"	d
UPAP_DEFTIMEOUT	net/lwip/include/lwip/opt.h	1346;"	d
VJ_SUPPORT	net/lwip/include/lwip/opt.h	1316;"	d
__LWIP_OPT_H__	net/lwip/include/lwip/opt.h	39;"	d
PBUF_FLAG_PUSH	net/lwip/include/lwip/pbuf.h	62;"	d
PBUF_IP	net/lwip/include/lwip/pbuf.h	/^  PBUF_IP,$/;"	e	enum:__anon13
PBUF_IP_HLEN	net/lwip/include/lwip/pbuf.h	44;"	d
PBUF_LINK	net/lwip/include/lwip/pbuf.h	/^  PBUF_LINK,$/;"	e	enum:__anon13
PBUF_POOL	net/lwip/include/lwip/pbuf.h	/^  PBUF_POOL \/* pbuf payload refers to RAM *\/$/;"	e	enum:__anon14
PBUF_RAM	net/lwip/include/lwip/pbuf.h	/^  PBUF_RAM, \/* pbuf data is stored in RAM *\/$/;"	e	enum:__anon14
PBUF_RAW	net/lwip/include/lwip/pbuf.h	/^  PBUF_RAW$/;"	e	enum:__anon13
PBUF_REF	net/lwip/include/lwip/pbuf.h	/^  PBUF_REF, \/* pbuf comes from the pbuf pool *\/$/;"	e	enum:__anon14
PBUF_ROM	net/lwip/include/lwip/pbuf.h	/^  PBUF_ROM, \/* pbuf data is stored in ROM *\/$/;"	e	enum:__anon14
PBUF_TRANSPORT	net/lwip/include/lwip/pbuf.h	/^  PBUF_TRANSPORT,$/;"	e	enum:__anon13
PBUF_TRANSPORT_HLEN	net/lwip/include/lwip/pbuf.h	43;"	d
__LWIP_PBUF_H__	net/lwip/include/lwip/pbuf.h	34;"	d
flags	net/lwip/include/lwip/pbuf.h	/^  u8_t flags;$/;"	m	struct:pbuf
len	net/lwip/include/lwip/pbuf.h	/^  u16_t len;  $/;"	m	struct:pbuf
next	net/lwip/include/lwip/pbuf.h	/^  struct pbuf *next;$/;"	m	struct:pbuf	typeref:struct:pbuf::pbuf
payload	net/lwip/include/lwip/pbuf.h	/^  void *payload;$/;"	m	struct:pbuf
pbuf	net/lwip/include/lwip/pbuf.h	/^struct pbuf {$/;"	s
pbuf_init	net/lwip/include/lwip/pbuf.h	99;"	d
pbuf_layer	net/lwip/include/lwip/pbuf.h	/^} pbuf_layer;$/;"	t	typeref:enum:__anon13
pbuf_type	net/lwip/include/lwip/pbuf.h	/^} pbuf_type;$/;"	t	typeref:enum:__anon14
ref	net/lwip/include/lwip/pbuf.h	/^  u16_t ref;$/;"	m	struct:pbuf
tot_len	net/lwip/include/lwip/pbuf.h	/^  u16_t tot_len;$/;"	m	struct:pbuf
type	net/lwip/include/lwip/pbuf.h	/^  u8_t \/*pbuf_type*\/ type;$/;"	m	struct:pbuf
IP_PCB	net/lwip/include/lwip/raw.h	/^  IP_PCB;$/;"	m	struct:raw_pcb
__LWIP_RAW_H__	net/lwip/include/lwip/raw.h	33;"	d
next	net/lwip/include/lwip/raw.h	/^  struct raw_pcb *next;$/;"	m	struct:raw_pcb	typeref:struct:raw_pcb::raw_pcb
protocol	net/lwip/include/lwip/raw.h	/^  u8_t protocol;$/;"	m	struct:raw_pcb
raw_init	net/lwip/include/lwip/raw.h	89;"	d
raw_pcb	net/lwip/include/lwip/raw.h	/^struct raw_pcb {$/;"	s
recv	net/lwip/include/lwip/raw.h	/^  u8_t (* recv)(void *arg, struct raw_pcb *pcb, struct pbuf *p,$/;"	m	struct:raw_pcb
recv_arg	net/lwip/include/lwip/raw.h	/^  void *recv_arg;$/;"	m	struct:raw_pcb
__SIO_H__	net/lwip/include/lwip/sio.h	36;"	d
sio_fd_t	net/lwip/include/lwip/sio.h	/^typedef void * sio_fd_t;$/;"	t
LWIP_SNMP_OBJ_ID_LEN	net/lwip/include/lwip/snmp.h	88;"	d
SNMP_SYSUPTIME_INTERVAL	net/lwip/include/lwip/snmp.h	85;"	d
__LWIP_SNMP_H__	net/lwip/include/lwip/snmp.h	34;"	d
id	net/lwip/include/lwip/snmp.h	/^  s32_t id[LWIP_SNMP_OBJ_ID_LEN];$/;"	m	struct:snmp_obj_id
len	net/lwip/include/lwip/snmp.h	/^  u8_t len;$/;"	m	struct:snmp_obj_id
snmp_add_ifinoctets	net/lwip/include/lwip/snmp.h	242;"	d
snmp_add_ifoutoctets	net/lwip/include/lwip/snmp.h	246;"	d
snmp_add_snmpintotalreqvars	net/lwip/include/lwip/snmp.h	338;"	d
snmp_add_snmpintotalsetvars	net/lwip/include/lwip/snmp.h	339;"	d
snmp_add_sysuptime	net/lwip/include/lwip/snmp.h	235;"	d
snmp_dec_iflist	net/lwip/include/lwip/snmp.h	251;"	d
snmp_delete_arpidx_tree	net/lwip/include/lwip/snmp.h	255;"	d
snmp_delete_ipaddridx_tree	net/lwip/include/lwip/snmp.h	276;"	d
snmp_delete_iprteidx_tree	net/lwip/include/lwip/snmp.h	278;"	d
snmp_delete_udpidx_tree	net/lwip/include/lwip/snmp.h	324;"	d
snmp_get_snmpenableauthentraps	net/lwip/include/lwip/snmp.h	356;"	d
snmp_get_snmpgrpid_ptr	net/lwip/include/lwip/snmp.h	354;"	d
snmp_get_sysobjid_ptr	net/lwip/include/lwip/snmp.h	233;"	d
snmp_get_sysuptime	net/lwip/include/lwip/snmp.h	236;"	d
snmp_ifType	net/lwip/include/lwip/snmp.h	/^enum snmp_ifType {$/;"	g
snmp_ifType_basicISDN	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_basicISDN,$/;"	e	enum:snmp_ifType
snmp_ifType_ddn_x25	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ddn_x25,$/;"	e	enum:snmp_ifType
snmp_ifType_ds1	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ds1,                    \/* T-1 *\/$/;"	e	enum:snmp_ifType
snmp_ifType_ds3	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ds3,                    \/* T-3 *\/$/;"	e	enum:snmp_ifType
snmp_ifType_e1	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_e1,                     \/* european equiv. of T-1 *\/$/;"	e	enum:snmp_ifType
snmp_ifType_eon	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_eon,                    \/* CLNP over IP [11] *\/$/;"	e	enum:snmp_ifType
snmp_ifType_ethernet_3Mbit	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ethernet_3Mbit,$/;"	e	enum:snmp_ifType
snmp_ifType_ethernet_csmacd	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ethernet_csmacd,$/;"	e	enum:snmp_ifType
snmp_ifType_fddi	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_fddi,$/;"	e	enum:snmp_ifType
snmp_ifType_frame_relay	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_frame_relay$/;"	e	enum:snmp_ifType
snmp_ifType_hdh1822	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_hdh1822,$/;"	e	enum:snmp_ifType
snmp_ifType_hyperchannel	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_hyperchannel,$/;"	e	enum:snmp_ifType
snmp_ifType_iso88023_csmacd	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_iso88023_csmacd,$/;"	e	enum:snmp_ifType
snmp_ifType_iso88024_tokenBus	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_iso88024_tokenBus,$/;"	e	enum:snmp_ifType
snmp_ifType_iso88025_tokenRing	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_iso88025_tokenRing,$/;"	e	enum:snmp_ifType
snmp_ifType_iso88026_man	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_iso88026_man,$/;"	e	enum:snmp_ifType
snmp_ifType_lapb	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_lapb,$/;"	e	enum:snmp_ifType
snmp_ifType_nsip	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_nsip,                   \/* XNS over IP *\/$/;"	e	enum:snmp_ifType
snmp_ifType_other	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_other=1,                \/* none of the following *\/$/;"	e	enum:snmp_ifType
snmp_ifType_ppp	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ppp,$/;"	e	enum:snmp_ifType
snmp_ifType_primaryISDN	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_primaryISDN,            \/* proprietary serial *\/$/;"	e	enum:snmp_ifType
snmp_ifType_propPointToPointSerial	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_propPointToPointSerial,$/;"	e	enum:snmp_ifType
snmp_ifType_proteon_10Mbit	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_proteon_10Mbit,$/;"	e	enum:snmp_ifType
snmp_ifType_proteon_80Mbit	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_proteon_80Mbit,$/;"	e	enum:snmp_ifType
snmp_ifType_regular1822	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_regular1822,$/;"	e	enum:snmp_ifType
snmp_ifType_rfc877_x25	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_rfc877_x25,$/;"	e	enum:snmp_ifType
snmp_ifType_sdlc	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_sdlc,$/;"	e	enum:snmp_ifType
snmp_ifType_sip	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_sip,                    \/* SMDS *\/$/;"	e	enum:snmp_ifType
snmp_ifType_slip	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_slip,                   \/* generic SLIP *\/$/;"	e	enum:snmp_ifType
snmp_ifType_softwareLoopback	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_softwareLoopback,$/;"	e	enum:snmp_ifType
snmp_ifType_starLan	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_starLan,$/;"	e	enum:snmp_ifType
snmp_ifType_ultra	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ultra,                  \/* ULTRA technologies *\/$/;"	e	enum:snmp_ifType
snmp_inc_icmpinaddrmaskreps	net/lwip/include/lwip/snmp.h	293;"	d
snmp_inc_icmpinaddrmasks	net/lwip/include/lwip/snmp.h	292;"	d
snmp_inc_icmpindestunreachs	net/lwip/include/lwip/snmp.h	283;"	d
snmp_inc_icmpinechoreps	net/lwip/include/lwip/snmp.h	289;"	d
snmp_inc_icmpinechos	net/lwip/include/lwip/snmp.h	288;"	d
snmp_inc_icmpinerrors	net/lwip/include/lwip/snmp.h	282;"	d
snmp_inc_icmpinmsgs	net/lwip/include/lwip/snmp.h	281;"	d
snmp_inc_icmpinparmprobs	net/lwip/include/lwip/snmp.h	285;"	d
snmp_inc_icmpinredirects	net/lwip/include/lwip/snmp.h	287;"	d
snmp_inc_icmpinsrcquenchs	net/lwip/include/lwip/snmp.h	286;"	d
snmp_inc_icmpintimeexcds	net/lwip/include/lwip/snmp.h	284;"	d
snmp_inc_icmpintimestampreps	net/lwip/include/lwip/snmp.h	291;"	d
snmp_inc_icmpintimestamps	net/lwip/include/lwip/snmp.h	290;"	d
snmp_inc_icmpoutaddrmaskreps	net/lwip/include/lwip/snmp.h	306;"	d
snmp_inc_icmpoutaddrmasks	net/lwip/include/lwip/snmp.h	305;"	d
snmp_inc_icmpoutdestunreachs	net/lwip/include/lwip/snmp.h	296;"	d
snmp_inc_icmpoutechoreps	net/lwip/include/lwip/snmp.h	302;"	d
snmp_inc_icmpoutechos	net/lwip/include/lwip/snmp.h	301;"	d
snmp_inc_icmpouterrors	net/lwip/include/lwip/snmp.h	295;"	d
snmp_inc_icmpoutmsgs	net/lwip/include/lwip/snmp.h	294;"	d
snmp_inc_icmpoutparmprobs	net/lwip/include/lwip/snmp.h	298;"	d
snmp_inc_icmpoutredirects	net/lwip/include/lwip/snmp.h	300;"	d
snmp_inc_icmpoutsrcquenchs	net/lwip/include/lwip/snmp.h	299;"	d
snmp_inc_icmpouttimeexcds	net/lwip/include/lwip/snmp.h	297;"	d
snmp_inc_icmpouttimestampreps	net/lwip/include/lwip/snmp.h	304;"	d
snmp_inc_icmpouttimestamps	net/lwip/include/lwip/snmp.h	303;"	d
snmp_inc_ifindiscards	net/lwip/include/lwip/snmp.h	245;"	d
snmp_inc_ifinnucastpkts	net/lwip/include/lwip/snmp.h	244;"	d
snmp_inc_ifinucastpkts	net/lwip/include/lwip/snmp.h	243;"	d
snmp_inc_iflist	net/lwip/include/lwip/snmp.h	250;"	d
snmp_inc_ifoutdiscards	net/lwip/include/lwip/snmp.h	249;"	d
snmp_inc_ifoutnucastpkts	net/lwip/include/lwip/snmp.h	248;"	d
snmp_inc_ifoutucastpkts	net/lwip/include/lwip/snmp.h	247;"	d
snmp_inc_ipforwdatagrams	net/lwip/include/lwip/snmp.h	261;"	d
snmp_inc_ipfragcreates	net/lwip/include/lwip/snmp.h	273;"	d
snmp_inc_ipfragfails	net/lwip/include/lwip/snmp.h	272;"	d
snmp_inc_ipfragoks	net/lwip/include/lwip/snmp.h	271;"	d
snmp_inc_ipinaddrerrors	net/lwip/include/lwip/snmp.h	260;"	d
snmp_inc_ipindelivers	net/lwip/include/lwip/snmp.h	264;"	d
snmp_inc_ipindiscards	net/lwip/include/lwip/snmp.h	263;"	d
snmp_inc_ipinhdrerrors	net/lwip/include/lwip/snmp.h	259;"	d
snmp_inc_ipinreceives	net/lwip/include/lwip/snmp.h	258;"	d
snmp_inc_ipinunknownprotos	net/lwip/include/lwip/snmp.h	262;"	d
snmp_inc_ipoutdiscards	net/lwip/include/lwip/snmp.h	266;"	d
snmp_inc_ipoutnoroutes	net/lwip/include/lwip/snmp.h	267;"	d
snmp_inc_ipoutrequests	net/lwip/include/lwip/snmp.h	265;"	d
snmp_inc_ipreasmfails	net/lwip/include/lwip/snmp.h	270;"	d
snmp_inc_ipreasmoks	net/lwip/include/lwip/snmp.h	269;"	d
snmp_inc_ipreasmreqds	net/lwip/include/lwip/snmp.h	268;"	d
snmp_inc_iproutingdiscards	net/lwip/include/lwip/snmp.h	274;"	d
snmp_inc_snmpinasnparseerrs	net/lwip/include/lwip/snmp.h	332;"	d
snmp_inc_snmpinbadcommunitynames	net/lwip/include/lwip/snmp.h	330;"	d
snmp_inc_snmpinbadcommunityuses	net/lwip/include/lwip/snmp.h	331;"	d
snmp_inc_snmpinbadvalues	net/lwip/include/lwip/snmp.h	335;"	d
snmp_inc_snmpinbadversions	net/lwip/include/lwip/snmp.h	329;"	d
snmp_inc_snmpingenerrs	net/lwip/include/lwip/snmp.h	337;"	d
snmp_inc_snmpingetnexts	net/lwip/include/lwip/snmp.h	341;"	d
snmp_inc_snmpingetrequests	net/lwip/include/lwip/snmp.h	340;"	d
snmp_inc_snmpingetresponses	net/lwip/include/lwip/snmp.h	343;"	d
snmp_inc_snmpinnosuchnames	net/lwip/include/lwip/snmp.h	334;"	d
snmp_inc_snmpinpkts	net/lwip/include/lwip/snmp.h	327;"	d
snmp_inc_snmpinreadonlys	net/lwip/include/lwip/snmp.h	336;"	d
snmp_inc_snmpinsetrequests	net/lwip/include/lwip/snmp.h	342;"	d
snmp_inc_snmpintoobigs	net/lwip/include/lwip/snmp.h	333;"	d
snmp_inc_snmpintraps	net/lwip/include/lwip/snmp.h	344;"	d
snmp_inc_snmpoutbadvalues	net/lwip/include/lwip/snmp.h	347;"	d
snmp_inc_snmpoutgenerrs	net/lwip/include/lwip/snmp.h	348;"	d
snmp_inc_snmpoutgetnexts	net/lwip/include/lwip/snmp.h	350;"	d
snmp_inc_snmpoutgetrequests	net/lwip/include/lwip/snmp.h	349;"	d
snmp_inc_snmpoutgetresponses	net/lwip/include/lwip/snmp.h	352;"	d
snmp_inc_snmpoutnosuchnames	net/lwip/include/lwip/snmp.h	346;"	d
snmp_inc_snmpoutpkts	net/lwip/include/lwip/snmp.h	328;"	d
snmp_inc_snmpoutsetrequests	net/lwip/include/lwip/snmp.h	351;"	d
snmp_inc_snmpouttoobigs	net/lwip/include/lwip/snmp.h	345;"	d
snmp_inc_snmpouttraps	net/lwip/include/lwip/snmp.h	353;"	d
snmp_inc_sysuptime	net/lwip/include/lwip/snmp.h	234;"	d
snmp_inc_tcpactiveopens	net/lwip/include/lwip/snmp.h	308;"	d
snmp_inc_tcpattemptfails	net/lwip/include/lwip/snmp.h	310;"	d
snmp_inc_tcpestabresets	net/lwip/include/lwip/snmp.h	311;"	d
snmp_inc_tcpinerrs	net/lwip/include/lwip/snmp.h	315;"	d
snmp_inc_tcpinsegs	net/lwip/include/lwip/snmp.h	312;"	d
snmp_inc_tcpoutrsts	net/lwip/include/lwip/snmp.h	316;"	d
snmp_inc_tcpoutsegs	net/lwip/include/lwip/snmp.h	313;"	d
snmp_inc_tcppassiveopens	net/lwip/include/lwip/snmp.h	309;"	d
snmp_inc_tcpretranssegs	net/lwip/include/lwip/snmp.h	314;"	d
snmp_inc_udpindatagrams	net/lwip/include/lwip/snmp.h	319;"	d
snmp_inc_udpinerrors	net/lwip/include/lwip/snmp.h	321;"	d
snmp_inc_udpnoports	net/lwip/include/lwip/snmp.h	320;"	d
snmp_inc_udpoutdatagrams	net/lwip/include/lwip/snmp.h	322;"	d
snmp_insert_arpidx_tree	net/lwip/include/lwip/snmp.h	254;"	d
snmp_insert_ipaddridx_tree	net/lwip/include/lwip/snmp.h	275;"	d
snmp_insert_iprteidx_tree	net/lwip/include/lwip/snmp.h	277;"	d
snmp_insert_udpidx_tree	net/lwip/include/lwip/snmp.h	323;"	d
snmp_obj_id	net/lwip/include/lwip/snmp.h	/^struct snmp_obj_id$/;"	s
snmp_set_snmpenableauthentraps	net/lwip/include/lwip/snmp.h	355;"	d
snmp_set_syscontact	net/lwip/include/lwip/snmp.h	237;"	d
snmp_set_sysdesr	net/lwip/include/lwip/snmp.h	231;"	d
snmp_set_syslocation	net/lwip/include/lwip/snmp.h	239;"	d
snmp_set_sysname	net/lwip/include/lwip/snmp.h	238;"	d
snmp_set_sysobjid	net/lwip/include/lwip/snmp.h	232;"	d
SNMP_ASN1_APPLIC	net/lwip/include/lwip/snmp_asn1.h	48;"	d
SNMP_ASN1_CONSTR	net/lwip/include/lwip/snmp_asn1.h	51;"	d
SNMP_ASN1_CONTXT	net/lwip/include/lwip/snmp_asn1.h	49;"	d
SNMP_ASN1_COUNTER	net/lwip/include/lwip/snmp_asn1.h	63;"	d
SNMP_ASN1_GAUGE	net/lwip/include/lwip/snmp_asn1.h	64;"	d
SNMP_ASN1_INTEG	net/lwip/include/lwip/snmp_asn1.h	55;"	d
SNMP_ASN1_IPADDR	net/lwip/include/lwip/snmp_asn1.h	62;"	d
SNMP_ASN1_NUL	net/lwip/include/lwip/snmp_asn1.h	57;"	d
SNMP_ASN1_OBJ_ID	net/lwip/include/lwip/snmp_asn1.h	58;"	d
SNMP_ASN1_OC_STR	net/lwip/include/lwip/snmp_asn1.h	56;"	d
SNMP_ASN1_OPAQUE	net/lwip/include/lwip/snmp_asn1.h	66;"	d
SNMP_ASN1_PDU_GET_NEXT_REQ	net/lwip/include/lwip/snmp_asn1.h	70;"	d
SNMP_ASN1_PDU_GET_REQ	net/lwip/include/lwip/snmp_asn1.h	69;"	d
SNMP_ASN1_PDU_GET_RESP	net/lwip/include/lwip/snmp_asn1.h	71;"	d
SNMP_ASN1_PDU_SET_REQ	net/lwip/include/lwip/snmp_asn1.h	72;"	d
SNMP_ASN1_PDU_TRAP	net/lwip/include/lwip/snmp_asn1.h	73;"	d
SNMP_ASN1_PRIMIT	net/lwip/include/lwip/snmp_asn1.h	52;"	d
SNMP_ASN1_SEQ	net/lwip/include/lwip/snmp_asn1.h	59;"	d
SNMP_ASN1_TIMETICKS	net/lwip/include/lwip/snmp_asn1.h	65;"	d
SNMP_ASN1_UNIV	net/lwip/include/lwip/snmp_asn1.h	47;"	d
__LWIP_SNMP_ASN1_H__	net/lwip/include/lwip/snmp_asn1.h	36;"	d
SNMP_COMMUNITY_STR_LEN	net/lwip/include/lwip/snmp_msg.h	214;"	d
SNMP_ES_BADVALUE	net/lwip/include/lwip/snmp_msg.h	64;"	d
SNMP_ES_GENERROR	net/lwip/include/lwip/snmp_msg.h	66;"	d
SNMP_ES_NOERROR	net/lwip/include/lwip/snmp_msg.h	61;"	d
SNMP_ES_NOSUCHNAME	net/lwip/include/lwip/snmp_msg.h	63;"	d
SNMP_ES_READONLY	net/lwip/include/lwip/snmp_msg.h	65;"	d
SNMP_ES_TOOBIG	net/lwip/include/lwip/snmp_msg.h	62;"	d
SNMP_GENTRAP_AUTHFAIL	net/lwip/include/lwip/snmp_msg.h	70;"	d
SNMP_GENTRAP_COLDSTART	net/lwip/include/lwip/snmp_msg.h	68;"	d
SNMP_GENTRAP_ENTERPRISESPC	net/lwip/include/lwip/snmp_msg.h	71;"	d
SNMP_GENTRAP_WARMSTART	net/lwip/include/lwip/snmp_msg.h	69;"	d
SNMP_IN_PORT	net/lwip/include/lwip/snmp_msg.h	53;"	d
SNMP_MSG_EMPTY	net/lwip/include/lwip/snmp_msg.h	195;"	d
SNMP_MSG_EXTERNAL_GET_OBJDEF	net/lwip/include/lwip/snmp_msg.h	208;"	d
SNMP_MSG_EXTERNAL_GET_OBJDEF_S	net/lwip/include/lwip/snmp_msg.h	211;"	d
SNMP_MSG_EXTERNAL_GET_VALUE	net/lwip/include/lwip/snmp_msg.h	209;"	d
SNMP_MSG_EXTERNAL_SET_TEST	net/lwip/include/lwip/snmp_msg.h	210;"	d
SNMP_MSG_EXTERNAL_SET_VALUE	net/lwip/include/lwip/snmp_msg.h	212;"	d
SNMP_MSG_INTERNAL_GET_OBJDEF	net/lwip/include/lwip/snmp_msg.h	200;"	d
SNMP_MSG_INTERNAL_GET_OBJDEF_S	net/lwip/include/lwip/snmp_msg.h	203;"	d
SNMP_MSG_INTERNAL_GET_VALUE	net/lwip/include/lwip/snmp_msg.h	201;"	d
SNMP_MSG_INTERNAL_SET_TEST	net/lwip/include/lwip/snmp_msg.h	202;"	d
SNMP_MSG_INTERNAL_SET_VALUE	net/lwip/include/lwip/snmp_msg.h	204;"	d
SNMP_MSG_SEARCH_OBJ	net/lwip/include/lwip/snmp_msg.h	197;"	d
SNMP_TRAP_PORT	net/lwip/include/lwip/snmp_msg.h	58;"	d
__LWIP_SNMP_MSG_H__	net/lwip/include/lwip/snmp_msg.h	36;"	d
aaddrlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t aaddrlen;$/;"	m	struct:snmp_trap_header_lengths
aaddrlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t aaddrlenlen;$/;"	m	struct:snmp_trap_header_lengths
com_strlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t com_strlen;$/;"	m	struct:snmp_msg_pstat
comlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t comlen;$/;"	m	struct:snmp_resp_header_lengths
comlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t comlen;$/;"	m	struct:snmp_trap_header_lengths
comlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t comlenlen;$/;"	m	struct:snmp_resp_header_lengths
comlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t comlenlen;$/;"	m	struct:snmp_trap_header_lengths
community	net/lwip/include/lwip/snmp_msg.h	/^  u8_t community[SNMP_COMMUNITY_STR_LEN + 1];$/;"	m	struct:snmp_msg_pstat
count	net/lwip/include/lwip/snmp_msg.h	/^  u8_t count;$/;"	m	struct:snmp_varbind_root
dip	net/lwip/include/lwip/snmp_msg.h	/^  struct ip_addr dip;$/;"	m	struct:snmp_msg_trap	typeref:struct:snmp_msg_trap::ip_addr
eidlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t eidlen;$/;"	m	struct:snmp_trap_header_lengths
eidlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t eidlenlen;$/;"	m	struct:snmp_trap_header_lengths
enterprise	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_obj_id *enterprise;$/;"	m	struct:snmp_msg_trap	typeref:struct:snmp_msg_trap::snmp_obj_id
erridxlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t erridxlen;$/;"	m	struct:snmp_resp_header_lengths
erridxlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t erridxlenlen;$/;"	m	struct:snmp_resp_header_lengths
error_index	net/lwip/include/lwip/snmp_msg.h	/^  s32_t error_index;$/;"	m	struct:snmp_msg_pstat
error_status	net/lwip/include/lwip/snmp_msg.h	/^  s32_t error_status;$/;"	m	struct:snmp_msg_pstat
errstatlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t errstatlen;$/;"	m	struct:snmp_resp_header_lengths
errstatlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t errstatlenlen;$/;"	m	struct:snmp_resp_header_lengths
ext_mib_node	net/lwip/include/lwip/snmp_msg.h	/^  struct mib_external_node *ext_mib_node;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::mib_external_node
ext_name_ptr	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_name_ptr ext_name_ptr;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_name_ptr
ext_object_def	net/lwip/include/lwip/snmp_msg.h	/^  struct obj_def ext_object_def;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::obj_def
ext_oid	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_obj_id ext_oid;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_obj_id
gen_trap	net/lwip/include/lwip/snmp_msg.h	/^  u32_t gen_trap;$/;"	m	struct:snmp_msg_trap
gtrplen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t gtrplen;$/;"	m	struct:snmp_trap_header_lengths
gtrplenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t gtrplenlen;$/;"	m	struct:snmp_trap_header_lengths
head	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind *head;$/;"	m	struct:snmp_varbind_root	typeref:struct:snmp_varbind_root::snmp_varbind
ident	net/lwip/include/lwip/snmp_msg.h	/^  s32_t *ident;$/;"	m	struct:snmp_varbind
ident_len	net/lwip/include/lwip/snmp_msg.h	/^  u8_t ident_len;$/;"	m	struct:snmp_varbind
invb	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind_root invb;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_varbind_root
next	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind *next;$/;"	m	struct:snmp_varbind	typeref:struct:snmp_varbind::snmp_varbind
olen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t olen;$/;"	m	struct:snmp_varbind
olenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t olenlen;$/;"	m	struct:snmp_varbind
outvb	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind_root outvb;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_varbind_root
outvb	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind_root outvb;$/;"	m	struct:snmp_msg_trap	typeref:struct:snmp_msg_trap::snmp_varbind_root
pcb	net/lwip/include/lwip/snmp_msg.h	/^  struct udp_pcb *pcb;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::udp_pcb
pcb	net/lwip/include/lwip/snmp_msg.h	/^  struct udp_pcb *pcb;$/;"	m	struct:snmp_msg_trap	typeref:struct:snmp_msg_trap::udp_pcb
pdulen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t pdulen;$/;"	m	struct:snmp_resp_header_lengths
pdulen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t pdulen;$/;"	m	struct:snmp_trap_header_lengths
pdulenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t pdulenlen;$/;"	m	struct:snmp_resp_header_lengths
pdulenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t pdulenlen;$/;"	m	struct:snmp_trap_header_lengths
prev	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind *prev;$/;"	m	struct:snmp_varbind	typeref:struct:snmp_varbind::snmp_varbind
rhl	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_resp_header_lengths rhl;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_resp_header_lengths
rid	net/lwip/include/lwip/snmp_msg.h	/^  s32_t rid;$/;"	m	struct:snmp_msg_pstat
ridlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t ridlen;$/;"	m	struct:snmp_resp_header_lengths
ridlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t ridlenlen;$/;"	m	struct:snmp_resp_header_lengths
rt	net/lwip/include/lwip/snmp_msg.h	/^  u8_t rt;$/;"	m	struct:snmp_msg_pstat
seqlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t seqlen;$/;"	m	struct:snmp_resp_header_lengths
seqlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t seqlen;$/;"	m	struct:snmp_trap_header_lengths
seqlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t seqlen;$/;"	m	struct:snmp_varbind
seqlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t seqlen;$/;"	m	struct:snmp_varbind_root
seqlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t seqlenlen;$/;"	m	struct:snmp_resp_header_lengths
seqlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t seqlenlen;$/;"	m	struct:snmp_trap_header_lengths
seqlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t seqlenlen;$/;"	m	struct:snmp_varbind
seqlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t seqlenlen;$/;"	m	struct:snmp_varbind_root
sip	net/lwip/include/lwip/snmp_msg.h	/^  struct ip_addr sip;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::ip_addr
sip_raw	net/lwip/include/lwip/snmp_msg.h	/^  u8_t sip_raw[4];$/;"	m	struct:snmp_msg_trap
snmp_msg_pstat	net/lwip/include/lwip/snmp_msg.h	/^struct snmp_msg_pstat$/;"	s
snmp_msg_trap	net/lwip/include/lwip/snmp_msg.h	/^struct snmp_msg_trap$/;"	s
snmp_resp_header_lengths	net/lwip/include/lwip/snmp_msg.h	/^struct snmp_resp_header_lengths$/;"	s
snmp_trap_header_lengths	net/lwip/include/lwip/snmp_msg.h	/^struct snmp_trap_header_lengths$/;"	s
snmp_varbind	net/lwip/include/lwip/snmp_msg.h	/^struct snmp_varbind$/;"	s
snmp_varbind_root	net/lwip/include/lwip/snmp_msg.h	/^struct snmp_varbind_root$/;"	s
sp	net/lwip/include/lwip/snmp_msg.h	/^  u16_t sp;$/;"	m	struct:snmp_msg_pstat
spc_trap	net/lwip/include/lwip/snmp_msg.h	/^  u32_t spc_trap;$/;"	m	struct:snmp_msg_trap
state	net/lwip/include/lwip/snmp_msg.h	/^  u8_t state;$/;"	m	struct:snmp_msg_pstat
strplen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t strplen;$/;"	m	struct:snmp_trap_header_lengths
strplenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t strplenlen;$/;"	m	struct:snmp_trap_header_lengths
tail	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind *tail;$/;"	m	struct:snmp_varbind_root	typeref:struct:snmp_varbind_root::snmp_varbind
thl	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_trap_header_lengths thl;$/;"	m	struct:snmp_msg_trap	typeref:struct:snmp_msg_trap::snmp_trap_header_lengths
ts	net/lwip/include/lwip/snmp_msg.h	/^  u32_t ts;$/;"	m	struct:snmp_msg_trap
tslen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t tslen;$/;"	m	struct:snmp_trap_header_lengths
tslenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t tslenlen;$/;"	m	struct:snmp_trap_header_lengths
value	net/lwip/include/lwip/snmp_msg.h	/^  void *value;$/;"	m	struct:snmp_varbind
value_len	net/lwip/include/lwip/snmp_msg.h	/^  u8_t value_len;$/;"	m	struct:snmp_varbind
value_type	net/lwip/include/lwip/snmp_msg.h	/^  u8_t value_type;$/;"	m	struct:snmp_varbind
vb_idx	net/lwip/include/lwip/snmp_msg.h	/^  u8_t vb_idx;$/;"	m	struct:snmp_msg_pstat
vb_ptr	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind *vb_ptr;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_varbind
verlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t verlen;$/;"	m	struct:snmp_resp_header_lengths
verlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t verlen;$/;"	m	struct:snmp_trap_header_lengths
verlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t verlenlen;$/;"	m	struct:snmp_resp_header_lengths
verlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t verlenlen;$/;"	m	struct:snmp_trap_header_lengths
vlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t vlen;$/;"	m	struct:snmp_varbind
vlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t vlenlen;$/;"	m	struct:snmp_varbind
MIB_NODE_AR	net/lwip/include/lwip/snmp_structs.h	91;"	d
MIB_NODE_EX	net/lwip/include/lwip/snmp_structs.h	97;"	d
MIB_NODE_LR	net/lwip/include/lwip/snmp_structs.h	95;"	d
MIB_NODE_RA	net/lwip/include/lwip/snmp_structs.h	93;"	d
MIB_NODE_SC	net/lwip/include/lwip/snmp_structs.h	89;"	d
MIB_OBJECT_NONE	net/lwip/include/lwip/snmp_structs.h	55;"	d
MIB_OBJECT_NOT_ACCESSIBLE	net/lwip/include/lwip/snmp_structs.h	63;"	d
MIB_OBJECT_READ_ONLY	net/lwip/include/lwip/snmp_structs.h	60;"	d
MIB_OBJECT_READ_WRITE	net/lwip/include/lwip/snmp_structs.h	61;"	d
MIB_OBJECT_SCALAR	net/lwip/include/lwip/snmp_structs.h	56;"	d
MIB_OBJECT_TAB	net/lwip/include/lwip/snmp_structs.h	57;"	d
MIB_OBJECT_WRITE_ONLY	net/lwip/include/lwip/snmp_structs.h	62;"	d
__LWIP_SNMP_STRUCTS_H__	net/lwip/include/lwip/snmp_structs.h	38;"	d
access	net/lwip/include/lwip/snmp_structs.h	/^  u8_t access;$/;"	m	struct:obj_def
addr_inf	net/lwip/include/lwip/snmp_structs.h	/^  void* addr_inf;$/;"	m	struct:mib_external_node
asn_type	net/lwip/include/lwip/snmp_structs.h	/^  u8_t asn_type;$/;"	m	struct:obj_def
count	net/lwip/include/lwip/snmp_structs.h	/^  u16_t count;$/;"	m	struct:mib_list_rootnode
get_object_def	net/lwip/include/lwip/snmp_structs.h	/^  void (* const get_object_def)(u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_array_node
get_object_def	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def)(u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_external_node
get_object_def	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def)(u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_list_rootnode
get_object_def	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def)(u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_node
get_object_def	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def)(u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_ram_array_node
get_object_def_a	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def_a)(u8_t rid, u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_external_node
get_object_def_pc	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def_pc)(u8_t rid, u8_t ident_len, s32_t *ident);$/;"	m	struct:mib_external_node
get_object_def_q	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def_q)(void* addr_inf, u8_t rid, u8_t ident_len, s32_t *ident);$/;"	m	struct:mib_external_node
get_objid	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_objid)(void* addr_inf, u8_t level, u16_t idx, s32_t *sub_id);$/;"	m	struct:mib_external_node
get_value	net/lwip/include/lwip/snmp_structs.h	/^  void (* const get_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_array_node
get_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node
get_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_list_rootnode
get_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_node
get_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_ram_array_node
get_value_a	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value_a)(u8_t rid, struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node
get_value_pc	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value_pc)(u8_t rid, struct obj_def *od);$/;"	m	struct:mib_external_node
get_value_q	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value_q)(u8_t rid, struct obj_def *od);$/;"	m	struct:mib_external_node
head	net/lwip/include/lwip/snmp_structs.h	/^  struct mib_list_node *head;$/;"	m	struct:mib_list_rootnode	typeref:struct:mib_list_rootnode::mib_list_node
id_inst_len	net/lwip/include/lwip/snmp_structs.h	/^  u8_t  id_inst_len;$/;"	m	struct:obj_def
id_inst_ptr	net/lwip/include/lwip/snmp_structs.h	/^  s32_t *id_inst_ptr;$/;"	m	struct:obj_def
ident	net/lwip/include/lwip/snmp_structs.h	/^  s32_t *ident;$/;"	m	struct:snmp_name_ptr
ident_cmp	net/lwip/include/lwip/snmp_structs.h	/^  s32_t (*ident_cmp)(void* addr_inf, u8_t level, u16_t idx, s32_t sub_id);$/;"	m	struct:mib_external_node
ident_len	net/lwip/include/lwip/snmp_structs.h	/^  u8_t ident_len;$/;"	m	struct:snmp_name_ptr
instance	net/lwip/include/lwip/snmp_structs.h	/^  u8_t instance;$/;"	m	struct:obj_def
level_length	net/lwip/include/lwip/snmp_structs.h	/^  u16_t (*level_length)(void* addr_inf, u8_t level);$/;"	m	struct:mib_external_node
maxlength	net/lwip/include/lwip/snmp_structs.h	/^  const u16_t maxlength;$/;"	m	struct:mib_array_node
maxlength	net/lwip/include/lwip/snmp_structs.h	/^  const u16_t maxlength;$/;"	m	struct:mib_node
maxlength	net/lwip/include/lwip/snmp_structs.h	/^  u16_t maxlength;$/;"	m	struct:mib_external_node
maxlength	net/lwip/include/lwip/snmp_structs.h	/^  u16_t maxlength;$/;"	m	struct:mib_list_rootnode
maxlength	net/lwip/include/lwip/snmp_structs.h	/^  u16_t maxlength;$/;"	m	struct:mib_ram_array_node
mib_array_node	net/lwip/include/lwip/snmp_structs.h	/^struct mib_array_node$/;"	s
mib_external_node	net/lwip/include/lwip/snmp_structs.h	/^struct mib_external_node$/;"	s
mib_list_node	net/lwip/include/lwip/snmp_structs.h	/^struct mib_list_node$/;"	s
mib_list_rootnode	net/lwip/include/lwip/snmp_structs.h	/^struct mib_list_rootnode$/;"	s
mib_node	net/lwip/include/lwip/snmp_structs.h	/^struct mib_node$/;"	s
mib_ram_array_node	net/lwip/include/lwip/snmp_structs.h	/^struct mib_ram_array_node$/;"	s
mib_scalar_node	net/lwip/include/lwip/snmp_structs.h	/^typedef struct mib_node mib_scalar_node;$/;"	t	typeref:struct:mib_node
next	net/lwip/include/lwip/snmp_structs.h	/^  struct mib_list_node *next;$/;"	m	struct:mib_list_node	typeref:struct:mib_list_node::mib_list_node
node_type	net/lwip/include/lwip/snmp_structs.h	/^  const u8_t node_type;$/;"	m	struct:mib_array_node
node_type	net/lwip/include/lwip/snmp_structs.h	/^  const u8_t node_type;$/;"	m	struct:mib_node
node_type	net/lwip/include/lwip/snmp_structs.h	/^  u8_t node_type;$/;"	m	struct:mib_external_node
node_type	net/lwip/include/lwip/snmp_structs.h	/^  u8_t node_type;$/;"	m	struct:mib_list_rootnode
node_type	net/lwip/include/lwip/snmp_structs.h	/^  u8_t node_type;$/;"	m	struct:mib_ram_array_node
nptr	net/lwip/include/lwip/snmp_structs.h	/^  struct mib_node **nptr;$/;"	m	struct:mib_ram_array_node	typeref:struct:mib_ram_array_node::mib_node
nptr	net/lwip/include/lwip/snmp_structs.h	/^  struct mib_node *nptr;$/;"	m	struct:mib_list_node	typeref:struct:mib_list_node::mib_node
nptr	net/lwip/include/lwip/snmp_structs.h	/^  struct mib_node* const *nptr;$/;"	m	struct:mib_array_node
obj_def	net/lwip/include/lwip/snmp_structs.h	/^struct obj_def$/;"	s
objid	net/lwip/include/lwip/snmp_structs.h	/^  const s32_t *objid;$/;"	m	struct:mib_array_node
objid	net/lwip/include/lwip/snmp_structs.h	/^  s32_t *objid;$/;"	m	struct:mib_ram_array_node
objid	net/lwip/include/lwip/snmp_structs.h	/^  s32_t objid;$/;"	m	struct:mib_list_node
prev	net/lwip/include/lwip/snmp_structs.h	/^  struct mib_list_node *prev;  $/;"	m	struct:mib_list_node	typeref:struct:mib_list_node::mib_list_node
set_test	net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_array_node
set_test	net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node
set_test	net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_list_rootnode
set_test	net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_node
set_test	net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_ram_array_node
set_test_a	net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test_a)(u8_t rid, struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node
set_test_pc	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_test_pc)(u8_t rid, struct obj_def *od);$/;"	m	struct:mib_external_node
set_test_q	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_test_q)(u8_t rid, struct obj_def *od);$/;"	m	struct:mib_external_node
set_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value)(struct obj_def *od, u16_t len, void *value);  $/;"	m	struct:mib_node
set_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_array_node
set_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node
set_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_list_rootnode
set_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_ram_array_node
set_value_a	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value_a)(u8_t rid, struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node
set_value_pc	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value_pc)(u8_t rid, struct obj_def *od);$/;"	m	struct:mib_external_node
set_value_q	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value_q)(u8_t rid, struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node
snmp_name_ptr	net/lwip/include/lwip/snmp_structs.h	/^struct snmp_name_ptr$/;"	s
tail	net/lwip/include/lwip/snmp_structs.h	/^  struct mib_list_node *tail;$/;"	m	struct:mib_list_rootnode	typeref:struct:mib_list_rootnode::mib_list_node
tree_levels	net/lwip/include/lwip/snmp_structs.h	/^  u8_t tree_levels;$/;"	m	struct:mib_external_node
v_len	net/lwip/include/lwip/snmp_structs.h	/^  u16_t v_len;$/;"	m	struct:obj_def
AF_INET	net/lwip/include/lwip/sockets.h	118;"	d
AF_UNSPEC	net/lwip/include/lwip/sockets.h	117;"	d
FD_CLR	net/lwip/include/lwip/sockets.h	277;"	d
FD_ISSET	net/lwip/include/lwip/sockets.h	278;"	d
FD_SET	net/lwip/include/lwip/sockets.h	276;"	d
FD_SETSIZE	net/lwip/include/lwip/sockets.h	273;"	d
FD_SETSIZE	net/lwip/include/lwip/sockets.h	275;"	d
FD_ZERO	net/lwip/include/lwip/sockets.h	279;"	d
FIONBIO	net/lwip/include/lwip/sockets.h	254;"	d
FIONREAD	net/lwip/include/lwip/sockets.h	251;"	d
INADDR_ANY	net/lwip/include/lwip/sockets.h	127;"	d
INADDR_BROADCAST	net/lwip/include/lwip/sockets.h	128;"	d
IOCPARM_MASK	net/lwip/include/lwip/sockets.h	236;"	d
IOC_IN	net/lwip/include/lwip/sockets.h	239;"	d
IOC_INOUT	net/lwip/include/lwip/sockets.h	240;"	d
IOC_OUT	net/lwip/include/lwip/sockets.h	238;"	d
IOC_VOID	net/lwip/include/lwip/sockets.h	237;"	d
IPPROTO_IP	net/lwip/include/lwip/sockets.h	122;"	d
IPPROTO_TCP	net/lwip/include/lwip/sockets.h	123;"	d
IPPROTO_UDP	net/lwip/include/lwip/sockets.h	124;"	d
IPPROTO_UDPLITE	net/lwip/include/lwip/sockets.h	125;"	d
IPTOS_LOWCOST	net/lwip/include/lwip/sockets.h	201;"	d
IPTOS_LOWDELAY	net/lwip/include/lwip/sockets.h	198;"	d
IPTOS_MINCOST	net/lwip/include/lwip/sockets.h	202;"	d
IPTOS_PREC	net/lwip/include/lwip/sockets.h	214;"	d
IPTOS_PREC_CRITIC_ECP	net/lwip/include/lwip/sockets.h	217;"	d
IPTOS_PREC_FLASH	net/lwip/include/lwip/sockets.h	219;"	d
IPTOS_PREC_FLASHOVERRIDE	net/lwip/include/lwip/sockets.h	218;"	d
IPTOS_PREC_IMMEDIATE	net/lwip/include/lwip/sockets.h	220;"	d
IPTOS_PREC_INTERNETCONTROL	net/lwip/include/lwip/sockets.h	216;"	d
IPTOS_PREC_MASK	net/lwip/include/lwip/sockets.h	213;"	d
IPTOS_PREC_NETCONTROL	net/lwip/include/lwip/sockets.h	215;"	d
IPTOS_PREC_PRIORITY	net/lwip/include/lwip/sockets.h	221;"	d
IPTOS_PREC_ROUTINE	net/lwip/include/lwip/sockets.h	222;"	d
IPTOS_RELIABILITY	net/lwip/include/lwip/sockets.h	200;"	d
IPTOS_THROUGHPUT	net/lwip/include/lwip/sockets.h	199;"	d
IPTOS_TOS	net/lwip/include/lwip/sockets.h	197;"	d
IPTOS_TOS_MASK	net/lwip/include/lwip/sockets.h	196;"	d
IP_ADD_MEMBERSHIP	net/lwip/include/lwip/sockets.h	168;"	d
IP_DROP_MEMBERSHIP	net/lwip/include/lwip/sockets.h	169;"	d
IP_MULTICAST_IF	net/lwip/include/lwip/sockets.h	171;"	d
IP_MULTICAST_LOOP	net/lwip/include/lwip/sockets.h	172;"	d
IP_MULTICAST_TTL	net/lwip/include/lwip/sockets.h	170;"	d
IP_TOS	net/lwip/include/lwip/sockets.h	141;"	d
IP_TTL	net/lwip/include/lwip/sockets.h	142;"	d
LWIP_TIMEVAL_PRIVATE	net/lwip/include/lwip/sockets.h	290;"	d
MSG_DONTWAIT	net/lwip/include/lwip/sockets.h	134;"	d
MSG_MORE	net/lwip/include/lwip/sockets.h	135;"	d
MSG_OOB	net/lwip/include/lwip/sockets.h	133;"	d
MSG_PEEK	net/lwip/include/lwip/sockets.h	131;"	d
MSG_WAITALL	net/lwip/include/lwip/sockets.h	132;"	d
O_NONBLOCK	net/lwip/include/lwip/sockets.h	268;"	d
PF_INET	net/lwip/include/lwip/sockets.h	119;"	d
PF_UNSPEC	net/lwip/include/lwip/sockets.h	120;"	d
SIOCATMARK	net/lwip/include/lwip/sockets.h	263;"	d
SIOCGHIWAT	net/lwip/include/lwip/sockets.h	260;"	d
SIOCGLOWAT	net/lwip/include/lwip/sockets.h	262;"	d
SIOCSHIWAT	net/lwip/include/lwip/sockets.h	259;"	d
SIOCSLOWAT	net/lwip/include/lwip/sockets.h	261;"	d
SOCK_DGRAM	net/lwip/include/lwip/sockets.h	69;"	d
SOCK_RAW	net/lwip/include/lwip/sockets.h	70;"	d
SOCK_STREAM	net/lwip/include/lwip/sockets.h	68;"	d
SOL_SOCKET	net/lwip/include/lwip/sockets.h	114;"	d
SO_ACCEPTCONN	net/lwip/include/lwip/sockets.h	76;"	d
SO_BROADCAST	net/lwip/include/lwip/sockets.h	80;"	d
SO_CONTIMEO	net/lwip/include/lwip/sockets.h	99;"	d
SO_DEBUG	net/lwip/include/lwip/sockets.h	75;"	d
SO_DONTLINGER	net/lwip/include/lwip/sockets.h	86;"	d
SO_DONTROUTE	net/lwip/include/lwip/sockets.h	79;"	d
SO_ERROR	net/lwip/include/lwip/sockets.h	97;"	d
SO_KEEPALIVE	net/lwip/include/lwip/sockets.h	78;"	d
SO_LINGER	net/lwip/include/lwip/sockets.h	82;"	d
SO_NO_CHECK	net/lwip/include/lwip/sockets.h	100;"	d
SO_OOBINLINE	net/lwip/include/lwip/sockets.h	83;"	d
SO_RCVBUF	net/lwip/include/lwip/sockets.h	92;"	d
SO_RCVLOWAT	net/lwip/include/lwip/sockets.h	94;"	d
SO_RCVTIMEO	net/lwip/include/lwip/sockets.h	96;"	d
SO_REUSEADDR	net/lwip/include/lwip/sockets.h	77;"	d
SO_REUSEPORT	net/lwip/include/lwip/sockets.h	84;"	d
SO_SNDBUF	net/lwip/include/lwip/sockets.h	91;"	d
SO_SNDLOWAT	net/lwip/include/lwip/sockets.h	93;"	d
SO_SNDTIMEO	net/lwip/include/lwip/sockets.h	95;"	d
SO_TYPE	net/lwip/include/lwip/sockets.h	98;"	d
SO_USELOOPBACK	net/lwip/include/lwip/sockets.h	81;"	d
TCP_KEEPALIVE	net/lwip/include/lwip/sockets.h	149;"	d
TCP_KEEPCNT	net/lwip/include/lwip/sockets.h	152;"	d
TCP_KEEPIDLE	net/lwip/include/lwip/sockets.h	150;"	d
TCP_KEEPINTVL	net/lwip/include/lwip/sockets.h	151;"	d
TCP_NODELAY	net/lwip/include/lwip/sockets.h	148;"	d
UDPLITE_RECV_CSCOV	net/lwip/include/lwip/sockets.h	160;"	d
UDPLITE_SEND_CSCOV	net/lwip/include/lwip/sockets.h	159;"	d
_IO	net/lwip/include/lwip/sockets.h	243;"	d
_IOR	net/lwip/include/lwip/sockets.h	245;"	d
_IOW	net/lwip/include/lwip/sockets.h	247;"	d
__LWIP_SOCKETS_H__	net/lwip/include/lwip/sockets.h	35;"	d
accept	net/lwip/include/lwip/sockets.h	326;"	d
bind	net/lwip/include/lwip/sockets.h	327;"	d
close	net/lwip/include/lwip/sockets.h	347;"	d
closesocket	net/lwip/include/lwip/sockets.h	329;"	d
connect	net/lwip/include/lwip/sockets.h	330;"	d
fd_bits	net/lwip/include/lwip/sockets.h	/^          unsigned char fd_bits [(FD_SETSIZE+7)\/8];$/;"	m	struct:fd_set
fd_set	net/lwip/include/lwip/sockets.h	/^        } fd_set;$/;"	t	typeref:struct:fd_set
fd_set	net/lwip/include/lwip/sockets.h	/^  typedef struct fd_set {$/;"	s
getpeername	net/lwip/include/lwip/sockets.h	332;"	d
getsockname	net/lwip/include/lwip/sockets.h	331;"	d
getsockopt	net/lwip/include/lwip/sockets.h	334;"	d
imr_interface	net/lwip/include/lwip/sockets.h	/^    struct in_addr imr_interface; \/* local IP address of interface *\/$/;"	m	struct:ip_mreq	typeref:struct:ip_mreq::in_addr
imr_multiaddr	net/lwip/include/lwip/sockets.h	/^    struct in_addr imr_multiaddr; \/* IP multicast address of group *\/$/;"	m	struct:ip_mreq	typeref:struct:ip_mreq::in_addr
ioctlsocket	net/lwip/include/lwip/sockets.h	342;"	d
ip_mreq	net/lwip/include/lwip/sockets.h	/^typedef struct ip_mreq {$/;"	s
ip_mreq	net/lwip/include/lwip/sockets.h	/^} ip_mreq;$/;"	t	typeref:struct:ip_mreq
l_linger	net/lwip/include/lwip/sockets.h	/^       int l_linger;               \/* linger time *\/$/;"	m	struct:linger
l_onoff	net/lwip/include/lwip/sockets.h	/^       int l_onoff;                \/* option on\/off *\/$/;"	m	struct:linger
linger	net/lwip/include/lwip/sockets.h	/^struct linger {$/;"	s
listen	net/lwip/include/lwip/sockets.h	335;"	d
read	net/lwip/include/lwip/sockets.h	345;"	d
recv	net/lwip/include/lwip/sockets.h	336;"	d
recvfrom	net/lwip/include/lwip/sockets.h	337;"	d
sa_data	net/lwip/include/lwip/sockets.h	/^  char sa_data[14];$/;"	m	struct:sockaddr
sa_family	net/lwip/include/lwip/sockets.h	/^  u8_t sa_family;$/;"	m	struct:sockaddr
sa_len	net/lwip/include/lwip/sockets.h	/^  u8_t sa_len;$/;"	m	struct:sockaddr
select	net/lwip/include/lwip/sockets.h	341;"	d
send	net/lwip/include/lwip/sockets.h	338;"	d
sendto	net/lwip/include/lwip/sockets.h	339;"	d
setsockopt	net/lwip/include/lwip/sockets.h	333;"	d
shutdown	net/lwip/include/lwip/sockets.h	328;"	d
sin_addr	net/lwip/include/lwip/sockets.h	/^  struct in_addr sin_addr;$/;"	m	struct:sockaddr_in	typeref:struct:sockaddr_in::in_addr
sin_family	net/lwip/include/lwip/sockets.h	/^  u8_t sin_family;$/;"	m	struct:sockaddr_in
sin_len	net/lwip/include/lwip/sockets.h	/^  u8_t sin_len;$/;"	m	struct:sockaddr_in
sin_port	net/lwip/include/lwip/sockets.h	/^  u16_t sin_port;$/;"	m	struct:sockaddr_in
sin_zero	net/lwip/include/lwip/sockets.h	/^  char sin_zero[8];$/;"	m	struct:sockaddr_in
sockaddr	net/lwip/include/lwip/sockets.h	/^struct sockaddr {$/;"	s
sockaddr_in	net/lwip/include/lwip/sockets.h	/^struct sockaddr_in {$/;"	s
socket	net/lwip/include/lwip/sockets.h	340;"	d
socklen_t	net/lwip/include/lwip/sockets.h	64;"	d
timeval	net/lwip/include/lwip/sockets.h	/^struct timeval {$/;"	s
tv_sec	net/lwip/include/lwip/sockets.h	/^  long    tv_sec;         \/* seconds *\/$/;"	m	struct:timeval
tv_usec	net/lwip/include/lwip/sockets.h	/^  long    tv_usec;        \/* and microseconds *\/$/;"	m	struct:timeval
write	net/lwip/include/lwip/sockets.h	346;"	d
ETHARP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	202;"	d
ETHARP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	205;"	d
ETHARP_STATS_INC	net/lwip/include/lwip/stats.h	201;"	d
ETHARP_STATS_INC	net/lwip/include/lwip/stats.h	204;"	d
ICMP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	170;"	d
ICMP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	173;"	d
ICMP_STATS_INC	net/lwip/include/lwip/stats.h	169;"	d
ICMP_STATS_INC	net/lwip/include/lwip/stats.h	172;"	d
IGMP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	178;"	d
IGMP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	181;"	d
IGMP_STATS_INC	net/lwip/include/lwip/stats.h	177;"	d
IGMP_STATS_INC	net/lwip/include/lwip/stats.h	180;"	d
IPFRAG_STATS_DISPLAY	net/lwip/include/lwip/stats.h	194;"	d
IPFRAG_STATS_DISPLAY	net/lwip/include/lwip/stats.h	197;"	d
IPFRAG_STATS_INC	net/lwip/include/lwip/stats.h	193;"	d
IPFRAG_STATS_INC	net/lwip/include/lwip/stats.h	196;"	d
IP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	186;"	d
IP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	189;"	d
IP_STATS_INC	net/lwip/include/lwip/stats.h	185;"	d
IP_STATS_INC	net/lwip/include/lwip/stats.h	188;"	d
LINK_STATS_DISPLAY	net/lwip/include/lwip/stats.h	210;"	d
LINK_STATS_DISPLAY	net/lwip/include/lwip/stats.h	213;"	d
LINK_STATS_INC	net/lwip/include/lwip/stats.h	209;"	d
LINK_STATS_INC	net/lwip/include/lwip/stats.h	212;"	d
LWIP_STATS_LARGE	net/lwip/include/lwip/stats.h	47;"	d
MEMP_STATS_AVAIL	net/lwip/include/lwip/stats.h	235;"	d
MEMP_STATS_AVAIL	net/lwip/include/lwip/stats.h	245;"	d
MEMP_STATS_DEC	net/lwip/include/lwip/stats.h	237;"	d
MEMP_STATS_DEC	net/lwip/include/lwip/stats.h	247;"	d
MEMP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	243;"	d
MEMP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	249;"	d
MEMP_STATS_INC	net/lwip/include/lwip/stats.h	236;"	d
MEMP_STATS_INC	net/lwip/include/lwip/stats.h	246;"	d
MEMP_STATS_INC_USED	net/lwip/include/lwip/stats.h	238;"	d
MEMP_STATS_INC_USED	net/lwip/include/lwip/stats.h	248;"	d
MEM_STATS_AVAIL	net/lwip/include/lwip/stats.h	217;"	d
MEM_STATS_AVAIL	net/lwip/include/lwip/stats.h	227;"	d
MEM_STATS_DEC_USED	net/lwip/include/lwip/stats.h	224;"	d
MEM_STATS_DEC_USED	net/lwip/include/lwip/stats.h	230;"	d
MEM_STATS_DISPLAY	net/lwip/include/lwip/stats.h	225;"	d
MEM_STATS_DISPLAY	net/lwip/include/lwip/stats.h	231;"	d
MEM_STATS_INC	net/lwip/include/lwip/stats.h	218;"	d
MEM_STATS_INC	net/lwip/include/lwip/stats.h	228;"	d
MEM_STATS_INC_USED	net/lwip/include/lwip/stats.h	219;"	d
MEM_STATS_INC_USED	net/lwip/include/lwip/stats.h	229;"	d
STATS_DEC	net/lwip/include/lwip/stats.h	145;"	d
STATS_DEC	net/lwip/include/lwip/stats.h	149;"	d
STATS_INC	net/lwip/include/lwip/stats.h	144;"	d
STATS_INC	net/lwip/include/lwip/stats.h	148;"	d
STAT_COUNTER	net/lwip/include/lwip/stats.h	51;"	d
STAT_COUNTER	net/lwip/include/lwip/stats.h	54;"	d
STAT_COUNTER_F	net/lwip/include/lwip/stats.h	52;"	d
STAT_COUNTER_F	net/lwip/include/lwip/stats.h	55;"	d
SYS_STATS_DEC	net/lwip/include/lwip/stats.h	254;"	d
SYS_STATS_DEC	net/lwip/include/lwip/stats.h	258;"	d
SYS_STATS_DISPLAY	net/lwip/include/lwip/stats.h	255;"	d
SYS_STATS_DISPLAY	net/lwip/include/lwip/stats.h	259;"	d
SYS_STATS_INC	net/lwip/include/lwip/stats.h	253;"	d
SYS_STATS_INC	net/lwip/include/lwip/stats.h	257;"	d
TCP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	154;"	d
TCP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	157;"	d
TCP_STATS_INC	net/lwip/include/lwip/stats.h	153;"	d
TCP_STATS_INC	net/lwip/include/lwip/stats.h	156;"	d
UDP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	162;"	d
UDP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	165;"	d
UDP_STATS_INC	net/lwip/include/lwip/stats.h	161;"	d
UDP_STATS_INC	net/lwip/include/lwip/stats.h	164;"	d
__LWIP_STATS_H__	net/lwip/include/lwip/stats.h	33;"	d
avail	net/lwip/include/lwip/stats.h	/^  mem_size_t avail;$/;"	m	struct:stats_mem
cachehit	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER cachehit;$/;"	m	struct:stats_proto
chkerr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER chkerr;           \/* Checksum error. *\/$/;"	m	struct:stats_igmp
chkerr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER chkerr;           \/* Checksum error. *\/$/;"	m	struct:stats_proto
drop	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER drop;             \/* Dropped packets. *\/$/;"	m	struct:stats_proto
err	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER err;              \/* Misc error. *\/$/;"	m	struct:stats_proto
err	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER err;$/;"	m	struct:stats_mem
err	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER err;$/;"	m	struct:stats_syselem
etharp	net/lwip/include/lwip/stats.h	/^  struct stats_proto etharp;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
fw	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER fw;               \/* Forwarded packets. *\/$/;"	m	struct:stats_proto
group_query_rxed	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER group_query_rxed; \/* *\/$/;"	m	struct:stats_igmp
icmp	net/lwip/include/lwip/stats.h	/^  struct stats_proto icmp;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
igmp	net/lwip/include/lwip/stats.h	/^  struct stats_igmp igmp;$/;"	m	struct:stats_	typeref:struct:stats_::stats_igmp
illegal	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER illegal;$/;"	m	struct:stats_mem
ip	net/lwip/include/lwip/stats.h	/^  struct stats_proto ip;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
ip_frag	net/lwip/include/lwip/stats.h	/^  struct stats_proto ip_frag;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
join_sent	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER join_sent;        \/* *\/$/;"	m	struct:stats_igmp
leave_sent	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER leave_sent;       \/* *\/$/;"	m	struct:stats_igmp
lenerr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER lenerr;           \/* Invalid length error. *\/$/;"	m	struct:stats_igmp
lenerr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER lenerr;           \/* Invalid length error. *\/$/;"	m	struct:stats_proto
link	net/lwip/include/lwip/stats.h	/^  struct stats_proto link;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
max	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER max;$/;"	m	struct:stats_syselem
max	net/lwip/include/lwip/stats.h	/^  mem_size_t max;$/;"	m	struct:stats_mem
mbox	net/lwip/include/lwip/stats.h	/^  struct stats_syselem mbox;$/;"	m	struct:stats_sys	typeref:struct:stats_sys::stats_syselem
mem	net/lwip/include/lwip/stats.h	/^  struct stats_mem mem;$/;"	m	struct:stats_	typeref:struct:stats_::stats_mem
memerr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER memerr;           \/* Out of memory error. *\/$/;"	m	struct:stats_proto
memp	net/lwip/include/lwip/stats.h	/^  struct stats_mem memp[MEMP_MAX];$/;"	m	struct:stats_	typeref:struct:stats_::stats_mem
opterr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER opterr;           \/* Error in options. *\/$/;"	m	struct:stats_proto
proterr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER proterr;          \/* Protocol error. *\/$/;"	m	struct:stats_proto
recv	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER recv;             \/* Received packets. *\/$/;"	m	struct:stats_proto
report_rxed	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER report_rxed;      \/* *\/$/;"	m	struct:stats_igmp
report_sent	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER report_sent;      \/* *\/$/;"	m	struct:stats_igmp
rterr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER rterr;            \/* Routing error. *\/$/;"	m	struct:stats_proto
sem	net/lwip/include/lwip/stats.h	/^  struct stats_syselem sem;$/;"	m	struct:stats_sys	typeref:struct:stats_sys::stats_syselem
stats_	net/lwip/include/lwip/stats.h	/^struct stats_ {$/;"	s
stats_display	net/lwip/include/lwip/stats.h	271;"	d
stats_display_igmp	net/lwip/include/lwip/stats.h	273;"	d
stats_display_mem	net/lwip/include/lwip/stats.h	274;"	d
stats_display_memp	net/lwip/include/lwip/stats.h	275;"	d
stats_display_proto	net/lwip/include/lwip/stats.h	272;"	d
stats_display_sys	net/lwip/include/lwip/stats.h	276;"	d
stats_igmp	net/lwip/include/lwip/stats.h	/^struct stats_igmp {$/;"	s
stats_init	net/lwip/include/lwip/stats.h	142;"	d
stats_init	net/lwip/include/lwip/stats.h	147;"	d
stats_mem	net/lwip/include/lwip/stats.h	/^struct stats_mem {$/;"	s
stats_proto	net/lwip/include/lwip/stats.h	/^struct stats_proto {$/;"	s
stats_sys	net/lwip/include/lwip/stats.h	/^struct stats_sys {$/;"	s
stats_syselem	net/lwip/include/lwip/stats.h	/^struct stats_syselem {$/;"	s
sys	net/lwip/include/lwip/stats.h	/^  struct stats_sys sys;$/;"	m	struct:stats_	typeref:struct:stats_::stats_sys
tcp	net/lwip/include/lwip/stats.h	/^  struct stats_proto tcp;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
udp	net/lwip/include/lwip/stats.h	/^  struct stats_proto udp;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
unicast_query	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER unicast_query;    \/* *\/$/;"	m	struct:stats_igmp
used	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER used;$/;"	m	struct:stats_syselem
used	net/lwip/include/lwip/stats.h	/^  mem_size_t used;$/;"	m	struct:stats_mem
v1_rxed	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER v1_rxed;          \/* *\/$/;"	m	struct:stats_igmp
xmit	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER xmit;             \/* Transmitted packets. *\/$/;"	m	struct:stats_proto
SYS_ARCH_DEC	net/lwip/include/lwip/sys.h	215;"	d
SYS_ARCH_DECL_PROTECT	net/lwip/include/lwip/sys.h	167;"	d
SYS_ARCH_DECL_PROTECT	net/lwip/include/lwip/sys.h	192;"	d
SYS_ARCH_GET	net/lwip/include/lwip/sys.h	224;"	d
SYS_ARCH_INC	net/lwip/include/lwip/sys.h	206;"	d
SYS_ARCH_PROTECT	net/lwip/include/lwip/sys.h	177;"	d
SYS_ARCH_PROTECT	net/lwip/include/lwip/sys.h	193;"	d
SYS_ARCH_SET	net/lwip/include/lwip/sys.h	233;"	d
SYS_ARCH_TIMEOUT	net/lwip/include/lwip/sys.h	71;"	d
SYS_ARCH_UNPROTECT	net/lwip/include/lwip/sys.h	186;"	d
SYS_ARCH_UNPROTECT	net/lwip/include/lwip/sys.h	194;"	d
SYS_MBOX_EMPTY	net/lwip/include/lwip/sys.h	76;"	d
__LWIP_SYS_H__	net/lwip/include/lwip/sys.h	33;"	d
arg	net/lwip/include/lwip/sys.h	/^  void *arg;$/;"	m	struct:sys_timeo
dummy	net/lwip/include/lwip/sys.h	/^struct sys_timeo {u8_t dummy;};$/;"	m	struct:sys_timeo
h	net/lwip/include/lwip/sys.h	/^  sys_timeout_handler h;$/;"	m	struct:sys_timeo
next	net/lwip/include/lwip/sys.h	/^  struct sys_timeo *next;$/;"	m	struct:sys_timeo	typeref:struct:sys_timeo::sys_timeo
next	net/lwip/include/lwip/sys.h	/^  struct sys_timeo *next;$/;"	m	struct:sys_timeouts	typeref:struct:sys_timeouts::sys_timeo
sys_arch_sem_wait	net/lwip/include/lwip/sys.h	57;"	d
sys_init	net/lwip/include/lwip/sys.h	50;"	d
sys_mbox_fetch	net/lwip/include/lwip/sys.h	60;"	d
sys_mbox_free	net/lwip/include/lwip/sys.h	64;"	d
sys_mbox_new	net/lwip/include/lwip/sys.h	59;"	d
sys_mbox_post	net/lwip/include/lwip/sys.h	62;"	d
sys_mbox_t	net/lwip/include/lwip/sys.h	/^typedef u8_t sys_mbox_t;$/;"	t
sys_mbox_tryfetch	net/lwip/include/lwip/sys.h	135;"	d
sys_mbox_tryfetch	net/lwip/include/lwip/sys.h	61;"	d
sys_mbox_trypost	net/lwip/include/lwip/sys.h	63;"	d
sys_prot_t	net/lwip/include/lwip/sys.h	/^typedef u8_t sys_prot_t;$/;"	t
sys_sem_free	net/lwip/include/lwip/sys.h	58;"	d
sys_sem_new	net/lwip/include/lwip/sys.h	53;"	d
sys_sem_signal	net/lwip/include/lwip/sys.h	54;"	d
sys_sem_t	net/lwip/include/lwip/sys.h	/^typedef u8_t sys_sem_t;$/;"	t
sys_sem_wait	net/lwip/include/lwip/sys.h	55;"	d
sys_sem_wait_timeout	net/lwip/include/lwip/sys.h	56;"	d
sys_thread_new	net/lwip/include/lwip/sys.h	66;"	d
sys_timeo	net/lwip/include/lwip/sys.h	/^struct sys_timeo {$/;"	s
sys_timeo	net/lwip/include/lwip/sys.h	/^struct sys_timeo {u8_t dummy;};$/;"	s
sys_timeout	net/lwip/include/lwip/sys.h	51;"	d
sys_timeout_handler	net/lwip/include/lwip/sys.h	/^typedef void (* sys_timeout_handler)(void *arg);$/;"	t
sys_timeouts	net/lwip/include/lwip/sys.h	/^struct sys_timeouts {$/;"	s
sys_untimeout	net/lwip/include/lwip/sys.h	52;"	d
time	net/lwip/include/lwip/sys.h	/^  u32_t time;$/;"	m	struct:sys_timeo
CLOSED	net/lwip/include/lwip/tcp.h	/^  CLOSED      = 0,$/;"	e	enum:tcp_state
CLOSE_WAIT	net/lwip/include/lwip/tcp.h	/^  CLOSE_WAIT  = 7,$/;"	e	enum:tcp_state
CLOSING	net/lwip/include/lwip/tcp.h	/^  CLOSING     = 8,$/;"	e	enum:tcp_state
ESTABLISHED	net/lwip/include/lwip/tcp.h	/^  ESTABLISHED = 4,$/;"	e	enum:tcp_state
FIN_WAIT_1	net/lwip/include/lwip/tcp.h	/^  FIN_WAIT_1  = 5,$/;"	e	enum:tcp_state
FIN_WAIT_2	net/lwip/include/lwip/tcp.h	/^  FIN_WAIT_2  = 6,$/;"	e	enum:tcp_state
IP_PCB	net/lwip/include/lwip/tcp.h	/^  IP_PCB;$/;"	m	struct:tcp_pcb
IP_PCB	net/lwip/include/lwip/tcp.h	/^  IP_PCB;$/;"	m	struct:tcp_pcb_listen
LAST_ACK	net/lwip/include/lwip/tcp.h	/^  LAST_ACK    = 9,$/;"	e	enum:tcp_state
LISTEN	net/lwip/include/lwip/tcp.h	/^  LISTEN      = 1,$/;"	e	enum:tcp_state
LWIP_EVENT_ACCEPT	net/lwip/include/lwip/tcp.h	/^  LWIP_EVENT_ACCEPT,$/;"	e	enum:lwip_event
LWIP_EVENT_CONNECTED	net/lwip/include/lwip/tcp.h	/^  LWIP_EVENT_CONNECTED,$/;"	e	enum:lwip_event
LWIP_EVENT_ERR	net/lwip/include/lwip/tcp.h	/^  LWIP_EVENT_ERR$/;"	e	enum:lwip_event
LWIP_EVENT_POLL	net/lwip/include/lwip/tcp.h	/^  LWIP_EVENT_POLL,$/;"	e	enum:lwip_event
LWIP_EVENT_RECV	net/lwip/include/lwip/tcp.h	/^  LWIP_EVENT_RECV,$/;"	e	enum:lwip_event
LWIP_EVENT_SENT	net/lwip/include/lwip/tcp.h	/^  LWIP_EVENT_SENT,$/;"	e	enum:lwip_event
PACK_STRUCT_STRUCT	net/lwip/include/lwip/tcp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:tcp_hdr
SYN_RCVD	net/lwip/include/lwip/tcp.h	/^  SYN_RCVD    = 3,$/;"	e	enum:tcp_state
SYN_SENT	net/lwip/include/lwip/tcp.h	/^  SYN_SENT    = 2,$/;"	e	enum:tcp_state
TCPH_FLAGS	net/lwip/include/lwip/tcp.h	230;"	d
TCPH_FLAGS_SET	net/lwip/include/lwip/tcp.h	234;"	d
TCPH_HDRLEN	net/lwip/include/lwip/tcp.h	229;"	d
TCPH_HDRLEN_SET	net/lwip/include/lwip/tcp.h	233;"	d
TCPH_OFFSET	net/lwip/include/lwip/tcp.h	228;"	d
TCPH_OFFSET_SET	net/lwip/include/lwip/tcp.h	232;"	d
TCPH_SET_FLAG	net/lwip/include/lwip/tcp.h	235;"	d
TCPH_UNSET_FLAG	net/lwip/include/lwip/tcp.h	236;"	d
TCP_ACK	net/lwip/include/lwip/tcp.h	160;"	d
TCP_BUILD_MSS_OPTION	net/lwip/include/lwip/tcp.h	142;"	d
TCP_CWR	net/lwip/include/lwip/tcp.h	163;"	d
TCP_ECE	net/lwip/include/lwip/tcp.h	162;"	d
TCP_EVENT_ACCEPT	net/lwip/include/lwip/tcp.h	456;"	d
TCP_EVENT_ACCEPT	net/lwip/include/lwip/tcp.h	469;"	d
TCP_EVENT_CONNECTED	net/lwip/include/lwip/tcp.h	462;"	d
TCP_EVENT_CONNECTED	net/lwip/include/lwip/tcp.h	480;"	d
TCP_EVENT_ERR	net/lwip/include/lwip/tcp.h	466;"	d
TCP_EVENT_ERR	net/lwip/include/lwip/tcp.h	486;"	d
TCP_EVENT_POLL	net/lwip/include/lwip/tcp.h	464;"	d
TCP_EVENT_POLL	net/lwip/include/lwip/tcp.h	483;"	d
TCP_EVENT_RECV	net/lwip/include/lwip/tcp.h	460;"	d
TCP_EVENT_RECV	net/lwip/include/lwip/tcp.h	475;"	d
TCP_EVENT_SENT	net/lwip/include/lwip/tcp.h	458;"	d
TCP_EVENT_SENT	net/lwip/include/lwip/tcp.h	472;"	d
TCP_FAST_INTERVAL	net/lwip/include/lwip/tcp.h	175;"	d
TCP_FIN	net/lwip/include/lwip/tcp.h	156;"	d
TCP_FIN_WAIT_TIMEOUT	net/lwip/include/lwip/tcp.h	182;"	d
TCP_FLAGS	net/lwip/include/lwip/tcp.h	165;"	d
TCP_HLEN	net/lwip/include/lwip/tcp.h	168;"	d
TCP_KEEPCNT_DEFAULT	net/lwip/include/lwip/tcp.h	201;"	d
TCP_KEEPIDLE_DEFAULT	net/lwip/include/lwip/tcp.h	193;"	d
TCP_KEEPINTVL_DEFAULT	net/lwip/include/lwip/tcp.h	197;"	d
TCP_MAXIDLE	net/lwip/include/lwip/tcp.h	204;"	d
TCP_MSL	net/lwip/include/lwip/tcp.h	188;"	d
TCP_OOSEQ_TIMEOUT	net/lwip/include/lwip/tcp.h	185;"	d
TCP_PCB_COMMON	net/lwip/include/lwip/tcp.h	264;"	d
TCP_PRIO_MAX	net/lwip/include/lwip/tcp.h	113;"	d
TCP_PRIO_MIN	net/lwip/include/lwip/tcp.h	111;"	d
TCP_PRIO_NORMAL	net/lwip/include/lwip/tcp.h	112;"	d
TCP_PSH	net/lwip/include/lwip/tcp.h	159;"	d
TCP_REG	net/lwip/include/lwip/tcp.h	617;"	d
TCP_RMV	net/lwip/include/lwip/tcp.h	622;"	d
TCP_RST	net/lwip/include/lwip/tcp.h	158;"	d
TCP_SEQ_BETWEEN	net/lwip/include/lwip/tcp.h	155;"	d
TCP_SEQ_GEQ	net/lwip/include/lwip/tcp.h	150;"	d
TCP_SEQ_GT	net/lwip/include/lwip/tcp.h	149;"	d
TCP_SEQ_LEQ	net/lwip/include/lwip/tcp.h	148;"	d
TCP_SEQ_LT	net/lwip/include/lwip/tcp.h	147;"	d
TCP_SLOW_INTERVAL	net/lwip/include/lwip/tcp.h	179;"	d
TCP_SNDQUEUELEN_OVERFLOW	net/lwip/include/lwip/tcp.h	333;"	d
TCP_SYN	net/lwip/include/lwip/tcp.h	157;"	d
TCP_SYN_RCVD_TIMEOUT	net/lwip/include/lwip/tcp.h	183;"	d
TCP_TCPLEN	net/lwip/include/lwip/tcp.h	238;"	d
TCP_TMR_INTERVAL	net/lwip/include/lwip/tcp.h	171;"	d
TCP_URG	net/lwip/include/lwip/tcp.h	161;"	d
TCP_WRITE_FLAG_COPY	net/lwip/include/lwip/tcp.h	103;"	d
TCP_WRITE_FLAG_MORE	net/lwip/include/lwip/tcp.h	104;"	d
TF_ACK_DELAY	net/lwip/include/lwip/tcp.h	283;"	d
TF_ACK_NOW	net/lwip/include/lwip/tcp.h	284;"	d
TF_CLOSED	net/lwip/include/lwip/tcp.h	258;"	d
TF_FIN	net/lwip/include/lwip/tcp.h	286;"	d
TF_GOT_FIN	net/lwip/include/lwip/tcp.h	259;"	d
TF_INFR	net/lwip/include/lwip/tcp.h	285;"	d
TF_NAGLEMEMERR	net/lwip/include/lwip/tcp.h	288;"	d
TF_NODELAY	net/lwip/include/lwip/tcp.h	287;"	d
TF_RESET	net/lwip/include/lwip/tcp.h	257;"	d
TIME_WAIT	net/lwip/include/lwip/tcp.h	/^  TIME_WAIT   = 10$/;"	e	enum:tcp_state
__LWIP_TCP_H__	net/lwip/include/lwip/tcp.h	33;"	d
accept	net/lwip/include/lwip/tcp.h	/^  err_t (* accept)(void *arg, struct tcp_pcb *newpcb, err_t err);$/;"	m	struct:tcp_pcb
accept	net/lwip/include/lwip/tcp.h	/^  err_t (* accept)(void *arg, struct tcp_pcb *newpcb, err_t err);$/;"	m	struct:tcp_pcb_listen
accepts_pending	net/lwip/include/lwip/tcp.h	/^  u8_t accepts_pending;$/;"	m	struct:tcp_pcb_listen
acked	net/lwip/include/lwip/tcp.h	/^  u16_t acked;$/;"	m	struct:tcp_pcb
backlog	net/lwip/include/lwip/tcp.h	/^  u8_t backlog;$/;"	m	struct:tcp_pcb_listen
connected	net/lwip/include/lwip/tcp.h	/^  err_t (* connected)(void *arg, struct tcp_pcb *pcb, err_t err);$/;"	m	struct:tcp_pcb
cwnd	net/lwip/include/lwip/tcp.h	/^  u16_t cwnd;  $/;"	m	struct:tcp_pcb
dataptr	net/lwip/include/lwip/tcp.h	/^  void *dataptr;           \/* pointer to the TCP data in the pbuf *\/$/;"	m	struct:tcp_seg
dupacks	net/lwip/include/lwip/tcp.h	/^  u8_t dupacks;$/;"	m	struct:tcp_pcb
errf	net/lwip/include/lwip/tcp.h	/^  void (* errf)(void *arg, err_t err);$/;"	m	struct:tcp_pcb
flags	net/lwip/include/lwip/tcp.h	/^  u8_t flags;$/;"	m	struct:tcp_pcb
keep_cnt	net/lwip/include/lwip/tcp.h	/^  u32_t keep_cnt;$/;"	m	struct:tcp_pcb
keep_cnt_sent	net/lwip/include/lwip/tcp.h	/^  u8_t keep_cnt_sent;$/;"	m	struct:tcp_pcb
keep_idle	net/lwip/include/lwip/tcp.h	/^  u32_t keep_idle;$/;"	m	struct:tcp_pcb
keep_intvl	net/lwip/include/lwip/tcp.h	/^  u32_t keep_intvl;$/;"	m	struct:tcp_pcb
lastack	net/lwip/include/lwip/tcp.h	/^  u32_t lastack; \/* Highest acknowledged seqno. *\/$/;"	m	struct:tcp_pcb
len	net/lwip/include/lwip/tcp.h	/^  u16_t len;               \/* the TCP length of this segment *\/$/;"	m	struct:tcp_seg
listen_pcbs	net/lwip/include/lwip/tcp.h	/^  struct tcp_pcb_listen *listen_pcbs; $/;"	m	union:tcp_listen_pcbs_t	typeref:struct:tcp_listen_pcbs_t::tcp_pcb_listen
lwip_event	net/lwip/include/lwip/tcp.h	/^enum lwip_event {$/;"	g
mss	net/lwip/include/lwip/tcp.h	/^  u16_t mss;   \/* maximum segment size *\/$/;"	m	struct:tcp_pcb
next	net/lwip/include/lwip/tcp.h	/^  struct tcp_seg *next;    \/* used when putting segements on a queue *\/$/;"	m	struct:tcp_seg	typeref:struct:tcp_seg::tcp_seg
nrtx	net/lwip/include/lwip/tcp.h	/^  u8_t nrtx;    \/* number of retransmissions *\/$/;"	m	struct:tcp_pcb
ooseq	net/lwip/include/lwip/tcp.h	/^  struct tcp_seg *ooseq;    \/* Received out of sequence segments. *\/$/;"	m	struct:tcp_pcb	typeref:struct:tcp_pcb::tcp_seg
p	net/lwip/include/lwip/tcp.h	/^  struct pbuf *p;          \/* buffer containing data + TCP header *\/$/;"	m	struct:tcp_seg	typeref:struct:tcp_seg::pbuf
pcbs	net/lwip/include/lwip/tcp.h	/^  struct tcp_pcb *pcbs;$/;"	m	union:tcp_listen_pcbs_t	typeref:struct:tcp_listen_pcbs_t::tcp_pcb
persist_backoff	net/lwip/include/lwip/tcp.h	/^  u8_t persist_backoff;$/;"	m	struct:tcp_pcb
persist_cnt	net/lwip/include/lwip/tcp.h	/^  u32_t persist_cnt;$/;"	m	struct:tcp_pcb
poll	net/lwip/include/lwip/tcp.h	/^  err_t (* poll)(void *arg, struct tcp_pcb *pcb);$/;"	m	struct:tcp_pcb
pollinterval	net/lwip/include/lwip/tcp.h	/^  u8_t polltmr, pollinterval;$/;"	m	struct:tcp_pcb
polltmr	net/lwip/include/lwip/tcp.h	/^  u8_t polltmr, pollinterval;$/;"	m	struct:tcp_pcb
rcv_ann_wnd	net/lwip/include/lwip/tcp.h	/^  u16_t rcv_ann_wnd; \/* announced receive window *\/$/;"	m	struct:tcp_pcb
rcv_nxt	net/lwip/include/lwip/tcp.h	/^  u32_t rcv_nxt;   \/* next seqno expected *\/$/;"	m	struct:tcp_pcb
rcv_wnd	net/lwip/include/lwip/tcp.h	/^  u16_t rcv_wnd;   \/* receiver window *\/$/;"	m	struct:tcp_pcb
recv	net/lwip/include/lwip/tcp.h	/^  err_t (* recv)(void *arg, struct tcp_pcb *pcb, struct pbuf *p, err_t err);$/;"	m	struct:tcp_pcb
refused_data	net/lwip/include/lwip/tcp.h	/^  struct pbuf *refused_data; \/* Data previously received but not yet taken by upper layer *\/$/;"	m	struct:tcp_pcb	typeref:struct:tcp_pcb::pbuf
remote_port	net/lwip/include/lwip/tcp.h	/^  u16_t remote_port;$/;"	m	struct:tcp_pcb
rtime	net/lwip/include/lwip/tcp.h	/^  s16_t rtime;$/;"	m	struct:tcp_pcb
rto	net/lwip/include/lwip/tcp.h	/^  s16_t rto;    \/* retransmission time-out *\/$/;"	m	struct:tcp_pcb
rtseq	net/lwip/include/lwip/tcp.h	/^  u32_t rtseq;  \/* sequence number being timed *\/$/;"	m	struct:tcp_pcb
rttest	net/lwip/include/lwip/tcp.h	/^  u32_t rttest; \/* RTT estimate in 500ms ticks *\/$/;"	m	struct:tcp_pcb
sa	net/lwip/include/lwip/tcp.h	/^  s16_t sa, sv; \/* @todo document this *\/$/;"	m	struct:tcp_pcb
sent	net/lwip/include/lwip/tcp.h	/^  err_t (* sent)(void *arg, struct tcp_pcb *pcb, u16_t space);$/;"	m	struct:tcp_pcb
snd_buf	net/lwip/include/lwip/tcp.h	/^  u16_t snd_buf;   \/* Available buffer space for sending (in bytes). *\/$/;"	m	struct:tcp_pcb
snd_lbb	net/lwip/include/lwip/tcp.h	/^    snd_lbb;       \/* Sequence number of next byte to be buffered. *\/$/;"	m	struct:tcp_pcb
snd_max	net/lwip/include/lwip/tcp.h	/^    snd_max;       \/* Highest seqno sent. *\/$/;"	m	struct:tcp_pcb
snd_nxt	net/lwip/include/lwip/tcp.h	/^  u32_t snd_nxt,   \/* next seqno to be sent *\/$/;"	m	struct:tcp_pcb
snd_queuelen	net/lwip/include/lwip/tcp.h	/^  u16_t snd_queuelen; \/* Available buffer space for sending (in tcp_segs). *\/$/;"	m	struct:tcp_pcb
snd_wl1	net/lwip/include/lwip/tcp.h	/^  u32_t snd_wl1, snd_wl2, \/* Sequence and acknowledgement numbers of last$/;"	m	struct:tcp_pcb
snd_wl2	net/lwip/include/lwip/tcp.h	/^  u32_t snd_wl1, snd_wl2, \/* Sequence and acknowledgement numbers of last$/;"	m	struct:tcp_pcb
snd_wnd	net/lwip/include/lwip/tcp.h	/^  u16_t snd_wnd;   \/* sender window *\/$/;"	m	struct:tcp_pcb
ssthresh	net/lwip/include/lwip/tcp.h	/^  u16_t ssthresh;$/;"	m	struct:tcp_pcb
sv	net/lwip/include/lwip/tcp.h	/^  s16_t sa, sv; \/* @todo document this *\/$/;"	m	struct:tcp_pcb
tcp_accepted	net/lwip/include/lwip/tcp.h	83;"	d
tcp_accepted	net/lwip/include/lwip/tcp.h	85;"	d
tcp_ack	net/lwip/include/lwip/tcp.h	509;"	d
tcp_ack_now	net/lwip/include/lwip/tcp.h	517;"	d
tcp_debug_print	net/lwip/include/lwip/tcp.h	550;"	d
tcp_debug_print_flags	net/lwip/include/lwip/tcp.h	551;"	d
tcp_debug_print_pcbs	net/lwip/include/lwip/tcp.h	553;"	d
tcp_debug_print_state	net/lwip/include/lwip/tcp.h	552;"	d
tcp_do_output_nagle	net/lwip/include/lwip/tcp.h	134;"	d
tcp_hdr	net/lwip/include/lwip/tcp.h	/^struct tcp_hdr {$/;"	s
tcp_init	net/lwip/include/lwip/tcp.h	55;"	d
tcp_listen	net/lwip/include/lwip/tcp.h	97;"	d
tcp_listen_pcbs_t	net/lwip/include/lwip/tcp.h	/^union tcp_listen_pcbs_t { \/* List of all TCP PCBs in LISTEN state. *\/$/;"	u
tcp_mss	net/lwip/include/lwip/tcp.h	79;"	d
tcp_output_nagle	net/lwip/include/lwip/tcp.h	138;"	d
tcp_pcb	net/lwip/include/lwip/tcp.h	/^struct tcp_pcb {$/;"	s
tcp_pcb_listen	net/lwip/include/lwip/tcp.h	/^struct tcp_pcb_listen {  $/;"	s
tcp_pcbs_sane	net/lwip/include/lwip/tcp.h	554;"	d
tcp_seg	net/lwip/include/lwip/tcp.h	/^struct tcp_seg {$/;"	s
tcp_sndbuf	net/lwip/include/lwip/tcp.h	80;"	d
tcp_state	net/lwip/include/lwip/tcp.h	/^enum tcp_state {$/;"	g
tcp_timer_needed	net/lwip/include/lwip/tcp.h	558;"	d
tcphdr	net/lwip/include/lwip/tcp.h	/^  struct tcp_hdr *tcphdr;  \/* the TCP header *\/$/;"	m	struct:tcp_seg	typeref:struct:tcp_seg::tcp_hdr
tmr	net/lwip/include/lwip/tcp.h	/^  u32_t tmr;$/;"	m	struct:tcp_pcb
unacked	net/lwip/include/lwip/tcp.h	/^  struct tcp_seg *unacked;  \/* Sent but unacknowledged segments. *\/$/;"	m	struct:tcp_pcb	typeref:struct:tcp_pcb::tcp_seg
unsent	net/lwip/include/lwip/tcp.h	/^  struct tcp_seg *unsent;   \/* Unsent (queued) segments. *\/$/;"	m	struct:tcp_pcb	typeref:struct:tcp_pcb::tcp_seg
LOCK_TCPIP_CORE	net/lwip/include/lwip/tcpip.h	52;"	d
LOCK_TCPIP_CORE	net/lwip/include/lwip/tcpip.h	59;"	d
TCPIP_APIMSG	net/lwip/include/lwip/tcpip.h	54;"	d
TCPIP_APIMSG	net/lwip/include/lwip/tcpip.h	61;"	d
TCPIP_APIMSG_ACK	net/lwip/include/lwip/tcpip.h	55;"	d
TCPIP_APIMSG_ACK	net/lwip/include/lwip/tcpip.h	62;"	d
TCPIP_MSG_API	net/lwip/include/lwip/tcpip.h	/^  TCPIP_MSG_API,$/;"	e	enum:tcpip_msg_type
TCPIP_MSG_CALLBACK	net/lwip/include/lwip/tcpip.h	/^  TCPIP_MSG_CALLBACK,$/;"	e	enum:tcpip_msg_type
TCPIP_MSG_INPKT	net/lwip/include/lwip/tcpip.h	/^  TCPIP_MSG_INPKT,$/;"	e	enum:tcpip_msg_type
TCPIP_MSG_NETIFAPI	net/lwip/include/lwip/tcpip.h	/^  TCPIP_MSG_NETIFAPI,$/;"	e	enum:tcpip_msg_type
TCPIP_MSG_TIMEOUT	net/lwip/include/lwip/tcpip.h	/^  TCPIP_MSG_TIMEOUT$/;"	e	enum:tcpip_msg_type
TCPIP_NETIFAPI	net/lwip/include/lwip/tcpip.h	56;"	d
TCPIP_NETIFAPI	net/lwip/include/lwip/tcpip.h	63;"	d
TCPIP_NETIFAPI_ACK	net/lwip/include/lwip/tcpip.h	57;"	d
TCPIP_NETIFAPI_ACK	net/lwip/include/lwip/tcpip.h	64;"	d
UNLOCK_TCPIP_CORE	net/lwip/include/lwip/tcpip.h	53;"	d
UNLOCK_TCPIP_CORE	net/lwip/include/lwip/tcpip.h	60;"	d
__LWIP_TCPIP_H__	net/lwip/include/lwip/tcpip.h	33;"	d
apimsg	net/lwip/include/lwip/tcpip.h	/^    struct api_msg *apimsg;$/;"	m	union:tcpip_msg::__anon17	typeref:struct:tcpip_msg::__anon17::api_msg
arg	net/lwip/include/lwip/tcpip.h	/^      void *arg;$/;"	m	struct:tcpip_msg::__anon17::__anon20
cb	net/lwip/include/lwip/tcpip.h	/^    } cb;$/;"	m	union:tcpip_msg::__anon17	typeref:struct:tcpip_msg::__anon17::__anon19
ctx	net/lwip/include/lwip/tcpip.h	/^      void *ctx;$/;"	m	struct:tcpip_msg::__anon17::__anon19
f	net/lwip/include/lwip/tcpip.h	/^      void (*f)(void *ctx);$/;"	m	struct:tcpip_msg::__anon17::__anon19
h	net/lwip/include/lwip/tcpip.h	/^      sys_timeout_handler h;$/;"	m	struct:tcpip_msg::__anon17::__anon20
inp	net/lwip/include/lwip/tcpip.h	/^    } inp;$/;"	m	union:tcpip_msg::__anon17	typeref:struct:tcpip_msg::__anon17::__anon18
msecs	net/lwip/include/lwip/tcpip.h	/^      u32_t msecs;$/;"	m	struct:tcpip_msg::__anon17::__anon20
msg	net/lwip/include/lwip/tcpip.h	/^  } msg;$/;"	m	struct:tcpip_msg	typeref:union:tcpip_msg::__anon17
netif	net/lwip/include/lwip/tcpip.h	/^      struct netif *netif;$/;"	m	struct:tcpip_msg::__anon17::__anon18	typeref:struct:tcpip_msg::__anon17::__anon18::netif
netifapimsg	net/lwip/include/lwip/tcpip.h	/^    struct netifapi_msg *netifapimsg;$/;"	m	union:tcpip_msg::__anon17	typeref:struct:tcpip_msg::__anon17::netifapi_msg
p	net/lwip/include/lwip/tcpip.h	/^      struct pbuf *p;$/;"	m	struct:tcpip_msg::__anon17::__anon18	typeref:struct:tcpip_msg::__anon17::__anon18::pbuf
sem	net/lwip/include/lwip/tcpip.h	/^  sys_sem_t *sem;$/;"	m	struct:tcpip_msg
tcpip_callback	net/lwip/include/lwip/tcpip.h	86;"	d
tcpip_msg	net/lwip/include/lwip/tcpip.h	/^struct tcpip_msg {$/;"	s
tcpip_msg_type	net/lwip/include/lwip/tcpip.h	/^enum tcpip_msg_type {$/;"	g
tcpip_untimeout	net/lwip/include/lwip/tcpip.h	93;"	d
tmo	net/lwip/include/lwip/tcpip.h	/^    } tmo;$/;"	m	union:tcpip_msg::__anon17	typeref:struct:tcpip_msg::__anon17::__anon20
type	net/lwip/include/lwip/tcpip.h	/^  enum tcpip_msg_type type;$/;"	m	struct:tcpip_msg	typeref:enum:tcpip_msg::tcpip_msg_type
IP_PCB	net/lwip/include/lwip/udp.h	/^  IP_PCB;$/;"	m	struct:udp_pcb
PACK_STRUCT_STRUCT	net/lwip/include/lwip/udp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:udp_hdr
UDP_FLAGS_CONNECTED	net/lwip/include/lwip/udp.h	68;"	d
UDP_FLAGS_NOCHKSUM	net/lwip/include/lwip/udp.h	66;"	d
UDP_FLAGS_UDPLITE	net/lwip/include/lwip/udp.h	67;"	d
UDP_HLEN	net/lwip/include/lwip/udp.h	48;"	d
__LWIP_UDP_H__	net/lwip/include/lwip/udp.h	33;"	d
chksum_len_rx	net/lwip/include/lwip/udp.h	/^  u16_t chksum_len_rx, chksum_len_tx;$/;"	m	struct:udp_pcb
chksum_len_tx	net/lwip/include/lwip/udp.h	/^  u16_t chksum_len_rx, chksum_len_tx;$/;"	m	struct:udp_pcb
flags	net/lwip/include/lwip/udp.h	/^  u8_t flags;$/;"	m	struct:udp_pcb
local_port	net/lwip/include/lwip/udp.h	/^  u16_t local_port, remote_port;$/;"	m	struct:udp_pcb
multicast_ip	net/lwip/include/lwip/udp.h	/^  struct ip_addr multicast_ip;$/;"	m	struct:udp_pcb	typeref:struct:udp_pcb::ip_addr
next	net/lwip/include/lwip/udp.h	/^  struct udp_pcb *next;$/;"	m	struct:udp_pcb	typeref:struct:udp_pcb::udp_pcb
recv	net/lwip/include/lwip/udp.h	/^  void (* recv)(void *arg, struct udp_pcb *pcb, struct pbuf *p,$/;"	m	struct:udp_pcb
recv_arg	net/lwip/include/lwip/udp.h	/^  void *recv_arg;  $/;"	m	struct:udp_pcb
remote_port	net/lwip/include/lwip/udp.h	/^  u16_t local_port, remote_port;$/;"	m	struct:udp_pcb
udp_debug_print	net/lwip/include/lwip/udp.h	141;"	d
udp_flags	net/lwip/include/lwip/udp.h	130;"	d
udp_hdr	net/lwip/include/lwip/udp.h	/^struct udp_hdr {$/;"	s
udp_init	net/lwip/include/lwip/udp.h	136;"	d
udp_pcb	net/lwip/include/lwip/udp.h	/^struct udp_pcb {$/;"	s
udp_setflags	net/lwip/include/lwip/udp.h	131;"	d
ARP_REPLY	net/lwip/include/netif/etharp.h	132;"	d
ARP_REQUEST	net/lwip/include/netif/etharp.h	131;"	d
ARP_TMR_INTERVAL	net/lwip/include/netif/etharp.h	123;"	d
ETHARP_HWADDR_LEN	net/lwip/include/netif/etharp.h	56;"	d
ETHTYPE_ARP	net/lwip/include/netif/etharp.h	125;"	d
ETHTYPE_IP	net/lwip/include/netif/etharp.h	126;"	d
ETHTYPE_PPPOE	net/lwip/include/netif/etharp.h	128;"	d
ETHTYPE_PPPOEDISC	net/lwip/include/netif/etharp.h	127;"	d
ETH_PAD_SIZE	net/lwip/include/netif/etharp.h	52;"	d
PACK_STRUCT_STRUCT	net/lwip/include/netif/etharp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:eth_addr
PACK_STRUCT_STRUCT	net/lwip/include/netif/etharp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:eth_hdr
PACK_STRUCT_STRUCT	net/lwip/include/netif/etharp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:etharp_hdr
PACK_STRUCT_STRUCT	net/lwip/include/netif/etharp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ethip_hdr
__NETIF_ETHARP_H__	net/lwip/include/netif/etharp.h	36;"	d
eth_addr	net/lwip/include/netif/etharp.h	/^struct eth_addr {$/;"	s
eth_addr_cmp	net/lwip/include/netif/etharp.h	165;"	d
eth_hdr	net/lwip/include/netif/etharp.h	/^struct eth_hdr {$/;"	s
etharp_hdr	net/lwip/include/netif/etharp.h	/^struct etharp_hdr {$/;"	s
etharp_init	net/lwip/include/netif/etharp.h	144;"	d
etharp_q_entry	net/lwip/include/netif/etharp.h	/^struct etharp_q_entry {$/;"	s
ethip_hdr	net/lwip/include/netif/etharp.h	/^struct ethip_hdr {$/;"	s
next	net/lwip/include/netif/etharp.h	/^  struct etharp_q_entry *next;$/;"	m	struct:etharp_q_entry	typeref:struct:etharp_q_entry::etharp_q_entry
p	net/lwip/include/netif/etharp.h	/^  struct pbuf *p;$/;"	m	struct:etharp_q_entry	typeref:struct:etharp_q_entry::pbuf
__NETIF_LOOPIF_H__	net/lwip/include/netif/loopif.h	33;"	d
loopif_poll	net/lwip/include/netif/loopif.h	44;"	d
ETHERMTU	net/lwip/include/netif/ppp_oe.h	135;"	d
PACK_STRUCT_STRUCT	net/lwip/include/netif/ppp_oe.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:pppoehdr
PACK_STRUCT_STRUCT	net/lwip/include/netif/ppp_oe.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:pppoetag
PPPOE_CODE_PADI	net/lwip/include/netif/ppp_oe.h	128;"	d
PPPOE_CODE_PADO	net/lwip/include/netif/ppp_oe.h	129;"	d
PPPOE_CODE_PADR	net/lwip/include/netif/ppp_oe.h	130;"	d
PPPOE_CODE_PADS	net/lwip/include/netif/ppp_oe.h	131;"	d
PPPOE_CODE_PADT	net/lwip/include/netif/ppp_oe.h	132;"	d
PPPOE_HEADERLEN	net/lwip/include/netif/ppp_oe.h	114;"	d
PPPOE_MAXMTU	net/lwip/include/netif/ppp_oe.h	139;"	d
PPPOE_STATE_CLOSING	net/lwip/include/netif/ppp_oe.h	110;"	d
PPPOE_STATE_INITIAL	net/lwip/include/netif/ppp_oe.h	106;"	d
PPPOE_STATE_PADI_SENT	net/lwip/include/netif/ppp_oe.h	107;"	d
PPPOE_STATE_PADO_SENT	net/lwip/include/netif/ppp_oe.h	112;"	d
PPPOE_STATE_PADR_SENT	net/lwip/include/netif/ppp_oe.h	108;"	d
PPPOE_STATE_SESSION	net/lwip/include/netif/ppp_oe.h	109;"	d
PPPOE_TAG_ACCOOKIE	net/lwip/include/netif/ppp_oe.h	121;"	d
PPPOE_TAG_ACNAME	net/lwip/include/netif/ppp_oe.h	119;"	d
PPPOE_TAG_ACSYS_ERR	net/lwip/include/netif/ppp_oe.h	125;"	d
PPPOE_TAG_EOL	net/lwip/include/netif/ppp_oe.h	117;"	d
PPPOE_TAG_GENERIC_ERR	net/lwip/include/netif/ppp_oe.h	126;"	d
PPPOE_TAG_HUNIQUE	net/lwip/include/netif/ppp_oe.h	120;"	d
PPPOE_TAG_RELAYSID	net/lwip/include/netif/ppp_oe.h	123;"	d
PPPOE_TAG_SNAME	net/lwip/include/netif/ppp_oe.h	118;"	d
PPPOE_TAG_SNAME_ERR	net/lwip/include/netif/ppp_oe.h	124;"	d
PPPOE_TAG_VENDOR	net/lwip/include/netif/ppp_oe.h	122;"	d
PPPOE_VERTYPE	net/lwip/include/netif/ppp_oe.h	115;"	d
PPP_OE_H	net/lwip/include/netif/ppp_oe.h	71;"	d
pppoehdr	net/lwip/include/netif/ppp_oe.h	/^struct pppoehdr {$/;"	s
pppoetag	net/lwip/include/netif/ppp_oe.h	/^struct pppoetag {$/;"	s
__NETIF_SLIPIF_H__	net/lwip/include/netif/slipif.h	35;"	d
BYTE_ORDER	net/lwip/jos/arch/cc.h	38;"	d
LWIP_ARCH_CC_H	net/lwip/jos/arch/cc.h	2;"	d
LWIP_PLATFORM_ASSERT	net/lwip/jos/arch/cc.h	35;"	d
LWIP_PLATFORM_DIAG	net/lwip/jos/arch/cc.h	34;"	d
PACK_STRUCT_BEGIN	net/lwip/jos/arch/cc.h	23;"	d
PACK_STRUCT_END	net/lwip/jos/arch/cc.h	24;"	d
PACK_STRUCT_FIELD	net/lwip/jos/arch/cc.h	21;"	d
PACK_STRUCT_STRUCT	net/lwip/jos/arch/cc.h	22;"	d
S16_F	net/lwip/jos/arch/cc.h	26;"	d
S32_F	net/lwip/jos/arch/cc.h	30;"	d
U16_F	net/lwip/jos/arch/cc.h	27;"	d
U32_F	net/lwip/jos/arch/cc.h	31;"	d
X16_F	net/lwip/jos/arch/cc.h	28;"	d
X32_F	net/lwip/jos/arch/cc.h	32;"	d
mem_ptr_t	net/lwip/jos/arch/cc.h	/^typedef uintptr_t mem_ptr_t;$/;"	t
s16_t	net/lwip/jos/arch/cc.h	/^typedef int16_t s16_t;$/;"	t
s32_t	net/lwip/jos/arch/cc.h	/^typedef int32_t s32_t;$/;"	t
s64_t	net/lwip/jos/arch/cc.h	/^typedef int64_t s64_t;$/;"	t
s8_t	net/lwip/jos/arch/cc.h	/^typedef int8_t s8_t;$/;"	t
u16_t	net/lwip/jos/arch/cc.h	/^typedef uint16_t u16_t;$/;"	t
u32_t	net/lwip/jos/arch/cc.h	/^typedef uint32_t u32_t;$/;"	t
u64_t	net/lwip/jos/arch/cc.h	/^typedef uint64_t u64_t;$/;"	t
u8_t	net/lwip/jos/arch/cc.h	/^typedef uint8_t u8_t;$/;"	t
JOS_LONGJMP_GCCATTR	net/lwip/jos/arch/i386/setjmp.h	6;"	d
JOS_MACHINE_SETJMP_H	net/lwip/jos/arch/i386/setjmp.h	2;"	d
jb_ebp	net/lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_ebp;$/;"	m	struct:jos_jmp_buf
jb_ebx	net/lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_ebx;$/;"	m	struct:jos_jmp_buf
jb_edi	net/lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_edi;$/;"	m	struct:jos_jmp_buf
jb_eip	net/lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_eip;$/;"	m	struct:jos_jmp_buf
jb_esi	net/lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_esi;$/;"	m	struct:jos_jmp_buf
jb_esp	net/lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_esp;$/;"	m	struct:jos_jmp_buf
jos_jmp_buf	net/lwip/jos/arch/i386/setjmp.h	/^struct jos_jmp_buf {$/;"	s
ENTRY	net/lwip/jos/arch/longjmp.S	/^#define ENTRY(x) \\$/;"	d
_ALIGN_TEXT	net/lwip/jos/arch/longjmp.S	/^#define _ALIGN_TEXT .align 16, 0x90$/;"	d
LWIP_ARCH_PERF_H	net/lwip/jos/arch/perf.h	2;"	d
PERF_START	net/lwip/jos/arch/perf.h	4;"	d
PERF_STOP	net/lwip/jos/arch/perf.h	5;"	d
LWIP_PROVIDE_ERRNO	net/lwip/jos/arch/perror.c	2;"	d	file:
e2s	net/lwip/jos/arch/perror.c	/^e2s(int err) {$/;"	f
perror	net/lwip/jos/arch/perror.c	/^perror(const char *s) {$/;"	f
sys_errlist	net/lwip/jos/arch/perror.c	/^const char *sys_errlist[] = {$/;"	v
JOS_INC_PERROR_H	net/lwip/jos/arch/perror.h	2;"	d
LIST_EMPTY	net/lwip/jos/arch/queue.h	142;"	d
LIST_ENTRY	net/lwip/jos/arch/queue.h	129;"	d
LIST_FIRST	net/lwip/jos/arch/queue.h	147;"	d
LIST_FOREACH	net/lwip/jos/arch/queue.h	160;"	d
LIST_HEAD	net/lwip/jos/arch/queue.h	109;"	d
LIST_HEAD_INITIALIZER	net/lwip/jos/arch/queue.h	118;"	d
LIST_INIT	net/lwip/jos/arch/queue.h	168;"	d
LIST_INSERT_AFTER	net/lwip/jos/arch/queue.h	177;"	d
LIST_INSERT_BEFORE	net/lwip/jos/arch/queue.h	190;"	d
LIST_INSERT_HEAD	net/lwip/jos/arch/queue.h	201;"	d
LIST_NEXT	net/lwip/jos/arch/queue.h	153;"	d
LIST_REMOVE	net/lwip/jos/arch/queue.h	212;"	d
LWIP_ARCH_QUEUE_H	net/lwip/jos/arch/queue.h	36;"	d
JOS_INC_SETJMP_H	net/lwip/jos/arch/setjmp.h	2;"	d
MBOXSLOTS	net/lwip/jos/arch/sys_arch.c	14;"	d	file:
NMBOX	net/lwip/jos/arch/sys_arch.c	13;"	d	file:
NSEM	net/lwip/jos/arch/sys_arch.c	12;"	d	file:
arg	net/lwip/jos/arch/sys_arch.c	/^    void *arg;$/;"	m	struct:lwip_thread	file:
counter	net/lwip/jos/arch/sys_arch.c	/^	    uint16_t counter;$/;"	m	struct:sys_sem_entry::__anon8::__anon9	file:
debug	net/lwip/jos/arch/sys_arch.c	10;"	d	file:
free_msg	net/lwip/jos/arch/sys_arch.c	/^    sys_sem_t free_msg;$/;"	m	struct:sys_mbox_entry	file:
freed	net/lwip/jos/arch/sys_arch.c	/^    int freed;$/;"	m	struct:sys_mbox_entry	file:
freed	net/lwip/jos/arch/sys_arch.c	/^    int freed;$/;"	m	struct:sys_sem_entry	file:
func	net/lwip/jos/arch/sys_arch.c	/^    void (*func)(void *arg);$/;"	m	struct:lwip_thread	file:
gen	net/lwip/jos/arch/sys_arch.c	/^    int gen;$/;"	m	struct:sys_sem_entry	file:
head	net/lwip/jos/arch/sys_arch.c	/^    int head, nextq;$/;"	m	struct:sys_mbox_entry	file:
lwip_core_lock	net/lwip/jos/arch/sys_arch.c	/^lwip_core_lock(void)$/;"	f
lwip_core_unlock	net/lwip/jos/arch/sys_arch.c	/^lwip_core_unlock(void)$/;"	f
lwip_thread	net/lwip/jos/arch/sys_arch.c	/^struct lwip_thread {$/;"	s	file:
lwip_thread_entry	net/lwip/jos/arch/sys_arch.c	/^lwip_thread_entry(uint32_t arg)$/;"	f	file:
mboxes	net/lwip/jos/arch/sys_arch.c	/^static struct sys_mbox_entry mboxes[NMBOX];$/;"	v	typeref:struct:sys_mbox_entry	file:
msg	net/lwip/jos/arch/sys_arch.c	/^    void *msg[MBOXSLOTS];$/;"	m	struct:sys_mbox_entry	file:
nextq	net/lwip/jos/arch/sys_arch.c	/^    int head, nextq;$/;"	m	struct:sys_mbox_entry	file:
queued_msg	net/lwip/jos/arch/sys_arch.c	/^    sys_sem_t queued_msg;$/;"	m	struct:sys_mbox_entry	file:
sems	net/lwip/jos/arch/sys_arch.c	/^static struct sys_sem_entry sems[NSEM];$/;"	v	typeref:struct:sys_sem_entry	file:
sys_arch_mbox_fetch	net/lwip/jos/arch/sys_arch.c	/^sys_arch_mbox_fetch(sys_mbox_t mbox, void **msg, u32_t tm_msec)$/;"	f
sys_arch_mbox_tryfetch	net/lwip/jos/arch/sys_arch.c	/^sys_arch_mbox_tryfetch(sys_mbox_t mbox, void **msg)$/;"	f
sys_arch_sem_wait	net/lwip/jos/arch/sys_arch.c	/^sys_arch_sem_wait(sys_sem_t sem, u32_t tm_msec)$/;"	f
sys_arch_timeouts	net/lwip/jos/arch/sys_arch.c	/^sys_arch_timeouts(void)$/;"	f
sys_init	net/lwip/jos/arch/sys_arch.c	/^sys_init(void)$/;"	f
sys_mbox_entry	net/lwip/jos/arch/sys_arch.c	/^struct sys_mbox_entry {$/;"	s	file:
sys_mbox_free	net/lwip/jos/arch/sys_arch.c	/^sys_mbox_free(sys_mbox_t mbox)$/;"	f
sys_mbox_new	net/lwip/jos/arch/sys_arch.c	/^sys_mbox_new(int size)$/;"	f
sys_mbox_post	net/lwip/jos/arch/sys_arch.c	/^sys_mbox_post(sys_mbox_t mbox, void *msg)$/;"	f
sys_mbox_trypost	net/lwip/jos/arch/sys_arch.c	/^sys_mbox_trypost(sys_mbox_t mbox, void *msg)$/;"	f
sys_sem_entry	net/lwip/jos/arch/sys_arch.c	/^struct sys_sem_entry {$/;"	s	file:
sys_sem_free	net/lwip/jos/arch/sys_arch.c	/^sys_sem_free(sys_sem_t sem)$/;"	f
sys_sem_new	net/lwip/jos/arch/sys_arch.c	/^sys_sem_new(u8_t count)$/;"	f
sys_sem_signal	net/lwip/jos/arch/sys_arch.c	/^sys_sem_signal(sys_sem_t sem)$/;"	f
sys_thread	net/lwip/jos/arch/sys_arch.c	/^struct sys_thread {$/;"	s	file:
sys_thread_new	net/lwip/jos/arch/sys_arch.c	/^sys_thread_new(char *name, void (* thread)(void *arg), void *arg, $/;"	f
thread_hash_size	net/lwip/jos/arch/sys_arch.c	/^enum { thread_hash_size = 257 };$/;"	e	enum:__anon10	file:
tid	net/lwip/jos/arch/sys_arch.c	/^    thread_id_t tid;$/;"	m	struct:sys_thread	file:
timeout_cleanup	net/lwip/jos/arch/sys_arch.c	/^timeout_cleanup(thread_id_t tid)$/;"	f	file:
tmo	net/lwip/jos/arch/sys_arch.c	/^    struct sys_timeouts tmo;$/;"	m	struct:sys_thread	typeref:struct:sys_thread::sys_timeouts	file:
v	net/lwip/jos/arch/sys_arch.c	/^	uint32_t v;$/;"	m	union:sys_sem_entry::__anon8	file:
waiters	net/lwip/jos/arch/sys_arch.c	/^	    uint16_t waiters;$/;"	m	struct:sys_sem_entry::__anon8::__anon9	file:
LWIP_ARCH_SYS_ARCH_H	net/lwip/jos/arch/sys_arch.h	2;"	d
SYS_ARCH_DECL_PROTECT	net/lwip/jos/arch/sys_arch.h	17;"	d
SYS_ARCH_NOWAIT	net/lwip/jos/arch/sys_arch.h	21;"	d
SYS_ARCH_PROTECT	net/lwip/jos/arch/sys_arch.h	18;"	d
SYS_ARCH_UNPROTECT	net/lwip/jos/arch/sys_arch.h	19;"	d
SYS_MBOX_NULL	net/lwip/jos/arch/sys_arch.h	10;"	d
SYS_SEM_NULL	net/lwip/jos/arch/sys_arch.h	11;"	d
sys_mbox_t	net/lwip/jos/arch/sys_arch.h	/^typedef int sys_mbox_t;$/;"	t
sys_sem_t	net/lwip/jos/arch/sys_arch.h	/^typedef	int sys_sem_t;$/;"	t
sys_thread_t	net/lwip/jos/arch/sys_arch.h	/^typedef int sys_thread_t;$/;"	t
alloc_tid	net/lwip/jos/arch/thread.c	/^alloc_tid(void) {$/;"	f	file:
cur_tc	net/lwip/jos/arch/thread.c	/^static struct thread_context *cur_tc;$/;"	v	typeref:struct:thread_context	file:
kill_queue	net/lwip/jos/arch/thread.c	/^static struct thread_queue kill_queue;$/;"	v	typeref:struct:thread_queue	file:
max_tid	net/lwip/jos/arch/thread.c	/^static thread_id_t max_tid;$/;"	v	file:
print_jb	net/lwip/jos/arch/thread.c	/^print_jb(struct thread_context *tc) {$/;"	f	file:
thread_clean	net/lwip/jos/arch/thread.c	/^thread_clean(struct thread_context *tc) {$/;"	f	file:
thread_create	net/lwip/jos/arch/thread.c	/^thread_create(thread_id_t *tid, const char *name, $/;"	f
thread_entry	net/lwip/jos/arch/thread.c	/^thread_entry(void) {$/;"	f	file:
thread_halt	net/lwip/jos/arch/thread.c	/^thread_halt() {$/;"	f
thread_id	net/lwip/jos/arch/thread.c	/^thread_id(void) {$/;"	f
thread_init	net/lwip/jos/arch/thread.c	/^thread_init(void) {$/;"	f
thread_onhalt	net/lwip/jos/arch/thread.c	/^thread_onhalt(void (*fun)(thread_id_t)) {$/;"	f
thread_queue	net/lwip/jos/arch/thread.c	/^static struct thread_queue thread_queue;$/;"	v	typeref:struct:thread_queue	file:
thread_set_name	net/lwip/jos/arch/thread.c	/^thread_set_name(struct thread_context *tc, const char *name)$/;"	f	file:
thread_wait	net/lwip/jos/arch/thread.c	/^thread_wait(volatile uint32_t *addr, uint32_t val, uint32_t msec) {$/;"	f
thread_wakeup	net/lwip/jos/arch/thread.c	/^thread_wakeup(volatile uint32_t *addr) {$/;"	f
thread_wakeups_pending	net/lwip/jos/arch/thread.c	/^thread_wakeups_pending(void)$/;"	f
thread_yield	net/lwip/jos/arch/thread.c	/^thread_yield(void) {$/;"	f
LWIP_ARCH_THREAD_H	net/lwip/jos/arch/thread.h	2;"	d
thread_id_t	net/lwip/jos/arch/thread.h	/^typedef uint32_t thread_id_t;$/;"	t
JOS_INC_THREADQ_H	net/lwip/jos/arch/threadq.h	2;"	d
THREAD_NUM_ONHALT	net/lwip/jos/arch/threadq.h	7;"	d
name_size	net/lwip/jos/arch/threadq.h	/^enum { name_size = 32 };$/;"	e	enum:__anon11
stack_size	net/lwip/jos/arch/threadq.h	/^enum { stack_size = PGSIZE };$/;"	e	enum:__anon12
tc_arg	net/lwip/jos/arch/threadq.h	/^    uint32_t		tc_arg;$/;"	m	struct:thread_context
tc_entry	net/lwip/jos/arch/threadq.h	/^    void		(*tc_entry)(uint32_t);$/;"	m	struct:thread_context
tc_jb	net/lwip/jos/arch/threadq.h	/^    struct jos_jmp_buf	tc_jb;$/;"	m	struct:thread_context	typeref:struct:thread_context::jos_jmp_buf
tc_name	net/lwip/jos/arch/threadq.h	/^    char 		tc_name[name_size];$/;"	m	struct:thread_context
tc_nonhalt	net/lwip/jos/arch/threadq.h	/^    int			tc_nonhalt;$/;"	m	struct:thread_context
tc_onhalt	net/lwip/jos/arch/threadq.h	/^    void		(*tc_onhalt[THREAD_NUM_ONHALT])(thread_id_t);$/;"	m	struct:thread_context
tc_queue_link	net/lwip/jos/arch/threadq.h	/^    struct thread_context *tc_queue_link;$/;"	m	struct:thread_context	typeref:struct:thread_context::thread_context
tc_stack_bottom	net/lwip/jos/arch/threadq.h	/^    void		*tc_stack_bottom;$/;"	m	struct:thread_context
tc_tid	net/lwip/jos/arch/threadq.h	/^    thread_id_t		tc_tid;$/;"	m	struct:thread_context
tc_wait_addr	net/lwip/jos/arch/threadq.h	/^    volatile uint32_t	*tc_wait_addr;$/;"	m	struct:thread_context
tc_wakeup	net/lwip/jos/arch/threadq.h	/^    volatile char	tc_wakeup;$/;"	m	struct:thread_context
thread_context	net/lwip/jos/arch/threadq.h	/^struct thread_context {$/;"	s
thread_queue	net/lwip/jos/arch/threadq.h	/^struct thread_queue$/;"	s
threadq_init	net/lwip/jos/arch/threadq.h	/^threadq_init(struct thread_queue *tq)$/;"	f
threadq_pop	net/lwip/jos/arch/threadq.h	/^threadq_pop(struct thread_queue *tq)$/;"	f
threadq_push	net/lwip/jos/arch/threadq.h	/^threadq_push(struct thread_queue *tq, struct thread_context *tc)$/;"	f
tq_first	net/lwip/jos/arch/threadq.h	/^    struct thread_context *tq_first;$/;"	m	struct:thread_queue	typeref:struct:thread_queue::thread_context
tq_last	net/lwip/jos/arch/threadq.h	/^    struct thread_context *tq_last;$/;"	m	struct:thread_queue	typeref:struct:thread_queue::thread_context
PKTMAP	net/lwip/jos/jif/jif.c	47;"	d	file:
envid	net/lwip/jos/jif/jif.c	/^    envid_t envid;$/;"	m	struct:jif	file:
ethaddr	net/lwip/jos/jif/jif.c	/^    struct eth_addr *ethaddr;$/;"	m	struct:jif	typeref:struct:jif::eth_addr	file:
jif	net/lwip/jos/jif/jif.c	/^struct jif {$/;"	s	file:
jif_init	net/lwip/jos/jif/jif.c	/^jif_init(struct netif *netif)$/;"	f
jif_input	net/lwip/jos/jif/jif.c	/^jif_input(struct netif *netif, void *va)$/;"	f
jif_output	net/lwip/jos/jif/jif.c	/^jif_output(struct netif *netif, struct pbuf *p,$/;"	f	file:
low_level_init	net/lwip/jos/jif/jif.c	/^low_level_init(struct netif *netif)$/;"	f	file:
low_level_input	net/lwip/jos/jif/jif.c	/^low_level_input(void *va)$/;"	f	file:
low_level_output	net/lwip/jos/jif/jif.c	/^low_level_output(struct netif *netif, struct pbuf *p)$/;"	f	file:
DBG_MIN_LEVEL	net/lwip/jos/lwipopts.h	57;"	d
ERRNO	net/lwip/jos/lwipopts.h	61;"	d
JOS_LWIP_LWIPOPTS_H	net/lwip/jos/lwipopts.h	2;"	d
LWIP_COMPAT_SOCKETS	net/lwip/jos/lwipopts.h	16;"	d
LWIP_DBG_MIN_LEVEL	net/lwip/jos/lwipopts.h	58;"	d
LWIP_DEBUG	net/lwip/jos/lwipopts.h	49;"	d
LWIP_DHCP	net/lwip/jos/lwipopts.h	15;"	d
LWIP_PROVIDE_ERRNO	net/lwip/jos/lwipopts.h	18;"	d
LWIP_STATS	net/lwip/jos/lwipopts.h	13;"	d
LWIP_STATS_DISPLAY	net/lwip/jos/lwipopts.h	14;"	d
MEMP_NUM_NETBUF	net/lwip/jos/lwipopts.h	30;"	d
MEMP_NUM_NETCONN	net/lwip/jos/lwipopts.h	31;"	d
MEMP_NUM_PBUF	net/lwip/jos/lwipopts.h	25;"	d
MEMP_NUM_SYS_TIMEOUT	net/lwip/jos/lwipopts.h	32;"	d
MEMP_NUM_TCP_PCB	net/lwip/jos/lwipopts.h	27;"	d
MEMP_NUM_TCP_PCB_LISTEN	net/lwip/jos/lwipopts.h	28;"	d
MEMP_NUM_TCP_SEG	net/lwip/jos/lwipopts.h	29;"	d
MEMP_NUM_UDP_PCB	net/lwip/jos/lwipopts.h	26;"	d
MEMP_SANITY_CHECK	net/lwip/jos/lwipopts.h	59;"	d
MEM_ALIGNMENT	net/lwip/jos/lwipopts.h	23;"	d
MEM_SIZE	net/lwip/jos/lwipopts.h	35;"	d
PBUF_POOL_BUFSIZE	net/lwip/jos/lwipopts.h	38;"	d
PBUF_POOL_SIZE	net/lwip/jos/lwipopts.h	37;"	d
PER_TCP_PCB_BUFFER	net/lwip/jos/lwipopts.h	34;"	d
TCP_MSS	net/lwip/jos/lwipopts.h	40;"	d
TCP_SND_BUF	net/lwip/jos/lwipopts.h	42;"	d
TCP_SND_QUEUELEN	net/lwip/jos/lwipopts.h	45;"	d
TCP_WND	net/lwip/jos/lwipopts.h	41;"	d
ARPH_HWLEN	net/lwip/netif/etharp.c	81;"	d	file:
ARPH_HWLEN_SET	net/lwip/netif/etharp.c	84;"	d	file:
ARPH_PROTOLEN	net/lwip/netif/etharp.c	82;"	d	file:
ARPH_PROTOLEN_SET	net/lwip/netif/etharp.c	85;"	d	file:
ARP_MAXAGE	net/lwip/netif/etharp.c	69;"	d	file:
ARP_MAXPENDING	net/lwip/netif/etharp.c	77;"	d	file:
ETHARP_FIND_ONLY	net/lwip/netif/etharp.c	118;"	d	file:
ETHARP_STATE_EMPTY	net/lwip/netif/etharp.c	/^  ETHARP_STATE_EMPTY = 0,$/;"	e	enum:etharp_state	file:
ETHARP_STATE_PENDING	net/lwip/netif/etharp.c	/^  ETHARP_STATE_PENDING,$/;"	e	enum:etharp_state	file:
ETHARP_STATE_STABLE	net/lwip/netif/etharp.c	/^  ETHARP_STATE_STABLE$/;"	e	enum:etharp_state	file:
ETHARP_TRY_HARD	net/lwip/netif/etharp.c	117;"	d	file:
HWTYPE_ETHERNET	net/lwip/netif/etharp.c	79;"	d	file:
NETIF_SET_HINT	net/lwip/netif/etharp.c	121;"	d	file:
arp_table	net/lwip/netif/etharp.c	/^static struct etharp_entry arp_table[ARP_TABLE_SIZE];$/;"	v	typeref:struct:etharp_entry	file:
ctime	net/lwip/netif/etharp.c	/^  u8_t ctime;$/;"	m	struct:etharp_entry	file:
ethaddr	net/lwip/netif/etharp.c	/^  struct eth_addr ethaddr;$/;"	m	struct:etharp_entry	typeref:struct:etharp_entry::eth_addr	file:
etharp_arp_input	net/lwip/netif/etharp.c	/^etharp_arp_input(struct netif *netif, struct eth_addr *ethaddr, struct pbuf *p)$/;"	f
etharp_cached_entry	net/lwip/netif/etharp.c	/^static u8_t etharp_cached_entry;$/;"	v	file:
etharp_entry	net/lwip/netif/etharp.c	/^struct etharp_entry {$/;"	s	file:
etharp_find_addr	net/lwip/netif/etharp.c	/^etharp_find_addr(struct netif *netif, struct ip_addr *ipaddr,$/;"	f
etharp_ip_input	net/lwip/netif/etharp.c	/^etharp_ip_input(struct netif *netif, struct pbuf *p)$/;"	f
etharp_output	net/lwip/netif/etharp.c	/^etharp_output(struct netif *netif, struct pbuf *q, struct ip_addr *ipaddr)$/;"	f
etharp_query	net/lwip/netif/etharp.c	/^etharp_query(struct netif *netif, struct ip_addr *ipaddr, struct pbuf *q)$/;"	f
etharp_raw	net/lwip/netif/etharp.c	/^etharp_raw(struct netif *netif, const struct eth_addr *ethsrc_addr,$/;"	f	file:
etharp_request	net/lwip/netif/etharp.c	/^etharp_request(struct netif *netif, struct ip_addr *ipaddr)$/;"	f
etharp_send_ip	net/lwip/netif/etharp.c	/^etharp_send_ip(struct netif *netif, struct pbuf *p, struct eth_addr *src, struct eth_addr *dst)$/;"	f	file:
etharp_state	net/lwip/netif/etharp.c	/^enum etharp_state {$/;"	g	file:
etharp_tmr	net/lwip/netif/etharp.c	/^etharp_tmr(void)$/;"	f
ethbroadcast	net/lwip/netif/etharp.c	/^const struct eth_addr ethbroadcast = {{0xff,0xff,0xff,0xff,0xff,0xff}};$/;"	v	typeref:struct:eth_addr
ethernet_input	net/lwip/netif/etharp.c	/^ethernet_input(struct pbuf *p, struct netif *netif)$/;"	f
ethzero	net/lwip/netif/etharp.c	/^const struct eth_addr ethzero = {{0,0,0,0,0,0}};$/;"	v	typeref:struct:eth_addr
find_entry	net/lwip/netif/etharp.c	/^find_entry(struct ip_addr *ipaddr, u8_t flags, struct netif *netif)$/;"	f	file:
free_etharp_q	net/lwip/netif/etharp.c	/^free_etharp_q(struct etharp_q_entry *q)$/;"	f	file:
ipaddr	net/lwip/netif/etharp.c	/^  struct ip_addr ipaddr;$/;"	m	struct:etharp_entry	typeref:struct:etharp_entry::ip_addr	file:
netif	net/lwip/netif/etharp.c	/^  struct netif *netif;$/;"	m	struct:etharp_entry	typeref:struct:etharp_entry::netif	file:
q	net/lwip/netif/etharp.c	/^  struct etharp_q_entry *q;$/;"	m	struct:etharp_entry	typeref:struct:etharp_entry::etharp_q_entry	file:
state	net/lwip/netif/etharp.c	/^  enum etharp_state state;$/;"	m	struct:etharp_entry	typeref:enum:etharp_entry::etharp_state	file:
update_arp_entry	net/lwip/netif/etharp.c	/^update_arp_entry(struct netif *netif, struct ip_addr *ipaddr, struct eth_addr *ethaddr, u8_t flags)$/;"	f	file:
loopif_init	net/lwip/netif/loopif.c	/^loopif_init(struct netif *netif)$/;"	f
CHAP_PEER	net/lwip/netif/ppp/auth.c	93;"	d	file:
CHAP_WITHPEER	net/lwip/netif/ppp/auth.c	92;"	d	file:
PAP_PEER	net/lwip/netif/ppp/auth.c	91;"	d	file:
PAP_WITHPEER	net/lwip/netif/ppp/auth.c	90;"	d	file:
addresses	net/lwip/netif/ppp/auth.c	/^static struct wordlist *addresses[NUM_PPP];$/;"	v	typeref:struct:wordlist	file:
auth_ip_addr	net/lwip/netif/ppp/auth.c	/^auth_ip_addr(int unit, u32_t addr)$/;"	f
auth_peer_fail	net/lwip/netif/ppp/auth.c	/^auth_peer_fail(int unit, u16_t protocol)$/;"	f
auth_peer_success	net/lwip/netif/ppp/auth.c	/^auth_peer_success(int unit, u16_t protocol, char *name, int namelen)$/;"	f
auth_pending	net/lwip/netif/ppp/auth.c	/^static int auth_pending[NUM_PPP];$/;"	v	file:
auth_reset	net/lwip/netif/ppp/auth.c	/^auth_reset(int unit)$/;"	f
auth_withpeer_fail	net/lwip/netif/ppp/auth.c	/^auth_withpeer_fail(int unit, u16_t protocol)$/;"	f
auth_withpeer_success	net/lwip/netif/ppp/auth.c	/^auth_withpeer_success(int unit, u16_t protocol)$/;"	f
bad_ip_adrs	net/lwip/netif/ppp/auth.c	/^bad_ip_adrs(u32_t addr)$/;"	f
check_idle	net/lwip/netif/ppp/auth.c	/^check_idle(void *arg)$/;"	f	file:
check_passwd	net/lwip/netif/ppp/auth.c	/^check_passwd( int unit, char *auser, int userlen, char *apasswd, int passwdlen, char **msg, int *msglen)$/;"	f
connect_time_expired	net/lwip/netif/ppp/auth.c	/^connect_time_expired(void *arg)$/;"	f	file:
did_authup	net/lwip/netif/ppp/auth.c	/^static int did_authup;$/;"	v	file:
get_pap_passwd	net/lwip/netif/ppp/auth.c	/^get_pap_passwd(int unit, char *user, char *passwd)$/;"	f	file:
get_secret	net/lwip/netif/ppp/auth.c	/^int get_secret( int unit, char *client, char *server, char *secret, int *secret_len, int save_addrs)$/;"	f
have_chap_secret	net/lwip/netif/ppp/auth.c	/^have_chap_secret(char *client, char *server, u32_t remote)$/;"	f	file:
have_pap_secret	net/lwip/netif/ppp/auth.c	/^have_pap_secret(void)$/;"	f	file:
ip_addr_check	net/lwip/netif/ppp/auth.c	/^ip_addr_check(u32_t addr, struct wordlist *addrs)$/;"	f	file:
link_down	net/lwip/netif/ppp/auth.c	/^link_down(int unit)$/;"	f
link_established	net/lwip/netif/ppp/auth.c	/^link_established(int unit)$/;"	f
link_required	net/lwip/netif/ppp/auth.c	/^link_required(int unit)$/;"	f
link_terminated	net/lwip/netif/ppp/auth.c	/^link_terminated(int unit)$/;"	f
logged_in	net/lwip/netif/ppp/auth.c	/^static int logged_in;$/;"	v	file:
logout	net/lwip/netif/ppp/auth.c	/^logout(void)$/;"	f	file:
network_phase	net/lwip/netif/ppp/auth.c	/^network_phase(int unit)$/;"	f	file:
next	net/lwip/netif/ppp/auth.c	/^  struct wordlist *next;$/;"	m	struct:wordlist	typeref:struct:wordlist::wordlist	file:
np_down	net/lwip/netif/ppp/auth.c	/^np_down(int unit, u16_t proto)$/;"	f
np_finished	net/lwip/netif/ppp/auth.c	/^np_finished(int unit, u16_t proto)$/;"	f
np_up	net/lwip/netif/ppp/auth.c	/^np_up(int unit, u16_t proto)$/;"	f
null_login	net/lwip/netif/ppp/auth.c	/^null_login(int unit)$/;"	f	file:
num_np_open	net/lwip/netif/ppp/auth.c	/^static int num_np_open;$/;"	v	file:
num_np_up	net/lwip/netif/ppp/auth.c	/^static int num_np_up;$/;"	v	file:
passwd_from_file	net/lwip/netif/ppp/auth.c	/^static int passwd_from_file;$/;"	v	file:
peer_authname	net/lwip/netif/ppp/auth.c	/^static char peer_authname[MAXNAMELEN];$/;"	v	file:
word	net/lwip/netif/ppp/auth.c	/^  char        word[1];$/;"	m	struct:wordlist	file:
wordlist	net/lwip/netif/ppp/auth.c	/^struct wordlist {$/;"	s	file:
AUTH_H	net/lwip/netif/ppp/auth.h	54;"	d
ChapAuthPeer	net/lwip/netif/ppp/chap.c	/^ChapAuthPeer(int unit, char *our_name, int digest)$/;"	f
ChapAuthWithPeer	net/lwip/netif/ppp/chap.c	/^ChapAuthWithPeer(int unit, char *our_name, int digest)$/;"	f
ChapChallengeTimeout	net/lwip/netif/ppp/chap.c	/^ChapChallengeTimeout(void *arg)$/;"	f	file:
ChapGenChallenge	net/lwip/netif/ppp/chap.c	/^ChapGenChallenge(chap_state *cstate)$/;"	f	file:
ChapInit	net/lwip/netif/ppp/chap.c	/^ChapInit(int unit)$/;"	f	file:
ChapInput	net/lwip/netif/ppp/chap.c	/^ChapInput(int unit, u_char *inpacket, int packet_len)$/;"	f	file:
ChapLowerDown	net/lwip/netif/ppp/chap.c	/^ChapLowerDown(int unit)$/;"	f	file:
ChapLowerUp	net/lwip/netif/ppp/chap.c	/^ChapLowerUp(int unit)$/;"	f	file:
ChapProtocolReject	net/lwip/netif/ppp/chap.c	/^ChapProtocolReject(int unit)$/;"	f	file:
ChapReceiveChallenge	net/lwip/netif/ppp/chap.c	/^ChapReceiveChallenge(chap_state *cstate, u_char *inp, int id, int len)$/;"	f	file:
ChapReceiveFailure	net/lwip/netif/ppp/chap.c	/^ChapReceiveFailure(chap_state *cstate, u_char *inp, u_char id, int len)$/;"	f	file:
ChapReceiveResponse	net/lwip/netif/ppp/chap.c	/^ChapReceiveResponse(chap_state *cstate, u_char *inp, int id, int len)$/;"	f	file:
ChapReceiveSuccess	net/lwip/netif/ppp/chap.c	/^ChapReceiveSuccess(chap_state *cstate, u_char *inp, u_char id, int len)$/;"	f	file:
ChapRechallenge	net/lwip/netif/ppp/chap.c	/^ChapRechallenge(void *arg)$/;"	f	file:
ChapResponseTimeout	net/lwip/netif/ppp/chap.c	/^ChapResponseTimeout(void *arg)$/;"	f	file:
ChapSendChallenge	net/lwip/netif/ppp/chap.c	/^ChapSendChallenge(chap_state *cstate)$/;"	f	file:
ChapSendResponse	net/lwip/netif/ppp/chap.c	/^ChapSendResponse(chap_state *cstate)$/;"	f	file:
ChapSendStatus	net/lwip/netif/ppp/chap.c	/^ChapSendStatus(chap_state *cstate, int code)$/;"	f	file:
chap	net/lwip/netif/ppp/chap.c	/^chap_state chap[NUM_PPP]; \/* CHAP state; one for each unit *\/$/;"	v
chap_protent	net/lwip/netif/ppp/chap.c	/^struct protent chap_protent = {$/;"	v	typeref:struct:protent
CHAPCS_CLOSED	net/lwip/netif/ppp/chap.h	103;"	d
CHAPCS_INITIAL	net/lwip/netif/ppp/chap.h	102;"	d
CHAPCS_LISTEN	net/lwip/netif/ppp/chap.h	105;"	d
CHAPCS_OPEN	net/lwip/netif/ppp/chap.h	107;"	d
CHAPCS_PENDING	net/lwip/netif/ppp/chap.h	104;"	d
CHAPCS_RESPONSE	net/lwip/netif/ppp/chap.h	106;"	d
CHAPSS_BADAUTH	net/lwip/netif/ppp/chap.h	118;"	d
CHAPSS_CLOSED	net/lwip/netif/ppp/chap.h	113;"	d
CHAPSS_INITIAL	net/lwip/netif/ppp/chap.h	112;"	d
CHAPSS_INITIAL_CHAL	net/lwip/netif/ppp/chap.h	115;"	d
CHAPSS_OPEN	net/lwip/netif/ppp/chap.h	116;"	d
CHAPSS_PENDING	net/lwip/netif/ppp/chap.h	114;"	d
CHAPSS_RECHALLENGE	net/lwip/netif/ppp/chap.h	117;"	d
CHAP_CHALLENGE	net/lwip/netif/ppp/chap.h	87;"	d
CHAP_DIGEST_MD5	net/lwip/netif/ppp/chap.h	82;"	d
CHAP_FAILURE	net/lwip/netif/ppp/chap.h	90;"	d
CHAP_H	net/lwip/netif/ppp/chap.h	69;"	d
CHAP_HEADERLEN	net/lwip/netif/ppp/chap.h	76;"	d
CHAP_MICROSOFT	net/lwip/netif/ppp/chap.h	84;"	d
CHAP_RESPONSE	net/lwip/netif/ppp/chap.h	88;"	d
CHAP_SUCCESS	net/lwip/netif/ppp/chap.h	89;"	d
MAX_CHALLENGE_LENGTH	net/lwip/netif/ppp/chap.h	96;"	d
MAX_RESPONSE_LENGTH	net/lwip/netif/ppp/chap.h	97;"	d
MD5_SIGNATURE_SIZE	net/lwip/netif/ppp/chap.h	83;"	d
MIN_CHALLENGE_LENGTH	net/lwip/netif/ppp/chap.h	95;"	d
MS_CHAP_RESPONSE_LEN	net/lwip/netif/ppp/chap.h	85;"	d
chal_id	net/lwip/netif/ppp/chap.h	/^  u_char chal_id;                         \/* ID of last challenge *\/$/;"	m	struct:chap_state
chal_interval	net/lwip/netif/ppp/chap.h	/^  int chal_interval;                      \/* Time until we challenge peer again *\/$/;"	m	struct:chap_state
chal_len	net/lwip/netif/ppp/chap.h	/^  u_char chal_len;                        \/* challenge length *\/$/;"	m	struct:chap_state
chal_name	net/lwip/netif/ppp/chap.h	/^  char *chal_name;                        \/* Our name to use with challenge *\/$/;"	m	struct:chap_state
chal_transmits	net/lwip/netif/ppp/chap.h	/^  int chal_transmits;                     \/* Number of transmissions of challenge *\/$/;"	m	struct:chap_state
chal_type	net/lwip/netif/ppp/chap.h	/^  u_char chal_type;                       \/* hash algorithm for challenges *\/$/;"	m	struct:chap_state
challenge	net/lwip/netif/ppp/chap.h	/^  u_char challenge[MAX_CHALLENGE_LENGTH]; \/* last challenge string sent *\/$/;"	m	struct:chap_state
chap_state	net/lwip/netif/ppp/chap.h	/^typedef struct chap_state {$/;"	s
chap_state	net/lwip/netif/ppp/chap.h	/^} chap_state;$/;"	t	typeref:struct:chap_state
clientstate	net/lwip/netif/ppp/chap.h	/^  int clientstate;                        \/* Client state *\/$/;"	m	struct:chap_state
id	net/lwip/netif/ppp/chap.h	/^  u_char id;                              \/* Current id *\/$/;"	m	struct:chap_state
max_transmits	net/lwip/netif/ppp/chap.h	/^  int max_transmits;                      \/* Maximum # of challenge transmissions *\/$/;"	m	struct:chap_state
resp_id	net/lwip/netif/ppp/chap.h	/^  u_char resp_id;                         \/* ID for response messages *\/$/;"	m	struct:chap_state
resp_length	net/lwip/netif/ppp/chap.h	/^  u_char resp_length;                     \/* length of response *\/$/;"	m	struct:chap_state
resp_name	net/lwip/netif/ppp/chap.h	/^  char *resp_name;                        \/* Our name to send with response *\/$/;"	m	struct:chap_state
resp_transmits	net/lwip/netif/ppp/chap.h	/^  int resp_transmits;                     \/* Number of transmissions of response *\/$/;"	m	struct:chap_state
resp_type	net/lwip/netif/ppp/chap.h	/^  u_char resp_type;                       \/* hash algorithm for responses *\/$/;"	m	struct:chap_state
response	net/lwip/netif/ppp/chap.h	/^  u_char response[MAX_RESPONSE_LENGTH];   \/* Response to send *\/$/;"	m	struct:chap_state
serverstate	net/lwip/netif/ppp/chap.h	/^  int serverstate;                        \/* Server state *\/$/;"	m	struct:chap_state
timeouttime	net/lwip/netif/ppp/chap.h	/^  int timeouttime;                        \/* Timeout time in seconds *\/$/;"	m	struct:chap_state
unit	net/lwip/netif/ppp/chap.h	/^  int unit;                               \/* Interface unit number *\/$/;"	m	struct:chap_state
ChallengeResponse	net/lwip/netif/ppp/chpms.c	/^ChallengeResponse( u_char *challenge, \/* IN   8 octets *\/$/;"	f	file:
ChapMS	net/lwip/netif/ppp/chpms.c	/^ChapMS( chap_state *cstate, char *rchallenge, int rchallenge_len, char *secret, int secret_len)$/;"	f
ChapMS_LANMan	net/lwip/netif/ppp/chpms.c	/^ChapMS_LANMan( char *rchallenge,$/;"	f	file:
ChapMS_NT	net/lwip/netif/ppp/chpms.c	/^ChapMS_NT( char *rchallenge,$/;"	f	file:
Collapse	net/lwip/netif/ppp/chpms.c	/^Collapse(u_char *in, u_char *out)$/;"	f	file:
DesEncrypt	net/lwip/netif/ppp/chpms.c	/^DesEncrypt( u_char *clear, \/* IN  8 octets *\/$/;"	f	file:
Expand	net/lwip/netif/ppp/chpms.c	/^Expand(u_char *in, u_char *out)$/;"	f	file:
Get7Bits	net/lwip/netif/ppp/chpms.c	/^Get7Bits( u_char *input, int startBit)$/;"	f	file:
LANManResp	net/lwip/netif/ppp/chpms.c	/^    u_char LANManResp[24];$/;"	m	struct:__anon3	file:
MS_ChapResponse	net/lwip/netif/ppp/chpms.c	/^} MS_ChapResponse;$/;"	t	typeref:struct:__anon3	file:
MakeKey	net/lwip/netif/ppp/chpms.c	/^MakeKey( u_char *key,    \/* IN  56 bit DES key missing parity bits *\/$/;"	f	file:
NTResp	net/lwip/netif/ppp/chpms.c	/^    u_char NTResp[24];$/;"	m	struct:__anon3	file:
StdText	net/lwip/netif/ppp/chpms.c	/^static u_char *StdText = (u_char *)"KGS!@#$%"; \/* key from rasapi32.dll *\/$/;"	v	file:
USE_CRYPT	net/lwip/netif/ppp/chpms.c	67;"	d	file:
UseNT	net/lwip/netif/ppp/chpms.c	/^    u_char UseNT; \/* If 1, ignore the LANMan response field *\/$/;"	m	struct:__anon3	file:
CHPMS_H	net/lwip/netif/ppp/chpms.h	58;"	d
MAX_NT_PASSWORD	net/lwip/netif/ppp/chpms.h	60;"	d
PROTO_NAME	net/lwip/netif/ppp/fsm.c	106;"	d	file:
fsm_close	net/lwip/netif/ppp/fsm.c	/^fsm_close(fsm *f, char *reason)$/;"	f
fsm_init	net/lwip/netif/ppp/fsm.c	/^fsm_init(fsm *f)$/;"	f
fsm_input	net/lwip/netif/ppp/fsm.c	/^fsm_input(fsm *f, u_char *inpacket, int l)$/;"	f
fsm_lowerdown	net/lwip/netif/ppp/fsm.c	/^fsm_lowerdown(fsm *f)$/;"	f
fsm_lowerup	net/lwip/netif/ppp/fsm.c	/^fsm_lowerup(fsm *f)$/;"	f
fsm_open	net/lwip/netif/ppp/fsm.c	/^fsm_open(fsm *f)$/;"	f
fsm_protreject	net/lwip/netif/ppp/fsm.c	/^fsm_protreject(fsm *f)$/;"	f
fsm_rcoderej	net/lwip/netif/ppp/fsm.c	/^fsm_rcoderej(fsm *f, u_char *inp, int len)$/;"	f	file:
fsm_rconfack	net/lwip/netif/ppp/fsm.c	/^fsm_rconfack(fsm *f, int id, u_char *inp, int len)$/;"	f	file:
fsm_rconfnakrej	net/lwip/netif/ppp/fsm.c	/^fsm_rconfnakrej(fsm *f, int code, int id, u_char *inp, int len)$/;"	f	file:
fsm_rconfreq	net/lwip/netif/ppp/fsm.c	/^fsm_rconfreq(fsm *f, u_char id, u_char *inp, int len)$/;"	f	file:
fsm_rtermack	net/lwip/netif/ppp/fsm.c	/^fsm_rtermack(fsm *f)$/;"	f	file:
fsm_rtermreq	net/lwip/netif/ppp/fsm.c	/^fsm_rtermreq(fsm *f, int id, u_char *p, int len)$/;"	f	file:
fsm_sconfreq	net/lwip/netif/ppp/fsm.c	/^fsm_sconfreq(fsm *f, int retransmit)$/;"	f	file:
fsm_sdata	net/lwip/netif/ppp/fsm.c	/^fsm_sdata( fsm *f, u_char code, u_char id, u_char *data, int datalen)$/;"	f
fsm_timeout	net/lwip/netif/ppp/fsm.c	/^fsm_timeout(void *arg)$/;"	f	file:
peer_mru	net/lwip/netif/ppp/fsm.c	/^int peer_mru[NUM_PPP];$/;"	v
ppperr_strerr	net/lwip/netif/ppp/fsm.c	/^static const char *ppperr_strerr[] = {$/;"	v	file:
CODEREJ	net/lwip/netif/ppp/fsm.h	75;"	d
CONFACK	net/lwip/netif/ppp/fsm.h	70;"	d
CONFNAK	net/lwip/netif/ppp/fsm.h	71;"	d
CONFREJ	net/lwip/netif/ppp/fsm.h	72;"	d
CONFREQ	net/lwip/netif/ppp/fsm.h	69;"	d
FSM_H	net/lwip/netif/ppp/fsm.h	55;"	d
HEADERLEN	net/lwip/netif/ppp/fsm.h	63;"	d
LS_ACKRCVD	net/lwip/netif/ppp/fsm.h	87;"	d
LS_ACKSENT	net/lwip/netif/ppp/fsm.h	88;"	d
LS_CLOSED	net/lwip/netif/ppp/fsm.h	82;"	d
LS_CLOSING	net/lwip/netif/ppp/fsm.h	84;"	d
LS_INITIAL	net/lwip/netif/ppp/fsm.h	80;"	d
LS_OPENED	net/lwip/netif/ppp/fsm.h	89;"	d
LS_REQSENT	net/lwip/netif/ppp/fsm.h	86;"	d
LS_STARTING	net/lwip/netif/ppp/fsm.h	81;"	d
LS_STOPPED	net/lwip/netif/ppp/fsm.h	83;"	d
LS_STOPPING	net/lwip/netif/ppp/fsm.h	85;"	d
OPT_PASSIVE	net/lwip/netif/ppp/fsm.h	94;"	d
OPT_RESTART	net/lwip/netif/ppp/fsm.h	95;"	d
OPT_SILENT	net/lwip/netif/ppp/fsm.h	96;"	d
TERMACK	net/lwip/netif/ppp/fsm.h	74;"	d
TERMREQ	net/lwip/netif/ppp/fsm.h	73;"	d
ackci	net/lwip/netif/ppp/fsm.h	/^  int  (*ackci)(fsm*, u_char*, int);                \/* ACK our Configuration Information *\/$/;"	m	struct:fsm_callbacks
addci	net/lwip/netif/ppp/fsm.h	/^  void (*addci)(fsm*, u_char*, int*);               \/* Add our Configuration Information *\/$/;"	m	struct:fsm_callbacks
callbacks	net/lwip/netif/ppp/fsm.h	/^  struct fsm_callbacks* callbacks; \/* Callback routines *\/$/;"	m	struct:fsm	typeref:struct:fsm::fsm_callbacks
cilen	net/lwip/netif/ppp/fsm.h	/^  int  (*cilen)(fsm*);                              \/* Length of our Configuration Information *\/$/;"	m	struct:fsm_callbacks
down	net/lwip/netif/ppp/fsm.h	/^  void (*down)(fsm*);                               \/* Called when fsm leaves LS_OPENED state *\/$/;"	m	struct:fsm_callbacks
extcode	net/lwip/netif/ppp/fsm.h	/^  int  (*extcode)(fsm*, int, u_char, u_char*, int); \/* Called when unknown code received *\/$/;"	m	struct:fsm_callbacks
finished	net/lwip/netif/ppp/fsm.h	/^  void (*finished)(fsm*);                           \/* Called when we don't want the lower layer *\/$/;"	m	struct:fsm_callbacks
flags	net/lwip/netif/ppp/fsm.h	/^  int flags;                       \/* Contains option bits *\/$/;"	m	struct:fsm
fsm	net/lwip/netif/ppp/fsm.h	/^typedef struct fsm {$/;"	s
fsm	net/lwip/netif/ppp/fsm.h	/^} fsm;$/;"	t	typeref:struct:fsm
fsm_callbacks	net/lwip/netif/ppp/fsm.h	/^typedef struct fsm_callbacks {$/;"	s
fsm_callbacks	net/lwip/netif/ppp/fsm.h	/^} fsm_callbacks;$/;"	t	typeref:struct:fsm_callbacks
id	net/lwip/netif/ppp/fsm.h	/^  u_char id;                       \/* Current id *\/$/;"	m	struct:fsm
maxconfreqtransmits	net/lwip/netif/ppp/fsm.h	/^  int maxconfreqtransmits;         \/* Maximum Configure-Request transmissions *\/$/;"	m	struct:fsm
maxnakloops	net/lwip/netif/ppp/fsm.h	/^  int maxnakloops;                 \/* Maximum number of nak loops tolerated *\/$/;"	m	struct:fsm
maxtermtransmits	net/lwip/netif/ppp/fsm.h	/^  int maxtermtransmits;            \/* Maximum Terminate-Request transmissions *\/$/;"	m	struct:fsm
nakci	net/lwip/netif/ppp/fsm.h	/^  int  (*nakci)(fsm*, u_char*, int);                \/* NAK our Configuration Information *\/$/;"	m	struct:fsm_callbacks
nakloops	net/lwip/netif/ppp/fsm.h	/^  int nakloops;                    \/* Number of nak loops since last ack *\/$/;"	m	struct:fsm
proto_name	net/lwip/netif/ppp/fsm.h	/^  char *proto_name;                                 \/* String name for protocol (for messages) *\/$/;"	m	struct:fsm_callbacks
protocol	net/lwip/netif/ppp/fsm.h	/^  u_short protocol;                \/* Data Link Layer Protocol field value *\/$/;"	m	struct:fsm
protreject	net/lwip/netif/ppp/fsm.h	/^  void (*protreject)(int);                          \/* Called when Protocol-Reject received *\/$/;"	m	struct:fsm_callbacks
rejci	net/lwip/netif/ppp/fsm.h	/^  int  (*rejci)(fsm*, u_char*, int);                \/* Reject our Configuration Information *\/$/;"	m	struct:fsm_callbacks
reqci	net/lwip/netif/ppp/fsm.h	/^  int  (*reqci)(fsm*, u_char*, int*, int);          \/* Request peer's Configuration Information *\/$/;"	m	struct:fsm_callbacks
reqid	net/lwip/netif/ppp/fsm.h	/^  u_char reqid;                    \/* Current request id *\/$/;"	m	struct:fsm
resetci	net/lwip/netif/ppp/fsm.h	/^  void (*resetci)(fsm*);                            \/* Reset our Configuration Information *\/$/;"	m	struct:fsm_callbacks
retransmit	net/lwip/netif/ppp/fsm.h	/^  void (*retransmit)(fsm*);                         \/* Retransmission is necessary *\/$/;"	m	struct:fsm_callbacks
retransmits	net/lwip/netif/ppp/fsm.h	/^  int retransmits;                 \/* Number of retransmissions left *\/$/;"	m	struct:fsm
seen_ack	net/lwip/netif/ppp/fsm.h	/^  u_char seen_ack;                 \/* Have received valid Ack\/Nak\/Rej to Req *\/$/;"	m	struct:fsm
starting	net/lwip/netif/ppp/fsm.h	/^  void (*starting)(fsm*);                           \/* Called when we want the lower layer *\/$/;"	m	struct:fsm_callbacks
state	net/lwip/netif/ppp/fsm.h	/^  int state;                       \/* State *\/$/;"	m	struct:fsm
term_reason	net/lwip/netif/ppp/fsm.h	/^  char* term_reason;               \/* Reason for closing protocol *\/$/;"	m	struct:fsm
term_reason_len	net/lwip/netif/ppp/fsm.h	/^  int term_reason_len;             \/* Length of term_reason *\/$/;"	m	struct:fsm
timeouttime	net/lwip/netif/ppp/fsm.h	/^  int timeouttime;                 \/* Timeout time in milliseconds *\/$/;"	m	struct:fsm
unit	net/lwip/netif/ppp/fsm.h	/^  int unit;                        \/* Interface unit number *\/$/;"	m	struct:fsm
up	net/lwip/netif/ppp/fsm.h	/^  void (*up)(fsm*);                                 \/* Called when fsm reaches LS_OPENED state *\/$/;"	m	struct:fsm_callbacks
ACKCIADDR	net/lwip/netif/ppp/ipcp.c	495;"	d	file:
ACKCIDNS	net/lwip/netif/ppp/ipcp.c	522;"	d	file:
ACKCIVJ	net/lwip/netif/ppp/ipcp.c	467;"	d	file:
ADDCIADDR	net/lwip/netif/ppp/ipcp.c	399;"	d	file:
ADDCIDNS	net/lwip/netif/ppp/ipcp.c	418;"	d	file:
ADDCIVJ	net/lwip/netif/ppp/ipcp.c	382;"	d	file:
CILEN_ADDR	net/lwip/netif/ppp/ipcp.c	77;"	d	file:
CILEN_ADDRS	net/lwip/netif/ppp/ipcp.c	78;"	d	file:
CILEN_COMPRESS	net/lwip/netif/ppp/ipcp.c	75;"	d	file:
CILEN_VJ	net/lwip/netif/ppp/ipcp.c	76;"	d	file:
CILEN_VOID	net/lwip/netif/ppp/ipcp.c	74;"	d	file:
CODENAME	net/lwip/netif/ppp/ipcp.c	115;"	d	file:
LENCIADDR	net/lwip/netif/ppp/ipcp.c	339;"	d	file:
LENCIDNS	net/lwip/netif/ppp/ipcp.c	340;"	d	file:
LENCIVJ	net/lwip/netif/ppp/ipcp.c	338;"	d	file:
NAKCIADDR	net/lwip/netif/ppp/ipcp.c	592;"	d	file:
NAKCIDNS	net/lwip/netif/ppp/ipcp.c	624;"	d	file:
NAKCIVJ	net/lwip/netif/ppp/ipcp.c	612;"	d	file:
REJCIADDR	net/lwip/netif/ppp/ipcp.c	793;"	d	file:
REJCIDNS	net/lwip/netif/ppp/ipcp.c	843;"	d	file:
REJCIVJ	net/lwip/netif/ppp/ipcp.c	818;"	d	file:
_inet_ntoa	net/lwip/netif/ppp/ipcp.c	/^_inet_ntoa(u32_t n)$/;"	f
cis_received	net/lwip/netif/ppp/ipcp.c	/^static int cis_received[NUM_PPP];      \/* # Conf-Reqs received *\/$/;"	v	file:
default_route_set	net/lwip/netif/ppp/ipcp.c	/^static int default_route_set[NUM_PPP]; \/* Have set up a default route *\/$/;"	v	file:
inet_ntoa	net/lwip/netif/ppp/ipcp.c	199;"	d	file:
ipcp_ackci	net/lwip/netif/ppp/ipcp.c	/^ipcp_ackci(fsm *f, u_char *p, int len)$/;"	f	file:
ipcp_addci	net/lwip/netif/ppp/ipcp.c	/^ipcp_addci(fsm *f, u_char *ucp, int *lenp)$/;"	f	file:
ipcp_allowoptions	net/lwip/netif/ppp/ipcp.c	/^ipcp_options ipcp_allowoptions[NUM_PPP]; \/* Options we allow peer to request *\/$/;"	v
ipcp_callbacks	net/lwip/netif/ppp/ipcp.c	/^static fsm_callbacks ipcp_callbacks = { \/* IPCP callback routines *\/$/;"	v	file:
ipcp_cilen	net/lwip/netif/ppp/ipcp.c	/^ipcp_cilen(fsm *f)$/;"	f	file:
ipcp_clear_addrs	net/lwip/netif/ppp/ipcp.c	/^ipcp_clear_addrs(int unit)$/;"	f	file:
ipcp_close	net/lwip/netif/ppp/ipcp.c	/^ipcp_close(int unit, char *reason)$/;"	f	file:
ipcp_down	net/lwip/netif/ppp/ipcp.c	/^ipcp_down(fsm *f)$/;"	f	file:
ipcp_finished	net/lwip/netif/ppp/ipcp.c	/^ipcp_finished(fsm *f)$/;"	f	file:
ipcp_fsm	net/lwip/netif/ppp/ipcp.c	/^fsm ipcp_fsm[NUM_PPP]; \/* IPCP fsm structure *\/$/;"	v
ipcp_gotoptions	net/lwip/netif/ppp/ipcp.c	/^ipcp_options ipcp_gotoptions[NUM_PPP];   \/* Options that peer ack'd *\/$/;"	v
ipcp_hisoptions	net/lwip/netif/ppp/ipcp.c	/^ipcp_options ipcp_hisoptions[NUM_PPP];   \/* Options that we ack'd *\/$/;"	v
ipcp_init	net/lwip/netif/ppp/ipcp.c	/^ipcp_init(int unit)$/;"	f	file:
ipcp_input	net/lwip/netif/ppp/ipcp.c	/^ipcp_input(int unit, u_char *p, int len)$/;"	f	file:
ipcp_lowerdown	net/lwip/netif/ppp/ipcp.c	/^ipcp_lowerdown(int unit)$/;"	f	file:
ipcp_lowerup	net/lwip/netif/ppp/ipcp.c	/^ipcp_lowerup(int unit)$/;"	f	file:
ipcp_nakci	net/lwip/netif/ppp/ipcp.c	/^ipcp_nakci(fsm *f, u_char *p, int len)$/;"	f	file:
ipcp_open	net/lwip/netif/ppp/ipcp.c	/^ipcp_open(int unit)$/;"	f	file:
ipcp_protent	net/lwip/netif/ppp/ipcp.c	/^struct protent ipcp_protent = {$/;"	v	typeref:struct:protent
ipcp_protrej	net/lwip/netif/ppp/ipcp.c	/^ipcp_protrej(int unit)$/;"	f	file:
ipcp_rejci	net/lwip/netif/ppp/ipcp.c	/^ipcp_rejci(fsm *f, u_char *p, int len)$/;"	f	file:
ipcp_reqci	net/lwip/netif/ppp/ipcp.c	/^ipcp_reqci(fsm *f, u_char *inp\/* Requested CIs *\/,int *len\/* Length of requested CIs *\/,int reject_if_disagree)$/;"	f	file:
ipcp_resetci	net/lwip/netif/ppp/ipcp.c	/^ipcp_resetci(fsm *f)$/;"	f	file:
ipcp_up	net/lwip/netif/ppp/ipcp.c	/^ipcp_up(fsm *f)$/;"	f	file:
ipcp_wantoptions	net/lwip/netif/ppp/ipcp.c	/^ipcp_options ipcp_wantoptions[NUM_PPP];  \/* Options that we want to request *\/$/;"	v
CI_ADDR	net/lwip/netif/ppp/ipcp.h	65;"	d
CI_ADDRS	net/lwip/netif/ppp/ipcp.h	63;"	d
CI_COMPRESSTYPE	net/lwip/netif/ppp/ipcp.h	64;"	d
CI_MS_DNS1	net/lwip/netif/ppp/ipcp.h	68;"	d
CI_MS_DNS2	net/lwip/netif/ppp/ipcp.h	70;"	d
CI_MS_WINS1	net/lwip/netif/ppp/ipcp.h	67;"	d
CI_MS_WINS2	net/lwip/netif/ppp/ipcp.h	69;"	d
IPCP_H	net/lwip/netif/ppp/ipcp.h	55;"	d
IPCP_VJMODE_OLD	net/lwip/netif/ppp/ipcp.h	72;"	d
IPCP_VJMODE_RFC1172	net/lwip/netif/ppp/ipcp.h	73;"	d
IPCP_VJMODE_RFC1332	net/lwip/netif/ppp/ipcp.h	74;"	d
IPCP_VJ_COMP	net/lwip/netif/ppp/ipcp.h	77;"	d
IPCP_VJ_COMP_OLD	net/lwip/netif/ppp/ipcp.h	78;"	d
accept_local	net/lwip/netif/ppp/ipcp.h	/^  u_int   accept_local  : 1; \/* accept peer's value for ouraddr *\/$/;"	m	struct:ipcp_options
accept_remote	net/lwip/netif/ppp/ipcp.h	/^  u_int   accept_remote : 1; \/* accept peer's value for hisaddr *\/$/;"	m	struct:ipcp_options
cflag	net/lwip/netif/ppp/ipcp.h	/^  u_char  cflag;             \/* VJ slot compression flag. *\/$/;"	m	struct:ipcp_options
default_route	net/lwip/netif/ppp/ipcp.h	/^  u_int   default_route : 1; \/* Assign default route through interface? *\/$/;"	m	struct:ipcp_options
dnsaddr	net/lwip/netif/ppp/ipcp.h	/^  u32_t   dnsaddr[2];        \/* Primary and secondary MS DNS entries *\/$/;"	m	struct:ipcp_options
hisaddr	net/lwip/netif/ppp/ipcp.h	/^  u32_t   ouraddr, hisaddr;  \/* Addresses in NETWORK BYTE ORDER *\/$/;"	m	struct:ipcp_options
ipcp_options	net/lwip/netif/ppp/ipcp.h	/^typedef struct ipcp_options {$/;"	s
ipcp_options	net/lwip/netif/ppp/ipcp.h	/^} ipcp_options;$/;"	t	typeref:struct:ipcp_options
maxslotindex	net/lwip/netif/ppp/ipcp.h	/^  u_char  maxslotindex;      \/* VJ slots - 1. *\/$/;"	m	struct:ipcp_options
neg_addr	net/lwip/netif/ppp/ipcp.h	/^  u_int   neg_addr      : 1; \/* Negotiate IP Address? *\/$/;"	m	struct:ipcp_options
neg_vj	net/lwip/netif/ppp/ipcp.h	/^  u_int   neg_vj        : 1; \/* Van Jacobson Compression? *\/$/;"	m	struct:ipcp_options
old_addrs	net/lwip/netif/ppp/ipcp.h	/^  u_int   old_addrs     : 1; \/* Use old (IP-Addresses) option? *\/$/;"	m	struct:ipcp_options
old_vj	net/lwip/netif/ppp/ipcp.h	/^  u_int   old_vj        : 1; \/* use old (short) form of VJ option? *\/$/;"	m	struct:ipcp_options
ouraddr	net/lwip/netif/ppp/ipcp.h	/^  u32_t   ouraddr, hisaddr;  \/* Addresses in NETWORK BYTE ORDER *\/$/;"	m	struct:ipcp_options
proxy_arp	net/lwip/netif/ppp/ipcp.h	/^  u_int   proxy_arp     : 1; \/* Make proxy ARP entry for peer? *\/$/;"	m	struct:ipcp_options
req_addr	net/lwip/netif/ppp/ipcp.h	/^  u_int   req_addr      : 1; \/* Ask peer to send IP address? *\/$/;"	m	struct:ipcp_options
req_dns1	net/lwip/netif/ppp/ipcp.h	/^  u_int   req_dns1      : 1; \/* Ask peer to send primary DNS address? *\/$/;"	m	struct:ipcp_options
req_dns2	net/lwip/netif/ppp/ipcp.h	/^  u_int   req_dns2      : 1; \/* Ask peer to send secondary DNS address? *\/$/;"	m	struct:ipcp_options
vj_protocol	net/lwip/netif/ppp/ipcp.h	/^  u_short vj_protocol;       \/* protocol value to use in VJ option *\/$/;"	m	struct:ipcp_options
winsaddr	net/lwip/netif/ppp/ipcp.h	/^  u32_t   winsaddr[2];       \/* Primary and secondary MS WINS entries *\/$/;"	m	struct:ipcp_options
ACKCICHAP	net/lwip/netif/ppp/lcp.c	653;"	d	file:
ACKCICHAR	net/lwip/netif/ppp/lcp.c	641;"	d	file:
ACKCILONG	net/lwip/netif/ppp/lcp.c	668;"	d	file:
ACKCILQR	net/lwip/netif/ppp/lcp.c	680;"	d	file:
ACKCISHORT	net/lwip/netif/ppp/lcp.c	629;"	d	file:
ACKCIVOID	net/lwip/netif/ppp/lcp.c	620;"	d	file:
ADDCICHAP	net/lwip/netif/ppp/lcp.c	551;"	d	file:
ADDCICHAR	net/lwip/netif/ppp/lcp.c	574;"	d	file:
ADDCILONG	net/lwip/netif/ppp/lcp.c	559;"	d	file:
ADDCILQR	net/lwip/netif/ppp/lcp.c	566;"	d	file:
ADDCISHORT	net/lwip/netif/ppp/lcp.c	544;"	d	file:
ADDCIVOID	net/lwip/netif/ppp/lcp.c	538;"	d	file:
CILEN_CBCP	net/lwip/netif/ppp/lcp.c	88;"	d	file:
CILEN_CHAP	net/lwip/netif/ppp/lcp.c	85;"	d	file:
CILEN_CHAR	net/lwip/netif/ppp/lcp.c	83;"	d	file:
CILEN_LONG	net/lwip/netif/ppp/lcp.c	86;"	d	file:
CILEN_LQR	net/lwip/netif/ppp/lcp.c	87;"	d	file:
CILEN_SHORT	net/lwip/netif/ppp/lcp.c	84;"	d	file:
CILEN_VOID	net/lwip/netif/ppp/lcp.c	82;"	d	file:
CODENAME	net/lwip/netif/ppp/lcp.c	130;"	d	file:
LENCICBCP	net/lwip/netif/ppp/lcp.c	512;"	d	file:
LENCICHAP	net/lwip/netif/ppp/lcp.c	508;"	d	file:
LENCILONG	net/lwip/netif/ppp/lcp.c	510;"	d	file:
LENCILQR	net/lwip/netif/ppp/lcp.c	511;"	d	file:
LENCISHORT	net/lwip/netif/ppp/lcp.c	509;"	d	file:
LENCIVOID	net/lwip/netif/ppp/lcp.c	507;"	d	file:
LcpEchoCheck	net/lwip/netif/ppp/lcp.c	/^LcpEchoCheck (fsm *f)$/;"	f	file:
LcpEchoTimeout	net/lwip/netif/ppp/lcp.c	/^LcpEchoTimeout (void *arg)$/;"	f	file:
LcpLinkFailure	net/lwip/netif/ppp/lcp.c	/^LcpLinkFailure (fsm *f)$/;"	f	file:
LcpSendEchoRequest	net/lwip/netif/ppp/lcp.c	/^LcpSendEchoRequest (fsm *f)$/;"	f	file:
NAKCICHAP	net/lwip/netif/ppp/lcp.c	760;"	d	file:
NAKCICHAR	net/lwip/netif/ppp/lcp.c	772;"	d	file:
NAKCILONG	net/lwip/netif/ppp/lcp.c	794;"	d	file:
NAKCILQR	net/lwip/netif/ppp/lcp.c	805;"	d	file:
NAKCISHORT	net/lwip/netif/ppp/lcp.c	783;"	d	file:
NAKCIVOID	net/lwip/netif/ppp/lcp.c	750;"	d	file:
PPPOE_MAXMTU	net/lwip/netif/ppp/lcp.c	72;"	d	file:
REJCICBCP	net/lwip/netif/ppp/lcp.c	1138;"	d	file:
REJCICHAP	net/lwip/netif/ppp/lcp.c	1090;"	d	file:
REJCILONG	net/lwip/netif/ppp/lcp.c	1107;"	d	file:
REJCILQR	net/lwip/netif/ppp/lcp.c	1122;"	d	file:
REJCISHORT	net/lwip/netif/ppp/lcp.c	1075;"	d	file:
REJCIVOID	net/lwip/netif/ppp/lcp.c	1065;"	d	file:
lcp_ackci	net/lwip/netif/ppp/lcp.c	/^lcp_ackci(fsm *f, u_char *p, int len)$/;"	f	file:
lcp_addci	net/lwip/netif/ppp/lcp.c	/^lcp_addci(fsm *f, u_char *ucp, int *lenp)$/;"	f	file:
lcp_allowoptions	net/lwip/netif/ppp/lcp.c	/^lcp_options lcp_allowoptions[NUM_PPP]; \/* Options we allow peer to request *\/$/;"	v
lcp_callbacks	net/lwip/netif/ppp/lcp.c	/^static fsm_callbacks lcp_callbacks = { \/* LCP callback routines *\/$/;"	v	file:
lcp_cilen	net/lwip/netif/ppp/lcp.c	/^static int lcp_cilen(fsm *f)$/;"	f	file:
lcp_close	net/lwip/netif/ppp/lcp.c	/^lcp_close(int unit, char *reason)$/;"	f
lcp_down	net/lwip/netif/ppp/lcp.c	/^lcp_down(fsm *f)$/;"	f	file:
lcp_echo_fails	net/lwip/netif/ppp/lcp.c	/^static u_int lcp_echo_fails         = LCP_MAXECHOFAILS; \/* Tolerance to unanswered echo-requests *\/$/;"	v	file:
lcp_echo_interval	net/lwip/netif/ppp/lcp.c	/^static u_int lcp_echo_interval      = LCP_ECHOINTERVAL; \/* Interval between LCP echo-requests *\/$/;"	v	file:
lcp_echo_lowerdown	net/lwip/netif/ppp/lcp.c	/^lcp_echo_lowerdown (int unit)$/;"	f	file:
lcp_echo_lowerup	net/lwip/netif/ppp/lcp.c	/^lcp_echo_lowerup (int unit)$/;"	f	file:
lcp_echo_number	net/lwip/netif/ppp/lcp.c	/^static u32_t lcp_echo_number        = 0;                \/* ID number of next echo frame *\/$/;"	v	file:
lcp_echo_timer_running	net/lwip/netif/ppp/lcp.c	/^static u32_t lcp_echo_timer_running = 0;                \/* TRUE if a timer is running *\/$/;"	v	file:
lcp_echos_pending	net/lwip/netif/ppp/lcp.c	/^static u32_t lcp_echos_pending      = 0;                \/* Number of outstanding echo msgs *\/$/;"	v	file:
lcp_extcode	net/lwip/netif/ppp/lcp.c	/^lcp_extcode(fsm *f, int code, u_char id, u_char *inp, int len)$/;"	f	file:
lcp_finished	net/lwip/netif/ppp/lcp.c	/^lcp_finished(fsm *f)$/;"	f	file:
lcp_fsm	net/lwip/netif/ppp/lcp.c	/^static fsm lcp_fsm[NUM_PPP];                            \/* LCP fsm structure (global)*\/$/;"	v	file:
lcp_gotoptions	net/lwip/netif/ppp/lcp.c	/^lcp_options lcp_gotoptions[NUM_PPP];   \/* Options that peer ack'd *\/$/;"	v
lcp_hisoptions	net/lwip/netif/ppp/lcp.c	/^lcp_options lcp_hisoptions[NUM_PPP];   \/* Options that we ack'd *\/$/;"	v
lcp_init	net/lwip/netif/ppp/lcp.c	/^lcp_init(int unit)$/;"	f
lcp_input	net/lwip/netif/ppp/lcp.c	/^lcp_input(int unit, u_char *p, int len)$/;"	f	file:
lcp_loopbackfail	net/lwip/netif/ppp/lcp.c	/^int lcp_loopbackfail = DEFLOOPBACKFAIL;$/;"	v
lcp_lowerdown	net/lwip/netif/ppp/lcp.c	/^lcp_lowerdown(int unit)$/;"	f
lcp_lowerup	net/lwip/netif/ppp/lcp.c	/^lcp_lowerup(int unit)$/;"	f
lcp_nakci	net/lwip/netif/ppp/lcp.c	/^lcp_nakci(fsm *f, u_char *p, int len)$/;"	f	file:
lcp_open	net/lwip/netif/ppp/lcp.c	/^lcp_open(int unit)$/;"	f
lcp_phase	net/lwip/netif/ppp/lcp.c	/^LinkPhase lcp_phase[NUM_PPP];          \/* Phase of link session (RFC 1661) *\/$/;"	v
lcp_protent	net/lwip/netif/ppp/lcp.c	/^struct protent lcp_protent = {$/;"	v	typeref:struct:protent
lcp_protrej	net/lwip/netif/ppp/lcp.c	/^lcp_protrej(int unit)$/;"	f	file:
lcp_received_echo_reply	net/lwip/netif/ppp/lcp.c	/^lcp_received_echo_reply (fsm *f, int id, u_char *inp, int len)$/;"	f	file:
lcp_rejci	net/lwip/netif/ppp/lcp.c	/^lcp_rejci(fsm *f, u_char *p, int len)$/;"	f	file:
lcp_reqci	net/lwip/netif/ppp/lcp.c	/^lcp_reqci(fsm *f, $/;"	f	file:
lcp_resetci	net/lwip/netif/ppp/lcp.c	/^lcp_resetci(fsm *f)$/;"	f	file:
lcp_rprotrej	net/lwip/netif/ppp/lcp.c	/^lcp_rprotrej(fsm *f, u_char *inp, int len)$/;"	f	file:
lcp_sprotrej	net/lwip/netif/ppp/lcp.c	/^lcp_sprotrej(int unit, u_char *p, int len)$/;"	f
lcp_starting	net/lwip/netif/ppp/lcp.c	/^lcp_starting(fsm *f)$/;"	f	file:
lcp_up	net/lwip/netif/ppp/lcp.c	/^lcp_up(fsm *f)$/;"	f	file:
lcp_wantoptions	net/lwip/netif/ppp/lcp.c	/^lcp_options lcp_wantoptions[NUM_PPP];  \/* Options that we want to request *\/$/;"	v
nak_buffer	net/lwip/netif/ppp/lcp.c	/^static u_char nak_buffer[PPP_MRU]; \/* where we construct a nak packet *\/$/;"	v	file:
xmit_accm	net/lwip/netif/ppp/lcp.c	/^ext_accm xmit_accm[NUM_PPP];           \/* extended transmit ACCM *\/$/;"	v
CBCP_OPT	net/lwip/netif/ppp/lcp.h	82;"	d
CI_ACCOMPRESSION	net/lwip/netif/ppp/lcp.h	69;"	d
CI_ASYNCMAP	net/lwip/netif/ppp/lcp.h	64;"	d
CI_AUTHTYPE	net/lwip/netif/ppp/lcp.h	65;"	d
CI_CALLBACK	net/lwip/netif/ppp/lcp.h	70;"	d
CI_EPDISC	net/lwip/netif/ppp/lcp.h	73;"	d
CI_MAGICNUMBER	net/lwip/netif/ppp/lcp.h	67;"	d
CI_MRRU	net/lwip/netif/ppp/lcp.h	71;"	d
CI_MRU	net/lwip/netif/ppp/lcp.h	63;"	d
CI_PCOMPRESSION	net/lwip/netif/ppp/lcp.h	68;"	d
CI_QUALITY	net/lwip/netif/ppp/lcp.h	66;"	d
CI_SSNHF	net/lwip/netif/ppp/lcp.h	72;"	d
DEFLOOPBACKFAIL	net/lwip/netif/ppp/lcp.h	165;"	d
DISCREQ	net/lwip/netif/ppp/lcp.h	81;"	d
ECHOREP	net/lwip/netif/ppp/lcp.h	80;"	d
ECHOREQ	net/lwip/netif/ppp/lcp.h	79;"	d
LCP_H	net/lwip/netif/ppp/lcp.h	55;"	d
LinkPhase	net/lwip/netif/ppp/lcp.h	/^} LinkPhase;$/;"	t	typeref:enum:__anon6
PHASE_AUTHENTICATE	net/lwip/netif/ppp/lcp.h	/^  PHASE_AUTHENTICATE,$/;"	e	enum:__anon6
PHASE_CALLBACK	net/lwip/netif/ppp/lcp.h	/^  PHASE_CALLBACK,$/;"	e	enum:__anon6
PHASE_DEAD	net/lwip/netif/ppp/lcp.h	/^  PHASE_DEAD = 0,$/;"	e	enum:__anon6
PHASE_ESTABLISH	net/lwip/netif/ppp/lcp.h	/^  PHASE_ESTABLISH,$/;"	e	enum:__anon6
PHASE_INITIALIZE	net/lwip/netif/ppp/lcp.h	/^  PHASE_INITIALIZE,$/;"	e	enum:__anon6
PHASE_NETWORK	net/lwip/netif/ppp/lcp.h	/^  PHASE_NETWORK,$/;"	e	enum:__anon6
PHASE_TERMINATE	net/lwip/netif/ppp/lcp.h	/^  PHASE_TERMINATE$/;"	e	enum:__anon6
PROTREJ	net/lwip/netif/ppp/lcp.h	78;"	d
asyncmap	net/lwip/netif/ppp/lcp.h	/^    u32_t asyncmap;              \/* Value of async map *\/$/;"	m	struct:lcp_options
chap_mdtype	net/lwip/netif/ppp/lcp.h	/^    u_char chap_mdtype;          \/* which MD type (hashing algorithm) *\/$/;"	m	struct:lcp_options
endpoint	net/lwip/netif/ppp/lcp.h	/^    struct epdisc endpoint;      \/* endpoint discriminator *\/$/;"	m	struct:lcp_options	typeref:struct:lcp_options::epdisc
lcp_options	net/lwip/netif/ppp/lcp.h	/^typedef struct lcp_options {$/;"	s
lcp_options	net/lwip/netif/ppp/lcp.h	/^} lcp_options;$/;"	t	typeref:struct:lcp_options
lqr_period	net/lwip/netif/ppp/lcp.h	/^    u32_t lqr_period;            \/* Reporting period for LQR 1\/100ths second *\/$/;"	m	struct:lcp_options
magicnumber	net/lwip/netif/ppp/lcp.h	/^    u32_t magicnumber;$/;"	m	struct:lcp_options
mrru	net/lwip/netif/ppp/lcp.h	/^    u_short mrru;                \/* Value of MRRU, and multilink enable *\/$/;"	m	struct:lcp_options
mru	net/lwip/netif/ppp/lcp.h	/^    u_short mru;                 \/* Value of MRU *\/$/;"	m	struct:lcp_options
neg_accompression	net/lwip/netif/ppp/lcp.h	/^    u_int neg_accompression : 1; \/* HDLC Address\/Control Field Compression? *\/$/;"	m	struct:lcp_options
neg_asyncmap	net/lwip/netif/ppp/lcp.h	/^    u_int neg_asyncmap      : 1; \/* Negotiate the async map? *\/$/;"	m	struct:lcp_options
neg_cbcp	net/lwip/netif/ppp/lcp.h	/^    u_int neg_cbcp          : 1; \/* Negotiate use of CBCP *\/$/;"	m	struct:lcp_options
neg_chap	net/lwip/netif/ppp/lcp.h	/^    u_int neg_chap          : 1; \/* Ask for CHAP authentication? *\/$/;"	m	struct:lcp_options
neg_endpoint	net/lwip/netif/ppp/lcp.h	/^    u_int neg_endpoint      : 1; \/* Negotiate endpoint discriminator *\/$/;"	m	struct:lcp_options
neg_lqr	net/lwip/netif/ppp/lcp.h	/^    u_int neg_lqr           : 1; \/* Negotiate use of Link Quality Reports *\/$/;"	m	struct:lcp_options
neg_magicnumber	net/lwip/netif/ppp/lcp.h	/^    u_int neg_magicnumber   : 1; \/* Ask for magic number? *\/$/;"	m	struct:lcp_options
neg_mrru	net/lwip/netif/ppp/lcp.h	/^    u_int neg_mrru          : 1; \/* Negotiate multilink MRRU *\/$/;"	m	struct:lcp_options
neg_mru	net/lwip/netif/ppp/lcp.h	/^    u_int neg_mru           : 1; \/* Negotiate the MRU? *\/$/;"	m	struct:lcp_options
neg_pcompression	net/lwip/netif/ppp/lcp.h	/^    u_int neg_pcompression  : 1; \/* HDLC Protocol Field Compression? *\/$/;"	m	struct:lcp_options
neg_ssnhf	net/lwip/netif/ppp/lcp.h	/^    u_int neg_ssnhf         : 1; \/* Negotiate short sequence numbers *\/$/;"	m	struct:lcp_options
neg_upap	net/lwip/netif/ppp/lcp.h	/^    u_int neg_upap          : 1; \/* Ask for UPAP authentication? *\/$/;"	m	struct:lcp_options
numloops	net/lwip/netif/ppp/lcp.h	/^    int numloops;                \/* Number of loops during magic number neg. *\/$/;"	m	struct:lcp_options
passive	net/lwip/netif/ppp/lcp.h	/^    u_int passive           : 1; \/* Don't die if we don't get a response *\/$/;"	m	struct:lcp_options
restart	net/lwip/netif/ppp/lcp.h	/^    u_int restart           : 1; \/* Restart vs. exit after close *\/$/;"	m	struct:lcp_options
silent	net/lwip/netif/ppp/lcp.h	/^    u_int silent            : 1; \/* Wait for the other end to start first *\/$/;"	m	struct:lcp_options
magic	net/lwip/netif/ppp/magic.c	/^u32_t magic()$/;"	f
magicInit	net/lwip/netif/ppp/magic.c	/^void magicInit()$/;"	f
MAGIC_H	net/lwip/netif/ppp/magic.h	55;"	d
F	net/lwip/netif/ppp/md5.c	71;"	d	file:
FF	net/lwip/netif/ppp/md5.c	81;"	d	file:
G	net/lwip/netif/ppp/md5.c	72;"	d	file:
GG	net/lwip/netif/ppp/md5.c	86;"	d	file:
H	net/lwip/netif/ppp/md5.c	73;"	d	file:
HH	net/lwip/netif/ppp/md5.c	91;"	d	file:
I	net/lwip/netif/ppp/md5.c	74;"	d	file:
II	net/lwip/netif/ppp/md5.c	96;"	d	file:
MD5Final	net/lwip/netif/ppp/md5.c	/^MD5Final (unsigned char hash[], MD5_CTX *mdContext)$/;"	f
MD5Init	net/lwip/netif/ppp/md5.c	/^MD5Init (MD5_CTX *mdContext)$/;"	f
MD5Update	net/lwip/netif/ppp/md5.c	/^MD5Update(MD5_CTX *mdContext, unsigned char *inBuf, unsigned int inLen)$/;"	f
PADDING	net/lwip/netif/ppp/md5.c	/^static unsigned char PADDING[64] = {$/;"	v	file:
ROTATE_LEFT	net/lwip/netif/ppp/md5.c	77;"	d	file:
S11	net/lwip/netif/ppp/md5.c	223;"	d	file:
S12	net/lwip/netif/ppp/md5.c	224;"	d	file:
S13	net/lwip/netif/ppp/md5.c	225;"	d	file:
S14	net/lwip/netif/ppp/md5.c	226;"	d	file:
S21	net/lwip/netif/ppp/md5.c	245;"	d	file:
S22	net/lwip/netif/ppp/md5.c	246;"	d	file:
S23	net/lwip/netif/ppp/md5.c	247;"	d	file:
S24	net/lwip/netif/ppp/md5.c	248;"	d	file:
S31	net/lwip/netif/ppp/md5.c	267;"	d	file:
S32	net/lwip/netif/ppp/md5.c	268;"	d	file:
S33	net/lwip/netif/ppp/md5.c	269;"	d	file:
S34	net/lwip/netif/ppp/md5.c	270;"	d	file:
S41	net/lwip/netif/ppp/md5.c	289;"	d	file:
S42	net/lwip/netif/ppp/md5.c	290;"	d	file:
S43	net/lwip/netif/ppp/md5.c	291;"	d	file:
S44	net/lwip/netif/ppp/md5.c	292;"	d	file:
Transform	net/lwip/netif/ppp/md5.c	/^Transform (u32_t *buf, u32_t *in)$/;"	f	file:
UL	net/lwip/netif/ppp/md5.c	103;"	d	file:
UL	net/lwip/netif/ppp/md5.c	106;"	d	file:
UL	net/lwip/netif/ppp/md5.c	108;"	d	file:
MD5_CTX	net/lwip/netif/ppp/md5.h	/^} MD5_CTX;$/;"	t	typeref:struct:__anon4
MD5_H	net/lwip/netif/ppp/md5.h	41;"	d
buf	net/lwip/netif/ppp/md5.h	/^  u32_t buf[4];             \/* scratch buffer *\/$/;"	m	struct:__anon4
digest	net/lwip/netif/ppp/md5.h	/^  unsigned char digest[16]; \/* actual digest after MD5Final call *\/$/;"	m	struct:__anon4
i	net/lwip/netif/ppp/md5.h	/^  u32_t i[2];               \/* number of _bits_ handled mod 2^64 *\/$/;"	m	struct:__anon4
in	net/lwip/netif/ppp/md5.h	/^  unsigned char in[64];     \/* input buffer *\/$/;"	m	struct:__anon4
pap_protent	net/lwip/netif/ppp/pap.c	/^struct protent pap_protent = {$/;"	v	typeref:struct:protent
upap	net/lwip/netif/ppp/pap.c	/^upap_state upap[NUM_PPP]; \/* UPAP state; one for each unit *\/$/;"	v
upap_authpeer	net/lwip/netif/ppp/pap.c	/^upap_authpeer(int unit)$/;"	f
upap_authwithpeer	net/lwip/netif/ppp/pap.c	/^upap_authwithpeer(int unit, char *user, char *password)$/;"	f
upap_init	net/lwip/netif/ppp/pap.c	/^upap_init(int unit)$/;"	f	file:
upap_input	net/lwip/netif/ppp/pap.c	/^upap_input(int unit, u_char *inpacket, int l)$/;"	f	file:
upap_lowerdown	net/lwip/netif/ppp/pap.c	/^upap_lowerdown(int unit)$/;"	f	file:
upap_lowerup	net/lwip/netif/ppp/pap.c	/^upap_lowerup(int unit)$/;"	f	file:
upap_protrej	net/lwip/netif/ppp/pap.c	/^upap_protrej(int unit)$/;"	f	file:
upap_rauthack	net/lwip/netif/ppp/pap.c	/^upap_rauthack(upap_state *u, u_char *inp, int id, int len)$/;"	f	file:
upap_rauthnak	net/lwip/netif/ppp/pap.c	/^upap_rauthnak(upap_state *u, u_char *inp, int id, int len)$/;"	f	file:
upap_rauthreq	net/lwip/netif/ppp/pap.c	/^upap_rauthreq(upap_state *u, u_char *inp, int id, int len)$/;"	f	file:
upap_reqtimeout	net/lwip/netif/ppp/pap.c	/^upap_reqtimeout(void *arg)$/;"	f	file:
upap_sauthreq	net/lwip/netif/ppp/pap.c	/^upap_sauthreq(upap_state *u)$/;"	f	file:
upap_setloginpasswd	net/lwip/netif/ppp/pap.c	/^upap_setloginpasswd(int unit, const char *luser, const char *lpassword)$/;"	f
upap_sresp	net/lwip/netif/ppp/pap.c	/^upap_sresp(upap_state *u, u_char code, u_char id, char *msg, int msglen)$/;"	f	file:
upap_timeout	net/lwip/netif/ppp/pap.c	/^upap_timeout(void *arg)$/;"	f	file:
PAP_H	net/lwip/netif/ppp/pap.h	53;"	d
UPAPCS_AUTHREQ	net/lwip/netif/ppp/pap.h	79;"	d
UPAPCS_BADAUTH	net/lwip/netif/ppp/pap.h	81;"	d
UPAPCS_CLOSED	net/lwip/netif/ppp/pap.h	77;"	d
UPAPCS_INITIAL	net/lwip/netif/ppp/pap.h	76;"	d
UPAPCS_OPEN	net/lwip/netif/ppp/pap.h	80;"	d
UPAPCS_PENDING	net/lwip/netif/ppp/pap.h	78;"	d
UPAPSS_BADAUTH	net/lwip/netif/ppp/pap.h	91;"	d
UPAPSS_CLOSED	net/lwip/netif/ppp/pap.h	87;"	d
UPAPSS_INITIAL	net/lwip/netif/ppp/pap.h	86;"	d
UPAPSS_LISTEN	net/lwip/netif/ppp/pap.h	89;"	d
UPAPSS_OPEN	net/lwip/netif/ppp/pap.h	90;"	d
UPAPSS_PENDING	net/lwip/netif/ppp/pap.h	88;"	d
UPAP_AUTHACK	net/lwip/netif/ppp/pap.h	70;"	d
UPAP_AUTHNAK	net/lwip/netif/ppp/pap.h	71;"	d
UPAP_AUTHREQ	net/lwip/netif/ppp/pap.h	69;"	d
UPAP_HEADERLEN	net/lwip/netif/ppp/pap.h	63;"	d
upap_state	net/lwip/netif/ppp/pap.h	/^typedef struct upap_state {$/;"	s
upap_state	net/lwip/netif/ppp/pap.h	/^} upap_state;$/;"	t	typeref:struct:upap_state
us_clientstate	net/lwip/netif/ppp/pap.h	/^  int us_clientstate;    \/* Client state *\/$/;"	m	struct:upap_state
us_id	net/lwip/netif/ppp/pap.h	/^  u_char us_id;          \/* Current id *\/$/;"	m	struct:upap_state
us_maxtransmits	net/lwip/netif/ppp/pap.h	/^  int us_maxtransmits;   \/* Maximum number of auth-reqs to send *\/$/;"	m	struct:upap_state
us_passwd	net/lwip/netif/ppp/pap.h	/^  const char *us_passwd; \/* Password *\/$/;"	m	struct:upap_state
us_passwdlen	net/lwip/netif/ppp/pap.h	/^  int us_passwdlen;      \/* Password length *\/$/;"	m	struct:upap_state
us_reqtimeout	net/lwip/netif/ppp/pap.h	/^  int us_reqtimeout;     \/* Time to wait for auth-req from peer *\/$/;"	m	struct:upap_state
us_serverstate	net/lwip/netif/ppp/pap.h	/^  int us_serverstate;    \/* Server state *\/$/;"	m	struct:upap_state
us_timeouttime	net/lwip/netif/ppp/pap.h	/^  int us_timeouttime;    \/* Timeout (seconds) for auth-req retrans. *\/$/;"	m	struct:upap_state
us_transmits	net/lwip/netif/ppp/pap.h	/^  int us_transmits;      \/* Number of auth-reqs sent *\/$/;"	m	struct:upap_state
us_unit	net/lwip/netif/ppp/pap.h	/^  int us_unit;           \/* Interface unit number *\/$/;"	m	struct:upap_state
us_user	net/lwip/netif/ppp/pap.h	/^  const char *us_user;   \/* User *\/$/;"	m	struct:upap_state
us_userlen	net/lwip/netif/ppp/pap.h	/^  int us_userlen;        \/* User length *\/$/;"	m	struct:upap_state
ESCAPE_P	net/lwip/netif/ppp/ppp.c	135;"	d	file:
GetMask	net/lwip/netif/ppp/ppp.c	/^GetMask(u32_t addr)$/;"	f
PDADDRESS	net/lwip/netif/ppp/ppp.c	/^  PDADDRESS,   \/* Process address field. *\/$/;"	e	enum:__anon5	file:
PDCONTROL	net/lwip/netif/ppp/ppp.c	/^  PDCONTROL,   \/* Process control field. *\/$/;"	e	enum:__anon5	file:
PDDATA	net/lwip/netif/ppp/ppp.c	/^  PDDATA       \/* Process data byte. *\/$/;"	e	enum:__anon5	file:
PDIDLE	net/lwip/netif/ppp/ppp.c	/^  PDIDLE = 0,  \/* Idle state - waiting. *\/$/;"	e	enum:__anon5	file:
PDPROTOCOL1	net/lwip/netif/ppp/ppp.c	/^  PDPROTOCOL1, \/* Process protocol field 1. *\/$/;"	e	enum:__anon5	file:
PDPROTOCOL2	net/lwip/netif/ppp/ppp.c	/^  PDPROTOCOL2, \/* Process protocol field 2. *\/$/;"	e	enum:__anon5	file:
PDSTART	net/lwip/netif/ppp/ppp.c	/^  PDSTART,     \/* Process start flag. *\/$/;"	e	enum:__anon5	file:
PPPControl	net/lwip/netif/ppp/ppp.c	/^} PPPControl;$/;"	t	typeref:struct:PPPControl_s	file:
PPPControl_s	net/lwip/netif/ppp/ppp.c	/^typedef struct PPPControl_s {$/;"	s	file:
PPPDevStates	net/lwip/netif/ppp/ppp.c	/^} PPPDevStates;$/;"	t	typeref:enum:__anon5	file:
PPP_ADDRESS	net/lwip/netif/ppp/ppp.c	119;"	d	file:
PPP_CONTROL	net/lwip/netif/ppp/ppp.c	120;"	d	file:
PPP_PROTOCOL	net/lwip/netif/ppp/ppp.c	121;"	d	file:
accomp	net/lwip/netif/ppp/ppp.c	/^  int  accomp;                  \/* Does peer accept addr\/ctl compression? *\/$/;"	m	struct:PPPControl_s	file:
addrs	net/lwip/netif/ppp/ppp.c	/^  struct ppp_addrs addrs;$/;"	m	struct:PPPControl_s	typeref:struct:PPPControl_s::ppp_addrs	file:
cifaddr	net/lwip/netif/ppp/ppp.c	/^cifaddr( int pd, u32_t o, u32_t h)$/;"	f
cifdefaultroute	net/lwip/netif/ppp/ppp.c	/^cifdefaultroute(int pd, u32_t l, u32_t g)$/;"	f
errCode	net/lwip/netif/ppp/ppp.c	/^  int  errCode;                 \/* Code indicating why interface is down. *\/$/;"	m	struct:PPPControl_s	file:
ethif	net/lwip/netif/ppp/ppp.c	/^  struct netif *ethif;$/;"	m	struct:PPPControl_s	typeref:struct:PPPControl_s::netif	file:
fcstab	net/lwip/netif/ppp/ppp.c	/^static const u_short fcstab[256] = {$/;"	v	file:
fd	net/lwip/netif/ppp/ppp.c	/^  sio_fd_t fd;                  \/* File device ID of port. *\/$/;"	m	struct:PPPControl_s	file:
get_idle_time	net/lwip/netif/ppp/ppp.c	/^get_idle_time(int u, struct ppp_idle *ip)$/;"	f
if_up	net/lwip/netif/ppp/ppp.c	/^  int  if_up;                   \/* True when the interface is up. *\/$/;"	m	struct:PPPControl_s	file:
inACCM	net/lwip/netif/ppp/ppp.c	/^  ext_accm inACCM;              \/* Async-Ctl-Char-Map for input. *\/$/;"	m	struct:PPPControl_s	file:
inEscaped	net/lwip/netif/ppp/ppp.c	/^  char inEscaped;               \/* Escape next character. *\/$/;"	m	struct:PPPControl_s	file:
inFCS	net/lwip/netif/ppp/ppp.c	/^  u16_t inFCS;                  \/* Input Frame Check Sequence value. *\/$/;"	m	struct:PPPControl_s	file:
inHead	net/lwip/netif/ppp/ppp.c	/^  struct pbuf *inHead, *inTail; \/* The input packet. *\/$/;"	m	struct:PPPControl_s	typeref:struct:PPPControl_s::pbuf	file:
inProtocol	net/lwip/netif/ppp/ppp.c	/^  u16_t inProtocol;             \/* The input protocol code. *\/$/;"	m	struct:PPPControl_s	file:
inState	net/lwip/netif/ppp/ppp.c	/^  PPPDevStates inState;         \/* The input process state. *\/$/;"	m	struct:PPPControl_s	file:
inTail	net/lwip/netif/ppp/ppp.c	/^  struct pbuf *inHead, *inTail; \/* The input packet. *\/$/;"	m	struct:PPPControl_s	typeref:struct:PPPControl_s::	file:
kill_link	net/lwip/netif/ppp/ppp.c	/^  int  kill_link;               \/* Shut the link down. *\/$/;"	m	struct:PPPControl_s	file:
lastXMit	net/lwip/netif/ppp/ppp.c	/^  u_long lastXMit;              \/* Time of last transmission. *\/$/;"	m	struct:PPPControl_s	file:
linkStatusCB	net/lwip/netif/ppp/ppp.c	/^  void (*linkStatusCB)(void *ctx, int errCode, void *arg);$/;"	m	struct:PPPControl_s	file:
linkStatusCtx	net/lwip/netif/ppp/ppp.c	/^  void *linkStatusCtx;$/;"	m	struct:PPPControl_s	file:
mode	net/lwip/netif/ppp/ppp.c	/^  enum NPmode mode;$/;"	m	struct:npioctl	typeref:enum:npioctl::NPmode	file:
mtu	net/lwip/netif/ppp/ppp.c	/^  int  mtu;                     \/* Peer's mru *\/$/;"	m	struct:PPPControl_s	file:
nPut	net/lwip/netif/ppp/ppp.c	/^nPut(PPPControl *pc, struct pbuf *nb)$/;"	f	file:
netif	net/lwip/netif/ppp/ppp.c	/^  struct netif netif;$/;"	m	struct:PPPControl_s	typeref:struct:PPPControl_s::netif	file:
npioctl	net/lwip/netif/ppp/ppp.c	/^struct npioctl {$/;"	s	file:
openFlag	net/lwip/netif/ppp/ppp.c	/^  char openFlag;                \/* True when in use. *\/$/;"	m	struct:PPPControl_s	file:
outACCM	net/lwip/netif/ppp/ppp.c	/^  ext_accm outACCM;             \/* Async-Ctl-Char-Map for output. *\/$/;"	m	struct:PPPControl_s	file:
outpacket_buf	net/lwip/netif/ppp/ppp.c	/^u_char *outpacket_buf[NUM_PPP];  $/;"	v
pcomp	net/lwip/netif/ppp/ppp.c	/^  int  pcomp;                   \/* Does peer accept protocol compression? *\/$/;"	m	struct:PPPControl_s	file:
pppACCMMask	net/lwip/netif/ppp/ppp.c	/^static u_char pppACCMMask[] = {$/;"	v	file:
pppAppend	net/lwip/netif/ppp/ppp.c	/^pppAppend(u_char c, struct pbuf *nb, ext_accm *outACCM)$/;"	f	file:
pppClose	net/lwip/netif/ppp/ppp.c	/^pppClose(int pd)$/;"	f
pppControl	net/lwip/netif/ppp/ppp.c	/^static PPPControl pppControl[NUM_PPP]; \/* The PPP interface control blocks. *\/$/;"	v	file:
pppDrop	net/lwip/netif/ppp/ppp.c	/^pppDrop(PPPControl *pc)$/;"	f	file:
pppHupCB	net/lwip/netif/ppp/ppp.c	/^pppHupCB(void *arg)$/;"	f	file:
pppIOCtl	net/lwip/netif/ppp/ppp.c	/^pppIOCtl(int pd, int cmd, void *arg)$/;"	f
pppInProc	net/lwip/netif/ppp/ppp.c	/^pppInProc(int pd, u_char *s, int l)$/;"	f	file:
pppInProcOverEthernet	net/lwip/netif/ppp/ppp.c	/^pppInProcOverEthernet(int pd, struct pbuf *pb)$/;"	f
pppInit	net/lwip/netif/ppp/ppp.c	/^pppInit(void)$/;"	f
pppInput	net/lwip/netif/ppp/ppp.c	/^pppInput(void *arg)$/;"	f	file:
pppInputHeader	net/lwip/netif/ppp/ppp.c	/^struct pppInputHeader {$/;"	s	file:
pppLinkDown	net/lwip/netif/ppp/ppp.c	/^pppLinkDown(int pd)$/;"	f
pppLinkTerminated	net/lwip/netif/ppp/ppp.c	/^pppLinkTerminated(int pd)$/;"	f
pppMTU	net/lwip/netif/ppp/ppp.c	/^pppMTU(int pd)$/;"	f
pppMain	net/lwip/netif/ppp/ppp.c	/^pppMain(void *arg)$/;"	f	file:
pppMainWakeup	net/lwip/netif/ppp/ppp.c	/^pppMainWakeup(int pd)$/;"	f
pppOverEthernetClose	net/lwip/netif/ppp/ppp.c	/^pppOverEthernetClose(int pd)$/;"	f
pppOverEthernetInitFailed	net/lwip/netif/ppp/ppp.c	/^pppOverEthernetInitFailed(void* arg)$/;"	f
pppOverEthernetLinkStatusCB	net/lwip/netif/ppp/ppp.c	/^pppOverEthernetLinkStatusCB(int pd, int up)$/;"	f	file:
pppOverEthernetOpen	net/lwip/netif/ppp/ppp.c	/^int pppOverEthernetOpen(struct netif *ethif, const char *service_name, const char *concentrator_name, void (*linkStatusCB)(void *ctx, int errCode, void *arg), void *linkStatusCtx)$/;"	f
pppOverSerialOpen	net/lwip/netif/ppp/ppp.c	/^pppOverSerialOpen(sio_fd_t fd, void (*linkStatusCB)(void *ctx, int errCode, void *arg), void *linkStatusCtx)$/;"	f
pppSetAuth	net/lwip/netif/ppp/ppp.c	/^pppSetAuth(enum pppAuthType authType, const char *user, const char *passwd)$/;"	f
pppSigHUP	net/lwip/netif/ppp/ppp.c	/^pppSigHUP(int pd)$/;"	f
pppSingleBuf	net/lwip/netif/ppp/ppp.c	/^pppSingleBuf(struct pbuf *p)$/;"	f
pppStartCB	net/lwip/netif/ppp/ppp.c	/^pppStartCB(void *arg)$/;"	f	file:
pppStopCB	net/lwip/netif/ppp/ppp.c	/^pppStopCB(void *arg)$/;"	f	file:
pppWrite	net/lwip/netif/ppp/ppp.c	/^pppWrite(int pd, const u_char *s, int n)$/;"	f
pppWriteOverEthernet	net/lwip/netif/ppp/ppp.c	/^pppWriteOverEthernet(int pd, const u_char *s, int n)$/;"	f
ppp_protocols	net/lwip/netif/ppp/ppp.c	/^struct protent *ppp_protocols[] = {$/;"	v	typeref:struct:protent
ppp_recv_config	net/lwip/netif/ppp/ppp.c	/^ppp_recv_config( int unit, int mru, u32_t asyncmap, int pcomp, int accomp)$/;"	f
ppp_send_config	net/lwip/netif/ppp/ppp.c	/^ppp_send_config( int unit, int mtu, u32_t asyncmap, int pcomp, int accomp)$/;"	f
ppp_set_xaccm	net/lwip/netif/ppp/ppp.c	/^ppp_set_xaccm(int unit, ext_accm *accm)$/;"	f
ppp_settings	net/lwip/netif/ppp/ppp.c	/^struct ppp_settings ppp_settings;$/;"	v	typeref:struct:ppp_settings
pppifNetifInit	net/lwip/netif/ppp/ppp.c	/^pppifNetifInit(struct netif *netif)$/;"	f	file:
pppifOutput	net/lwip/netif/ppp/ppp.c	/^pppifOutput(struct netif *netif, struct pbuf *pb, struct ip_addr *ipaddr)$/;"	f	file:
pppifOutputOverEthernet	net/lwip/netif/ppp/ppp.c	/^pppifOutputOverEthernet(int pd, struct pbuf *p)$/;"	f	file:
pppoe_sc	net/lwip/netif/ppp/ppp.c	/^  struct pppoe_softc *pppoe_sc;$/;"	m	struct:PPPControl_s	typeref:struct:PPPControl_s::pppoe_softc	file:
proto	net/lwip/netif/ppp/ppp.c	/^  u16_t proto;$/;"	m	struct:pppInputHeader	file:
protocol	net/lwip/netif/ppp/ppp.c	/^  int         protocol; \/* PPP procotol, e.g. PPP_IP *\/$/;"	m	struct:npioctl	file:
sifaddr	net/lwip/netif/ppp/ppp.c	/^sifaddr( int pd, u32_t o, u32_t h, u32_t m, u32_t ns1, u32_t ns2)$/;"	f
sifdefaultroute	net/lwip/netif/ppp/ppp.c	/^sifdefaultroute(int pd, u32_t l, u32_t g)$/;"	f
sifdown	net/lwip/netif/ppp/ppp.c	/^sifdown(int pd)$/;"	f
sifnpmode	net/lwip/netif/ppp/ppp.c	/^sifnpmode(int u, int proto, enum NPmode mode)$/;"	f
sifup	net/lwip/netif/ppp/ppp.c	/^sifup(int pd)$/;"	f
sifvjcomp	net/lwip/netif/ppp/ppp.c	/^sifvjcomp( int pd, int vjcomp, int cidcomp, int maxcid)$/;"	f
sig_hup	net/lwip/netif/ppp/ppp.c	/^  int  sig_hup;                 \/* Carrier lost. *\/$/;"	m	struct:PPPControl_s	file:
subnetMask	net/lwip/netif/ppp/ppp.c	/^u_long subnetMask;$/;"	v
unit	net/lwip/netif/ppp/ppp.c	/^  int unit;$/;"	m	struct:pppInputHeader	file:
vjComp	net/lwip/netif/ppp/ppp.c	/^  struct vjcompress vjComp;     \/* Van Jabobsen compression header. *\/$/;"	m	struct:PPPControl_s	typeref:struct:PPPControl_s::vjcompress	file:
vjEnabled	net/lwip/netif/ppp/ppp.c	/^  int  vjEnabled;               \/* Flag indicating VJ compression enabled. *\/$/;"	m	struct:PPPControl_s	file:
BCMP	net/lwip/netif/ppp/ppp.h	210;"	d
BCOPY	net/lwip/netif/ppp/ppp.h	211;"	d
BZERO	net/lwip/netif/ppp/ppp.h	212;"	d
DECPTR	net/lwip/netif/ppp/ppp.h	208;"	d
GETCHAR	net/lwip/netif/ppp/ppp.h	176;"	d
GETLONG	net/lwip/netif/ppp/ppp.h	193;"	d
GETSHORT	net/lwip/netif/ppp/ppp.h	184;"	d
INCPTR	net/lwip/netif/ppp/ppp.h	207;"	d
MAKEHEADER	net/lwip/netif/ppp/ppp.h	223;"	d
NPMODE_DROP	net/lwip/netif/ppp/ppp.h	/^  NPMODE_DROP,        \/* silently drop the packet *\/$/;"	e	enum:NPmode
NPMODE_ERROR	net/lwip/netif/ppp/ppp.h	/^  NPMODE_ERROR,       \/* return an error *\/$/;"	e	enum:NPmode
NPMODE_PASS	net/lwip/netif/ppp/ppp.h	/^  NPMODE_PASS,        \/* pass the packet through *\/$/;"	e	enum:NPmode
NPMODE_QUEUE	net/lwip/netif/ppp/ppp.h	/^  NPMODE_QUEUE        \/* save it up for later. *\/$/;"	e	enum:NPmode
NPmode	net/lwip/netif/ppp/ppp.h	/^enum NPmode {$/;"	g
PPPAUTHTYPE_ANY	net/lwip/netif/ppp/ppp.h	/^    PPPAUTHTYPE_ANY,$/;"	e	enum:pppAuthType
PPPAUTHTYPE_CHAP	net/lwip/netif/ppp/ppp.h	/^    PPPAUTHTYPE_CHAP$/;"	e	enum:pppAuthType
PPPAUTHTYPE_NONE	net/lwip/netif/ppp/ppp.h	/^    PPPAUTHTYPE_NONE,$/;"	e	enum:pppAuthType
PPPAUTHTYPE_PAP	net/lwip/netif/ppp/ppp.h	/^    PPPAUTHTYPE_PAP,$/;"	e	enum:pppAuthType
PPPCTLG_ERRCODE	net/lwip/netif/ppp/ppp.h	252;"	d
PPPCTLG_FD	net/lwip/netif/ppp/ppp.h	253;"	d
PPPCTLG_UPSTATUS	net/lwip/netif/ppp/ppp.h	250;"	d
PPPCTLS_ERRCODE	net/lwip/netif/ppp/ppp.h	251;"	d
PPPERR_ALLOC	net/lwip/netif/ppp/ppp.h	237;"	d
PPPERR_AUTHFAIL	net/lwip/netif/ppp/ppp.h	240;"	d
PPPERR_CONNECT	net/lwip/netif/ppp/ppp.h	239;"	d
PPPERR_DEVICE	net/lwip/netif/ppp/ppp.h	236;"	d
PPPERR_NONE	net/lwip/netif/ppp/ppp.h	233;"	d
PPPERR_OPEN	net/lwip/netif/ppp/ppp.h	235;"	d
PPPERR_PARAM	net/lwip/netif/ppp/ppp.h	234;"	d
PPPERR_PROTOCOL	net/lwip/netif/ppp/ppp.h	241;"	d
PPPERR_USER	net/lwip/netif/ppp/ppp.h	238;"	d
PPP_ALLSTATIONS	net/lwip/netif/ppp/ppp.h	125;"	d
PPP_AT	net/lwip/netif/ppp/ppp.h	135;"	d
PPP_ATCP	net/lwip/netif/ppp/ppp.h	140;"	d
PPP_CBCP	net/lwip/netif/ppp/ppp.h	146;"	d
PPP_CCP	net/lwip/netif/ppp/ppp.h	141;"	d
PPP_CHAP	net/lwip/netif/ppp/ppp.h	145;"	d
PPP_COMP	net/lwip/netif/ppp/ppp.h	138;"	d
PPP_ESCAPE	net/lwip/netif/ppp/ppp.h	128;"	d
PPP_FCS	net/lwip/netif/ppp/ppp.h	153;"	d
PPP_FCSLEN	net/lwip/netif/ppp/ppp.h	119;"	d
PPP_FLAG	net/lwip/netif/ppp/ppp.h	127;"	d
PPP_GOODFCS	net/lwip/netif/ppp/ppp.h	152;"	d
PPP_H	net/lwip/netif/ppp/ppp.h	35;"	d
PPP_HDRLEN	net/lwip/netif/ppp/ppp.h	118;"	d
PPP_INITFCS	net/lwip/netif/ppp/ppp.h	151;"	d
PPP_IP	net/lwip/netif/ppp/ppp.h	134;"	d
PPP_IPCP	net/lwip/netif/ppp/ppp.h	139;"	d
PPP_LCP	net/lwip/netif/ppp/ppp.h	142;"	d
PPP_LQR	net/lwip/netif/ppp/ppp.h	144;"	d
PPP_PAP	net/lwip/netif/ppp/ppp.h	143;"	d
PPP_TRANS	net/lwip/netif/ppp/ppp.h	129;"	d
PPP_UI	net/lwip/netif/ppp/ppp.h	126;"	d
PPP_VJC_COMP	net/lwip/netif/ppp/ppp.h	136;"	d
PPP_VJC_UNCOMP	net/lwip/netif/ppp/ppp.h	137;"	d
PRINTMSG	net/lwip/netif/ppp/ppp.h	215;"	d
PRINTMSG	net/lwip/netif/ppp/ppp.h	217;"	d
PUTCHAR	net/lwip/netif/ppp/ppp.h	179;"	d
PUTLONG	net/lwip/netif/ppp/ppp.h	199;"	d
PUTSHORT	net/lwip/netif/ppp/ppp.h	188;"	d
TIMEOUT	net/lwip/netif/ppp/ppp.h	96;"	d
UNTIMEOUT	net/lwip/netif/ppp/ppp.h	97;"	d
auth_required	net/lwip/netif/ppp/ppp.h	/^  u_int  auth_required     : 1;       \/* Peer is required to authenticate *\/$/;"	m	struct:ppp_settings
close	net/lwip/netif/ppp/ppp.h	/^    void (*close) (int unit, char *reason);$/;"	m	struct:protent
disable_defaultip	net/lwip/netif/ppp/ppp.h	/^  u_int  disable_defaultip : 1;       \/* Don't use hostname for default IP addrs *\/$/;"	m	struct:ppp_settings
dns1	net/lwip/netif/ppp/ppp.h	/^  struct ip_addr our_ipaddr, his_ipaddr, netmask, dns1, dns2;$/;"	m	struct:ppp_addrs	typeref:struct:ppp_addrs::
dns2	net/lwip/netif/ppp/ppp.h	/^  struct ip_addr our_ipaddr, his_ipaddr, netmask, dns1, dns2;$/;"	m	struct:ppp_addrs	typeref:struct:ppp_addrs::
enabled_flag	net/lwip/netif/ppp/ppp.h	/^    int  enabled_flag;      \/* 0 iff protocol is disabled *\/$/;"	m	struct:protent
explicit_remote	net/lwip/netif/ppp/ppp.h	/^  u_int  explicit_remote   : 1;       \/* remote_name specified with remotename opt *\/$/;"	m	struct:ppp_settings
ext_accm	net/lwip/netif/ppp/ppp.h	/^typedef u_char  ext_accm[32];$/;"	t
his_ipaddr	net/lwip/netif/ppp/ppp.h	/^  struct ip_addr our_ipaddr, his_ipaddr, netmask, dns1, dns2;$/;"	m	struct:ppp_addrs	typeref:struct:ppp_addrs::
idle_time_limit	net/lwip/netif/ppp/ppp.h	/^  u_short idle_time_limit;            \/* Shut down link if idle for this long *\/$/;"	m	struct:ppp_settings
init	net/lwip/netif/ppp/ppp.h	/^    void (*init) (int unit);$/;"	m	struct:protent
input	net/lwip/netif/ppp/ppp.h	/^    void (*input) (int unit, u_char *pkt, int len);$/;"	m	struct:protent
lowerdown	net/lwip/netif/ppp/ppp.h	/^    void (*lowerdown) (int unit);$/;"	m	struct:protent
lowerup	net/lwip/netif/ppp/ppp.h	/^    void (*lowerup) (int unit);$/;"	m	struct:protent
maxconnect	net/lwip/netif/ppp/ppp.h	/^  int  maxconnect;                    \/* Maximum connect time (seconds) *\/$/;"	m	struct:ppp_settings
name	net/lwip/netif/ppp/ppp.h	/^    char *name;         \/* Text name of protocol *\/$/;"	m	struct:protent
netmask	net/lwip/netif/ppp/ppp.h	/^  struct ip_addr our_ipaddr, his_ipaddr, netmask, dns1, dns2;$/;"	m	struct:ppp_addrs	typeref:struct:ppp_addrs::
open	net/lwip/netif/ppp/ppp.h	/^    void (*open) (int unit);$/;"	m	struct:protent
our_ipaddr	net/lwip/netif/ppp/ppp.h	/^  struct ip_addr our_ipaddr, his_ipaddr, netmask, dns1, dns2;$/;"	m	struct:ppp_addrs	typeref:struct:ppp_addrs::ip_addr
our_name	net/lwip/netif/ppp/ppp.h	/^  char our_name   [MAXNAMELEN   + 1]; \/* Our name for authentication purposes *\/$/;"	m	struct:ppp_settings
passwd	net/lwip/netif/ppp/ppp.h	/^  char passwd     [MAXSECRETLEN + 1]; \/* Password for PAP, secret for CHAP *\/$/;"	m	struct:ppp_settings
pppAuthType	net/lwip/netif/ppp/ppp.h	/^enum pppAuthType {$/;"	g
pppOpen	net/lwip/netif/ppp/ppp.h	393;"	d
ppp_addrs	net/lwip/netif/ppp/ppp.h	/^struct ppp_addrs {$/;"	s
ppp_idle	net/lwip/netif/ppp/ppp.h	/^struct ppp_idle {$/;"	s
ppp_settings	net/lwip/netif/ppp/ppp.h	/^struct ppp_settings {$/;"	s
protent	net/lwip/netif/ppp/ppp.h	/^struct protent {$/;"	s
protocol	net/lwip/netif/ppp/ppp.h	/^    u_short protocol;       \/* PPP protocol number *\/$/;"	m	struct:protent
protrej	net/lwip/netif/ppp/ppp.h	/^    void (*protrej) (int unit);$/;"	m	struct:protent
recv_idle	net/lwip/netif/ppp/ppp.h	/^  u_short recv_idle;      \/* seconds since last NP packet received *\/$/;"	m	struct:ppp_idle
refuse_chap	net/lwip/netif/ppp/ppp.h	/^  u_int  refuse_chap       : 1;       \/* Don't wanna auth. ourselves with CHAP *\/$/;"	m	struct:ppp_settings
refuse_pap	net/lwip/netif/ppp/ppp.h	/^  u_int  refuse_pap        : 1;       \/* Don't wanna auth. ourselves with PAP *\/$/;"	m	struct:ppp_settings
remote_name	net/lwip/netif/ppp/ppp.h	/^  char remote_name[MAXNAMELEN   + 1]; \/* Peer's name for authentication *\/$/;"	m	struct:ppp_settings
u_char	net/lwip/netif/ppp/ppp.h	/^typedef unsigned char  u_char;$/;"	t
u_int	net/lwip/netif/ppp/ppp.h	/^typedef unsigned int   u_int;$/;"	t
u_long	net/lwip/netif/ppp/ppp.h	/^typedef unsigned long  u_long;$/;"	t
u_short	net/lwip/netif/ppp/ppp.h	/^typedef unsigned short u_short;$/;"	t
usehostname	net/lwip/netif/ppp/ppp.h	/^  u_int  usehostname       : 1;       \/* Use hostname for our_name *\/$/;"	m	struct:ppp_settings
usepeerdns	net/lwip/netif/ppp/ppp.h	/^  u_int  usepeerdns        : 1;       \/* Ask peer for DNS adds *\/$/;"	m	struct:ppp_settings
user	net/lwip/netif/ppp/ppp.h	/^  char user       [MAXNAMELEN   + 1]; \/* Username for PAP *\/$/;"	m	struct:ppp_settings
xmit_idle	net/lwip/netif/ppp/ppp.h	/^  u_short xmit_idle;      \/* seconds since last NP packet sent *\/$/;"	m	struct:ppp_idle
IFF_PASSIVE	net/lwip/netif/ppp/ppp_oe.c	188;"	d	file:
LIST_EMPTY	net/lwip/netif/ppp/ppp_oe.c	122;"	d	file:
LIST_ENTRY	net/lwip/netif/ppp/ppp_oe.c	112;"	d	file:
LIST_FIRST	net/lwip/netif/ppp/ppp_oe.c	124;"	d	file:
LIST_FOREACH	net/lwip/netif/ppp/ppp_oe.c	126;"	d	file:
LIST_HEAD	net/lwip/netif/ppp/ppp_oe.c	104;"	d	file:
LIST_HEAD_INITIALIZER	net/lwip/netif/ppp/ppp_oe.c	109;"	d	file:
LIST_INIT	net/lwip/netif/ppp/ppp_oe.c	131;"	d	file:
LIST_INSERT_AFTER	net/lwip/netif/ppp/ppp_oe.c	135;"	d	file:
LIST_INSERT_BEFORE	net/lwip/netif/ppp/ppp_oe.c	143;"	d	file:
LIST_INSERT_HEAD	net/lwip/netif/ppp/ppp_oe.c	150;"	d	file:
LIST_NEXT	net/lwip/netif/ppp/ppp_oe.c	157;"	d	file:
LIST_REMOVE	net/lwip/netif/ppp/ppp_oe.c	159;"	d	file:
PPPOE_ADD_16	net/lwip/netif/ppp/ppp_oe.c	170;"	d	file:
PPPOE_ADD_HEADER	net/lwip/netif/ppp/ppp_oe.c	175;"	d	file:
PPPOE_DISC_MAXPADI	net/lwip/netif/ppp/ppp_oe.c	183;"	d	file:
PPPOE_DISC_MAXPADR	net/lwip/netif/ppp/ppp_oe.c	184;"	d	file:
PPPOE_DISC_TIMEOUT	net/lwip/netif/ppp/ppp_oe.c	181;"	d	file:
PPPOE_SLOW_RETRY	net/lwip/netif/ppp/ppp_oe.c	182;"	d	file:
_SYS_QUEUE_H_	net/lwip/netif/ppp/ppp_oe.c	88;"	d	file:
pppoe_abort_connect	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_abort_connect(struct pppoe_softc *sc)$/;"	f	file:
pppoe_clear_softc	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_clear_softc(struct pppoe_softc *sc, const char *message)$/;"	f	file:
pppoe_connect	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_connect(struct pppoe_softc *sc)$/;"	f
pppoe_create	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_create(struct netif *ethif, int pd, void (*linkStatusCB)(int pd, int up), struct pppoe_softc **scptr)$/;"	f
pppoe_data_input	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_data_input(struct netif *netif, struct pbuf *pb)$/;"	f
pppoe_destroy	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_destroy(struct netif *ifp)$/;"	f
pppoe_disc_input	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_disc_input(struct netif *netif, struct pbuf *p)$/;"	f
pppoe_disconnect	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_disconnect(struct pppoe_softc *sc)$/;"	f
pppoe_dispatch_disc_pkt	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_dispatch_disc_pkt(struct netif *netif, struct pbuf *pb)$/;"	f	file:
pppoe_do_disconnect	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_do_disconnect(struct pppoe_softc *sc)$/;"	f	file:
pppoe_find_softc_by_hunique	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_find_softc_by_hunique(u8_t *token, size_t len, struct netif *rcvif)$/;"	f	file:
pppoe_find_softc_by_session	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_find_softc_by_session(u_int session, struct netif *rcvif)$/;"	f	file:
pppoe_hdrlen	net/lwip/netif/ppp/ppp_oe.c	/^int pppoe_hdrlen;$/;"	v
pppoe_init	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_init(void)$/;"	f
pppoe_linkstatus_up	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_linkstatus_up(void *arg)$/;"	f	file:
pppoe_output	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_output(struct pppoe_softc *sc, struct pbuf *pb)$/;"	f	file:
pppoe_send_padi	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_send_padi(struct pppoe_softc *sc)$/;"	f	file:
pppoe_send_pado	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_send_pado(struct pppoe_softc *sc)$/;"	f	file:
pppoe_send_padr	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_send_padr(struct pppoe_softc *sc)$/;"	f	file:
pppoe_send_pads	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_send_pads(struct pppoe_softc *sc)$/;"	f	file:
pppoe_send_padt	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_send_padt(struct netif *outgoing_if, u_int session, const u8_t *dest)$/;"	f	file:
pppoe_softc	net/lwip/netif/ppp/ppp_oe.c	/^struct pppoe_softc {$/;"	s	file:
pppoe_timeout	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_timeout(void *arg)$/;"	f	file:
pppoe_xmit	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_xmit(struct pppoe_softc *sc, struct pbuf *pb)$/;"	f
sc_ac_cookie	net/lwip/netif/ppp/ppp_oe.c	/^  u8_t *sc_ac_cookie;          \/* content of AC cookie we must echo back *\/$/;"	m	struct:pppoe_softc	file:
sc_ac_cookie_len	net/lwip/netif/ppp/ppp_oe.c	/^  size_t sc_ac_cookie_len;     \/* length of cookie data *\/$/;"	m	struct:pppoe_softc	file:
sc_concentrator_name	net/lwip/netif/ppp/ppp_oe.c	/^  char *sc_concentrator_name;  \/* if != NULL: requested concentrator id *\/$/;"	m	struct:pppoe_softc	file:
sc_dest	net/lwip/netif/ppp/ppp_oe.c	/^  struct eth_addr sc_dest;     \/* hardware address of concentrator *\/$/;"	m	struct:pppoe_softc	typeref:struct:pppoe_softc::eth_addr	file:
sc_ethif	net/lwip/netif/ppp/ppp_oe.c	/^  struct netif *sc_ethif;      \/* ethernet interface we are using *\/$/;"	m	struct:pppoe_softc	typeref:struct:pppoe_softc::netif	file:
sc_hunique	net/lwip/netif/ppp/ppp_oe.c	/^  u8_t *sc_hunique;            \/* content of host unique we must echo back *\/$/;"	m	struct:pppoe_softc	file:
sc_hunique_len	net/lwip/netif/ppp/ppp_oe.c	/^  size_t sc_hunique_len;       \/* length of host unique *\/$/;"	m	struct:pppoe_softc	file:
sc_linkStatusCB	net/lwip/netif/ppp/ppp_oe.c	/^  void (*sc_linkStatusCB)(int pd, int up);$/;"	m	struct:pppoe_softc	file:
sc_padi_retried	net/lwip/netif/ppp/ppp_oe.c	/^  int sc_padi_retried;         \/* number of PADI retries already done *\/$/;"	m	struct:pppoe_softc	file:
sc_padr_retried	net/lwip/netif/ppp/ppp_oe.c	/^  int sc_padr_retried;         \/* number of PADR retries already done *\/$/;"	m	struct:pppoe_softc	file:
sc_pd	net/lwip/netif/ppp/ppp_oe.c	/^  int sc_pd;                   \/* ppp unit number *\/$/;"	m	struct:pppoe_softc	file:
sc_service_name	net/lwip/netif/ppp/ppp_oe.c	/^  char *sc_service_name;       \/* if != NULL: requested name of service *\/$/;"	m	struct:pppoe_softc	file:
sc_session	net/lwip/netif/ppp/ppp_oe.c	/^  u16_t sc_session;            \/* PPPoE session id *\/$/;"	m	struct:pppoe_softc	file:
sc_state	net/lwip/netif/ppp/ppp_oe.c	/^  int sc_state;                \/* discovery phase or session connected *\/$/;"	m	struct:pppoe_softc	file:
AUTHDEBUG	net/lwip/netif/ppp/pppdebug.h	66;"	d
AUTHDEBUG	net/lwip/netif/ppp/pppdebug.h	76;"	d
CHAPDEBUG	net/lwip/netif/ppp/pppdebug.h	71;"	d
CHAPDEBUG	net/lwip/netif/ppp/pppdebug.h	81;"	d
FSMDEBUG	net/lwip/netif/ppp/pppdebug.h	70;"	d
FSMDEBUG	net/lwip/netif/ppp/pppdebug.h	80;"	d
IPCPDEBUG	net/lwip/netif/ppp/pppdebug.h	67;"	d
IPCPDEBUG	net/lwip/netif/ppp/pppdebug.h	77;"	d
LCPDEBUG	net/lwip/netif/ppp/pppdebug.h	69;"	d
LCPDEBUG	net/lwip/netif/ppp/pppdebug.h	79;"	d
LOG_CRITICAL	net/lwip/netif/ppp/pppdebug.h	/^LOG_CRITICAL = 0,$/;"	e	enum:__anon7
LOG_DEBUG	net/lwip/netif/ppp/pppdebug.h	/^LOG_DEBUG    = 7$/;"	e	enum:__anon7
LOG_DETAIL	net/lwip/netif/ppp/pppdebug.h	/^LOG_DETAIL   = 6,$/;"	e	enum:__anon7
LOG_ERR	net/lwip/netif/ppp/pppdebug.h	/^LOG_ERR      = 1,$/;"	e	enum:__anon7
LOG_INFO	net/lwip/netif/ppp/pppdebug.h	/^LOG_INFO     = 5,$/;"	e	enum:__anon7
LOG_NOTICE	net/lwip/netif/ppp/pppdebug.h	/^LOG_NOTICE   = 2,$/;"	e	enum:__anon7
LOG_WARNING	net/lwip/netif/ppp/pppdebug.h	/^LOG_WARNING  = 3,$/;"	e	enum:__anon7
LogCodes	net/lwip/netif/ppp/pppdebug.h	/^} LogCodes;$/;"	t	typeref:enum:__anon7
PPPDEBUG	net/lwip/netif/ppp/pppdebug.h	72;"	d
PPPDEBUG	net/lwip/netif/ppp/pppdebug.h	82;"	d
PPPDEBUG_H	net/lwip/netif/ppp/pppdebug.h	37;"	d
TRACELCP	net/lwip/netif/ppp/pppdebug.h	62;"	d
UPAPDEBUG	net/lwip/netif/ppp/pppdebug.h	68;"	d
UPAPDEBUG	net/lwip/netif/ppp/pppdebug.h	78;"	d
RANDPOOLSZ	net/lwip/netif/ppp/randm.c	46;"	d	file:
avChurnRand	net/lwip/netif/ppp/randm.c	/^avChurnRand(char *randData, u32_t randLen)$/;"	f
avGenRand	net/lwip/netif/ppp/randm.c	/^avGenRand(char *buf, u32_t bufLen)$/;"	f
avRandom	net/lwip/netif/ppp/randm.c	/^avRandom()$/;"	f
avRandomInit	net/lwip/netif/ppp/randm.c	/^avRandomInit()$/;"	f
avRandomSeed	net/lwip/netif/ppp/randm.c	/^static u32_t avRandomSeed = 0;      \/* Seed used for random number generation. *\/$/;"	v	file:
avRandomize	net/lwip/netif/ppp/randm.c	/^avRandomize(void)$/;"	f
avRandomized	net/lwip/netif/ppp/randm.c	/^static int  avRandomized = 0;       \/* Set when truely randomized. *\/$/;"	v	file:
randCount	net/lwip/netif/ppp/randm.c	/^static long randCount = 0;      \/* Pseudo-random incrementer *\/$/;"	v	file:
randPool	net/lwip/netif/ppp/randm.c	/^static char randPool[RANDPOOLSZ];   \/* Pool of randomness. *\/$/;"	v	file:
RANDM_H	net/lwip/netif/ppp/randm.h	35;"	d
avRandomize	net/lwip/netif/ppp/randm.h	60;"	d
DECODEL	net/lwip/netif/ppp/vj.c	107;"	d	file:
DECODES	net/lwip/netif/ppp/vj.c	118;"	d	file:
DECODEU	net/lwip/netif/ppp/vj.c	129;"	d	file:
ENCODE	net/lwip/netif/ppp/vj.c	86;"	d	file:
ENCODEZ	net/lwip/netif/ppp/vj.c	96;"	d	file:
INCR	net/lwip/netif/ppp/vj.c	45;"	d	file:
INCR	net/lwip/netif/ppp/vj.c	47;"	d	file:
getip_hl	net/lwip/netif/ppp/vj.c	51;"	d	file:
getip_hl	net/lwip/netif/ppp/vj.c	54;"	d	file:
getth_off	net/lwip/netif/ppp/vj.c	52;"	d	file:
getth_off	net/lwip/netif/ppp/vj.c	55;"	d	file:
vj_compress_init	net/lwip/netif/ppp/vj.c	/^vj_compress_init(struct vjcompress *comp)$/;"	f
vj_compress_tcp	net/lwip/netif/ppp/vj.c	/^vj_compress_tcp(struct vjcompress *comp, struct pbuf *pb)$/;"	f
vj_uncompress_err	net/lwip/netif/ppp/vj.c	/^vj_uncompress_err(struct vjcompress *comp)$/;"	f
vj_uncompress_tcp	net/lwip/netif/ppp/vj.c	/^vj_uncompress_tcp(struct pbuf **nb, struct vjcompress *comp)$/;"	f
vj_uncompress_uncomp	net/lwip/netif/ppp/vj.c	/^vj_uncompress_uncomp(struct pbuf *nb, struct vjcompress *comp)$/;"	f
MAX_HDR	net/lwip/netif/ppp/vj.h	31;"	d
MAX_SLOTS	net/lwip/netif/ppp/vj.h	30;"	d
NEW_A	net/lwip/netif/ppp/vj.h	86;"	d
NEW_C	net/lwip/netif/ppp/vj.h	83;"	d
NEW_I	net/lwip/netif/ppp/vj.h	84;"	d
NEW_S	net/lwip/netif/ppp/vj.h	85;"	d
NEW_U	net/lwip/netif/ppp/vj.h	88;"	d
NEW_W	net/lwip/netif/ppp/vj.h	87;"	d
SPECIALS_MASK	net/lwip/netif/ppp/vj.h	93;"	d
SPECIAL_D	net/lwip/netif/ppp/vj.h	92;"	d
SPECIAL_I	net/lwip/netif/ppp/vj.h	91;"	d
TCP_PUSH_BIT	net/lwip/netif/ppp/vj.h	95;"	d
TYPE_COMPRESSED_TCP	net/lwip/netif/ppp/vj.h	79;"	d
TYPE_ERROR	net/lwip/netif/ppp/vj.h	80;"	d
TYPE_IP	net/lwip/netif/ppp/vj.h	77;"	d
TYPE_UNCOMPRESSED_TCP	net/lwip/netif/ppp/vj.h	78;"	d
VJF_TOSS	net/lwip/netif/ppp/vj.h	147;"	d
VJ_H	net/lwip/netif/ppp/vj.h	26;"	d
compressSlot	net/lwip/netif/ppp/vj.h	/^  u_char compressSlot;             \/* Flag indicating OK to compress slot ID. *\/$/;"	m	struct:vjcompress
cs_filler	net/lwip/netif/ppp/vj.h	/^  u_char cs_filler;$/;"	m	struct:cstate
cs_hdr	net/lwip/netif/ppp/vj.h	115;"	d
cs_hlen	net/lwip/netif/ppp/vj.h	/^  u_short cs_hlen;        \/* size of hdr (receive only) *\/$/;"	m	struct:cstate
cs_id	net/lwip/netif/ppp/vj.h	/^  u_char cs_id;           \/* connection # associated with this state *\/$/;"	m	struct:cstate
cs_ip	net/lwip/netif/ppp/vj.h	114;"	d
cs_next	net/lwip/netif/ppp/vj.h	/^  struct cstate *cs_next; \/* next most recently used state (xmit only) *\/$/;"	m	struct:cstate	typeref:struct:cstate::cstate
cstate	net/lwip/netif/ppp/vj.h	/^struct cstate {$/;"	s
csu_hdr	net/lwip/netif/ppp/vj.h	/^    char csu_hdr[MAX_HDR];$/;"	m	union:cstate::__anon2
csu_ip	net/lwip/netif/ppp/vj.h	/^    struct ip csu_ip;     \/* ip\/tcp hdr from most recent packet *\/$/;"	m	union:cstate::__anon2	typeref:struct:cstate::__anon2::ip
flags	net/lwip/netif/ppp/vj.h	/^  u_short flags;$/;"	m	struct:vjcompress
last_cs	net/lwip/netif/ppp/vj.h	/^  struct cstate *last_cs;          \/* most recently used tstate *\/$/;"	m	struct:vjcompress	typeref:struct:vjcompress::cstate
last_recv	net/lwip/netif/ppp/vj.h	/^  u_char last_recv;                \/* last rcvd conn. id *\/$/;"	m	struct:vjcompress
last_xmit	net/lwip/netif/ppp/vj.h	/^  u_char last_xmit;                \/* last sent conn. id *\/$/;"	m	struct:vjcompress
maxSlotIndex	net/lwip/netif/ppp/vj.h	/^  u_char maxSlotIndex;$/;"	m	struct:vjcompress
rstate	net/lwip/netif/ppp/vj.h	/^  struct cstate rstate[MAX_SLOTS]; \/* receive connection states *\/$/;"	m	struct:vjcompress	typeref:struct:vjcompress::cstate
stats	net/lwip/netif/ppp/vj.h	/^  struct vjstat stats;$/;"	m	struct:vjcompress	typeref:struct:vjcompress::vjstat
tstate	net/lwip/netif/ppp/vj.h	/^  struct cstate tstate[MAX_SLOTS]; \/* xmit connection states *\/$/;"	m	struct:vjcompress	typeref:struct:vjcompress::cstate
vjcompress	net/lwip/netif/ppp/vj.h	/^struct vjcompress {$/;"	s
vjcs_u	net/lwip/netif/ppp/vj.h	/^  } vjcs_u;$/;"	m	struct:cstate	typeref:union:cstate::__anon2
vjs_compressed	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_compressed;     \/* outbound compressed packets *\/$/;"	m	struct:vjstat
vjs_compressedin	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_compressedin;   \/* inbound compressed packets *\/$/;"	m	struct:vjstat
vjs_errorin	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_errorin;        \/* inbound unknown type packets *\/$/;"	m	struct:vjstat
vjs_misses	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_misses;         \/* times couldn't find conn. state *\/$/;"	m	struct:vjstat
vjs_packets	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_packets;        \/* outbound packets *\/$/;"	m	struct:vjstat
vjs_searches	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_searches;       \/* searches for connection state *\/$/;"	m	struct:vjstat
vjs_tossed	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_tossed;         \/* inbound packets tossed because of error *\/$/;"	m	struct:vjstat
vjs_uncompressedin	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_uncompressedin; \/* inbound uncompressed packets *\/$/;"	m	struct:vjstat
vjstat	net/lwip/netif/ppp/vj.h	/^struct vjstat {$/;"	s
IP_DF	net/lwip/netif/ppp/vjbsdhdr.h	33;"	d
IP_MF	net/lwip/netif/ppp/vjbsdhdr.h	34;"	d
IP_OFFMASK	net/lwip/netif/ppp/vjbsdhdr.h	35;"	d
VJBSDHDR_H	net/lwip/netif/ppp/vjbsdhdr.h	2;"	d
ip	net/lwip/netif/ppp/vjbsdhdr.h	/^struct ip$/;"	s
ip_dst	net/lwip/netif/ppp/vjbsdhdr.h	/^  struct  in_addr ip_src,ip_dst; \/* source and dest address *\/$/;"	m	struct:ip	typeref:struct:ip::
ip_hl_v	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char   ip_hl_v;  \/* bug in GCC for mips means the bitfield stuff will sometimes break - so we use a char for both and get round it with macro's instead... *\/$/;"	m	struct:ip
ip_id	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short ip_id;                 \/* identification *\/$/;"	m	struct:ip
ip_len	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short ip_len;                \/* total length *\/$/;"	m	struct:ip
ip_off	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short ip_off;                \/* fragment offset field *\/$/;"	m	struct:ip
ip_p	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char  ip_p;                  \/* protocol *\/$/;"	m	struct:ip
ip_src	net/lwip/netif/ppp/vjbsdhdr.h	/^  struct  in_addr ip_src,ip_dst; \/* source and dest address *\/$/;"	m	struct:ip	typeref:struct:ip::in_addr
ip_sum	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short ip_sum;                \/* checksum *\/$/;"	m	struct:ip
ip_tos	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char  ip_tos;                \/* type of service *\/$/;"	m	struct:ip
ip_ttl	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char  ip_ttl;                \/* time to live *\/$/;"	m	struct:ip
tcp_seq	net/lwip/netif/ppp/vjbsdhdr.h	/^typedef u32_t tcp_seq;$/;"	t
tcphdr	net/lwip/netif/ppp/vjbsdhdr.h	/^struct tcphdr  $/;"	s
th_ack	net/lwip/netif/ppp/vjbsdhdr.h	/^  tcp_seq  th_ack;      \/* acknowledgement number *\/$/;"	m	struct:tcphdr
th_dport	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short  th_dport;    \/* destination port *\/$/;"	m	struct:tcphdr
th_flags	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char   th_flags;$/;"	m	struct:tcphdr
th_off	net/lwip/netif/ppp/vjbsdhdr.h	/^           th_off:4;    \/* data offset *\/$/;"	m	struct:tcphdr
th_off	net/lwip/netif/ppp/vjbsdhdr.h	/^  unsigned th_off:4,    \/* data offset *\/$/;"	m	struct:tcphdr
th_seq	net/lwip/netif/ppp/vjbsdhdr.h	/^  tcp_seq  th_seq;      \/* sequence number *\/$/;"	m	struct:tcphdr
th_sport	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short  th_sport;    \/* source port *\/$/;"	m	struct:tcphdr
th_sum	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short  th_sum;      \/* checksum *\/$/;"	m	struct:tcphdr
th_urp	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short  th_urp;      \/* urgent pointer *\/$/;"	m	struct:tcphdr
th_win	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short  th_win;      \/* window *\/$/;"	m	struct:tcphdr
th_x2	net/lwip/netif/ppp/vjbsdhdr.h	/^           th_x2 :4;    \/* (unused) *\/$/;"	m	struct:tcphdr
th_x2	net/lwip/netif/ppp/vjbsdhdr.h	/^  unsigned th_x2 :4,    \/* (unused) *\/$/;"	m	struct:tcphdr
th_x2_off	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char   th_x2_off;$/;"	m	struct:tcphdr
MAX_SIZE	net/lwip/netif/slipif.c	62;"	d	file:
SLIP_END	net/lwip/netif/slipif.c	57;"	d	file:
SLIP_ESC	net/lwip/netif/slipif.c	58;"	d	file:
SLIP_ESC_END	net/lwip/netif/slipif.c	59;"	d	file:
SLIP_ESC_ESC	net/lwip/netif/slipif.c	60;"	d	file:
slipif_init	net/lwip/netif/slipif.c	/^slipif_init(struct netif *netif)$/;"	f
slipif_input	net/lwip/netif/slipif.c	/^slipif_input(struct netif *netif)$/;"	f	file:
slipif_loop	net/lwip/netif/slipif.c	/^slipif_loop(void *nf)$/;"	f	file:
slipif_output	net/lwip/netif/slipif.c	/^slipif_output(struct netif *netif, struct pbuf *p, struct ip_addr *ipaddr)$/;"	f
DEFAULT	net/ns.h	6;"	d
IP	net/ns.h	4;"	d
MASK	net/ns.h	5;"	d
QUEUE_SIZE	net/ns.h	11;"	d
REQVA	net/ns.h	12;"	d
TIMER_INTERVAL	net/ns.h	8;"	d
nsoutreq	net/output.c	/^union Nsipc *nsoutreq = (union Nsipc *)0x0fffe000;$/;"	v	typeref:union:Nsipc
output	net/output.c	/^output(envid_t ns_envid)$/;"	f
buse	net/serv.c	/^static bool buse[QUEUE_SIZE];$/;"	v	file:
debug	net/serv.c	34;"	d	file:
errno	net/serv.c	/^int errno;$/;"	v
func	net/serv.c	/^	void (*func)(void);$/;"	m	struct:timer_thread	file:
get_buffer	net/serv.c	/^get_buffer(void) {$/;"	f	file:
input_envid	net/serv.c	/^static envid_t input_envid;$/;"	v	file:
lwip_init	net/serv.c	/^lwip_init(struct netif *nif, void *if_state,$/;"	f	file:
msec	net/serv.c	/^	uint32_t msec;$/;"	m	struct:timer_thread	file:
name	net/serv.c	/^	const char *name;$/;"	m	struct:timer_thread	file:
net_timer	net/serv.c	/^net_timer(uint32_t arg)$/;"	f	file:
next_i	net/serv.c	/^static int next_i(int i) { return (i+1) % QUEUE_SIZE; }$/;"	f	file:
nif	net/serv.c	/^struct netif nif;$/;"	v	typeref:struct:netif
output_envid	net/serv.c	/^static envid_t output_envid;$/;"	v	file:
prev_i	net/serv.c	/^static int prev_i(int i) { return (i ? i-1 : QUEUE_SIZE-1); }$/;"	f	file:
process_timer	net/serv.c	/^process_timer(envid_t envid) {$/;"	f	file:
put_buffer	net/serv.c	/^put_buffer(void *va) {$/;"	f	file:
req	net/serv.c	/^	union Nsipc *req;$/;"	m	struct:st_args	typeref:union:st_args::Nsipc	file:
reqno	net/serv.c	/^	int32_t reqno;$/;"	m	struct:st_args	file:
serve	net/serv.c	/^serve(void) {$/;"	f
serve_init	net/serv.c	/^serve_init(uint32_t ipaddr, uint32_t netmask, uint32_t gw)$/;"	f
serve_thread	net/serv.c	/^serve_thread(uint32_t a) {$/;"	f	file:
st_args	net/serv.c	/^struct st_args {$/;"	s	file:
start_timer	net/serv.c	/^start_timer(struct timer_thread *t, void (*func)(void), const char *name, int msec)$/;"	f	file:
t_arp	net/serv.c	/^static struct timer_thread t_arp;$/;"	v	typeref:struct:timer_thread	file:
t_tcpf	net/serv.c	/^static struct timer_thread t_tcpf;$/;"	v	typeref:struct:timer_thread	file:
t_tcps	net/serv.c	/^static struct timer_thread t_tcps;$/;"	v	typeref:struct:timer_thread	file:
tcpip_init_done	net/serv.c	/^tcpip_init_done(void *arg)$/;"	f	file:
timer_envid	net/serv.c	/^static envid_t timer_envid;$/;"	v	file:
timer_thread	net/serv.c	/^struct timer_thread {$/;"	s	file:
tmain	net/serv.c	/^tmain(uint32_t arg) {$/;"	f	file:
umain	net/serv.c	/^umain(int argc, char **argv)$/;"	f
whom	net/serv.c	/^	uint32_t whom;$/;"	m	struct:st_args	file:
announce	net/testinput.c	/^announce(void)$/;"	f	file:
hexdump	net/testinput.c	/^hexdump(const char *prefix, const void *data, int len)$/;"	f	file:
input_envid	net/testinput.c	/^static envid_t input_envid;$/;"	v	file:
output_envid	net/testinput.c	/^static envid_t output_envid;$/;"	v	file:
pkt	net/testinput.c	/^static struct jif_pkt *pkt = (struct jif_pkt*)REQVA;$/;"	v	typeref:struct:jif_pkt	file:
umain	net/testinput.c	/^umain(int argc, char **argv)$/;"	f
TESTOUTPUT_COUNT	net/testoutput.c	4;"	d	file:
output_envid	net/testoutput.c	/^static envid_t output_envid;$/;"	v	file:
pkt	net/testoutput.c	/^static struct jif_pkt *pkt = (struct jif_pkt*)REQVA;$/;"	v	typeref:struct:jif_pkt	file:
umain	net/testoutput.c	/^umain(int argc, char **argv)$/;"	f
timer	net/timer.c	/^timer(envid_t ns_envid, uint32_t initial_to) {$/;"	f
Disassembly	obj/boot/boot.asm	/^Disassembly of section .text:$/;"	l
end_pa	obj/boot/boot.asm	/^	end_pa = pa + count;$/;"	d
eph	obj/boot/boot.asm	/^	eph = ph + ELFHDR->e_phnum;$/;"	d
offset	obj/boot/boot.asm	/^	offset = (offset \/ SECTSIZE) + 1;$/;"	d
ph	obj/boot/boot.asm	/^	ph = (struct Proghdr *) ((uint8_t *) ELFHDR + ELFHDR->e_phoff);$/;"	d
protcseg	obj/boot/boot.asm	/^protcseg:$/;"	l
spin	obj/boot/boot.asm	/^spin:$/;"	l
start	obj/boot/boot.asm	/^start:$/;"	l
static	obj/boot/boot.asm	/^static __inline uint8_t$/;"	l
static	obj/boot/boot.asm	/^static __inline void$/;"	l
void	obj/boot/boot.asm	/^void readsect(void*, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void readseg(uint32_t, uint32_t, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void$/;"	l
ASM	obj/fs/fs.asm	/^#define ASM 1$/;"	d
Disassembly	obj/fs/fs.asm	/^Disassembly of section .text:$/;"	l
NHANDLERS	obj/fs/fs.asm	/^#define NHANDLERS (sizeof(handlers)\/sizeof(handlers[0]))$/;"	d
_pgfault_handler	obj/fs/fs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	obj/fs/fs.asm	/^_pgfault_upcall:$/;"	l
_start	obj/fs/fs.asm	/^_start:$/;"	l
addr	obj/fs/fs.asm	/^	addr = (void *)ROUNDDOWN(addr, PGSIZE);$/;"	d
altflag	obj/fs/fs.asm	/^			altflag = 1;$/;"	d
altflag	obj/fs/fs.asm	/^		altflag = 0;$/;"	d
args_exist	obj/fs/fs.asm	/^args_exist:$/;"	l
base	obj/fs/fs.asm	/^			base = 10;$/;"	d
base	obj/fs/fs.asm	/^			base = 16;$/;"	d
base	obj/fs/fs.asm	/^			base = 8;$/;"	d
base	obj/fs/fs.asm	/^		base = 10;$/;"	d
binaryname	obj/fs/fs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/fs/fs.asm	/^	binaryname = "fs";$/;"	d
bitmap	obj/fs/fs.asm	/^	bitmap = diskaddr(2);$/;"	d
bits	obj/fs/fs.asm	/^	bits = (uint32_t*) PGSIZE;$/;"	d
bn	obj/fs/fs.asm	/^		bn = MIN(BLKSIZE - pos % BLKSIZE, offset + count - pos);$/;"	d
bool	obj/fs/fs.asm	/^bool$/;"	l
buf	obj/fs/fs.asm	/^	buf = vbuf;$/;"	d
c	obj/fs/fs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/fs/fs.asm	/^				ch = *fmt;$/;"	d
char	obj/fs/fs.asm	/^char *$/;"	l
clrflag	obj/fs/fs.asm	/^		clrflag = 0;$/;"	d
cnt	obj/fs/fs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/fs/fs.asm	/^				color = 0;$/;"	d
color	obj/fs/fs.asm	/^			color = 0;$/;"	d
colorswitch	obj/fs/fs.asm	/^	colorswitch:$/;"	l
const	obj/fs/fs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/fs/fs.asm	/^const volatile struct Env *thisenv;$/;"	l
count	obj/fs/fs.asm	/^	count = MIN(count, f->f_size - offset);$/;"	d
d	obj/fs/fs.asm	/^	d = dst;$/;"	d
default	obj/fs/fs.asm	/^		default:$/;"	l
dig	obj/fs/fs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/fs/fs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/fs/fs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dir	obj/fs/fs.asm	/^		dir = f;$/;"	d
dir	obj/fs/fs.asm	/^	dir = 0;$/;"	d
diskno	obj/fs/fs.asm	/^	diskno = d;$/;"	d
dst_in	obj/fs/fs.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/fs/fs.asm	/^envid_t$/;"	l
err	obj/fs/fs.asm	/^				err = -err;$/;"	d
err	obj/fs/fs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/fs/fs.asm	/^    err:$/;"	l
err	obj/fs/fs.asm	/^err:$/;"	l
err1	obj/fs/fs.asm	/^    err1:$/;"	l
err2	obj/fs/fs.asm	/^    err2:$/;"	l
err3	obj/fs/fs.asm	/^    err3:$/;"	l
f	obj/fs/fs.asm	/^		f = (struct File*) blk;$/;"	d
f	obj/fs/fs.asm	/^	f = &super->s_root;$/;"	d
f	obj/fs/fs.asm	/^	f = (struct File*) blk;$/;"	d
fd	obj/fs/fs.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/fs/fs.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fileid	obj/fs/fs.asm	/^	fileid = r;$/;"	d
fsenv	obj/fs/fs.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/fs/fs.asm	/^int $/;"	l
int	obj/fs/fs.asm	/^int color;$/;"	l
int	obj/fs/fs.asm	/^int$/;"	l
int32_t	obj/fs/fs.asm	/^int32_t$/;"	l
lflag	obj/fs/fs.asm	/^		lflag = 0;$/;"	d
long	obj/fs/fs.asm	/^long$/;"	l
m	obj/fs/fs.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/fs/fs.asm	/^		m = n - tot;$/;"	d
m	obj/fs/fs.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/fs/fs.asm	/^		n = thisenv->env_runs;$/;"	d
nblock	obj/fs/fs.asm	/^	nblock = dir->f_size \/ BLKSIZE;$/;"	d
new_nblocks	obj/fs/fs.asm	/^	new_nblocks = (newsize + BLKSIZE - 1) \/ BLKSIZE;$/;"	d
newfd	obj/fs/fs.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/fs/fs.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/fs/fs.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/fs/fs.asm	/^				num = -(long long) num;$/;"	d
num	obj/fs/fs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/fs/fs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/fs/fs.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/fs/fs.asm	/^		number:$/;"	l
nva	obj/fs/fs.asm	/^	nva = fd2data(newfd);$/;"	d
o	obj/fs/fs.asm	/^	o = &opentab[fileid % MAXOPEN];$/;"	d
old_nblocks	obj/fs/fs.asm	/^	old_nblocks = (f->f_size + BLKSIZE - 1) \/ BLKSIZE;$/;"	d
ova	obj/fs/fs.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/fs/fs.asm	/^				p = "(null)";$/;"	d
p	obj/fs/fs.asm	/^		p = path;$/;"	d
p	obj/fs/fs.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/fs/fs.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/fs/fs.asm	/^			padc = '-';$/;"	d
padc	obj/fs/fs.asm	/^			padc = '0';$/;"	d
path	obj/fs/fs.asm	/^		path = skip_slash(path);$/;"	d
path	obj/fs/fs.asm	/^	path = skip_slash(path);$/;"	d
perm	obj/fs/fs.asm	/^		perm = 0;$/;"	d
pg	obj/fs/fs.asm	/^		pg = NULL;$/;"	d
precision	obj/fs/fs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/fs/fs.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/fs/fs.asm	/^		process_precision:$/;"	l
pte	obj/fs/fs.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/fs/fs.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/fs/fs.asm	/^			r = -E_INVAL;$/;"	d
r	obj/fs/fs.asm	/^			r = 0;$/;"	d
r	obj/fs/fs.asm	/^			r = handlers[req](whom, fsreq);$/;"	d
r	obj/fs/fs.asm	/^			r = serve_open(whom, (struct Fsreq_open*)fsreq, &pg, &perm);$/;"	d
r	obj/fs/fs.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/fs/fs.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/fs/fs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
req	obj/fs/fs.asm	/^		req = ipc_recv((int32_t *) &whom, fsreq, &perm);$/;"	d
reswitch	obj/fs/fs.asm	/^	reswitch:$/;"	l
ret	obj/fs/fs.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/fs/fs.asm	/^	ret = dst;$/;"	d
s	obj/fs/fs.asm	/^	s = src;$/;"	d
size_t	obj/fs/fs.asm	/^size_t$/;"	l
ssize_t	obj/fs/fs.asm	/^ssize_t$/;"	l
static	obj/fs/fs.asm	/^static __inline uint8_t$/;"	l
static	obj/fs/fs.asm	/^static __inline void$/;"	l
static	obj/fs/fs.asm	/^static char *msg = "This is the NEW message of the day!\\n\\n";$/;"	l
static	obj/fs/fs.asm	/^static const char*$/;"	l
static	obj/fs/fs.asm	/^static int diskno = 1;$/;"	l
static	obj/fs/fs.asm	/^static int$/;"	l
static	obj/fs/fs.asm	/^static long long$/;"	l
static	obj/fs/fs.asm	/^static ssize_t$/;"	l
static	obj/fs/fs.asm	/^static unsigned long long$/;"	l
static	obj/fs/fs.asm	/^static void$/;"	l
super	obj/fs/fs.asm	/^	super = diskaddr(1);$/;"	d
thisenv	obj/fs/fs.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
try_open	obj/fs/fs.asm	/^try_open:$/;"	l
union	obj/fs/fs.asm	/^union Fsipc *fsreq = (union Fsipc *)0x0ffff000;$/;"	l
unsigned	obj/fs/fs.asm	/^unsigned int$/;"	l
va	obj/fs/fs.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/fs/fs.asm	/^void *$/;"	l
void	obj/fs/fs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/fs/fs.asm	/^void$/;"	l
width	obj/fs/fs.asm	/^				width = 0;$/;"	d
width	obj/fs/fs.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/kern/kernel.asm	/^#define ASM 1$/;"	d
BUFLEN	obj/kern/kernel.asm	/^#define BUFLEN 1024$/;"	d
Disassembly	obj/kern/kernel.asm	/^Disassembly of section .text:$/;"	l
KADDR	obj/kern/kernel.asm	/^#define KADDR(pa) _kaddr(__FILE__, __LINE__, pa)$/;"	d
PADDR	obj/kern/kernel.asm	/^#define PADDR(kva) _paddr(__FILE__, __LINE__, kva)$/;"	d
_alltraps	obj/kern/kernel.asm	/^ _alltraps:$/;"	l
_start	obj/kern/kernel.asm	/^_start = RELOC(entry)$/;"	d
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = CGA_BASE;$/;"	d
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = MONO_BASE;$/;"	d
altflag	obj/kern/kernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/kern/kernel.asm	/^		altflag = 0;$/;"	d
any_matches	obj/kern/kernel.asm	/^		any_matches = 1;$/;"	d
argc	obj/kern/kernel.asm	/^	argc = 0;$/;"	d
bad	obj/kern/kernel.asm	/^bad:$/;"	l
bar_width	obj/kern/kernel.asm	/^				bar_width = 8;$/;"	d
bar_width	obj/kern/kernel.asm	/^		bar_width = 4;$/;"	d
base	obj/kern/kernel.asm	/^			base = 10;$/;"	d
base	obj/kern/kernel.asm	/^			base = 16;$/;"	d
base	obj/kern/kernel.asm	/^			base = 8;$/;"	d
base	obj/kern/kernel.asm	/^			base = PCI_MAPREG_IO_ADDR(oldv);$/;"	d
base	obj/kern/kernel.asm	/^			base = PCI_MAPREG_MEM_ADDR(oldv);$/;"	d
base	obj/kern/kernel.asm	/^		base = 10;$/;"	d
base	obj/kern/kernel.asm	/^	base = (char *)ROUNDDOWN(va, PGSIZE);$/;"	d
bda	obj/kern/kernel.asm	/^	bda = (uint8_t *) KADDR(0x40 << 4);$/;"	d
bootcpu	obj/kern/kernel.asm	/^				bootcpu = &cpus[ncpu];$/;"	d
bootcpu	obj/kern/kernel.asm	/^	bootcpu = &cpus[0];$/;"	d
buf	obj/kern/kernel.asm	/^		buf = readline("K> ");$/;"	d
c	obj/kern/kernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/kern/kernel.asm	/^		c = cons.buf[cons.rpos++];$/;"	d
c	obj/kern/kernel.asm	/^		c = getchar();$/;"	d
c	obj/kern/kernel.asm	/^	c = charcode[shift & (CTL | SHIFT)][data];$/;"	d
c	obj/kern/kernel.asm	/^	c = page2kva(pp);$/;"	d
ch	obj/kern/kernel.asm	/^				ch = *fmt;$/;"	d
char	obj/kern/kernel.asm	/^char *$/;"	l
class	obj/kern/kernel.asm	/^		class = pci_class[PCI_CLASS(f->dev_class)];$/;"	d
clrflag	obj/kern/kernel.asm	/^		clrflag = 0;$/;"	d
cnt	obj/kern/kernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
code	obj/kern/kernel.asm	/^	code = KADDR(MPENTRY_PADDR);$/;"	d
color	obj/kern/kernel.asm	/^				color = 0;$/;"	d
color	obj/kern/kernel.asm	/^			color = 0;$/;"	d
colorswitch	obj/kern/kernel.asm	/^	colorswitch:$/;"	l
conf	obj/kern/kernel.asm	/^	conf = (struct mpconf *) KADDR(mp->physaddr);$/;"	d
const	obj/kern/kernel.asm	/^		const struct UserStabData *usd = (const struct UserStabData *) USTABDATA;$/;"	t
const	obj/kern/kernel.asm	/^	const struct Stab *stabs, *stab_end;$/;"	t
cp	obj/kern/kernel.asm	/^		cp = (uint16_t*) (KERNBASE + MONO_BUF);$/;"	d
cp	obj/kern/kernel.asm	/^	cp = (uint16_t*) (KERNBASE + CGA_BUF);$/;"	d
cr0	obj/kern/kernel.asm	/^	cr0 = rcr0();$/;"	d
crt_buf	obj/kern/kernel.asm	/^	crt_buf = (uint16_t*) cp;$/;"	d
crt_pos	obj/kern/kernel.asm	/^	crt_pos = pos;$/;"	d
curenv	obj/kern/kernel.asm	/^			curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^		curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^	curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^	curenv = e;$/;"	d
d	obj/kern/kernel.asm	/^	d = dst;$/;"	d
data	obj/kern/kernel.asm	/^		data = (shift & E0ESC ? data : data & 0x7F);$/;"	d
data	obj/kern/kernel.asm	/^	data = inb(KBDATAP);$/;"	d
dead	obj/kern/kernel.asm	/^dead:$/;"	l
default	obj/kern/kernel.asm	/^		default:$/;"	l
default	obj/kern/kernel.asm	/^	default:$/;"	l
didinit	obj/kern/kernel.asm	/^	didinit = 1;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/kern/kernel.asm	/^	dst_in = dst;$/;"	d
e	obj/kern/kernel.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e1000	obj/kern/kernel.asm	/^	e1000 = (uint32_t *)mmio_map_region(pcif->reg_base[0], pcif->reg_size[0]);$/;"	d
ebp	obj/kern/kernel.asm	/^		ebp = (uint32_t *)ebp[0]; \/\/ saved %ebp$/;"	d
ebp	obj/kern/kernel.asm	/^		ebp = (uint32_t *)ebp[0];$/;"	d
ebp	obj/kern/kernel.asm	/^	ebp = (uint32_t *)read_ebp();$/;"	d
echoing	obj/kern/kernel.asm	/^	echoing = iscons(0);$/;"	d
eip	obj/kern/kernel.asm	/^		eip = ebp[1];$/;"	d
end	obj/kern/kernel.asm	/^	end = PGNUM(PADDR(boot_alloc(0)));$/;"	d
entry	obj/kern/kernel.asm	/^entry:$/;"	l
env_free_list	obj/kern/kernel.asm	/^		env_free_list = envs + i;$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e->env_link;$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e;$/;"	d
envs	obj/kern/kernel.asm	/^	envs = (struct Env *)boot_alloc(sizeof(struct Env) * NENV);$/;"	d
eph	obj/kern/kernel.asm	/^	eph = ph + elfhdr->e_phnum;$/;"	d
err	obj/kern/kernel.asm	/^				err = -err;$/;"	d
err	obj/kern/kernel.asm	/^			err = va_arg(ap, int);$/;"	d
extern	obj/kern/kernel.asm	/^extern int color;$/;"	l
extern	obj/kern/kernel.asm	/^extern struct spinlock kernel_lock;$/;"	t
f0100000	obj/kern/kernel.asm	/^f0100000 <_start+0xeffffff4>:$/;"	l
f0100000	obj/kern/kernel.asm	/^f0100000:	02 b0 ad 1b 00 00    	add    0x1bad(%eax),%dh$/;"	l
f0100006	obj/kern/kernel.asm	/^f0100006:	00 00                	add    %al,(%eax)$/;"	l
f0100008	obj/kern/kernel.asm	/^f0100008:	fe 4f 52             	decb   0x52(%edi)$/;"	l
f010000b	obj/kern/kernel.asm	/^f010000b:	e4 66                	in     $0x66,%al$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c <entry>:$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c:	66 c7 05 72 04 00 00 	movw   $0x1234,0x472$/;"	l
f0100013	obj/kern/kernel.asm	/^f0100013:	34 12 $/;"	l
f0100015	obj/kern/kernel.asm	/^f0100015:	b8 00 20 12 00       	mov    $0x122000,%eax$/;"	l
f010001a	obj/kern/kernel.asm	/^f010001a:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010001d	obj/kern/kernel.asm	/^f010001d:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0100020	obj/kern/kernel.asm	/^f0100020:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f0100025	obj/kern/kernel.asm	/^f0100025:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0100028	obj/kern/kernel.asm	/^f0100028:	b8 2f 00 10 f0       	mov    $0xf010002f,%eax$/;"	l
f010002d	obj/kern/kernel.asm	/^f010002d:	ff e0                	jmp    *%eax$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f <relocated>:$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0100034	obj/kern/kernel.asm	/^f0100034:	bc 00 20 12 f0       	mov    $0xf0122000,%esp$/;"	l
f0100039	obj/kern/kernel.asm	/^f0100039:	e8 6a 00 00 00       	call   f01000a8 <i386_init>$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e <spin>:$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e:	eb fe                	jmp    f010003e <spin>$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040 <_panic>:$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040:	55                   	push   %ebp$/;"	l
f0100041	obj/kern/kernel.asm	/^f0100041:	89 e5                	mov    %esp,%ebp$/;"	l
f0100043	obj/kern/kernel.asm	/^f0100043:	56                   	push   %esi$/;"	l
f0100044	obj/kern/kernel.asm	/^f0100044:	53                   	push   %ebx$/;"	l
f0100045	obj/kern/kernel.asm	/^f0100045:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0100048	obj/kern/kernel.asm	/^f0100048:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f010004b	obj/kern/kernel.asm	/^f010004b:	83 3d 8c 8e 2b f0 00 	cmpl   $0x0,0xf02b8e8c$/;"	l
f0100052	obj/kern/kernel.asm	/^f0100052:	75 46                	jne    f010009a <_panic+0x5a>$/;"	l
f0100054	obj/kern/kernel.asm	/^f0100054:	89 35 8c 8e 2b f0    	mov    %esi,0xf02b8e8c$/;"	l
f010005a	obj/kern/kernel.asm	/^f010005a:	fa                   	cli    $/;"	l
f010005b	obj/kern/kernel.asm	/^f010005b:	fc                   	cld    $/;"	l
f010005c	obj/kern/kernel.asm	/^f010005c:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f010005f	obj/kern/kernel.asm	/^f010005f:	e8 15 6a 00 00       	call   f0106a79 <cpunum>$/;"	l
f0100064	obj/kern/kernel.asm	/^f0100064:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0100067	obj/kern/kernel.asm	/^f0100067:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f010006b	obj/kern/kernel.asm	/^f010006b:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f010006e	obj/kern/kernel.asm	/^f010006e:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0100072	obj/kern/kernel.asm	/^f0100072:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100076	obj/kern/kernel.asm	/^f0100076:	c7 04 24 20 7a 10 f0 	movl   $0xf0107a20,(%esp)$/;"	l
f010007d	obj/kern/kernel.asm	/^f010007d:	e8 6a 3f 00 00       	call   f0103fec <cprintf>$/;"	l
f0100082	obj/kern/kernel.asm	/^f0100082:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0100086	obj/kern/kernel.asm	/^f0100086:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0100089	obj/kern/kernel.asm	/^f0100089:	e8 2b 3f 00 00       	call   f0103fb9 <vcprintf>$/;"	l
f010008e	obj/kern/kernel.asm	/^f010008e:	c7 04 24 9b 8c 10 f0 	movl   $0xf0108c9b,(%esp)$/;"	l
f0100095	obj/kern/kernel.asm	/^f0100095:	e8 52 3f 00 00       	call   f0103fec <cprintf>$/;"	l
f010009a	obj/kern/kernel.asm	/^f010009a:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01000a1	obj/kern/kernel.asm	/^f01000a1:	e8 94 09 00 00       	call   f0100a3a <monitor>$/;"	l
f01000a6	obj/kern/kernel.asm	/^f01000a6:	eb f2                	jmp    f010009a <_panic+0x5a>$/;"	l
f01000a8	obj/kern/kernel.asm	/^f01000a8 <i386_init>:$/;"	l
f01000a8	obj/kern/kernel.asm	/^f01000a8:	55                   	push   %ebp$/;"	l
f01000a9	obj/kern/kernel.asm	/^f01000a9:	89 e5                	mov    %esp,%ebp$/;"	l
f01000ab	obj/kern/kernel.asm	/^f01000ab:	53                   	push   %ebx$/;"	l
f01000ac	obj/kern/kernel.asm	/^f01000ac:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01000af	obj/kern/kernel.asm	/^f01000af:	b8 10 a0 2f f0       	mov    $0xf02fa010,%eax$/;"	l
f01000b4	obj/kern/kernel.asm	/^f01000b4:	2d 8e 73 2b f0       	sub    $0xf02b738e,%eax$/;"	l
f01000b9	obj/kern/kernel.asm	/^f01000b9:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01000bd	obj/kern/kernel.asm	/^f01000bd:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01000c4	obj/kern/kernel.asm	/^f01000c4:	00 $/;"	l
f01000c5	obj/kern/kernel.asm	/^f01000c5:	c7 04 24 8e 73 2b f0 	movl   $0xf02b738e,(%esp)$/;"	l
f01000cc	obj/kern/kernel.asm	/^f01000cc:	e8 56 63 00 00       	call   f0106427 <memset>$/;"	l
f01000d1	obj/kern/kernel.asm	/^f01000d1:	e8 f2 05 00 00       	call   f01006c8 <cons_init>$/;"	l
f01000d6	obj/kern/kernel.asm	/^f01000d6:	c7 04 24 8c 7a 10 f0 	movl   $0xf0107a8c,(%esp)$/;"	l
f01000dd	obj/kern/kernel.asm	/^f01000dd:	e8 0a 3f 00 00       	call   f0103fec <cprintf>$/;"	l
f01000e2	obj/kern/kernel.asm	/^f01000e2:	c7 44 24 04 ac 1a 00 	movl   $0x1aac,0x4(%esp)$/;"	l
f01000e9	obj/kern/kernel.asm	/^f01000e9:	00 $/;"	l
f01000ea	obj/kern/kernel.asm	/^f01000ea:	c7 04 24 a1 7a 10 f0 	movl   $0xf0107aa1,(%esp)$/;"	l
f01000f1	obj/kern/kernel.asm	/^f01000f1:	e8 f6 3e 00 00       	call   f0103fec <cprintf>$/;"	l
f01000f6	obj/kern/kernel.asm	/^f01000f6:	e8 88 14 00 00       	call   f0101583 <mem_init>$/;"	l
f01000fb	obj/kern/kernel.asm	/^f01000fb:	e8 0a 37 00 00       	call   f010380a <env_init>$/;"	l
f0100100	obj/kern/kernel.asm	/^f0100100:	e8 db 3f 00 00       	call   f01040e0 <trap_init>$/;"	l
f0100105	obj/kern/kernel.asm	/^f0100105:	e8 60 66 00 00       	call   f010676a <mp_init>$/;"	l
f010010a	obj/kern/kernel.asm	/^f010010a:	e8 85 69 00 00       	call   f0106a94 <lapic_init>$/;"	l
f010010f	obj/kern/kernel.asm	/^f010010f:	90                   	nop$/;"	l
f0100110	obj/kern/kernel.asm	/^f0100110:	e8 f4 3d 00 00       	call   f0103f09 <pic_init>$/;"	l
f0100115	obj/kern/kernel.asm	/^f0100115:	e8 1d 76 00 00       	call   f0107737 <time_init>$/;"	l
f010011a	obj/kern/kernel.asm	/^f010011a:	e8 ea 75 00 00       	call   f0107709 <pci_init>$/;"	l
f010011f	obj/kern/kernel.asm	/^f010011f:	c7 04 24 c0 43 12 f0 	movl   $0xf01243c0,(%esp)$/;"	l
f0100126	obj/kern/kernel.asm	/^f0100126:	e8 cc 6b 00 00       	call   f0106cf7 <spin_lock>$/;"	l
f010012b	obj/kern/kernel.asm	/^f010012b:	83 3d 94 8e 2b f0 07 	cmpl   $0x7,0xf02b8e94$/;"	l
f0100132	obj/kern/kernel.asm	/^f0100132:	77 24                	ja     f0100158 <i386_init+0xb0>$/;"	l
f0100134	obj/kern/kernel.asm	/^f0100134:	c7 44 24 0c 00 70 00 	movl   $0x7000,0xc(%esp)$/;"	l
f010013b	obj/kern/kernel.asm	/^f010013b:	00 $/;"	l
f010013c	obj/kern/kernel.asm	/^f010013c:	c7 44 24 08 44 7a 10 	movl   $0xf0107a44,0x8(%esp)$/;"	l
f0100143	obj/kern/kernel.asm	/^f0100143:	f0 $/;"	l
f0100144	obj/kern/kernel.asm	/^f0100144:	c7 44 24 04 66 00 00 	movl   $0x66,0x4(%esp)$/;"	l
f010014b	obj/kern/kernel.asm	/^f010014b:	00 $/;"	l
f010014c	obj/kern/kernel.asm	/^f010014c:	c7 04 24 bc 7a 10 f0 	movl   $0xf0107abc,(%esp)$/;"	l
f0100153	obj/kern/kernel.asm	/^f0100153:	e8 e8 fe ff ff       	call   f0100040 <_panic>$/;"	l
f0100158	obj/kern/kernel.asm	/^f0100158:	b8 a2 66 10 f0       	mov    $0xf01066a2,%eax$/;"	l
f010015d	obj/kern/kernel.asm	/^f010015d:	2d 28 66 10 f0       	sub    $0xf0106628,%eax$/;"	l
f0100162	obj/kern/kernel.asm	/^f0100162:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100166	obj/kern/kernel.asm	/^f0100166:	c7 44 24 04 28 66 10 	movl   $0xf0106628,0x4(%esp)$/;"	l
f010016d	obj/kern/kernel.asm	/^f010016d:	f0 $/;"	l
f010016e	obj/kern/kernel.asm	/^f010016e:	c7 04 24 00 70 00 f0 	movl   $0xf0007000,(%esp)$/;"	l
f0100175	obj/kern/kernel.asm	/^f0100175:	e8 fa 62 00 00       	call   f0106474 <memmove>$/;"	l
f010017a	obj/kern/kernel.asm	/^f010017a:	bb 20 90 2b f0       	mov    $0xf02b9020,%ebx$/;"	l
f010017f	obj/kern/kernel.asm	/^f010017f:	eb 4d                	jmp    f01001ce <i386_init+0x126>$/;"	l
f0100181	obj/kern/kernel.asm	/^f0100181:	e8 f3 68 00 00       	call   f0106a79 <cpunum>$/;"	l
f0100186	obj/kern/kernel.asm	/^f0100186:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0100189	obj/kern/kernel.asm	/^f0100189:	05 20 90 2b f0       	add    $0xf02b9020,%eax$/;"	l
f010018e	obj/kern/kernel.asm	/^f010018e:	39 c3                	cmp    %eax,%ebx$/;"	l
f0100190	obj/kern/kernel.asm	/^f0100190:	74 39                	je     f01001cb <i386_init+0x123>$/;"	l
f0100192	obj/kern/kernel.asm	/^f0100192:	89 d8                	mov    %ebx,%eax$/;"	l
f0100194	obj/kern/kernel.asm	/^f0100194:	2d 20 90 2b f0       	sub    $0xf02b9020,%eax$/;"	l
f0100199	obj/kern/kernel.asm	/^f0100199:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f010019c	obj/kern/kernel.asm	/^f010019c:	69 c0 35 c2 72 4f    	imul   $0x4f72c235,%eax,%eax$/;"	l
f01001a2	obj/kern/kernel.asm	/^f01001a2:	c1 e0 0f             	shl    $0xf,%eax$/;"	l
f01001a5	obj/kern/kernel.asm	/^f01001a5:	8d 80 00 20 2c f0    	lea    -0xfd3e000(%eax),%eax$/;"	l
f01001ab	obj/kern/kernel.asm	/^f01001ab:	a3 90 8e 2b f0       	mov    %eax,0xf02b8e90$/;"	l
f01001b0	obj/kern/kernel.asm	/^f01001b0:	c7 44 24 04 00 70 00 	movl   $0x7000,0x4(%esp)$/;"	l
f01001b7	obj/kern/kernel.asm	/^f01001b7:	00 $/;"	l
f01001b8	obj/kern/kernel.asm	/^f01001b8:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f01001bb	obj/kern/kernel.asm	/^f01001bb:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01001be	obj/kern/kernel.asm	/^f01001be:	e8 21 6a 00 00       	call   f0106be4 <lapic_startap>$/;"	l
f01001c3	obj/kern/kernel.asm	/^f01001c3:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f01001c6	obj/kern/kernel.asm	/^f01001c6:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f01001c9	obj/kern/kernel.asm	/^f01001c9:	75 f8                	jne    f01001c3 <i386_init+0x11b>$/;"	l
f01001cb	obj/kern/kernel.asm	/^f01001cb:	83 c3 74             	add    $0x74,%ebx$/;"	l
f01001ce	obj/kern/kernel.asm	/^f01001ce:	6b 05 c4 93 2b f0 74 	imul   $0x74,0xf02b93c4,%eax$/;"	l
f01001d5	obj/kern/kernel.asm	/^f01001d5:	05 20 90 2b f0       	add    $0xf02b9020,%eax$/;"	l
f01001da	obj/kern/kernel.asm	/^f01001da:	39 c3                	cmp    %eax,%ebx$/;"	l
f01001dc	obj/kern/kernel.asm	/^f01001dc:	72 a3                	jb     f0100181 <i386_init+0xd9>$/;"	l
f01001de	obj/kern/kernel.asm	/^f01001de:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
f01001e5	obj/kern/kernel.asm	/^f01001e5:	00 $/;"	l
f01001e6	obj/kern/kernel.asm	/^f01001e6:	c7 04 24 04 dd 1d f0 	movl   $0xf01ddd04,(%esp)$/;"	l
f01001ed	obj/kern/kernel.asm	/^f01001ed:	e8 f8 37 00 00       	call   f01039ea <env_create>$/;"	l
f01001f2	obj/kern/kernel.asm	/^f01001f2:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
f01001f9	obj/kern/kernel.asm	/^f01001f9:	00 $/;"	l
f01001fa	obj/kern/kernel.asm	/^f01001fa:	c7 04 24 91 99 23 f0 	movl   $0xf0239991,(%esp)$/;"	l
f0100201	obj/kern/kernel.asm	/^f0100201:	e8 e4 37 00 00       	call   f01039ea <env_create>$/;"	l
f0100206	obj/kern/kernel.asm	/^f0100206:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f010020d	obj/kern/kernel.asm	/^f010020d:	00 $/;"	l
f010020e	obj/kern/kernel.asm	/^f010020e:	c7 04 24 f6 7a 1d f0 	movl   $0xf01d7af6,(%esp)$/;"	l
f0100215	obj/kern/kernel.asm	/^f0100215:	e8 d0 37 00 00       	call   f01039ea <env_create>$/;"	l
f010021a	obj/kern/kernel.asm	/^f010021a:	e8 4d 04 00 00       	call   f010066c <kbd_intr>$/;"	l
f010021f	obj/kern/kernel.asm	/^f010021f:	e8 d7 4c 00 00       	call   f0104efb <sched_yield>$/;"	l
f0100224	obj/kern/kernel.asm	/^f0100224 <mp_main>:$/;"	l
f0100224	obj/kern/kernel.asm	/^f0100224:	55                   	push   %ebp$/;"	l
f0100225	obj/kern/kernel.asm	/^f0100225:	89 e5                	mov    %esp,%ebp$/;"	l
f0100227	obj/kern/kernel.asm	/^f0100227:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010022a	obj/kern/kernel.asm	/^f010022a:	a1 98 8e 2b f0       	mov    0xf02b8e98,%eax$/;"	l
f010022f	obj/kern/kernel.asm	/^f010022f:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0100234	obj/kern/kernel.asm	/^f0100234:	77 20                	ja     f0100256 <mp_main+0x32>$/;"	l
f0100236	obj/kern/kernel.asm	/^f0100236:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010023a	obj/kern/kernel.asm	/^f010023a:	c7 44 24 08 68 7a 10 	movl   $0xf0107a68,0x8(%esp)$/;"	l
f0100241	obj/kern/kernel.asm	/^f0100241:	f0 $/;"	l
f0100242	obj/kern/kernel.asm	/^f0100242:	c7 44 24 04 7d 00 00 	movl   $0x7d,0x4(%esp)$/;"	l
f0100249	obj/kern/kernel.asm	/^f0100249:	00 $/;"	l
f010024a	obj/kern/kernel.asm	/^f010024a:	c7 04 24 bc 7a 10 f0 	movl   $0xf0107abc,(%esp)$/;"	l
f0100251	obj/kern/kernel.asm	/^f0100251:	e8 ea fd ff ff       	call   f0100040 <_panic>$/;"	l
f0100256	obj/kern/kernel.asm	/^f0100256:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f010025b	obj/kern/kernel.asm	/^f010025b:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010025e	obj/kern/kernel.asm	/^f010025e:	e8 16 68 00 00       	call   f0106a79 <cpunum>$/;"	l
f0100263	obj/kern/kernel.asm	/^f0100263:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100267	obj/kern/kernel.asm	/^f0100267:	c7 04 24 c8 7a 10 f0 	movl   $0xf0107ac8,(%esp)$/;"	l
f010026e	obj/kern/kernel.asm	/^f010026e:	e8 79 3d 00 00       	call   f0103fec <cprintf>$/;"	l
f0100273	obj/kern/kernel.asm	/^f0100273:	e8 1c 68 00 00       	call   f0106a94 <lapic_init>$/;"	l
f0100278	obj/kern/kernel.asm	/^f0100278:	e8 63 35 00 00       	call   f01037e0 <env_init_percpu>$/;"	l
f010027d	obj/kern/kernel.asm	/^f010027d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0100280	obj/kern/kernel.asm	/^f0100280:	e8 8b 3d 00 00       	call   f0104010 <trap_init_percpu>$/;"	l
f0100285	obj/kern/kernel.asm	/^f0100285:	e8 ef 67 00 00       	call   f0106a79 <cpunum>$/;"	l
f010028a	obj/kern/kernel.asm	/^f010028a:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f010028d	obj/kern/kernel.asm	/^f010028d:	81 c2 20 90 2b f0    	add    $0xf02b9020,%edx$/;"	l
f0100293	obj/kern/kernel.asm	/^f0100293:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100298	obj/kern/kernel.asm	/^f0100298:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f010029c	obj/kern/kernel.asm	/^f010029c:	c7 04 24 c0 43 12 f0 	movl   $0xf01243c0,(%esp)$/;"	l
f01002a3	obj/kern/kernel.asm	/^f01002a3:	e8 4f 6a 00 00       	call   f0106cf7 <spin_lock>$/;"	l
f01002a8	obj/kern/kernel.asm	/^f01002a8:	e8 4e 4c 00 00       	call   f0104efb <sched_yield>$/;"	l
f01002ad	obj/kern/kernel.asm	/^f01002ad <_warn>:$/;"	l
f01002ad	obj/kern/kernel.asm	/^f01002ad:	55                   	push   %ebp$/;"	l
f01002ae	obj/kern/kernel.asm	/^f01002ae:	89 e5                	mov    %esp,%ebp$/;"	l
f01002b0	obj/kern/kernel.asm	/^f01002b0:	53                   	push   %ebx$/;"	l
f01002b1	obj/kern/kernel.asm	/^f01002b1:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01002b4	obj/kern/kernel.asm	/^f01002b4:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f01002b7	obj/kern/kernel.asm	/^f01002b7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01002ba	obj/kern/kernel.asm	/^f01002ba:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01002be	obj/kern/kernel.asm	/^f01002be:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01002c1	obj/kern/kernel.asm	/^f01002c1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01002c5	obj/kern/kernel.asm	/^f01002c5:	c7 04 24 de 7a 10 f0 	movl   $0xf0107ade,(%esp)$/;"	l
f01002cc	obj/kern/kernel.asm	/^f01002cc:	e8 1b 3d 00 00       	call   f0103fec <cprintf>$/;"	l
f01002d1	obj/kern/kernel.asm	/^f01002d1:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01002d5	obj/kern/kernel.asm	/^f01002d5:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01002d8	obj/kern/kernel.asm	/^f01002d8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01002db	obj/kern/kernel.asm	/^f01002db:	e8 d9 3c 00 00       	call   f0103fb9 <vcprintf>$/;"	l
f01002e0	obj/kern/kernel.asm	/^f01002e0:	c7 04 24 9b 8c 10 f0 	movl   $0xf0108c9b,(%esp)$/;"	l
f01002e7	obj/kern/kernel.asm	/^f01002e7:	e8 00 3d 00 00       	call   f0103fec <cprintf>$/;"	l
f01002ec	obj/kern/kernel.asm	/^f01002ec:	83 c4 14             	add    $0x14,%esp$/;"	l
f01002ef	obj/kern/kernel.asm	/^f01002ef:	5b                   	pop    %ebx$/;"	l
f01002f0	obj/kern/kernel.asm	/^f01002f0:	5d                   	pop    %ebp$/;"	l
f01002f1	obj/kern/kernel.asm	/^f01002f1:	c3                   	ret    $/;"	l
f01002f2	obj/kern/kernel.asm	/^f01002f2:	66 90                	xchg   %ax,%ax$/;"	l
f01002f4	obj/kern/kernel.asm	/^f01002f4:	66 90                	xchg   %ax,%ax$/;"	l
f01002f6	obj/kern/kernel.asm	/^f01002f6:	66 90                	xchg   %ax,%ax$/;"	l
f01002f8	obj/kern/kernel.asm	/^f01002f8:	66 90                	xchg   %ax,%ax$/;"	l
f01002fa	obj/kern/kernel.asm	/^f01002fa:	66 90                	xchg   %ax,%ax$/;"	l
f01002fc	obj/kern/kernel.asm	/^f01002fc:	66 90                	xchg   %ax,%ax$/;"	l
f01002fe	obj/kern/kernel.asm	/^f01002fe:	66 90                	xchg   %ax,%ax$/;"	l
f0100300	obj/kern/kernel.asm	/^f0100300 <serial_proc_data>:$/;"	l
f0100300	obj/kern/kernel.asm	/^f0100300:	55                   	push   %ebp$/;"	l
f0100301	obj/kern/kernel.asm	/^f0100301:	89 e5                	mov    %esp,%ebp$/;"	l
f0100303	obj/kern/kernel.asm	/^f0100303:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f0100308	obj/kern/kernel.asm	/^f0100308:	ec                   	in     (%dx),%al$/;"	l
f0100309	obj/kern/kernel.asm	/^f0100309:	a8 01                	test   $0x1,%al$/;"	l
f010030b	obj/kern/kernel.asm	/^f010030b:	74 08                	je     f0100315 <serial_proc_data+0x15>$/;"	l
f010030d	obj/kern/kernel.asm	/^f010030d:	b2 f8                	mov    $0xf8,%dl$/;"	l
f010030f	obj/kern/kernel.asm	/^f010030f:	ec                   	in     (%dx),%al$/;"	l
f0100310	obj/kern/kernel.asm	/^f0100310:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100313	obj/kern/kernel.asm	/^f0100313:	eb 05                	jmp    f010031a <serial_proc_data+0x1a>$/;"	l
f0100315	obj/kern/kernel.asm	/^f0100315:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f010031a	obj/kern/kernel.asm	/^f010031a:	5d                   	pop    %ebp$/;"	l
f010031b	obj/kern/kernel.asm	/^f010031b:	c3                   	ret    $/;"	l
f010031c	obj/kern/kernel.asm	/^f010031c <cons_intr>:$/;"	l
f010031c	obj/kern/kernel.asm	/^f010031c:	55                   	push   %ebp$/;"	l
f010031d	obj/kern/kernel.asm	/^f010031d:	89 e5                	mov    %esp,%ebp$/;"	l
f010031f	obj/kern/kernel.asm	/^f010031f:	53                   	push   %ebx$/;"	l
f0100320	obj/kern/kernel.asm	/^f0100320:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100323	obj/kern/kernel.asm	/^f0100323:	89 c3                	mov    %eax,%ebx$/;"	l
f0100325	obj/kern/kernel.asm	/^f0100325:	eb 2a                	jmp    f0100351 <cons_intr+0x35>$/;"	l
f0100327	obj/kern/kernel.asm	/^f0100327:	85 d2                	test   %edx,%edx$/;"	l
f0100329	obj/kern/kernel.asm	/^f0100329:	74 26                	je     f0100351 <cons_intr+0x35>$/;"	l
f010032b	obj/kern/kernel.asm	/^f010032b:	a1 24 82 2b f0       	mov    0xf02b8224,%eax$/;"	l
f0100330	obj/kern/kernel.asm	/^f0100330:	8d 48 01             	lea    0x1(%eax),%ecx$/;"	l
f0100333	obj/kern/kernel.asm	/^f0100333:	89 0d 24 82 2b f0    	mov    %ecx,0xf02b8224$/;"	l
f0100339	obj/kern/kernel.asm	/^f0100339:	88 90 20 80 2b f0    	mov    %dl,-0xfd47fe0(%eax)$/;"	l
f010033f	obj/kern/kernel.asm	/^f010033f:	81 f9 00 02 00 00    	cmp    $0x200,%ecx$/;"	l
f0100345	obj/kern/kernel.asm	/^f0100345:	75 0a                	jne    f0100351 <cons_intr+0x35>$/;"	l
f0100347	obj/kern/kernel.asm	/^f0100347:	c7 05 24 82 2b f0 00 	movl   $0x0,0xf02b8224$/;"	l
f010034e	obj/kern/kernel.asm	/^f010034e:	00 00 00 $/;"	l
f0100351	obj/kern/kernel.asm	/^f0100351:	ff d3                	call   *%ebx$/;"	l
f0100353	obj/kern/kernel.asm	/^f0100353:	89 c2                	mov    %eax,%edx$/;"	l
f0100355	obj/kern/kernel.asm	/^f0100355:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0100358	obj/kern/kernel.asm	/^f0100358:	75 cd                	jne    f0100327 <cons_intr+0xb>$/;"	l
f010035a	obj/kern/kernel.asm	/^f010035a:	83 c4 04             	add    $0x4,%esp$/;"	l
f010035d	obj/kern/kernel.asm	/^f010035d:	5b                   	pop    %ebx$/;"	l
f010035e	obj/kern/kernel.asm	/^f010035e:	5d                   	pop    %ebp$/;"	l
f010035f	obj/kern/kernel.asm	/^f010035f:	c3                   	ret    $/;"	l
f0100360	obj/kern/kernel.asm	/^f0100360 <kbd_proc_data>:$/;"	l
f0100360	obj/kern/kernel.asm	/^f0100360:	ba 64 00 00 00       	mov    $0x64,%edx$/;"	l
f0100365	obj/kern/kernel.asm	/^f0100365:	ec                   	in     (%dx),%al$/;"	l
f0100366	obj/kern/kernel.asm	/^f0100366:	a8 01                	test   $0x1,%al$/;"	l
f0100368	obj/kern/kernel.asm	/^f0100368:	0f 84 ef 00 00 00    	je     f010045d <kbd_proc_data+0xfd>$/;"	l
f010036e	obj/kern/kernel.asm	/^f010036e:	b2 60                	mov    $0x60,%dl$/;"	l
f0100370	obj/kern/kernel.asm	/^f0100370:	ec                   	in     (%dx),%al$/;"	l
f0100371	obj/kern/kernel.asm	/^f0100371:	89 c2                	mov    %eax,%edx$/;"	l
f0100373	obj/kern/kernel.asm	/^f0100373:	3c e0                	cmp    $0xe0,%al$/;"	l
f0100375	obj/kern/kernel.asm	/^f0100375:	75 0d                	jne    f0100384 <kbd_proc_data+0x24>$/;"	l
f0100377	obj/kern/kernel.asm	/^f0100377:	83 0d 00 80 2b f0 40 	orl    $0x40,0xf02b8000$/;"	l
f010037e	obj/kern/kernel.asm	/^f010037e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100383	obj/kern/kernel.asm	/^f0100383:	c3                   	ret    $/;"	l
f0100384	obj/kern/kernel.asm	/^f0100384:	55                   	push   %ebp$/;"	l
f0100385	obj/kern/kernel.asm	/^f0100385:	89 e5                	mov    %esp,%ebp$/;"	l
f0100387	obj/kern/kernel.asm	/^f0100387:	53                   	push   %ebx$/;"	l
f0100388	obj/kern/kernel.asm	/^f0100388:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010038b	obj/kern/kernel.asm	/^f010038b:	84 c0                	test   %al,%al$/;"	l
f010038d	obj/kern/kernel.asm	/^f010038d:	79 37                	jns    f01003c6 <kbd_proc_data+0x66>$/;"	l
f010038f	obj/kern/kernel.asm	/^f010038f:	8b 0d 00 80 2b f0    	mov    0xf02b8000,%ecx$/;"	l
f0100395	obj/kern/kernel.asm	/^f0100395:	89 cb                	mov    %ecx,%ebx$/;"	l
f0100397	obj/kern/kernel.asm	/^f0100397:	83 e3 40             	and    $0x40,%ebx$/;"	l
f010039a	obj/kern/kernel.asm	/^f010039a:	83 e0 7f             	and    $0x7f,%eax$/;"	l
f010039d	obj/kern/kernel.asm	/^f010039d:	85 db                	test   %ebx,%ebx$/;"	l
f010039f	obj/kern/kernel.asm	/^f010039f:	0f 44 d0             	cmove  %eax,%edx$/;"	l
f01003a2	obj/kern/kernel.asm	/^f01003a2:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f01003a5	obj/kern/kernel.asm	/^f01003a5:	0f b6 82 60 7c 10 f0 	movzbl -0xfef83a0(%edx),%eax$/;"	l
f01003ac	obj/kern/kernel.asm	/^f01003ac:	83 c8 40             	or     $0x40,%eax$/;"	l
f01003af	obj/kern/kernel.asm	/^f01003af:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01003b2	obj/kern/kernel.asm	/^f01003b2:	f7 d0                	not    %eax$/;"	l
f01003b4	obj/kern/kernel.asm	/^f01003b4:	21 c1                	and    %eax,%ecx$/;"	l
f01003b6	obj/kern/kernel.asm	/^f01003b6:	89 0d 00 80 2b f0    	mov    %ecx,0xf02b8000$/;"	l
f01003bc	obj/kern/kernel.asm	/^f01003bc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01003c1	obj/kern/kernel.asm	/^f01003c1:	e9 9d 00 00 00       	jmp    f0100463 <kbd_proc_data+0x103>$/;"	l
f01003c6	obj/kern/kernel.asm	/^f01003c6:	8b 0d 00 80 2b f0    	mov    0xf02b8000,%ecx$/;"	l
f01003cc	obj/kern/kernel.asm	/^f01003cc:	f6 c1 40             	test   $0x40,%cl$/;"	l
f01003cf	obj/kern/kernel.asm	/^f01003cf:	74 0e                	je     f01003df <kbd_proc_data+0x7f>$/;"	l
f01003d1	obj/kern/kernel.asm	/^f01003d1:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f01003d4	obj/kern/kernel.asm	/^f01003d4:	89 c2                	mov    %eax,%edx$/;"	l
f01003d6	obj/kern/kernel.asm	/^f01003d6:	83 e1 bf             	and    $0xffffffbf,%ecx$/;"	l
f01003d9	obj/kern/kernel.asm	/^f01003d9:	89 0d 00 80 2b f0    	mov    %ecx,0xf02b8000$/;"	l
f01003df	obj/kern/kernel.asm	/^f01003df:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f01003e2	obj/kern/kernel.asm	/^f01003e2:	0f b6 82 60 7c 10 f0 	movzbl -0xfef83a0(%edx),%eax$/;"	l
f01003e9	obj/kern/kernel.asm	/^f01003e9:	0b 05 00 80 2b f0    	or     0xf02b8000,%eax$/;"	l
f01003ef	obj/kern/kernel.asm	/^f01003ef:	0f b6 8a 60 7b 10 f0 	movzbl -0xfef84a0(%edx),%ecx$/;"	l
f01003f6	obj/kern/kernel.asm	/^f01003f6:	31 c8                	xor    %ecx,%eax$/;"	l
f01003f8	obj/kern/kernel.asm	/^f01003f8:	a3 00 80 2b f0       	mov    %eax,0xf02b8000$/;"	l
f01003fd	obj/kern/kernel.asm	/^f01003fd:	89 c1                	mov    %eax,%ecx$/;"	l
f01003ff	obj/kern/kernel.asm	/^f01003ff:	83 e1 03             	and    $0x3,%ecx$/;"	l
f0100402	obj/kern/kernel.asm	/^f0100402:	8b 0c 8d 40 7b 10 f0 	mov    -0xfef84c0(,%ecx,4),%ecx$/;"	l
f0100409	obj/kern/kernel.asm	/^f0100409:	0f b6 14 11          	movzbl (%ecx,%edx,1),%edx$/;"	l
f010040d	obj/kern/kernel.asm	/^f010040d:	0f b6 da             	movzbl %dl,%ebx$/;"	l
f0100410	obj/kern/kernel.asm	/^f0100410:	a8 08                	test   $0x8,%al$/;"	l
f0100412	obj/kern/kernel.asm	/^f0100412:	74 1b                	je     f010042f <kbd_proc_data+0xcf>$/;"	l
f0100414	obj/kern/kernel.asm	/^f0100414:	89 da                	mov    %ebx,%edx$/;"	l
f0100416	obj/kern/kernel.asm	/^f0100416:	8d 4b 9f             	lea    -0x61(%ebx),%ecx$/;"	l
f0100419	obj/kern/kernel.asm	/^f0100419:	83 f9 19             	cmp    $0x19,%ecx$/;"	l
f010041c	obj/kern/kernel.asm	/^f010041c:	77 05                	ja     f0100423 <kbd_proc_data+0xc3>$/;"	l
f010041e	obj/kern/kernel.asm	/^f010041e:	83 eb 20             	sub    $0x20,%ebx$/;"	l
f0100421	obj/kern/kernel.asm	/^f0100421:	eb 0c                	jmp    f010042f <kbd_proc_data+0xcf>$/;"	l
f0100423	obj/kern/kernel.asm	/^f0100423:	83 ea 41             	sub    $0x41,%edx$/;"	l
f0100426	obj/kern/kernel.asm	/^f0100426:	8d 4b 20             	lea    0x20(%ebx),%ecx$/;"	l
f0100429	obj/kern/kernel.asm	/^f0100429:	83 fa 19             	cmp    $0x19,%edx$/;"	l
f010042c	obj/kern/kernel.asm	/^f010042c:	0f 46 d9             	cmovbe %ecx,%ebx$/;"	l
f010042f	obj/kern/kernel.asm	/^f010042f:	f7 d0                	not    %eax$/;"	l
f0100431	obj/kern/kernel.asm	/^f0100431:	89 c2                	mov    %eax,%edx$/;"	l
f0100433	obj/kern/kernel.asm	/^f0100433:	89 d8                	mov    %ebx,%eax$/;"	l
f0100435	obj/kern/kernel.asm	/^f0100435:	f6 c2 06             	test   $0x6,%dl$/;"	l
f0100438	obj/kern/kernel.asm	/^f0100438:	75 29                	jne    f0100463 <kbd_proc_data+0x103>$/;"	l
f010043a	obj/kern/kernel.asm	/^f010043a:	81 fb e9 00 00 00    	cmp    $0xe9,%ebx$/;"	l
f0100440	obj/kern/kernel.asm	/^f0100440:	75 21                	jne    f0100463 <kbd_proc_data+0x103>$/;"	l
f0100442	obj/kern/kernel.asm	/^f0100442:	c7 04 24 f8 7a 10 f0 	movl   $0xf0107af8,(%esp)$/;"	l
f0100449	obj/kern/kernel.asm	/^f0100449:	e8 9e 3b 00 00       	call   f0103fec <cprintf>$/;"	l
f010044e	obj/kern/kernel.asm	/^f010044e:	ba 92 00 00 00       	mov    $0x92,%edx$/;"	l
f0100453	obj/kern/kernel.asm	/^f0100453:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f0100458	obj/kern/kernel.asm	/^f0100458:	ee                   	out    %al,(%dx)$/;"	l
f0100459	obj/kern/kernel.asm	/^f0100459:	89 d8                	mov    %ebx,%eax$/;"	l
f010045b	obj/kern/kernel.asm	/^f010045b:	eb 06                	jmp    f0100463 <kbd_proc_data+0x103>$/;"	l
f010045d	obj/kern/kernel.asm	/^f010045d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100462	obj/kern/kernel.asm	/^f0100462:	c3                   	ret    $/;"	l
f0100463	obj/kern/kernel.asm	/^f0100463:	83 c4 14             	add    $0x14,%esp$/;"	l
f0100466	obj/kern/kernel.asm	/^f0100466:	5b                   	pop    %ebx$/;"	l
f0100467	obj/kern/kernel.asm	/^f0100467:	5d                   	pop    %ebp$/;"	l
f0100468	obj/kern/kernel.asm	/^f0100468:	c3                   	ret    $/;"	l
f0100469	obj/kern/kernel.asm	/^f0100469 <cons_putc>:$/;"	l
f0100469	obj/kern/kernel.asm	/^f0100469:	55                   	push   %ebp$/;"	l
f010046a	obj/kern/kernel.asm	/^f010046a:	89 e5                	mov    %esp,%ebp$/;"	l
f010046c	obj/kern/kernel.asm	/^f010046c:	57                   	push   %edi$/;"	l
f010046d	obj/kern/kernel.asm	/^f010046d:	56                   	push   %esi$/;"	l
f010046e	obj/kern/kernel.asm	/^f010046e:	53                   	push   %ebx$/;"	l
f010046f	obj/kern/kernel.asm	/^f010046f:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0100472	obj/kern/kernel.asm	/^f0100472:	89 c7                	mov    %eax,%edi$/;"	l
f0100474	obj/kern/kernel.asm	/^f0100474:	bb 01 32 00 00       	mov    $0x3201,%ebx$/;"	l
f0100479	obj/kern/kernel.asm	/^f0100479:	be fd 03 00 00       	mov    $0x3fd,%esi$/;"	l
f010047e	obj/kern/kernel.asm	/^f010047e:	b9 84 00 00 00       	mov    $0x84,%ecx$/;"	l
f0100483	obj/kern/kernel.asm	/^f0100483:	eb 06                	jmp    f010048b <cons_putc+0x22>$/;"	l
f0100485	obj/kern/kernel.asm	/^f0100485:	89 ca                	mov    %ecx,%edx$/;"	l
f0100487	obj/kern/kernel.asm	/^f0100487:	ec                   	in     (%dx),%al$/;"	l
f0100488	obj/kern/kernel.asm	/^f0100488:	ec                   	in     (%dx),%al$/;"	l
f0100489	obj/kern/kernel.asm	/^f0100489:	ec                   	in     (%dx),%al$/;"	l
f010048a	obj/kern/kernel.asm	/^f010048a:	ec                   	in     (%dx),%al$/;"	l
f010048b	obj/kern/kernel.asm	/^f010048b:	89 f2                	mov    %esi,%edx$/;"	l
f010048d	obj/kern/kernel.asm	/^f010048d:	ec                   	in     (%dx),%al$/;"	l
f010048e	obj/kern/kernel.asm	/^f010048e:	a8 20                	test   $0x20,%al$/;"	l
f0100490	obj/kern/kernel.asm	/^f0100490:	75 05                	jne    f0100497 <cons_putc+0x2e>$/;"	l
f0100492	obj/kern/kernel.asm	/^f0100492:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0100495	obj/kern/kernel.asm	/^f0100495:	75 ee                	jne    f0100485 <cons_putc+0x1c>$/;"	l
f0100497	obj/kern/kernel.asm	/^f0100497:	89 f8                	mov    %edi,%eax$/;"	l
f0100499	obj/kern/kernel.asm	/^f0100499:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010049c	obj/kern/kernel.asm	/^f010049c:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f010049f	obj/kern/kernel.asm	/^f010049f:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f01004a4	obj/kern/kernel.asm	/^f01004a4:	ee                   	out    %al,(%dx)$/;"	l
f01004a5	obj/kern/kernel.asm	/^f01004a5:	bb 01 32 00 00       	mov    $0x3201,%ebx$/;"	l
f01004aa	obj/kern/kernel.asm	/^f01004aa:	be 79 03 00 00       	mov    $0x379,%esi$/;"	l
f01004af	obj/kern/kernel.asm	/^f01004af:	b9 84 00 00 00       	mov    $0x84,%ecx$/;"	l
f01004b4	obj/kern/kernel.asm	/^f01004b4:	eb 06                	jmp    f01004bc <cons_putc+0x53>$/;"	l
f01004b6	obj/kern/kernel.asm	/^f01004b6:	89 ca                	mov    %ecx,%edx$/;"	l
f01004b8	obj/kern/kernel.asm	/^f01004b8:	ec                   	in     (%dx),%al$/;"	l
f01004b9	obj/kern/kernel.asm	/^f01004b9:	ec                   	in     (%dx),%al$/;"	l
f01004ba	obj/kern/kernel.asm	/^f01004ba:	ec                   	in     (%dx),%al$/;"	l
f01004bb	obj/kern/kernel.asm	/^f01004bb:	ec                   	in     (%dx),%al$/;"	l
f01004bc	obj/kern/kernel.asm	/^f01004bc:	89 f2                	mov    %esi,%edx$/;"	l
f01004be	obj/kern/kernel.asm	/^f01004be:	ec                   	in     (%dx),%al$/;"	l
f01004bf	obj/kern/kernel.asm	/^f01004bf:	84 c0                	test   %al,%al$/;"	l
f01004c1	obj/kern/kernel.asm	/^f01004c1:	78 05                	js     f01004c8 <cons_putc+0x5f>$/;"	l
f01004c3	obj/kern/kernel.asm	/^f01004c3:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f01004c6	obj/kern/kernel.asm	/^f01004c6:	75 ee                	jne    f01004b6 <cons_putc+0x4d>$/;"	l
f01004c8	obj/kern/kernel.asm	/^f01004c8:	ba 78 03 00 00       	mov    $0x378,%edx$/;"	l
f01004cd	obj/kern/kernel.asm	/^f01004cd:	0f b6 45 e4          	movzbl -0x1c(%ebp),%eax$/;"	l
f01004d1	obj/kern/kernel.asm	/^f01004d1:	ee                   	out    %al,(%dx)$/;"	l
f01004d2	obj/kern/kernel.asm	/^f01004d2:	b2 7a                	mov    $0x7a,%dl$/;"	l
f01004d4	obj/kern/kernel.asm	/^f01004d4:	b8 0d 00 00 00       	mov    $0xd,%eax$/;"	l
f01004d9	obj/kern/kernel.asm	/^f01004d9:	ee                   	out    %al,(%dx)$/;"	l
f01004da	obj/kern/kernel.asm	/^f01004da:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f01004df	obj/kern/kernel.asm	/^f01004df:	ee                   	out    %al,(%dx)$/;"	l
f01004e0	obj/kern/kernel.asm	/^f01004e0:	89 f8                	mov    %edi,%eax$/;"	l
f01004e2	obj/kern/kernel.asm	/^f01004e2:	0b 05 a0 8e 2b f0    	or     0xf02b8ea0,%eax$/;"	l
f01004e8	obj/kern/kernel.asm	/^f01004e8:	89 c1                	mov    %eax,%ecx$/;"	l
f01004ea	obj/kern/kernel.asm	/^f01004ea:	81 e1 00 ff ff ff    	and    $0xffffff00,%ecx$/;"	l
f01004f0	obj/kern/kernel.asm	/^f01004f0:	89 c2                	mov    %eax,%edx$/;"	l
f01004f2	obj/kern/kernel.asm	/^f01004f2:	80 ce 07             	or     $0x7,%dh$/;"	l
f01004f5	obj/kern/kernel.asm	/^f01004f5:	85 c9                	test   %ecx,%ecx$/;"	l
f01004f7	obj/kern/kernel.asm	/^f01004f7:	0f 44 c2             	cmove  %edx,%eax$/;"	l
f01004fa	obj/kern/kernel.asm	/^f01004fa:	0f b6 d0             	movzbl %al,%edx$/;"	l
f01004fd	obj/kern/kernel.asm	/^f01004fd:	83 fa 09             	cmp    $0x9,%edx$/;"	l
f0100500	obj/kern/kernel.asm	/^f0100500:	74 79                	je     f010057b <cons_putc+0x112>$/;"	l
f0100502	obj/kern/kernel.asm	/^f0100502:	83 fa 09             	cmp    $0x9,%edx$/;"	l
f0100505	obj/kern/kernel.asm	/^f0100505:	7f 0e                	jg     f0100515 <cons_putc+0xac>$/;"	l
f0100507	obj/kern/kernel.asm	/^f0100507:	83 fa 08             	cmp    $0x8,%edx$/;"	l
f010050a	obj/kern/kernel.asm	/^f010050a:	74 1b                	je     f0100527 <cons_putc+0xbe>$/;"	l
f010050c	obj/kern/kernel.asm	/^f010050c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0100510	obj/kern/kernel.asm	/^f0100510:	e9 9a 00 00 00       	jmp    f01005af <cons_putc+0x146>$/;"	l
f0100515	obj/kern/kernel.asm	/^f0100515:	83 fa 0a             	cmp    $0xa,%edx$/;"	l
f0100518	obj/kern/kernel.asm	/^f0100518:	74 3b                	je     f0100555 <cons_putc+0xec>$/;"	l
f010051a	obj/kern/kernel.asm	/^f010051a:	83 fa 0d             	cmp    $0xd,%edx$/;"	l
f010051d	obj/kern/kernel.asm	/^f010051d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0100520	obj/kern/kernel.asm	/^f0100520:	74 3b                	je     f010055d <cons_putc+0xf4>$/;"	l
f0100522	obj/kern/kernel.asm	/^f0100522:	e9 88 00 00 00       	jmp    f01005af <cons_putc+0x146>$/;"	l
f0100527	obj/kern/kernel.asm	/^f0100527:	0f b7 15 28 82 2b f0 	movzwl 0xf02b8228,%edx$/;"	l
f010052e	obj/kern/kernel.asm	/^f010052e:	66 85 d2             	test   %dx,%dx$/;"	l
f0100531	obj/kern/kernel.asm	/^f0100531:	0f 84 e3 00 00 00    	je     f010061a <cons_putc+0x1b1>$/;"	l
f0100537	obj/kern/kernel.asm	/^f0100537:	83 ea 01             	sub    $0x1,%edx$/;"	l
f010053a	obj/kern/kernel.asm	/^f010053a:	66 89 15 28 82 2b f0 	mov    %dx,0xf02b8228$/;"	l
f0100541	obj/kern/kernel.asm	/^f0100541:	0f b7 d2             	movzwl %dx,%edx$/;"	l
f0100544	obj/kern/kernel.asm	/^f0100544:	b0 00                	mov    $0x0,%al$/;"	l
f0100546	obj/kern/kernel.asm	/^f0100546:	83 c8 20             	or     $0x20,%eax$/;"	l
f0100549	obj/kern/kernel.asm	/^f0100549:	8b 0d 2c 82 2b f0    	mov    0xf02b822c,%ecx$/;"	l
f010054f	obj/kern/kernel.asm	/^f010054f:	66 89 04 51          	mov    %ax,(%ecx,%edx,2)$/;"	l
f0100553	obj/kern/kernel.asm	/^f0100553:	eb 78                	jmp    f01005cd <cons_putc+0x164>$/;"	l
f0100555	obj/kern/kernel.asm	/^f0100555:	66 83 05 28 82 2b f0 	addw   $0x50,0xf02b8228$/;"	l
f010055c	obj/kern/kernel.asm	/^f010055c:	50 $/;"	l
f010055d	obj/kern/kernel.asm	/^f010055d:	0f b7 05 28 82 2b f0 	movzwl 0xf02b8228,%eax$/;"	l
f0100564	obj/kern/kernel.asm	/^f0100564:	69 c0 cd cc 00 00    	imul   $0xcccd,%eax,%eax$/;"	l
f010056a	obj/kern/kernel.asm	/^f010056a:	c1 e8 16             	shr    $0x16,%eax$/;"	l
f010056d	obj/kern/kernel.asm	/^f010056d:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f0100570	obj/kern/kernel.asm	/^f0100570:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f0100573	obj/kern/kernel.asm	/^f0100573:	66 a3 28 82 2b f0    	mov    %ax,0xf02b8228$/;"	l
f0100579	obj/kern/kernel.asm	/^f0100579:	eb 52                	jmp    f01005cd <cons_putc+0x164>$/;"	l
f010057b	obj/kern/kernel.asm	/^f010057b:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100580	obj/kern/kernel.asm	/^f0100580:	e8 e4 fe ff ff       	call   f0100469 <cons_putc>$/;"	l
f0100585	obj/kern/kernel.asm	/^f0100585:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f010058a	obj/kern/kernel.asm	/^f010058a:	e8 da fe ff ff       	call   f0100469 <cons_putc>$/;"	l
f010058f	obj/kern/kernel.asm	/^f010058f:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100594	obj/kern/kernel.asm	/^f0100594:	e8 d0 fe ff ff       	call   f0100469 <cons_putc>$/;"	l
f0100599	obj/kern/kernel.asm	/^f0100599:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f010059e	obj/kern/kernel.asm	/^f010059e:	e8 c6 fe ff ff       	call   f0100469 <cons_putc>$/;"	l
f01005a3	obj/kern/kernel.asm	/^f01005a3:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01005a8	obj/kern/kernel.asm	/^f01005a8:	e8 bc fe ff ff       	call   f0100469 <cons_putc>$/;"	l
f01005ad	obj/kern/kernel.asm	/^f01005ad:	eb 1e                	jmp    f01005cd <cons_putc+0x164>$/;"	l
f01005af	obj/kern/kernel.asm	/^f01005af:	0f b7 15 28 82 2b f0 	movzwl 0xf02b8228,%edx$/;"	l
f01005b6	obj/kern/kernel.asm	/^f01005b6:	8d 4a 01             	lea    0x1(%edx),%ecx$/;"	l
f01005b9	obj/kern/kernel.asm	/^f01005b9:	66 89 0d 28 82 2b f0 	mov    %cx,0xf02b8228$/;"	l
f01005c0	obj/kern/kernel.asm	/^f01005c0:	0f b7 d2             	movzwl %dx,%edx$/;"	l
f01005c3	obj/kern/kernel.asm	/^f01005c3:	8b 0d 2c 82 2b f0    	mov    0xf02b822c,%ecx$/;"	l
f01005c9	obj/kern/kernel.asm	/^f01005c9:	66 89 04 51          	mov    %ax,(%ecx,%edx,2)$/;"	l
f01005cd	obj/kern/kernel.asm	/^f01005cd:	66 81 3d 28 82 2b f0 	cmpw   $0x7cf,0xf02b8228$/;"	l
f01005d4	obj/kern/kernel.asm	/^f01005d4:	cf 07 $/;"	l
f01005d6	obj/kern/kernel.asm	/^f01005d6:	76 42                	jbe    f010061a <cons_putc+0x1b1>$/;"	l
f01005d8	obj/kern/kernel.asm	/^f01005d8:	a1 2c 82 2b f0       	mov    0xf02b822c,%eax$/;"	l
f01005dd	obj/kern/kernel.asm	/^f01005dd:	c7 44 24 08 00 0f 00 	movl   $0xf00,0x8(%esp)$/;"	l
f01005e4	obj/kern/kernel.asm	/^f01005e4:	00 $/;"	l
f01005e5	obj/kern/kernel.asm	/^f01005e5:	8d 90 a0 00 00 00    	lea    0xa0(%eax),%edx$/;"	l
f01005eb	obj/kern/kernel.asm	/^f01005eb:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01005ef	obj/kern/kernel.asm	/^f01005ef:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01005f2	obj/kern/kernel.asm	/^f01005f2:	e8 7d 5e 00 00       	call   f0106474 <memmove>$/;"	l
f01005f7	obj/kern/kernel.asm	/^f01005f7:	8b 15 2c 82 2b f0    	mov    0xf02b822c,%edx$/;"	l
f01005fd	obj/kern/kernel.asm	/^f01005fd:	b8 80 07 00 00       	mov    $0x780,%eax$/;"	l
f0100602	obj/kern/kernel.asm	/^f0100602:	66 c7 04 42 20 07    	movw   $0x720,(%edx,%eax,2)$/;"	l
f0100608	obj/kern/kernel.asm	/^f0100608:	83 c0 01             	add    $0x1,%eax$/;"	l
f010060b	obj/kern/kernel.asm	/^f010060b:	3d d0 07 00 00       	cmp    $0x7d0,%eax$/;"	l
f0100610	obj/kern/kernel.asm	/^f0100610:	75 f0                	jne    f0100602 <cons_putc+0x199>$/;"	l
f0100612	obj/kern/kernel.asm	/^f0100612:	66 83 2d 28 82 2b f0 	subw   $0x50,0xf02b8228$/;"	l
f0100619	obj/kern/kernel.asm	/^f0100619:	50 $/;"	l
f010061a	obj/kern/kernel.asm	/^f010061a:	8b 0d 30 82 2b f0    	mov    0xf02b8230,%ecx$/;"	l
f0100620	obj/kern/kernel.asm	/^f0100620:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f0100625	obj/kern/kernel.asm	/^f0100625:	89 ca                	mov    %ecx,%edx$/;"	l
f0100627	obj/kern/kernel.asm	/^f0100627:	ee                   	out    %al,(%dx)$/;"	l
f0100628	obj/kern/kernel.asm	/^f0100628:	0f b7 1d 28 82 2b f0 	movzwl 0xf02b8228,%ebx$/;"	l
f010062f	obj/kern/kernel.asm	/^f010062f:	8d 71 01             	lea    0x1(%ecx),%esi$/;"	l
f0100632	obj/kern/kernel.asm	/^f0100632:	89 d8                	mov    %ebx,%eax$/;"	l
f0100634	obj/kern/kernel.asm	/^f0100634:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f0100638	obj/kern/kernel.asm	/^f0100638:	89 f2                	mov    %esi,%edx$/;"	l
f010063a	obj/kern/kernel.asm	/^f010063a:	ee                   	out    %al,(%dx)$/;"	l
f010063b	obj/kern/kernel.asm	/^f010063b:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f0100640	obj/kern/kernel.asm	/^f0100640:	89 ca                	mov    %ecx,%edx$/;"	l
f0100642	obj/kern/kernel.asm	/^f0100642:	ee                   	out    %al,(%dx)$/;"	l
f0100643	obj/kern/kernel.asm	/^f0100643:	89 d8                	mov    %ebx,%eax$/;"	l
f0100645	obj/kern/kernel.asm	/^f0100645:	89 f2                	mov    %esi,%edx$/;"	l
f0100647	obj/kern/kernel.asm	/^f0100647:	ee                   	out    %al,(%dx)$/;"	l
f0100648	obj/kern/kernel.asm	/^f0100648:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f010064b	obj/kern/kernel.asm	/^f010064b:	5b                   	pop    %ebx$/;"	l
f010064c	obj/kern/kernel.asm	/^f010064c:	5e                   	pop    %esi$/;"	l
f010064d	obj/kern/kernel.asm	/^f010064d:	5f                   	pop    %edi$/;"	l
f010064e	obj/kern/kernel.asm	/^f010064e:	5d                   	pop    %ebp$/;"	l
f010064f	obj/kern/kernel.asm	/^f010064f:	c3                   	ret    $/;"	l
f0100650	obj/kern/kernel.asm	/^f0100650 <serial_intr>:$/;"	l
f0100650	obj/kern/kernel.asm	/^f0100650:	80 3d 34 82 2b f0 00 	cmpb   $0x0,0xf02b8234$/;"	l
f0100657	obj/kern/kernel.asm	/^f0100657:	74 11                	je     f010066a <serial_intr+0x1a>$/;"	l
f0100659	obj/kern/kernel.asm	/^f0100659:	55                   	push   %ebp$/;"	l
f010065a	obj/kern/kernel.asm	/^f010065a:	89 e5                	mov    %esp,%ebp$/;"	l
f010065c	obj/kern/kernel.asm	/^f010065c:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010065f	obj/kern/kernel.asm	/^f010065f:	b8 00 03 10 f0       	mov    $0xf0100300,%eax$/;"	l
f0100664	obj/kern/kernel.asm	/^f0100664:	e8 b3 fc ff ff       	call   f010031c <cons_intr>$/;"	l
f0100669	obj/kern/kernel.asm	/^f0100669:	c9                   	leave  $/;"	l
f010066a	obj/kern/kernel.asm	/^f010066a:	f3 c3                	repz ret $/;"	l
f010066c	obj/kern/kernel.asm	/^f010066c <kbd_intr>:$/;"	l
f010066c	obj/kern/kernel.asm	/^f010066c:	55                   	push   %ebp$/;"	l
f010066d	obj/kern/kernel.asm	/^f010066d:	89 e5                	mov    %esp,%ebp$/;"	l
f010066f	obj/kern/kernel.asm	/^f010066f:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100672	obj/kern/kernel.asm	/^f0100672:	b8 60 03 10 f0       	mov    $0xf0100360,%eax$/;"	l
f0100677	obj/kern/kernel.asm	/^f0100677:	e8 a0 fc ff ff       	call   f010031c <cons_intr>$/;"	l
f010067c	obj/kern/kernel.asm	/^f010067c:	c9                   	leave  $/;"	l
f010067d	obj/kern/kernel.asm	/^f010067d:	c3                   	ret    $/;"	l
f010067e	obj/kern/kernel.asm	/^f010067e <cons_getc>:$/;"	l
f010067e	obj/kern/kernel.asm	/^f010067e:	55                   	push   %ebp$/;"	l
f010067f	obj/kern/kernel.asm	/^f010067f:	89 e5                	mov    %esp,%ebp$/;"	l
f0100681	obj/kern/kernel.asm	/^f0100681:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100684	obj/kern/kernel.asm	/^f0100684:	e8 c7 ff ff ff       	call   f0100650 <serial_intr>$/;"	l
f0100689	obj/kern/kernel.asm	/^f0100689:	e8 de ff ff ff       	call   f010066c <kbd_intr>$/;"	l
f010068e	obj/kern/kernel.asm	/^f010068e:	a1 20 82 2b f0       	mov    0xf02b8220,%eax$/;"	l
f0100693	obj/kern/kernel.asm	/^f0100693:	3b 05 24 82 2b f0    	cmp    0xf02b8224,%eax$/;"	l
f0100699	obj/kern/kernel.asm	/^f0100699:	74 26                	je     f01006c1 <cons_getc+0x43>$/;"	l
f010069b	obj/kern/kernel.asm	/^f010069b:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f010069e	obj/kern/kernel.asm	/^f010069e:	89 15 20 82 2b f0    	mov    %edx,0xf02b8220$/;"	l
f01006a4	obj/kern/kernel.asm	/^f01006a4:	0f b6 88 20 80 2b f0 	movzbl -0xfd47fe0(%eax),%ecx$/;"	l
f01006ab	obj/kern/kernel.asm	/^f01006ab:	89 c8                	mov    %ecx,%eax$/;"	l
f01006ad	obj/kern/kernel.asm	/^f01006ad:	81 fa 00 02 00 00    	cmp    $0x200,%edx$/;"	l
f01006b3	obj/kern/kernel.asm	/^f01006b3:	75 11                	jne    f01006c6 <cons_getc+0x48>$/;"	l
f01006b5	obj/kern/kernel.asm	/^f01006b5:	c7 05 20 82 2b f0 00 	movl   $0x0,0xf02b8220$/;"	l
f01006bc	obj/kern/kernel.asm	/^f01006bc:	00 00 00 $/;"	l
f01006bf	obj/kern/kernel.asm	/^f01006bf:	eb 05                	jmp    f01006c6 <cons_getc+0x48>$/;"	l
f01006c1	obj/kern/kernel.asm	/^f01006c1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01006c6	obj/kern/kernel.asm	/^f01006c6:	c9                   	leave  $/;"	l
f01006c7	obj/kern/kernel.asm	/^f01006c7:	c3                   	ret    $/;"	l
f01006c8	obj/kern/kernel.asm	/^f01006c8 <cons_init>:$/;"	l
f01006c8	obj/kern/kernel.asm	/^f01006c8:	55                   	push   %ebp$/;"	l
f01006c9	obj/kern/kernel.asm	/^f01006c9:	89 e5                	mov    %esp,%ebp$/;"	l
f01006cb	obj/kern/kernel.asm	/^f01006cb:	57                   	push   %edi$/;"	l
f01006cc	obj/kern/kernel.asm	/^f01006cc:	56                   	push   %esi$/;"	l
f01006cd	obj/kern/kernel.asm	/^f01006cd:	53                   	push   %ebx$/;"	l
f01006ce	obj/kern/kernel.asm	/^f01006ce:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01006d1	obj/kern/kernel.asm	/^f01006d1:	0f b7 15 00 80 0b f0 	movzwl 0xf00b8000,%edx$/;"	l
f01006d8	obj/kern/kernel.asm	/^f01006d8:	66 c7 05 00 80 0b f0 	movw   $0xa55a,0xf00b8000$/;"	l
f01006df	obj/kern/kernel.asm	/^f01006df:	5a a5 $/;"	l
f01006e1	obj/kern/kernel.asm	/^f01006e1:	0f b7 05 00 80 0b f0 	movzwl 0xf00b8000,%eax$/;"	l
f01006e8	obj/kern/kernel.asm	/^f01006e8:	66 3d 5a a5          	cmp    $0xa55a,%ax$/;"	l
f01006ec	obj/kern/kernel.asm	/^f01006ec:	74 11                	je     f01006ff <cons_init+0x37>$/;"	l
f01006ee	obj/kern/kernel.asm	/^f01006ee:	c7 05 30 82 2b f0 b4 	movl   $0x3b4,0xf02b8230$/;"	l
f01006f5	obj/kern/kernel.asm	/^f01006f5:	03 00 00 $/;"	l
f01006f8	obj/kern/kernel.asm	/^f01006f8:	bf 00 00 0b f0       	mov    $0xf00b0000,%edi$/;"	l
f01006fd	obj/kern/kernel.asm	/^f01006fd:	eb 16                	jmp    f0100715 <cons_init+0x4d>$/;"	l
f01006ff	obj/kern/kernel.asm	/^f01006ff:	66 89 15 00 80 0b f0 	mov    %dx,0xf00b8000$/;"	l
f0100706	obj/kern/kernel.asm	/^f0100706:	c7 05 30 82 2b f0 d4 	movl   $0x3d4,0xf02b8230$/;"	l
f010070d	obj/kern/kernel.asm	/^f010070d:	03 00 00 $/;"	l
f0100710	obj/kern/kernel.asm	/^f0100710:	bf 00 80 0b f0       	mov    $0xf00b8000,%edi$/;"	l
f0100715	obj/kern/kernel.asm	/^f0100715:	8b 0d 30 82 2b f0    	mov    0xf02b8230,%ecx$/;"	l
f010071b	obj/kern/kernel.asm	/^f010071b:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f0100720	obj/kern/kernel.asm	/^f0100720:	89 ca                	mov    %ecx,%edx$/;"	l
f0100722	obj/kern/kernel.asm	/^f0100722:	ee                   	out    %al,(%dx)$/;"	l
f0100723	obj/kern/kernel.asm	/^f0100723:	8d 59 01             	lea    0x1(%ecx),%ebx$/;"	l
f0100726	obj/kern/kernel.asm	/^f0100726:	89 da                	mov    %ebx,%edx$/;"	l
f0100728	obj/kern/kernel.asm	/^f0100728:	ec                   	in     (%dx),%al$/;"	l
f0100729	obj/kern/kernel.asm	/^f0100729:	0f b6 f0             	movzbl %al,%esi$/;"	l
f010072c	obj/kern/kernel.asm	/^f010072c:	c1 e6 08             	shl    $0x8,%esi$/;"	l
f010072f	obj/kern/kernel.asm	/^f010072f:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f0100734	obj/kern/kernel.asm	/^f0100734:	89 ca                	mov    %ecx,%edx$/;"	l
f0100736	obj/kern/kernel.asm	/^f0100736:	ee                   	out    %al,(%dx)$/;"	l
f0100737	obj/kern/kernel.asm	/^f0100737:	89 da                	mov    %ebx,%edx$/;"	l
f0100739	obj/kern/kernel.asm	/^f0100739:	ec                   	in     (%dx),%al$/;"	l
f010073a	obj/kern/kernel.asm	/^f010073a:	89 3d 2c 82 2b f0    	mov    %edi,0xf02b822c$/;"	l
f0100740	obj/kern/kernel.asm	/^f0100740:	0f b6 d8             	movzbl %al,%ebx$/;"	l
f0100743	obj/kern/kernel.asm	/^f0100743:	09 de                	or     %ebx,%esi$/;"	l
f0100745	obj/kern/kernel.asm	/^f0100745:	66 89 35 28 82 2b f0 	mov    %si,0xf02b8228$/;"	l
f010074c	obj/kern/kernel.asm	/^f010074c:	e8 1b ff ff ff       	call   f010066c <kbd_intr>$/;"	l
f0100751	obj/kern/kernel.asm	/^f0100751:	0f b7 05 a8 43 12 f0 	movzwl 0xf01243a8,%eax$/;"	l
f0100758	obj/kern/kernel.asm	/^f0100758:	25 fd ff 00 00       	and    $0xfffd,%eax$/;"	l
f010075d	obj/kern/kernel.asm	/^f010075d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100760	obj/kern/kernel.asm	/^f0100760:	e8 35 37 00 00       	call   f0103e9a <irq_setmask_8259A>$/;"	l
f0100765	obj/kern/kernel.asm	/^f0100765:	be fa 03 00 00       	mov    $0x3fa,%esi$/;"	l
f010076a	obj/kern/kernel.asm	/^f010076a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010076f	obj/kern/kernel.asm	/^f010076f:	89 f2                	mov    %esi,%edx$/;"	l
f0100771	obj/kern/kernel.asm	/^f0100771:	ee                   	out    %al,(%dx)$/;"	l
f0100772	obj/kern/kernel.asm	/^f0100772:	b2 fb                	mov    $0xfb,%dl$/;"	l
f0100774	obj/kern/kernel.asm	/^f0100774:	b8 80 ff ff ff       	mov    $0xffffff80,%eax$/;"	l
f0100779	obj/kern/kernel.asm	/^f0100779:	ee                   	out    %al,(%dx)$/;"	l
f010077a	obj/kern/kernel.asm	/^f010077a:	bb f8 03 00 00       	mov    $0x3f8,%ebx$/;"	l
f010077f	obj/kern/kernel.asm	/^f010077f:	b8 0c 00 00 00       	mov    $0xc,%eax$/;"	l
f0100784	obj/kern/kernel.asm	/^f0100784:	89 da                	mov    %ebx,%edx$/;"	l
f0100786	obj/kern/kernel.asm	/^f0100786:	ee                   	out    %al,(%dx)$/;"	l
f0100787	obj/kern/kernel.asm	/^f0100787:	b2 f9                	mov    $0xf9,%dl$/;"	l
f0100789	obj/kern/kernel.asm	/^f0100789:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010078e	obj/kern/kernel.asm	/^f010078e:	ee                   	out    %al,(%dx)$/;"	l
f010078f	obj/kern/kernel.asm	/^f010078f:	b2 fb                	mov    $0xfb,%dl$/;"	l
f0100791	obj/kern/kernel.asm	/^f0100791:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f0100796	obj/kern/kernel.asm	/^f0100796:	ee                   	out    %al,(%dx)$/;"	l
f0100797	obj/kern/kernel.asm	/^f0100797:	b2 fc                	mov    $0xfc,%dl$/;"	l
f0100799	obj/kern/kernel.asm	/^f0100799:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010079e	obj/kern/kernel.asm	/^f010079e:	ee                   	out    %al,(%dx)$/;"	l
f010079f	obj/kern/kernel.asm	/^f010079f:	b2 f9                	mov    $0xf9,%dl$/;"	l
f01007a1	obj/kern/kernel.asm	/^f01007a1:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01007a6	obj/kern/kernel.asm	/^f01007a6:	ee                   	out    %al,(%dx)$/;"	l
f01007a7	obj/kern/kernel.asm	/^f01007a7:	b2 fd                	mov    $0xfd,%dl$/;"	l
f01007a9	obj/kern/kernel.asm	/^f01007a9:	ec                   	in     (%dx),%al$/;"	l
f01007aa	obj/kern/kernel.asm	/^f01007aa:	3c ff                	cmp    $0xff,%al$/;"	l
f01007ac	obj/kern/kernel.asm	/^f01007ac:	0f 95 c1             	setne  %cl$/;"	l
f01007af	obj/kern/kernel.asm	/^f01007af:	88 0d 34 82 2b f0    	mov    %cl,0xf02b8234$/;"	l
f01007b5	obj/kern/kernel.asm	/^f01007b5:	89 f2                	mov    %esi,%edx$/;"	l
f01007b7	obj/kern/kernel.asm	/^f01007b7:	ec                   	in     (%dx),%al$/;"	l
f01007b8	obj/kern/kernel.asm	/^f01007b8:	89 da                	mov    %ebx,%edx$/;"	l
f01007ba	obj/kern/kernel.asm	/^f01007ba:	ec                   	in     (%dx),%al$/;"	l
f01007bb	obj/kern/kernel.asm	/^f01007bb:	84 c9                	test   %cl,%cl$/;"	l
f01007bd	obj/kern/kernel.asm	/^f01007bd:	74 1d                	je     f01007dc <cons_init+0x114>$/;"	l
f01007bf	obj/kern/kernel.asm	/^f01007bf:	0f b7 05 a8 43 12 f0 	movzwl 0xf01243a8,%eax$/;"	l
f01007c6	obj/kern/kernel.asm	/^f01007c6:	25 ef ff 00 00       	and    $0xffef,%eax$/;"	l
f01007cb	obj/kern/kernel.asm	/^f01007cb:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01007ce	obj/kern/kernel.asm	/^f01007ce:	e8 c7 36 00 00       	call   f0103e9a <irq_setmask_8259A>$/;"	l
f01007d3	obj/kern/kernel.asm	/^f01007d3:	80 3d 34 82 2b f0 00 	cmpb   $0x0,0xf02b8234$/;"	l
f01007da	obj/kern/kernel.asm	/^f01007da:	75 0c                	jne    f01007e8 <cons_init+0x120>$/;"	l
f01007dc	obj/kern/kernel.asm	/^f01007dc:	c7 04 24 04 7b 10 f0 	movl   $0xf0107b04,(%esp)$/;"	l
f01007e3	obj/kern/kernel.asm	/^f01007e3:	e8 04 38 00 00       	call   f0103fec <cprintf>$/;"	l
f01007e8	obj/kern/kernel.asm	/^f01007e8:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01007eb	obj/kern/kernel.asm	/^f01007eb:	5b                   	pop    %ebx$/;"	l
f01007ec	obj/kern/kernel.asm	/^f01007ec:	5e                   	pop    %esi$/;"	l
f01007ed	obj/kern/kernel.asm	/^f01007ed:	5f                   	pop    %edi$/;"	l
f01007ee	obj/kern/kernel.asm	/^f01007ee:	5d                   	pop    %ebp$/;"	l
f01007ef	obj/kern/kernel.asm	/^f01007ef:	c3                   	ret    $/;"	l
f01007f0	obj/kern/kernel.asm	/^f01007f0 <cputchar>:$/;"	l
f01007f0	obj/kern/kernel.asm	/^f01007f0:	55                   	push   %ebp$/;"	l
f01007f1	obj/kern/kernel.asm	/^f01007f1:	89 e5                	mov    %esp,%ebp$/;"	l
f01007f3	obj/kern/kernel.asm	/^f01007f3:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01007f6	obj/kern/kernel.asm	/^f01007f6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01007f9	obj/kern/kernel.asm	/^f01007f9:	e8 6b fc ff ff       	call   f0100469 <cons_putc>$/;"	l
f01007fe	obj/kern/kernel.asm	/^f01007fe:	c9                   	leave  $/;"	l
f01007ff	obj/kern/kernel.asm	/^f01007ff:	c3                   	ret    $/;"	l
f0100800	obj/kern/kernel.asm	/^f0100800 <getchar>:$/;"	l
f0100800	obj/kern/kernel.asm	/^f0100800:	55                   	push   %ebp$/;"	l
f0100801	obj/kern/kernel.asm	/^f0100801:	89 e5                	mov    %esp,%ebp$/;"	l
f0100803	obj/kern/kernel.asm	/^f0100803:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100806	obj/kern/kernel.asm	/^f0100806:	e8 73 fe ff ff       	call   f010067e <cons_getc>$/;"	l
f010080b	obj/kern/kernel.asm	/^f010080b:	85 c0                	test   %eax,%eax$/;"	l
f010080d	obj/kern/kernel.asm	/^f010080d:	74 f7                	je     f0100806 <getchar+0x6>$/;"	l
f010080f	obj/kern/kernel.asm	/^f010080f:	c9                   	leave  $/;"	l
f0100810	obj/kern/kernel.asm	/^f0100810:	c3                   	ret    $/;"	l
f0100811	obj/kern/kernel.asm	/^f0100811 <iscons>:$/;"	l
f0100811	obj/kern/kernel.asm	/^f0100811:	55                   	push   %ebp$/;"	l
f0100812	obj/kern/kernel.asm	/^f0100812:	89 e5                	mov    %esp,%ebp$/;"	l
f0100814	obj/kern/kernel.asm	/^f0100814:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100819	obj/kern/kernel.asm	/^f0100819:	5d                   	pop    %ebp$/;"	l
f010081a	obj/kern/kernel.asm	/^f010081a:	c3                   	ret    $/;"	l
f010081b	obj/kern/kernel.asm	/^f010081b:	66 90                	xchg   %ax,%ax$/;"	l
f010081d	obj/kern/kernel.asm	/^f010081d:	66 90                	xchg   %ax,%ax$/;"	l
f010081f	obj/kern/kernel.asm	/^f010081f:	90                   	nop$/;"	l
f0100820	obj/kern/kernel.asm	/^f0100820 <mon_help>:$/;"	l
f0100820	obj/kern/kernel.asm	/^f0100820:	55                   	push   %ebp$/;"	l
f0100821	obj/kern/kernel.asm	/^f0100821:	89 e5                	mov    %esp,%ebp$/;"	l
f0100823	obj/kern/kernel.asm	/^f0100823:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100826	obj/kern/kernel.asm	/^f0100826:	c7 44 24 08 60 7d 10 	movl   $0xf0107d60,0x8(%esp)$/;"	l
f010082d	obj/kern/kernel.asm	/^f010082d:	f0 $/;"	l
f010082e	obj/kern/kernel.asm	/^f010082e:	c7 44 24 04 7e 7d 10 	movl   $0xf0107d7e,0x4(%esp)$/;"	l
f0100835	obj/kern/kernel.asm	/^f0100835:	f0 $/;"	l
f0100836	obj/kern/kernel.asm	/^f0100836:	c7 04 24 83 7d 10 f0 	movl   $0xf0107d83,(%esp)$/;"	l
f010083d	obj/kern/kernel.asm	/^f010083d:	e8 aa 37 00 00       	call   f0103fec <cprintf>$/;"	l
f0100842	obj/kern/kernel.asm	/^f0100842:	c7 44 24 08 50 7e 10 	movl   $0xf0107e50,0x8(%esp)$/;"	l
f0100849	obj/kern/kernel.asm	/^f0100849:	f0 $/;"	l
f010084a	obj/kern/kernel.asm	/^f010084a:	c7 44 24 04 8c 7d 10 	movl   $0xf0107d8c,0x4(%esp)$/;"	l
f0100851	obj/kern/kernel.asm	/^f0100851:	f0 $/;"	l
f0100852	obj/kern/kernel.asm	/^f0100852:	c7 04 24 83 7d 10 f0 	movl   $0xf0107d83,(%esp)$/;"	l
f0100859	obj/kern/kernel.asm	/^f0100859:	e8 8e 37 00 00       	call   f0103fec <cprintf>$/;"	l
f010085e	obj/kern/kernel.asm	/^f010085e:	c7 44 24 08 78 7e 10 	movl   $0xf0107e78,0x8(%esp)$/;"	l
f0100865	obj/kern/kernel.asm	/^f0100865:	f0 $/;"	l
f0100866	obj/kern/kernel.asm	/^f0100866:	c7 44 24 04 95 7d 10 	movl   $0xf0107d95,0x4(%esp)$/;"	l
f010086d	obj/kern/kernel.asm	/^f010086d:	f0 $/;"	l
f010086e	obj/kern/kernel.asm	/^f010086e:	c7 04 24 83 7d 10 f0 	movl   $0xf0107d83,(%esp)$/;"	l
f0100875	obj/kern/kernel.asm	/^f0100875:	e8 72 37 00 00       	call   f0103fec <cprintf>$/;"	l
f010087a	obj/kern/kernel.asm	/^f010087a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010087f	obj/kern/kernel.asm	/^f010087f:	c9                   	leave  $/;"	l
f0100880	obj/kern/kernel.asm	/^f0100880:	c3                   	ret    $/;"	l
f0100881	obj/kern/kernel.asm	/^f0100881 <mon_kerninfo>:$/;"	l
f0100881	obj/kern/kernel.asm	/^f0100881:	55                   	push   %ebp$/;"	l
f0100882	obj/kern/kernel.asm	/^f0100882:	89 e5                	mov    %esp,%ebp$/;"	l
f0100884	obj/kern/kernel.asm	/^f0100884:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100887	obj/kern/kernel.asm	/^f0100887:	c7 04 24 9f 7d 10 f0 	movl   $0xf0107d9f,(%esp)$/;"	l
f010088e	obj/kern/kernel.asm	/^f010088e:	e8 59 37 00 00       	call   f0103fec <cprintf>$/;"	l
f0100893	obj/kern/kernel.asm	/^f0100893:	c7 44 24 04 0c 00 10 	movl   $0x10000c,0x4(%esp)$/;"	l
f010089a	obj/kern/kernel.asm	/^f010089a:	00 $/;"	l
f010089b	obj/kern/kernel.asm	/^f010089b:	c7 04 24 a4 7e 10 f0 	movl   $0xf0107ea4,(%esp)$/;"	l
f01008a2	obj/kern/kernel.asm	/^f01008a2:	e8 45 37 00 00       	call   f0103fec <cprintf>$/;"	l
f01008a7	obj/kern/kernel.asm	/^f01008a7:	c7 44 24 08 0c 00 10 	movl   $0x10000c,0x8(%esp)$/;"	l
f01008ae	obj/kern/kernel.asm	/^f01008ae:	00 $/;"	l
f01008af	obj/kern/kernel.asm	/^f01008af:	c7 44 24 04 0c 00 10 	movl   $0xf010000c,0x4(%esp)$/;"	l
f01008b6	obj/kern/kernel.asm	/^f01008b6:	f0 $/;"	l
f01008b7	obj/kern/kernel.asm	/^f01008b7:	c7 04 24 cc 7e 10 f0 	movl   $0xf0107ecc,(%esp)$/;"	l
f01008be	obj/kern/kernel.asm	/^f01008be:	e8 29 37 00 00       	call   f0103fec <cprintf>$/;"	l
f01008c3	obj/kern/kernel.asm	/^f01008c3:	c7 44 24 08 17 7a 10 	movl   $0x107a17,0x8(%esp)$/;"	l
f01008ca	obj/kern/kernel.asm	/^f01008ca:	00 $/;"	l
f01008cb	obj/kern/kernel.asm	/^f01008cb:	c7 44 24 04 17 7a 10 	movl   $0xf0107a17,0x4(%esp)$/;"	l
f01008d2	obj/kern/kernel.asm	/^f01008d2:	f0 $/;"	l
f01008d3	obj/kern/kernel.asm	/^f01008d3:	c7 04 24 f0 7e 10 f0 	movl   $0xf0107ef0,(%esp)$/;"	l
f01008da	obj/kern/kernel.asm	/^f01008da:	e8 0d 37 00 00       	call   f0103fec <cprintf>$/;"	l
f01008df	obj/kern/kernel.asm	/^f01008df:	c7 44 24 08 8e 73 2b 	movl   $0x2b738e,0x8(%esp)$/;"	l
f01008e6	obj/kern/kernel.asm	/^f01008e6:	00 $/;"	l
f01008e7	obj/kern/kernel.asm	/^f01008e7:	c7 44 24 04 8e 73 2b 	movl   $0xf02b738e,0x4(%esp)$/;"	l
f01008ee	obj/kern/kernel.asm	/^f01008ee:	f0 $/;"	l
f01008ef	obj/kern/kernel.asm	/^f01008ef:	c7 04 24 14 7f 10 f0 	movl   $0xf0107f14,(%esp)$/;"	l
f01008f6	obj/kern/kernel.asm	/^f01008f6:	e8 f1 36 00 00       	call   f0103fec <cprintf>$/;"	l
f01008fb	obj/kern/kernel.asm	/^f01008fb:	c7 44 24 08 10 a0 2f 	movl   $0x2fa010,0x8(%esp)$/;"	l
f0100902	obj/kern/kernel.asm	/^f0100902:	00 $/;"	l
f0100903	obj/kern/kernel.asm	/^f0100903:	c7 44 24 04 10 a0 2f 	movl   $0xf02fa010,0x4(%esp)$/;"	l
f010090a	obj/kern/kernel.asm	/^f010090a:	f0 $/;"	l
f010090b	obj/kern/kernel.asm	/^f010090b:	c7 04 24 38 7f 10 f0 	movl   $0xf0107f38,(%esp)$/;"	l
f0100912	obj/kern/kernel.asm	/^f0100912:	e8 d5 36 00 00       	call   f0103fec <cprintf>$/;"	l
f0100917	obj/kern/kernel.asm	/^f0100917:	b8 0f a4 2f f0       	mov    $0xf02fa40f,%eax$/;"	l
f010091c	obj/kern/kernel.asm	/^f010091c:	2d 0c 00 10 f0       	sub    $0xf010000c,%eax$/;"	l
f0100921	obj/kern/kernel.asm	/^f0100921:	25 00 fc ff ff       	and    $0xfffffc00,%eax$/;"	l
f0100926	obj/kern/kernel.asm	/^f0100926:	8d 90 ff 03 00 00    	lea    0x3ff(%eax),%edx$/;"	l
f010092c	obj/kern/kernel.asm	/^f010092c:	85 c0                	test   %eax,%eax$/;"	l
f010092e	obj/kern/kernel.asm	/^f010092e:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
f0100931	obj/kern/kernel.asm	/^f0100931:	c1 f8 0a             	sar    $0xa,%eax$/;"	l
f0100934	obj/kern/kernel.asm	/^f0100934:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100938	obj/kern/kernel.asm	/^f0100938:	c7 04 24 5c 7f 10 f0 	movl   $0xf0107f5c,(%esp)$/;"	l
f010093f	obj/kern/kernel.asm	/^f010093f:	e8 a8 36 00 00       	call   f0103fec <cprintf>$/;"	l
f0100944	obj/kern/kernel.asm	/^f0100944:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100949	obj/kern/kernel.asm	/^f0100949:	c9                   	leave  $/;"	l
f010094a	obj/kern/kernel.asm	/^f010094a:	c3                   	ret    $/;"	l
f010094b	obj/kern/kernel.asm	/^f010094b <mon_backtrace>:$/;"	l
f010094b	obj/kern/kernel.asm	/^f010094b:	55                   	push   %ebp$/;"	l
f010094c	obj/kern/kernel.asm	/^f010094c:	89 e5                	mov    %esp,%ebp$/;"	l
f010094e	obj/kern/kernel.asm	/^f010094e:	57                   	push   %edi$/;"	l
f010094f	obj/kern/kernel.asm	/^f010094f:	56                   	push   %esi$/;"	l
f0100950	obj/kern/kernel.asm	/^f0100950:	53                   	push   %ebx$/;"	l
f0100951	obj/kern/kernel.asm	/^f0100951:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f0100954	obj/kern/kernel.asm	/^f0100954:	89 eb                	mov    %ebp,%ebx$/;"	l
f0100956	obj/kern/kernel.asm	/^f0100956:	c7 04 24 b8 7d 10 f0 	movl   $0xf0107db8,(%esp)$/;"	l
f010095d	obj/kern/kernel.asm	/^f010095d:	e8 8a 36 00 00       	call   f0103fec <cprintf>$/;"	l
f0100962	obj/kern/kernel.asm	/^f0100962:	8d 7d d0             	lea    -0x30(%ebp),%edi$/;"	l
f0100965	obj/kern/kernel.asm	/^f0100965:	8b 73 04             	mov    0x4(%ebx),%esi$/;"	l
f0100968	obj/kern/kernel.asm	/^f0100968:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f010096c	obj/kern/kernel.asm	/^f010096c:	89 34 24             	mov    %esi,(%esp)$/;"	l
f010096f	obj/kern/kernel.asm	/^f010096f:	e8 a0 4e 00 00       	call   f0105814 <debuginfo_eip>$/;"	l
f0100974	obj/kern/kernel.asm	/^f0100974:	85 c0                	test   %eax,%eax$/;"	l
f0100976	obj/kern/kernel.asm	/^f0100976:	75 68                	jne    f01009e0 <mon_backtrace+0x95>$/;"	l
f0100978	obj/kern/kernel.asm	/^f0100978:	8b 43 18             	mov    0x18(%ebx),%eax$/;"	l
f010097b	obj/kern/kernel.asm	/^f010097b:	89 44 24 1c          	mov    %eax,0x1c(%esp)$/;"	l
f010097f	obj/kern/kernel.asm	/^f010097f:	8b 43 14             	mov    0x14(%ebx),%eax$/;"	l
f0100982	obj/kern/kernel.asm	/^f0100982:	89 44 24 18          	mov    %eax,0x18(%esp)$/;"	l
f0100986	obj/kern/kernel.asm	/^f0100986:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f0100989	obj/kern/kernel.asm	/^f0100989:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
f010098d	obj/kern/kernel.asm	/^f010098d:	8b 43 0c             	mov    0xc(%ebx),%eax$/;"	l
f0100990	obj/kern/kernel.asm	/^f0100990:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f0100994	obj/kern/kernel.asm	/^f0100994:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0100997	obj/kern/kernel.asm	/^f0100997:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010099b	obj/kern/kernel.asm	/^f010099b:	89 74 24 08          	mov    %esi,0x8(%esp)$/;"	l
f010099f	obj/kern/kernel.asm	/^f010099f:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01009a3	obj/kern/kernel.asm	/^f01009a3:	c7 04 24 88 7f 10 f0 	movl   $0xf0107f88,(%esp)$/;"	l
f01009aa	obj/kern/kernel.asm	/^f01009aa:	e8 3d 36 00 00       	call   f0103fec <cprintf>$/;"	l
f01009af	obj/kern/kernel.asm	/^f01009af:	2b 75 e0             	sub    -0x20(%ebp),%esi$/;"	l
f01009b2	obj/kern/kernel.asm	/^f01009b2:	89 74 24 14          	mov    %esi,0x14(%esp)$/;"	l
f01009b6	obj/kern/kernel.asm	/^f01009b6:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f01009b9	obj/kern/kernel.asm	/^f01009b9:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f01009bd	obj/kern/kernel.asm	/^f01009bd:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f01009c0	obj/kern/kernel.asm	/^f01009c0:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01009c4	obj/kern/kernel.asm	/^f01009c4:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01009c7	obj/kern/kernel.asm	/^f01009c7:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01009cb	obj/kern/kernel.asm	/^f01009cb:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f01009ce	obj/kern/kernel.asm	/^f01009ce:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01009d2	obj/kern/kernel.asm	/^f01009d2:	c7 04 24 ca 7d 10 f0 	movl   $0xf0107dca,(%esp)$/;"	l
f01009d9	obj/kern/kernel.asm	/^f01009d9:	e8 0e 36 00 00       	call   f0103fec <cprintf>$/;"	l
f01009de	obj/kern/kernel.asm	/^f01009de:	eb 43                	jmp    f0100a23 <mon_backtrace+0xd8>$/;"	l
f01009e0	obj/kern/kernel.asm	/^f01009e0:	8b 43 18             	mov    0x18(%ebx),%eax$/;"	l
f01009e3	obj/kern/kernel.asm	/^f01009e3:	89 44 24 1c          	mov    %eax,0x1c(%esp)$/;"	l
f01009e7	obj/kern/kernel.asm	/^f01009e7:	8b 43 14             	mov    0x14(%ebx),%eax$/;"	l
f01009ea	obj/kern/kernel.asm	/^f01009ea:	89 44 24 18          	mov    %eax,0x18(%esp)$/;"	l
f01009ee	obj/kern/kernel.asm	/^f01009ee:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f01009f1	obj/kern/kernel.asm	/^f01009f1:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
f01009f5	obj/kern/kernel.asm	/^f01009f5:	8b 43 0c             	mov    0xc(%ebx),%eax$/;"	l
f01009f8	obj/kern/kernel.asm	/^f01009f8:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f01009fc	obj/kern/kernel.asm	/^f01009fc:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f01009ff	obj/kern/kernel.asm	/^f01009ff:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100a03	obj/kern/kernel.asm	/^f0100a03:	89 74 24 08          	mov    %esi,0x8(%esp)$/;"	l
f0100a07	obj/kern/kernel.asm	/^f0100a07:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0100a0b	obj/kern/kernel.asm	/^f0100a0b:	c7 04 24 88 7f 10 f0 	movl   $0xf0107f88,(%esp)$/;"	l
f0100a12	obj/kern/kernel.asm	/^f0100a12:	e8 d5 35 00 00       	call   f0103fec <cprintf>$/;"	l
f0100a17	obj/kern/kernel.asm	/^f0100a17:	c7 04 24 e3 7d 10 f0 	movl   $0xf0107de3,(%esp)$/;"	l
f0100a1e	obj/kern/kernel.asm	/^f0100a1e:	e8 c9 35 00 00       	call   f0103fec <cprintf>$/;"	l
f0100a23	obj/kern/kernel.asm	/^f0100a23:	8b 1b                	mov    (%ebx),%ebx$/;"	l
f0100a25	obj/kern/kernel.asm	/^f0100a25:	85 db                	test   %ebx,%ebx$/;"	l
f0100a27	obj/kern/kernel.asm	/^f0100a27:	0f 85 38 ff ff ff    	jne    f0100965 <mon_backtrace+0x1a>$/;"	l
f0100a2d	obj/kern/kernel.asm	/^f0100a2d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100a32	obj/kern/kernel.asm	/^f0100a32:	83 c4 4c             	add    $0x4c,%esp$/;"	l
f0100a35	obj/kern/kernel.asm	/^f0100a35:	5b                   	pop    %ebx$/;"	l
f0100a36	obj/kern/kernel.asm	/^f0100a36:	5e                   	pop    %esi$/;"	l
f0100a37	obj/kern/kernel.asm	/^f0100a37:	5f                   	pop    %edi$/;"	l
f0100a38	obj/kern/kernel.asm	/^f0100a38:	5d                   	pop    %ebp$/;"	l
f0100a39	obj/kern/kernel.asm	/^f0100a39:	c3                   	ret    $/;"	l
f0100a3a	obj/kern/kernel.asm	/^f0100a3a <monitor>:$/;"	l
f0100a3a	obj/kern/kernel.asm	/^f0100a3a:	55                   	push   %ebp$/;"	l
f0100a3b	obj/kern/kernel.asm	/^f0100a3b:	89 e5                	mov    %esp,%ebp$/;"	l
f0100a3d	obj/kern/kernel.asm	/^f0100a3d:	57                   	push   %edi$/;"	l
f0100a3e	obj/kern/kernel.asm	/^f0100a3e:	56                   	push   %esi$/;"	l
f0100a3f	obj/kern/kernel.asm	/^f0100a3f:	53                   	push   %ebx$/;"	l
f0100a40	obj/kern/kernel.asm	/^f0100a40:	83 ec 5c             	sub    $0x5c,%esp$/;"	l
f0100a43	obj/kern/kernel.asm	/^f0100a43:	c7 44 24 0c 04 00 00 	movl   $0x4,0xc(%esp)$/;"	l
f0100a4a	obj/kern/kernel.asm	/^f0100a4a:	00 $/;"	l
f0100a4b	obj/kern/kernel.asm	/^f0100a4b:	c7 44 24 08 03 00 00 	movl   $0x3,0x8(%esp)$/;"	l
f0100a52	obj/kern/kernel.asm	/^f0100a52:	00 $/;"	l
f0100a53	obj/kern/kernel.asm	/^f0100a53:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
f0100a5a	obj/kern/kernel.asm	/^f0100a5a:	00 $/;"	l
f0100a5b	obj/kern/kernel.asm	/^f0100a5b:	c7 04 24 00 7e 10 f0 	movl   $0xf0107e00,(%esp)$/;"	l
f0100a62	obj/kern/kernel.asm	/^f0100a62:	e8 85 35 00 00       	call   f0103fec <cprintf>$/;"	l
f0100a67	obj/kern/kernel.asm	/^f0100a67:	c7 04 24 c0 7f 10 f0 	movl   $0xf0107fc0,(%esp)$/;"	l
f0100a6e	obj/kern/kernel.asm	/^f0100a6e:	e8 79 35 00 00       	call   f0103fec <cprintf>$/;"	l
f0100a73	obj/kern/kernel.asm	/^f0100a73:	c7 04 24 e4 7f 10 f0 	movl   $0xf0107fe4,(%esp)$/;"	l
f0100a7a	obj/kern/kernel.asm	/^f0100a7a:	e8 6d 35 00 00       	call   f0103fec <cprintf>$/;"	l
f0100a7f	obj/kern/kernel.asm	/^f0100a7f:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
f0100a83	obj/kern/kernel.asm	/^f0100a83:	74 0b                	je     f0100a90 <monitor+0x56>$/;"	l
f0100a85	obj/kern/kernel.asm	/^f0100a85:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100a88	obj/kern/kernel.asm	/^f0100a88:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100a8b	obj/kern/kernel.asm	/^f0100a8b:	e8 e5 3c 00 00       	call   f0104775 <print_trapframe>$/;"	l
f0100a90	obj/kern/kernel.asm	/^f0100a90:	c7 04 24 12 7e 10 f0 	movl   $0xf0107e12,(%esp)$/;"	l
f0100a97	obj/kern/kernel.asm	/^f0100a97:	e8 24 57 00 00       	call   f01061c0 <readline>$/;"	l
f0100a9c	obj/kern/kernel.asm	/^f0100a9c:	89 c3                	mov    %eax,%ebx$/;"	l
f0100a9e	obj/kern/kernel.asm	/^f0100a9e:	85 c0                	test   %eax,%eax$/;"	l
f0100aa0	obj/kern/kernel.asm	/^f0100aa0:	74 ee                	je     f0100a90 <monitor+0x56>$/;"	l
f0100aa2	obj/kern/kernel.asm	/^f0100aa2:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%ebp)$/;"	l
f0100aa9	obj/kern/kernel.asm	/^f0100aa9:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0100aae	obj/kern/kernel.asm	/^f0100aae:	eb 0a                	jmp    f0100aba <monitor+0x80>$/;"	l
f0100ab0	obj/kern/kernel.asm	/^f0100ab0:	c6 03 00             	movb   $0x0,(%ebx)$/;"	l
f0100ab3	obj/kern/kernel.asm	/^f0100ab3:	89 f7                	mov    %esi,%edi$/;"	l
f0100ab5	obj/kern/kernel.asm	/^f0100ab5:	8d 5b 01             	lea    0x1(%ebx),%ebx$/;"	l
f0100ab8	obj/kern/kernel.asm	/^f0100ab8:	89 fe                	mov    %edi,%esi$/;"	l
f0100aba	obj/kern/kernel.asm	/^f0100aba:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0100abd	obj/kern/kernel.asm	/^f0100abd:	84 c0                	test   %al,%al$/;"	l
f0100abf	obj/kern/kernel.asm	/^f0100abf:	74 63                	je     f0100b24 <monitor+0xea>$/;"	l
f0100ac1	obj/kern/kernel.asm	/^f0100ac1:	0f be c0             	movsbl %al,%eax$/;"	l
f0100ac4	obj/kern/kernel.asm	/^f0100ac4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100ac8	obj/kern/kernel.asm	/^f0100ac8:	c7 04 24 16 7e 10 f0 	movl   $0xf0107e16,(%esp)$/;"	l
f0100acf	obj/kern/kernel.asm	/^f0100acf:	e8 16 59 00 00       	call   f01063ea <strchr>$/;"	l
f0100ad4	obj/kern/kernel.asm	/^f0100ad4:	85 c0                	test   %eax,%eax$/;"	l
f0100ad6	obj/kern/kernel.asm	/^f0100ad6:	75 d8                	jne    f0100ab0 <monitor+0x76>$/;"	l
f0100ad8	obj/kern/kernel.asm	/^f0100ad8:	80 3b 00             	cmpb   $0x0,(%ebx)$/;"	l
f0100adb	obj/kern/kernel.asm	/^f0100adb:	74 47                	je     f0100b24 <monitor+0xea>$/;"	l
f0100add	obj/kern/kernel.asm	/^f0100add:	83 fe 0f             	cmp    $0xf,%esi$/;"	l
f0100ae0	obj/kern/kernel.asm	/^f0100ae0:	75 16                	jne    f0100af8 <monitor+0xbe>$/;"	l
f0100ae2	obj/kern/kernel.asm	/^f0100ae2:	c7 44 24 04 10 00 00 	movl   $0x10,0x4(%esp)$/;"	l
f0100ae9	obj/kern/kernel.asm	/^f0100ae9:	00 $/;"	l
f0100aea	obj/kern/kernel.asm	/^f0100aea:	c7 04 24 1b 7e 10 f0 	movl   $0xf0107e1b,(%esp)$/;"	l
f0100af1	obj/kern/kernel.asm	/^f0100af1:	e8 f6 34 00 00       	call   f0103fec <cprintf>$/;"	l
f0100af6	obj/kern/kernel.asm	/^f0100af6:	eb 98                	jmp    f0100a90 <monitor+0x56>$/;"	l
f0100af8	obj/kern/kernel.asm	/^f0100af8:	8d 7e 01             	lea    0x1(%esi),%edi$/;"	l
f0100afb	obj/kern/kernel.asm	/^f0100afb:	89 5c b5 a8          	mov    %ebx,-0x58(%ebp,%esi,4)$/;"	l
f0100aff	obj/kern/kernel.asm	/^f0100aff:	eb 03                	jmp    f0100b04 <monitor+0xca>$/;"	l
f0100b01	obj/kern/kernel.asm	/^f0100b01:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100b04	obj/kern/kernel.asm	/^f0100b04:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0100b07	obj/kern/kernel.asm	/^f0100b07:	84 c0                	test   %al,%al$/;"	l
f0100b09	obj/kern/kernel.asm	/^f0100b09:	74 ad                	je     f0100ab8 <monitor+0x7e>$/;"	l
f0100b0b	obj/kern/kernel.asm	/^f0100b0b:	0f be c0             	movsbl %al,%eax$/;"	l
f0100b0e	obj/kern/kernel.asm	/^f0100b0e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100b12	obj/kern/kernel.asm	/^f0100b12:	c7 04 24 16 7e 10 f0 	movl   $0xf0107e16,(%esp)$/;"	l
f0100b19	obj/kern/kernel.asm	/^f0100b19:	e8 cc 58 00 00       	call   f01063ea <strchr>$/;"	l
f0100b1e	obj/kern/kernel.asm	/^f0100b1e:	85 c0                	test   %eax,%eax$/;"	l
f0100b20	obj/kern/kernel.asm	/^f0100b20:	74 df                	je     f0100b01 <monitor+0xc7>$/;"	l
f0100b22	obj/kern/kernel.asm	/^f0100b22:	eb 94                	jmp    f0100ab8 <monitor+0x7e>$/;"	l
f0100b24	obj/kern/kernel.asm	/^f0100b24:	c7 44 b5 a8 00 00 00 	movl   $0x0,-0x58(%ebp,%esi,4)$/;"	l
f0100b2b	obj/kern/kernel.asm	/^f0100b2b:	00 $/;"	l
f0100b2c	obj/kern/kernel.asm	/^f0100b2c:	85 f6                	test   %esi,%esi$/;"	l
f0100b2e	obj/kern/kernel.asm	/^f0100b2e:	0f 84 5c ff ff ff    	je     f0100a90 <monitor+0x56>$/;"	l
f0100b34	obj/kern/kernel.asm	/^f0100b34:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0100b39	obj/kern/kernel.asm	/^f0100b39:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f0100b3c	obj/kern/kernel.asm	/^f0100b3c:	8b 04 85 20 80 10 f0 	mov    -0xfef7fe0(,%eax,4),%eax$/;"	l
f0100b43	obj/kern/kernel.asm	/^f0100b43:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100b47	obj/kern/kernel.asm	/^f0100b47:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
f0100b4a	obj/kern/kernel.asm	/^f0100b4a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100b4d	obj/kern/kernel.asm	/^f0100b4d:	e8 3a 58 00 00       	call   f010638c <strcmp>$/;"	l
f0100b52	obj/kern/kernel.asm	/^f0100b52:	85 c0                	test   %eax,%eax$/;"	l
f0100b54	obj/kern/kernel.asm	/^f0100b54:	75 24                	jne    f0100b7a <monitor+0x140>$/;"	l
f0100b56	obj/kern/kernel.asm	/^f0100b56:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f0100b59	obj/kern/kernel.asm	/^f0100b59:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0100b5c	obj/kern/kernel.asm	/^f0100b5c:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0100b60	obj/kern/kernel.asm	/^f0100b60:	8d 4d a8             	lea    -0x58(%ebp),%ecx$/;"	l
f0100b63	obj/kern/kernel.asm	/^f0100b63:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0100b67	obj/kern/kernel.asm	/^f0100b67:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0100b6a	obj/kern/kernel.asm	/^f0100b6a:	ff 14 85 28 80 10 f0 	call   *-0xfef7fd8(,%eax,4)$/;"	l
f0100b71	obj/kern/kernel.asm	/^f0100b71:	85 c0                	test   %eax,%eax$/;"	l
f0100b73	obj/kern/kernel.asm	/^f0100b73:	78 25                	js     f0100b9a <monitor+0x160>$/;"	l
f0100b75	obj/kern/kernel.asm	/^f0100b75:	e9 16 ff ff ff       	jmp    f0100a90 <monitor+0x56>$/;"	l
f0100b7a	obj/kern/kernel.asm	/^f0100b7a:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100b7d	obj/kern/kernel.asm	/^f0100b7d:	83 fb 03             	cmp    $0x3,%ebx$/;"	l
f0100b80	obj/kern/kernel.asm	/^f0100b80:	75 b7                	jne    f0100b39 <monitor+0xff>$/;"	l
f0100b82	obj/kern/kernel.asm	/^f0100b82:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
f0100b85	obj/kern/kernel.asm	/^f0100b85:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100b89	obj/kern/kernel.asm	/^f0100b89:	c7 04 24 38 7e 10 f0 	movl   $0xf0107e38,(%esp)$/;"	l
f0100b90	obj/kern/kernel.asm	/^f0100b90:	e8 57 34 00 00       	call   f0103fec <cprintf>$/;"	l
f0100b95	obj/kern/kernel.asm	/^f0100b95:	e9 f6 fe ff ff       	jmp    f0100a90 <monitor+0x56>$/;"	l
f0100b9a	obj/kern/kernel.asm	/^f0100b9a:	83 c4 5c             	add    $0x5c,%esp$/;"	l
f0100b9d	obj/kern/kernel.asm	/^f0100b9d:	5b                   	pop    %ebx$/;"	l
f0100b9e	obj/kern/kernel.asm	/^f0100b9e:	5e                   	pop    %esi$/;"	l
f0100b9f	obj/kern/kernel.asm	/^f0100b9f:	5f                   	pop    %edi$/;"	l
f0100ba0	obj/kern/kernel.asm	/^f0100ba0:	5d                   	pop    %ebp$/;"	l
f0100ba1	obj/kern/kernel.asm	/^f0100ba1:	c3                   	ret    $/;"	l
f0100ba2	obj/kern/kernel.asm	/^f0100ba2:	66 90                	xchg   %ax,%ax$/;"	l
f0100ba4	obj/kern/kernel.asm	/^f0100ba4:	66 90                	xchg   %ax,%ax$/;"	l
f0100ba6	obj/kern/kernel.asm	/^f0100ba6:	66 90                	xchg   %ax,%ax$/;"	l
f0100ba8	obj/kern/kernel.asm	/^f0100ba8:	66 90                	xchg   %ax,%ax$/;"	l
f0100baa	obj/kern/kernel.asm	/^f0100baa:	66 90                	xchg   %ax,%ax$/;"	l
f0100bac	obj/kern/kernel.asm	/^f0100bac:	66 90                	xchg   %ax,%ax$/;"	l
f0100bae	obj/kern/kernel.asm	/^f0100bae:	66 90                	xchg   %ax,%ax$/;"	l
f0100bb0	obj/kern/kernel.asm	/^f0100bb0 <page2kva>:$/;"	l
f0100bb0	obj/kern/kernel.asm	/^f0100bb0:	2b 05 9c 8e 2b f0    	sub    0xf02b8e9c,%eax$/;"	l
f0100bb6	obj/kern/kernel.asm	/^f0100bb6:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100bb9	obj/kern/kernel.asm	/^f0100bb9:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100bbc	obj/kern/kernel.asm	/^f0100bbc:	89 c2                	mov    %eax,%edx$/;"	l
f0100bbe	obj/kern/kernel.asm	/^f0100bbe:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100bc1	obj/kern/kernel.asm	/^f0100bc1:	3b 15 94 8e 2b f0    	cmp    0xf02b8e94,%edx$/;"	l
f0100bc7	obj/kern/kernel.asm	/^f0100bc7:	72 26                	jb     f0100bef <page2kva+0x3f>$/;"	l
f0100bc9	obj/kern/kernel.asm	/^f0100bc9:	55                   	push   %ebp$/;"	l
f0100bca	obj/kern/kernel.asm	/^f0100bca:	89 e5                	mov    %esp,%ebp$/;"	l
f0100bcc	obj/kern/kernel.asm	/^f0100bcc:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100bcf	obj/kern/kernel.asm	/^f0100bcf:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100bd3	obj/kern/kernel.asm	/^f0100bd3:	c7 44 24 08 44 7a 10 	movl   $0xf0107a44,0x8(%esp)$/;"	l
f0100bda	obj/kern/kernel.asm	/^f0100bda:	f0 $/;"	l
f0100bdb	obj/kern/kernel.asm	/^f0100bdb:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0100be2	obj/kern/kernel.asm	/^f0100be2:	00 $/;"	l
f0100be3	obj/kern/kernel.asm	/^f0100be3:	c7 04 24 9d 89 10 f0 	movl   $0xf010899d,(%esp)$/;"	l
f0100bea	obj/kern/kernel.asm	/^f0100bea:	e8 51 f4 ff ff       	call   f0100040 <_panic>$/;"	l
f0100bef	obj/kern/kernel.asm	/^f0100bef:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0100bf4	obj/kern/kernel.asm	/^f0100bf4:	c3                   	ret    $/;"	l
f0100bf5	obj/kern/kernel.asm	/^f0100bf5 <check_va2pa>:$/;"	l
f0100bf5	obj/kern/kernel.asm	/^f0100bf5:	89 d1                	mov    %edx,%ecx$/;"	l
f0100bf7	obj/kern/kernel.asm	/^f0100bf7:	c1 e9 16             	shr    $0x16,%ecx$/;"	l
f0100bfa	obj/kern/kernel.asm	/^f0100bfa:	8b 04 88             	mov    (%eax,%ecx,4),%eax$/;"	l
f0100bfd	obj/kern/kernel.asm	/^f0100bfd:	a8 01                	test   $0x1,%al$/;"	l
f0100bff	obj/kern/kernel.asm	/^f0100bff:	74 5d                	je     f0100c5e <check_va2pa+0x69>$/;"	l
f0100c01	obj/kern/kernel.asm	/^f0100c01:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100c06	obj/kern/kernel.asm	/^f0100c06:	89 c1                	mov    %eax,%ecx$/;"	l
f0100c08	obj/kern/kernel.asm	/^f0100c08:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0100c0b	obj/kern/kernel.asm	/^f0100c0b:	3b 0d 94 8e 2b f0    	cmp    0xf02b8e94,%ecx$/;"	l
f0100c11	obj/kern/kernel.asm	/^f0100c11:	72 26                	jb     f0100c39 <check_va2pa+0x44>$/;"	l
f0100c13	obj/kern/kernel.asm	/^f0100c13:	55                   	push   %ebp$/;"	l
f0100c14	obj/kern/kernel.asm	/^f0100c14:	89 e5                	mov    %esp,%ebp$/;"	l
f0100c16	obj/kern/kernel.asm	/^f0100c16:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100c19	obj/kern/kernel.asm	/^f0100c19:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100c1d	obj/kern/kernel.asm	/^f0100c1d:	c7 44 24 08 44 7a 10 	movl   $0xf0107a44,0x8(%esp)$/;"	l
f0100c24	obj/kern/kernel.asm	/^f0100c24:	f0 $/;"	l
f0100c25	obj/kern/kernel.asm	/^f0100c25:	c7 44 24 04 7c 03 00 	movl   $0x37c,0x4(%esp)$/;"	l
f0100c2c	obj/kern/kernel.asm	/^f0100c2c:	00 $/;"	l
f0100c2d	obj/kern/kernel.asm	/^f0100c2d:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0100c34	obj/kern/kernel.asm	/^f0100c34:	e8 07 f4 ff ff       	call   f0100040 <_panic>$/;"	l
f0100c39	obj/kern/kernel.asm	/^f0100c39:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100c3c	obj/kern/kernel.asm	/^f0100c3c:	81 e2 ff 03 00 00    	and    $0x3ff,%edx$/;"	l
f0100c42	obj/kern/kernel.asm	/^f0100c42:	8b 84 90 00 00 00 f0 	mov    -0x10000000(%eax,%edx,4),%eax$/;"	l
f0100c49	obj/kern/kernel.asm	/^f0100c49:	89 c2                	mov    %eax,%edx$/;"	l
f0100c4b	obj/kern/kernel.asm	/^f0100c4b:	83 e2 01             	and    $0x1,%edx$/;"	l
f0100c4e	obj/kern/kernel.asm	/^f0100c4e:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100c53	obj/kern/kernel.asm	/^f0100c53:	85 d2                	test   %edx,%edx$/;"	l
f0100c55	obj/kern/kernel.asm	/^f0100c55:	ba ff ff ff ff       	mov    $0xffffffff,%edx$/;"	l
f0100c5a	obj/kern/kernel.asm	/^f0100c5a:	0f 44 c2             	cmove  %edx,%eax$/;"	l
f0100c5d	obj/kern/kernel.asm	/^f0100c5d:	c3                   	ret    $/;"	l
f0100c5e	obj/kern/kernel.asm	/^f0100c5e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100c63	obj/kern/kernel.asm	/^f0100c63:	c3                   	ret    $/;"	l
f0100c64	obj/kern/kernel.asm	/^f0100c64 <boot_alloc>:$/;"	l
f0100c64	obj/kern/kernel.asm	/^f0100c64:	55                   	push   %ebp$/;"	l
f0100c65	obj/kern/kernel.asm	/^f0100c65:	89 e5                	mov    %esp,%ebp$/;"	l
f0100c67	obj/kern/kernel.asm	/^f0100c67:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100c6a	obj/kern/kernel.asm	/^f0100c6a:	83 3d 38 82 2b f0 00 	cmpl   $0x0,0xf02b8238$/;"	l
f0100c71	obj/kern/kernel.asm	/^f0100c71:	75 11                	jne    f0100c84 <boot_alloc+0x20>$/;"	l
f0100c73	obj/kern/kernel.asm	/^f0100c73:	ba 0f b0 2f f0       	mov    $0xf02fb00f,%edx$/;"	l
f0100c78	obj/kern/kernel.asm	/^f0100c78:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0100c7e	obj/kern/kernel.asm	/^f0100c7e:	89 15 38 82 2b f0    	mov    %edx,0xf02b8238$/;"	l
f0100c84	obj/kern/kernel.asm	/^f0100c84:	85 c0                	test   %eax,%eax$/;"	l
f0100c86	obj/kern/kernel.asm	/^f0100c86:	75 07                	jne    f0100c8f <boot_alloc+0x2b>$/;"	l
f0100c88	obj/kern/kernel.asm	/^f0100c88:	a1 38 82 2b f0       	mov    0xf02b8238,%eax$/;"	l
f0100c8d	obj/kern/kernel.asm	/^f0100c8d:	eb 72                	jmp    f0100d01 <boot_alloc+0x9d>$/;"	l
f0100c8f	obj/kern/kernel.asm	/^f0100c8f:	8b 0d 38 82 2b f0    	mov    0xf02b8238,%ecx$/;"	l
f0100c95	obj/kern/kernel.asm	/^f0100c95:	8d 14 01             	lea    (%ecx,%eax,1),%edx$/;"	l
f0100c98	obj/kern/kernel.asm	/^f0100c98:	81 fa ff ff ff ef    	cmp    $0xefffffff,%edx$/;"	l
f0100c9e	obj/kern/kernel.asm	/^f0100c9e:	77 20                	ja     f0100cc0 <boot_alloc+0x5c>$/;"	l
f0100ca0	obj/kern/kernel.asm	/^f0100ca0:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0100ca4	obj/kern/kernel.asm	/^f0100ca4:	c7 44 24 08 68 7a 10 	movl   $0xf0107a68,0x8(%esp)$/;"	l
f0100cab	obj/kern/kernel.asm	/^f0100cab:	f0 $/;"	l
f0100cac	obj/kern/kernel.asm	/^f0100cac:	c7 44 24 04 69 00 00 	movl   $0x69,0x4(%esp)$/;"	l
f0100cb3	obj/kern/kernel.asm	/^f0100cb3:	00 $/;"	l
f0100cb4	obj/kern/kernel.asm	/^f0100cb4:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0100cbb	obj/kern/kernel.asm	/^f0100cbb:	e8 80 f3 ff ff       	call   f0100040 <_panic>$/;"	l
f0100cc0	obj/kern/kernel.asm	/^f0100cc0:	8d 82 00 00 00 10    	lea    0x10000000(%edx),%eax$/;"	l
f0100cc6	obj/kern/kernel.asm	/^f0100cc6:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0100cc9	obj/kern/kernel.asm	/^f0100cc9:	3b 05 94 8e 2b f0    	cmp    0xf02b8e94,%eax$/;"	l
f0100ccf	obj/kern/kernel.asm	/^f0100ccf:	76 1c                	jbe    f0100ced <boot_alloc+0x89>$/;"	l
f0100cd1	obj/kern/kernel.asm	/^f0100cd1:	c7 44 24 08 b7 89 10 	movl   $0xf01089b7,0x8(%esp)$/;"	l
f0100cd8	obj/kern/kernel.asm	/^f0100cd8:	f0 $/;"	l
f0100cd9	obj/kern/kernel.asm	/^f0100cd9:	c7 44 24 04 6a 00 00 	movl   $0x6a,0x4(%esp)$/;"	l
f0100ce0	obj/kern/kernel.asm	/^f0100ce0:	00 $/;"	l
f0100ce1	obj/kern/kernel.asm	/^f0100ce1:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0100ce8	obj/kern/kernel.asm	/^f0100ce8:	e8 53 f3 ff ff       	call   f0100040 <_panic>$/;"	l
f0100ced	obj/kern/kernel.asm	/^f0100ced:	81 c2 ff 0f 00 00    	add    $0xfff,%edx$/;"	l
f0100cf3	obj/kern/kernel.asm	/^f0100cf3:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0100cf9	obj/kern/kernel.asm	/^f0100cf9:	89 15 38 82 2b f0    	mov    %edx,0xf02b8238$/;"	l
f0100cff	obj/kern/kernel.asm	/^f0100cff:	89 c8                	mov    %ecx,%eax$/;"	l
f0100d01	obj/kern/kernel.asm	/^f0100d01:	c9                   	leave  $/;"	l
f0100d02	obj/kern/kernel.asm	/^f0100d02:	c3                   	ret    $/;"	l
f0100d03	obj/kern/kernel.asm	/^f0100d03 <check_page_free_list>:$/;"	l
f0100d03	obj/kern/kernel.asm	/^f0100d03:	55                   	push   %ebp$/;"	l
f0100d04	obj/kern/kernel.asm	/^f0100d04:	89 e5                	mov    %esp,%ebp$/;"	l
f0100d06	obj/kern/kernel.asm	/^f0100d06:	57                   	push   %edi$/;"	l
f0100d07	obj/kern/kernel.asm	/^f0100d07:	56                   	push   %esi$/;"	l
f0100d08	obj/kern/kernel.asm	/^f0100d08:	53                   	push   %ebx$/;"	l
f0100d09	obj/kern/kernel.asm	/^f0100d09:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f0100d0c	obj/kern/kernel.asm	/^f0100d0c:	84 c0                	test   %al,%al$/;"	l
f0100d0e	obj/kern/kernel.asm	/^f0100d0e:	0f 85 31 03 00 00    	jne    f0101045 <check_page_free_list+0x342>$/;"	l
f0100d14	obj/kern/kernel.asm	/^f0100d14:	e9 3e 03 00 00       	jmp    f0101057 <check_page_free_list+0x354>$/;"	l
f0100d19	obj/kern/kernel.asm	/^f0100d19:	c7 44 24 08 44 80 10 	movl   $0xf0108044,0x8(%esp)$/;"	l
f0100d20	obj/kern/kernel.asm	/^f0100d20:	f0 $/;"	l
f0100d21	obj/kern/kernel.asm	/^f0100d21:	c7 44 24 04 b1 02 00 	movl   $0x2b1,0x4(%esp)$/;"	l
f0100d28	obj/kern/kernel.asm	/^f0100d28:	00 $/;"	l
f0100d29	obj/kern/kernel.asm	/^f0100d29:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0100d30	obj/kern/kernel.asm	/^f0100d30:	e8 0b f3 ff ff       	call   f0100040 <_panic>$/;"	l
f0100d35	obj/kern/kernel.asm	/^f0100d35:	8d 55 d8             	lea    -0x28(%ebp),%edx$/;"	l
f0100d38	obj/kern/kernel.asm	/^f0100d38:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f0100d3b	obj/kern/kernel.asm	/^f0100d3b:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f0100d3e	obj/kern/kernel.asm	/^f0100d3e:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0100d41	obj/kern/kernel.asm	/^f0100d41:	89 c2                	mov    %eax,%edx$/;"	l
f0100d43	obj/kern/kernel.asm	/^f0100d43:	2b 15 9c 8e 2b f0    	sub    0xf02b8e9c,%edx$/;"	l
f0100d49	obj/kern/kernel.asm	/^f0100d49:	f7 c2 00 e0 7f 00    	test   $0x7fe000,%edx$/;"	l
f0100d4f	obj/kern/kernel.asm	/^f0100d4f:	0f 95 c2             	setne  %dl$/;"	l
f0100d52	obj/kern/kernel.asm	/^f0100d52:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0100d55	obj/kern/kernel.asm	/^f0100d55:	8b 4c 95 e0          	mov    -0x20(%ebp,%edx,4),%ecx$/;"	l
f0100d59	obj/kern/kernel.asm	/^f0100d59:	89 01                	mov    %eax,(%ecx)$/;"	l
f0100d5b	obj/kern/kernel.asm	/^f0100d5b:	89 44 95 e0          	mov    %eax,-0x20(%ebp,%edx,4)$/;"	l
f0100d5f	obj/kern/kernel.asm	/^f0100d5f:	8b 00                	mov    (%eax),%eax$/;"	l
f0100d61	obj/kern/kernel.asm	/^f0100d61:	85 c0                	test   %eax,%eax$/;"	l
f0100d63	obj/kern/kernel.asm	/^f0100d63:	75 dc                	jne    f0100d41 <check_page_free_list+0x3e>$/;"	l
f0100d65	obj/kern/kernel.asm	/^f0100d65:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0100d68	obj/kern/kernel.asm	/^f0100d68:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0100d6e	obj/kern/kernel.asm	/^f0100d6e:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0100d71	obj/kern/kernel.asm	/^f0100d71:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0100d74	obj/kern/kernel.asm	/^f0100d74:	89 10                	mov    %edx,(%eax)$/;"	l
f0100d76	obj/kern/kernel.asm	/^f0100d76:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0100d79	obj/kern/kernel.asm	/^f0100d79:	a3 40 82 2b f0       	mov    %eax,0xf02b8240$/;"	l
f0100d7e	obj/kern/kernel.asm	/^f0100d7e:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
f0100d83	obj/kern/kernel.asm	/^f0100d83:	8b 1d 40 82 2b f0    	mov    0xf02b8240,%ebx$/;"	l
f0100d89	obj/kern/kernel.asm	/^f0100d89:	eb 63                	jmp    f0100dee <check_page_free_list+0xeb>$/;"	l
f0100d8b	obj/kern/kernel.asm	/^f0100d8b:	89 d8                	mov    %ebx,%eax$/;"	l
f0100d8d	obj/kern/kernel.asm	/^f0100d8d:	2b 05 9c 8e 2b f0    	sub    0xf02b8e9c,%eax$/;"	l
f0100d93	obj/kern/kernel.asm	/^f0100d93:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100d96	obj/kern/kernel.asm	/^f0100d96:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100d99	obj/kern/kernel.asm	/^f0100d99:	89 c2                	mov    %eax,%edx$/;"	l
f0100d9b	obj/kern/kernel.asm	/^f0100d9b:	c1 ea 16             	shr    $0x16,%edx$/;"	l
f0100d9e	obj/kern/kernel.asm	/^f0100d9e:	39 f2                	cmp    %esi,%edx$/;"	l
f0100da0	obj/kern/kernel.asm	/^f0100da0:	73 4a                	jae    f0100dec <check_page_free_list+0xe9>$/;"	l
f0100da2	obj/kern/kernel.asm	/^f0100da2:	89 c2                	mov    %eax,%edx$/;"	l
f0100da4	obj/kern/kernel.asm	/^f0100da4:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100da7	obj/kern/kernel.asm	/^f0100da7:	3b 15 94 8e 2b f0    	cmp    0xf02b8e94,%edx$/;"	l
f0100dad	obj/kern/kernel.asm	/^f0100dad:	72 20                	jb     f0100dcf <check_page_free_list+0xcc>$/;"	l
f0100daf	obj/kern/kernel.asm	/^f0100daf:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100db3	obj/kern/kernel.asm	/^f0100db3:	c7 44 24 08 44 7a 10 	movl   $0xf0107a44,0x8(%esp)$/;"	l
f0100dba	obj/kern/kernel.asm	/^f0100dba:	f0 $/;"	l
f0100dbb	obj/kern/kernel.asm	/^f0100dbb:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0100dc2	obj/kern/kernel.asm	/^f0100dc2:	00 $/;"	l
f0100dc3	obj/kern/kernel.asm	/^f0100dc3:	c7 04 24 9d 89 10 f0 	movl   $0xf010899d,(%esp)$/;"	l
f0100dca	obj/kern/kernel.asm	/^f0100dca:	e8 71 f2 ff ff       	call   f0100040 <_panic>$/;"	l
f0100dcf	obj/kern/kernel.asm	/^f0100dcf:	c7 44 24 08 80 00 00 	movl   $0x80,0x8(%esp)$/;"	l
f0100dd6	obj/kern/kernel.asm	/^f0100dd6:	00 $/;"	l
f0100dd7	obj/kern/kernel.asm	/^f0100dd7:	c7 44 24 04 97 00 00 	movl   $0x97,0x4(%esp)$/;"	l
f0100dde	obj/kern/kernel.asm	/^f0100dde:	00 $/;"	l
f0100ddf	obj/kern/kernel.asm	/^f0100ddf:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0100de4	obj/kern/kernel.asm	/^f0100de4:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100de7	obj/kern/kernel.asm	/^f0100de7:	e8 3b 56 00 00       	call   f0106427 <memset>$/;"	l
f0100dec	obj/kern/kernel.asm	/^f0100dec:	8b 1b                	mov    (%ebx),%ebx$/;"	l
f0100dee	obj/kern/kernel.asm	/^f0100dee:	85 db                	test   %ebx,%ebx$/;"	l
f0100df0	obj/kern/kernel.asm	/^f0100df0:	75 99                	jne    f0100d8b <check_page_free_list+0x88>$/;"	l
f0100df2	obj/kern/kernel.asm	/^f0100df2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100df7	obj/kern/kernel.asm	/^f0100df7:	e8 68 fe ff ff       	call   f0100c64 <boot_alloc>$/;"	l
f0100dfc	obj/kern/kernel.asm	/^f0100dfc:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f0100dff	obj/kern/kernel.asm	/^f0100dff:	8b 15 40 82 2b f0    	mov    0xf02b8240,%edx$/;"	l
f0100e05	obj/kern/kernel.asm	/^f0100e05:	8b 0d 9c 8e 2b f0    	mov    0xf02b8e9c,%ecx$/;"	l
f0100e0b	obj/kern/kernel.asm	/^f0100e0b:	a1 94 8e 2b f0       	mov    0xf02b8e94,%eax$/;"	l
f0100e10	obj/kern/kernel.asm	/^f0100e10:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f0100e13	obj/kern/kernel.asm	/^f0100e13:	8d 04 c1             	lea    (%ecx,%eax,8),%eax$/;"	l
f0100e16	obj/kern/kernel.asm	/^f0100e16:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0100e19	obj/kern/kernel.asm	/^f0100e19:	89 4d cc             	mov    %ecx,-0x34(%ebp)$/;"	l
f0100e1c	obj/kern/kernel.asm	/^f0100e1c:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0100e21	obj/kern/kernel.asm	/^f0100e21:	89 4d d4             	mov    %ecx,-0x2c(%ebp)$/;"	l
f0100e24	obj/kern/kernel.asm	/^f0100e24:	e9 c4 01 00 00       	jmp    f0100fed <check_page_free_list+0x2ea>$/;"	l
f0100e29	obj/kern/kernel.asm	/^f0100e29:	3b 55 d4             	cmp    -0x2c(%ebp),%edx$/;"	l
f0100e2c	obj/kern/kernel.asm	/^f0100e2c:	73 24                	jae    f0100e52 <check_page_free_list+0x14f>$/;"	l
f0100e2e	obj/kern/kernel.asm	/^f0100e2e:	c7 44 24 0c c7 89 10 	movl   $0xf01089c7,0xc(%esp)$/;"	l
f0100e35	obj/kern/kernel.asm	/^f0100e35:	f0 $/;"	l
f0100e36	obj/kern/kernel.asm	/^f0100e36:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f0100e3d	obj/kern/kernel.asm	/^f0100e3d:	f0 $/;"	l
f0100e3e	obj/kern/kernel.asm	/^f0100e3e:	c7 44 24 04 cb 02 00 	movl   $0x2cb,0x4(%esp)$/;"	l
f0100e45	obj/kern/kernel.asm	/^f0100e45:	00 $/;"	l
f0100e46	obj/kern/kernel.asm	/^f0100e46:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0100e4d	obj/kern/kernel.asm	/^f0100e4d:	e8 ee f1 ff ff       	call   f0100040 <_panic>$/;"	l
f0100e52	obj/kern/kernel.asm	/^f0100e52:	3b 55 d0             	cmp    -0x30(%ebp),%edx$/;"	l
f0100e55	obj/kern/kernel.asm	/^f0100e55:	72 24                	jb     f0100e7b <check_page_free_list+0x178>$/;"	l
f0100e57	obj/kern/kernel.asm	/^f0100e57:	c7 44 24 0c e8 89 10 	movl   $0xf01089e8,0xc(%esp)$/;"	l
f0100e5e	obj/kern/kernel.asm	/^f0100e5e:	f0 $/;"	l
f0100e5f	obj/kern/kernel.asm	/^f0100e5f:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f0100e66	obj/kern/kernel.asm	/^f0100e66:	f0 $/;"	l
f0100e67	obj/kern/kernel.asm	/^f0100e67:	c7 44 24 04 cc 02 00 	movl   $0x2cc,0x4(%esp)$/;"	l
f0100e6e	obj/kern/kernel.asm	/^f0100e6e:	00 $/;"	l
f0100e6f	obj/kern/kernel.asm	/^f0100e6f:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0100e76	obj/kern/kernel.asm	/^f0100e76:	e8 c5 f1 ff ff       	call   f0100040 <_panic>$/;"	l
f0100e7b	obj/kern/kernel.asm	/^f0100e7b:	89 d0                	mov    %edx,%eax$/;"	l
f0100e7d	obj/kern/kernel.asm	/^f0100e7d:	2b 45 cc             	sub    -0x34(%ebp),%eax$/;"	l
f0100e80	obj/kern/kernel.asm	/^f0100e80:	a8 07                	test   $0x7,%al$/;"	l
f0100e82	obj/kern/kernel.asm	/^f0100e82:	74 24                	je     f0100ea8 <check_page_free_list+0x1a5>$/;"	l
f0100e84	obj/kern/kernel.asm	/^f0100e84:	c7 44 24 0c 68 80 10 	movl   $0xf0108068,0xc(%esp)$/;"	l
f0100e8b	obj/kern/kernel.asm	/^f0100e8b:	f0 $/;"	l
f0100e8c	obj/kern/kernel.asm	/^f0100e8c:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f0100e93	obj/kern/kernel.asm	/^f0100e93:	f0 $/;"	l
f0100e94	obj/kern/kernel.asm	/^f0100e94:	c7 44 24 04 cd 02 00 	movl   $0x2cd,0x4(%esp)$/;"	l
f0100e9b	obj/kern/kernel.asm	/^f0100e9b:	00 $/;"	l
f0100e9c	obj/kern/kernel.asm	/^f0100e9c:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0100ea3	obj/kern/kernel.asm	/^f0100ea3:	e8 98 f1 ff ff       	call   f0100040 <_panic>$/;"	l
f0100ea8	obj/kern/kernel.asm	/^f0100ea8:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100eab	obj/kern/kernel.asm	/^f0100eab:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100eae	obj/kern/kernel.asm	/^f0100eae:	85 c0                	test   %eax,%eax$/;"	l
f0100eb0	obj/kern/kernel.asm	/^f0100eb0:	75 24                	jne    f0100ed6 <check_page_free_list+0x1d3>$/;"	l
f0100eb2	obj/kern/kernel.asm	/^f0100eb2:	c7 44 24 0c fc 89 10 	movl   $0xf01089fc,0xc(%esp)$/;"	l
f0100eb9	obj/kern/kernel.asm	/^f0100eb9:	f0 $/;"	l
f0100eba	obj/kern/kernel.asm	/^f0100eba:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f0100ec1	obj/kern/kernel.asm	/^f0100ec1:	f0 $/;"	l
f0100ec2	obj/kern/kernel.asm	/^f0100ec2:	c7 44 24 04 d0 02 00 	movl   $0x2d0,0x4(%esp)$/;"	l
f0100ec9	obj/kern/kernel.asm	/^f0100ec9:	00 $/;"	l
f0100eca	obj/kern/kernel.asm	/^f0100eca:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0100ed1	obj/kern/kernel.asm	/^f0100ed1:	e8 6a f1 ff ff       	call   f0100040 <_panic>$/;"	l
f0100ed6	obj/kern/kernel.asm	/^f0100ed6:	3d 00 00 0a 00       	cmp    $0xa0000,%eax$/;"	l
f0100edb	obj/kern/kernel.asm	/^f0100edb:	75 24                	jne    f0100f01 <check_page_free_list+0x1fe>$/;"	l
f0100edd	obj/kern/kernel.asm	/^f0100edd:	c7 44 24 0c 0d 8a 10 	movl   $0xf0108a0d,0xc(%esp)$/;"	l
f0100ee4	obj/kern/kernel.asm	/^f0100ee4:	f0 $/;"	l
f0100ee5	obj/kern/kernel.asm	/^f0100ee5:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f0100eec	obj/kern/kernel.asm	/^f0100eec:	f0 $/;"	l
f0100eed	obj/kern/kernel.asm	/^f0100eed:	c7 44 24 04 d1 02 00 	movl   $0x2d1,0x4(%esp)$/;"	l
f0100ef4	obj/kern/kernel.asm	/^f0100ef4:	00 $/;"	l
f0100ef5	obj/kern/kernel.asm	/^f0100ef5:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0100efc	obj/kern/kernel.asm	/^f0100efc:	e8 3f f1 ff ff       	call   f0100040 <_panic>$/;"	l
f0100f01	obj/kern/kernel.asm	/^f0100f01:	3d 00 f0 0f 00       	cmp    $0xff000,%eax$/;"	l
f0100f06	obj/kern/kernel.asm	/^f0100f06:	75 24                	jne    f0100f2c <check_page_free_list+0x229>$/;"	l
f0100f08	obj/kern/kernel.asm	/^f0100f08:	c7 44 24 0c 9c 80 10 	movl   $0xf010809c,0xc(%esp)$/;"	l
f0100f0f	obj/kern/kernel.asm	/^f0100f0f:	f0 $/;"	l
f0100f10	obj/kern/kernel.asm	/^f0100f10:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f0100f17	obj/kern/kernel.asm	/^f0100f17:	f0 $/;"	l
f0100f18	obj/kern/kernel.asm	/^f0100f18:	c7 44 24 04 d2 02 00 	movl   $0x2d2,0x4(%esp)$/;"	l
f0100f1f	obj/kern/kernel.asm	/^f0100f1f:	00 $/;"	l
f0100f20	obj/kern/kernel.asm	/^f0100f20:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0100f27	obj/kern/kernel.asm	/^f0100f27:	e8 14 f1 ff ff       	call   f0100040 <_panic>$/;"	l
f0100f2c	obj/kern/kernel.asm	/^f0100f2c:	3d 00 00 10 00       	cmp    $0x100000,%eax$/;"	l
f0100f31	obj/kern/kernel.asm	/^f0100f31:	75 24                	jne    f0100f57 <check_page_free_list+0x254>$/;"	l
f0100f33	obj/kern/kernel.asm	/^f0100f33:	c7 44 24 0c 26 8a 10 	movl   $0xf0108a26,0xc(%esp)$/;"	l
f0100f3a	obj/kern/kernel.asm	/^f0100f3a:	f0 $/;"	l
f0100f3b	obj/kern/kernel.asm	/^f0100f3b:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f0100f42	obj/kern/kernel.asm	/^f0100f42:	f0 $/;"	l
f0100f43	obj/kern/kernel.asm	/^f0100f43:	c7 44 24 04 d3 02 00 	movl   $0x2d3,0x4(%esp)$/;"	l
f0100f4a	obj/kern/kernel.asm	/^f0100f4a:	00 $/;"	l
f0100f4b	obj/kern/kernel.asm	/^f0100f4b:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0100f52	obj/kern/kernel.asm	/^f0100f52:	e8 e9 f0 ff ff       	call   f0100040 <_panic>$/;"	l
f0100f57	obj/kern/kernel.asm	/^f0100f57:	3d ff ff 0f 00       	cmp    $0xfffff,%eax$/;"	l
f0100f5c	obj/kern/kernel.asm	/^f0100f5c:	0f 86 1c 01 00 00    	jbe    f010107e <check_page_free_list+0x37b>$/;"	l
f0100f62	obj/kern/kernel.asm	/^f0100f62:	89 c1                	mov    %eax,%ecx$/;"	l
f0100f64	obj/kern/kernel.asm	/^f0100f64:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0100f67	obj/kern/kernel.asm	/^f0100f67:	39 4d c4             	cmp    %ecx,-0x3c(%ebp)$/;"	l
f0100f6a	obj/kern/kernel.asm	/^f0100f6a:	77 20                	ja     f0100f8c <check_page_free_list+0x289>$/;"	l
f0100f6c	obj/kern/kernel.asm	/^f0100f6c:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100f70	obj/kern/kernel.asm	/^f0100f70:	c7 44 24 08 44 7a 10 	movl   $0xf0107a44,0x8(%esp)$/;"	l
f0100f77	obj/kern/kernel.asm	/^f0100f77:	f0 $/;"	l
f0100f78	obj/kern/kernel.asm	/^f0100f78:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0100f7f	obj/kern/kernel.asm	/^f0100f7f:	00 $/;"	l
f0100f80	obj/kern/kernel.asm	/^f0100f80:	c7 04 24 9d 89 10 f0 	movl   $0xf010899d,(%esp)$/;"	l
f0100f87	obj/kern/kernel.asm	/^f0100f87:	e8 b4 f0 ff ff       	call   f0100040 <_panic>$/;"	l
f0100f8c	obj/kern/kernel.asm	/^f0100f8c:	8d 88 00 00 00 f0    	lea    -0x10000000(%eax),%ecx$/;"	l
f0100f92	obj/kern/kernel.asm	/^f0100f92:	39 4d c8             	cmp    %ecx,-0x38(%ebp)$/;"	l
f0100f95	obj/kern/kernel.asm	/^f0100f95:	0f 86 d3 00 00 00    	jbe    f010106e <check_page_free_list+0x36b>$/;"	l
f0100f9b	obj/kern/kernel.asm	/^f0100f9b:	c7 44 24 0c c0 80 10 	movl   $0xf01080c0,0xc(%esp)$/;"	l
f0100fa2	obj/kern/kernel.asm	/^f0100fa2:	f0 $/;"	l
f0100fa3	obj/kern/kernel.asm	/^f0100fa3:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f0100faa	obj/kern/kernel.asm	/^f0100faa:	f0 $/;"	l
f0100fab	obj/kern/kernel.asm	/^f0100fab:	c7 44 24 04 d4 02 00 	movl   $0x2d4,0x4(%esp)$/;"	l
f0100fb2	obj/kern/kernel.asm	/^f0100fb2:	00 $/;"	l
f0100fb3	obj/kern/kernel.asm	/^f0100fb3:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0100fba	obj/kern/kernel.asm	/^f0100fba:	e8 81 f0 ff ff       	call   f0100040 <_panic>$/;"	l
f0100fbf	obj/kern/kernel.asm	/^f0100fbf:	c7 44 24 0c 40 8a 10 	movl   $0xf0108a40,0xc(%esp)$/;"	l
f0100fc6	obj/kern/kernel.asm	/^f0100fc6:	f0 $/;"	l
f0100fc7	obj/kern/kernel.asm	/^f0100fc7:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f0100fce	obj/kern/kernel.asm	/^f0100fce:	f0 $/;"	l
f0100fcf	obj/kern/kernel.asm	/^f0100fcf:	c7 44 24 04 d6 02 00 	movl   $0x2d6,0x4(%esp)$/;"	l
f0100fd6	obj/kern/kernel.asm	/^f0100fd6:	00 $/;"	l
f0100fd7	obj/kern/kernel.asm	/^f0100fd7:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0100fde	obj/kern/kernel.asm	/^f0100fde:	e8 5d f0 ff ff       	call   f0100040 <_panic>$/;"	l
f0100fe3	obj/kern/kernel.asm	/^f0100fe3:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100fe6	obj/kern/kernel.asm	/^f0100fe6:	eb 03                	jmp    f0100feb <check_page_free_list+0x2e8>$/;"	l
f0100fe8	obj/kern/kernel.asm	/^f0100fe8:	83 c7 01             	add    $0x1,%edi$/;"	l
f0100feb	obj/kern/kernel.asm	/^f0100feb:	8b 12                	mov    (%edx),%edx$/;"	l
f0100fed	obj/kern/kernel.asm	/^f0100fed:	85 d2                	test   %edx,%edx$/;"	l
f0100fef	obj/kern/kernel.asm	/^f0100fef:	0f 85 34 fe ff ff    	jne    f0100e29 <check_page_free_list+0x126>$/;"	l
f0100ff5	obj/kern/kernel.asm	/^f0100ff5:	85 db                	test   %ebx,%ebx$/;"	l
f0100ff7	obj/kern/kernel.asm	/^f0100ff7:	7f 24                	jg     f010101d <check_page_free_list+0x31a>$/;"	l
f0100ff9	obj/kern/kernel.asm	/^f0100ff9:	c7 44 24 0c 5d 8a 10 	movl   $0xf0108a5d,0xc(%esp)$/;"	l
f0101000	obj/kern/kernel.asm	/^f0101000:	f0 $/;"	l
f0101001	obj/kern/kernel.asm	/^f0101001:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f0101008	obj/kern/kernel.asm	/^f0101008:	f0 $/;"	l
f0101009	obj/kern/kernel.asm	/^f0101009:	c7 44 24 04 de 02 00 	movl   $0x2de,0x4(%esp)$/;"	l
f0101010	obj/kern/kernel.asm	/^f0101010:	00 $/;"	l
f0101011	obj/kern/kernel.asm	/^f0101011:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0101018	obj/kern/kernel.asm	/^f0101018:	e8 23 f0 ff ff       	call   f0100040 <_panic>$/;"	l
f010101d	obj/kern/kernel.asm	/^f010101d:	85 ff                	test   %edi,%edi$/;"	l
f010101f	obj/kern/kernel.asm	/^f010101f:	7f 6d                	jg     f010108e <check_page_free_list+0x38b>$/;"	l
f0101021	obj/kern/kernel.asm	/^f0101021:	c7 44 24 0c 6f 8a 10 	movl   $0xf0108a6f,0xc(%esp)$/;"	l
f0101028	obj/kern/kernel.asm	/^f0101028:	f0 $/;"	l
f0101029	obj/kern/kernel.asm	/^f0101029:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f0101030	obj/kern/kernel.asm	/^f0101030:	f0 $/;"	l
f0101031	obj/kern/kernel.asm	/^f0101031:	c7 44 24 04 df 02 00 	movl   $0x2df,0x4(%esp)$/;"	l
f0101038	obj/kern/kernel.asm	/^f0101038:	00 $/;"	l
f0101039	obj/kern/kernel.asm	/^f0101039:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0101040	obj/kern/kernel.asm	/^f0101040:	e8 fb ef ff ff       	call   f0100040 <_panic>$/;"	l
f0101045	obj/kern/kernel.asm	/^f0101045:	a1 40 82 2b f0       	mov    0xf02b8240,%eax$/;"	l
f010104a	obj/kern/kernel.asm	/^f010104a:	85 c0                	test   %eax,%eax$/;"	l
f010104c	obj/kern/kernel.asm	/^f010104c:	0f 85 e3 fc ff ff    	jne    f0100d35 <check_page_free_list+0x32>$/;"	l
f0101052	obj/kern/kernel.asm	/^f0101052:	e9 c2 fc ff ff       	jmp    f0100d19 <check_page_free_list+0x16>$/;"	l
f0101057	obj/kern/kernel.asm	/^f0101057:	83 3d 40 82 2b f0 00 	cmpl   $0x0,0xf02b8240$/;"	l
f010105e	obj/kern/kernel.asm	/^f010105e:	0f 84 b5 fc ff ff    	je     f0100d19 <check_page_free_list+0x16>$/;"	l
f0101064	obj/kern/kernel.asm	/^f0101064:	be 00 04 00 00       	mov    $0x400,%esi$/;"	l
f0101069	obj/kern/kernel.asm	/^f0101069:	e9 15 fd ff ff       	jmp    f0100d83 <check_page_free_list+0x80>$/;"	l
f010106e	obj/kern/kernel.asm	/^f010106e:	3d 00 70 00 00       	cmp    $0x7000,%eax$/;"	l
f0101073	obj/kern/kernel.asm	/^f0101073:	0f 85 6f ff ff ff    	jne    f0100fe8 <check_page_free_list+0x2e5>$/;"	l
f0101079	obj/kern/kernel.asm	/^f0101079:	e9 41 ff ff ff       	jmp    f0100fbf <check_page_free_list+0x2bc>$/;"	l
f010107e	obj/kern/kernel.asm	/^f010107e:	3d 00 70 00 00       	cmp    $0x7000,%eax$/;"	l
f0101083	obj/kern/kernel.asm	/^f0101083:	0f 85 5a ff ff ff    	jne    f0100fe3 <check_page_free_list+0x2e0>$/;"	l
f0101089	obj/kern/kernel.asm	/^f0101089:	e9 31 ff ff ff       	jmp    f0100fbf <check_page_free_list+0x2bc>$/;"	l
f010108e	obj/kern/kernel.asm	/^f010108e:	83 c4 4c             	add    $0x4c,%esp$/;"	l
f0101091	obj/kern/kernel.asm	/^f0101091:	5b                   	pop    %ebx$/;"	l
f0101092	obj/kern/kernel.asm	/^f0101092:	5e                   	pop    %esi$/;"	l
f0101093	obj/kern/kernel.asm	/^f0101093:	5f                   	pop    %edi$/;"	l
f0101094	obj/kern/kernel.asm	/^f0101094:	5d                   	pop    %ebp$/;"	l
f0101095	obj/kern/kernel.asm	/^f0101095:	c3                   	ret    $/;"	l
f0101096	obj/kern/kernel.asm	/^f0101096 <page_init>:$/;"	l
f0101096	obj/kern/kernel.asm	/^f0101096:	55                   	push   %ebp$/;"	l
f0101097	obj/kern/kernel.asm	/^f0101097:	89 e5                	mov    %esp,%ebp$/;"	l
f0101099	obj/kern/kernel.asm	/^f0101099:	56                   	push   %esi$/;"	l
f010109a	obj/kern/kernel.asm	/^f010109a:	53                   	push   %ebx$/;"	l
f010109b	obj/kern/kernel.asm	/^f010109b:	83 ec 10             	sub    $0x10,%esp$/;"	l
f010109e	obj/kern/kernel.asm	/^f010109e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01010a3	obj/kern/kernel.asm	/^f01010a3:	e8 bc fb ff ff       	call   f0100c64 <boot_alloc>$/;"	l
f01010a8	obj/kern/kernel.asm	/^f01010a8:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01010ad	obj/kern/kernel.asm	/^f01010ad:	77 20                	ja     f01010cf <page_init+0x39>$/;"	l
f01010af	obj/kern/kernel.asm	/^f01010af:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01010b3	obj/kern/kernel.asm	/^f01010b3:	c7 44 24 08 68 7a 10 	movl   $0xf0107a68,0x8(%esp)$/;"	l
f01010ba	obj/kern/kernel.asm	/^f01010ba:	f0 $/;"	l
f01010bb	obj/kern/kernel.asm	/^f01010bb:	c7 44 24 04 44 01 00 	movl   $0x144,0x4(%esp)$/;"	l
f01010c2	obj/kern/kernel.asm	/^f01010c2:	00 $/;"	l
f01010c3	obj/kern/kernel.asm	/^f01010c3:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f01010ca	obj/kern/kernel.asm	/^f01010ca:	e8 71 ef ff ff       	call   f0100040 <_panic>$/;"	l
f01010cf	obj/kern/kernel.asm	/^f01010cf:	8d 98 00 00 00 10    	lea    0x10000000(%eax),%ebx$/;"	l
f01010d5	obj/kern/kernel.asm	/^f01010d5:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f01010d8	obj/kern/kernel.asm	/^f01010d8:	a1 94 8e 2b f0       	mov    0xf02b8e94,%eax$/;"	l
f01010dd	obj/kern/kernel.asm	/^f01010dd:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
f01010e0	obj/kern/kernel.asm	/^f01010e0:	8b 35 40 82 2b f0    	mov    0xf02b8240,%esi$/;"	l
f01010e6	obj/kern/kernel.asm	/^f01010e6:	8d 0c c5 f8 ff ff ff 	lea    -0x8(,%eax,8),%ecx$/;"	l
f01010ed	obj/kern/kernel.asm	/^f01010ed:	eb 3b                	jmp    f010112a <page_init+0x94>$/;"	l
f01010ef	obj/kern/kernel.asm	/^f01010ef:	89 c8                	mov    %ecx,%eax$/;"	l
f01010f1	obj/kern/kernel.asm	/^f01010f1:	03 05 9c 8e 2b f0    	add    0xf02b8e9c,%eax$/;"	l
f01010f7	obj/kern/kernel.asm	/^f01010f7:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f01010fd	obj/kern/kernel.asm	/^f01010fd:	85 d2                	test   %edx,%edx$/;"	l
f01010ff	obj/kern/kernel.asm	/^f01010ff:	74 11                	je     f0101112 <page_init+0x7c>$/;"	l
f0101101	obj/kern/kernel.asm	/^f0101101:	39 da                	cmp    %ebx,%edx$/;"	l
f0101103	obj/kern/kernel.asm	/^f0101103:	7d 08                	jge    f010110d <page_init+0x77>$/;"	l
f0101105	obj/kern/kernel.asm	/^f0101105:	81 fa 9f 00 00 00    	cmp    $0x9f,%edx$/;"	l
f010110b	obj/kern/kernel.asm	/^f010110b:	7f 05                	jg     f0101112 <page_init+0x7c>$/;"	l
f010110d	obj/kern/kernel.asm	/^f010110d:	83 fa 07             	cmp    $0x7,%edx$/;"	l
f0101110	obj/kern/kernel.asm	/^f0101110:	75 08                	jne    f010111a <page_init+0x84>$/;"	l
f0101112	obj/kern/kernel.asm	/^f0101112:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0101118	obj/kern/kernel.asm	/^f0101118:	eb 0a                	jmp    f0101124 <page_init+0x8e>$/;"	l
f010111a	obj/kern/kernel.asm	/^f010111a:	89 30                	mov    %esi,(%eax)$/;"	l
f010111c	obj/kern/kernel.asm	/^f010111c:	89 ce                	mov    %ecx,%esi$/;"	l
f010111e	obj/kern/kernel.asm	/^f010111e:	03 35 9c 8e 2b f0    	add    0xf02b8e9c,%esi$/;"	l
f0101124	obj/kern/kernel.asm	/^f0101124:	83 ea 01             	sub    $0x1,%edx$/;"	l
f0101127	obj/kern/kernel.asm	/^f0101127:	83 e9 08             	sub    $0x8,%ecx$/;"	l
f010112a	obj/kern/kernel.asm	/^f010112a:	85 d2                	test   %edx,%edx$/;"	l
f010112c	obj/kern/kernel.asm	/^f010112c:	79 c1                	jns    f01010ef <page_init+0x59>$/;"	l
f010112e	obj/kern/kernel.asm	/^f010112e:	89 35 40 82 2b f0    	mov    %esi,0xf02b8240$/;"	l
f0101134	obj/kern/kernel.asm	/^f0101134:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101137	obj/kern/kernel.asm	/^f0101137:	5b                   	pop    %ebx$/;"	l
f0101138	obj/kern/kernel.asm	/^f0101138:	5e                   	pop    %esi$/;"	l
f0101139	obj/kern/kernel.asm	/^f0101139:	5d                   	pop    %ebp$/;"	l
f010113a	obj/kern/kernel.asm	/^f010113a:	c3                   	ret    $/;"	l
f010113b	obj/kern/kernel.asm	/^f010113b <page_alloc>:$/;"	l
f010113b	obj/kern/kernel.asm	/^f010113b:	55                   	push   %ebp$/;"	l
f010113c	obj/kern/kernel.asm	/^f010113c:	89 e5                	mov    %esp,%ebp$/;"	l
f010113e	obj/kern/kernel.asm	/^f010113e:	53                   	push   %ebx$/;"	l
f010113f	obj/kern/kernel.asm	/^f010113f:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0101142	obj/kern/kernel.asm	/^f0101142:	8b 1d 40 82 2b f0    	mov    0xf02b8240,%ebx$/;"	l
f0101148	obj/kern/kernel.asm	/^f0101148:	85 db                	test   %ebx,%ebx$/;"	l
f010114a	obj/kern/kernel.asm	/^f010114a:	74 74                	je     f01011c0 <page_alloc+0x85>$/;"	l
f010114c	obj/kern/kernel.asm	/^f010114c:	89 d8                	mov    %ebx,%eax$/;"	l
f010114e	obj/kern/kernel.asm	/^f010114e:	2b 05 9c 8e 2b f0    	sub    0xf02b8e9c,%eax$/;"	l
f0101154	obj/kern/kernel.asm	/^f0101154:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101157	obj/kern/kernel.asm	/^f0101157:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010115a	obj/kern/kernel.asm	/^f010115a:	89 c2                	mov    %eax,%edx$/;"	l
f010115c	obj/kern/kernel.asm	/^f010115c:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f010115f	obj/kern/kernel.asm	/^f010115f:	3b 15 94 8e 2b f0    	cmp    0xf02b8e94,%edx$/;"	l
f0101165	obj/kern/kernel.asm	/^f0101165:	72 20                	jb     f0101187 <page_alloc+0x4c>$/;"	l
f0101167	obj/kern/kernel.asm	/^f0101167:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010116b	obj/kern/kernel.asm	/^f010116b:	c7 44 24 08 44 7a 10 	movl   $0xf0107a44,0x8(%esp)$/;"	l
f0101172	obj/kern/kernel.asm	/^f0101172:	f0 $/;"	l
f0101173	obj/kern/kernel.asm	/^f0101173:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f010117a	obj/kern/kernel.asm	/^f010117a:	00 $/;"	l
f010117b	obj/kern/kernel.asm	/^f010117b:	c7 04 24 9d 89 10 f0 	movl   $0xf010899d,(%esp)$/;"	l
f0101182	obj/kern/kernel.asm	/^f0101182:	e8 b9 ee ff ff       	call   f0100040 <_panic>$/;"	l
f0101187	obj/kern/kernel.asm	/^f0101187:	f6 45 08 01          	testb  $0x1,0x8(%ebp)$/;"	l
f010118b	obj/kern/kernel.asm	/^f010118b:	74 1d                	je     f01011aa <page_alloc+0x6f>$/;"	l
f010118d	obj/kern/kernel.asm	/^f010118d:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0101194	obj/kern/kernel.asm	/^f0101194:	00 $/;"	l
f0101195	obj/kern/kernel.asm	/^f0101195:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f010119c	obj/kern/kernel.asm	/^f010119c:	00 $/;"	l
f010119d	obj/kern/kernel.asm	/^f010119d:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f01011a2	obj/kern/kernel.asm	/^f01011a2:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01011a5	obj/kern/kernel.asm	/^f01011a5:	e8 7d 52 00 00       	call   f0106427 <memset>$/;"	l
f01011aa	obj/kern/kernel.asm	/^f01011aa:	a1 40 82 2b f0       	mov    0xf02b8240,%eax$/;"	l
f01011af	obj/kern/kernel.asm	/^f01011af:	8b 00                	mov    (%eax),%eax$/;"	l
f01011b1	obj/kern/kernel.asm	/^f01011b1:	a3 40 82 2b f0       	mov    %eax,0xf02b8240$/;"	l
f01011b6	obj/kern/kernel.asm	/^f01011b6:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)$/;"	l
f01011bc	obj/kern/kernel.asm	/^f01011bc:	89 d8                	mov    %ebx,%eax$/;"	l
f01011be	obj/kern/kernel.asm	/^f01011be:	eb 05                	jmp    f01011c5 <page_alloc+0x8a>$/;"	l
f01011c0	obj/kern/kernel.asm	/^f01011c0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01011c5	obj/kern/kernel.asm	/^f01011c5:	83 c4 14             	add    $0x14,%esp$/;"	l
f01011c8	obj/kern/kernel.asm	/^f01011c8:	5b                   	pop    %ebx$/;"	l
f01011c9	obj/kern/kernel.asm	/^f01011c9:	5d                   	pop    %ebp$/;"	l
f01011ca	obj/kern/kernel.asm	/^f01011ca:	c3                   	ret    $/;"	l
f01011cb	obj/kern/kernel.asm	/^f01011cb <page_free>:$/;"	l
f01011cb	obj/kern/kernel.asm	/^f01011cb:	55                   	push   %ebp$/;"	l
f01011cc	obj/kern/kernel.asm	/^f01011cc:	89 e5                	mov    %esp,%ebp$/;"	l
f01011ce	obj/kern/kernel.asm	/^f01011ce:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01011d1	obj/kern/kernel.asm	/^f01011d1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01011d4	obj/kern/kernel.asm	/^f01011d4:	66 83 78 04 00       	cmpw   $0x0,0x4(%eax)$/;"	l
f01011d9	obj/kern/kernel.asm	/^f01011d9:	74 1c                	je     f01011f7 <page_free+0x2c>$/;"	l
f01011db	obj/kern/kernel.asm	/^f01011db:	c7 44 24 08 08 81 10 	movl   $0xf0108108,0x8(%esp)$/;"	l
f01011e2	obj/kern/kernel.asm	/^f01011e2:	f0 $/;"	l
f01011e3	obj/kern/kernel.asm	/^f01011e3:	c7 44 24 04 7b 01 00 	movl   $0x17b,0x4(%esp)$/;"	l
f01011ea	obj/kern/kernel.asm	/^f01011ea:	00 $/;"	l
f01011eb	obj/kern/kernel.asm	/^f01011eb:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f01011f2	obj/kern/kernel.asm	/^f01011f2:	e8 49 ee ff ff       	call   f0100040 <_panic>$/;"	l
f01011f7	obj/kern/kernel.asm	/^f01011f7:	83 38 00             	cmpl   $0x0,(%eax)$/;"	l
f01011fa	obj/kern/kernel.asm	/^f01011fa:	74 1c                	je     f0101218 <page_free+0x4d>$/;"	l
f01011fc	obj/kern/kernel.asm	/^f01011fc:	c7 44 24 08 80 8a 10 	movl   $0xf0108a80,0x8(%esp)$/;"	l
f0101203	obj/kern/kernel.asm	/^f0101203:	f0 $/;"	l
f0101204	obj/kern/kernel.asm	/^f0101204:	c7 44 24 04 7c 01 00 	movl   $0x17c,0x4(%esp)$/;"	l
f010120b	obj/kern/kernel.asm	/^f010120b:	00 $/;"	l
f010120c	obj/kern/kernel.asm	/^f010120c:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0101213	obj/kern/kernel.asm	/^f0101213:	e8 28 ee ff ff       	call   f0100040 <_panic>$/;"	l
f0101218	obj/kern/kernel.asm	/^f0101218:	8b 15 40 82 2b f0    	mov    0xf02b8240,%edx$/;"	l
f010121e	obj/kern/kernel.asm	/^f010121e:	89 10                	mov    %edx,(%eax)$/;"	l
f0101220	obj/kern/kernel.asm	/^f0101220:	a3 40 82 2b f0       	mov    %eax,0xf02b8240$/;"	l
f0101225	obj/kern/kernel.asm	/^f0101225:	c9                   	leave  $/;"	l
f0101226	obj/kern/kernel.asm	/^f0101226:	c3                   	ret    $/;"	l
f0101227	obj/kern/kernel.asm	/^f0101227 <page_decref>:$/;"	l
f0101227	obj/kern/kernel.asm	/^f0101227:	55                   	push   %ebp$/;"	l
f0101228	obj/kern/kernel.asm	/^f0101228:	89 e5                	mov    %esp,%ebp$/;"	l
f010122a	obj/kern/kernel.asm	/^f010122a:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010122d	obj/kern/kernel.asm	/^f010122d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101230	obj/kern/kernel.asm	/^f0101230:	0f b7 48 04          	movzwl 0x4(%eax),%ecx$/;"	l
f0101234	obj/kern/kernel.asm	/^f0101234:	8d 51 ff             	lea    -0x1(%ecx),%edx$/;"	l
f0101237	obj/kern/kernel.asm	/^f0101237:	66 89 50 04          	mov    %dx,0x4(%eax)$/;"	l
f010123b	obj/kern/kernel.asm	/^f010123b:	66 85 d2             	test   %dx,%dx$/;"	l
f010123e	obj/kern/kernel.asm	/^f010123e:	75 08                	jne    f0101248 <page_decref+0x21>$/;"	l
f0101240	obj/kern/kernel.asm	/^f0101240:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101243	obj/kern/kernel.asm	/^f0101243:	e8 83 ff ff ff       	call   f01011cb <page_free>$/;"	l
f0101248	obj/kern/kernel.asm	/^f0101248:	c9                   	leave  $/;"	l
f0101249	obj/kern/kernel.asm	/^f0101249:	c3                   	ret    $/;"	l
f010124a	obj/kern/kernel.asm	/^f010124a <pgdir_walk>:$/;"	l
f010124a	obj/kern/kernel.asm	/^f010124a:	55                   	push   %ebp$/;"	l
f010124b	obj/kern/kernel.asm	/^f010124b:	89 e5                	mov    %esp,%ebp$/;"	l
f010124d	obj/kern/kernel.asm	/^f010124d:	56                   	push   %esi$/;"	l
f010124e	obj/kern/kernel.asm	/^f010124e:	53                   	push   %ebx$/;"	l
f010124f	obj/kern/kernel.asm	/^f010124f:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0101252	obj/kern/kernel.asm	/^f0101252:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0101255	obj/kern/kernel.asm	/^f0101255:	89 de                	mov    %ebx,%esi$/;"	l
f0101257	obj/kern/kernel.asm	/^f0101257:	c1 ee 16             	shr    $0x16,%esi$/;"	l
f010125a	obj/kern/kernel.asm	/^f010125a:	c1 e6 02             	shl    $0x2,%esi$/;"	l
f010125d	obj/kern/kernel.asm	/^f010125d:	03 75 08             	add    0x8(%ebp),%esi$/;"	l
f0101260	obj/kern/kernel.asm	/^f0101260:	8b 06                	mov    (%esi),%eax$/;"	l
f0101262	obj/kern/kernel.asm	/^f0101262:	a8 01                	test   $0x1,%al$/;"	l
f0101264	obj/kern/kernel.asm	/^f0101264:	74 44                	je     f01012aa <pgdir_walk+0x60>$/;"	l
f0101266	obj/kern/kernel.asm	/^f0101266:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f010126b	obj/kern/kernel.asm	/^f010126b:	c1 eb 0a             	shr    $0xa,%ebx$/;"	l
f010126e	obj/kern/kernel.asm	/^f010126e:	81 e3 fc 0f 00 00    	and    $0xffc,%ebx$/;"	l
f0101274	obj/kern/kernel.asm	/^f0101274:	01 d8                	add    %ebx,%eax$/;"	l
f0101276	obj/kern/kernel.asm	/^f0101276:	89 c2                	mov    %eax,%edx$/;"	l
f0101278	obj/kern/kernel.asm	/^f0101278:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f010127b	obj/kern/kernel.asm	/^f010127b:	3b 15 94 8e 2b f0    	cmp    0xf02b8e94,%edx$/;"	l
f0101281	obj/kern/kernel.asm	/^f0101281:	72 20                	jb     f01012a3 <pgdir_walk+0x59>$/;"	l
f0101283	obj/kern/kernel.asm	/^f0101283:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101287	obj/kern/kernel.asm	/^f0101287:	c7 44 24 08 44 7a 10 	movl   $0xf0107a44,0x8(%esp)$/;"	l
f010128e	obj/kern/kernel.asm	/^f010128e:	f0 $/;"	l
f010128f	obj/kern/kernel.asm	/^f010128f:	c7 44 24 04 a9 01 00 	movl   $0x1a9,0x4(%esp)$/;"	l
f0101296	obj/kern/kernel.asm	/^f0101296:	00 $/;"	l
f0101297	obj/kern/kernel.asm	/^f0101297:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f010129e	obj/kern/kernel.asm	/^f010129e:	e8 9d ed ff ff       	call   f0100040 <_panic>$/;"	l
f01012a3	obj/kern/kernel.asm	/^f01012a3:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f01012a8	obj/kern/kernel.asm	/^f01012a8:	eb 79                	jmp    f0101323 <pgdir_walk+0xd9>$/;"	l
f01012aa	obj/kern/kernel.asm	/^f01012aa:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
f01012ae	obj/kern/kernel.asm	/^f01012ae:	74 67                	je     f0101317 <pgdir_walk+0xcd>$/;"	l
f01012b0	obj/kern/kernel.asm	/^f01012b0:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f01012b7	obj/kern/kernel.asm	/^f01012b7:	e8 7f fe ff ff       	call   f010113b <page_alloc>$/;"	l
f01012bc	obj/kern/kernel.asm	/^f01012bc:	85 c0                	test   %eax,%eax$/;"	l
f01012be	obj/kern/kernel.asm	/^f01012be:	74 5e                	je     f010131e <pgdir_walk+0xd4>$/;"	l
f01012c0	obj/kern/kernel.asm	/^f01012c0:	66 83 40 04 01       	addw   $0x1,0x4(%eax)$/;"	l
f01012c5	obj/kern/kernel.asm	/^f01012c5:	2b 05 9c 8e 2b f0    	sub    0xf02b8e9c,%eax$/;"	l
f01012cb	obj/kern/kernel.asm	/^f01012cb:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01012ce	obj/kern/kernel.asm	/^f01012ce:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01012d1	obj/kern/kernel.asm	/^f01012d1:	89 c2                	mov    %eax,%edx$/;"	l
f01012d3	obj/kern/kernel.asm	/^f01012d3:	83 ca 07             	or     $0x7,%edx$/;"	l
f01012d6	obj/kern/kernel.asm	/^f01012d6:	89 16                	mov    %edx,(%esi)$/;"	l
f01012d8	obj/kern/kernel.asm	/^f01012d8:	c1 eb 0a             	shr    $0xa,%ebx$/;"	l
f01012db	obj/kern/kernel.asm	/^f01012db:	81 e3 fc 0f 00 00    	and    $0xffc,%ebx$/;"	l
f01012e1	obj/kern/kernel.asm	/^f01012e1:	01 d8                	add    %ebx,%eax$/;"	l
f01012e3	obj/kern/kernel.asm	/^f01012e3:	89 c2                	mov    %eax,%edx$/;"	l
f01012e5	obj/kern/kernel.asm	/^f01012e5:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01012e8	obj/kern/kernel.asm	/^f01012e8:	3b 15 94 8e 2b f0    	cmp    0xf02b8e94,%edx$/;"	l
f01012ee	obj/kern/kernel.asm	/^f01012ee:	72 20                	jb     f0101310 <pgdir_walk+0xc6>$/;"	l
f01012f0	obj/kern/kernel.asm	/^f01012f0:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01012f4	obj/kern/kernel.asm	/^f01012f4:	c7 44 24 08 44 7a 10 	movl   $0xf0107a44,0x8(%esp)$/;"	l
f01012fb	obj/kern/kernel.asm	/^f01012fb:	f0 $/;"	l
f01012fc	obj/kern/kernel.asm	/^f01012fc:	c7 44 24 04 b0 01 00 	movl   $0x1b0,0x4(%esp)$/;"	l
f0101303	obj/kern/kernel.asm	/^f0101303:	00 $/;"	l
f0101304	obj/kern/kernel.asm	/^f0101304:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f010130b	obj/kern/kernel.asm	/^f010130b:	e8 30 ed ff ff       	call   f0100040 <_panic>$/;"	l
f0101310	obj/kern/kernel.asm	/^f0101310:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0101315	obj/kern/kernel.asm	/^f0101315:	eb 0c                	jmp    f0101323 <pgdir_walk+0xd9>$/;"	l
f0101317	obj/kern/kernel.asm	/^f0101317:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010131c	obj/kern/kernel.asm	/^f010131c:	eb 05                	jmp    f0101323 <pgdir_walk+0xd9>$/;"	l
f010131e	obj/kern/kernel.asm	/^f010131e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101323	obj/kern/kernel.asm	/^f0101323:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101326	obj/kern/kernel.asm	/^f0101326:	5b                   	pop    %ebx$/;"	l
f0101327	obj/kern/kernel.asm	/^f0101327:	5e                   	pop    %esi$/;"	l
f0101328	obj/kern/kernel.asm	/^f0101328:	5d                   	pop    %ebp$/;"	l
f0101329	obj/kern/kernel.asm	/^f0101329:	c3                   	ret    $/;"	l
f010132a	obj/kern/kernel.asm	/^f010132a <boot_map_region>:$/;"	l
f010132a	obj/kern/kernel.asm	/^f010132a:	55                   	push   %ebp$/;"	l
f010132b	obj/kern/kernel.asm	/^f010132b:	89 e5                	mov    %esp,%ebp$/;"	l
f010132d	obj/kern/kernel.asm	/^f010132d:	57                   	push   %edi$/;"	l
f010132e	obj/kern/kernel.asm	/^f010132e:	56                   	push   %esi$/;"	l
f010132f	obj/kern/kernel.asm	/^f010132f:	53                   	push   %ebx$/;"	l
f0101330	obj/kern/kernel.asm	/^f0101330:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0101333	obj/kern/kernel.asm	/^f0101333:	89 c7                	mov    %eax,%edi$/;"	l
f0101335	obj/kern/kernel.asm	/^f0101335:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f0101338	obj/kern/kernel.asm	/^f0101338:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f010133b	obj/kern/kernel.asm	/^f010133b:	89 4d e4             	mov    %ecx,-0x1c(%ebp)$/;"	l
f010133e	obj/kern/kernel.asm	/^f010133e:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0101343	obj/kern/kernel.asm	/^f0101343:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101346	obj/kern/kernel.asm	/^f0101346:	83 c8 01             	or     $0x1,%eax$/;"	l
f0101349	obj/kern/kernel.asm	/^f0101349:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f010134c	obj/kern/kernel.asm	/^f010134c:	eb 29                	jmp    f0101377 <boot_map_region+0x4d>$/;"	l
f010134e	obj/kern/kernel.asm	/^f010134e:	89 de                	mov    %ebx,%esi$/;"	l
f0101350	obj/kern/kernel.asm	/^f0101350:	c1 e6 0c             	shl    $0xc,%esi$/;"	l
f0101353	obj/kern/kernel.asm	/^f0101353:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f010135a	obj/kern/kernel.asm	/^f010135a:	00 $/;"	l
f010135b	obj/kern/kernel.asm	/^f010135b:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f010135e	obj/kern/kernel.asm	/^f010135e:	01 f0                	add    %esi,%eax$/;"	l
f0101360	obj/kern/kernel.asm	/^f0101360:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101364	obj/kern/kernel.asm	/^f0101364:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0101367	obj/kern/kernel.asm	/^f0101367:	e8 de fe ff ff       	call   f010124a <pgdir_walk>$/;"	l
f010136c	obj/kern/kernel.asm	/^f010136c:	03 75 08             	add    0x8(%ebp),%esi$/;"	l
f010136f	obj/kern/kernel.asm	/^f010136f:	0b 75 dc             	or     -0x24(%ebp),%esi$/;"	l
f0101372	obj/kern/kernel.asm	/^f0101372:	89 30                	mov    %esi,(%eax)$/;"	l
f0101374	obj/kern/kernel.asm	/^f0101374:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0101377	obj/kern/kernel.asm	/^f0101377:	3b 5d e4             	cmp    -0x1c(%ebp),%ebx$/;"	l
f010137a	obj/kern/kernel.asm	/^f010137a:	7c d2                	jl     f010134e <boot_map_region+0x24>$/;"	l
f010137c	obj/kern/kernel.asm	/^f010137c:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f010137f	obj/kern/kernel.asm	/^f010137f:	5b                   	pop    %ebx$/;"	l
f0101380	obj/kern/kernel.asm	/^f0101380:	5e                   	pop    %esi$/;"	l
f0101381	obj/kern/kernel.asm	/^f0101381:	5f                   	pop    %edi$/;"	l
f0101382	obj/kern/kernel.asm	/^f0101382:	5d                   	pop    %ebp$/;"	l
f0101383	obj/kern/kernel.asm	/^f0101383:	c3                   	ret    $/;"	l
f0101384	obj/kern/kernel.asm	/^f0101384 <page_lookup>:$/;"	l
f0101384	obj/kern/kernel.asm	/^f0101384:	55                   	push   %ebp$/;"	l
f0101385	obj/kern/kernel.asm	/^f0101385:	89 e5                	mov    %esp,%ebp$/;"	l
f0101387	obj/kern/kernel.asm	/^f0101387:	53                   	push   %ebx$/;"	l
f0101388	obj/kern/kernel.asm	/^f0101388:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010138b	obj/kern/kernel.asm	/^f010138b:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f010138e	obj/kern/kernel.asm	/^f010138e:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0101395	obj/kern/kernel.asm	/^f0101395:	00 $/;"	l
f0101396	obj/kern/kernel.asm	/^f0101396:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101399	obj/kern/kernel.asm	/^f0101399:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010139d	obj/kern/kernel.asm	/^f010139d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01013a0	obj/kern/kernel.asm	/^f01013a0:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01013a3	obj/kern/kernel.asm	/^f01013a3:	e8 a2 fe ff ff       	call   f010124a <pgdir_walk>$/;"	l
f01013a8	obj/kern/kernel.asm	/^f01013a8:	85 c0                	test   %eax,%eax$/;"	l
f01013aa	obj/kern/kernel.asm	/^f01013aa:	74 3f                	je     f01013eb <page_lookup+0x67>$/;"	l
f01013ac	obj/kern/kernel.asm	/^f01013ac:	f6 00 01             	testb  $0x1,(%eax)$/;"	l
f01013af	obj/kern/kernel.asm	/^f01013af:	74 41                	je     f01013f2 <page_lookup+0x6e>$/;"	l
f01013b1	obj/kern/kernel.asm	/^f01013b1:	85 db                	test   %ebx,%ebx$/;"	l
f01013b3	obj/kern/kernel.asm	/^f01013b3:	74 02                	je     f01013b7 <page_lookup+0x33>$/;"	l
f01013b5	obj/kern/kernel.asm	/^f01013b5:	89 03                	mov    %eax,(%ebx)$/;"	l
f01013b7	obj/kern/kernel.asm	/^f01013b7:	8b 00                	mov    (%eax),%eax$/;"	l
f01013b9	obj/kern/kernel.asm	/^f01013b9:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f01013bc	obj/kern/kernel.asm	/^f01013bc:	3b 05 94 8e 2b f0    	cmp    0xf02b8e94,%eax$/;"	l
f01013c2	obj/kern/kernel.asm	/^f01013c2:	72 1c                	jb     f01013e0 <page_lookup+0x5c>$/;"	l
f01013c4	obj/kern/kernel.asm	/^f01013c4:	c7 44 24 08 30 81 10 	movl   $0xf0108130,0x8(%esp)$/;"	l
f01013cb	obj/kern/kernel.asm	/^f01013cb:	f0 $/;"	l
f01013cc	obj/kern/kernel.asm	/^f01013cc:	c7 44 24 04 51 00 00 	movl   $0x51,0x4(%esp)$/;"	l
f01013d3	obj/kern/kernel.asm	/^f01013d3:	00 $/;"	l
f01013d4	obj/kern/kernel.asm	/^f01013d4:	c7 04 24 9d 89 10 f0 	movl   $0xf010899d,(%esp)$/;"	l
f01013db	obj/kern/kernel.asm	/^f01013db:	e8 60 ec ff ff       	call   f0100040 <_panic>$/;"	l
f01013e0	obj/kern/kernel.asm	/^f01013e0:	8b 15 9c 8e 2b f0    	mov    0xf02b8e9c,%edx$/;"	l
f01013e6	obj/kern/kernel.asm	/^f01013e6:	8d 04 c2             	lea    (%edx,%eax,8),%eax$/;"	l
f01013e9	obj/kern/kernel.asm	/^f01013e9:	eb 0c                	jmp    f01013f7 <page_lookup+0x73>$/;"	l
f01013eb	obj/kern/kernel.asm	/^f01013eb:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01013f0	obj/kern/kernel.asm	/^f01013f0:	eb 05                	jmp    f01013f7 <page_lookup+0x73>$/;"	l
f01013f2	obj/kern/kernel.asm	/^f01013f2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01013f7	obj/kern/kernel.asm	/^f01013f7:	83 c4 14             	add    $0x14,%esp$/;"	l
f01013fa	obj/kern/kernel.asm	/^f01013fa:	5b                   	pop    %ebx$/;"	l
f01013fb	obj/kern/kernel.asm	/^f01013fb:	5d                   	pop    %ebp$/;"	l
f01013fc	obj/kern/kernel.asm	/^f01013fc:	c3                   	ret    $/;"	l
f01013fd	obj/kern/kernel.asm	/^f01013fd <tlb_invalidate>:$/;"	l
f01013fd	obj/kern/kernel.asm	/^f01013fd:	55                   	push   %ebp$/;"	l
f01013fe	obj/kern/kernel.asm	/^f01013fe:	89 e5                	mov    %esp,%ebp$/;"	l
f0101400	obj/kern/kernel.asm	/^f0101400:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101403	obj/kern/kernel.asm	/^f0101403:	e8 71 56 00 00       	call   f0106a79 <cpunum>$/;"	l
f0101408	obj/kern/kernel.asm	/^f0101408:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010140b	obj/kern/kernel.asm	/^f010140b:	83 b8 28 90 2b f0 00 	cmpl   $0x0,-0xfd46fd8(%eax)$/;"	l
f0101412	obj/kern/kernel.asm	/^f0101412:	74 16                	je     f010142a <tlb_invalidate+0x2d>$/;"	l
f0101414	obj/kern/kernel.asm	/^f0101414:	e8 60 56 00 00       	call   f0106a79 <cpunum>$/;"	l
f0101419	obj/kern/kernel.asm	/^f0101419:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010141c	obj/kern/kernel.asm	/^f010141c:	8b 80 28 90 2b f0    	mov    -0xfd46fd8(%eax),%eax$/;"	l
f0101422	obj/kern/kernel.asm	/^f0101422:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0101425	obj/kern/kernel.asm	/^f0101425:	39 50 60             	cmp    %edx,0x60(%eax)$/;"	l
f0101428	obj/kern/kernel.asm	/^f0101428:	75 06                	jne    f0101430 <tlb_invalidate+0x33>$/;"	l
f010142a	obj/kern/kernel.asm	/^f010142a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010142d	obj/kern/kernel.asm	/^f010142d:	0f 01 38             	invlpg (%eax)$/;"	l
f0101430	obj/kern/kernel.asm	/^f0101430:	c9                   	leave  $/;"	l
f0101431	obj/kern/kernel.asm	/^f0101431:	c3                   	ret    $/;"	l
f0101432	obj/kern/kernel.asm	/^f0101432 <page_remove>:$/;"	l
f0101432	obj/kern/kernel.asm	/^f0101432:	55                   	push   %ebp$/;"	l
f0101433	obj/kern/kernel.asm	/^f0101433:	89 e5                	mov    %esp,%ebp$/;"	l
f0101435	obj/kern/kernel.asm	/^f0101435:	56                   	push   %esi$/;"	l
f0101436	obj/kern/kernel.asm	/^f0101436:	53                   	push   %ebx$/;"	l
f0101437	obj/kern/kernel.asm	/^f0101437:	83 ec 20             	sub    $0x20,%esp$/;"	l
f010143a	obj/kern/kernel.asm	/^f010143a:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f010143d	obj/kern/kernel.asm	/^f010143d:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0101440	obj/kern/kernel.asm	/^f0101440:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0101443	obj/kern/kernel.asm	/^f0101443:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0101447	obj/kern/kernel.asm	/^f0101447:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f010144b	obj/kern/kernel.asm	/^f010144b:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010144e	obj/kern/kernel.asm	/^f010144e:	e8 31 ff ff ff       	call   f0101384 <page_lookup>$/;"	l
f0101453	obj/kern/kernel.asm	/^f0101453:	85 c0                	test   %eax,%eax$/;"	l
f0101455	obj/kern/kernel.asm	/^f0101455:	74 1d                	je     f0101474 <page_remove+0x42>$/;"	l
f0101457	obj/kern/kernel.asm	/^f0101457:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f010145a	obj/kern/kernel.asm	/^f010145a:	c7 02 00 00 00 00    	movl   $0x0,(%edx)$/;"	l
f0101460	obj/kern/kernel.asm	/^f0101460:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101463	obj/kern/kernel.asm	/^f0101463:	e8 bf fd ff ff       	call   f0101227 <page_decref>$/;"	l
f0101468	obj/kern/kernel.asm	/^f0101468:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f010146c	obj/kern/kernel.asm	/^f010146c:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010146f	obj/kern/kernel.asm	/^f010146f:	e8 89 ff ff ff       	call   f01013fd <tlb_invalidate>$/;"	l
f0101474	obj/kern/kernel.asm	/^f0101474:	83 c4 20             	add    $0x20,%esp$/;"	l
f0101477	obj/kern/kernel.asm	/^f0101477:	5b                   	pop    %ebx$/;"	l
f0101478	obj/kern/kernel.asm	/^f0101478:	5e                   	pop    %esi$/;"	l
f0101479	obj/kern/kernel.asm	/^f0101479:	5d                   	pop    %ebp$/;"	l
f010147a	obj/kern/kernel.asm	/^f010147a:	c3                   	ret    $/;"	l
f010147b	obj/kern/kernel.asm	/^f010147b <page_insert>:$/;"	l
f010147b	obj/kern/kernel.asm	/^f010147b:	55                   	push   %ebp$/;"	l
f010147c	obj/kern/kernel.asm	/^f010147c:	89 e5                	mov    %esp,%ebp$/;"	l
f010147e	obj/kern/kernel.asm	/^f010147e:	57                   	push   %edi$/;"	l
f010147f	obj/kern/kernel.asm	/^f010147f:	56                   	push   %esi$/;"	l
f0101480	obj/kern/kernel.asm	/^f0101480:	53                   	push   %ebx$/;"	l
f0101481	obj/kern/kernel.asm	/^f0101481:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0101484	obj/kern/kernel.asm	/^f0101484:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0101487	obj/kern/kernel.asm	/^f0101487:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f010148a	obj/kern/kernel.asm	/^f010148a:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0101491	obj/kern/kernel.asm	/^f0101491:	00 $/;"	l
f0101492	obj/kern/kernel.asm	/^f0101492:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0101496	obj/kern/kernel.asm	/^f0101496:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101499	obj/kern/kernel.asm	/^f0101499:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010149c	obj/kern/kernel.asm	/^f010149c:	e8 a9 fd ff ff       	call   f010124a <pgdir_walk>$/;"	l
f01014a1	obj/kern/kernel.asm	/^f01014a1:	89 c3                	mov    %eax,%ebx$/;"	l
f01014a3	obj/kern/kernel.asm	/^f01014a3:	85 c0                	test   %eax,%eax$/;"	l
f01014a5	obj/kern/kernel.asm	/^f01014a5:	74 61                	je     f0101508 <page_insert+0x8d>$/;"	l
f01014a7	obj/kern/kernel.asm	/^f01014a7:	8b 00                	mov    (%eax),%eax$/;"	l
f01014a9	obj/kern/kernel.asm	/^f01014a9:	a8 01                	test   $0x1,%al$/;"	l
f01014ab	obj/kern/kernel.asm	/^f01014ab:	74 37                	je     f01014e4 <page_insert+0x69>$/;"	l
f01014ad	obj/kern/kernel.asm	/^f01014ad:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01014b2	obj/kern/kernel.asm	/^f01014b2:	89 f2                	mov    %esi,%edx$/;"	l
f01014b4	obj/kern/kernel.asm	/^f01014b4:	2b 15 9c 8e 2b f0    	sub    0xf02b8e9c,%edx$/;"	l
f01014ba	obj/kern/kernel.asm	/^f01014ba:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01014bd	obj/kern/kernel.asm	/^f01014bd:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01014c0	obj/kern/kernel.asm	/^f01014c0:	39 d0                	cmp    %edx,%eax$/;"	l
f01014c2	obj/kern/kernel.asm	/^f01014c2:	75 11                	jne    f01014d5 <page_insert+0x5a>$/;"	l
f01014c4	obj/kern/kernel.asm	/^f01014c4:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
f01014c7	obj/kern/kernel.asm	/^f01014c7:	83 ca 01             	or     $0x1,%edx$/;"	l
f01014ca	obj/kern/kernel.asm	/^f01014ca:	09 d0                	or     %edx,%eax$/;"	l
f01014cc	obj/kern/kernel.asm	/^f01014cc:	89 03                	mov    %eax,(%ebx)$/;"	l
f01014ce	obj/kern/kernel.asm	/^f01014ce:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01014d3	obj/kern/kernel.asm	/^f01014d3:	eb 38                	jmp    f010150d <page_insert+0x92>$/;"	l
f01014d5	obj/kern/kernel.asm	/^f01014d5:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01014d9	obj/kern/kernel.asm	/^f01014d9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01014dc	obj/kern/kernel.asm	/^f01014dc:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01014df	obj/kern/kernel.asm	/^f01014df:	e8 4e ff ff ff       	call   f0101432 <page_remove>$/;"	l
f01014e4	obj/kern/kernel.asm	/^f01014e4:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
f01014e7	obj/kern/kernel.asm	/^f01014e7:	83 ca 01             	or     $0x1,%edx$/;"	l
f01014ea	obj/kern/kernel.asm	/^f01014ea:	89 f0                	mov    %esi,%eax$/;"	l
f01014ec	obj/kern/kernel.asm	/^f01014ec:	2b 05 9c 8e 2b f0    	sub    0xf02b8e9c,%eax$/;"	l
f01014f2	obj/kern/kernel.asm	/^f01014f2:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01014f5	obj/kern/kernel.asm	/^f01014f5:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01014f8	obj/kern/kernel.asm	/^f01014f8:	09 d0                	or     %edx,%eax$/;"	l
f01014fa	obj/kern/kernel.asm	/^f01014fa:	89 03                	mov    %eax,(%ebx)$/;"	l
f01014fc	obj/kern/kernel.asm	/^f01014fc:	66 83 46 04 01       	addw   $0x1,0x4(%esi)$/;"	l
f0101501	obj/kern/kernel.asm	/^f0101501:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101506	obj/kern/kernel.asm	/^f0101506:	eb 05                	jmp    f010150d <page_insert+0x92>$/;"	l
f0101508	obj/kern/kernel.asm	/^f0101508:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f010150d	obj/kern/kernel.asm	/^f010150d:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0101510	obj/kern/kernel.asm	/^f0101510:	5b                   	pop    %ebx$/;"	l
f0101511	obj/kern/kernel.asm	/^f0101511:	5e                   	pop    %esi$/;"	l
f0101512	obj/kern/kernel.asm	/^f0101512:	5f                   	pop    %edi$/;"	l
f0101513	obj/kern/kernel.asm	/^f0101513:	5d                   	pop    %ebp$/;"	l
f0101514	obj/kern/kernel.asm	/^f0101514:	c3                   	ret    $/;"	l
f0101515	obj/kern/kernel.asm	/^f0101515 <mmio_map_region>:$/;"	l
f0101515	obj/kern/kernel.asm	/^f0101515:	55                   	push   %ebp$/;"	l
f0101516	obj/kern/kernel.asm	/^f0101516:	89 e5                	mov    %esp,%ebp$/;"	l
f0101518	obj/kern/kernel.asm	/^f0101518:	56                   	push   %esi$/;"	l
f0101519	obj/kern/kernel.asm	/^f0101519:	53                   	push   %ebx$/;"	l
f010151a	obj/kern/kernel.asm	/^f010151a:	83 ec 10             	sub    $0x10,%esp$/;"	l
f010151d	obj/kern/kernel.asm	/^f010151d:	8b 1d 00 43 12 f0    	mov    0xf0124300,%ebx$/;"	l
f0101523	obj/kern/kernel.asm	/^f0101523:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101526	obj/kern/kernel.asm	/^f0101526:	8d b0 ff 0f 00 00    	lea    0xfff(%eax),%esi$/;"	l
f010152c	obj/kern/kernel.asm	/^f010152c:	81 e6 00 f0 ff ff    	and    $0xfffff000,%esi$/;"	l
f0101532	obj/kern/kernel.asm	/^f0101532:	8d 04 1e             	lea    (%esi,%ebx,1),%eax$/;"	l
f0101535	obj/kern/kernel.asm	/^f0101535:	3d 00 00 c0 ef       	cmp    $0xefc00000,%eax$/;"	l
f010153a	obj/kern/kernel.asm	/^f010153a:	76 1c                	jbe    f0101558 <mmio_map_region+0x43>$/;"	l
f010153c	obj/kern/kernel.asm	/^f010153c:	c7 44 24 08 50 81 10 	movl   $0xf0108150,0x8(%esp)$/;"	l
f0101543	obj/kern/kernel.asm	/^f0101543:	f0 $/;"	l
f0101544	obj/kern/kernel.asm	/^f0101544:	c7 44 24 04 5d 02 00 	movl   $0x25d,0x4(%esp)$/;"	l
f010154b	obj/kern/kernel.asm	/^f010154b:	00 $/;"	l
f010154c	obj/kern/kernel.asm	/^f010154c:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0101553	obj/kern/kernel.asm	/^f0101553:	e8 e8 ea ff ff       	call   f0100040 <_panic>$/;"	l
f0101558	obj/kern/kernel.asm	/^f0101558:	c7 44 24 04 1a 00 00 	movl   $0x1a,0x4(%esp)$/;"	l
f010155f	obj/kern/kernel.asm	/^f010155f:	00 $/;"	l
f0101560	obj/kern/kernel.asm	/^f0101560:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101563	obj/kern/kernel.asm	/^f0101563:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101566	obj/kern/kernel.asm	/^f0101566:	89 f1                	mov    %esi,%ecx$/;"	l
f0101568	obj/kern/kernel.asm	/^f0101568:	89 da                	mov    %ebx,%edx$/;"	l
f010156a	obj/kern/kernel.asm	/^f010156a:	a1 98 8e 2b f0       	mov    0xf02b8e98,%eax$/;"	l
f010156f	obj/kern/kernel.asm	/^f010156f:	e8 b6 fd ff ff       	call   f010132a <boot_map_region>$/;"	l
f0101574	obj/kern/kernel.asm	/^f0101574:	01 35 00 43 12 f0    	add    %esi,0xf0124300$/;"	l
f010157a	obj/kern/kernel.asm	/^f010157a:	89 d8                	mov    %ebx,%eax$/;"	l
f010157c	obj/kern/kernel.asm	/^f010157c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010157f	obj/kern/kernel.asm	/^f010157f:	5b                   	pop    %ebx$/;"	l
f0101580	obj/kern/kernel.asm	/^f0101580:	5e                   	pop    %esi$/;"	l
f0101581	obj/kern/kernel.asm	/^f0101581:	5d                   	pop    %ebp$/;"	l
f0101582	obj/kern/kernel.asm	/^f0101582:	c3                   	ret    $/;"	l
f0101583	obj/kern/kernel.asm	/^f0101583 <mem_init>:$/;"	l
f0101583	obj/kern/kernel.asm	/^f0101583:	55                   	push   %ebp$/;"	l
f0101584	obj/kern/kernel.asm	/^f0101584:	89 e5                	mov    %esp,%ebp$/;"	l
f0101586	obj/kern/kernel.asm	/^f0101586:	57                   	push   %edi$/;"	l
f0101587	obj/kern/kernel.asm	/^f0101587:	56                   	push   %esi$/;"	l
f0101588	obj/kern/kernel.asm	/^f0101588:	53                   	push   %ebx$/;"	l
f0101589	obj/kern/kernel.asm	/^f0101589:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f010158c	obj/kern/kernel.asm	/^f010158c:	c7 04 24 15 00 00 00 	movl   $0x15,(%esp)$/;"	l
f0101593	obj/kern/kernel.asm	/^f0101593:	e8 d8 28 00 00       	call   f0103e70 <mc146818_read>$/;"	l
f0101598	obj/kern/kernel.asm	/^f0101598:	89 c3                	mov    %eax,%ebx$/;"	l
f010159a	obj/kern/kernel.asm	/^f010159a:	c7 04 24 16 00 00 00 	movl   $0x16,(%esp)$/;"	l
f01015a1	obj/kern/kernel.asm	/^f01015a1:	e8 ca 28 00 00       	call   f0103e70 <mc146818_read>$/;"	l
f01015a6	obj/kern/kernel.asm	/^f01015a6:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f01015a9	obj/kern/kernel.asm	/^f01015a9:	09 c3                	or     %eax,%ebx$/;"	l
f01015ab	obj/kern/kernel.asm	/^f01015ab:	89 d8                	mov    %ebx,%eax$/;"	l
f01015ad	obj/kern/kernel.asm	/^f01015ad:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f01015b0	obj/kern/kernel.asm	/^f01015b0:	8d 90 ff 0f 00 00    	lea    0xfff(%eax),%edx$/;"	l
f01015b6	obj/kern/kernel.asm	/^f01015b6:	85 c0                	test   %eax,%eax$/;"	l
f01015b8	obj/kern/kernel.asm	/^f01015b8:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
f01015bb	obj/kern/kernel.asm	/^f01015bb:	c1 f8 0c             	sar    $0xc,%eax$/;"	l
f01015be	obj/kern/kernel.asm	/^f01015be:	a3 44 82 2b f0       	mov    %eax,0xf02b8244$/;"	l
f01015c3	obj/kern/kernel.asm	/^f01015c3:	c7 04 24 17 00 00 00 	movl   $0x17,(%esp)$/;"	l
f01015ca	obj/kern/kernel.asm	/^f01015ca:	e8 a1 28 00 00       	call   f0103e70 <mc146818_read>$/;"	l
f01015cf	obj/kern/kernel.asm	/^f01015cf:	89 c3                	mov    %eax,%ebx$/;"	l
f01015d1	obj/kern/kernel.asm	/^f01015d1:	c7 04 24 18 00 00 00 	movl   $0x18,(%esp)$/;"	l
f01015d8	obj/kern/kernel.asm	/^f01015d8:	e8 93 28 00 00       	call   f0103e70 <mc146818_read>$/;"	l
f01015dd	obj/kern/kernel.asm	/^f01015dd:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f01015e0	obj/kern/kernel.asm	/^f01015e0:	09 c3                	or     %eax,%ebx$/;"	l
f01015e2	obj/kern/kernel.asm	/^f01015e2:	89 d8                	mov    %ebx,%eax$/;"	l
f01015e4	obj/kern/kernel.asm	/^f01015e4:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f01015e7	obj/kern/kernel.asm	/^f01015e7:	8d 90 ff 0f 00 00    	lea    0xfff(%eax),%edx$/;"	l
f01015ed	obj/kern/kernel.asm	/^f01015ed:	85 c0                	test   %eax,%eax$/;"	l
f01015ef	obj/kern/kernel.asm	/^f01015ef:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
f01015f2	obj/kern/kernel.asm	/^f01015f2:	c1 f8 0c             	sar    $0xc,%eax$/;"	l
f01015f5	obj/kern/kernel.asm	/^f01015f5:	85 c0                	test   %eax,%eax$/;"	l
f01015f7	obj/kern/kernel.asm	/^f01015f7:	74 0e                	je     f0101607 <mem_init+0x84>$/;"	l
f01015f9	obj/kern/kernel.asm	/^f01015f9:	8d 90 00 01 00 00    	lea    0x100(%eax),%edx$/;"	l
f01015ff	obj/kern/kernel.asm	/^f01015ff:	89 15 94 8e 2b f0    	mov    %edx,0xf02b8e94$/;"	l
f0101605	obj/kern/kernel.asm	/^f0101605:	eb 0c                	jmp    f0101613 <mem_init+0x90>$/;"	l
f0101607	obj/kern/kernel.asm	/^f0101607:	8b 15 44 82 2b f0    	mov    0xf02b8244,%edx$/;"	l
f010160d	obj/kern/kernel.asm	/^f010160d:	89 15 94 8e 2b f0    	mov    %edx,0xf02b8e94$/;"	l
f0101613	obj/kern/kernel.asm	/^f0101613:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101616	obj/kern/kernel.asm	/^f0101616:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f0101619	obj/kern/kernel.asm	/^f0101619:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010161d	obj/kern/kernel.asm	/^f010161d:	a1 44 82 2b f0       	mov    0xf02b8244,%eax$/;"	l
f0101622	obj/kern/kernel.asm	/^f0101622:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101625	obj/kern/kernel.asm	/^f0101625:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f0101628	obj/kern/kernel.asm	/^f0101628:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010162c	obj/kern/kernel.asm	/^f010162c:	a1 94 8e 2b f0       	mov    0xf02b8e94,%eax$/;"	l
f0101631	obj/kern/kernel.asm	/^f0101631:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101634	obj/kern/kernel.asm	/^f0101634:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f0101637	obj/kern/kernel.asm	/^f0101637:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010163b	obj/kern/kernel.asm	/^f010163b:	c7 04 24 84 81 10 f0 	movl   $0xf0108184,(%esp)$/;"	l
f0101642	obj/kern/kernel.asm	/^f0101642:	e8 a5 29 00 00       	call   f0103fec <cprintf>$/;"	l
f0101647	obj/kern/kernel.asm	/^f0101647:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
f010164c	obj/kern/kernel.asm	/^f010164c:	e8 13 f6 ff ff       	call   f0100c64 <boot_alloc>$/;"	l
f0101651	obj/kern/kernel.asm	/^f0101651:	a3 98 8e 2b f0       	mov    %eax,0xf02b8e98$/;"	l
f0101656	obj/kern/kernel.asm	/^f0101656:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f010165d	obj/kern/kernel.asm	/^f010165d:	00 $/;"	l
f010165e	obj/kern/kernel.asm	/^f010165e:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0101665	obj/kern/kernel.asm	/^f0101665:	00 $/;"	l
f0101666	obj/kern/kernel.asm	/^f0101666:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101669	obj/kern/kernel.asm	/^f0101669:	e8 b9 4d 00 00       	call   f0106427 <memset>$/;"	l
f010166e	obj/kern/kernel.asm	/^f010166e:	a1 98 8e 2b f0       	mov    0xf02b8e98,%eax$/;"	l
f0101673	obj/kern/kernel.asm	/^f0101673:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0101678	obj/kern/kernel.asm	/^f0101678:	77 20                	ja     f010169a <mem_init+0x117>$/;"	l
f010167a	obj/kern/kernel.asm	/^f010167a:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010167e	obj/kern/kernel.asm	/^f010167e:	c7 44 24 08 68 7a 10 	movl   $0xf0107a68,0x8(%esp)$/;"	l
f0101685	obj/kern/kernel.asm	/^f0101685:	f0 $/;"	l
f0101686	obj/kern/kernel.asm	/^f0101686:	c7 44 24 04 95 00 00 	movl   $0x95,0x4(%esp)$/;"	l
f010168d	obj/kern/kernel.asm	/^f010168d:	00 $/;"	l
f010168e	obj/kern/kernel.asm	/^f010168e:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0101695	obj/kern/kernel.asm	/^f0101695:	e8 a6 e9 ff ff       	call   f0100040 <_panic>$/;"	l
f010169a	obj/kern/kernel.asm	/^f010169a:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f01016a0	obj/kern/kernel.asm	/^f01016a0:	83 ca 05             	or     $0x5,%edx$/;"	l
f01016a3	obj/kern/kernel.asm	/^f01016a3:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
f01016a9	obj/kern/kernel.asm	/^f01016a9:	a1 94 8e 2b f0       	mov    0xf02b8e94,%eax$/;"	l
f01016ae	obj/kern/kernel.asm	/^f01016ae:	c1 e0 03             	shl    $0x3,%eax$/;"	l
f01016b1	obj/kern/kernel.asm	/^f01016b1:	e8 ae f5 ff ff       	call   f0100c64 <boot_alloc>$/;"	l
f01016b6	obj/kern/kernel.asm	/^f01016b6:	a3 9c 8e 2b f0       	mov    %eax,0xf02b8e9c$/;"	l
f01016bb	obj/kern/kernel.asm	/^f01016bb:	85 c0                	test   %eax,%eax$/;"	l
f01016bd	obj/kern/kernel.asm	/^f01016bd:	74 21                	je     f01016e0 <mem_init+0x15d>$/;"	l
f01016bf	obj/kern/kernel.asm	/^f01016bf:	8b 0d 94 8e 2b f0    	mov    0xf02b8e94,%ecx$/;"	l
f01016c5	obj/kern/kernel.asm	/^f01016c5:	8d 14 cd 00 00 00 00 	lea    0x0(,%ecx,8),%edx$/;"	l
f01016cc	obj/kern/kernel.asm	/^f01016cc:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f01016d0	obj/kern/kernel.asm	/^f01016d0:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01016d7	obj/kern/kernel.asm	/^f01016d7:	00 $/;"	l
f01016d8	obj/kern/kernel.asm	/^f01016d8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01016db	obj/kern/kernel.asm	/^f01016db:	e8 47 4d 00 00       	call   f0106427 <memset>$/;"	l
f01016e0	obj/kern/kernel.asm	/^f01016e0:	b8 00 f0 01 00       	mov    $0x1f000,%eax$/;"	l
f01016e5	obj/kern/kernel.asm	/^f01016e5:	e8 7a f5 ff ff       	call   f0100c64 <boot_alloc>$/;"	l
f01016ea	obj/kern/kernel.asm	/^f01016ea:	a3 48 82 2b f0       	mov    %eax,0xf02b8248$/;"	l
f01016ef	obj/kern/kernel.asm	/^f01016ef:	85 c0                	test   %eax,%eax$/;"	l
f01016f1	obj/kern/kernel.asm	/^f01016f1:	74 18                	je     f010170b <mem_init+0x188>$/;"	l
f01016f3	obj/kern/kernel.asm	/^f01016f3:	c7 44 24 08 00 f0 01 	movl   $0x1f000,0x8(%esp)$/;"	l
f01016fa	obj/kern/kernel.asm	/^f01016fa:	00 $/;"	l
f01016fb	obj/kern/kernel.asm	/^f01016fb:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0101702	obj/kern/kernel.asm	/^f0101702:	00 $/;"	l
f0101703	obj/kern/kernel.asm	/^f0101703:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101706	obj/kern/kernel.asm	/^f0101706:	e8 1c 4d 00 00       	call   f0106427 <memset>$/;"	l
f010170b	obj/kern/kernel.asm	/^f010170b:	e8 86 f9 ff ff       	call   f0101096 <page_init>$/;"	l
f0101710	obj/kern/kernel.asm	/^f0101710:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0101715	obj/kern/kernel.asm	/^f0101715:	e8 e9 f5 ff ff       	call   f0100d03 <check_page_free_list>$/;"	l
f010171a	obj/kern/kernel.asm	/^f010171a:	83 3d 9c 8e 2b f0 00 	cmpl   $0x0,0xf02b8e9c$/;"	l
f0101721	obj/kern/kernel.asm	/^f0101721:	75 1c                	jne    f010173f <mem_init+0x1bc>$/;"	l
f0101723	obj/kern/kernel.asm	/^f0101723:	c7 44 24 08 8e 8a 10 	movl   $0xf0108a8e,0x8(%esp)$/;"	l
f010172a	obj/kern/kernel.asm	/^f010172a:	f0 $/;"	l
f010172b	obj/kern/kernel.asm	/^f010172b:	c7 44 24 04 f0 02 00 	movl   $0x2f0,0x4(%esp)$/;"	l
f0101732	obj/kern/kernel.asm	/^f0101732:	00 $/;"	l
f0101733	obj/kern/kernel.asm	/^f0101733:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f010173a	obj/kern/kernel.asm	/^f010173a:	e8 01 e9 ff ff       	call   f0100040 <_panic>$/;"	l
f010173f	obj/kern/kernel.asm	/^f010173f:	a1 40 82 2b f0       	mov    0xf02b8240,%eax$/;"	l
f0101744	obj/kern/kernel.asm	/^f0101744:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0101749	obj/kern/kernel.asm	/^f0101749:	eb 05                	jmp    f0101750 <mem_init+0x1cd>$/;"	l
f010174b	obj/kern/kernel.asm	/^f010174b:	83 c3 01             	add    $0x1,%ebx$/;"	l
f010174e	obj/kern/kernel.asm	/^f010174e:	8b 00                	mov    (%eax),%eax$/;"	l
f0101750	obj/kern/kernel.asm	/^f0101750:	85 c0                	test   %eax,%eax$/;"	l
f0101752	obj/kern/kernel.asm	/^f0101752:	75 f7                	jne    f010174b <mem_init+0x1c8>$/;"	l
f0101754	obj/kern/kernel.asm	/^f0101754:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010175b	obj/kern/kernel.asm	/^f010175b:	e8 db f9 ff ff       	call   f010113b <page_alloc>$/;"	l
f0101760	obj/kern/kernel.asm	/^f0101760:	89 c7                	mov    %eax,%edi$/;"	l
f0101762	obj/kern/kernel.asm	/^f0101762:	85 c0                	test   %eax,%eax$/;"	l
f0101764	obj/kern/kernel.asm	/^f0101764:	75 24                	jne    f010178a <mem_init+0x207>$/;"	l
f0101766	obj/kern/kernel.asm	/^f0101766:	c7 44 24 0c a9 8a 10 	movl   $0xf0108aa9,0xc(%esp)$/;"	l
f010176d	obj/kern/kernel.asm	/^f010176d:	f0 $/;"	l
f010176e	obj/kern/kernel.asm	/^f010176e:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f0101775	obj/kern/kernel.asm	/^f0101775:	f0 $/;"	l
f0101776	obj/kern/kernel.asm	/^f0101776:	c7 44 24 04 f8 02 00 	movl   $0x2f8,0x4(%esp)$/;"	l
f010177d	obj/kern/kernel.asm	/^f010177d:	00 $/;"	l
f010177e	obj/kern/kernel.asm	/^f010177e:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0101785	obj/kern/kernel.asm	/^f0101785:	e8 b6 e8 ff ff       	call   f0100040 <_panic>$/;"	l
f010178a	obj/kern/kernel.asm	/^f010178a:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101791	obj/kern/kernel.asm	/^f0101791:	e8 a5 f9 ff ff       	call   f010113b <page_alloc>$/;"	l
f0101796	obj/kern/kernel.asm	/^f0101796:	89 c6                	mov    %eax,%esi$/;"	l
f0101798	obj/kern/kernel.asm	/^f0101798:	85 c0                	test   %eax,%eax$/;"	l
f010179a	obj/kern/kernel.asm	/^f010179a:	75 24                	jne    f01017c0 <mem_init+0x23d>$/;"	l
f010179c	obj/kern/kernel.asm	/^f010179c:	c7 44 24 0c bf 8a 10 	movl   $0xf0108abf,0xc(%esp)$/;"	l
f01017a3	obj/kern/kernel.asm	/^f01017a3:	f0 $/;"	l
f01017a4	obj/kern/kernel.asm	/^f01017a4:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f01017ab	obj/kern/kernel.asm	/^f01017ab:	f0 $/;"	l
f01017ac	obj/kern/kernel.asm	/^f01017ac:	c7 44 24 04 f9 02 00 	movl   $0x2f9,0x4(%esp)$/;"	l
f01017b3	obj/kern/kernel.asm	/^f01017b3:	00 $/;"	l
f01017b4	obj/kern/kernel.asm	/^f01017b4:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f01017bb	obj/kern/kernel.asm	/^f01017bb:	e8 80 e8 ff ff       	call   f0100040 <_panic>$/;"	l
f01017c0	obj/kern/kernel.asm	/^f01017c0:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01017c7	obj/kern/kernel.asm	/^f01017c7:	e8 6f f9 ff ff       	call   f010113b <page_alloc>$/;"	l
f01017cc	obj/kern/kernel.asm	/^f01017cc:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01017cf	obj/kern/kernel.asm	/^f01017cf:	85 c0                	test   %eax,%eax$/;"	l
f01017d1	obj/kern/kernel.asm	/^f01017d1:	75 24                	jne    f01017f7 <mem_init+0x274>$/;"	l
f01017d3	obj/kern/kernel.asm	/^f01017d3:	c7 44 24 0c d5 8a 10 	movl   $0xf0108ad5,0xc(%esp)$/;"	l
f01017da	obj/kern/kernel.asm	/^f01017da:	f0 $/;"	l
f01017db	obj/kern/kernel.asm	/^f01017db:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f01017e2	obj/kern/kernel.asm	/^f01017e2:	f0 $/;"	l
f01017e3	obj/kern/kernel.asm	/^f01017e3:	c7 44 24 04 fa 02 00 	movl   $0x2fa,0x4(%esp)$/;"	l
f01017ea	obj/kern/kernel.asm	/^f01017ea:	00 $/;"	l
f01017eb	obj/kern/kernel.asm	/^f01017eb:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f01017f2	obj/kern/kernel.asm	/^f01017f2:	e8 49 e8 ff ff       	call   f0100040 <_panic>$/;"	l
f01017f7	obj/kern/kernel.asm	/^f01017f7:	39 f7                	cmp    %esi,%edi$/;"	l
f01017f9	obj/kern/kernel.asm	/^f01017f9:	75 24                	jne    f010181f <mem_init+0x29c>$/;"	l
f01017fb	obj/kern/kernel.asm	/^f01017fb:	c7 44 24 0c eb 8a 10 	movl   $0xf0108aeb,0xc(%esp)$/;"	l
f0101802	obj/kern/kernel.asm	/^f0101802:	f0 $/;"	l
f0101803	obj/kern/kernel.asm	/^f0101803:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f010180a	obj/kern/kernel.asm	/^f010180a:	f0 $/;"	l
f010180b	obj/kern/kernel.asm	/^f010180b:	c7 44 24 04 fd 02 00 	movl   $0x2fd,0x4(%esp)$/;"	l
f0101812	obj/kern/kernel.asm	/^f0101812:	00 $/;"	l
f0101813	obj/kern/kernel.asm	/^f0101813:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f010181a	obj/kern/kernel.asm	/^f010181a:	e8 21 e8 ff ff       	call   f0100040 <_panic>$/;"	l
f010181f	obj/kern/kernel.asm	/^f010181f:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101822	obj/kern/kernel.asm	/^f0101822:	39 c6                	cmp    %eax,%esi$/;"	l
f0101824	obj/kern/kernel.asm	/^f0101824:	74 04                	je     f010182a <mem_init+0x2a7>$/;"	l
f0101826	obj/kern/kernel.asm	/^f0101826:	39 c7                	cmp    %eax,%edi$/;"	l
f0101828	obj/kern/kernel.asm	/^f0101828:	75 24                	jne    f010184e <mem_init+0x2cb>$/;"	l
f010182a	obj/kern/kernel.asm	/^f010182a:	c7 44 24 0c c0 81 10 	movl   $0xf01081c0,0xc(%esp)$/;"	l
f0101831	obj/kern/kernel.asm	/^f0101831:	f0 $/;"	l
f0101832	obj/kern/kernel.asm	/^f0101832:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f0101839	obj/kern/kernel.asm	/^f0101839:	f0 $/;"	l
f010183a	obj/kern/kernel.asm	/^f010183a:	c7 44 24 04 fe 02 00 	movl   $0x2fe,0x4(%esp)$/;"	l
f0101841	obj/kern/kernel.asm	/^f0101841:	00 $/;"	l
f0101842	obj/kern/kernel.asm	/^f0101842:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0101849	obj/kern/kernel.asm	/^f0101849:	e8 f2 e7 ff ff       	call   f0100040 <_panic>$/;"	l
f010184e	obj/kern/kernel.asm	/^f010184e:	8b 15 9c 8e 2b f0    	mov    0xf02b8e9c,%edx$/;"	l
f0101854	obj/kern/kernel.asm	/^f0101854:	a1 94 8e 2b f0       	mov    0xf02b8e94,%eax$/;"	l
f0101859	obj/kern/kernel.asm	/^f0101859:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010185c	obj/kern/kernel.asm	/^f010185c:	89 f9                	mov    %edi,%ecx$/;"	l
f010185e	obj/kern/kernel.asm	/^f010185e:	29 d1                	sub    %edx,%ecx$/;"	l
f0101860	obj/kern/kernel.asm	/^f0101860:	c1 f9 03             	sar    $0x3,%ecx$/;"	l
f0101863	obj/kern/kernel.asm	/^f0101863:	c1 e1 0c             	shl    $0xc,%ecx$/;"	l
f0101866	obj/kern/kernel.asm	/^f0101866:	39 c1                	cmp    %eax,%ecx$/;"	l
f0101868	obj/kern/kernel.asm	/^f0101868:	72 24                	jb     f010188e <mem_init+0x30b>$/;"	l
f010186a	obj/kern/kernel.asm	/^f010186a:	c7 44 24 0c fd 8a 10 	movl   $0xf0108afd,0xc(%esp)$/;"	l
f0101871	obj/kern/kernel.asm	/^f0101871:	f0 $/;"	l
f0101872	obj/kern/kernel.asm	/^f0101872:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f0101879	obj/kern/kernel.asm	/^f0101879:	f0 $/;"	l
f010187a	obj/kern/kernel.asm	/^f010187a:	c7 44 24 04 ff 02 00 	movl   $0x2ff,0x4(%esp)$/;"	l
f0101881	obj/kern/kernel.asm	/^f0101881:	00 $/;"	l
f0101882	obj/kern/kernel.asm	/^f0101882:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0101889	obj/kern/kernel.asm	/^f0101889:	e8 b2 e7 ff ff       	call   f0100040 <_panic>$/;"	l
f010188e	obj/kern/kernel.asm	/^f010188e:	89 f1                	mov    %esi,%ecx$/;"	l
f0101890	obj/kern/kernel.asm	/^f0101890:	29 d1                	sub    %edx,%ecx$/;"	l
f0101892	obj/kern/kernel.asm	/^f0101892:	c1 f9 03             	sar    $0x3,%ecx$/;"	l
f0101895	obj/kern/kernel.asm	/^f0101895:	c1 e1 0c             	shl    $0xc,%ecx$/;"	l
f0101898	obj/kern/kernel.asm	/^f0101898:	39 c8                	cmp    %ecx,%eax$/;"	l
f010189a	obj/kern/kernel.asm	/^f010189a:	77 24                	ja     f01018c0 <mem_init+0x33d>$/;"	l
f010189c	obj/kern/kernel.asm	/^f010189c:	c7 44 24 0c 1a 8b 10 	movl   $0xf0108b1a,0xc(%esp)$/;"	l
f01018a3	obj/kern/kernel.asm	/^f01018a3:	f0 $/;"	l
f01018a4	obj/kern/kernel.asm	/^f01018a4:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f01018ab	obj/kern/kernel.asm	/^f01018ab:	f0 $/;"	l
f01018ac	obj/kern/kernel.asm	/^f01018ac:	c7 44 24 04 00 03 00 	movl   $0x300,0x4(%esp)$/;"	l
f01018b3	obj/kern/kernel.asm	/^f01018b3:	00 $/;"	l
f01018b4	obj/kern/kernel.asm	/^f01018b4:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f01018bb	obj/kern/kernel.asm	/^f01018bb:	e8 80 e7 ff ff       	call   f0100040 <_panic>$/;"	l
f01018c0	obj/kern/kernel.asm	/^f01018c0:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f01018c3	obj/kern/kernel.asm	/^f01018c3:	29 d1                	sub    %edx,%ecx$/;"	l
f01018c5	obj/kern/kernel.asm	/^f01018c5:	89 ca                	mov    %ecx,%edx$/;"	l
f01018c7	obj/kern/kernel.asm	/^f01018c7:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01018ca	obj/kern/kernel.asm	/^f01018ca:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01018cd	obj/kern/kernel.asm	/^f01018cd:	39 d0                	cmp    %edx,%eax$/;"	l
f01018cf	obj/kern/kernel.asm	/^f01018cf:	77 24                	ja     f01018f5 <mem_init+0x372>$/;"	l
f01018d1	obj/kern/kernel.asm	/^f01018d1:	c7 44 24 0c 37 8b 10 	movl   $0xf0108b37,0xc(%esp)$/;"	l
f01018d8	obj/kern/kernel.asm	/^f01018d8:	f0 $/;"	l
f01018d9	obj/kern/kernel.asm	/^f01018d9:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f01018e0	obj/kern/kernel.asm	/^f01018e0:	f0 $/;"	l
f01018e1	obj/kern/kernel.asm	/^f01018e1:	c7 44 24 04 01 03 00 	movl   $0x301,0x4(%esp)$/;"	l
f01018e8	obj/kern/kernel.asm	/^f01018e8:	00 $/;"	l
f01018e9	obj/kern/kernel.asm	/^f01018e9:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f01018f0	obj/kern/kernel.asm	/^f01018f0:	e8 4b e7 ff ff       	call   f0100040 <_panic>$/;"	l
f01018f5	obj/kern/kernel.asm	/^f01018f5:	a1 40 82 2b f0       	mov    0xf02b8240,%eax$/;"	l
f01018fa	obj/kern/kernel.asm	/^f01018fa:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f01018fd	obj/kern/kernel.asm	/^f01018fd:	c7 05 40 82 2b f0 00 	movl   $0x0,0xf02b8240$/;"	l
f0101904	obj/kern/kernel.asm	/^f0101904:	00 00 00 $/;"	l
f0101907	obj/kern/kernel.asm	/^f0101907:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010190e	obj/kern/kernel.asm	/^f010190e:	e8 28 f8 ff ff       	call   f010113b <page_alloc>$/;"	l
f0101913	obj/kern/kernel.asm	/^f0101913:	85 c0                	test   %eax,%eax$/;"	l
f0101915	obj/kern/kernel.asm	/^f0101915:	74 24                	je     f010193b <mem_init+0x3b8>$/;"	l
f0101917	obj/kern/kernel.asm	/^f0101917:	c7 44 24 0c 54 8b 10 	movl   $0xf0108b54,0xc(%esp)$/;"	l
f010191e	obj/kern/kernel.asm	/^f010191e:	f0 $/;"	l
f010191f	obj/kern/kernel.asm	/^f010191f:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f0101926	obj/kern/kernel.asm	/^f0101926:	f0 $/;"	l
f0101927	obj/kern/kernel.asm	/^f0101927:	c7 44 24 04 08 03 00 	movl   $0x308,0x4(%esp)$/;"	l
f010192e	obj/kern/kernel.asm	/^f010192e:	00 $/;"	l
f010192f	obj/kern/kernel.asm	/^f010192f:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0101936	obj/kern/kernel.asm	/^f0101936:	e8 05 e7 ff ff       	call   f0100040 <_panic>$/;"	l
f010193b	obj/kern/kernel.asm	/^f010193b:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f010193e	obj/kern/kernel.asm	/^f010193e:	e8 88 f8 ff ff       	call   f01011cb <page_free>$/;"	l
f0101943	obj/kern/kernel.asm	/^f0101943:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101946	obj/kern/kernel.asm	/^f0101946:	e8 80 f8 ff ff       	call   f01011cb <page_free>$/;"	l
f010194b	obj/kern/kernel.asm	/^f010194b:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010194e	obj/kern/kernel.asm	/^f010194e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101951	obj/kern/kernel.asm	/^f0101951:	e8 75 f8 ff ff       	call   f01011cb <page_free>$/;"	l
f0101956	obj/kern/kernel.asm	/^f0101956:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010195d	obj/kern/kernel.asm	/^f010195d:	e8 d9 f7 ff ff       	call   f010113b <page_alloc>$/;"	l
f0101962	obj/kern/kernel.asm	/^f0101962:	89 c6                	mov    %eax,%esi$/;"	l
f0101964	obj/kern/kernel.asm	/^f0101964:	85 c0                	test   %eax,%eax$/;"	l
f0101966	obj/kern/kernel.asm	/^f0101966:	75 24                	jne    f010198c <mem_init+0x409>$/;"	l
f0101968	obj/kern/kernel.asm	/^f0101968:	c7 44 24 0c a9 8a 10 	movl   $0xf0108aa9,0xc(%esp)$/;"	l
f010196f	obj/kern/kernel.asm	/^f010196f:	f0 $/;"	l
f0101970	obj/kern/kernel.asm	/^f0101970:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f0101977	obj/kern/kernel.asm	/^f0101977:	f0 $/;"	l
f0101978	obj/kern/kernel.asm	/^f0101978:	c7 44 24 04 0f 03 00 	movl   $0x30f,0x4(%esp)$/;"	l
f010197f	obj/kern/kernel.asm	/^f010197f:	00 $/;"	l
f0101980	obj/kern/kernel.asm	/^f0101980:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0101987	obj/kern/kernel.asm	/^f0101987:	e8 b4 e6 ff ff       	call   f0100040 <_panic>$/;"	l
f010198c	obj/kern/kernel.asm	/^f010198c:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101993	obj/kern/kernel.asm	/^f0101993:	e8 a3 f7 ff ff       	call   f010113b <page_alloc>$/;"	l
f0101998	obj/kern/kernel.asm	/^f0101998:	89 c7                	mov    %eax,%edi$/;"	l
f010199a	obj/kern/kernel.asm	/^f010199a:	85 c0                	test   %eax,%eax$/;"	l
f010199c	obj/kern/kernel.asm	/^f010199c:	75 24                	jne    f01019c2 <mem_init+0x43f>$/;"	l
f010199e	obj/kern/kernel.asm	/^f010199e:	c7 44 24 0c bf 8a 10 	movl   $0xf0108abf,0xc(%esp)$/;"	l
f01019a5	obj/kern/kernel.asm	/^f01019a5:	f0 $/;"	l
f01019a6	obj/kern/kernel.asm	/^f01019a6:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f01019ad	obj/kern/kernel.asm	/^f01019ad:	f0 $/;"	l
f01019ae	obj/kern/kernel.asm	/^f01019ae:	c7 44 24 04 10 03 00 	movl   $0x310,0x4(%esp)$/;"	l
f01019b5	obj/kern/kernel.asm	/^f01019b5:	00 $/;"	l
f01019b6	obj/kern/kernel.asm	/^f01019b6:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f01019bd	obj/kern/kernel.asm	/^f01019bd:	e8 7e e6 ff ff       	call   f0100040 <_panic>$/;"	l
f01019c2	obj/kern/kernel.asm	/^f01019c2:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01019c9	obj/kern/kernel.asm	/^f01019c9:	e8 6d f7 ff ff       	call   f010113b <page_alloc>$/;"	l
f01019ce	obj/kern/kernel.asm	/^f01019ce:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01019d1	obj/kern/kernel.asm	/^f01019d1:	85 c0                	test   %eax,%eax$/;"	l
f01019d3	obj/kern/kernel.asm	/^f01019d3:	75 24                	jne    f01019f9 <mem_init+0x476>$/;"	l
f01019d5	obj/kern/kernel.asm	/^f01019d5:	c7 44 24 0c d5 8a 10 	movl   $0xf0108ad5,0xc(%esp)$/;"	l
f01019dc	obj/kern/kernel.asm	/^f01019dc:	f0 $/;"	l
f01019dd	obj/kern/kernel.asm	/^f01019dd:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f01019e4	obj/kern/kernel.asm	/^f01019e4:	f0 $/;"	l
f01019e5	obj/kern/kernel.asm	/^f01019e5:	c7 44 24 04 11 03 00 	movl   $0x311,0x4(%esp)$/;"	l
f01019ec	obj/kern/kernel.asm	/^f01019ec:	00 $/;"	l
f01019ed	obj/kern/kernel.asm	/^f01019ed:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f01019f4	obj/kern/kernel.asm	/^f01019f4:	e8 47 e6 ff ff       	call   f0100040 <_panic>$/;"	l
f01019f9	obj/kern/kernel.asm	/^f01019f9:	39 fe                	cmp    %edi,%esi$/;"	l
f01019fb	obj/kern/kernel.asm	/^f01019fb:	75 24                	jne    f0101a21 <mem_init+0x49e>$/;"	l
f01019fd	obj/kern/kernel.asm	/^f01019fd:	c7 44 24 0c eb 8a 10 	movl   $0xf0108aeb,0xc(%esp)$/;"	l
f0101a04	obj/kern/kernel.asm	/^f0101a04:	f0 $/;"	l
f0101a05	obj/kern/kernel.asm	/^f0101a05:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f0101a0c	obj/kern/kernel.asm	/^f0101a0c:	f0 $/;"	l
f0101a0d	obj/kern/kernel.asm	/^f0101a0d:	c7 44 24 04 13 03 00 	movl   $0x313,0x4(%esp)$/;"	l
f0101a14	obj/kern/kernel.asm	/^f0101a14:	00 $/;"	l
f0101a15	obj/kern/kernel.asm	/^f0101a15:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0101a1c	obj/kern/kernel.asm	/^f0101a1c:	e8 1f e6 ff ff       	call   f0100040 <_panic>$/;"	l
f0101a21	obj/kern/kernel.asm	/^f0101a21:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101a24	obj/kern/kernel.asm	/^f0101a24:	39 c7                	cmp    %eax,%edi$/;"	l
f0101a26	obj/kern/kernel.asm	/^f0101a26:	74 04                	je     f0101a2c <mem_init+0x4a9>$/;"	l
f0101a28	obj/kern/kernel.asm	/^f0101a28:	39 c6                	cmp    %eax,%esi$/;"	l
f0101a2a	obj/kern/kernel.asm	/^f0101a2a:	75 24                	jne    f0101a50 <mem_init+0x4cd>$/;"	l
f0101a2c	obj/kern/kernel.asm	/^f0101a2c:	c7 44 24 0c c0 81 10 	movl   $0xf01081c0,0xc(%esp)$/;"	l
f0101a33	obj/kern/kernel.asm	/^f0101a33:	f0 $/;"	l
f0101a34	obj/kern/kernel.asm	/^f0101a34:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f0101a3b	obj/kern/kernel.asm	/^f0101a3b:	f0 $/;"	l
f0101a3c	obj/kern/kernel.asm	/^f0101a3c:	c7 44 24 04 14 03 00 	movl   $0x314,0x4(%esp)$/;"	l
f0101a43	obj/kern/kernel.asm	/^f0101a43:	00 $/;"	l
f0101a44	obj/kern/kernel.asm	/^f0101a44:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0101a4b	obj/kern/kernel.asm	/^f0101a4b:	e8 f0 e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101a50	obj/kern/kernel.asm	/^f0101a50:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101a57	obj/kern/kernel.asm	/^f0101a57:	e8 df f6 ff ff       	call   f010113b <page_alloc>$/;"	l
f0101a5c	obj/kern/kernel.asm	/^f0101a5c:	85 c0                	test   %eax,%eax$/;"	l
f0101a5e	obj/kern/kernel.asm	/^f0101a5e:	74 24                	je     f0101a84 <mem_init+0x501>$/;"	l
f0101a60	obj/kern/kernel.asm	/^f0101a60:	c7 44 24 0c 54 8b 10 	movl   $0xf0108b54,0xc(%esp)$/;"	l
f0101a67	obj/kern/kernel.asm	/^f0101a67:	f0 $/;"	l
f0101a68	obj/kern/kernel.asm	/^f0101a68:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f0101a6f	obj/kern/kernel.asm	/^f0101a6f:	f0 $/;"	l
f0101a70	obj/kern/kernel.asm	/^f0101a70:	c7 44 24 04 15 03 00 	movl   $0x315,0x4(%esp)$/;"	l
f0101a77	obj/kern/kernel.asm	/^f0101a77:	00 $/;"	l
f0101a78	obj/kern/kernel.asm	/^f0101a78:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0101a7f	obj/kern/kernel.asm	/^f0101a7f:	e8 bc e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101a84	obj/kern/kernel.asm	/^f0101a84:	89 f0                	mov    %esi,%eax$/;"	l
f0101a86	obj/kern/kernel.asm	/^f0101a86:	2b 05 9c 8e 2b f0    	sub    0xf02b8e9c,%eax$/;"	l
f0101a8c	obj/kern/kernel.asm	/^f0101a8c:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101a8f	obj/kern/kernel.asm	/^f0101a8f:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101a92	obj/kern/kernel.asm	/^f0101a92:	89 c2                	mov    %eax,%edx$/;"	l
f0101a94	obj/kern/kernel.asm	/^f0101a94:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101a97	obj/kern/kernel.asm	/^f0101a97:	3b 15 94 8e 2b f0    	cmp    0xf02b8e94,%edx$/;"	l
f0101a9d	obj/kern/kernel.asm	/^f0101a9d:	72 20                	jb     f0101abf <mem_init+0x53c>$/;"	l
f0101a9f	obj/kern/kernel.asm	/^f0101a9f:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101aa3	obj/kern/kernel.asm	/^f0101aa3:	c7 44 24 08 44 7a 10 	movl   $0xf0107a44,0x8(%esp)$/;"	l
f0101aaa	obj/kern/kernel.asm	/^f0101aaa:	f0 $/;"	l
f0101aab	obj/kern/kernel.asm	/^f0101aab:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0101ab2	obj/kern/kernel.asm	/^f0101ab2:	00 $/;"	l
f0101ab3	obj/kern/kernel.asm	/^f0101ab3:	c7 04 24 9d 89 10 f0 	movl   $0xf010899d,(%esp)$/;"	l
f0101aba	obj/kern/kernel.asm	/^f0101aba:	e8 81 e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101abf	obj/kern/kernel.asm	/^f0101abf:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0101ac6	obj/kern/kernel.asm	/^f0101ac6:	00 $/;"	l
f0101ac7	obj/kern/kernel.asm	/^f0101ac7:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
f0101ace	obj/kern/kernel.asm	/^f0101ace:	00 $/;"	l
f0101acf	obj/kern/kernel.asm	/^f0101acf:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0101ad4	obj/kern/kernel.asm	/^f0101ad4:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101ad7	obj/kern/kernel.asm	/^f0101ad7:	e8 4b 49 00 00       	call   f0106427 <memset>$/;"	l
f0101adc	obj/kern/kernel.asm	/^f0101adc:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101adf	obj/kern/kernel.asm	/^f0101adf:	e8 e7 f6 ff ff       	call   f01011cb <page_free>$/;"	l
f0101ae4	obj/kern/kernel.asm	/^f0101ae4:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f0101aeb	obj/kern/kernel.asm	/^f0101aeb:	e8 4b f6 ff ff       	call   f010113b <page_alloc>$/;"	l
f0101af0	obj/kern/kernel.asm	/^f0101af0:	85 c0                	test   %eax,%eax$/;"	l
f0101af2	obj/kern/kernel.asm	/^f0101af2:	75 24                	jne    f0101b18 <mem_init+0x595>$/;"	l
f0101af4	obj/kern/kernel.asm	/^f0101af4:	c7 44 24 0c 63 8b 10 	movl   $0xf0108b63,0xc(%esp)$/;"	l
f0101afb	obj/kern/kernel.asm	/^f0101afb:	f0 $/;"	l
f0101afc	obj/kern/kernel.asm	/^f0101afc:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f0101b03	obj/kern/kernel.asm	/^f0101b03:	f0 $/;"	l
f0101b04	obj/kern/kernel.asm	/^f0101b04:	c7 44 24 04 1a 03 00 	movl   $0x31a,0x4(%esp)$/;"	l
f0101b0b	obj/kern/kernel.asm	/^f0101b0b:	00 $/;"	l
f0101b0c	obj/kern/kernel.asm	/^f0101b0c:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0101b13	obj/kern/kernel.asm	/^f0101b13:	e8 28 e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101b18	obj/kern/kernel.asm	/^f0101b18:	39 c6                	cmp    %eax,%esi$/;"	l
f0101b1a	obj/kern/kernel.asm	/^f0101b1a:	74 24                	je     f0101b40 <mem_init+0x5bd>$/;"	l
f0101b1c	obj/kern/kernel.asm	/^f0101b1c:	c7 44 24 0c 81 8b 10 	movl   $0xf0108b81,0xc(%esp)$/;"	l
f0101b23	obj/kern/kernel.asm	/^f0101b23:	f0 $/;"	l
f0101b24	obj/kern/kernel.asm	/^f0101b24:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f0101b2b	obj/kern/kernel.asm	/^f0101b2b:	f0 $/;"	l
f0101b2c	obj/kern/kernel.asm	/^f0101b2c:	c7 44 24 04 1b 03 00 	movl   $0x31b,0x4(%esp)$/;"	l
f0101b33	obj/kern/kernel.asm	/^f0101b33:	00 $/;"	l
f0101b34	obj/kern/kernel.asm	/^f0101b34:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0101b3b	obj/kern/kernel.asm	/^f0101b3b:	e8 00 e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101b40	obj/kern/kernel.asm	/^f0101b40:	89 f0                	mov    %esi,%eax$/;"	l
f0101b42	obj/kern/kernel.asm	/^f0101b42:	2b 05 9c 8e 2b f0    	sub    0xf02b8e9c,%eax$/;"	l
f0101b48	obj/kern/kernel.asm	/^f0101b48:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101b4b	obj/kern/kernel.asm	/^f0101b4b:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101b4e	obj/kern/kernel.asm	/^f0101b4e:	89 c2                	mov    %eax,%edx$/;"	l
f0101b50	obj/kern/kernel.asm	/^f0101b50:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101b53	obj/kern/kernel.asm	/^f0101b53:	3b 15 94 8e 2b f0    	cmp    0xf02b8e94,%edx$/;"	l
f0101b59	obj/kern/kernel.asm	/^f0101b59:	72 20                	jb     f0101b7b <mem_init+0x5f8>$/;"	l
f0101b5b	obj/kern/kernel.asm	/^f0101b5b:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101b5f	obj/kern/kernel.asm	/^f0101b5f:	c7 44 24 08 44 7a 10 	movl   $0xf0107a44,0x8(%esp)$/;"	l
f0101b66	obj/kern/kernel.asm	/^f0101b66:	f0 $/;"	l
f0101b67	obj/kern/kernel.asm	/^f0101b67:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0101b6e	obj/kern/kernel.asm	/^f0101b6e:	00 $/;"	l
f0101b6f	obj/kern/kernel.asm	/^f0101b6f:	c7 04 24 9d 89 10 f0 	movl   $0xf010899d,(%esp)$/;"	l
f0101b76	obj/kern/kernel.asm	/^f0101b76:	e8 c5 e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101b7b	obj/kern/kernel.asm	/^f0101b7b:	8d 90 00 10 00 f0    	lea    -0xffff000(%eax),%edx$/;"	l
f0101b81	obj/kern/kernel.asm	/^f0101b81:	8d 80 00 00 00 f0    	lea    -0x10000000(%eax),%eax$/;"	l
f0101b87	obj/kern/kernel.asm	/^f0101b87:	80 38 00             	cmpb   $0x0,(%eax)$/;"	l
f0101b8a	obj/kern/kernel.asm	/^f0101b8a:	74 24                	je     f0101bb0 <mem_init+0x62d>$/;"	l
f0101b8c	obj/kern/kernel.asm	/^f0101b8c:	c7 44 24 0c 91 8b 10 	movl   $0xf0108b91,0xc(%esp)$/;"	l
f0101b93	obj/kern/kernel.asm	/^f0101b93:	f0 $/;"	l
f0101b94	obj/kern/kernel.asm	/^f0101b94:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f0101b9b	obj/kern/kernel.asm	/^f0101b9b:	f0 $/;"	l
f0101b9c	obj/kern/kernel.asm	/^f0101b9c:	c7 44 24 04 1e 03 00 	movl   $0x31e,0x4(%esp)$/;"	l
f0101ba3	obj/kern/kernel.asm	/^f0101ba3:	00 $/;"	l
f0101ba4	obj/kern/kernel.asm	/^f0101ba4:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0101bab	obj/kern/kernel.asm	/^f0101bab:	e8 90 e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101bb0	obj/kern/kernel.asm	/^f0101bb0:	83 c0 01             	add    $0x1,%eax$/;"	l
f0101bb3	obj/kern/kernel.asm	/^f0101bb3:	39 d0                	cmp    %edx,%eax$/;"	l
f0101bb5	obj/kern/kernel.asm	/^f0101bb5:	75 d0                	jne    f0101b87 <mem_init+0x604>$/;"	l
f0101bb7	obj/kern/kernel.asm	/^f0101bb7:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0101bba	obj/kern/kernel.asm	/^f0101bba:	a3 40 82 2b f0       	mov    %eax,0xf02b8240$/;"	l
f0101bbf	obj/kern/kernel.asm	/^f0101bbf:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101bc2	obj/kern/kernel.asm	/^f0101bc2:	e8 04 f6 ff ff       	call   f01011cb <page_free>$/;"	l
f0101bc7	obj/kern/kernel.asm	/^f0101bc7:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0101bca	obj/kern/kernel.asm	/^f0101bca:	e8 fc f5 ff ff       	call   f01011cb <page_free>$/;"	l
f0101bcf	obj/kern/kernel.asm	/^f0101bcf:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101bd2	obj/kern/kernel.asm	/^f0101bd2:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101bd5	obj/kern/kernel.asm	/^f0101bd5:	e8 f1 f5 ff ff       	call   f01011cb <page_free>$/;"	l
f0101bda	obj/kern/kernel.asm	/^f0101bda:	a1 40 82 2b f0       	mov    0xf02b8240,%eax$/;"	l
f0101bdf	obj/kern/kernel.asm	/^f0101bdf:	eb 05                	jmp    f0101be6 <mem_init+0x663>$/;"	l
f0101be1	obj/kern/kernel.asm	/^f0101be1:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0101be4	obj/kern/kernel.asm	/^f0101be4:	8b 00                	mov    (%eax),%eax$/;"	l
f0101be6	obj/kern/kernel.asm	/^f0101be6:	85 c0                	test   %eax,%eax$/;"	l
f0101be8	obj/kern/kernel.asm	/^f0101be8:	75 f7                	jne    f0101be1 <mem_init+0x65e>$/;"	l
f0101bea	obj/kern/kernel.asm	/^f0101bea:	85 db                	test   %ebx,%ebx$/;"	l
f0101bec	obj/kern/kernel.asm	/^f0101bec:	74 24                	je     f0101c12 <mem_init+0x68f>$/;"	l
f0101bee	obj/kern/kernel.asm	/^f0101bee:	c7 44 24 0c 9b 8b 10 	movl   $0xf0108b9b,0xc(%esp)$/;"	l
f0101bf5	obj/kern/kernel.asm	/^f0101bf5:	f0 $/;"	l
f0101bf6	obj/kern/kernel.asm	/^f0101bf6:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f0101bfd	obj/kern/kernel.asm	/^f0101bfd:	f0 $/;"	l
f0101bfe	obj/kern/kernel.asm	/^f0101bfe:	c7 44 24 04 2b 03 00 	movl   $0x32b,0x4(%esp)$/;"	l
f0101c05	obj/kern/kernel.asm	/^f0101c05:	00 $/;"	l
f0101c06	obj/kern/kernel.asm	/^f0101c06:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0101c0d	obj/kern/kernel.asm	/^f0101c0d:	e8 2e e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101c12	obj/kern/kernel.asm	/^f0101c12:	c7 04 24 e0 81 10 f0 	movl   $0xf01081e0,(%esp)$/;"	l
f0101c19	obj/kern/kernel.asm	/^f0101c19:	e8 ce 23 00 00       	call   f0103fec <cprintf>$/;"	l
f0101c1e	obj/kern/kernel.asm	/^f0101c1e:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101c25	obj/kern/kernel.asm	/^f0101c25:	e8 11 f5 ff ff       	call   f010113b <page_alloc>$/;"	l
f0101c2a	obj/kern/kernel.asm	/^f0101c2a:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0101c2d	obj/kern/kernel.asm	/^f0101c2d:	85 c0                	test   %eax,%eax$/;"	l
f0101c2f	obj/kern/kernel.asm	/^f0101c2f:	75 24                	jne    f0101c55 <mem_init+0x6d2>$/;"	l
f0101c31	obj/kern/kernel.asm	/^f0101c31:	c7 44 24 0c a9 8a 10 	movl   $0xf0108aa9,0xc(%esp)$/;"	l
f0101c38	obj/kern/kernel.asm	/^f0101c38:	f0 $/;"	l
f0101c39	obj/kern/kernel.asm	/^f0101c39:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f0101c40	obj/kern/kernel.asm	/^f0101c40:	f0 $/;"	l
f0101c41	obj/kern/kernel.asm	/^f0101c41:	c7 44 24 04 91 03 00 	movl   $0x391,0x4(%esp)$/;"	l
f0101c48	obj/kern/kernel.asm	/^f0101c48:	00 $/;"	l
f0101c49	obj/kern/kernel.asm	/^f0101c49:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0101c50	obj/kern/kernel.asm	/^f0101c50:	e8 eb e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101c55	obj/kern/kernel.asm	/^f0101c55:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101c5c	obj/kern/kernel.asm	/^f0101c5c:	e8 da f4 ff ff       	call   f010113b <page_alloc>$/;"	l
f0101c61	obj/kern/kernel.asm	/^f0101c61:	89 c3                	mov    %eax,%ebx$/;"	l
f0101c63	obj/kern/kernel.asm	/^f0101c63:	85 c0                	test   %eax,%eax$/;"	l
f0101c65	obj/kern/kernel.asm	/^f0101c65:	75 24                	jne    f0101c8b <mem_init+0x708>$/;"	l
f0101c67	obj/kern/kernel.asm	/^f0101c67:	c7 44 24 0c bf 8a 10 	movl   $0xf0108abf,0xc(%esp)$/;"	l
f0101c6e	obj/kern/kernel.asm	/^f0101c6e:	f0 $/;"	l
f0101c6f	obj/kern/kernel.asm	/^f0101c6f:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f0101c76	obj/kern/kernel.asm	/^f0101c76:	f0 $/;"	l
f0101c77	obj/kern/kernel.asm	/^f0101c77:	c7 44 24 04 92 03 00 	movl   $0x392,0x4(%esp)$/;"	l
f0101c7e	obj/kern/kernel.asm	/^f0101c7e:	00 $/;"	l
f0101c7f	obj/kern/kernel.asm	/^f0101c7f:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0101c86	obj/kern/kernel.asm	/^f0101c86:	e8 b5 e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101c8b	obj/kern/kernel.asm	/^f0101c8b:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101c92	obj/kern/kernel.asm	/^f0101c92:	e8 a4 f4 ff ff       	call   f010113b <page_alloc>$/;"	l
f0101c97	obj/kern/kernel.asm	/^f0101c97:	89 c6                	mov    %eax,%esi$/;"	l
f0101c99	obj/kern/kernel.asm	/^f0101c99:	85 c0                	test   %eax,%eax$/;"	l
f0101c9b	obj/kern/kernel.asm	/^f0101c9b:	75 24                	jne    f0101cc1 <mem_init+0x73e>$/;"	l
f0101c9d	obj/kern/kernel.asm	/^f0101c9d:	c7 44 24 0c d5 8a 10 	movl   $0xf0108ad5,0xc(%esp)$/;"	l
f0101ca4	obj/kern/kernel.asm	/^f0101ca4:	f0 $/;"	l
f0101ca5	obj/kern/kernel.asm	/^f0101ca5:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f0101cac	obj/kern/kernel.asm	/^f0101cac:	f0 $/;"	l
f0101cad	obj/kern/kernel.asm	/^f0101cad:	c7 44 24 04 93 03 00 	movl   $0x393,0x4(%esp)$/;"	l
f0101cb4	obj/kern/kernel.asm	/^f0101cb4:	00 $/;"	l
f0101cb5	obj/kern/kernel.asm	/^f0101cb5:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0101cbc	obj/kern/kernel.asm	/^f0101cbc:	e8 7f e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101cc1	obj/kern/kernel.asm	/^f0101cc1:	39 5d d4             	cmp    %ebx,-0x2c(%ebp)$/;"	l
f0101cc4	obj/kern/kernel.asm	/^f0101cc4:	75 24                	jne    f0101cea <mem_init+0x767>$/;"	l
f0101cc6	obj/kern/kernel.asm	/^f0101cc6:	c7 44 24 0c eb 8a 10 	movl   $0xf0108aeb,0xc(%esp)$/;"	l
f0101ccd	obj/kern/kernel.asm	/^f0101ccd:	f0 $/;"	l
f0101cce	obj/kern/kernel.asm	/^f0101cce:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f0101cd5	obj/kern/kernel.asm	/^f0101cd5:	f0 $/;"	l
f0101cd6	obj/kern/kernel.asm	/^f0101cd6:	c7 44 24 04 96 03 00 	movl   $0x396,0x4(%esp)$/;"	l
f0101cdd	obj/kern/kernel.asm	/^f0101cdd:	00 $/;"	l
f0101cde	obj/kern/kernel.asm	/^f0101cde:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0101ce5	obj/kern/kernel.asm	/^f0101ce5:	e8 56 e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101cea	obj/kern/kernel.asm	/^f0101cea:	39 c3                	cmp    %eax,%ebx$/;"	l
f0101cec	obj/kern/kernel.asm	/^f0101cec:	74 05                	je     f0101cf3 <mem_init+0x770>$/;"	l
f0101cee	obj/kern/kernel.asm	/^f0101cee:	39 45 d4             	cmp    %eax,-0x2c(%ebp)$/;"	l
f0101cf1	obj/kern/kernel.asm	/^f0101cf1:	75 24                	jne    f0101d17 <mem_init+0x794>$/;"	l
f0101cf3	obj/kern/kernel.asm	/^f0101cf3:	c7 44 24 0c c0 81 10 	movl   $0xf01081c0,0xc(%esp)$/;"	l
f0101cfa	obj/kern/kernel.asm	/^f0101cfa:	f0 $/;"	l
f0101cfb	obj/kern/kernel.asm	/^f0101cfb:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f0101d02	obj/kern/kernel.asm	/^f0101d02:	f0 $/;"	l
f0101d03	obj/kern/kernel.asm	/^f0101d03:	c7 44 24 04 97 03 00 	movl   $0x397,0x4(%esp)$/;"	l
f0101d0a	obj/kern/kernel.asm	/^f0101d0a:	00 $/;"	l
f0101d0b	obj/kern/kernel.asm	/^f0101d0b:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0101d12	obj/kern/kernel.asm	/^f0101d12:	e8 29 e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101d17	obj/kern/kernel.asm	/^f0101d17:	a1 40 82 2b f0       	mov    0xf02b8240,%eax$/;"	l
f0101d1c	obj/kern/kernel.asm	/^f0101d1c:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0101d1f	obj/kern/kernel.asm	/^f0101d1f:	c7 05 40 82 2b f0 00 	movl   $0x0,0xf02b8240$/;"	l
f0101d26	obj/kern/kernel.asm	/^f0101d26:	00 00 00 $/;"	l
f0101d29	obj/kern/kernel.asm	/^f0101d29:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101d30	obj/kern/kernel.asm	/^f0101d30:	e8 06 f4 ff ff       	call   f010113b <page_alloc>$/;"	l
f0101d35	obj/kern/kernel.asm	/^f0101d35:	85 c0                	test   %eax,%eax$/;"	l
f0101d37	obj/kern/kernel.asm	/^f0101d37:	74 24                	je     f0101d5d <mem_init+0x7da>$/;"	l
f0101d39	obj/kern/kernel.asm	/^f0101d39:	c7 44 24 0c 54 8b 10 	movl   $0xf0108b54,0xc(%esp)$/;"	l
f0101d40	obj/kern/kernel.asm	/^f0101d40:	f0 $/;"	l
f0101d41	obj/kern/kernel.asm	/^f0101d41:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f0101d48	obj/kern/kernel.asm	/^f0101d48:	f0 $/;"	l
f0101d49	obj/kern/kernel.asm	/^f0101d49:	c7 44 24 04 9e 03 00 	movl   $0x39e,0x4(%esp)$/;"	l
f0101d50	obj/kern/kernel.asm	/^f0101d50:	00 $/;"	l
f0101d51	obj/kern/kernel.asm	/^f0101d51:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0101d58	obj/kern/kernel.asm	/^f0101d58:	e8 e3 e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101d5d	obj/kern/kernel.asm	/^f0101d5d:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0101d60	obj/kern/kernel.asm	/^f0101d60:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0101d64	obj/kern/kernel.asm	/^f0101d64:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0101d6b	obj/kern/kernel.asm	/^f0101d6b:	00 $/;"	l
f0101d6c	obj/kern/kernel.asm	/^f0101d6c:	a1 98 8e 2b f0       	mov    0xf02b8e98,%eax$/;"	l
f0101d71	obj/kern/kernel.asm	/^f0101d71:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101d74	obj/kern/kernel.asm	/^f0101d74:	e8 0b f6 ff ff       	call   f0101384 <page_lookup>$/;"	l
f0101d79	obj/kern/kernel.asm	/^f0101d79:	85 c0                	test   %eax,%eax$/;"	l
f0101d7b	obj/kern/kernel.asm	/^f0101d7b:	74 24                	je     f0101da1 <mem_init+0x81e>$/;"	l
f0101d7d	obj/kern/kernel.asm	/^f0101d7d:	c7 44 24 0c 00 82 10 	movl   $0xf0108200,0xc(%esp)$/;"	l
f0101d84	obj/kern/kernel.asm	/^f0101d84:	f0 $/;"	l
f0101d85	obj/kern/kernel.asm	/^f0101d85:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f0101d8c	obj/kern/kernel.asm	/^f0101d8c:	f0 $/;"	l
f0101d8d	obj/kern/kernel.asm	/^f0101d8d:	c7 44 24 04 a1 03 00 	movl   $0x3a1,0x4(%esp)$/;"	l
f0101d94	obj/kern/kernel.asm	/^f0101d94:	00 $/;"	l
f0101d95	obj/kern/kernel.asm	/^f0101d95:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0101d9c	obj/kern/kernel.asm	/^f0101d9c:	e8 9f e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101da1	obj/kern/kernel.asm	/^f0101da1:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0101da8	obj/kern/kernel.asm	/^f0101da8:	00 $/;"	l
f0101da9	obj/kern/kernel.asm	/^f0101da9:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0101db0	obj/kern/kernel.asm	/^f0101db0:	00 $/;"	l
f0101db1	obj/kern/kernel.asm	/^f0101db1:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0101db5	obj/kern/kernel.asm	/^f0101db5:	a1 98 8e 2b f0       	mov    0xf02b8e98,%eax$/;"	l
f0101dba	obj/kern/kernel.asm	/^f0101dba:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101dbd	obj/kern/kernel.asm	/^f0101dbd:	e8 b9 f6 ff ff       	call   f010147b <page_insert>$/;"	l
f0101dc2	obj/kern/kernel.asm	/^f0101dc2:	85 c0                	test   %eax,%eax$/;"	l
f0101dc4	obj/kern/kernel.asm	/^f0101dc4:	78 24                	js     f0101dea <mem_init+0x867>$/;"	l
f0101dc6	obj/kern/kernel.asm	/^f0101dc6:	c7 44 24 0c 38 82 10 	movl   $0xf0108238,0xc(%esp)$/;"	l
f0101dcd	obj/kern/kernel.asm	/^f0101dcd:	f0 $/;"	l
f0101dce	obj/kern/kernel.asm	/^f0101dce:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f0101dd5	obj/kern/kernel.asm	/^f0101dd5:	f0 $/;"	l
f0101dd6	obj/kern/kernel.asm	/^f0101dd6:	c7 44 24 04 a4 03 00 	movl   $0x3a4,0x4(%esp)$/;"	l
f0101ddd	obj/kern/kernel.asm	/^f0101ddd:	00 $/;"	l
f0101dde	obj/kern/kernel.asm	/^f0101dde:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0101de5	obj/kern/kernel.asm	/^f0101de5:	e8 56 e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101dea	obj/kern/kernel.asm	/^f0101dea:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101ded	obj/kern/kernel.asm	/^f0101ded:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101df0	obj/kern/kernel.asm	/^f0101df0:	e8 d6 f3 ff ff       	call   f01011cb <page_free>$/;"	l
f0101df5	obj/kern/kernel.asm	/^f0101df5:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0101dfc	obj/kern/kernel.asm	/^f0101dfc:	00 $/;"	l
f0101dfd	obj/kern/kernel.asm	/^f0101dfd:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0101e04	obj/kern/kernel.asm	/^f0101e04:	00 $/;"	l
f0101e05	obj/kern/kernel.asm	/^f0101e05:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0101e09	obj/kern/kernel.asm	/^f0101e09:	a1 98 8e 2b f0       	mov    0xf02b8e98,%eax$/;"	l
f0101e0e	obj/kern/kernel.asm	/^f0101e0e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101e11	obj/kern/kernel.asm	/^f0101e11:	e8 65 f6 ff ff       	call   f010147b <page_insert>$/;"	l
f0101e16	obj/kern/kernel.asm	/^f0101e16:	85 c0                	test   %eax,%eax$/;"	l
f0101e18	obj/kern/kernel.asm	/^f0101e18:	74 24                	je     f0101e3e <mem_init+0x8bb>$/;"	l
f0101e1a	obj/kern/kernel.asm	/^f0101e1a:	c7 44 24 0c 68 82 10 	movl   $0xf0108268,0xc(%esp)$/;"	l
f0101e21	obj/kern/kernel.asm	/^f0101e21:	f0 $/;"	l
f0101e22	obj/kern/kernel.asm	/^f0101e22:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f0101e29	obj/kern/kernel.asm	/^f0101e29:	f0 $/;"	l
f0101e2a	obj/kern/kernel.asm	/^f0101e2a:	c7 44 24 04 a8 03 00 	movl   $0x3a8,0x4(%esp)$/;"	l
f0101e31	obj/kern/kernel.asm	/^f0101e31:	00 $/;"	l
f0101e32	obj/kern/kernel.asm	/^f0101e32:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0101e39	obj/kern/kernel.asm	/^f0101e39:	e8 02 e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101e3e	obj/kern/kernel.asm	/^f0101e3e:	8b 3d 98 8e 2b f0    	mov    0xf02b8e98,%edi$/;"	l
f0101e44	obj/kern/kernel.asm	/^f0101e44:	a1 9c 8e 2b f0       	mov    0xf02b8e9c,%eax$/;"	l
f0101e49	obj/kern/kernel.asm	/^f0101e49:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0101e4c	obj/kern/kernel.asm	/^f0101e4c:	8b 17                	mov    (%edi),%edx$/;"	l
f0101e4e	obj/kern/kernel.asm	/^f0101e4e:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0101e54	obj/kern/kernel.asm	/^f0101e54:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f0101e57	obj/kern/kernel.asm	/^f0101e57:	29 c1                	sub    %eax,%ecx$/;"	l
f0101e59	obj/kern/kernel.asm	/^f0101e59:	89 c8                	mov    %ecx,%eax$/;"	l
f0101e5b	obj/kern/kernel.asm	/^f0101e5b:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101e5e	obj/kern/kernel.asm	/^f0101e5e:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101e61	obj/kern/kernel.asm	/^f0101e61:	39 c2                	cmp    %eax,%edx$/;"	l
f0101e63	obj/kern/kernel.asm	/^f0101e63:	74 24                	je     f0101e89 <mem_init+0x906>$/;"	l
f0101e65	obj/kern/kernel.asm	/^f0101e65:	c7 44 24 0c 98 82 10 	movl   $0xf0108298,0xc(%esp)$/;"	l
f0101e6c	obj/kern/kernel.asm	/^f0101e6c:	f0 $/;"	l
f0101e6d	obj/kern/kernel.asm	/^f0101e6d:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f0101e74	obj/kern/kernel.asm	/^f0101e74:	f0 $/;"	l
f0101e75	obj/kern/kernel.asm	/^f0101e75:	c7 44 24 04 a9 03 00 	movl   $0x3a9,0x4(%esp)$/;"	l
f0101e7c	obj/kern/kernel.asm	/^f0101e7c:	00 $/;"	l
f0101e7d	obj/kern/kernel.asm	/^f0101e7d:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0101e84	obj/kern/kernel.asm	/^f0101e84:	e8 b7 e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101e89	obj/kern/kernel.asm	/^f0101e89:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0101e8e	obj/kern/kernel.asm	/^f0101e8e:	89 f8                	mov    %edi,%eax$/;"	l
f0101e90	obj/kern/kernel.asm	/^f0101e90:	e8 60 ed ff ff       	call   f0100bf5 <check_va2pa>$/;"	l
f0101e95	obj/kern/kernel.asm	/^f0101e95:	89 da                	mov    %ebx,%edx$/;"	l
f0101e97	obj/kern/kernel.asm	/^f0101e97:	2b 55 cc             	sub    -0x34(%ebp),%edx$/;"	l
f0101e9a	obj/kern/kernel.asm	/^f0101e9a:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101e9d	obj/kern/kernel.asm	/^f0101e9d:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101ea0	obj/kern/kernel.asm	/^f0101ea0:	39 d0                	cmp    %edx,%eax$/;"	l
f0101ea2	obj/kern/kernel.asm	/^f0101ea2:	74 24                	je     f0101ec8 <mem_init+0x945>$/;"	l
f0101ea4	obj/kern/kernel.asm	/^f0101ea4:	c7 44 24 0c c0 82 10 	movl   $0xf01082c0,0xc(%esp)$/;"	l
f0101eab	obj/kern/kernel.asm	/^f0101eab:	f0 $/;"	l
f0101eac	obj/kern/kernel.asm	/^f0101eac:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f0101eb3	obj/kern/kernel.asm	/^f0101eb3:	f0 $/;"	l
f0101eb4	obj/kern/kernel.asm	/^f0101eb4:	c7 44 24 04 aa 03 00 	movl   $0x3aa,0x4(%esp)$/;"	l
f0101ebb	obj/kern/kernel.asm	/^f0101ebb:	00 $/;"	l
f0101ebc	obj/kern/kernel.asm	/^f0101ebc:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0101ec3	obj/kern/kernel.asm	/^f0101ec3:	e8 78 e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101ec8	obj/kern/kernel.asm	/^f0101ec8:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0101ecd	obj/kern/kernel.asm	/^f0101ecd:	74 24                	je     f0101ef3 <mem_init+0x970>$/;"	l
f0101ecf	obj/kern/kernel.asm	/^f0101ecf:	c7 44 24 0c a6 8b 10 	movl   $0xf0108ba6,0xc(%esp)$/;"	l
f0101ed6	obj/kern/kernel.asm	/^f0101ed6:	f0 $/;"	l
f0101ed7	obj/kern/kernel.asm	/^f0101ed7:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f0101ede	obj/kern/kernel.asm	/^f0101ede:	f0 $/;"	l
f0101edf	obj/kern/kernel.asm	/^f0101edf:	c7 44 24 04 ab 03 00 	movl   $0x3ab,0x4(%esp)$/;"	l
f0101ee6	obj/kern/kernel.asm	/^f0101ee6:	00 $/;"	l
f0101ee7	obj/kern/kernel.asm	/^f0101ee7:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0101eee	obj/kern/kernel.asm	/^f0101eee:	e8 4d e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101ef3	obj/kern/kernel.asm	/^f0101ef3:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101ef6	obj/kern/kernel.asm	/^f0101ef6:	66 83 78 04 01       	cmpw   $0x1,0x4(%eax)$/;"	l
f0101efb	obj/kern/kernel.asm	/^f0101efb:	74 24                	je     f0101f21 <mem_init+0x99e>$/;"	l
f0101efd	obj/kern/kernel.asm	/^f0101efd:	c7 44 24 0c b7 8b 10 	movl   $0xf0108bb7,0xc(%esp)$/;"	l
f0101f04	obj/kern/kernel.asm	/^f0101f04:	f0 $/;"	l
f0101f05	obj/kern/kernel.asm	/^f0101f05:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f0101f0c	obj/kern/kernel.asm	/^f0101f0c:	f0 $/;"	l
f0101f0d	obj/kern/kernel.asm	/^f0101f0d:	c7 44 24 04 ac 03 00 	movl   $0x3ac,0x4(%esp)$/;"	l
f0101f14	obj/kern/kernel.asm	/^f0101f14:	00 $/;"	l
f0101f15	obj/kern/kernel.asm	/^f0101f15:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0101f1c	obj/kern/kernel.asm	/^f0101f1c:	e8 1f e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101f21	obj/kern/kernel.asm	/^f0101f21:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0101f28	obj/kern/kernel.asm	/^f0101f28:	00 $/;"	l
f0101f29	obj/kern/kernel.asm	/^f0101f29:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0101f30	obj/kern/kernel.asm	/^f0101f30:	00 $/;"	l
f0101f31	obj/kern/kernel.asm	/^f0101f31:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0101f35	obj/kern/kernel.asm	/^f0101f35:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0101f38	obj/kern/kernel.asm	/^f0101f38:	e8 3e f5 ff ff       	call   f010147b <page_insert>$/;"	l
f0101f3d	obj/kern/kernel.asm	/^f0101f3d:	85 c0                	test   %eax,%eax$/;"	l
f0101f3f	obj/kern/kernel.asm	/^f0101f3f:	74 24                	je     f0101f65 <mem_init+0x9e2>$/;"	l
f0101f41	obj/kern/kernel.asm	/^f0101f41:	c7 44 24 0c f0 82 10 	movl   $0xf01082f0,0xc(%esp)$/;"	l
f0101f48	obj/kern/kernel.asm	/^f0101f48:	f0 $/;"	l
f0101f49	obj/kern/kernel.asm	/^f0101f49:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f0101f50	obj/kern/kernel.asm	/^f0101f50:	f0 $/;"	l
f0101f51	obj/kern/kernel.asm	/^f0101f51:	c7 44 24 04 af 03 00 	movl   $0x3af,0x4(%esp)$/;"	l
f0101f58	obj/kern/kernel.asm	/^f0101f58:	00 $/;"	l
f0101f59	obj/kern/kernel.asm	/^f0101f59:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0101f60	obj/kern/kernel.asm	/^f0101f60:	e8 db e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101f65	obj/kern/kernel.asm	/^f0101f65:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101f6a	obj/kern/kernel.asm	/^f0101f6a:	a1 98 8e 2b f0       	mov    0xf02b8e98,%eax$/;"	l
f0101f6f	obj/kern/kernel.asm	/^f0101f6f:	e8 81 ec ff ff       	call   f0100bf5 <check_va2pa>$/;"	l
f0101f74	obj/kern/kernel.asm	/^f0101f74:	89 f2                	mov    %esi,%edx$/;"	l
f0101f76	obj/kern/kernel.asm	/^f0101f76:	2b 15 9c 8e 2b f0    	sub    0xf02b8e9c,%edx$/;"	l
f0101f7c	obj/kern/kernel.asm	/^f0101f7c:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101f7f	obj/kern/kernel.asm	/^f0101f7f:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101f82	obj/kern/kernel.asm	/^f0101f82:	39 d0                	cmp    %edx,%eax$/;"	l
f0101f84	obj/kern/kernel.asm	/^f0101f84:	74 24                	je     f0101faa <mem_init+0xa27>$/;"	l
f0101f86	obj/kern/kernel.asm	/^f0101f86:	c7 44 24 0c 2c 83 10 	movl   $0xf010832c,0xc(%esp)$/;"	l
f0101f8d	obj/kern/kernel.asm	/^f0101f8d:	f0 $/;"	l
f0101f8e	obj/kern/kernel.asm	/^f0101f8e:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f0101f95	obj/kern/kernel.asm	/^f0101f95:	f0 $/;"	l
f0101f96	obj/kern/kernel.asm	/^f0101f96:	c7 44 24 04 b0 03 00 	movl   $0x3b0,0x4(%esp)$/;"	l
f0101f9d	obj/kern/kernel.asm	/^f0101f9d:	00 $/;"	l
f0101f9e	obj/kern/kernel.asm	/^f0101f9e:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0101fa5	obj/kern/kernel.asm	/^f0101fa5:	e8 96 e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101faa	obj/kern/kernel.asm	/^f0101faa:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0101faf	obj/kern/kernel.asm	/^f0101faf:	74 24                	je     f0101fd5 <mem_init+0xa52>$/;"	l
f0101fb1	obj/kern/kernel.asm	/^f0101fb1:	c7 44 24 0c c8 8b 10 	movl   $0xf0108bc8,0xc(%esp)$/;"	l
f0101fb8	obj/kern/kernel.asm	/^f0101fb8:	f0 $/;"	l
f0101fb9	obj/kern/kernel.asm	/^f0101fb9:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f0101fc0	obj/kern/kernel.asm	/^f0101fc0:	f0 $/;"	l
f0101fc1	obj/kern/kernel.asm	/^f0101fc1:	c7 44 24 04 b1 03 00 	movl   $0x3b1,0x4(%esp)$/;"	l
f0101fc8	obj/kern/kernel.asm	/^f0101fc8:	00 $/;"	l
f0101fc9	obj/kern/kernel.asm	/^f0101fc9:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0101fd0	obj/kern/kernel.asm	/^f0101fd0:	e8 6b e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101fd5	obj/kern/kernel.asm	/^f0101fd5:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101fdc	obj/kern/kernel.asm	/^f0101fdc:	e8 5a f1 ff ff       	call   f010113b <page_alloc>$/;"	l
f0101fe1	obj/kern/kernel.asm	/^f0101fe1:	85 c0                	test   %eax,%eax$/;"	l
f0101fe3	obj/kern/kernel.asm	/^f0101fe3:	74 24                	je     f0102009 <mem_init+0xa86>$/;"	l
f0101fe5	obj/kern/kernel.asm	/^f0101fe5:	c7 44 24 0c 54 8b 10 	movl   $0xf0108b54,0xc(%esp)$/;"	l
f0101fec	obj/kern/kernel.asm	/^f0101fec:	f0 $/;"	l
f0101fed	obj/kern/kernel.asm	/^f0101fed:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f0101ff4	obj/kern/kernel.asm	/^f0101ff4:	f0 $/;"	l
f0101ff5	obj/kern/kernel.asm	/^f0101ff5:	c7 44 24 04 b4 03 00 	movl   $0x3b4,0x4(%esp)$/;"	l
f0101ffc	obj/kern/kernel.asm	/^f0101ffc:	00 $/;"	l
f0101ffd	obj/kern/kernel.asm	/^f0101ffd:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0102004	obj/kern/kernel.asm	/^f0102004:	e8 37 e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102009	obj/kern/kernel.asm	/^f0102009:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0102010	obj/kern/kernel.asm	/^f0102010:	00 $/;"	l
f0102011	obj/kern/kernel.asm	/^f0102011:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0102018	obj/kern/kernel.asm	/^f0102018:	00 $/;"	l
f0102019	obj/kern/kernel.asm	/^f0102019:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f010201d	obj/kern/kernel.asm	/^f010201d:	a1 98 8e 2b f0       	mov    0xf02b8e98,%eax$/;"	l
f0102022	obj/kern/kernel.asm	/^f0102022:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102025	obj/kern/kernel.asm	/^f0102025:	e8 51 f4 ff ff       	call   f010147b <page_insert>$/;"	l
f010202a	obj/kern/kernel.asm	/^f010202a:	85 c0                	test   %eax,%eax$/;"	l
f010202c	obj/kern/kernel.asm	/^f010202c:	74 24                	je     f0102052 <mem_init+0xacf>$/;"	l
f010202e	obj/kern/kernel.asm	/^f010202e:	c7 44 24 0c f0 82 10 	movl   $0xf01082f0,0xc(%esp)$/;"	l
f0102035	obj/kern/kernel.asm	/^f0102035:	f0 $/;"	l
f0102036	obj/kern/kernel.asm	/^f0102036:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f010203d	obj/kern/kernel.asm	/^f010203d:	f0 $/;"	l
f010203e	obj/kern/kernel.asm	/^f010203e:	c7 44 24 04 b7 03 00 	movl   $0x3b7,0x4(%esp)$/;"	l
f0102045	obj/kern/kernel.asm	/^f0102045:	00 $/;"	l
f0102046	obj/kern/kernel.asm	/^f0102046:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f010204d	obj/kern/kernel.asm	/^f010204d:	e8 ee df ff ff       	call   f0100040 <_panic>$/;"	l
f0102052	obj/kern/kernel.asm	/^f0102052:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102057	obj/kern/kernel.asm	/^f0102057:	a1 98 8e 2b f0       	mov    0xf02b8e98,%eax$/;"	l
f010205c	obj/kern/kernel.asm	/^f010205c:	e8 94 eb ff ff       	call   f0100bf5 <check_va2pa>$/;"	l
f0102061	obj/kern/kernel.asm	/^f0102061:	89 f2                	mov    %esi,%edx$/;"	l
f0102063	obj/kern/kernel.asm	/^f0102063:	2b 15 9c 8e 2b f0    	sub    0xf02b8e9c,%edx$/;"	l
f0102069	obj/kern/kernel.asm	/^f0102069:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f010206c	obj/kern/kernel.asm	/^f010206c:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f010206f	obj/kern/kernel.asm	/^f010206f:	39 d0                	cmp    %edx,%eax$/;"	l
f0102071	obj/kern/kernel.asm	/^f0102071:	74 24                	je     f0102097 <mem_init+0xb14>$/;"	l
f0102073	obj/kern/kernel.asm	/^f0102073:	c7 44 24 0c 2c 83 10 	movl   $0xf010832c,0xc(%esp)$/;"	l
f010207a	obj/kern/kernel.asm	/^f010207a:	f0 $/;"	l
f010207b	obj/kern/kernel.asm	/^f010207b:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f0102082	obj/kern/kernel.asm	/^f0102082:	f0 $/;"	l
f0102083	obj/kern/kernel.asm	/^f0102083:	c7 44 24 04 b8 03 00 	movl   $0x3b8,0x4(%esp)$/;"	l
f010208a	obj/kern/kernel.asm	/^f010208a:	00 $/;"	l
f010208b	obj/kern/kernel.asm	/^f010208b:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0102092	obj/kern/kernel.asm	/^f0102092:	e8 a9 df ff ff       	call   f0100040 <_panic>$/;"	l
f0102097	obj/kern/kernel.asm	/^f0102097:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f010209c	obj/kern/kernel.asm	/^f010209c:	74 24                	je     f01020c2 <mem_init+0xb3f>$/;"	l
f010209e	obj/kern/kernel.asm	/^f010209e:	c7 44 24 0c c8 8b 10 	movl   $0xf0108bc8,0xc(%esp)$/;"	l
f01020a5	obj/kern/kernel.asm	/^f01020a5:	f0 $/;"	l
f01020a6	obj/kern/kernel.asm	/^f01020a6:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f01020ad	obj/kern/kernel.asm	/^f01020ad:	f0 $/;"	l
f01020ae	obj/kern/kernel.asm	/^f01020ae:	c7 44 24 04 b9 03 00 	movl   $0x3b9,0x4(%esp)$/;"	l
f01020b5	obj/kern/kernel.asm	/^f01020b5:	00 $/;"	l
f01020b6	obj/kern/kernel.asm	/^f01020b6:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f01020bd	obj/kern/kernel.asm	/^f01020bd:	e8 7e df ff ff       	call   f0100040 <_panic>$/;"	l
f01020c2	obj/kern/kernel.asm	/^f01020c2:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01020c9	obj/kern/kernel.asm	/^f01020c9:	e8 6d f0 ff ff       	call   f010113b <page_alloc>$/;"	l
f01020ce	obj/kern/kernel.asm	/^f01020ce:	85 c0                	test   %eax,%eax$/;"	l
f01020d0	obj/kern/kernel.asm	/^f01020d0:	74 24                	je     f01020f6 <mem_init+0xb73>$/;"	l
f01020d2	obj/kern/kernel.asm	/^f01020d2:	c7 44 24 0c 54 8b 10 	movl   $0xf0108b54,0xc(%esp)$/;"	l
f01020d9	obj/kern/kernel.asm	/^f01020d9:	f0 $/;"	l
f01020da	obj/kern/kernel.asm	/^f01020da:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f01020e1	obj/kern/kernel.asm	/^f01020e1:	f0 $/;"	l
f01020e2	obj/kern/kernel.asm	/^f01020e2:	c7 44 24 04 bd 03 00 	movl   $0x3bd,0x4(%esp)$/;"	l
f01020e9	obj/kern/kernel.asm	/^f01020e9:	00 $/;"	l
f01020ea	obj/kern/kernel.asm	/^f01020ea:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f01020f1	obj/kern/kernel.asm	/^f01020f1:	e8 4a df ff ff       	call   f0100040 <_panic>$/;"	l
f01020f6	obj/kern/kernel.asm	/^f01020f6:	8b 15 98 8e 2b f0    	mov    0xf02b8e98,%edx$/;"	l
f01020fc	obj/kern/kernel.asm	/^f01020fc:	8b 02                	mov    (%edx),%eax$/;"	l
f01020fe	obj/kern/kernel.asm	/^f01020fe:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0102103	obj/kern/kernel.asm	/^f0102103:	89 c1                	mov    %eax,%ecx$/;"	l
f0102105	obj/kern/kernel.asm	/^f0102105:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0102108	obj/kern/kernel.asm	/^f0102108:	3b 0d 94 8e 2b f0    	cmp    0xf02b8e94,%ecx$/;"	l
f010210e	obj/kern/kernel.asm	/^f010210e:	72 20                	jb     f0102130 <mem_init+0xbad>$/;"	l
f0102110	obj/kern/kernel.asm	/^f0102110:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102114	obj/kern/kernel.asm	/^f0102114:	c7 44 24 08 44 7a 10 	movl   $0xf0107a44,0x8(%esp)$/;"	l
f010211b	obj/kern/kernel.asm	/^f010211b:	f0 $/;"	l
f010211c	obj/kern/kernel.asm	/^f010211c:	c7 44 24 04 c0 03 00 	movl   $0x3c0,0x4(%esp)$/;"	l
f0102123	obj/kern/kernel.asm	/^f0102123:	00 $/;"	l
f0102124	obj/kern/kernel.asm	/^f0102124:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f010212b	obj/kern/kernel.asm	/^f010212b:	e8 10 df ff ff       	call   f0100040 <_panic>$/;"	l
f0102130	obj/kern/kernel.asm	/^f0102130:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0102135	obj/kern/kernel.asm	/^f0102135:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0102138	obj/kern/kernel.asm	/^f0102138:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f010213f	obj/kern/kernel.asm	/^f010213f:	00 $/;"	l
f0102140	obj/kern/kernel.asm	/^f0102140:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0102147	obj/kern/kernel.asm	/^f0102147:	00 $/;"	l
f0102148	obj/kern/kernel.asm	/^f0102148:	89 14 24             	mov    %edx,(%esp)$/;"	l
f010214b	obj/kern/kernel.asm	/^f010214b:	e8 fa f0 ff ff       	call   f010124a <pgdir_walk>$/;"	l
f0102150	obj/kern/kernel.asm	/^f0102150:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f0102153	obj/kern/kernel.asm	/^f0102153:	8d 51 04             	lea    0x4(%ecx),%edx$/;"	l
f0102156	obj/kern/kernel.asm	/^f0102156:	39 d0                	cmp    %edx,%eax$/;"	l
f0102158	obj/kern/kernel.asm	/^f0102158:	74 24                	je     f010217e <mem_init+0xbfb>$/;"	l
f010215a	obj/kern/kernel.asm	/^f010215a:	c7 44 24 0c 5c 83 10 	movl   $0xf010835c,0xc(%esp)$/;"	l
f0102161	obj/kern/kernel.asm	/^f0102161:	f0 $/;"	l
f0102162	obj/kern/kernel.asm	/^f0102162:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f0102169	obj/kern/kernel.asm	/^f0102169:	f0 $/;"	l
f010216a	obj/kern/kernel.asm	/^f010216a:	c7 44 24 04 c1 03 00 	movl   $0x3c1,0x4(%esp)$/;"	l
f0102171	obj/kern/kernel.asm	/^f0102171:	00 $/;"	l
f0102172	obj/kern/kernel.asm	/^f0102172:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0102179	obj/kern/kernel.asm	/^f0102179:	e8 c2 de ff ff       	call   f0100040 <_panic>$/;"	l
f010217e	obj/kern/kernel.asm	/^f010217e:	c7 44 24 0c 06 00 00 	movl   $0x6,0xc(%esp)$/;"	l
f0102185	obj/kern/kernel.asm	/^f0102185:	00 $/;"	l
f0102186	obj/kern/kernel.asm	/^f0102186:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f010218d	obj/kern/kernel.asm	/^f010218d:	00 $/;"	l
f010218e	obj/kern/kernel.asm	/^f010218e:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0102192	obj/kern/kernel.asm	/^f0102192:	a1 98 8e 2b f0       	mov    0xf02b8e98,%eax$/;"	l
f0102197	obj/kern/kernel.asm	/^f0102197:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010219a	obj/kern/kernel.asm	/^f010219a:	e8 dc f2 ff ff       	call   f010147b <page_insert>$/;"	l
f010219f	obj/kern/kernel.asm	/^f010219f:	85 c0                	test   %eax,%eax$/;"	l
f01021a1	obj/kern/kernel.asm	/^f01021a1:	74 24                	je     f01021c7 <mem_init+0xc44>$/;"	l
f01021a3	obj/kern/kernel.asm	/^f01021a3:	c7 44 24 0c 9c 83 10 	movl   $0xf010839c,0xc(%esp)$/;"	l
f01021aa	obj/kern/kernel.asm	/^f01021aa:	f0 $/;"	l
f01021ab	obj/kern/kernel.asm	/^f01021ab:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f01021b2	obj/kern/kernel.asm	/^f01021b2:	f0 $/;"	l
f01021b3	obj/kern/kernel.asm	/^f01021b3:	c7 44 24 04 c4 03 00 	movl   $0x3c4,0x4(%esp)$/;"	l
f01021ba	obj/kern/kernel.asm	/^f01021ba:	00 $/;"	l
f01021bb	obj/kern/kernel.asm	/^f01021bb:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f01021c2	obj/kern/kernel.asm	/^f01021c2:	e8 79 de ff ff       	call   f0100040 <_panic>$/;"	l
f01021c7	obj/kern/kernel.asm	/^f01021c7:	8b 3d 98 8e 2b f0    	mov    0xf02b8e98,%edi$/;"	l
f01021cd	obj/kern/kernel.asm	/^f01021cd:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f01021d2	obj/kern/kernel.asm	/^f01021d2:	89 f8                	mov    %edi,%eax$/;"	l
f01021d4	obj/kern/kernel.asm	/^f01021d4:	e8 1c ea ff ff       	call   f0100bf5 <check_va2pa>$/;"	l
f01021d9	obj/kern/kernel.asm	/^f01021d9:	89 f2                	mov    %esi,%edx$/;"	l
f01021db	obj/kern/kernel.asm	/^f01021db:	2b 15 9c 8e 2b f0    	sub    0xf02b8e9c,%edx$/;"	l
f01021e1	obj/kern/kernel.asm	/^f01021e1:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01021e4	obj/kern/kernel.asm	/^f01021e4:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01021e7	obj/kern/kernel.asm	/^f01021e7:	39 d0                	cmp    %edx,%eax$/;"	l
f01021e9	obj/kern/kernel.asm	/^f01021e9:	74 24                	je     f010220f <mem_init+0xc8c>$/;"	l
f01021eb	obj/kern/kernel.asm	/^f01021eb:	c7 44 24 0c 2c 83 10 	movl   $0xf010832c,0xc(%esp)$/;"	l
f01021f2	obj/kern/kernel.asm	/^f01021f2:	f0 $/;"	l
f01021f3	obj/kern/kernel.asm	/^f01021f3:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f01021fa	obj/kern/kernel.asm	/^f01021fa:	f0 $/;"	l
f01021fb	obj/kern/kernel.asm	/^f01021fb:	c7 44 24 04 c5 03 00 	movl   $0x3c5,0x4(%esp)$/;"	l
f0102202	obj/kern/kernel.asm	/^f0102202:	00 $/;"	l
f0102203	obj/kern/kernel.asm	/^f0102203:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f010220a	obj/kern/kernel.asm	/^f010220a:	e8 31 de ff ff       	call   f0100040 <_panic>$/;"	l
f010220f	obj/kern/kernel.asm	/^f010220f:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0102214	obj/kern/kernel.asm	/^f0102214:	74 24                	je     f010223a <mem_init+0xcb7>$/;"	l
f0102216	obj/kern/kernel.asm	/^f0102216:	c7 44 24 0c c8 8b 10 	movl   $0xf0108bc8,0xc(%esp)$/;"	l
f010221d	obj/kern/kernel.asm	/^f010221d:	f0 $/;"	l
f010221e	obj/kern/kernel.asm	/^f010221e:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f0102225	obj/kern/kernel.asm	/^f0102225:	f0 $/;"	l
f0102226	obj/kern/kernel.asm	/^f0102226:	c7 44 24 04 c6 03 00 	movl   $0x3c6,0x4(%esp)$/;"	l
f010222d	obj/kern/kernel.asm	/^f010222d:	00 $/;"	l
f010222e	obj/kern/kernel.asm	/^f010222e:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0102235	obj/kern/kernel.asm	/^f0102235:	e8 06 de ff ff       	call   f0100040 <_panic>$/;"	l
f010223a	obj/kern/kernel.asm	/^f010223a:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0102241	obj/kern/kernel.asm	/^f0102241:	00 $/;"	l
f0102242	obj/kern/kernel.asm	/^f0102242:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0102249	obj/kern/kernel.asm	/^f0102249:	00 $/;"	l
f010224a	obj/kern/kernel.asm	/^f010224a:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f010224d	obj/kern/kernel.asm	/^f010224d:	e8 f8 ef ff ff       	call   f010124a <pgdir_walk>$/;"	l
f0102252	obj/kern/kernel.asm	/^f0102252:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0102255	obj/kern/kernel.asm	/^f0102255:	75 24                	jne    f010227b <mem_init+0xcf8>$/;"	l
f0102257	obj/kern/kernel.asm	/^f0102257:	c7 44 24 0c dc 83 10 	movl   $0xf01083dc,0xc(%esp)$/;"	l
f010225e	obj/kern/kernel.asm	/^f010225e:	f0 $/;"	l
f010225f	obj/kern/kernel.asm	/^f010225f:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f0102266	obj/kern/kernel.asm	/^f0102266:	f0 $/;"	l
f0102267	obj/kern/kernel.asm	/^f0102267:	c7 44 24 04 c7 03 00 	movl   $0x3c7,0x4(%esp)$/;"	l
f010226e	obj/kern/kernel.asm	/^f010226e:	00 $/;"	l
f010226f	obj/kern/kernel.asm	/^f010226f:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0102276	obj/kern/kernel.asm	/^f0102276:	e8 c5 dd ff ff       	call   f0100040 <_panic>$/;"	l
f010227b	obj/kern/kernel.asm	/^f010227b:	a1 98 8e 2b f0       	mov    0xf02b8e98,%eax$/;"	l
f0102280	obj/kern/kernel.asm	/^f0102280:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0102283	obj/kern/kernel.asm	/^f0102283:	75 24                	jne    f01022a9 <mem_init+0xd26>$/;"	l
f0102285	obj/kern/kernel.asm	/^f0102285:	c7 44 24 0c d9 8b 10 	movl   $0xf0108bd9,0xc(%esp)$/;"	l
f010228c	obj/kern/kernel.asm	/^f010228c:	f0 $/;"	l
f010228d	obj/kern/kernel.asm	/^f010228d:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f0102294	obj/kern/kernel.asm	/^f0102294:	f0 $/;"	l
f0102295	obj/kern/kernel.asm	/^f0102295:	c7 44 24 04 c8 03 00 	movl   $0x3c8,0x4(%esp)$/;"	l
f010229c	obj/kern/kernel.asm	/^f010229c:	00 $/;"	l
f010229d	obj/kern/kernel.asm	/^f010229d:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f01022a4	obj/kern/kernel.asm	/^f01022a4:	e8 97 dd ff ff       	call   f0100040 <_panic>$/;"	l
f01022a9	obj/kern/kernel.asm	/^f01022a9:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f01022b0	obj/kern/kernel.asm	/^f01022b0:	00 $/;"	l
f01022b1	obj/kern/kernel.asm	/^f01022b1:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01022b8	obj/kern/kernel.asm	/^f01022b8:	00 $/;"	l
f01022b9	obj/kern/kernel.asm	/^f01022b9:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f01022bd	obj/kern/kernel.asm	/^f01022bd:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01022c0	obj/kern/kernel.asm	/^f01022c0:	e8 b6 f1 ff ff       	call   f010147b <page_insert>$/;"	l
f01022c5	obj/kern/kernel.asm	/^f01022c5:	85 c0                	test   %eax,%eax$/;"	l
f01022c7	obj/kern/kernel.asm	/^f01022c7:	74 24                	je     f01022ed <mem_init+0xd6a>$/;"	l
f01022c9	obj/kern/kernel.asm	/^f01022c9:	c7 44 24 0c f0 82 10 	movl   $0xf01082f0,0xc(%esp)$/;"	l
f01022d0	obj/kern/kernel.asm	/^f01022d0:	f0 $/;"	l
f01022d1	obj/kern/kernel.asm	/^f01022d1:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f01022d8	obj/kern/kernel.asm	/^f01022d8:	f0 $/;"	l
f01022d9	obj/kern/kernel.asm	/^f01022d9:	c7 44 24 04 cb 03 00 	movl   $0x3cb,0x4(%esp)$/;"	l
f01022e0	obj/kern/kernel.asm	/^f01022e0:	00 $/;"	l
f01022e1	obj/kern/kernel.asm	/^f01022e1:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f01022e8	obj/kern/kernel.asm	/^f01022e8:	e8 53 dd ff ff       	call   f0100040 <_panic>$/;"	l
f01022ed	obj/kern/kernel.asm	/^f01022ed:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f01022f4	obj/kern/kernel.asm	/^f01022f4:	00 $/;"	l
f01022f5	obj/kern/kernel.asm	/^f01022f5:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f01022fc	obj/kern/kernel.asm	/^f01022fc:	00 $/;"	l
f01022fd	obj/kern/kernel.asm	/^f01022fd:	a1 98 8e 2b f0       	mov    0xf02b8e98,%eax$/;"	l
f0102302	obj/kern/kernel.asm	/^f0102302:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102305	obj/kern/kernel.asm	/^f0102305:	e8 40 ef ff ff       	call   f010124a <pgdir_walk>$/;"	l
f010230a	obj/kern/kernel.asm	/^f010230a:	f6 00 02             	testb  $0x2,(%eax)$/;"	l
f010230d	obj/kern/kernel.asm	/^f010230d:	75 24                	jne    f0102333 <mem_init+0xdb0>$/;"	l
f010230f	obj/kern/kernel.asm	/^f010230f:	c7 44 24 0c 10 84 10 	movl   $0xf0108410,0xc(%esp)$/;"	l
f0102316	obj/kern/kernel.asm	/^f0102316:	f0 $/;"	l
f0102317	obj/kern/kernel.asm	/^f0102317:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f010231e	obj/kern/kernel.asm	/^f010231e:	f0 $/;"	l
f010231f	obj/kern/kernel.asm	/^f010231f:	c7 44 24 04 cc 03 00 	movl   $0x3cc,0x4(%esp)$/;"	l
f0102326	obj/kern/kernel.asm	/^f0102326:	00 $/;"	l
f0102327	obj/kern/kernel.asm	/^f0102327:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f010232e	obj/kern/kernel.asm	/^f010232e:	e8 0d dd ff ff       	call   f0100040 <_panic>$/;"	l
f0102333	obj/kern/kernel.asm	/^f0102333:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f010233a	obj/kern/kernel.asm	/^f010233a:	00 $/;"	l
f010233b	obj/kern/kernel.asm	/^f010233b:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0102342	obj/kern/kernel.asm	/^f0102342:	00 $/;"	l
f0102343	obj/kern/kernel.asm	/^f0102343:	a1 98 8e 2b f0       	mov    0xf02b8e98,%eax$/;"	l
f0102348	obj/kern/kernel.asm	/^f0102348:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010234b	obj/kern/kernel.asm	/^f010234b:	e8 fa ee ff ff       	call   f010124a <pgdir_walk>$/;"	l
f0102350	obj/kern/kernel.asm	/^f0102350:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0102353	obj/kern/kernel.asm	/^f0102353:	74 24                	je     f0102379 <mem_init+0xdf6>$/;"	l
f0102355	obj/kern/kernel.asm	/^f0102355:	c7 44 24 0c 44 84 10 	movl   $0xf0108444,0xc(%esp)$/;"	l
f010235c	obj/kern/kernel.asm	/^f010235c:	f0 $/;"	l
f010235d	obj/kern/kernel.asm	/^f010235d:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f0102364	obj/kern/kernel.asm	/^f0102364:	f0 $/;"	l
f0102365	obj/kern/kernel.asm	/^f0102365:	c7 44 24 04 cd 03 00 	movl   $0x3cd,0x4(%esp)$/;"	l
f010236c	obj/kern/kernel.asm	/^f010236c:	00 $/;"	l
f010236d	obj/kern/kernel.asm	/^f010236d:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0102374	obj/kern/kernel.asm	/^f0102374:	e8 c7 dc ff ff       	call   f0100040 <_panic>$/;"	l
f0102379	obj/kern/kernel.asm	/^f0102379:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0102380	obj/kern/kernel.asm	/^f0102380:	00 $/;"	l
f0102381	obj/kern/kernel.asm	/^f0102381:	c7 44 24 08 00 00 40 	movl   $0x400000,0x8(%esp)$/;"	l
f0102388	obj/kern/kernel.asm	/^f0102388:	00 $/;"	l
f0102389	obj/kern/kernel.asm	/^f0102389:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010238c	obj/kern/kernel.asm	/^f010238c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0102390	obj/kern/kernel.asm	/^f0102390:	a1 98 8e 2b f0       	mov    0xf02b8e98,%eax$/;"	l
f0102395	obj/kern/kernel.asm	/^f0102395:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102398	obj/kern/kernel.asm	/^f0102398:	e8 de f0 ff ff       	call   f010147b <page_insert>$/;"	l
f010239d	obj/kern/kernel.asm	/^f010239d:	85 c0                	test   %eax,%eax$/;"	l
f010239f	obj/kern/kernel.asm	/^f010239f:	78 24                	js     f01023c5 <mem_init+0xe42>$/;"	l
f01023a1	obj/kern/kernel.asm	/^f01023a1:	c7 44 24 0c 7c 84 10 	movl   $0xf010847c,0xc(%esp)$/;"	l
f01023a8	obj/kern/kernel.asm	/^f01023a8:	f0 $/;"	l
f01023a9	obj/kern/kernel.asm	/^f01023a9:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f01023b0	obj/kern/kernel.asm	/^f01023b0:	f0 $/;"	l
f01023b1	obj/kern/kernel.asm	/^f01023b1:	c7 44 24 04 d0 03 00 	movl   $0x3d0,0x4(%esp)$/;"	l
f01023b8	obj/kern/kernel.asm	/^f01023b8:	00 $/;"	l
f01023b9	obj/kern/kernel.asm	/^f01023b9:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f01023c0	obj/kern/kernel.asm	/^f01023c0:	e8 7b dc ff ff       	call   f0100040 <_panic>$/;"	l
f01023c5	obj/kern/kernel.asm	/^f01023c5:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f01023cc	obj/kern/kernel.asm	/^f01023cc:	00 $/;"	l
f01023cd	obj/kern/kernel.asm	/^f01023cd:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01023d4	obj/kern/kernel.asm	/^f01023d4:	00 $/;"	l
f01023d5	obj/kern/kernel.asm	/^f01023d5:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01023d9	obj/kern/kernel.asm	/^f01023d9:	a1 98 8e 2b f0       	mov    0xf02b8e98,%eax$/;"	l
f01023de	obj/kern/kernel.asm	/^f01023de:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01023e1	obj/kern/kernel.asm	/^f01023e1:	e8 95 f0 ff ff       	call   f010147b <page_insert>$/;"	l
f01023e6	obj/kern/kernel.asm	/^f01023e6:	85 c0                	test   %eax,%eax$/;"	l
f01023e8	obj/kern/kernel.asm	/^f01023e8:	74 24                	je     f010240e <mem_init+0xe8b>$/;"	l
f01023ea	obj/kern/kernel.asm	/^f01023ea:	c7 44 24 0c b4 84 10 	movl   $0xf01084b4,0xc(%esp)$/;"	l
f01023f1	obj/kern/kernel.asm	/^f01023f1:	f0 $/;"	l
f01023f2	obj/kern/kernel.asm	/^f01023f2:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f01023f9	obj/kern/kernel.asm	/^f01023f9:	f0 $/;"	l
f01023fa	obj/kern/kernel.asm	/^f01023fa:	c7 44 24 04 d3 03 00 	movl   $0x3d3,0x4(%esp)$/;"	l
f0102401	obj/kern/kernel.asm	/^f0102401:	00 $/;"	l
f0102402	obj/kern/kernel.asm	/^f0102402:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0102409	obj/kern/kernel.asm	/^f0102409:	e8 32 dc ff ff       	call   f0100040 <_panic>$/;"	l
f010240e	obj/kern/kernel.asm	/^f010240e:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0102415	obj/kern/kernel.asm	/^f0102415:	00 $/;"	l
f0102416	obj/kern/kernel.asm	/^f0102416:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f010241d	obj/kern/kernel.asm	/^f010241d:	00 $/;"	l
f010241e	obj/kern/kernel.asm	/^f010241e:	a1 98 8e 2b f0       	mov    0xf02b8e98,%eax$/;"	l
f0102423	obj/kern/kernel.asm	/^f0102423:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102426	obj/kern/kernel.asm	/^f0102426:	e8 1f ee ff ff       	call   f010124a <pgdir_walk>$/;"	l
f010242b	obj/kern/kernel.asm	/^f010242b:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f010242e	obj/kern/kernel.asm	/^f010242e:	74 24                	je     f0102454 <mem_init+0xed1>$/;"	l
f0102430	obj/kern/kernel.asm	/^f0102430:	c7 44 24 0c 44 84 10 	movl   $0xf0108444,0xc(%esp)$/;"	l
f0102437	obj/kern/kernel.asm	/^f0102437:	f0 $/;"	l
f0102438	obj/kern/kernel.asm	/^f0102438:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f010243f	obj/kern/kernel.asm	/^f010243f:	f0 $/;"	l
f0102440	obj/kern/kernel.asm	/^f0102440:	c7 44 24 04 d4 03 00 	movl   $0x3d4,0x4(%esp)$/;"	l
f0102447	obj/kern/kernel.asm	/^f0102447:	00 $/;"	l
f0102448	obj/kern/kernel.asm	/^f0102448:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f010244f	obj/kern/kernel.asm	/^f010244f:	e8 ec db ff ff       	call   f0100040 <_panic>$/;"	l
f0102454	obj/kern/kernel.asm	/^f0102454:	8b 3d 98 8e 2b f0    	mov    0xf02b8e98,%edi$/;"	l
f010245a	obj/kern/kernel.asm	/^f010245a:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010245f	obj/kern/kernel.asm	/^f010245f:	89 f8                	mov    %edi,%eax$/;"	l
f0102461	obj/kern/kernel.asm	/^f0102461:	e8 8f e7 ff ff       	call   f0100bf5 <check_va2pa>$/;"	l
f0102466	obj/kern/kernel.asm	/^f0102466:	89 c1                	mov    %eax,%ecx$/;"	l
f0102468	obj/kern/kernel.asm	/^f0102468:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f010246b	obj/kern/kernel.asm	/^f010246b:	89 d8                	mov    %ebx,%eax$/;"	l
f010246d	obj/kern/kernel.asm	/^f010246d:	2b 05 9c 8e 2b f0    	sub    0xf02b8e9c,%eax$/;"	l
f0102473	obj/kern/kernel.asm	/^f0102473:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102476	obj/kern/kernel.asm	/^f0102476:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102479	obj/kern/kernel.asm	/^f0102479:	39 c1                	cmp    %eax,%ecx$/;"	l
f010247b	obj/kern/kernel.asm	/^f010247b:	74 24                	je     f01024a1 <mem_init+0xf1e>$/;"	l
f010247d	obj/kern/kernel.asm	/^f010247d:	c7 44 24 0c f0 84 10 	movl   $0xf01084f0,0xc(%esp)$/;"	l
f0102484	obj/kern/kernel.asm	/^f0102484:	f0 $/;"	l
f0102485	obj/kern/kernel.asm	/^f0102485:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f010248c	obj/kern/kernel.asm	/^f010248c:	f0 $/;"	l
f010248d	obj/kern/kernel.asm	/^f010248d:	c7 44 24 04 d7 03 00 	movl   $0x3d7,0x4(%esp)$/;"	l
f0102494	obj/kern/kernel.asm	/^f0102494:	00 $/;"	l
f0102495	obj/kern/kernel.asm	/^f0102495:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f010249c	obj/kern/kernel.asm	/^f010249c:	e8 9f db ff ff       	call   f0100040 <_panic>$/;"	l
f01024a1	obj/kern/kernel.asm	/^f01024a1:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f01024a6	obj/kern/kernel.asm	/^f01024a6:	89 f8                	mov    %edi,%eax$/;"	l
f01024a8	obj/kern/kernel.asm	/^f01024a8:	e8 48 e7 ff ff       	call   f0100bf5 <check_va2pa>$/;"	l
f01024ad	obj/kern/kernel.asm	/^f01024ad:	39 45 cc             	cmp    %eax,-0x34(%ebp)$/;"	l
f01024b0	obj/kern/kernel.asm	/^f01024b0:	74 24                	je     f01024d6 <mem_init+0xf53>$/;"	l
f01024b2	obj/kern/kernel.asm	/^f01024b2:	c7 44 24 0c 1c 85 10 	movl   $0xf010851c,0xc(%esp)$/;"	l
f01024b9	obj/kern/kernel.asm	/^f01024b9:	f0 $/;"	l
f01024ba	obj/kern/kernel.asm	/^f01024ba:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f01024c1	obj/kern/kernel.asm	/^f01024c1:	f0 $/;"	l
f01024c2	obj/kern/kernel.asm	/^f01024c2:	c7 44 24 04 d8 03 00 	movl   $0x3d8,0x4(%esp)$/;"	l
f01024c9	obj/kern/kernel.asm	/^f01024c9:	00 $/;"	l
f01024ca	obj/kern/kernel.asm	/^f01024ca:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f01024d1	obj/kern/kernel.asm	/^f01024d1:	e8 6a db ff ff       	call   f0100040 <_panic>$/;"	l
f01024d6	obj/kern/kernel.asm	/^f01024d6:	66 83 7b 04 02       	cmpw   $0x2,0x4(%ebx)$/;"	l
f01024db	obj/kern/kernel.asm	/^f01024db:	74 24                	je     f0102501 <mem_init+0xf7e>$/;"	l
f01024dd	obj/kern/kernel.asm	/^f01024dd:	c7 44 24 0c ef 8b 10 	movl   $0xf0108bef,0xc(%esp)$/;"	l
f01024e4	obj/kern/kernel.asm	/^f01024e4:	f0 $/;"	l
f01024e5	obj/kern/kernel.asm	/^f01024e5:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f01024ec	obj/kern/kernel.asm	/^f01024ec:	f0 $/;"	l
f01024ed	obj/kern/kernel.asm	/^f01024ed:	c7 44 24 04 da 03 00 	movl   $0x3da,0x4(%esp)$/;"	l
f01024f4	obj/kern/kernel.asm	/^f01024f4:	00 $/;"	l
f01024f5	obj/kern/kernel.asm	/^f01024f5:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f01024fc	obj/kern/kernel.asm	/^f01024fc:	e8 3f db ff ff       	call   f0100040 <_panic>$/;"	l
f0102501	obj/kern/kernel.asm	/^f0102501:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f0102506	obj/kern/kernel.asm	/^f0102506:	74 24                	je     f010252c <mem_init+0xfa9>$/;"	l
f0102508	obj/kern/kernel.asm	/^f0102508:	c7 44 24 0c 00 8c 10 	movl   $0xf0108c00,0xc(%esp)$/;"	l
f010250f	obj/kern/kernel.asm	/^f010250f:	f0 $/;"	l
f0102510	obj/kern/kernel.asm	/^f0102510:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f0102517	obj/kern/kernel.asm	/^f0102517:	f0 $/;"	l
f0102518	obj/kern/kernel.asm	/^f0102518:	c7 44 24 04 db 03 00 	movl   $0x3db,0x4(%esp)$/;"	l
f010251f	obj/kern/kernel.asm	/^f010251f:	00 $/;"	l
f0102520	obj/kern/kernel.asm	/^f0102520:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0102527	obj/kern/kernel.asm	/^f0102527:	e8 14 db ff ff       	call   f0100040 <_panic>$/;"	l
f010252c	obj/kern/kernel.asm	/^f010252c:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102533	obj/kern/kernel.asm	/^f0102533:	e8 03 ec ff ff       	call   f010113b <page_alloc>$/;"	l
f0102538	obj/kern/kernel.asm	/^f0102538:	85 c0                	test   %eax,%eax$/;"	l
f010253a	obj/kern/kernel.asm	/^f010253a:	74 04                	je     f0102540 <mem_init+0xfbd>$/;"	l
f010253c	obj/kern/kernel.asm	/^f010253c:	39 c6                	cmp    %eax,%esi$/;"	l
f010253e	obj/kern/kernel.asm	/^f010253e:	74 24                	je     f0102564 <mem_init+0xfe1>$/;"	l
f0102540	obj/kern/kernel.asm	/^f0102540:	c7 44 24 0c 4c 85 10 	movl   $0xf010854c,0xc(%esp)$/;"	l
f0102547	obj/kern/kernel.asm	/^f0102547:	f0 $/;"	l
f0102548	obj/kern/kernel.asm	/^f0102548:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f010254f	obj/kern/kernel.asm	/^f010254f:	f0 $/;"	l
f0102550	obj/kern/kernel.asm	/^f0102550:	c7 44 24 04 de 03 00 	movl   $0x3de,0x4(%esp)$/;"	l
f0102557	obj/kern/kernel.asm	/^f0102557:	00 $/;"	l
f0102558	obj/kern/kernel.asm	/^f0102558:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f010255f	obj/kern/kernel.asm	/^f010255f:	e8 dc da ff ff       	call   f0100040 <_panic>$/;"	l
f0102564	obj/kern/kernel.asm	/^f0102564:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f010256b	obj/kern/kernel.asm	/^f010256b:	00 $/;"	l
f010256c	obj/kern/kernel.asm	/^f010256c:	a1 98 8e 2b f0       	mov    0xf02b8e98,%eax$/;"	l
f0102571	obj/kern/kernel.asm	/^f0102571:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102574	obj/kern/kernel.asm	/^f0102574:	e8 b9 ee ff ff       	call   f0101432 <page_remove>$/;"	l
f0102579	obj/kern/kernel.asm	/^f0102579:	8b 3d 98 8e 2b f0    	mov    0xf02b8e98,%edi$/;"	l
f010257f	obj/kern/kernel.asm	/^f010257f:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0102584	obj/kern/kernel.asm	/^f0102584:	89 f8                	mov    %edi,%eax$/;"	l
f0102586	obj/kern/kernel.asm	/^f0102586:	e8 6a e6 ff ff       	call   f0100bf5 <check_va2pa>$/;"	l
f010258b	obj/kern/kernel.asm	/^f010258b:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f010258e	obj/kern/kernel.asm	/^f010258e:	74 24                	je     f01025b4 <mem_init+0x1031>$/;"	l
f0102590	obj/kern/kernel.asm	/^f0102590:	c7 44 24 0c 70 85 10 	movl   $0xf0108570,0xc(%esp)$/;"	l
f0102597	obj/kern/kernel.asm	/^f0102597:	f0 $/;"	l
f0102598	obj/kern/kernel.asm	/^f0102598:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f010259f	obj/kern/kernel.asm	/^f010259f:	f0 $/;"	l
f01025a0	obj/kern/kernel.asm	/^f01025a0:	c7 44 24 04 e2 03 00 	movl   $0x3e2,0x4(%esp)$/;"	l
f01025a7	obj/kern/kernel.asm	/^f01025a7:	00 $/;"	l
f01025a8	obj/kern/kernel.asm	/^f01025a8:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f01025af	obj/kern/kernel.asm	/^f01025af:	e8 8c da ff ff       	call   f0100040 <_panic>$/;"	l
f01025b4	obj/kern/kernel.asm	/^f01025b4:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f01025b9	obj/kern/kernel.asm	/^f01025b9:	89 f8                	mov    %edi,%eax$/;"	l
f01025bb	obj/kern/kernel.asm	/^f01025bb:	e8 35 e6 ff ff       	call   f0100bf5 <check_va2pa>$/;"	l
f01025c0	obj/kern/kernel.asm	/^f01025c0:	89 da                	mov    %ebx,%edx$/;"	l
f01025c2	obj/kern/kernel.asm	/^f01025c2:	2b 15 9c 8e 2b f0    	sub    0xf02b8e9c,%edx$/;"	l
f01025c8	obj/kern/kernel.asm	/^f01025c8:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01025cb	obj/kern/kernel.asm	/^f01025cb:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01025ce	obj/kern/kernel.asm	/^f01025ce:	39 d0                	cmp    %edx,%eax$/;"	l
f01025d0	obj/kern/kernel.asm	/^f01025d0:	74 24                	je     f01025f6 <mem_init+0x1073>$/;"	l
f01025d2	obj/kern/kernel.asm	/^f01025d2:	c7 44 24 0c 1c 85 10 	movl   $0xf010851c,0xc(%esp)$/;"	l
f01025d9	obj/kern/kernel.asm	/^f01025d9:	f0 $/;"	l
f01025da	obj/kern/kernel.asm	/^f01025da:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f01025e1	obj/kern/kernel.asm	/^f01025e1:	f0 $/;"	l
f01025e2	obj/kern/kernel.asm	/^f01025e2:	c7 44 24 04 e3 03 00 	movl   $0x3e3,0x4(%esp)$/;"	l
f01025e9	obj/kern/kernel.asm	/^f01025e9:	00 $/;"	l
f01025ea	obj/kern/kernel.asm	/^f01025ea:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f01025f1	obj/kern/kernel.asm	/^f01025f1:	e8 4a da ff ff       	call   f0100040 <_panic>$/;"	l
f01025f6	obj/kern/kernel.asm	/^f01025f6:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f01025fb	obj/kern/kernel.asm	/^f01025fb:	74 24                	je     f0102621 <mem_init+0x109e>$/;"	l
f01025fd	obj/kern/kernel.asm	/^f01025fd:	c7 44 24 0c a6 8b 10 	movl   $0xf0108ba6,0xc(%esp)$/;"	l
f0102604	obj/kern/kernel.asm	/^f0102604:	f0 $/;"	l
f0102605	obj/kern/kernel.asm	/^f0102605:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f010260c	obj/kern/kernel.asm	/^f010260c:	f0 $/;"	l
f010260d	obj/kern/kernel.asm	/^f010260d:	c7 44 24 04 e4 03 00 	movl   $0x3e4,0x4(%esp)$/;"	l
f0102614	obj/kern/kernel.asm	/^f0102614:	00 $/;"	l
f0102615	obj/kern/kernel.asm	/^f0102615:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f010261c	obj/kern/kernel.asm	/^f010261c:	e8 1f da ff ff       	call   f0100040 <_panic>$/;"	l
f0102621	obj/kern/kernel.asm	/^f0102621:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f0102626	obj/kern/kernel.asm	/^f0102626:	74 24                	je     f010264c <mem_init+0x10c9>$/;"	l
f0102628	obj/kern/kernel.asm	/^f0102628:	c7 44 24 0c 00 8c 10 	movl   $0xf0108c00,0xc(%esp)$/;"	l
f010262f	obj/kern/kernel.asm	/^f010262f:	f0 $/;"	l
f0102630	obj/kern/kernel.asm	/^f0102630:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f0102637	obj/kern/kernel.asm	/^f0102637:	f0 $/;"	l
f0102638	obj/kern/kernel.asm	/^f0102638:	c7 44 24 04 e5 03 00 	movl   $0x3e5,0x4(%esp)$/;"	l
f010263f	obj/kern/kernel.asm	/^f010263f:	00 $/;"	l
f0102640	obj/kern/kernel.asm	/^f0102640:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0102647	obj/kern/kernel.asm	/^f0102647:	e8 f4 d9 ff ff       	call   f0100040 <_panic>$/;"	l
f010264c	obj/kern/kernel.asm	/^f010264c:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
f0102653	obj/kern/kernel.asm	/^f0102653:	00 $/;"	l
f0102654	obj/kern/kernel.asm	/^f0102654:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f010265b	obj/kern/kernel.asm	/^f010265b:	00 $/;"	l
f010265c	obj/kern/kernel.asm	/^f010265c:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0102660	obj/kern/kernel.asm	/^f0102660:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0102663	obj/kern/kernel.asm	/^f0102663:	e8 13 ee ff ff       	call   f010147b <page_insert>$/;"	l
f0102668	obj/kern/kernel.asm	/^f0102668:	85 c0                	test   %eax,%eax$/;"	l
f010266a	obj/kern/kernel.asm	/^f010266a:	74 24                	je     f0102690 <mem_init+0x110d>$/;"	l
f010266c	obj/kern/kernel.asm	/^f010266c:	c7 44 24 0c 94 85 10 	movl   $0xf0108594,0xc(%esp)$/;"	l
f0102673	obj/kern/kernel.asm	/^f0102673:	f0 $/;"	l
f0102674	obj/kern/kernel.asm	/^f0102674:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f010267b	obj/kern/kernel.asm	/^f010267b:	f0 $/;"	l
f010267c	obj/kern/kernel.asm	/^f010267c:	c7 44 24 04 e8 03 00 	movl   $0x3e8,0x4(%esp)$/;"	l
f0102683	obj/kern/kernel.asm	/^f0102683:	00 $/;"	l
f0102684	obj/kern/kernel.asm	/^f0102684:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f010268b	obj/kern/kernel.asm	/^f010268b:	e8 b0 d9 ff ff       	call   f0100040 <_panic>$/;"	l
f0102690	obj/kern/kernel.asm	/^f0102690:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
f0102695	obj/kern/kernel.asm	/^f0102695:	75 24                	jne    f01026bb <mem_init+0x1138>$/;"	l
f0102697	obj/kern/kernel.asm	/^f0102697:	c7 44 24 0c 11 8c 10 	movl   $0xf0108c11,0xc(%esp)$/;"	l
f010269e	obj/kern/kernel.asm	/^f010269e:	f0 $/;"	l
f010269f	obj/kern/kernel.asm	/^f010269f:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f01026a6	obj/kern/kernel.asm	/^f01026a6:	f0 $/;"	l
f01026a7	obj/kern/kernel.asm	/^f01026a7:	c7 44 24 04 e9 03 00 	movl   $0x3e9,0x4(%esp)$/;"	l
f01026ae	obj/kern/kernel.asm	/^f01026ae:	00 $/;"	l
f01026af	obj/kern/kernel.asm	/^f01026af:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f01026b6	obj/kern/kernel.asm	/^f01026b6:	e8 85 d9 ff ff       	call   f0100040 <_panic>$/;"	l
f01026bb	obj/kern/kernel.asm	/^f01026bb:	83 3b 00             	cmpl   $0x0,(%ebx)$/;"	l
f01026be	obj/kern/kernel.asm	/^f01026be:	74 24                	je     f01026e4 <mem_init+0x1161>$/;"	l
f01026c0	obj/kern/kernel.asm	/^f01026c0:	c7 44 24 0c 1d 8c 10 	movl   $0xf0108c1d,0xc(%esp)$/;"	l
f01026c7	obj/kern/kernel.asm	/^f01026c7:	f0 $/;"	l
f01026c8	obj/kern/kernel.asm	/^f01026c8:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f01026cf	obj/kern/kernel.asm	/^f01026cf:	f0 $/;"	l
f01026d0	obj/kern/kernel.asm	/^f01026d0:	c7 44 24 04 ea 03 00 	movl   $0x3ea,0x4(%esp)$/;"	l
f01026d7	obj/kern/kernel.asm	/^f01026d7:	00 $/;"	l
f01026d8	obj/kern/kernel.asm	/^f01026d8:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f01026df	obj/kern/kernel.asm	/^f01026df:	e8 5c d9 ff ff       	call   f0100040 <_panic>$/;"	l
f01026e4	obj/kern/kernel.asm	/^f01026e4:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f01026eb	obj/kern/kernel.asm	/^f01026eb:	00 $/;"	l
f01026ec	obj/kern/kernel.asm	/^f01026ec:	a1 98 8e 2b f0       	mov    0xf02b8e98,%eax$/;"	l
f01026f1	obj/kern/kernel.asm	/^f01026f1:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01026f4	obj/kern/kernel.asm	/^f01026f4:	e8 39 ed ff ff       	call   f0101432 <page_remove>$/;"	l
f01026f9	obj/kern/kernel.asm	/^f01026f9:	8b 3d 98 8e 2b f0    	mov    0xf02b8e98,%edi$/;"	l
f01026ff	obj/kern/kernel.asm	/^f01026ff:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0102704	obj/kern/kernel.asm	/^f0102704:	89 f8                	mov    %edi,%eax$/;"	l
f0102706	obj/kern/kernel.asm	/^f0102706:	e8 ea e4 ff ff       	call   f0100bf5 <check_va2pa>$/;"	l
f010270b	obj/kern/kernel.asm	/^f010270b:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f010270e	obj/kern/kernel.asm	/^f010270e:	74 24                	je     f0102734 <mem_init+0x11b1>$/;"	l
f0102710	obj/kern/kernel.asm	/^f0102710:	c7 44 24 0c 70 85 10 	movl   $0xf0108570,0xc(%esp)$/;"	l
f0102717	obj/kern/kernel.asm	/^f0102717:	f0 $/;"	l
f0102718	obj/kern/kernel.asm	/^f0102718:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f010271f	obj/kern/kernel.asm	/^f010271f:	f0 $/;"	l
f0102720	obj/kern/kernel.asm	/^f0102720:	c7 44 24 04 ee 03 00 	movl   $0x3ee,0x4(%esp)$/;"	l
f0102727	obj/kern/kernel.asm	/^f0102727:	00 $/;"	l
f0102728	obj/kern/kernel.asm	/^f0102728:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f010272f	obj/kern/kernel.asm	/^f010272f:	e8 0c d9 ff ff       	call   f0100040 <_panic>$/;"	l
f0102734	obj/kern/kernel.asm	/^f0102734:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102739	obj/kern/kernel.asm	/^f0102739:	89 f8                	mov    %edi,%eax$/;"	l
f010273b	obj/kern/kernel.asm	/^f010273b:	e8 b5 e4 ff ff       	call   f0100bf5 <check_va2pa>$/;"	l
f0102740	obj/kern/kernel.asm	/^f0102740:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102743	obj/kern/kernel.asm	/^f0102743:	74 24                	je     f0102769 <mem_init+0x11e6>$/;"	l
f0102745	obj/kern/kernel.asm	/^f0102745:	c7 44 24 0c cc 85 10 	movl   $0xf01085cc,0xc(%esp)$/;"	l
f010274c	obj/kern/kernel.asm	/^f010274c:	f0 $/;"	l
f010274d	obj/kern/kernel.asm	/^f010274d:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f0102754	obj/kern/kernel.asm	/^f0102754:	f0 $/;"	l
f0102755	obj/kern/kernel.asm	/^f0102755:	c7 44 24 04 ef 03 00 	movl   $0x3ef,0x4(%esp)$/;"	l
f010275c	obj/kern/kernel.asm	/^f010275c:	00 $/;"	l
f010275d	obj/kern/kernel.asm	/^f010275d:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0102764	obj/kern/kernel.asm	/^f0102764:	e8 d7 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f0102769	obj/kern/kernel.asm	/^f0102769:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
f010276e	obj/kern/kernel.asm	/^f010276e:	74 24                	je     f0102794 <mem_init+0x1211>$/;"	l
f0102770	obj/kern/kernel.asm	/^f0102770:	c7 44 24 0c 32 8c 10 	movl   $0xf0108c32,0xc(%esp)$/;"	l
f0102777	obj/kern/kernel.asm	/^f0102777:	f0 $/;"	l
f0102778	obj/kern/kernel.asm	/^f0102778:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f010277f	obj/kern/kernel.asm	/^f010277f:	f0 $/;"	l
f0102780	obj/kern/kernel.asm	/^f0102780:	c7 44 24 04 f0 03 00 	movl   $0x3f0,0x4(%esp)$/;"	l
f0102787	obj/kern/kernel.asm	/^f0102787:	00 $/;"	l
f0102788	obj/kern/kernel.asm	/^f0102788:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f010278f	obj/kern/kernel.asm	/^f010278f:	e8 ac d8 ff ff       	call   f0100040 <_panic>$/;"	l
f0102794	obj/kern/kernel.asm	/^f0102794:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f0102799	obj/kern/kernel.asm	/^f0102799:	74 24                	je     f01027bf <mem_init+0x123c>$/;"	l
f010279b	obj/kern/kernel.asm	/^f010279b:	c7 44 24 0c 00 8c 10 	movl   $0xf0108c00,0xc(%esp)$/;"	l
f01027a2	obj/kern/kernel.asm	/^f01027a2:	f0 $/;"	l
f01027a3	obj/kern/kernel.asm	/^f01027a3:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f01027aa	obj/kern/kernel.asm	/^f01027aa:	f0 $/;"	l
f01027ab	obj/kern/kernel.asm	/^f01027ab:	c7 44 24 04 f1 03 00 	movl   $0x3f1,0x4(%esp)$/;"	l
f01027b2	obj/kern/kernel.asm	/^f01027b2:	00 $/;"	l
f01027b3	obj/kern/kernel.asm	/^f01027b3:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f01027ba	obj/kern/kernel.asm	/^f01027ba:	e8 81 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f01027bf	obj/kern/kernel.asm	/^f01027bf:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01027c6	obj/kern/kernel.asm	/^f01027c6:	e8 70 e9 ff ff       	call   f010113b <page_alloc>$/;"	l
f01027cb	obj/kern/kernel.asm	/^f01027cb:	85 c0                	test   %eax,%eax$/;"	l
f01027cd	obj/kern/kernel.asm	/^f01027cd:	74 04                	je     f01027d3 <mem_init+0x1250>$/;"	l
f01027cf	obj/kern/kernel.asm	/^f01027cf:	39 c3                	cmp    %eax,%ebx$/;"	l
f01027d1	obj/kern/kernel.asm	/^f01027d1:	74 24                	je     f01027f7 <mem_init+0x1274>$/;"	l
f01027d3	obj/kern/kernel.asm	/^f01027d3:	c7 44 24 0c f4 85 10 	movl   $0xf01085f4,0xc(%esp)$/;"	l
f01027da	obj/kern/kernel.asm	/^f01027da:	f0 $/;"	l
f01027db	obj/kern/kernel.asm	/^f01027db:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f01027e2	obj/kern/kernel.asm	/^f01027e2:	f0 $/;"	l
f01027e3	obj/kern/kernel.asm	/^f01027e3:	c7 44 24 04 f4 03 00 	movl   $0x3f4,0x4(%esp)$/;"	l
f01027ea	obj/kern/kernel.asm	/^f01027ea:	00 $/;"	l
f01027eb	obj/kern/kernel.asm	/^f01027eb:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f01027f2	obj/kern/kernel.asm	/^f01027f2:	e8 49 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f01027f7	obj/kern/kernel.asm	/^f01027f7:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01027fe	obj/kern/kernel.asm	/^f01027fe:	e8 38 e9 ff ff       	call   f010113b <page_alloc>$/;"	l
f0102803	obj/kern/kernel.asm	/^f0102803:	85 c0                	test   %eax,%eax$/;"	l
f0102805	obj/kern/kernel.asm	/^f0102805:	74 24                	je     f010282b <mem_init+0x12a8>$/;"	l
f0102807	obj/kern/kernel.asm	/^f0102807:	c7 44 24 0c 54 8b 10 	movl   $0xf0108b54,0xc(%esp)$/;"	l
f010280e	obj/kern/kernel.asm	/^f010280e:	f0 $/;"	l
f010280f	obj/kern/kernel.asm	/^f010280f:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f0102816	obj/kern/kernel.asm	/^f0102816:	f0 $/;"	l
f0102817	obj/kern/kernel.asm	/^f0102817:	c7 44 24 04 f7 03 00 	movl   $0x3f7,0x4(%esp)$/;"	l
f010281e	obj/kern/kernel.asm	/^f010281e:	00 $/;"	l
f010281f	obj/kern/kernel.asm	/^f010281f:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0102826	obj/kern/kernel.asm	/^f0102826:	e8 15 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f010282b	obj/kern/kernel.asm	/^f010282b:	a1 98 8e 2b f0       	mov    0xf02b8e98,%eax$/;"	l
f0102830	obj/kern/kernel.asm	/^f0102830:	8b 08                	mov    (%eax),%ecx$/;"	l
f0102832	obj/kern/kernel.asm	/^f0102832:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f0102838	obj/kern/kernel.asm	/^f0102838:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f010283b	obj/kern/kernel.asm	/^f010283b:	2b 15 9c 8e 2b f0    	sub    0xf02b8e9c,%edx$/;"	l
f0102841	obj/kern/kernel.asm	/^f0102841:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0102844	obj/kern/kernel.asm	/^f0102844:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102847	obj/kern/kernel.asm	/^f0102847:	39 d1                	cmp    %edx,%ecx$/;"	l
f0102849	obj/kern/kernel.asm	/^f0102849:	74 24                	je     f010286f <mem_init+0x12ec>$/;"	l
f010284b	obj/kern/kernel.asm	/^f010284b:	c7 44 24 0c 98 82 10 	movl   $0xf0108298,0xc(%esp)$/;"	l
f0102852	obj/kern/kernel.asm	/^f0102852:	f0 $/;"	l
f0102853	obj/kern/kernel.asm	/^f0102853:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f010285a	obj/kern/kernel.asm	/^f010285a:	f0 $/;"	l
f010285b	obj/kern/kernel.asm	/^f010285b:	c7 44 24 04 fa 03 00 	movl   $0x3fa,0x4(%esp)$/;"	l
f0102862	obj/kern/kernel.asm	/^f0102862:	00 $/;"	l
f0102863	obj/kern/kernel.asm	/^f0102863:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f010286a	obj/kern/kernel.asm	/^f010286a:	e8 d1 d7 ff ff       	call   f0100040 <_panic>$/;"	l
f010286f	obj/kern/kernel.asm	/^f010286f:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102875	obj/kern/kernel.asm	/^f0102875:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102878	obj/kern/kernel.asm	/^f0102878:	66 83 78 04 01       	cmpw   $0x1,0x4(%eax)$/;"	l
f010287d	obj/kern/kernel.asm	/^f010287d:	74 24                	je     f01028a3 <mem_init+0x1320>$/;"	l
f010287f	obj/kern/kernel.asm	/^f010287f:	c7 44 24 0c b7 8b 10 	movl   $0xf0108bb7,0xc(%esp)$/;"	l
f0102886	obj/kern/kernel.asm	/^f0102886:	f0 $/;"	l
f0102887	obj/kern/kernel.asm	/^f0102887:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f010288e	obj/kern/kernel.asm	/^f010288e:	f0 $/;"	l
f010288f	obj/kern/kernel.asm	/^f010288f:	c7 44 24 04 fc 03 00 	movl   $0x3fc,0x4(%esp)$/;"	l
f0102896	obj/kern/kernel.asm	/^f0102896:	00 $/;"	l
f0102897	obj/kern/kernel.asm	/^f0102897:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f010289e	obj/kern/kernel.asm	/^f010289e:	e8 9d d7 ff ff       	call   f0100040 <_panic>$/;"	l
f01028a3	obj/kern/kernel.asm	/^f01028a3:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01028a6	obj/kern/kernel.asm	/^f01028a6:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f01028ac	obj/kern/kernel.asm	/^f01028ac:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01028af	obj/kern/kernel.asm	/^f01028af:	e8 17 e9 ff ff       	call   f01011cb <page_free>$/;"	l
f01028b4	obj/kern/kernel.asm	/^f01028b4:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f01028bb	obj/kern/kernel.asm	/^f01028bb:	00 $/;"	l
f01028bc	obj/kern/kernel.asm	/^f01028bc:	c7 44 24 04 00 10 40 	movl   $0x401000,0x4(%esp)$/;"	l
f01028c3	obj/kern/kernel.asm	/^f01028c3:	00 $/;"	l
f01028c4	obj/kern/kernel.asm	/^f01028c4:	a1 98 8e 2b f0       	mov    0xf02b8e98,%eax$/;"	l
f01028c9	obj/kern/kernel.asm	/^f01028c9:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01028cc	obj/kern/kernel.asm	/^f01028cc:	e8 79 e9 ff ff       	call   f010124a <pgdir_walk>$/;"	l
f01028d1	obj/kern/kernel.asm	/^f01028d1:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f01028d4	obj/kern/kernel.asm	/^f01028d4:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01028d7	obj/kern/kernel.asm	/^f01028d7:	8b 15 98 8e 2b f0    	mov    0xf02b8e98,%edx$/;"	l
f01028dd	obj/kern/kernel.asm	/^f01028dd:	8b 7a 04             	mov    0x4(%edx),%edi$/;"	l
f01028e0	obj/kern/kernel.asm	/^f01028e0:	81 e7 00 f0 ff ff    	and    $0xfffff000,%edi$/;"	l
f01028e6	obj/kern/kernel.asm	/^f01028e6:	8b 0d 94 8e 2b f0    	mov    0xf02b8e94,%ecx$/;"	l
f01028ec	obj/kern/kernel.asm	/^f01028ec:	89 f8                	mov    %edi,%eax$/;"	l
f01028ee	obj/kern/kernel.asm	/^f01028ee:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f01028f1	obj/kern/kernel.asm	/^f01028f1:	39 c8                	cmp    %ecx,%eax$/;"	l
f01028f3	obj/kern/kernel.asm	/^f01028f3:	72 20                	jb     f0102915 <mem_init+0x1392>$/;"	l
f01028f5	obj/kern/kernel.asm	/^f01028f5:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f01028f9	obj/kern/kernel.asm	/^f01028f9:	c7 44 24 08 44 7a 10 	movl   $0xf0107a44,0x8(%esp)$/;"	l
f0102900	obj/kern/kernel.asm	/^f0102900:	f0 $/;"	l
f0102901	obj/kern/kernel.asm	/^f0102901:	c7 44 24 04 03 04 00 	movl   $0x403,0x4(%esp)$/;"	l
f0102908	obj/kern/kernel.asm	/^f0102908:	00 $/;"	l
f0102909	obj/kern/kernel.asm	/^f0102909:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0102910	obj/kern/kernel.asm	/^f0102910:	e8 2b d7 ff ff       	call   f0100040 <_panic>$/;"	l
f0102915	obj/kern/kernel.asm	/^f0102915:	81 ef fc ff ff 0f    	sub    $0xffffffc,%edi$/;"	l
f010291b	obj/kern/kernel.asm	/^f010291b:	39 7d cc             	cmp    %edi,-0x34(%ebp)$/;"	l
f010291e	obj/kern/kernel.asm	/^f010291e:	74 24                	je     f0102944 <mem_init+0x13c1>$/;"	l
f0102920	obj/kern/kernel.asm	/^f0102920:	c7 44 24 0c 43 8c 10 	movl   $0xf0108c43,0xc(%esp)$/;"	l
f0102927	obj/kern/kernel.asm	/^f0102927:	f0 $/;"	l
f0102928	obj/kern/kernel.asm	/^f0102928:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f010292f	obj/kern/kernel.asm	/^f010292f:	f0 $/;"	l
f0102930	obj/kern/kernel.asm	/^f0102930:	c7 44 24 04 04 04 00 	movl   $0x404,0x4(%esp)$/;"	l
f0102937	obj/kern/kernel.asm	/^f0102937:	00 $/;"	l
f0102938	obj/kern/kernel.asm	/^f0102938:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f010293f	obj/kern/kernel.asm	/^f010293f:	e8 fc d6 ff ff       	call   f0100040 <_panic>$/;"	l
f0102944	obj/kern/kernel.asm	/^f0102944:	c7 42 04 00 00 00 00 	movl   $0x0,0x4(%edx)$/;"	l
f010294b	obj/kern/kernel.asm	/^f010294b:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010294e	obj/kern/kernel.asm	/^f010294e:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f0102954	obj/kern/kernel.asm	/^f0102954:	2b 05 9c 8e 2b f0    	sub    0xf02b8e9c,%eax$/;"	l
f010295a	obj/kern/kernel.asm	/^f010295a:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f010295d	obj/kern/kernel.asm	/^f010295d:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102960	obj/kern/kernel.asm	/^f0102960:	89 c2                	mov    %eax,%edx$/;"	l
f0102962	obj/kern/kernel.asm	/^f0102962:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0102965	obj/kern/kernel.asm	/^f0102965:	39 d1                	cmp    %edx,%ecx$/;"	l
f0102967	obj/kern/kernel.asm	/^f0102967:	77 20                	ja     f0102989 <mem_init+0x1406>$/;"	l
f0102969	obj/kern/kernel.asm	/^f0102969:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010296d	obj/kern/kernel.asm	/^f010296d:	c7 44 24 08 44 7a 10 	movl   $0xf0107a44,0x8(%esp)$/;"	l
f0102974	obj/kern/kernel.asm	/^f0102974:	f0 $/;"	l
f0102975	obj/kern/kernel.asm	/^f0102975:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f010297c	obj/kern/kernel.asm	/^f010297c:	00 $/;"	l
f010297d	obj/kern/kernel.asm	/^f010297d:	c7 04 24 9d 89 10 f0 	movl   $0xf010899d,(%esp)$/;"	l
f0102984	obj/kern/kernel.asm	/^f0102984:	e8 b7 d6 ff ff       	call   f0100040 <_panic>$/;"	l
f0102989	obj/kern/kernel.asm	/^f0102989:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0102990	obj/kern/kernel.asm	/^f0102990:	00 $/;"	l
f0102991	obj/kern/kernel.asm	/^f0102991:	c7 44 24 04 ff 00 00 	movl   $0xff,0x4(%esp)$/;"	l
f0102998	obj/kern/kernel.asm	/^f0102998:	00 $/;"	l
f0102999	obj/kern/kernel.asm	/^f0102999:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f010299e	obj/kern/kernel.asm	/^f010299e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01029a1	obj/kern/kernel.asm	/^f01029a1:	e8 81 3a 00 00       	call   f0106427 <memset>$/;"	l
f01029a6	obj/kern/kernel.asm	/^f01029a6:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f01029a9	obj/kern/kernel.asm	/^f01029a9:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f01029ac	obj/kern/kernel.asm	/^f01029ac:	e8 1a e8 ff ff       	call   f01011cb <page_free>$/;"	l
f01029b1	obj/kern/kernel.asm	/^f01029b1:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f01029b8	obj/kern/kernel.asm	/^f01029b8:	00 $/;"	l
f01029b9	obj/kern/kernel.asm	/^f01029b9:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01029c0	obj/kern/kernel.asm	/^f01029c0:	00 $/;"	l
f01029c1	obj/kern/kernel.asm	/^f01029c1:	a1 98 8e 2b f0       	mov    0xf02b8e98,%eax$/;"	l
f01029c6	obj/kern/kernel.asm	/^f01029c6:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01029c9	obj/kern/kernel.asm	/^f01029c9:	e8 7c e8 ff ff       	call   f010124a <pgdir_walk>$/;"	l
f01029ce	obj/kern/kernel.asm	/^f01029ce:	89 fa                	mov    %edi,%edx$/;"	l
f01029d0	obj/kern/kernel.asm	/^f01029d0:	2b 15 9c 8e 2b f0    	sub    0xf02b8e9c,%edx$/;"	l
f01029d6	obj/kern/kernel.asm	/^f01029d6:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01029d9	obj/kern/kernel.asm	/^f01029d9:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01029dc	obj/kern/kernel.asm	/^f01029dc:	89 d0                	mov    %edx,%eax$/;"	l
f01029de	obj/kern/kernel.asm	/^f01029de:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f01029e1	obj/kern/kernel.asm	/^f01029e1:	3b 05 94 8e 2b f0    	cmp    0xf02b8e94,%eax$/;"	l
f01029e7	obj/kern/kernel.asm	/^f01029e7:	72 20                	jb     f0102a09 <mem_init+0x1486>$/;"	l
f01029e9	obj/kern/kernel.asm	/^f01029e9:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f01029ed	obj/kern/kernel.asm	/^f01029ed:	c7 44 24 08 44 7a 10 	movl   $0xf0107a44,0x8(%esp)$/;"	l
f01029f4	obj/kern/kernel.asm	/^f01029f4:	f0 $/;"	l
f01029f5	obj/kern/kernel.asm	/^f01029f5:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f01029fc	obj/kern/kernel.asm	/^f01029fc:	00 $/;"	l
f01029fd	obj/kern/kernel.asm	/^f01029fd:	c7 04 24 9d 89 10 f0 	movl   $0xf010899d,(%esp)$/;"	l
f0102a04	obj/kern/kernel.asm	/^f0102a04:	e8 37 d6 ff ff       	call   f0100040 <_panic>$/;"	l
f0102a09	obj/kern/kernel.asm	/^f0102a09:	8d 82 00 00 00 f0    	lea    -0x10000000(%edx),%eax$/;"	l
f0102a0f	obj/kern/kernel.asm	/^f0102a0f:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0102a12	obj/kern/kernel.asm	/^f0102a12:	81 ea 00 f0 ff 0f    	sub    $0xffff000,%edx$/;"	l
f0102a18	obj/kern/kernel.asm	/^f0102a18:	f6 00 01             	testb  $0x1,(%eax)$/;"	l
f0102a1b	obj/kern/kernel.asm	/^f0102a1b:	74 24                	je     f0102a41 <mem_init+0x14be>$/;"	l
f0102a1d	obj/kern/kernel.asm	/^f0102a1d:	c7 44 24 0c 5b 8c 10 	movl   $0xf0108c5b,0xc(%esp)$/;"	l
f0102a24	obj/kern/kernel.asm	/^f0102a24:	f0 $/;"	l
f0102a25	obj/kern/kernel.asm	/^f0102a25:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f0102a2c	obj/kern/kernel.asm	/^f0102a2c:	f0 $/;"	l
f0102a2d	obj/kern/kernel.asm	/^f0102a2d:	c7 44 24 04 0e 04 00 	movl   $0x40e,0x4(%esp)$/;"	l
f0102a34	obj/kern/kernel.asm	/^f0102a34:	00 $/;"	l
f0102a35	obj/kern/kernel.asm	/^f0102a35:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0102a3c	obj/kern/kernel.asm	/^f0102a3c:	e8 ff d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102a41	obj/kern/kernel.asm	/^f0102a41:	83 c0 04             	add    $0x4,%eax$/;"	l
f0102a44	obj/kern/kernel.asm	/^f0102a44:	39 d0                	cmp    %edx,%eax$/;"	l
f0102a46	obj/kern/kernel.asm	/^f0102a46:	75 d0                	jne    f0102a18 <mem_init+0x1495>$/;"	l
f0102a48	obj/kern/kernel.asm	/^f0102a48:	a1 98 8e 2b f0       	mov    0xf02b8e98,%eax$/;"	l
f0102a4d	obj/kern/kernel.asm	/^f0102a4d:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102a53	obj/kern/kernel.asm	/^f0102a53:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102a56	obj/kern/kernel.asm	/^f0102a56:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f0102a5c	obj/kern/kernel.asm	/^f0102a5c:	8b 4d d0             	mov    -0x30(%ebp),%ecx$/;"	l
f0102a5f	obj/kern/kernel.asm	/^f0102a5f:	89 0d 40 82 2b f0    	mov    %ecx,0xf02b8240$/;"	l
f0102a65	obj/kern/kernel.asm	/^f0102a65:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102a68	obj/kern/kernel.asm	/^f0102a68:	e8 5e e7 ff ff       	call   f01011cb <page_free>$/;"	l
f0102a6d	obj/kern/kernel.asm	/^f0102a6d:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0102a70	obj/kern/kernel.asm	/^f0102a70:	e8 56 e7 ff ff       	call   f01011cb <page_free>$/;"	l
f0102a75	obj/kern/kernel.asm	/^f0102a75:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0102a78	obj/kern/kernel.asm	/^f0102a78:	e8 4e e7 ff ff       	call   f01011cb <page_free>$/;"	l
f0102a7d	obj/kern/kernel.asm	/^f0102a7d:	c7 44 24 04 01 10 00 	movl   $0x1001,0x4(%esp)$/;"	l
f0102a84	obj/kern/kernel.asm	/^f0102a84:	00 $/;"	l
f0102a85	obj/kern/kernel.asm	/^f0102a85:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102a8c	obj/kern/kernel.asm	/^f0102a8c:	e8 84 ea ff ff       	call   f0101515 <mmio_map_region>$/;"	l
f0102a91	obj/kern/kernel.asm	/^f0102a91:	89 c3                	mov    %eax,%ebx$/;"	l
f0102a93	obj/kern/kernel.asm	/^f0102a93:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0102a9a	obj/kern/kernel.asm	/^f0102a9a:	00 $/;"	l
f0102a9b	obj/kern/kernel.asm	/^f0102a9b:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102aa2	obj/kern/kernel.asm	/^f0102aa2:	e8 6e ea ff ff       	call   f0101515 <mmio_map_region>$/;"	l
f0102aa7	obj/kern/kernel.asm	/^f0102aa7:	89 c6                	mov    %eax,%esi$/;"	l
f0102aa9	obj/kern/kernel.asm	/^f0102aa9:	8d 83 a0 1f 00 00    	lea    0x1fa0(%ebx),%eax$/;"	l
f0102aaf	obj/kern/kernel.asm	/^f0102aaf:	3d ff ff bf ef       	cmp    $0xefbfffff,%eax$/;"	l
f0102ab4	obj/kern/kernel.asm	/^f0102ab4:	77 08                	ja     f0102abe <mem_init+0x153b>$/;"	l
f0102ab6	obj/kern/kernel.asm	/^f0102ab6:	81 fb ff ff 7f ef    	cmp    $0xef7fffff,%ebx$/;"	l
f0102abc	obj/kern/kernel.asm	/^f0102abc:	77 24                	ja     f0102ae2 <mem_init+0x155f>$/;"	l
f0102abe	obj/kern/kernel.asm	/^f0102abe:	c7 44 24 0c 18 86 10 	movl   $0xf0108618,0xc(%esp)$/;"	l
f0102ac5	obj/kern/kernel.asm	/^f0102ac5:	f0 $/;"	l
f0102ac6	obj/kern/kernel.asm	/^f0102ac6:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f0102acd	obj/kern/kernel.asm	/^f0102acd:	f0 $/;"	l
f0102ace	obj/kern/kernel.asm	/^f0102ace:	c7 44 24 04 1e 04 00 	movl   $0x41e,0x4(%esp)$/;"	l
f0102ad5	obj/kern/kernel.asm	/^f0102ad5:	00 $/;"	l
f0102ad6	obj/kern/kernel.asm	/^f0102ad6:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0102add	obj/kern/kernel.asm	/^f0102add:	e8 5e d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102ae2	obj/kern/kernel.asm	/^f0102ae2:	8d 96 a0 1f 00 00    	lea    0x1fa0(%esi),%edx$/;"	l
f0102ae8	obj/kern/kernel.asm	/^f0102ae8:	81 fa ff ff bf ef    	cmp    $0xefbfffff,%edx$/;"	l
f0102aee	obj/kern/kernel.asm	/^f0102aee:	77 08                	ja     f0102af8 <mem_init+0x1575>$/;"	l
f0102af0	obj/kern/kernel.asm	/^f0102af0:	81 fe ff ff 7f ef    	cmp    $0xef7fffff,%esi$/;"	l
f0102af6	obj/kern/kernel.asm	/^f0102af6:	77 24                	ja     f0102b1c <mem_init+0x1599>$/;"	l
f0102af8	obj/kern/kernel.asm	/^f0102af8:	c7 44 24 0c 40 86 10 	movl   $0xf0108640,0xc(%esp)$/;"	l
f0102aff	obj/kern/kernel.asm	/^f0102aff:	f0 $/;"	l
f0102b00	obj/kern/kernel.asm	/^f0102b00:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f0102b07	obj/kern/kernel.asm	/^f0102b07:	f0 $/;"	l
f0102b08	obj/kern/kernel.asm	/^f0102b08:	c7 44 24 04 1f 04 00 	movl   $0x41f,0x4(%esp)$/;"	l
f0102b0f	obj/kern/kernel.asm	/^f0102b0f:	00 $/;"	l
f0102b10	obj/kern/kernel.asm	/^f0102b10:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0102b17	obj/kern/kernel.asm	/^f0102b17:	e8 24 d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102b1c	obj/kern/kernel.asm	/^f0102b1c:	89 da                	mov    %ebx,%edx$/;"	l
f0102b1e	obj/kern/kernel.asm	/^f0102b1e:	09 f2                	or     %esi,%edx$/;"	l
f0102b20	obj/kern/kernel.asm	/^f0102b20:	f7 c2 ff 0f 00 00    	test   $0xfff,%edx$/;"	l
f0102b26	obj/kern/kernel.asm	/^f0102b26:	74 24                	je     f0102b4c <mem_init+0x15c9>$/;"	l
f0102b28	obj/kern/kernel.asm	/^f0102b28:	c7 44 24 0c 68 86 10 	movl   $0xf0108668,0xc(%esp)$/;"	l
f0102b2f	obj/kern/kernel.asm	/^f0102b2f:	f0 $/;"	l
f0102b30	obj/kern/kernel.asm	/^f0102b30:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f0102b37	obj/kern/kernel.asm	/^f0102b37:	f0 $/;"	l
f0102b38	obj/kern/kernel.asm	/^f0102b38:	c7 44 24 04 21 04 00 	movl   $0x421,0x4(%esp)$/;"	l
f0102b3f	obj/kern/kernel.asm	/^f0102b3f:	00 $/;"	l
f0102b40	obj/kern/kernel.asm	/^f0102b40:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0102b47	obj/kern/kernel.asm	/^f0102b47:	e8 f4 d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102b4c	obj/kern/kernel.asm	/^f0102b4c:	39 c6                	cmp    %eax,%esi$/;"	l
f0102b4e	obj/kern/kernel.asm	/^f0102b4e:	73 24                	jae    f0102b74 <mem_init+0x15f1>$/;"	l
f0102b50	obj/kern/kernel.asm	/^f0102b50:	c7 44 24 0c 72 8c 10 	movl   $0xf0108c72,0xc(%esp)$/;"	l
f0102b57	obj/kern/kernel.asm	/^f0102b57:	f0 $/;"	l
f0102b58	obj/kern/kernel.asm	/^f0102b58:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f0102b5f	obj/kern/kernel.asm	/^f0102b5f:	f0 $/;"	l
f0102b60	obj/kern/kernel.asm	/^f0102b60:	c7 44 24 04 23 04 00 	movl   $0x423,0x4(%esp)$/;"	l
f0102b67	obj/kern/kernel.asm	/^f0102b67:	00 $/;"	l
f0102b68	obj/kern/kernel.asm	/^f0102b68:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0102b6f	obj/kern/kernel.asm	/^f0102b6f:	e8 cc d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102b74	obj/kern/kernel.asm	/^f0102b74:	8b 3d 98 8e 2b f0    	mov    0xf02b8e98,%edi$/;"	l
f0102b7a	obj/kern/kernel.asm	/^f0102b7a:	89 da                	mov    %ebx,%edx$/;"	l
f0102b7c	obj/kern/kernel.asm	/^f0102b7c:	89 f8                	mov    %edi,%eax$/;"	l
f0102b7e	obj/kern/kernel.asm	/^f0102b7e:	e8 72 e0 ff ff       	call   f0100bf5 <check_va2pa>$/;"	l
f0102b83	obj/kern/kernel.asm	/^f0102b83:	85 c0                	test   %eax,%eax$/;"	l
f0102b85	obj/kern/kernel.asm	/^f0102b85:	74 24                	je     f0102bab <mem_init+0x1628>$/;"	l
f0102b87	obj/kern/kernel.asm	/^f0102b87:	c7 44 24 0c 90 86 10 	movl   $0xf0108690,0xc(%esp)$/;"	l
f0102b8e	obj/kern/kernel.asm	/^f0102b8e:	f0 $/;"	l
f0102b8f	obj/kern/kernel.asm	/^f0102b8f:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f0102b96	obj/kern/kernel.asm	/^f0102b96:	f0 $/;"	l
f0102b97	obj/kern/kernel.asm	/^f0102b97:	c7 44 24 04 25 04 00 	movl   $0x425,0x4(%esp)$/;"	l
f0102b9e	obj/kern/kernel.asm	/^f0102b9e:	00 $/;"	l
f0102b9f	obj/kern/kernel.asm	/^f0102b9f:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0102ba6	obj/kern/kernel.asm	/^f0102ba6:	e8 95 d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102bab	obj/kern/kernel.asm	/^f0102bab:	8d 83 00 10 00 00    	lea    0x1000(%ebx),%eax$/;"	l
f0102bb1	obj/kern/kernel.asm	/^f0102bb1:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0102bb4	obj/kern/kernel.asm	/^f0102bb4:	89 c2                	mov    %eax,%edx$/;"	l
f0102bb6	obj/kern/kernel.asm	/^f0102bb6:	89 f8                	mov    %edi,%eax$/;"	l
f0102bb8	obj/kern/kernel.asm	/^f0102bb8:	e8 38 e0 ff ff       	call   f0100bf5 <check_va2pa>$/;"	l
f0102bbd	obj/kern/kernel.asm	/^f0102bbd:	3d 00 10 00 00       	cmp    $0x1000,%eax$/;"	l
f0102bc2	obj/kern/kernel.asm	/^f0102bc2:	74 24                	je     f0102be8 <mem_init+0x1665>$/;"	l
f0102bc4	obj/kern/kernel.asm	/^f0102bc4:	c7 44 24 0c b4 86 10 	movl   $0xf01086b4,0xc(%esp)$/;"	l
f0102bcb	obj/kern/kernel.asm	/^f0102bcb:	f0 $/;"	l
f0102bcc	obj/kern/kernel.asm	/^f0102bcc:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f0102bd3	obj/kern/kernel.asm	/^f0102bd3:	f0 $/;"	l
f0102bd4	obj/kern/kernel.asm	/^f0102bd4:	c7 44 24 04 26 04 00 	movl   $0x426,0x4(%esp)$/;"	l
f0102bdb	obj/kern/kernel.asm	/^f0102bdb:	00 $/;"	l
f0102bdc	obj/kern/kernel.asm	/^f0102bdc:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0102be3	obj/kern/kernel.asm	/^f0102be3:	e8 58 d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102be8	obj/kern/kernel.asm	/^f0102be8:	89 f2                	mov    %esi,%edx$/;"	l
f0102bea	obj/kern/kernel.asm	/^f0102bea:	89 f8                	mov    %edi,%eax$/;"	l
f0102bec	obj/kern/kernel.asm	/^f0102bec:	e8 04 e0 ff ff       	call   f0100bf5 <check_va2pa>$/;"	l
f0102bf1	obj/kern/kernel.asm	/^f0102bf1:	85 c0                	test   %eax,%eax$/;"	l
f0102bf3	obj/kern/kernel.asm	/^f0102bf3:	74 24                	je     f0102c19 <mem_init+0x1696>$/;"	l
f0102bf5	obj/kern/kernel.asm	/^f0102bf5:	c7 44 24 0c e4 86 10 	movl   $0xf01086e4,0xc(%esp)$/;"	l
f0102bfc	obj/kern/kernel.asm	/^f0102bfc:	f0 $/;"	l
f0102bfd	obj/kern/kernel.asm	/^f0102bfd:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f0102c04	obj/kern/kernel.asm	/^f0102c04:	f0 $/;"	l
f0102c05	obj/kern/kernel.asm	/^f0102c05:	c7 44 24 04 27 04 00 	movl   $0x427,0x4(%esp)$/;"	l
f0102c0c	obj/kern/kernel.asm	/^f0102c0c:	00 $/;"	l
f0102c0d	obj/kern/kernel.asm	/^f0102c0d:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0102c14	obj/kern/kernel.asm	/^f0102c14:	e8 27 d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102c19	obj/kern/kernel.asm	/^f0102c19:	8d 96 00 10 00 00    	lea    0x1000(%esi),%edx$/;"	l
f0102c1f	obj/kern/kernel.asm	/^f0102c1f:	89 f8                	mov    %edi,%eax$/;"	l
f0102c21	obj/kern/kernel.asm	/^f0102c21:	e8 cf df ff ff       	call   f0100bf5 <check_va2pa>$/;"	l
f0102c26	obj/kern/kernel.asm	/^f0102c26:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102c29	obj/kern/kernel.asm	/^f0102c29:	74 24                	je     f0102c4f <mem_init+0x16cc>$/;"	l
f0102c2b	obj/kern/kernel.asm	/^f0102c2b:	c7 44 24 0c 08 87 10 	movl   $0xf0108708,0xc(%esp)$/;"	l
f0102c32	obj/kern/kernel.asm	/^f0102c32:	f0 $/;"	l
f0102c33	obj/kern/kernel.asm	/^f0102c33:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f0102c3a	obj/kern/kernel.asm	/^f0102c3a:	f0 $/;"	l
f0102c3b	obj/kern/kernel.asm	/^f0102c3b:	c7 44 24 04 28 04 00 	movl   $0x428,0x4(%esp)$/;"	l
f0102c42	obj/kern/kernel.asm	/^f0102c42:	00 $/;"	l
f0102c43	obj/kern/kernel.asm	/^f0102c43:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0102c4a	obj/kern/kernel.asm	/^f0102c4a:	e8 f1 d3 ff ff       	call   f0100040 <_panic>$/;"	l
f0102c4f	obj/kern/kernel.asm	/^f0102c4f:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0102c56	obj/kern/kernel.asm	/^f0102c56:	00 $/;"	l
f0102c57	obj/kern/kernel.asm	/^f0102c57:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0102c5b	obj/kern/kernel.asm	/^f0102c5b:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0102c5e	obj/kern/kernel.asm	/^f0102c5e:	e8 e7 e5 ff ff       	call   f010124a <pgdir_walk>$/;"	l
f0102c63	obj/kern/kernel.asm	/^f0102c63:	f6 00 1a             	testb  $0x1a,(%eax)$/;"	l
f0102c66	obj/kern/kernel.asm	/^f0102c66:	75 24                	jne    f0102c8c <mem_init+0x1709>$/;"	l
f0102c68	obj/kern/kernel.asm	/^f0102c68:	c7 44 24 0c 34 87 10 	movl   $0xf0108734,0xc(%esp)$/;"	l
f0102c6f	obj/kern/kernel.asm	/^f0102c6f:	f0 $/;"	l
f0102c70	obj/kern/kernel.asm	/^f0102c70:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f0102c77	obj/kern/kernel.asm	/^f0102c77:	f0 $/;"	l
f0102c78	obj/kern/kernel.asm	/^f0102c78:	c7 44 24 04 2a 04 00 	movl   $0x42a,0x4(%esp)$/;"	l
f0102c7f	obj/kern/kernel.asm	/^f0102c7f:	00 $/;"	l
f0102c80	obj/kern/kernel.asm	/^f0102c80:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0102c87	obj/kern/kernel.asm	/^f0102c87:	e8 b4 d3 ff ff       	call   f0100040 <_panic>$/;"	l
f0102c8c	obj/kern/kernel.asm	/^f0102c8c:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0102c93	obj/kern/kernel.asm	/^f0102c93:	00 $/;"	l
f0102c94	obj/kern/kernel.asm	/^f0102c94:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0102c98	obj/kern/kernel.asm	/^f0102c98:	a1 98 8e 2b f0       	mov    0xf02b8e98,%eax$/;"	l
f0102c9d	obj/kern/kernel.asm	/^f0102c9d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102ca0	obj/kern/kernel.asm	/^f0102ca0:	e8 a5 e5 ff ff       	call   f010124a <pgdir_walk>$/;"	l
f0102ca5	obj/kern/kernel.asm	/^f0102ca5:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0102ca8	obj/kern/kernel.asm	/^f0102ca8:	74 24                	je     f0102cce <mem_init+0x174b>$/;"	l
f0102caa	obj/kern/kernel.asm	/^f0102caa:	c7 44 24 0c 78 87 10 	movl   $0xf0108778,0xc(%esp)$/;"	l
f0102cb1	obj/kern/kernel.asm	/^f0102cb1:	f0 $/;"	l
f0102cb2	obj/kern/kernel.asm	/^f0102cb2:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f0102cb9	obj/kern/kernel.asm	/^f0102cb9:	f0 $/;"	l
f0102cba	obj/kern/kernel.asm	/^f0102cba:	c7 44 24 04 2b 04 00 	movl   $0x42b,0x4(%esp)$/;"	l
f0102cc1	obj/kern/kernel.asm	/^f0102cc1:	00 $/;"	l
f0102cc2	obj/kern/kernel.asm	/^f0102cc2:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0102cc9	obj/kern/kernel.asm	/^f0102cc9:	e8 72 d3 ff ff       	call   f0100040 <_panic>$/;"	l
f0102cce	obj/kern/kernel.asm	/^f0102cce:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0102cd5	obj/kern/kernel.asm	/^f0102cd5:	00 $/;"	l
f0102cd6	obj/kern/kernel.asm	/^f0102cd6:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0102cda	obj/kern/kernel.asm	/^f0102cda:	a1 98 8e 2b f0       	mov    0xf02b8e98,%eax$/;"	l
f0102cdf	obj/kern/kernel.asm	/^f0102cdf:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102ce2	obj/kern/kernel.asm	/^f0102ce2:	e8 63 e5 ff ff       	call   f010124a <pgdir_walk>$/;"	l
f0102ce7	obj/kern/kernel.asm	/^f0102ce7:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102ced	obj/kern/kernel.asm	/^f0102ced:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0102cf4	obj/kern/kernel.asm	/^f0102cf4:	00 $/;"	l
f0102cf5	obj/kern/kernel.asm	/^f0102cf5:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102cf8	obj/kern/kernel.asm	/^f0102cf8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0102cfc	obj/kern/kernel.asm	/^f0102cfc:	a1 98 8e 2b f0       	mov    0xf02b8e98,%eax$/;"	l
f0102d01	obj/kern/kernel.asm	/^f0102d01:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102d04	obj/kern/kernel.asm	/^f0102d04:	e8 41 e5 ff ff       	call   f010124a <pgdir_walk>$/;"	l
f0102d09	obj/kern/kernel.asm	/^f0102d09:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102d0f	obj/kern/kernel.asm	/^f0102d0f:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0102d16	obj/kern/kernel.asm	/^f0102d16:	00 $/;"	l
f0102d17	obj/kern/kernel.asm	/^f0102d17:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0102d1b	obj/kern/kernel.asm	/^f0102d1b:	a1 98 8e 2b f0       	mov    0xf02b8e98,%eax$/;"	l
f0102d20	obj/kern/kernel.asm	/^f0102d20:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102d23	obj/kern/kernel.asm	/^f0102d23:	e8 22 e5 ff ff       	call   f010124a <pgdir_walk>$/;"	l
f0102d28	obj/kern/kernel.asm	/^f0102d28:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102d2e	obj/kern/kernel.asm	/^f0102d2e:	c7 04 24 84 8c 10 f0 	movl   $0xf0108c84,(%esp)$/;"	l
f0102d35	obj/kern/kernel.asm	/^f0102d35:	e8 b2 12 00 00       	call   f0103fec <cprintf>$/;"	l
f0102d3a	obj/kern/kernel.asm	/^f0102d3a:	a1 9c 8e 2b f0       	mov    0xf02b8e9c,%eax$/;"	l
f0102d3f	obj/kern/kernel.asm	/^f0102d3f:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102d44	obj/kern/kernel.asm	/^f0102d44:	77 20                	ja     f0102d66 <mem_init+0x17e3>$/;"	l
f0102d46	obj/kern/kernel.asm	/^f0102d46:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102d4a	obj/kern/kernel.asm	/^f0102d4a:	c7 44 24 08 68 7a 10 	movl   $0xf0107a68,0x8(%esp)$/;"	l
f0102d51	obj/kern/kernel.asm	/^f0102d51:	f0 $/;"	l
f0102d52	obj/kern/kernel.asm	/^f0102d52:	c7 44 24 04 bd 00 00 	movl   $0xbd,0x4(%esp)$/;"	l
f0102d59	obj/kern/kernel.asm	/^f0102d59:	00 $/;"	l
f0102d5a	obj/kern/kernel.asm	/^f0102d5a:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0102d61	obj/kern/kernel.asm	/^f0102d61:	e8 da d2 ff ff       	call   f0100040 <_panic>$/;"	l
f0102d66	obj/kern/kernel.asm	/^f0102d66:	8b 15 94 8e 2b f0    	mov    0xf02b8e94,%edx$/;"	l
f0102d6c	obj/kern/kernel.asm	/^f0102d6c:	8d 0c d5 ff 0f 00 00 	lea    0xfff(,%edx,8),%ecx$/;"	l
f0102d73	obj/kern/kernel.asm	/^f0102d73:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f0102d79	obj/kern/kernel.asm	/^f0102d79:	c7 44 24 04 04 00 00 	movl   $0x4,0x4(%esp)$/;"	l
f0102d80	obj/kern/kernel.asm	/^f0102d80:	00 $/;"	l
f0102d81	obj/kern/kernel.asm	/^f0102d81:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0102d86	obj/kern/kernel.asm	/^f0102d86:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102d89	obj/kern/kernel.asm	/^f0102d89:	ba 00 00 00 ef       	mov    $0xef000000,%edx$/;"	l
f0102d8e	obj/kern/kernel.asm	/^f0102d8e:	a1 98 8e 2b f0       	mov    0xf02b8e98,%eax$/;"	l
f0102d93	obj/kern/kernel.asm	/^f0102d93:	e8 92 e5 ff ff       	call   f010132a <boot_map_region>$/;"	l
f0102d98	obj/kern/kernel.asm	/^f0102d98:	a1 48 82 2b f0       	mov    0xf02b8248,%eax$/;"	l
f0102d9d	obj/kern/kernel.asm	/^f0102d9d:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102da2	obj/kern/kernel.asm	/^f0102da2:	77 20                	ja     f0102dc4 <mem_init+0x1841>$/;"	l
f0102da4	obj/kern/kernel.asm	/^f0102da4:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102da8	obj/kern/kernel.asm	/^f0102da8:	c7 44 24 08 68 7a 10 	movl   $0xf0107a68,0x8(%esp)$/;"	l
f0102daf	obj/kern/kernel.asm	/^f0102daf:	f0 $/;"	l
f0102db0	obj/kern/kernel.asm	/^f0102db0:	c7 44 24 04 c6 00 00 	movl   $0xc6,0x4(%esp)$/;"	l
f0102db7	obj/kern/kernel.asm	/^f0102db7:	00 $/;"	l
f0102db8	obj/kern/kernel.asm	/^f0102db8:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0102dbf	obj/kern/kernel.asm	/^f0102dbf:	e8 7c d2 ff ff       	call   f0100040 <_panic>$/;"	l
f0102dc4	obj/kern/kernel.asm	/^f0102dc4:	c7 44 24 04 04 00 00 	movl   $0x4,0x4(%esp)$/;"	l
f0102dcb	obj/kern/kernel.asm	/^f0102dcb:	00 $/;"	l
f0102dcc	obj/kern/kernel.asm	/^f0102dcc:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0102dd1	obj/kern/kernel.asm	/^f0102dd1:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102dd4	obj/kern/kernel.asm	/^f0102dd4:	b9 00 f0 01 00       	mov    $0x1f000,%ecx$/;"	l
f0102dd9	obj/kern/kernel.asm	/^f0102dd9:	ba 00 00 c0 ee       	mov    $0xeec00000,%edx$/;"	l
f0102dde	obj/kern/kernel.asm	/^f0102dde:	a1 98 8e 2b f0       	mov    0xf02b8e98,%eax$/;"	l
f0102de3	obj/kern/kernel.asm	/^f0102de3:	e8 42 e5 ff ff       	call   f010132a <boot_map_region>$/;"	l
f0102de8	obj/kern/kernel.asm	/^f0102de8:	b8 00 a0 11 f0       	mov    $0xf011a000,%eax$/;"	l
f0102ded	obj/kern/kernel.asm	/^f0102ded:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102df2	obj/kern/kernel.asm	/^f0102df2:	77 20                	ja     f0102e14 <mem_init+0x1891>$/;"	l
f0102df4	obj/kern/kernel.asm	/^f0102df4:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102df8	obj/kern/kernel.asm	/^f0102df8:	c7 44 24 08 68 7a 10 	movl   $0xf0107a68,0x8(%esp)$/;"	l
f0102dff	obj/kern/kernel.asm	/^f0102dff:	f0 $/;"	l
f0102e00	obj/kern/kernel.asm	/^f0102e00:	c7 44 24 04 d3 00 00 	movl   $0xd3,0x4(%esp)$/;"	l
f0102e07	obj/kern/kernel.asm	/^f0102e07:	00 $/;"	l
f0102e08	obj/kern/kernel.asm	/^f0102e08:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0102e0f	obj/kern/kernel.asm	/^f0102e0f:	e8 2c d2 ff ff       	call   f0100040 <_panic>$/;"	l
f0102e14	obj/kern/kernel.asm	/^f0102e14:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
f0102e1b	obj/kern/kernel.asm	/^f0102e1b:	00 $/;"	l
f0102e1c	obj/kern/kernel.asm	/^f0102e1c:	c7 04 24 00 a0 11 00 	movl   $0x11a000,(%esp)$/;"	l
f0102e23	obj/kern/kernel.asm	/^f0102e23:	b9 00 80 00 00       	mov    $0x8000,%ecx$/;"	l
f0102e28	obj/kern/kernel.asm	/^f0102e28:	ba 00 80 ff ef       	mov    $0xefff8000,%edx$/;"	l
f0102e2d	obj/kern/kernel.asm	/^f0102e2d:	a1 98 8e 2b f0       	mov    0xf02b8e98,%eax$/;"	l
f0102e32	obj/kern/kernel.asm	/^f0102e32:	e8 f3 e4 ff ff       	call   f010132a <boot_map_region>$/;"	l
f0102e37	obj/kern/kernel.asm	/^f0102e37:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
f0102e3e	obj/kern/kernel.asm	/^f0102e3e:	00 $/;"	l
f0102e3f	obj/kern/kernel.asm	/^f0102e3f:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102e46	obj/kern/kernel.asm	/^f0102e46:	b9 ff ff ff 0f       	mov    $0xfffffff,%ecx$/;"	l
f0102e4b	obj/kern/kernel.asm	/^f0102e4b:	ba 00 00 00 f0       	mov    $0xf0000000,%edx$/;"	l
f0102e50	obj/kern/kernel.asm	/^f0102e50:	a1 98 8e 2b f0       	mov    0xf02b8e98,%eax$/;"	l
f0102e55	obj/kern/kernel.asm	/^f0102e55:	e8 d0 e4 ff ff       	call   f010132a <boot_map_region>$/;"	l
f0102e5a	obj/kern/kernel.asm	/^f0102e5a:	bf 00 a0 2f f0       	mov    $0xf02fa000,%edi$/;"	l
f0102e5f	obj/kern/kernel.asm	/^f0102e5f:	bb 00 a0 2b f0       	mov    $0xf02ba000,%ebx$/;"	l
f0102e64	obj/kern/kernel.asm	/^f0102e64:	be 00 80 ff ef       	mov    $0xefff8000,%esi$/;"	l
f0102e69	obj/kern/kernel.asm	/^f0102e69:	81 fb ff ff ff ef    	cmp    $0xefffffff,%ebx$/;"	l
f0102e6f	obj/kern/kernel.asm	/^f0102e6f:	77 20                	ja     f0102e91 <mem_init+0x190e>$/;"	l
f0102e71	obj/kern/kernel.asm	/^f0102e71:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f0102e75	obj/kern/kernel.asm	/^f0102e75:	c7 44 24 08 68 7a 10 	movl   $0xf0107a68,0x8(%esp)$/;"	l
f0102e7c	obj/kern/kernel.asm	/^f0102e7c:	f0 $/;"	l
f0102e7d	obj/kern/kernel.asm	/^f0102e7d:	c7 44 24 04 18 01 00 	movl   $0x118,0x4(%esp)$/;"	l
f0102e84	obj/kern/kernel.asm	/^f0102e84:	00 $/;"	l
f0102e85	obj/kern/kernel.asm	/^f0102e85:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0102e8c	obj/kern/kernel.asm	/^f0102e8c:	e8 af d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102e91	obj/kern/kernel.asm	/^f0102e91:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
f0102e98	obj/kern/kernel.asm	/^f0102e98:	00 $/;"	l
f0102e99	obj/kern/kernel.asm	/^f0102e99:	8d 83 00 00 00 10    	lea    0x10000000(%ebx),%eax$/;"	l
f0102e9f	obj/kern/kernel.asm	/^f0102e9f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102ea2	obj/kern/kernel.asm	/^f0102ea2:	b9 00 80 00 00       	mov    $0x8000,%ecx$/;"	l
f0102ea7	obj/kern/kernel.asm	/^f0102ea7:	89 f2                	mov    %esi,%edx$/;"	l
f0102ea9	obj/kern/kernel.asm	/^f0102ea9:	a1 98 8e 2b f0       	mov    0xf02b8e98,%eax$/;"	l
f0102eae	obj/kern/kernel.asm	/^f0102eae:	e8 77 e4 ff ff       	call   f010132a <boot_map_region>$/;"	l
f0102eb3	obj/kern/kernel.asm	/^f0102eb3:	81 c3 00 80 00 00    	add    $0x8000,%ebx$/;"	l
f0102eb9	obj/kern/kernel.asm	/^f0102eb9:	81 ee 00 00 01 00    	sub    $0x10000,%esi$/;"	l
f0102ebf	obj/kern/kernel.asm	/^f0102ebf:	39 fb                	cmp    %edi,%ebx$/;"	l
f0102ec1	obj/kern/kernel.asm	/^f0102ec1:	75 a6                	jne    f0102e69 <mem_init+0x18e6>$/;"	l
f0102ec3	obj/kern/kernel.asm	/^f0102ec3:	8b 3d 98 8e 2b f0    	mov    0xf02b8e98,%edi$/;"	l
f0102ec9	obj/kern/kernel.asm	/^f0102ec9:	a1 94 8e 2b f0       	mov    0xf02b8e94,%eax$/;"	l
f0102ece	obj/kern/kernel.asm	/^f0102ece:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0102ed1	obj/kern/kernel.asm	/^f0102ed1:	8d 04 c5 ff 0f 00 00 	lea    0xfff(,%eax,8),%eax$/;"	l
f0102ed8	obj/kern/kernel.asm	/^f0102ed8:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0102edd	obj/kern/kernel.asm	/^f0102edd:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0102ee0	obj/kern/kernel.asm	/^f0102ee0:	8b 35 9c 8e 2b f0    	mov    0xf02b8e9c,%esi$/;"	l
f0102ee6	obj/kern/kernel.asm	/^f0102ee6:	89 75 cc             	mov    %esi,-0x34(%ebp)$/;"	l
f0102ee9	obj/kern/kernel.asm	/^f0102ee9:	8d 86 00 00 00 10    	lea    0x10000000(%esi),%eax$/;"	l
f0102eef	obj/kern/kernel.asm	/^f0102eef:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f0102ef2	obj/kern/kernel.asm	/^f0102ef2:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0102ef7	obj/kern/kernel.asm	/^f0102ef7:	eb 6a                	jmp    f0102f63 <mem_init+0x19e0>$/;"	l
f0102ef9	obj/kern/kernel.asm	/^f0102ef9:	8d 93 00 00 00 ef    	lea    -0x11000000(%ebx),%edx$/;"	l
f0102eff	obj/kern/kernel.asm	/^f0102eff:	89 f8                	mov    %edi,%eax$/;"	l
f0102f01	obj/kern/kernel.asm	/^f0102f01:	e8 ef dc ff ff       	call   f0100bf5 <check_va2pa>$/;"	l
f0102f06	obj/kern/kernel.asm	/^f0102f06:	81 7d cc ff ff ff ef 	cmpl   $0xefffffff,-0x34(%ebp)$/;"	l
f0102f0d	obj/kern/kernel.asm	/^f0102f0d:	77 20                	ja     f0102f2f <mem_init+0x19ac>$/;"	l
f0102f0f	obj/kern/kernel.asm	/^f0102f0f:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f0102f13	obj/kern/kernel.asm	/^f0102f13:	c7 44 24 08 68 7a 10 	movl   $0xf0107a68,0x8(%esp)$/;"	l
f0102f1a	obj/kern/kernel.asm	/^f0102f1a:	f0 $/;"	l
f0102f1b	obj/kern/kernel.asm	/^f0102f1b:	c7 44 24 04 43 03 00 	movl   $0x343,0x4(%esp)$/;"	l
f0102f22	obj/kern/kernel.asm	/^f0102f22:	00 $/;"	l
f0102f23	obj/kern/kernel.asm	/^f0102f23:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0102f2a	obj/kern/kernel.asm	/^f0102f2a:	e8 11 d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102f2f	obj/kern/kernel.asm	/^f0102f2f:	8b 4d c8             	mov    -0x38(%ebp),%ecx$/;"	l
f0102f32	obj/kern/kernel.asm	/^f0102f32:	8d 14 0b             	lea    (%ebx,%ecx,1),%edx$/;"	l
f0102f35	obj/kern/kernel.asm	/^f0102f35:	39 d0                	cmp    %edx,%eax$/;"	l
f0102f37	obj/kern/kernel.asm	/^f0102f37:	74 24                	je     f0102f5d <mem_init+0x19da>$/;"	l
f0102f39	obj/kern/kernel.asm	/^f0102f39:	c7 44 24 0c ac 87 10 	movl   $0xf01087ac,0xc(%esp)$/;"	l
f0102f40	obj/kern/kernel.asm	/^f0102f40:	f0 $/;"	l
f0102f41	obj/kern/kernel.asm	/^f0102f41:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f0102f48	obj/kern/kernel.asm	/^f0102f48:	f0 $/;"	l
f0102f49	obj/kern/kernel.asm	/^f0102f49:	c7 44 24 04 43 03 00 	movl   $0x343,0x4(%esp)$/;"	l
f0102f50	obj/kern/kernel.asm	/^f0102f50:	00 $/;"	l
f0102f51	obj/kern/kernel.asm	/^f0102f51:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0102f58	obj/kern/kernel.asm	/^f0102f58:	e8 e3 d0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102f5d	obj/kern/kernel.asm	/^f0102f5d:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102f63	obj/kern/kernel.asm	/^f0102f63:	39 5d d0             	cmp    %ebx,-0x30(%ebp)$/;"	l
f0102f66	obj/kern/kernel.asm	/^f0102f66:	77 91                	ja     f0102ef9 <mem_init+0x1976>$/;"	l
f0102f68	obj/kern/kernel.asm	/^f0102f68:	8b 1d 48 82 2b f0    	mov    0xf02b8248,%ebx$/;"	l
f0102f6e	obj/kern/kernel.asm	/^f0102f6e:	89 de                	mov    %ebx,%esi$/;"	l
f0102f70	obj/kern/kernel.asm	/^f0102f70:	ba 00 00 c0 ee       	mov    $0xeec00000,%edx$/;"	l
f0102f75	obj/kern/kernel.asm	/^f0102f75:	89 f8                	mov    %edi,%eax$/;"	l
f0102f77	obj/kern/kernel.asm	/^f0102f77:	e8 79 dc ff ff       	call   f0100bf5 <check_va2pa>$/;"	l
f0102f7c	obj/kern/kernel.asm	/^f0102f7c:	81 fb ff ff ff ef    	cmp    $0xefffffff,%ebx$/;"	l
f0102f82	obj/kern/kernel.asm	/^f0102f82:	77 20                	ja     f0102fa4 <mem_init+0x1a21>$/;"	l
f0102f84	obj/kern/kernel.asm	/^f0102f84:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f0102f88	obj/kern/kernel.asm	/^f0102f88:	c7 44 24 08 68 7a 10 	movl   $0xf0107a68,0x8(%esp)$/;"	l
f0102f8f	obj/kern/kernel.asm	/^f0102f8f:	f0 $/;"	l
f0102f90	obj/kern/kernel.asm	/^f0102f90:	c7 44 24 04 48 03 00 	movl   $0x348,0x4(%esp)$/;"	l
f0102f97	obj/kern/kernel.asm	/^f0102f97:	00 $/;"	l
f0102f98	obj/kern/kernel.asm	/^f0102f98:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0102f9f	obj/kern/kernel.asm	/^f0102f9f:	e8 9c d0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102fa4	obj/kern/kernel.asm	/^f0102fa4:	bb 00 00 c0 ee       	mov    $0xeec00000,%ebx$/;"	l
f0102fa9	obj/kern/kernel.asm	/^f0102fa9:	81 c6 00 00 40 21    	add    $0x21400000,%esi$/;"	l
f0102faf	obj/kern/kernel.asm	/^f0102faf:	8d 14 1e             	lea    (%esi,%ebx,1),%edx$/;"	l
f0102fb2	obj/kern/kernel.asm	/^f0102fb2:	39 d0                	cmp    %edx,%eax$/;"	l
f0102fb4	obj/kern/kernel.asm	/^f0102fb4:	74 24                	je     f0102fda <mem_init+0x1a57>$/;"	l
f0102fb6	obj/kern/kernel.asm	/^f0102fb6:	c7 44 24 0c e0 87 10 	movl   $0xf01087e0,0xc(%esp)$/;"	l
f0102fbd	obj/kern/kernel.asm	/^f0102fbd:	f0 $/;"	l
f0102fbe	obj/kern/kernel.asm	/^f0102fbe:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f0102fc5	obj/kern/kernel.asm	/^f0102fc5:	f0 $/;"	l
f0102fc6	obj/kern/kernel.asm	/^f0102fc6:	c7 44 24 04 48 03 00 	movl   $0x348,0x4(%esp)$/;"	l
f0102fcd	obj/kern/kernel.asm	/^f0102fcd:	00 $/;"	l
f0102fce	obj/kern/kernel.asm	/^f0102fce:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0102fd5	obj/kern/kernel.asm	/^f0102fd5:	e8 66 d0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102fda	obj/kern/kernel.asm	/^f0102fda:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102fe0	obj/kern/kernel.asm	/^f0102fe0:	81 fb 00 f0 c1 ee    	cmp    $0xeec1f000,%ebx$/;"	l
f0102fe6	obj/kern/kernel.asm	/^f0102fe6:	0f 85 a9 05 00 00    	jne    f0103595 <mem_init+0x2012>$/;"	l
f0102fec	obj/kern/kernel.asm	/^f0102fec:	8b 75 d4             	mov    -0x2c(%ebp),%esi$/;"	l
f0102fef	obj/kern/kernel.asm	/^f0102fef:	c1 e6 0c             	shl    $0xc,%esi$/;"	l
f0102ff2	obj/kern/kernel.asm	/^f0102ff2:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0102ff7	obj/kern/kernel.asm	/^f0102ff7:	eb 3b                	jmp    f0103034 <mem_init+0x1ab1>$/;"	l
f0102ff9	obj/kern/kernel.asm	/^f0102ff9:	8d 93 00 00 00 f0    	lea    -0x10000000(%ebx),%edx$/;"	l
f0102fff	obj/kern/kernel.asm	/^f0102fff:	89 f8                	mov    %edi,%eax$/;"	l
f0103001	obj/kern/kernel.asm	/^f0103001:	e8 ef db ff ff       	call   f0100bf5 <check_va2pa>$/;"	l
f0103006	obj/kern/kernel.asm	/^f0103006:	39 c3                	cmp    %eax,%ebx$/;"	l
f0103008	obj/kern/kernel.asm	/^f0103008:	74 24                	je     f010302e <mem_init+0x1aab>$/;"	l
f010300a	obj/kern/kernel.asm	/^f010300a:	c7 44 24 0c 14 88 10 	movl   $0xf0108814,0xc(%esp)$/;"	l
f0103011	obj/kern/kernel.asm	/^f0103011:	f0 $/;"	l
f0103012	obj/kern/kernel.asm	/^f0103012:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f0103019	obj/kern/kernel.asm	/^f0103019:	f0 $/;"	l
f010301a	obj/kern/kernel.asm	/^f010301a:	c7 44 24 04 4c 03 00 	movl   $0x34c,0x4(%esp)$/;"	l
f0103021	obj/kern/kernel.asm	/^f0103021:	00 $/;"	l
f0103022	obj/kern/kernel.asm	/^f0103022:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0103029	obj/kern/kernel.asm	/^f0103029:	e8 12 d0 ff ff       	call   f0100040 <_panic>$/;"	l
f010302e	obj/kern/kernel.asm	/^f010302e:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0103034	obj/kern/kernel.asm	/^f0103034:	39 f3                	cmp    %esi,%ebx$/;"	l
f0103036	obj/kern/kernel.asm	/^f0103036:	72 c1                	jb     f0102ff9 <mem_init+0x1a76>$/;"	l
f0103038	obj/kern/kernel.asm	/^f0103038:	c7 45 d0 00 a0 2b f0 	movl   $0xf02ba000,-0x30(%ebp)$/;"	l
f010303f	obj/kern/kernel.asm	/^f010303f:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)$/;"	l
f0103046	obj/kern/kernel.asm	/^f0103046:	be 00 80 ff ef       	mov    $0xefff8000,%esi$/;"	l
f010304b	obj/kern/kernel.asm	/^f010304b:	b8 00 a0 2b f0       	mov    $0xf02ba000,%eax$/;"	l
f0103050	obj/kern/kernel.asm	/^f0103050:	05 00 80 00 20       	add    $0x20008000,%eax$/;"	l
f0103055	obj/kern/kernel.asm	/^f0103055:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f0103058	obj/kern/kernel.asm	/^f0103058:	8d 86 00 80 00 00    	lea    0x8000(%esi),%eax$/;"	l
f010305e	obj/kern/kernel.asm	/^f010305e:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0103061	obj/kern/kernel.asm	/^f0103061:	89 f2                	mov    %esi,%edx$/;"	l
f0103063	obj/kern/kernel.asm	/^f0103063:	89 f8                	mov    %edi,%eax$/;"	l
f0103065	obj/kern/kernel.asm	/^f0103065:	e8 8b db ff ff       	call   f0100bf5 <check_va2pa>$/;"	l
f010306a	obj/kern/kernel.asm	/^f010306a:	8b 4d d0             	mov    -0x30(%ebp),%ecx$/;"	l
f010306d	obj/kern/kernel.asm	/^f010306d:	81 f9 ff ff ff ef    	cmp    $0xefffffff,%ecx$/;"	l
f0103073	obj/kern/kernel.asm	/^f0103073:	77 20                	ja     f0103095 <mem_init+0x1b12>$/;"	l
f0103075	obj/kern/kernel.asm	/^f0103075:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f0103079	obj/kern/kernel.asm	/^f0103079:	c7 44 24 08 68 7a 10 	movl   $0xf0107a68,0x8(%esp)$/;"	l
f0103080	obj/kern/kernel.asm	/^f0103080:	f0 $/;"	l
f0103081	obj/kern/kernel.asm	/^f0103081:	c7 44 24 04 54 03 00 	movl   $0x354,0x4(%esp)$/;"	l
f0103088	obj/kern/kernel.asm	/^f0103088:	00 $/;"	l
f0103089	obj/kern/kernel.asm	/^f0103089:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0103090	obj/kern/kernel.asm	/^f0103090:	e8 ab cf ff ff       	call   f0100040 <_panic>$/;"	l
f0103095	obj/kern/kernel.asm	/^f0103095:	89 f3                	mov    %esi,%ebx$/;"	l
f0103097	obj/kern/kernel.asm	/^f0103097:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
f010309a	obj/kern/kernel.asm	/^f010309a:	03 4d d4             	add    -0x2c(%ebp),%ecx$/;"	l
f010309d	obj/kern/kernel.asm	/^f010309d:	89 4d c8             	mov    %ecx,-0x38(%ebp)$/;"	l
f01030a0	obj/kern/kernel.asm	/^f01030a0:	8b 4d c8             	mov    -0x38(%ebp),%ecx$/;"	l
f01030a3	obj/kern/kernel.asm	/^f01030a3:	8d 14 19             	lea    (%ecx,%ebx,1),%edx$/;"	l
f01030a6	obj/kern/kernel.asm	/^f01030a6:	39 c2                	cmp    %eax,%edx$/;"	l
f01030a8	obj/kern/kernel.asm	/^f01030a8:	74 24                	je     f01030ce <mem_init+0x1b4b>$/;"	l
f01030aa	obj/kern/kernel.asm	/^f01030aa:	c7 44 24 0c 3c 88 10 	movl   $0xf010883c,0xc(%esp)$/;"	l
f01030b1	obj/kern/kernel.asm	/^f01030b1:	f0 $/;"	l
f01030b2	obj/kern/kernel.asm	/^f01030b2:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f01030b9	obj/kern/kernel.asm	/^f01030b9:	f0 $/;"	l
f01030ba	obj/kern/kernel.asm	/^f01030ba:	c7 44 24 04 54 03 00 	movl   $0x354,0x4(%esp)$/;"	l
f01030c1	obj/kern/kernel.asm	/^f01030c1:	00 $/;"	l
f01030c2	obj/kern/kernel.asm	/^f01030c2:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f01030c9	obj/kern/kernel.asm	/^f01030c9:	e8 72 cf ff ff       	call   f0100040 <_panic>$/;"	l
f01030ce	obj/kern/kernel.asm	/^f01030ce:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f01030d4	obj/kern/kernel.asm	/^f01030d4:	3b 5d cc             	cmp    -0x34(%ebp),%ebx$/;"	l
f01030d7	obj/kern/kernel.asm	/^f01030d7:	0f 85 a9 04 00 00    	jne    f0103586 <mem_init+0x2003>$/;"	l
f01030dd	obj/kern/kernel.asm	/^f01030dd:	8d 9e 00 80 ff ff    	lea    -0x8000(%esi),%ebx$/;"	l
f01030e3	obj/kern/kernel.asm	/^f01030e3:	89 da                	mov    %ebx,%edx$/;"	l
f01030e5	obj/kern/kernel.asm	/^f01030e5:	89 f8                	mov    %edi,%eax$/;"	l
f01030e7	obj/kern/kernel.asm	/^f01030e7:	e8 09 db ff ff       	call   f0100bf5 <check_va2pa>$/;"	l
f01030ec	obj/kern/kernel.asm	/^f01030ec:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f01030ef	obj/kern/kernel.asm	/^f01030ef:	74 24                	je     f0103115 <mem_init+0x1b92>$/;"	l
f01030f1	obj/kern/kernel.asm	/^f01030f1:	c7 44 24 0c 84 88 10 	movl   $0xf0108884,0xc(%esp)$/;"	l
f01030f8	obj/kern/kernel.asm	/^f01030f8:	f0 $/;"	l
f01030f9	obj/kern/kernel.asm	/^f01030f9:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f0103100	obj/kern/kernel.asm	/^f0103100:	f0 $/;"	l
f0103101	obj/kern/kernel.asm	/^f0103101:	c7 44 24 04 56 03 00 	movl   $0x356,0x4(%esp)$/;"	l
f0103108	obj/kern/kernel.asm	/^f0103108:	00 $/;"	l
f0103109	obj/kern/kernel.asm	/^f0103109:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0103110	obj/kern/kernel.asm	/^f0103110:	e8 2b cf ff ff       	call   f0100040 <_panic>$/;"	l
f0103115	obj/kern/kernel.asm	/^f0103115:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f010311b	obj/kern/kernel.asm	/^f010311b:	39 de                	cmp    %ebx,%esi$/;"	l
f010311d	obj/kern/kernel.asm	/^f010311d:	75 c4                	jne    f01030e3 <mem_init+0x1b60>$/;"	l
f010311f	obj/kern/kernel.asm	/^f010311f:	81 ee 00 00 01 00    	sub    $0x10000,%esi$/;"	l
f0103125	obj/kern/kernel.asm	/^f0103125:	81 45 d4 00 80 01 00 	addl   $0x18000,-0x2c(%ebp)$/;"	l
f010312c	obj/kern/kernel.asm	/^f010312c:	81 45 d0 00 80 00 00 	addl   $0x8000,-0x30(%ebp)$/;"	l
f0103133	obj/kern/kernel.asm	/^f0103133:	81 fe 00 80 f7 ef    	cmp    $0xeff78000,%esi$/;"	l
f0103139	obj/kern/kernel.asm	/^f0103139:	0f 85 19 ff ff ff    	jne    f0103058 <mem_init+0x1ad5>$/;"	l
f010313f	obj/kern/kernel.asm	/^f010313f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103144	obj/kern/kernel.asm	/^f0103144:	e9 c2 00 00 00       	jmp    f010320b <mem_init+0x1c88>$/;"	l
f0103149	obj/kern/kernel.asm	/^f0103149:	8d 90 45 fc ff ff    	lea    -0x3bb(%eax),%edx$/;"	l
f010314f	obj/kern/kernel.asm	/^f010314f:	83 fa 04             	cmp    $0x4,%edx$/;"	l
f0103152	obj/kern/kernel.asm	/^f0103152:	77 2e                	ja     f0103182 <mem_init+0x1bff>$/;"	l
f0103154	obj/kern/kernel.asm	/^f0103154:	f6 04 87 01          	testb  $0x1,(%edi,%eax,4)$/;"	l
f0103158	obj/kern/kernel.asm	/^f0103158:	0f 85 aa 00 00 00    	jne    f0103208 <mem_init+0x1c85>$/;"	l
f010315e	obj/kern/kernel.asm	/^f010315e:	c7 44 24 0c 9d 8c 10 	movl   $0xf0108c9d,0xc(%esp)$/;"	l
f0103165	obj/kern/kernel.asm	/^f0103165:	f0 $/;"	l
f0103166	obj/kern/kernel.asm	/^f0103166:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f010316d	obj/kern/kernel.asm	/^f010316d:	f0 $/;"	l
f010316e	obj/kern/kernel.asm	/^f010316e:	c7 44 24 04 61 03 00 	movl   $0x361,0x4(%esp)$/;"	l
f0103175	obj/kern/kernel.asm	/^f0103175:	00 $/;"	l
f0103176	obj/kern/kernel.asm	/^f0103176:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f010317d	obj/kern/kernel.asm	/^f010317d:	e8 be ce ff ff       	call   f0100040 <_panic>$/;"	l
f0103182	obj/kern/kernel.asm	/^f0103182:	3d bf 03 00 00       	cmp    $0x3bf,%eax$/;"	l
f0103187	obj/kern/kernel.asm	/^f0103187:	76 55                	jbe    f01031de <mem_init+0x1c5b>$/;"	l
f0103189	obj/kern/kernel.asm	/^f0103189:	8b 14 87             	mov    (%edi,%eax,4),%edx$/;"	l
f010318c	obj/kern/kernel.asm	/^f010318c:	f6 c2 01             	test   $0x1,%dl$/;"	l
f010318f	obj/kern/kernel.asm	/^f010318f:	75 24                	jne    f01031b5 <mem_init+0x1c32>$/;"	l
f0103191	obj/kern/kernel.asm	/^f0103191:	c7 44 24 0c 9d 8c 10 	movl   $0xf0108c9d,0xc(%esp)$/;"	l
f0103198	obj/kern/kernel.asm	/^f0103198:	f0 $/;"	l
f0103199	obj/kern/kernel.asm	/^f0103199:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f01031a0	obj/kern/kernel.asm	/^f01031a0:	f0 $/;"	l
f01031a1	obj/kern/kernel.asm	/^f01031a1:	c7 44 24 04 65 03 00 	movl   $0x365,0x4(%esp)$/;"	l
f01031a8	obj/kern/kernel.asm	/^f01031a8:	00 $/;"	l
f01031a9	obj/kern/kernel.asm	/^f01031a9:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f01031b0	obj/kern/kernel.asm	/^f01031b0:	e8 8b ce ff ff       	call   f0100040 <_panic>$/;"	l
f01031b5	obj/kern/kernel.asm	/^f01031b5:	f6 c2 02             	test   $0x2,%dl$/;"	l
f01031b8	obj/kern/kernel.asm	/^f01031b8:	75 4e                	jne    f0103208 <mem_init+0x1c85>$/;"	l
f01031ba	obj/kern/kernel.asm	/^f01031ba:	c7 44 24 0c ae 8c 10 	movl   $0xf0108cae,0xc(%esp)$/;"	l
f01031c1	obj/kern/kernel.asm	/^f01031c1:	f0 $/;"	l
f01031c2	obj/kern/kernel.asm	/^f01031c2:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f01031c9	obj/kern/kernel.asm	/^f01031c9:	f0 $/;"	l
f01031ca	obj/kern/kernel.asm	/^f01031ca:	c7 44 24 04 66 03 00 	movl   $0x366,0x4(%esp)$/;"	l
f01031d1	obj/kern/kernel.asm	/^f01031d1:	00 $/;"	l
f01031d2	obj/kern/kernel.asm	/^f01031d2:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f01031d9	obj/kern/kernel.asm	/^f01031d9:	e8 62 ce ff ff       	call   f0100040 <_panic>$/;"	l
f01031de	obj/kern/kernel.asm	/^f01031de:	83 3c 87 00          	cmpl   $0x0,(%edi,%eax,4)$/;"	l
f01031e2	obj/kern/kernel.asm	/^f01031e2:	74 24                	je     f0103208 <mem_init+0x1c85>$/;"	l
f01031e4	obj/kern/kernel.asm	/^f01031e4:	c7 44 24 0c bf 8c 10 	movl   $0xf0108cbf,0xc(%esp)$/;"	l
f01031eb	obj/kern/kernel.asm	/^f01031eb:	f0 $/;"	l
f01031ec	obj/kern/kernel.asm	/^f01031ec:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f01031f3	obj/kern/kernel.asm	/^f01031f3:	f0 $/;"	l
f01031f4	obj/kern/kernel.asm	/^f01031f4:	c7 44 24 04 68 03 00 	movl   $0x368,0x4(%esp)$/;"	l
f01031fb	obj/kern/kernel.asm	/^f01031fb:	00 $/;"	l
f01031fc	obj/kern/kernel.asm	/^f01031fc:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0103203	obj/kern/kernel.asm	/^f0103203:	e8 38 ce ff ff       	call   f0100040 <_panic>$/;"	l
f0103208	obj/kern/kernel.asm	/^f0103208:	83 c0 01             	add    $0x1,%eax$/;"	l
f010320b	obj/kern/kernel.asm	/^f010320b:	3d 00 04 00 00       	cmp    $0x400,%eax$/;"	l
f0103210	obj/kern/kernel.asm	/^f0103210:	0f 85 33 ff ff ff    	jne    f0103149 <mem_init+0x1bc6>$/;"	l
f0103216	obj/kern/kernel.asm	/^f0103216:	c7 04 24 a8 88 10 f0 	movl   $0xf01088a8,(%esp)$/;"	l
f010321d	obj/kern/kernel.asm	/^f010321d:	e8 ca 0d 00 00       	call   f0103fec <cprintf>$/;"	l
f0103222	obj/kern/kernel.asm	/^f0103222:	a1 98 8e 2b f0       	mov    0xf02b8e98,%eax$/;"	l
f0103227	obj/kern/kernel.asm	/^f0103227:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010322c	obj/kern/kernel.asm	/^f010322c:	77 20                	ja     f010324e <mem_init+0x1ccb>$/;"	l
f010322e	obj/kern/kernel.asm	/^f010322e:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103232	obj/kern/kernel.asm	/^f0103232:	c7 44 24 08 68 7a 10 	movl   $0xf0107a68,0x8(%esp)$/;"	l
f0103239	obj/kern/kernel.asm	/^f0103239:	f0 $/;"	l
f010323a	obj/kern/kernel.asm	/^f010323a:	c7 44 24 04 ec 00 00 	movl   $0xec,0x4(%esp)$/;"	l
f0103241	obj/kern/kernel.asm	/^f0103241:	00 $/;"	l
f0103242	obj/kern/kernel.asm	/^f0103242:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0103249	obj/kern/kernel.asm	/^f0103249:	e8 f2 cd ff ff       	call   f0100040 <_panic>$/;"	l
f010324e	obj/kern/kernel.asm	/^f010324e:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103253	obj/kern/kernel.asm	/^f0103253:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103256	obj/kern/kernel.asm	/^f0103256:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010325b	obj/kern/kernel.asm	/^f010325b:	e8 a3 da ff ff       	call   f0100d03 <check_page_free_list>$/;"	l
f0103260	obj/kern/kernel.asm	/^f0103260:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0103263	obj/kern/kernel.asm	/^f0103263:	83 e0 f3             	and    $0xfffffff3,%eax$/;"	l
f0103266	obj/kern/kernel.asm	/^f0103266:	0d 23 00 05 80       	or     $0x80050023,%eax$/;"	l
f010326b	obj/kern/kernel.asm	/^f010326b:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f010326e	obj/kern/kernel.asm	/^f010326e:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0103275	obj/kern/kernel.asm	/^f0103275:	e8 c1 de ff ff       	call   f010113b <page_alloc>$/;"	l
f010327a	obj/kern/kernel.asm	/^f010327a:	89 c3                	mov    %eax,%ebx$/;"	l
f010327c	obj/kern/kernel.asm	/^f010327c:	85 c0                	test   %eax,%eax$/;"	l
f010327e	obj/kern/kernel.asm	/^f010327e:	75 24                	jne    f01032a4 <mem_init+0x1d21>$/;"	l
f0103280	obj/kern/kernel.asm	/^f0103280:	c7 44 24 0c a9 8a 10 	movl   $0xf0108aa9,0xc(%esp)$/;"	l
f0103287	obj/kern/kernel.asm	/^f0103287:	f0 $/;"	l
f0103288	obj/kern/kernel.asm	/^f0103288:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f010328f	obj/kern/kernel.asm	/^f010328f:	f0 $/;"	l
f0103290	obj/kern/kernel.asm	/^f0103290:	c7 44 24 04 40 04 00 	movl   $0x440,0x4(%esp)$/;"	l
f0103297	obj/kern/kernel.asm	/^f0103297:	00 $/;"	l
f0103298	obj/kern/kernel.asm	/^f0103298:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f010329f	obj/kern/kernel.asm	/^f010329f:	e8 9c cd ff ff       	call   f0100040 <_panic>$/;"	l
f01032a4	obj/kern/kernel.asm	/^f01032a4:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01032ab	obj/kern/kernel.asm	/^f01032ab:	e8 8b de ff ff       	call   f010113b <page_alloc>$/;"	l
f01032b0	obj/kern/kernel.asm	/^f01032b0:	89 c7                	mov    %eax,%edi$/;"	l
f01032b2	obj/kern/kernel.asm	/^f01032b2:	85 c0                	test   %eax,%eax$/;"	l
f01032b4	obj/kern/kernel.asm	/^f01032b4:	75 24                	jne    f01032da <mem_init+0x1d57>$/;"	l
f01032b6	obj/kern/kernel.asm	/^f01032b6:	c7 44 24 0c bf 8a 10 	movl   $0xf0108abf,0xc(%esp)$/;"	l
f01032bd	obj/kern/kernel.asm	/^f01032bd:	f0 $/;"	l
f01032be	obj/kern/kernel.asm	/^f01032be:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f01032c5	obj/kern/kernel.asm	/^f01032c5:	f0 $/;"	l
f01032c6	obj/kern/kernel.asm	/^f01032c6:	c7 44 24 04 41 04 00 	movl   $0x441,0x4(%esp)$/;"	l
f01032cd	obj/kern/kernel.asm	/^f01032cd:	00 $/;"	l
f01032ce	obj/kern/kernel.asm	/^f01032ce:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f01032d5	obj/kern/kernel.asm	/^f01032d5:	e8 66 cd ff ff       	call   f0100040 <_panic>$/;"	l
f01032da	obj/kern/kernel.asm	/^f01032da:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01032e1	obj/kern/kernel.asm	/^f01032e1:	e8 55 de ff ff       	call   f010113b <page_alloc>$/;"	l
f01032e6	obj/kern/kernel.asm	/^f01032e6:	89 c6                	mov    %eax,%esi$/;"	l
f01032e8	obj/kern/kernel.asm	/^f01032e8:	85 c0                	test   %eax,%eax$/;"	l
f01032ea	obj/kern/kernel.asm	/^f01032ea:	75 24                	jne    f0103310 <mem_init+0x1d8d>$/;"	l
f01032ec	obj/kern/kernel.asm	/^f01032ec:	c7 44 24 0c d5 8a 10 	movl   $0xf0108ad5,0xc(%esp)$/;"	l
f01032f3	obj/kern/kernel.asm	/^f01032f3:	f0 $/;"	l
f01032f4	obj/kern/kernel.asm	/^f01032f4:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f01032fb	obj/kern/kernel.asm	/^f01032fb:	f0 $/;"	l
f01032fc	obj/kern/kernel.asm	/^f01032fc:	c7 44 24 04 42 04 00 	movl   $0x442,0x4(%esp)$/;"	l
f0103303	obj/kern/kernel.asm	/^f0103303:	00 $/;"	l
f0103304	obj/kern/kernel.asm	/^f0103304:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f010330b	obj/kern/kernel.asm	/^f010330b:	e8 30 cd ff ff       	call   f0100040 <_panic>$/;"	l
f0103310	obj/kern/kernel.asm	/^f0103310:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103313	obj/kern/kernel.asm	/^f0103313:	e8 b3 de ff ff       	call   f01011cb <page_free>$/;"	l
f0103318	obj/kern/kernel.asm	/^f0103318:	89 f8                	mov    %edi,%eax$/;"	l
f010331a	obj/kern/kernel.asm	/^f010331a:	e8 91 d8 ff ff       	call   f0100bb0 <page2kva>$/;"	l
f010331f	obj/kern/kernel.asm	/^f010331f:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0103326	obj/kern/kernel.asm	/^f0103326:	00 $/;"	l
f0103327	obj/kern/kernel.asm	/^f0103327:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
f010332e	obj/kern/kernel.asm	/^f010332e:	00 $/;"	l
f010332f	obj/kern/kernel.asm	/^f010332f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103332	obj/kern/kernel.asm	/^f0103332:	e8 f0 30 00 00       	call   f0106427 <memset>$/;"	l
f0103337	obj/kern/kernel.asm	/^f0103337:	89 f0                	mov    %esi,%eax$/;"	l
f0103339	obj/kern/kernel.asm	/^f0103339:	e8 72 d8 ff ff       	call   f0100bb0 <page2kva>$/;"	l
f010333e	obj/kern/kernel.asm	/^f010333e:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0103345	obj/kern/kernel.asm	/^f0103345:	00 $/;"	l
f0103346	obj/kern/kernel.asm	/^f0103346:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
f010334d	obj/kern/kernel.asm	/^f010334d:	00 $/;"	l
f010334e	obj/kern/kernel.asm	/^f010334e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103351	obj/kern/kernel.asm	/^f0103351:	e8 d1 30 00 00       	call   f0106427 <memset>$/;"	l
f0103356	obj/kern/kernel.asm	/^f0103356:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f010335d	obj/kern/kernel.asm	/^f010335d:	00 $/;"	l
f010335e	obj/kern/kernel.asm	/^f010335e:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0103365	obj/kern/kernel.asm	/^f0103365:	00 $/;"	l
f0103366	obj/kern/kernel.asm	/^f0103366:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f010336a	obj/kern/kernel.asm	/^f010336a:	a1 98 8e 2b f0       	mov    0xf02b8e98,%eax$/;"	l
f010336f	obj/kern/kernel.asm	/^f010336f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103372	obj/kern/kernel.asm	/^f0103372:	e8 04 e1 ff ff       	call   f010147b <page_insert>$/;"	l
f0103377	obj/kern/kernel.asm	/^f0103377:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
f010337c	obj/kern/kernel.asm	/^f010337c:	74 24                	je     f01033a2 <mem_init+0x1e1f>$/;"	l
f010337e	obj/kern/kernel.asm	/^f010337e:	c7 44 24 0c a6 8b 10 	movl   $0xf0108ba6,0xc(%esp)$/;"	l
f0103385	obj/kern/kernel.asm	/^f0103385:	f0 $/;"	l
f0103386	obj/kern/kernel.asm	/^f0103386:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f010338d	obj/kern/kernel.asm	/^f010338d:	f0 $/;"	l
f010338e	obj/kern/kernel.asm	/^f010338e:	c7 44 24 04 47 04 00 	movl   $0x447,0x4(%esp)$/;"	l
f0103395	obj/kern/kernel.asm	/^f0103395:	00 $/;"	l
f0103396	obj/kern/kernel.asm	/^f0103396:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f010339d	obj/kern/kernel.asm	/^f010339d:	e8 9e cc ff ff       	call   f0100040 <_panic>$/;"	l
f01033a2	obj/kern/kernel.asm	/^f01033a2:	81 3d 00 10 00 00 01 	cmpl   $0x1010101,0x1000$/;"	l
f01033a9	obj/kern/kernel.asm	/^f01033a9:	01 01 01 $/;"	l
f01033ac	obj/kern/kernel.asm	/^f01033ac:	74 24                	je     f01033d2 <mem_init+0x1e4f>$/;"	l
f01033ae	obj/kern/kernel.asm	/^f01033ae:	c7 44 24 0c c8 88 10 	movl   $0xf01088c8,0xc(%esp)$/;"	l
f01033b5	obj/kern/kernel.asm	/^f01033b5:	f0 $/;"	l
f01033b6	obj/kern/kernel.asm	/^f01033b6:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f01033bd	obj/kern/kernel.asm	/^f01033bd:	f0 $/;"	l
f01033be	obj/kern/kernel.asm	/^f01033be:	c7 44 24 04 48 04 00 	movl   $0x448,0x4(%esp)$/;"	l
f01033c5	obj/kern/kernel.asm	/^f01033c5:	00 $/;"	l
f01033c6	obj/kern/kernel.asm	/^f01033c6:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f01033cd	obj/kern/kernel.asm	/^f01033cd:	e8 6e cc ff ff       	call   f0100040 <_panic>$/;"	l
f01033d2	obj/kern/kernel.asm	/^f01033d2:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f01033d9	obj/kern/kernel.asm	/^f01033d9:	00 $/;"	l
f01033da	obj/kern/kernel.asm	/^f01033da:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01033e1	obj/kern/kernel.asm	/^f01033e1:	00 $/;"	l
f01033e2	obj/kern/kernel.asm	/^f01033e2:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f01033e6	obj/kern/kernel.asm	/^f01033e6:	a1 98 8e 2b f0       	mov    0xf02b8e98,%eax$/;"	l
f01033eb	obj/kern/kernel.asm	/^f01033eb:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01033ee	obj/kern/kernel.asm	/^f01033ee:	e8 88 e0 ff ff       	call   f010147b <page_insert>$/;"	l
f01033f3	obj/kern/kernel.asm	/^f01033f3:	81 3d 00 10 00 00 02 	cmpl   $0x2020202,0x1000$/;"	l
f01033fa	obj/kern/kernel.asm	/^f01033fa:	02 02 02 $/;"	l
f01033fd	obj/kern/kernel.asm	/^f01033fd:	74 24                	je     f0103423 <mem_init+0x1ea0>$/;"	l
f01033ff	obj/kern/kernel.asm	/^f01033ff:	c7 44 24 0c ec 88 10 	movl   $0xf01088ec,0xc(%esp)$/;"	l
f0103406	obj/kern/kernel.asm	/^f0103406:	f0 $/;"	l
f0103407	obj/kern/kernel.asm	/^f0103407:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f010340e	obj/kern/kernel.asm	/^f010340e:	f0 $/;"	l
f010340f	obj/kern/kernel.asm	/^f010340f:	c7 44 24 04 4a 04 00 	movl   $0x44a,0x4(%esp)$/;"	l
f0103416	obj/kern/kernel.asm	/^f0103416:	00 $/;"	l
f0103417	obj/kern/kernel.asm	/^f0103417:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f010341e	obj/kern/kernel.asm	/^f010341e:	e8 1d cc ff ff       	call   f0100040 <_panic>$/;"	l
f0103423	obj/kern/kernel.asm	/^f0103423:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0103428	obj/kern/kernel.asm	/^f0103428:	74 24                	je     f010344e <mem_init+0x1ecb>$/;"	l
f010342a	obj/kern/kernel.asm	/^f010342a:	c7 44 24 0c c8 8b 10 	movl   $0xf0108bc8,0xc(%esp)$/;"	l
f0103431	obj/kern/kernel.asm	/^f0103431:	f0 $/;"	l
f0103432	obj/kern/kernel.asm	/^f0103432:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f0103439	obj/kern/kernel.asm	/^f0103439:	f0 $/;"	l
f010343a	obj/kern/kernel.asm	/^f010343a:	c7 44 24 04 4b 04 00 	movl   $0x44b,0x4(%esp)$/;"	l
f0103441	obj/kern/kernel.asm	/^f0103441:	00 $/;"	l
f0103442	obj/kern/kernel.asm	/^f0103442:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0103449	obj/kern/kernel.asm	/^f0103449:	e8 f2 cb ff ff       	call   f0100040 <_panic>$/;"	l
f010344e	obj/kern/kernel.asm	/^f010344e:	66 83 7f 04 00       	cmpw   $0x0,0x4(%edi)$/;"	l
f0103453	obj/kern/kernel.asm	/^f0103453:	74 24                	je     f0103479 <mem_init+0x1ef6>$/;"	l
f0103455	obj/kern/kernel.asm	/^f0103455:	c7 44 24 0c 32 8c 10 	movl   $0xf0108c32,0xc(%esp)$/;"	l
f010345c	obj/kern/kernel.asm	/^f010345c:	f0 $/;"	l
f010345d	obj/kern/kernel.asm	/^f010345d:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f0103464	obj/kern/kernel.asm	/^f0103464:	f0 $/;"	l
f0103465	obj/kern/kernel.asm	/^f0103465:	c7 44 24 04 4c 04 00 	movl   $0x44c,0x4(%esp)$/;"	l
f010346c	obj/kern/kernel.asm	/^f010346c:	00 $/;"	l
f010346d	obj/kern/kernel.asm	/^f010346d:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0103474	obj/kern/kernel.asm	/^f0103474:	e8 c7 cb ff ff       	call   f0100040 <_panic>$/;"	l
f0103479	obj/kern/kernel.asm	/^f0103479:	c7 05 00 10 00 00 03 	movl   $0x3030303,0x1000$/;"	l
f0103480	obj/kern/kernel.asm	/^f0103480:	03 03 03 $/;"	l
f0103483	obj/kern/kernel.asm	/^f0103483:	89 f0                	mov    %esi,%eax$/;"	l
f0103485	obj/kern/kernel.asm	/^f0103485:	e8 26 d7 ff ff       	call   f0100bb0 <page2kva>$/;"	l
f010348a	obj/kern/kernel.asm	/^f010348a:	81 38 03 03 03 03    	cmpl   $0x3030303,(%eax)$/;"	l
f0103490	obj/kern/kernel.asm	/^f0103490:	74 24                	je     f01034b6 <mem_init+0x1f33>$/;"	l
f0103492	obj/kern/kernel.asm	/^f0103492:	c7 44 24 0c 10 89 10 	movl   $0xf0108910,0xc(%esp)$/;"	l
f0103499	obj/kern/kernel.asm	/^f0103499:	f0 $/;"	l
f010349a	obj/kern/kernel.asm	/^f010349a:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f01034a1	obj/kern/kernel.asm	/^f01034a1:	f0 $/;"	l
f01034a2	obj/kern/kernel.asm	/^f01034a2:	c7 44 24 04 4e 04 00 	movl   $0x44e,0x4(%esp)$/;"	l
f01034a9	obj/kern/kernel.asm	/^f01034a9:	00 $/;"	l
f01034aa	obj/kern/kernel.asm	/^f01034aa:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f01034b1	obj/kern/kernel.asm	/^f01034b1:	e8 8a cb ff ff       	call   f0100040 <_panic>$/;"	l
f01034b6	obj/kern/kernel.asm	/^f01034b6:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f01034bd	obj/kern/kernel.asm	/^f01034bd:	00 $/;"	l
f01034be	obj/kern/kernel.asm	/^f01034be:	a1 98 8e 2b f0       	mov    0xf02b8e98,%eax$/;"	l
f01034c3	obj/kern/kernel.asm	/^f01034c3:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01034c6	obj/kern/kernel.asm	/^f01034c6:	e8 67 df ff ff       	call   f0101432 <page_remove>$/;"	l
f01034cb	obj/kern/kernel.asm	/^f01034cb:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f01034d0	obj/kern/kernel.asm	/^f01034d0:	74 24                	je     f01034f6 <mem_init+0x1f73>$/;"	l
f01034d2	obj/kern/kernel.asm	/^f01034d2:	c7 44 24 0c 00 8c 10 	movl   $0xf0108c00,0xc(%esp)$/;"	l
f01034d9	obj/kern/kernel.asm	/^f01034d9:	f0 $/;"	l
f01034da	obj/kern/kernel.asm	/^f01034da:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f01034e1	obj/kern/kernel.asm	/^f01034e1:	f0 $/;"	l
f01034e2	obj/kern/kernel.asm	/^f01034e2:	c7 44 24 04 50 04 00 	movl   $0x450,0x4(%esp)$/;"	l
f01034e9	obj/kern/kernel.asm	/^f01034e9:	00 $/;"	l
f01034ea	obj/kern/kernel.asm	/^f01034ea:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f01034f1	obj/kern/kernel.asm	/^f01034f1:	e8 4a cb ff ff       	call   f0100040 <_panic>$/;"	l
f01034f6	obj/kern/kernel.asm	/^f01034f6:	a1 98 8e 2b f0       	mov    0xf02b8e98,%eax$/;"	l
f01034fb	obj/kern/kernel.asm	/^f01034fb:	8b 08                	mov    (%eax),%ecx$/;"	l
f01034fd	obj/kern/kernel.asm	/^f01034fd:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f0103503	obj/kern/kernel.asm	/^f0103503:	89 da                	mov    %ebx,%edx$/;"	l
f0103505	obj/kern/kernel.asm	/^f0103505:	2b 15 9c 8e 2b f0    	sub    0xf02b8e9c,%edx$/;"	l
f010350b	obj/kern/kernel.asm	/^f010350b:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f010350e	obj/kern/kernel.asm	/^f010350e:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0103511	obj/kern/kernel.asm	/^f0103511:	39 d1                	cmp    %edx,%ecx$/;"	l
f0103513	obj/kern/kernel.asm	/^f0103513:	74 24                	je     f0103539 <mem_init+0x1fb6>$/;"	l
f0103515	obj/kern/kernel.asm	/^f0103515:	c7 44 24 0c 98 82 10 	movl   $0xf0108298,0xc(%esp)$/;"	l
f010351c	obj/kern/kernel.asm	/^f010351c:	f0 $/;"	l
f010351d	obj/kern/kernel.asm	/^f010351d:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f0103524	obj/kern/kernel.asm	/^f0103524:	f0 $/;"	l
f0103525	obj/kern/kernel.asm	/^f0103525:	c7 44 24 04 53 04 00 	movl   $0x453,0x4(%esp)$/;"	l
f010352c	obj/kern/kernel.asm	/^f010352c:	00 $/;"	l
f010352d	obj/kern/kernel.asm	/^f010352d:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0103534	obj/kern/kernel.asm	/^f0103534:	e8 07 cb ff ff       	call   f0100040 <_panic>$/;"	l
f0103539	obj/kern/kernel.asm	/^f0103539:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f010353f	obj/kern/kernel.asm	/^f010353f:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0103544	obj/kern/kernel.asm	/^f0103544:	74 24                	je     f010356a <mem_init+0x1fe7>$/;"	l
f0103546	obj/kern/kernel.asm	/^f0103546:	c7 44 24 0c b7 8b 10 	movl   $0xf0108bb7,0xc(%esp)$/;"	l
f010354d	obj/kern/kernel.asm	/^f010354d:	f0 $/;"	l
f010354e	obj/kern/kernel.asm	/^f010354e:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f0103555	obj/kern/kernel.asm	/^f0103555:	f0 $/;"	l
f0103556	obj/kern/kernel.asm	/^f0103556:	c7 44 24 04 55 04 00 	movl   $0x455,0x4(%esp)$/;"	l
f010355d	obj/kern/kernel.asm	/^f010355d:	00 $/;"	l
f010355e	obj/kern/kernel.asm	/^f010355e:	c7 04 24 ab 89 10 f0 	movl   $0xf01089ab,(%esp)$/;"	l
f0103565	obj/kern/kernel.asm	/^f0103565:	e8 d6 ca ff ff       	call   f0100040 <_panic>$/;"	l
f010356a	obj/kern/kernel.asm	/^f010356a:	66 c7 43 04 00 00    	movw   $0x0,0x4(%ebx)$/;"	l
f0103570	obj/kern/kernel.asm	/^f0103570:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103573	obj/kern/kernel.asm	/^f0103573:	e8 53 dc ff ff       	call   f01011cb <page_free>$/;"	l
f0103578	obj/kern/kernel.asm	/^f0103578:	c7 04 24 3c 89 10 f0 	movl   $0xf010893c,(%esp)$/;"	l
f010357f	obj/kern/kernel.asm	/^f010357f:	e8 68 0a 00 00       	call   f0103fec <cprintf>$/;"	l
f0103584	obj/kern/kernel.asm	/^f0103584:	eb 1f                	jmp    f01035a5 <mem_init+0x2022>$/;"	l
f0103586	obj/kern/kernel.asm	/^f0103586:	89 da                	mov    %ebx,%edx$/;"	l
f0103588	obj/kern/kernel.asm	/^f0103588:	89 f8                	mov    %edi,%eax$/;"	l
f010358a	obj/kern/kernel.asm	/^f010358a:	e8 66 d6 ff ff       	call   f0100bf5 <check_va2pa>$/;"	l
f010358f	obj/kern/kernel.asm	/^f010358f:	90                   	nop$/;"	l
f0103590	obj/kern/kernel.asm	/^f0103590:	e9 0b fb ff ff       	jmp    f01030a0 <mem_init+0x1b1d>$/;"	l
f0103595	obj/kern/kernel.asm	/^f0103595:	89 da                	mov    %ebx,%edx$/;"	l
f0103597	obj/kern/kernel.asm	/^f0103597:	89 f8                	mov    %edi,%eax$/;"	l
f0103599	obj/kern/kernel.asm	/^f0103599:	e8 57 d6 ff ff       	call   f0100bf5 <check_va2pa>$/;"	l
f010359e	obj/kern/kernel.asm	/^f010359e:	66 90                	xchg   %ax,%ax$/;"	l
f01035a0	obj/kern/kernel.asm	/^f01035a0:	e9 0a fa ff ff       	jmp    f0102faf <mem_init+0x1a2c>$/;"	l
f01035a5	obj/kern/kernel.asm	/^f01035a5:	83 c4 4c             	add    $0x4c,%esp$/;"	l
f01035a8	obj/kern/kernel.asm	/^f01035a8:	5b                   	pop    %ebx$/;"	l
f01035a9	obj/kern/kernel.asm	/^f01035a9:	5e                   	pop    %esi$/;"	l
f01035aa	obj/kern/kernel.asm	/^f01035aa:	5f                   	pop    %edi$/;"	l
f01035ab	obj/kern/kernel.asm	/^f01035ab:	5d                   	pop    %ebp$/;"	l
f01035ac	obj/kern/kernel.asm	/^f01035ac:	c3                   	ret    $/;"	l
f01035ad	obj/kern/kernel.asm	/^f01035ad <user_mem_check>:$/;"	l
f01035ad	obj/kern/kernel.asm	/^f01035ad:	55                   	push   %ebp$/;"	l
f01035ae	obj/kern/kernel.asm	/^f01035ae:	89 e5                	mov    %esp,%ebp$/;"	l
f01035b0	obj/kern/kernel.asm	/^f01035b0:	57                   	push   %edi$/;"	l
f01035b1	obj/kern/kernel.asm	/^f01035b1:	56                   	push   %esi$/;"	l
f01035b2	obj/kern/kernel.asm	/^f01035b2:	53                   	push   %ebx$/;"	l
f01035b3	obj/kern/kernel.asm	/^f01035b3:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f01035b6	obj/kern/kernel.asm	/^f01035b6:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f01035b9	obj/kern/kernel.asm	/^f01035b9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01035bc	obj/kern/kernel.asm	/^f01035bc:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01035c1	obj/kern/kernel.asm	/^f01035c1:	89 c3                	mov    %eax,%ebx$/;"	l
f01035c3	obj/kern/kernel.asm	/^f01035c3:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f01035c6	obj/kern/kernel.asm	/^f01035c6:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01035c9	obj/kern/kernel.asm	/^f01035c9:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f01035cc	obj/kern/kernel.asm	/^f01035cc:	8d 84 01 ff 0f 00 00 	lea    0xfff(%ecx,%eax,1),%eax$/;"	l
f01035d3	obj/kern/kernel.asm	/^f01035d3:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01035d8	obj/kern/kernel.asm	/^f01035d8:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01035db	obj/kern/kernel.asm	/^f01035db:	8b 75 14             	mov    0x14(%ebp),%esi$/;"	l
f01035de	obj/kern/kernel.asm	/^f01035de:	83 ce 01             	or     $0x1,%esi$/;"	l
f01035e1	obj/kern/kernel.asm	/^f01035e1:	eb 31                	jmp    f0103614 <user_mem_check+0x67>$/;"	l
f01035e3	obj/kern/kernel.asm	/^f01035e3:	81 fb 00 00 80 ef    	cmp    $0xef800000,%ebx$/;"	l
f01035e9	obj/kern/kernel.asm	/^f01035e9:	77 35                	ja     f0103620 <user_mem_check+0x73>$/;"	l
f01035eb	obj/kern/kernel.asm	/^f01035eb:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f01035f2	obj/kern/kernel.asm	/^f01035f2:	00 $/;"	l
f01035f3	obj/kern/kernel.asm	/^f01035f3:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01035f7	obj/kern/kernel.asm	/^f01035f7:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f01035fa	obj/kern/kernel.asm	/^f01035fa:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01035fd	obj/kern/kernel.asm	/^f01035fd:	e8 48 dc ff ff       	call   f010124a <pgdir_walk>$/;"	l
f0103602	obj/kern/kernel.asm	/^f0103602:	85 c0                	test   %eax,%eax$/;"	l
f0103604	obj/kern/kernel.asm	/^f0103604:	74 1e                	je     f0103624 <user_mem_check+0x77>$/;"	l
f0103606	obj/kern/kernel.asm	/^f0103606:	89 f2                	mov    %esi,%edx$/;"	l
f0103608	obj/kern/kernel.asm	/^f0103608:	23 10                	and    (%eax),%edx$/;"	l
f010360a	obj/kern/kernel.asm	/^f010360a:	39 d6                	cmp    %edx,%esi$/;"	l
f010360c	obj/kern/kernel.asm	/^f010360c:	75 1a                	jne    f0103628 <user_mem_check+0x7b>$/;"	l
f010360e	obj/kern/kernel.asm	/^f010360e:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0103614	obj/kern/kernel.asm	/^f0103614:	3b 5d e4             	cmp    -0x1c(%ebp),%ebx$/;"	l
f0103617	obj/kern/kernel.asm	/^f0103617:	72 ca                	jb     f01035e3 <user_mem_check+0x36>$/;"	l
f0103619	obj/kern/kernel.asm	/^f0103619:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010361e	obj/kern/kernel.asm	/^f010361e:	eb 1c                	jmp    f010363c <user_mem_check+0x8f>$/;"	l
f0103620	obj/kern/kernel.asm	/^f0103620:	89 d8                	mov    %ebx,%eax$/;"	l
f0103622	obj/kern/kernel.asm	/^f0103622:	eb 06                	jmp    f010362a <user_mem_check+0x7d>$/;"	l
f0103624	obj/kern/kernel.asm	/^f0103624:	89 d8                	mov    %ebx,%eax$/;"	l
f0103626	obj/kern/kernel.asm	/^f0103626:	eb 02                	jmp    f010362a <user_mem_check+0x7d>$/;"	l
f0103628	obj/kern/kernel.asm	/^f0103628:	89 d8                	mov    %ebx,%eax$/;"	l
f010362a	obj/kern/kernel.asm	/^f010362a:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
f010362d	obj/kern/kernel.asm	/^f010362d:	0f 44 5d 0c          	cmove  0xc(%ebp),%ebx$/;"	l
f0103631	obj/kern/kernel.asm	/^f0103631:	89 1d 3c 82 2b f0    	mov    %ebx,0xf02b823c$/;"	l
f0103637	obj/kern/kernel.asm	/^f0103637:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f010363c	obj/kern/kernel.asm	/^f010363c:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f010363f	obj/kern/kernel.asm	/^f010363f:	5b                   	pop    %ebx$/;"	l
f0103640	obj/kern/kernel.asm	/^f0103640:	5e                   	pop    %esi$/;"	l
f0103641	obj/kern/kernel.asm	/^f0103641:	5f                   	pop    %edi$/;"	l
f0103642	obj/kern/kernel.asm	/^f0103642:	5d                   	pop    %ebp$/;"	l
f0103643	obj/kern/kernel.asm	/^f0103643:	c3                   	ret    $/;"	l
f0103644	obj/kern/kernel.asm	/^f0103644 <user_mem_assert>:$/;"	l
f0103644	obj/kern/kernel.asm	/^f0103644:	55                   	push   %ebp$/;"	l
f0103645	obj/kern/kernel.asm	/^f0103645:	89 e5                	mov    %esp,%ebp$/;"	l
f0103647	obj/kern/kernel.asm	/^f0103647:	53                   	push   %ebx$/;"	l
f0103648	obj/kern/kernel.asm	/^f0103648:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010364b	obj/kern/kernel.asm	/^f010364b:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f010364e	obj/kern/kernel.asm	/^f010364e:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0103651	obj/kern/kernel.asm	/^f0103651:	83 c8 04             	or     $0x4,%eax$/;"	l
f0103654	obj/kern/kernel.asm	/^f0103654:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103658	obj/kern/kernel.asm	/^f0103658:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f010365b	obj/kern/kernel.asm	/^f010365b:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010365f	obj/kern/kernel.asm	/^f010365f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103662	obj/kern/kernel.asm	/^f0103662:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103666	obj/kern/kernel.asm	/^f0103666:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103669	obj/kern/kernel.asm	/^f0103669:	e8 3f ff ff ff       	call   f01035ad <user_mem_check>$/;"	l
f010366e	obj/kern/kernel.asm	/^f010366e:	85 c0                	test   %eax,%eax$/;"	l
f0103670	obj/kern/kernel.asm	/^f0103670:	79 24                	jns    f0103696 <user_mem_assert+0x52>$/;"	l
f0103672	obj/kern/kernel.asm	/^f0103672:	a1 3c 82 2b f0       	mov    0xf02b823c,%eax$/;"	l
f0103677	obj/kern/kernel.asm	/^f0103677:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010367b	obj/kern/kernel.asm	/^f010367b:	8b 43 48             	mov    0x48(%ebx),%eax$/;"	l
f010367e	obj/kern/kernel.asm	/^f010367e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103682	obj/kern/kernel.asm	/^f0103682:	c7 04 24 68 89 10 f0 	movl   $0xf0108968,(%esp)$/;"	l
f0103689	obj/kern/kernel.asm	/^f0103689:	e8 5e 09 00 00       	call   f0103fec <cprintf>$/;"	l
f010368e	obj/kern/kernel.asm	/^f010368e:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103691	obj/kern/kernel.asm	/^f0103691:	e8 94 06 00 00       	call   f0103d2a <env_destroy>$/;"	l
f0103696	obj/kern/kernel.asm	/^f0103696:	83 c4 14             	add    $0x14,%esp$/;"	l
f0103699	obj/kern/kernel.asm	/^f0103699:	5b                   	pop    %ebx$/;"	l
f010369a	obj/kern/kernel.asm	/^f010369a:	5d                   	pop    %ebp$/;"	l
f010369b	obj/kern/kernel.asm	/^f010369b:	c3                   	ret    $/;"	l
f010369c	obj/kern/kernel.asm	/^f010369c <region_alloc>:$/;"	l
f010369c	obj/kern/kernel.asm	/^f010369c:	55                   	push   %ebp$/;"	l
f010369d	obj/kern/kernel.asm	/^f010369d:	89 e5                	mov    %esp,%ebp$/;"	l
f010369f	obj/kern/kernel.asm	/^f010369f:	57                   	push   %edi$/;"	l
f01036a0	obj/kern/kernel.asm	/^f01036a0:	56                   	push   %esi$/;"	l
f01036a1	obj/kern/kernel.asm	/^f01036a1:	53                   	push   %ebx$/;"	l
f01036a2	obj/kern/kernel.asm	/^f01036a2:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f01036a5	obj/kern/kernel.asm	/^f01036a5:	89 c7                	mov    %eax,%edi$/;"	l
f01036a7	obj/kern/kernel.asm	/^f01036a7:	81 c1 ff 0f 00 00    	add    $0xfff,%ecx$/;"	l
f01036ad	obj/kern/kernel.asm	/^f01036ad:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f01036b0	obj/kern/kernel.asm	/^f01036b0:	89 4d e4             	mov    %ecx,-0x1c(%ebp)$/;"	l
f01036b3	obj/kern/kernel.asm	/^f01036b3:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f01036b9	obj/kern/kernel.asm	/^f01036b9:	89 d6                	mov    %edx,%esi$/;"	l
f01036bb	obj/kern/kernel.asm	/^f01036bb:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01036c0	obj/kern/kernel.asm	/^f01036c0:	eb 74                	jmp    f0103736 <region_alloc+0x9a>$/;"	l
f01036c2	obj/kern/kernel.asm	/^f01036c2:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01036c9	obj/kern/kernel.asm	/^f01036c9:	e8 6d da ff ff       	call   f010113b <page_alloc>$/;"	l
f01036ce	obj/kern/kernel.asm	/^f01036ce:	85 c0                	test   %eax,%eax$/;"	l
f01036d0	obj/kern/kernel.asm	/^f01036d0:	74 45                	je     f0103717 <region_alloc+0x7b>$/;"	l
f01036d2	obj/kern/kernel.asm	/^f01036d2:	c7 44 24 0c 06 00 00 	movl   $0x6,0xc(%esp)$/;"	l
f01036d9	obj/kern/kernel.asm	/^f01036d9:	00 $/;"	l
f01036da	obj/kern/kernel.asm	/^f01036da:	89 74 24 08          	mov    %esi,0x8(%esp)$/;"	l
f01036de	obj/kern/kernel.asm	/^f01036de:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01036e2	obj/kern/kernel.asm	/^f01036e2:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f01036e5	obj/kern/kernel.asm	/^f01036e5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01036e8	obj/kern/kernel.asm	/^f01036e8:	e8 8e dd ff ff       	call   f010147b <page_insert>$/;"	l
f01036ed	obj/kern/kernel.asm	/^f01036ed:	81 c6 00 10 00 00    	add    $0x1000,%esi$/;"	l
f01036f3	obj/kern/kernel.asm	/^f01036f3:	85 c0                	test   %eax,%eax$/;"	l
f01036f5	obj/kern/kernel.asm	/^f01036f5:	74 3c                	je     f0103733 <region_alloc+0x97>$/;"	l
f01036f7	obj/kern/kernel.asm	/^f01036f7:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01036fb	obj/kern/kernel.asm	/^f01036fb:	c7 44 24 08 cd 8c 10 	movl   $0xf0108ccd,0x8(%esp)$/;"	l
f0103702	obj/kern/kernel.asm	/^f0103702:	f0 $/;"	l
f0103703	obj/kern/kernel.asm	/^f0103703:	c7 44 24 04 30 01 00 	movl   $0x130,0x4(%esp)$/;"	l
f010370a	obj/kern/kernel.asm	/^f010370a:	00 $/;"	l
f010370b	obj/kern/kernel.asm	/^f010370b:	c7 04 24 e4 8c 10 f0 	movl   $0xf0108ce4,(%esp)$/;"	l
f0103712	obj/kern/kernel.asm	/^f0103712:	e8 29 c9 ff ff       	call   f0100040 <_panic>$/;"	l
f0103717	obj/kern/kernel.asm	/^f0103717:	c7 44 24 08 ef 8c 10 	movl   $0xf0108cef,0x8(%esp)$/;"	l
f010371e	obj/kern/kernel.asm	/^f010371e:	f0 $/;"	l
f010371f	obj/kern/kernel.asm	/^f010371f:	c7 44 24 04 35 01 00 	movl   $0x135,0x4(%esp)$/;"	l
f0103726	obj/kern/kernel.asm	/^f0103726:	00 $/;"	l
f0103727	obj/kern/kernel.asm	/^f0103727:	c7 04 24 e4 8c 10 f0 	movl   $0xf0108ce4,(%esp)$/;"	l
f010372e	obj/kern/kernel.asm	/^f010372e:	e8 0d c9 ff ff       	call   f0100040 <_panic>$/;"	l
f0103733	obj/kern/kernel.asm	/^f0103733:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0103736	obj/kern/kernel.asm	/^f0103736:	3b 5d e4             	cmp    -0x1c(%ebp),%ebx$/;"	l
f0103739	obj/kern/kernel.asm	/^f0103739:	7c 87                	jl     f01036c2 <region_alloc+0x26>$/;"	l
f010373b	obj/kern/kernel.asm	/^f010373b:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f010373e	obj/kern/kernel.asm	/^f010373e:	5b                   	pop    %ebx$/;"	l
f010373f	obj/kern/kernel.asm	/^f010373f:	5e                   	pop    %esi$/;"	l
f0103740	obj/kern/kernel.asm	/^f0103740:	5f                   	pop    %edi$/;"	l
f0103741	obj/kern/kernel.asm	/^f0103741:	5d                   	pop    %ebp$/;"	l
f0103742	obj/kern/kernel.asm	/^f0103742:	c3                   	ret    $/;"	l
f0103743	obj/kern/kernel.asm	/^f0103743 <envid2env>:$/;"	l
f0103743	obj/kern/kernel.asm	/^f0103743:	55                   	push   %ebp$/;"	l
f0103744	obj/kern/kernel.asm	/^f0103744:	89 e5                	mov    %esp,%ebp$/;"	l
f0103746	obj/kern/kernel.asm	/^f0103746:	56                   	push   %esi$/;"	l
f0103747	obj/kern/kernel.asm	/^f0103747:	53                   	push   %ebx$/;"	l
f0103748	obj/kern/kernel.asm	/^f0103748:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010374b	obj/kern/kernel.asm	/^f010374b:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f010374e	obj/kern/kernel.asm	/^f010374e:	85 c0                	test   %eax,%eax$/;"	l
f0103750	obj/kern/kernel.asm	/^f0103750:	75 1a                	jne    f010376c <envid2env+0x29>$/;"	l
f0103752	obj/kern/kernel.asm	/^f0103752:	e8 22 33 00 00       	call   f0106a79 <cpunum>$/;"	l
f0103757	obj/kern/kernel.asm	/^f0103757:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010375a	obj/kern/kernel.asm	/^f010375a:	8b 80 28 90 2b f0    	mov    -0xfd46fd8(%eax),%eax$/;"	l
f0103760	obj/kern/kernel.asm	/^f0103760:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0103763	obj/kern/kernel.asm	/^f0103763:	89 01                	mov    %eax,(%ecx)$/;"	l
f0103765	obj/kern/kernel.asm	/^f0103765:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010376a	obj/kern/kernel.asm	/^f010376a:	eb 70                	jmp    f01037dc <envid2env+0x99>$/;"	l
f010376c	obj/kern/kernel.asm	/^f010376c:	89 c3                	mov    %eax,%ebx$/;"	l
f010376e	obj/kern/kernel.asm	/^f010376e:	81 e3 ff 03 00 00    	and    $0x3ff,%ebx$/;"	l
f0103774	obj/kern/kernel.asm	/^f0103774:	6b db 7c             	imul   $0x7c,%ebx,%ebx$/;"	l
f0103777	obj/kern/kernel.asm	/^f0103777:	03 1d 48 82 2b f0    	add    0xf02b8248,%ebx$/;"	l
f010377d	obj/kern/kernel.asm	/^f010377d:	83 7b 54 00          	cmpl   $0x0,0x54(%ebx)$/;"	l
f0103781	obj/kern/kernel.asm	/^f0103781:	74 05                	je     f0103788 <envid2env+0x45>$/;"	l
f0103783	obj/kern/kernel.asm	/^f0103783:	39 43 48             	cmp    %eax,0x48(%ebx)$/;"	l
f0103786	obj/kern/kernel.asm	/^f0103786:	74 10                	je     f0103798 <envid2env+0x55>$/;"	l
f0103788	obj/kern/kernel.asm	/^f0103788:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010378b	obj/kern/kernel.asm	/^f010378b:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0103791	obj/kern/kernel.asm	/^f0103791:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f0103796	obj/kern/kernel.asm	/^f0103796:	eb 44                	jmp    f01037dc <envid2env+0x99>$/;"	l
f0103798	obj/kern/kernel.asm	/^f0103798:	84 d2                	test   %dl,%dl$/;"	l
f010379a	obj/kern/kernel.asm	/^f010379a:	74 36                	je     f01037d2 <envid2env+0x8f>$/;"	l
f010379c	obj/kern/kernel.asm	/^f010379c:	e8 d8 32 00 00       	call   f0106a79 <cpunum>$/;"	l
f01037a1	obj/kern/kernel.asm	/^f01037a1:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01037a4	obj/kern/kernel.asm	/^f01037a4:	39 98 28 90 2b f0    	cmp    %ebx,-0xfd46fd8(%eax)$/;"	l
f01037aa	obj/kern/kernel.asm	/^f01037aa:	74 26                	je     f01037d2 <envid2env+0x8f>$/;"	l
f01037ac	obj/kern/kernel.asm	/^f01037ac:	8b 73 4c             	mov    0x4c(%ebx),%esi$/;"	l
f01037af	obj/kern/kernel.asm	/^f01037af:	e8 c5 32 00 00       	call   f0106a79 <cpunum>$/;"	l
f01037b4	obj/kern/kernel.asm	/^f01037b4:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01037b7	obj/kern/kernel.asm	/^f01037b7:	8b 80 28 90 2b f0    	mov    -0xfd46fd8(%eax),%eax$/;"	l
f01037bd	obj/kern/kernel.asm	/^f01037bd:	3b 70 48             	cmp    0x48(%eax),%esi$/;"	l
f01037c0	obj/kern/kernel.asm	/^f01037c0:	74 10                	je     f01037d2 <envid2env+0x8f>$/;"	l
f01037c2	obj/kern/kernel.asm	/^f01037c2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01037c5	obj/kern/kernel.asm	/^f01037c5:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01037cb	obj/kern/kernel.asm	/^f01037cb:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f01037d0	obj/kern/kernel.asm	/^f01037d0:	eb 0a                	jmp    f01037dc <envid2env+0x99>$/;"	l
f01037d2	obj/kern/kernel.asm	/^f01037d2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01037d5	obj/kern/kernel.asm	/^f01037d5:	89 18                	mov    %ebx,(%eax)$/;"	l
f01037d7	obj/kern/kernel.asm	/^f01037d7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01037dc	obj/kern/kernel.asm	/^f01037dc:	5b                   	pop    %ebx$/;"	l
f01037dd	obj/kern/kernel.asm	/^f01037dd:	5e                   	pop    %esi$/;"	l
f01037de	obj/kern/kernel.asm	/^f01037de:	5d                   	pop    %ebp$/;"	l
f01037df	obj/kern/kernel.asm	/^f01037df:	c3                   	ret    $/;"	l
f01037e0	obj/kern/kernel.asm	/^f01037e0 <env_init_percpu>:$/;"	l
f01037e0	obj/kern/kernel.asm	/^f01037e0:	55                   	push   %ebp$/;"	l
f01037e1	obj/kern/kernel.asm	/^f01037e1:	89 e5                	mov    %esp,%ebp$/;"	l
f01037e3	obj/kern/kernel.asm	/^f01037e3:	b8 20 43 12 f0       	mov    $0xf0124320,%eax$/;"	l
f01037e8	obj/kern/kernel.asm	/^f01037e8:	0f 01 10             	lgdtl  (%eax)$/;"	l
f01037eb	obj/kern/kernel.asm	/^f01037eb:	b8 23 00 00 00       	mov    $0x23,%eax$/;"	l
f01037f0	obj/kern/kernel.asm	/^f01037f0:	8e e8                	mov    %eax,%gs$/;"	l
f01037f2	obj/kern/kernel.asm	/^f01037f2:	8e e0                	mov    %eax,%fs$/;"	l
f01037f4	obj/kern/kernel.asm	/^f01037f4:	b0 10                	mov    $0x10,%al$/;"	l
f01037f6	obj/kern/kernel.asm	/^f01037f6:	8e c0                	mov    %eax,%es$/;"	l
f01037f8	obj/kern/kernel.asm	/^f01037f8:	8e d8                	mov    %eax,%ds$/;"	l
f01037fa	obj/kern/kernel.asm	/^f01037fa:	8e d0                	mov    %eax,%ss$/;"	l
f01037fc	obj/kern/kernel.asm	/^f01037fc:	ea 03 38 10 f0 08 00 	ljmp   $0x8,$0xf0103803$/;"	l
f0103803	obj/kern/kernel.asm	/^f0103803:	b0 00                	mov    $0x0,%al$/;"	l
f0103805	obj/kern/kernel.asm	/^f0103805:	0f 00 d0             	lldt   %ax$/;"	l
f0103808	obj/kern/kernel.asm	/^f0103808:	5d                   	pop    %ebp$/;"	l
f0103809	obj/kern/kernel.asm	/^f0103809:	c3                   	ret    $/;"	l
f010380a	obj/kern/kernel.asm	/^f010380a <env_init>:$/;"	l
f010380a	obj/kern/kernel.asm	/^f010380a:	55                   	push   %ebp$/;"	l
f010380b	obj/kern/kernel.asm	/^f010380b:	89 e5                	mov    %esp,%ebp$/;"	l
f010380d	obj/kern/kernel.asm	/^f010380d:	56                   	push   %esi$/;"	l
f010380e	obj/kern/kernel.asm	/^f010380e:	53                   	push   %ebx$/;"	l
f010380f	obj/kern/kernel.asm	/^f010380f:	8b 35 48 82 2b f0    	mov    0xf02b8248,%esi$/;"	l
f0103815	obj/kern/kernel.asm	/^f0103815:	8b 0d 4c 82 2b f0    	mov    0xf02b824c,%ecx$/;"	l
f010381b	obj/kern/kernel.asm	/^f010381b:	8d 86 84 ef 01 00    	lea    0x1ef84(%esi),%eax$/;"	l
f0103821	obj/kern/kernel.asm	/^f0103821:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f0103826	obj/kern/kernel.asm	/^f0103826:	89 c3                	mov    %eax,%ebx$/;"	l
f0103828	obj/kern/kernel.asm	/^f0103828:	c7 40 54 00 00 00 00 	movl   $0x0,0x54(%eax)$/;"	l
f010382f	obj/kern/kernel.asm	/^f010382f:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%eax)$/;"	l
f0103836	obj/kern/kernel.asm	/^f0103836:	89 48 44             	mov    %ecx,0x44(%eax)$/;"	l
f0103839	obj/kern/kernel.asm	/^f0103839:	83 e8 7c             	sub    $0x7c,%eax$/;"	l
f010383c	obj/kern/kernel.asm	/^f010383c:	83 ea 01             	sub    $0x1,%edx$/;"	l
f010383f	obj/kern/kernel.asm	/^f010383f:	74 04                	je     f0103845 <env_init+0x3b>$/;"	l
f0103841	obj/kern/kernel.asm	/^f0103841:	89 d9                	mov    %ebx,%ecx$/;"	l
f0103843	obj/kern/kernel.asm	/^f0103843:	eb e1                	jmp    f0103826 <env_init+0x1c>$/;"	l
f0103845	obj/kern/kernel.asm	/^f0103845:	89 35 4c 82 2b f0    	mov    %esi,0xf02b824c$/;"	l
f010384b	obj/kern/kernel.asm	/^f010384b:	e8 90 ff ff ff       	call   f01037e0 <env_init_percpu>$/;"	l
f0103850	obj/kern/kernel.asm	/^f0103850:	5b                   	pop    %ebx$/;"	l
f0103851	obj/kern/kernel.asm	/^f0103851:	5e                   	pop    %esi$/;"	l
f0103852	obj/kern/kernel.asm	/^f0103852:	5d                   	pop    %ebp$/;"	l
f0103853	obj/kern/kernel.asm	/^f0103853:	c3                   	ret    $/;"	l
f0103854	obj/kern/kernel.asm	/^f0103854 <env_alloc>:$/;"	l
f0103854	obj/kern/kernel.asm	/^f0103854:	55                   	push   %ebp$/;"	l
f0103855	obj/kern/kernel.asm	/^f0103855:	89 e5                	mov    %esp,%ebp$/;"	l
f0103857	obj/kern/kernel.asm	/^f0103857:	56                   	push   %esi$/;"	l
f0103858	obj/kern/kernel.asm	/^f0103858:	53                   	push   %ebx$/;"	l
f0103859	obj/kern/kernel.asm	/^f0103859:	83 ec 10             	sub    $0x10,%esp$/;"	l
f010385c	obj/kern/kernel.asm	/^f010385c:	8b 1d 4c 82 2b f0    	mov    0xf02b824c,%ebx$/;"	l
f0103862	obj/kern/kernel.asm	/^f0103862:	85 db                	test   %ebx,%ebx$/;"	l
f0103864	obj/kern/kernel.asm	/^f0103864:	0f 84 6d 01 00 00    	je     f01039d7 <env_alloc+0x183>$/;"	l
f010386a	obj/kern/kernel.asm	/^f010386a:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f0103871	obj/kern/kernel.asm	/^f0103871:	e8 c5 d8 ff ff       	call   f010113b <page_alloc>$/;"	l
f0103876	obj/kern/kernel.asm	/^f0103876:	89 c6                	mov    %eax,%esi$/;"	l
f0103878	obj/kern/kernel.asm	/^f0103878:	85 c0                	test   %eax,%eax$/;"	l
f010387a	obj/kern/kernel.asm	/^f010387a:	0f 84 5e 01 00 00    	je     f01039de <env_alloc+0x18a>$/;"	l
f0103880	obj/kern/kernel.asm	/^f0103880:	2b 05 9c 8e 2b f0    	sub    0xf02b8e9c,%eax$/;"	l
f0103886	obj/kern/kernel.asm	/^f0103886:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0103889	obj/kern/kernel.asm	/^f0103889:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010388c	obj/kern/kernel.asm	/^f010388c:	89 c2                	mov    %eax,%edx$/;"	l
f010388e	obj/kern/kernel.asm	/^f010388e:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0103891	obj/kern/kernel.asm	/^f0103891:	3b 15 94 8e 2b f0    	cmp    0xf02b8e94,%edx$/;"	l
f0103897	obj/kern/kernel.asm	/^f0103897:	72 20                	jb     f01038b9 <env_alloc+0x65>$/;"	l
f0103899	obj/kern/kernel.asm	/^f0103899:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010389d	obj/kern/kernel.asm	/^f010389d:	c7 44 24 08 44 7a 10 	movl   $0xf0107a44,0x8(%esp)$/;"	l
f01038a4	obj/kern/kernel.asm	/^f01038a4:	f0 $/;"	l
f01038a5	obj/kern/kernel.asm	/^f01038a5:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f01038ac	obj/kern/kernel.asm	/^f01038ac:	00 $/;"	l
f01038ad	obj/kern/kernel.asm	/^f01038ad:	c7 04 24 9d 89 10 f0 	movl   $0xf010899d,(%esp)$/;"	l
f01038b4	obj/kern/kernel.asm	/^f01038b4:	e8 87 c7 ff ff       	call   f0100040 <_panic>$/;"	l
f01038b9	obj/kern/kernel.asm	/^f01038b9:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f01038be	obj/kern/kernel.asm	/^f01038be:	89 43 60             	mov    %eax,0x60(%ebx)$/;"	l
f01038c1	obj/kern/kernel.asm	/^f01038c1:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01038c8	obj/kern/kernel.asm	/^f01038c8:	00 $/;"	l
f01038c9	obj/kern/kernel.asm	/^f01038c9:	8b 15 98 8e 2b f0    	mov    0xf02b8e98,%edx$/;"	l
f01038cf	obj/kern/kernel.asm	/^f01038cf:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01038d3	obj/kern/kernel.asm	/^f01038d3:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01038d6	obj/kern/kernel.asm	/^f01038d6:	e8 99 2b 00 00       	call   f0106474 <memmove>$/;"	l
f01038db	obj/kern/kernel.asm	/^f01038db:	c7 44 24 08 ec 0e 00 	movl   $0xeec,0x8(%esp)$/;"	l
f01038e2	obj/kern/kernel.asm	/^f01038e2:	00 $/;"	l
f01038e3	obj/kern/kernel.asm	/^f01038e3:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01038ea	obj/kern/kernel.asm	/^f01038ea:	00 $/;"	l
f01038eb	obj/kern/kernel.asm	/^f01038eb:	8b 43 60             	mov    0x60(%ebx),%eax$/;"	l
f01038ee	obj/kern/kernel.asm	/^f01038ee:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01038f1	obj/kern/kernel.asm	/^f01038f1:	e8 31 2b 00 00       	call   f0106427 <memset>$/;"	l
f01038f6	obj/kern/kernel.asm	/^f01038f6:	66 83 46 04 01       	addw   $0x1,0x4(%esi)$/;"	l
f01038fb	obj/kern/kernel.asm	/^f01038fb:	8b 43 60             	mov    0x60(%ebx),%eax$/;"	l
f01038fe	obj/kern/kernel.asm	/^f01038fe:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103903	obj/kern/kernel.asm	/^f0103903:	77 20                	ja     f0103925 <env_alloc+0xd1>$/;"	l
f0103905	obj/kern/kernel.asm	/^f0103905:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103909	obj/kern/kernel.asm	/^f0103909:	c7 44 24 08 68 7a 10 	movl   $0xf0107a68,0x8(%esp)$/;"	l
f0103910	obj/kern/kernel.asm	/^f0103910:	f0 $/;"	l
f0103911	obj/kern/kernel.asm	/^f0103911:	c7 44 24 04 c8 00 00 	movl   $0xc8,0x4(%esp)$/;"	l
f0103918	obj/kern/kernel.asm	/^f0103918:	00 $/;"	l
f0103919	obj/kern/kernel.asm	/^f0103919:	c7 04 24 e4 8c 10 f0 	movl   $0xf0108ce4,(%esp)$/;"	l
f0103920	obj/kern/kernel.asm	/^f0103920:	e8 1b c7 ff ff       	call   f0100040 <_panic>$/;"	l
f0103925	obj/kern/kernel.asm	/^f0103925:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f010392b	obj/kern/kernel.asm	/^f010392b:	83 ca 05             	or     $0x5,%edx$/;"	l
f010392e	obj/kern/kernel.asm	/^f010392e:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
f0103934	obj/kern/kernel.asm	/^f0103934:	8b 43 48             	mov    0x48(%ebx),%eax$/;"	l
f0103937	obj/kern/kernel.asm	/^f0103937:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
f010393c	obj/kern/kernel.asm	/^f010393c:	25 00 fc ff ff       	and    $0xfffffc00,%eax$/;"	l
f0103941	obj/kern/kernel.asm	/^f0103941:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0103946	obj/kern/kernel.asm	/^f0103946:	0f 4e c2             	cmovle %edx,%eax$/;"	l
f0103949	obj/kern/kernel.asm	/^f0103949:	89 da                	mov    %ebx,%edx$/;"	l
f010394b	obj/kern/kernel.asm	/^f010394b:	2b 15 48 82 2b f0    	sub    0xf02b8248,%edx$/;"	l
f0103951	obj/kern/kernel.asm	/^f0103951:	c1 fa 02             	sar    $0x2,%edx$/;"	l
f0103954	obj/kern/kernel.asm	/^f0103954:	69 d2 df 7b ef bd    	imul   $0xbdef7bdf,%edx,%edx$/;"	l
f010395a	obj/kern/kernel.asm	/^f010395a:	09 d0                	or     %edx,%eax$/;"	l
f010395c	obj/kern/kernel.asm	/^f010395c:	89 43 48             	mov    %eax,0x48(%ebx)$/;"	l
f010395f	obj/kern/kernel.asm	/^f010395f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103962	obj/kern/kernel.asm	/^f0103962:	89 43 4c             	mov    %eax,0x4c(%ebx)$/;"	l
f0103965	obj/kern/kernel.asm	/^f0103965:	c7 43 50 00 00 00 00 	movl   $0x0,0x50(%ebx)$/;"	l
f010396c	obj/kern/kernel.asm	/^f010396c:	c7 43 54 02 00 00 00 	movl   $0x2,0x54(%ebx)$/;"	l
f0103973	obj/kern/kernel.asm	/^f0103973:	c7 43 58 00 00 00 00 	movl   $0x0,0x58(%ebx)$/;"	l
f010397a	obj/kern/kernel.asm	/^f010397a:	c7 44 24 08 44 00 00 	movl   $0x44,0x8(%esp)$/;"	l
f0103981	obj/kern/kernel.asm	/^f0103981:	00 $/;"	l
f0103982	obj/kern/kernel.asm	/^f0103982:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0103989	obj/kern/kernel.asm	/^f0103989:	00 $/;"	l
f010398a	obj/kern/kernel.asm	/^f010398a:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010398d	obj/kern/kernel.asm	/^f010398d:	e8 95 2a 00 00       	call   f0106427 <memset>$/;"	l
f0103992	obj/kern/kernel.asm	/^f0103992:	66 c7 43 24 23 00    	movw   $0x23,0x24(%ebx)$/;"	l
f0103998	obj/kern/kernel.asm	/^f0103998:	66 c7 43 20 23 00    	movw   $0x23,0x20(%ebx)$/;"	l
f010399e	obj/kern/kernel.asm	/^f010399e:	66 c7 43 40 23 00    	movw   $0x23,0x40(%ebx)$/;"	l
f01039a4	obj/kern/kernel.asm	/^f01039a4:	c7 43 3c 00 e0 bf ee 	movl   $0xeebfe000,0x3c(%ebx)$/;"	l
f01039ab	obj/kern/kernel.asm	/^f01039ab:	66 c7 43 34 1b 00    	movw   $0x1b,0x34(%ebx)$/;"	l
f01039b1	obj/kern/kernel.asm	/^f01039b1:	81 4b 38 00 02 00 00 	orl    $0x200,0x38(%ebx)$/;"	l
f01039b8	obj/kern/kernel.asm	/^f01039b8:	c7 43 64 00 00 00 00 	movl   $0x0,0x64(%ebx)$/;"	l
f01039bf	obj/kern/kernel.asm	/^f01039bf:	c6 43 68 00          	movb   $0x0,0x68(%ebx)$/;"	l
f01039c3	obj/kern/kernel.asm	/^f01039c3:	8b 43 44             	mov    0x44(%ebx),%eax$/;"	l
f01039c6	obj/kern/kernel.asm	/^f01039c6:	a3 4c 82 2b f0       	mov    %eax,0xf02b824c$/;"	l
f01039cb	obj/kern/kernel.asm	/^f01039cb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01039ce	obj/kern/kernel.asm	/^f01039ce:	89 18                	mov    %ebx,(%eax)$/;"	l
f01039d0	obj/kern/kernel.asm	/^f01039d0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01039d5	obj/kern/kernel.asm	/^f01039d5:	eb 0c                	jmp    f01039e3 <env_alloc+0x18f>$/;"	l
f01039d7	obj/kern/kernel.asm	/^f01039d7:	b8 fb ff ff ff       	mov    $0xfffffffb,%eax$/;"	l
f01039dc	obj/kern/kernel.asm	/^f01039dc:	eb 05                	jmp    f01039e3 <env_alloc+0x18f>$/;"	l
f01039de	obj/kern/kernel.asm	/^f01039de:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f01039e3	obj/kern/kernel.asm	/^f01039e3:	83 c4 10             	add    $0x10,%esp$/;"	l
f01039e6	obj/kern/kernel.asm	/^f01039e6:	5b                   	pop    %ebx$/;"	l
f01039e7	obj/kern/kernel.asm	/^f01039e7:	5e                   	pop    %esi$/;"	l
f01039e8	obj/kern/kernel.asm	/^f01039e8:	5d                   	pop    %ebp$/;"	l
f01039e9	obj/kern/kernel.asm	/^f01039e9:	c3                   	ret    $/;"	l
f01039ea	obj/kern/kernel.asm	/^f01039ea <env_create>:$/;"	l
f01039ea	obj/kern/kernel.asm	/^f01039ea:	55                   	push   %ebp$/;"	l
f01039eb	obj/kern/kernel.asm	/^f01039eb:	89 e5                	mov    %esp,%ebp$/;"	l
f01039ed	obj/kern/kernel.asm	/^f01039ed:	57                   	push   %edi$/;"	l
f01039ee	obj/kern/kernel.asm	/^f01039ee:	56                   	push   %esi$/;"	l
f01039ef	obj/kern/kernel.asm	/^f01039ef:	53                   	push   %ebx$/;"	l
f01039f0	obj/kern/kernel.asm	/^f01039f0:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f01039f3	obj/kern/kernel.asm	/^f01039f3:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f01039f6	obj/kern/kernel.asm	/^f01039f6:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01039fd	obj/kern/kernel.asm	/^f01039fd:	00 $/;"	l
f01039fe	obj/kern/kernel.asm	/^f01039fe:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0103a01	obj/kern/kernel.asm	/^f0103a01:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103a04	obj/kern/kernel.asm	/^f0103a04:	e8 4b fe ff ff       	call   f0103854 <env_alloc>$/;"	l
f0103a09	obj/kern/kernel.asm	/^f0103a09:	85 c0                	test   %eax,%eax$/;"	l
f0103a0b	obj/kern/kernel.asm	/^f0103a0b:	74 20                	je     f0103a2d <env_create+0x43>$/;"	l
f0103a0d	obj/kern/kernel.asm	/^f0103a0d:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103a11	obj/kern/kernel.asm	/^f0103a11:	c7 44 24 08 03 8d 10 	movl   $0xf0108d03,0x8(%esp)$/;"	l
f0103a18	obj/kern/kernel.asm	/^f0103a18:	f0 $/;"	l
f0103a19	obj/kern/kernel.asm	/^f0103a19:	c7 44 24 04 a4 01 00 	movl   $0x1a4,0x4(%esp)$/;"	l
f0103a20	obj/kern/kernel.asm	/^f0103a20:	00 $/;"	l
f0103a21	obj/kern/kernel.asm	/^f0103a21:	c7 04 24 e4 8c 10 f0 	movl   $0xf0108ce4,(%esp)$/;"	l
f0103a28	obj/kern/kernel.asm	/^f0103a28:	e8 13 c6 ff ff       	call   f0100040 <_panic>$/;"	l
f0103a2d	obj/kern/kernel.asm	/^f0103a2d:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0103a30	obj/kern/kernel.asm	/^f0103a30:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0103a33	obj/kern/kernel.asm	/^f0103a33:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%edi)$/;"	l
f0103a39	obj/kern/kernel.asm	/^f0103a39:	74 1c                	je     f0103a57 <env_create+0x6d>$/;"	l
f0103a3b	obj/kern/kernel.asm	/^f0103a3b:	c7 44 24 08 28 8d 10 	movl   $0xf0108d28,0x8(%esp)$/;"	l
f0103a42	obj/kern/kernel.asm	/^f0103a42:	f0 $/;"	l
f0103a43	obj/kern/kernel.asm	/^f0103a43:	c7 44 24 04 79 01 00 	movl   $0x179,0x4(%esp)$/;"	l
f0103a4a	obj/kern/kernel.asm	/^f0103a4a:	00 $/;"	l
f0103a4b	obj/kern/kernel.asm	/^f0103a4b:	c7 04 24 e4 8c 10 f0 	movl   $0xf0108ce4,(%esp)$/;"	l
f0103a52	obj/kern/kernel.asm	/^f0103a52:	e8 e9 c5 ff ff       	call   f0100040 <_panic>$/;"	l
f0103a57	obj/kern/kernel.asm	/^f0103a57:	89 fb                	mov    %edi,%ebx$/;"	l
f0103a59	obj/kern/kernel.asm	/^f0103a59:	03 5f 1c             	add    0x1c(%edi),%ebx$/;"	l
f0103a5c	obj/kern/kernel.asm	/^f0103a5c:	0f b7 77 2c          	movzwl 0x2c(%edi),%esi$/;"	l
f0103a60	obj/kern/kernel.asm	/^f0103a60:	c1 e6 05             	shl    $0x5,%esi$/;"	l
f0103a63	obj/kern/kernel.asm	/^f0103a63:	01 de                	add    %ebx,%esi$/;"	l
f0103a65	obj/kern/kernel.asm	/^f0103a65:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0103a68	obj/kern/kernel.asm	/^f0103a68:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0103a6b	obj/kern/kernel.asm	/^f0103a6b:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103a70	obj/kern/kernel.asm	/^f0103a70:	77 20                	ja     f0103a92 <env_create+0xa8>$/;"	l
f0103a72	obj/kern/kernel.asm	/^f0103a72:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103a76	obj/kern/kernel.asm	/^f0103a76:	c7 44 24 08 68 7a 10 	movl   $0xf0107a68,0x8(%esp)$/;"	l
f0103a7d	obj/kern/kernel.asm	/^f0103a7d:	f0 $/;"	l
f0103a7e	obj/kern/kernel.asm	/^f0103a7e:	c7 44 24 04 7e 01 00 	movl   $0x17e,0x4(%esp)$/;"	l
f0103a85	obj/kern/kernel.asm	/^f0103a85:	00 $/;"	l
f0103a86	obj/kern/kernel.asm	/^f0103a86:	c7 04 24 e4 8c 10 f0 	movl   $0xf0108ce4,(%esp)$/;"	l
f0103a8d	obj/kern/kernel.asm	/^f0103a8d:	e8 ae c5 ff ff       	call   f0100040 <_panic>$/;"	l
f0103a92	obj/kern/kernel.asm	/^f0103a92:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103a97	obj/kern/kernel.asm	/^f0103a97:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103a9a	obj/kern/kernel.asm	/^f0103a9a:	eb 54                	jmp    f0103af0 <env_create+0x106>$/;"	l
f0103a9c	obj/kern/kernel.asm	/^f0103a9c:	83 3b 01             	cmpl   $0x1,(%ebx)$/;"	l
f0103a9f	obj/kern/kernel.asm	/^f0103a9f:	75 4c                	jne    f0103aed <env_create+0x103>$/;"	l
f0103aa1	obj/kern/kernel.asm	/^f0103aa1:	8b 4b 14             	mov    0x14(%ebx),%ecx$/;"	l
f0103aa4	obj/kern/kernel.asm	/^f0103aa4:	8b 53 08             	mov    0x8(%ebx),%edx$/;"	l
f0103aa7	obj/kern/kernel.asm	/^f0103aa7:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0103aaa	obj/kern/kernel.asm	/^f0103aaa:	e8 ed fb ff ff       	call   f010369c <region_alloc>$/;"	l
f0103aaf	obj/kern/kernel.asm	/^f0103aaf:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f0103ab2	obj/kern/kernel.asm	/^f0103ab2:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0103ab6	obj/kern/kernel.asm	/^f0103ab6:	89 f8                	mov    %edi,%eax$/;"	l
f0103ab8	obj/kern/kernel.asm	/^f0103ab8:	03 43 04             	add    0x4(%ebx),%eax$/;"	l
f0103abb	obj/kern/kernel.asm	/^f0103abb:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103abf	obj/kern/kernel.asm	/^f0103abf:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0103ac2	obj/kern/kernel.asm	/^f0103ac2:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103ac5	obj/kern/kernel.asm	/^f0103ac5:	e8 aa 29 00 00       	call   f0106474 <memmove>$/;"	l
f0103aca	obj/kern/kernel.asm	/^f0103aca:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f0103acd	obj/kern/kernel.asm	/^f0103acd:	8b 53 14             	mov    0x14(%ebx),%edx$/;"	l
f0103ad0	obj/kern/kernel.asm	/^f0103ad0:	39 d0                	cmp    %edx,%eax$/;"	l
f0103ad2	obj/kern/kernel.asm	/^f0103ad2:	73 19                	jae    f0103aed <env_create+0x103>$/;"	l
f0103ad4	obj/kern/kernel.asm	/^f0103ad4:	29 c2                	sub    %eax,%edx$/;"	l
f0103ad6	obj/kern/kernel.asm	/^f0103ad6:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0103ada	obj/kern/kernel.asm	/^f0103ada:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0103ae1	obj/kern/kernel.asm	/^f0103ae1:	00 $/;"	l
f0103ae2	obj/kern/kernel.asm	/^f0103ae2:	03 43 08             	add    0x8(%ebx),%eax$/;"	l
f0103ae5	obj/kern/kernel.asm	/^f0103ae5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103ae8	obj/kern/kernel.asm	/^f0103ae8:	e8 3a 29 00 00       	call   f0106427 <memset>$/;"	l
f0103aed	obj/kern/kernel.asm	/^f0103aed:	83 c3 20             	add    $0x20,%ebx$/;"	l
f0103af0	obj/kern/kernel.asm	/^f0103af0:	39 de                	cmp    %ebx,%esi$/;"	l
f0103af2	obj/kern/kernel.asm	/^f0103af2:	77 a8                	ja     f0103a9c <env_create+0xb2>$/;"	l
f0103af4	obj/kern/kernel.asm	/^f0103af4:	a1 98 8e 2b f0       	mov    0xf02b8e98,%eax$/;"	l
f0103af9	obj/kern/kernel.asm	/^f0103af9:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103afe	obj/kern/kernel.asm	/^f0103afe:	77 20                	ja     f0103b20 <env_create+0x136>$/;"	l
f0103b00	obj/kern/kernel.asm	/^f0103b00:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103b04	obj/kern/kernel.asm	/^f0103b04:	c7 44 24 08 68 7a 10 	movl   $0xf0107a68,0x8(%esp)$/;"	l
f0103b0b	obj/kern/kernel.asm	/^f0103b0b:	f0 $/;"	l
f0103b0c	obj/kern/kernel.asm	/^f0103b0c:	c7 44 24 04 8b 01 00 	movl   $0x18b,0x4(%esp)$/;"	l
f0103b13	obj/kern/kernel.asm	/^f0103b13:	00 $/;"	l
f0103b14	obj/kern/kernel.asm	/^f0103b14:	c7 04 24 e4 8c 10 f0 	movl   $0xf0108ce4,(%esp)$/;"	l
f0103b1b	obj/kern/kernel.asm	/^f0103b1b:	e8 20 c5 ff ff       	call   f0100040 <_panic>$/;"	l
f0103b20	obj/kern/kernel.asm	/^f0103b20:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103b25	obj/kern/kernel.asm	/^f0103b25:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103b28	obj/kern/kernel.asm	/^f0103b28:	8b 47 18             	mov    0x18(%edi),%eax$/;"	l
f0103b2b	obj/kern/kernel.asm	/^f0103b2b:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f0103b2e	obj/kern/kernel.asm	/^f0103b2e:	89 47 30             	mov    %eax,0x30(%edi)$/;"	l
f0103b31	obj/kern/kernel.asm	/^f0103b31:	b9 00 10 00 00       	mov    $0x1000,%ecx$/;"	l
f0103b36	obj/kern/kernel.asm	/^f0103b36:	ba 00 d0 bf ee       	mov    $0xeebfd000,%edx$/;"	l
f0103b3b	obj/kern/kernel.asm	/^f0103b3b:	89 f8                	mov    %edi,%eax$/;"	l
f0103b3d	obj/kern/kernel.asm	/^f0103b3d:	e8 5a fb ff ff       	call   f010369c <region_alloc>$/;"	l
f0103b42	obj/kern/kernel.asm	/^f0103b42:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0103b45	obj/kern/kernel.asm	/^f0103b45:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0103b48	obj/kern/kernel.asm	/^f0103b48:	89 48 50             	mov    %ecx,0x50(%eax)$/;"	l
f0103b4b	obj/kern/kernel.asm	/^f0103b4b:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
f0103b4e	obj/kern/kernel.asm	/^f0103b4e:	75 07                	jne    f0103b57 <env_create+0x16d>$/;"	l
f0103b50	obj/kern/kernel.asm	/^f0103b50:	81 48 38 00 30 00 00 	orl    $0x3000,0x38(%eax)$/;"	l
f0103b57	obj/kern/kernel.asm	/^f0103b57:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f0103b5a	obj/kern/kernel.asm	/^f0103b5a:	5b                   	pop    %ebx$/;"	l
f0103b5b	obj/kern/kernel.asm	/^f0103b5b:	5e                   	pop    %esi$/;"	l
f0103b5c	obj/kern/kernel.asm	/^f0103b5c:	5f                   	pop    %edi$/;"	l
f0103b5d	obj/kern/kernel.asm	/^f0103b5d:	5d                   	pop    %ebp$/;"	l
f0103b5e	obj/kern/kernel.asm	/^f0103b5e:	c3                   	ret    $/;"	l
f0103b5f	obj/kern/kernel.asm	/^f0103b5f <env_free>:$/;"	l
f0103b5f	obj/kern/kernel.asm	/^f0103b5f:	55                   	push   %ebp$/;"	l
f0103b60	obj/kern/kernel.asm	/^f0103b60:	89 e5                	mov    %esp,%ebp$/;"	l
f0103b62	obj/kern/kernel.asm	/^f0103b62:	57                   	push   %edi$/;"	l
f0103b63	obj/kern/kernel.asm	/^f0103b63:	56                   	push   %esi$/;"	l
f0103b64	obj/kern/kernel.asm	/^f0103b64:	53                   	push   %ebx$/;"	l
f0103b65	obj/kern/kernel.asm	/^f0103b65:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0103b68	obj/kern/kernel.asm	/^f0103b68:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0103b6b	obj/kern/kernel.asm	/^f0103b6b:	e8 09 2f 00 00       	call   f0106a79 <cpunum>$/;"	l
f0103b70	obj/kern/kernel.asm	/^f0103b70:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103b73	obj/kern/kernel.asm	/^f0103b73:	39 b8 28 90 2b f0    	cmp    %edi,-0xfd46fd8(%eax)$/;"	l
f0103b79	obj/kern/kernel.asm	/^f0103b79:	74 09                	je     f0103b84 <env_free+0x25>$/;"	l
f0103b7b	obj/kern/kernel.asm	/^f0103b7b:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f0103b82	obj/kern/kernel.asm	/^f0103b82:	eb 36                	jmp    f0103bba <env_free+0x5b>$/;"	l
f0103b84	obj/kern/kernel.asm	/^f0103b84:	a1 98 8e 2b f0       	mov    0xf02b8e98,%eax$/;"	l
f0103b89	obj/kern/kernel.asm	/^f0103b89:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103b8e	obj/kern/kernel.asm	/^f0103b8e:	77 20                	ja     f0103bb0 <env_free+0x51>$/;"	l
f0103b90	obj/kern/kernel.asm	/^f0103b90:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103b94	obj/kern/kernel.asm	/^f0103b94:	c7 44 24 08 68 7a 10 	movl   $0xf0107a68,0x8(%esp)$/;"	l
f0103b9b	obj/kern/kernel.asm	/^f0103b9b:	f0 $/;"	l
f0103b9c	obj/kern/kernel.asm	/^f0103b9c:	c7 44 24 04 bd 01 00 	movl   $0x1bd,0x4(%esp)$/;"	l
f0103ba3	obj/kern/kernel.asm	/^f0103ba3:	00 $/;"	l
f0103ba4	obj/kern/kernel.asm	/^f0103ba4:	c7 04 24 e4 8c 10 f0 	movl   $0xf0108ce4,(%esp)$/;"	l
f0103bab	obj/kern/kernel.asm	/^f0103bab:	e8 90 c4 ff ff       	call   f0100040 <_panic>$/;"	l
f0103bb0	obj/kern/kernel.asm	/^f0103bb0:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103bb5	obj/kern/kernel.asm	/^f0103bb5:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103bb8	obj/kern/kernel.asm	/^f0103bb8:	eb c1                	jmp    f0103b7b <env_free+0x1c>$/;"	l
f0103bba	obj/kern/kernel.asm	/^f0103bba:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f0103bbd	obj/kern/kernel.asm	/^f0103bbd:	89 c8                	mov    %ecx,%eax$/;"	l
f0103bbf	obj/kern/kernel.asm	/^f0103bbf:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0103bc2	obj/kern/kernel.asm	/^f0103bc2:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0103bc5	obj/kern/kernel.asm	/^f0103bc5:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103bc8	obj/kern/kernel.asm	/^f0103bc8:	8b 34 88             	mov    (%eax,%ecx,4),%esi$/;"	l
f0103bcb	obj/kern/kernel.asm	/^f0103bcb:	f7 c6 01 00 00 00    	test   $0x1,%esi$/;"	l
f0103bd1	obj/kern/kernel.asm	/^f0103bd1:	0f 84 b7 00 00 00    	je     f0103c8e <env_free+0x12f>$/;"	l
f0103bd7	obj/kern/kernel.asm	/^f0103bd7:	81 e6 00 f0 ff ff    	and    $0xfffff000,%esi$/;"	l
f0103bdd	obj/kern/kernel.asm	/^f0103bdd:	89 f0                	mov    %esi,%eax$/;"	l
f0103bdf	obj/kern/kernel.asm	/^f0103bdf:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0103be2	obj/kern/kernel.asm	/^f0103be2:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0103be5	obj/kern/kernel.asm	/^f0103be5:	3b 05 94 8e 2b f0    	cmp    0xf02b8e94,%eax$/;"	l
f0103beb	obj/kern/kernel.asm	/^f0103beb:	72 20                	jb     f0103c0d <env_free+0xae>$/;"	l
f0103bed	obj/kern/kernel.asm	/^f0103bed:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f0103bf1	obj/kern/kernel.asm	/^f0103bf1:	c7 44 24 08 44 7a 10 	movl   $0xf0107a44,0x8(%esp)$/;"	l
f0103bf8	obj/kern/kernel.asm	/^f0103bf8:	f0 $/;"	l
f0103bf9	obj/kern/kernel.asm	/^f0103bf9:	c7 44 24 04 cc 01 00 	movl   $0x1cc,0x4(%esp)$/;"	l
f0103c00	obj/kern/kernel.asm	/^f0103c00:	00 $/;"	l
f0103c01	obj/kern/kernel.asm	/^f0103c01:	c7 04 24 e4 8c 10 f0 	movl   $0xf0108ce4,(%esp)$/;"	l
f0103c08	obj/kern/kernel.asm	/^f0103c08:	e8 33 c4 ff ff       	call   f0100040 <_panic>$/;"	l
f0103c0d	obj/kern/kernel.asm	/^f0103c0d:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0103c10	obj/kern/kernel.asm	/^f0103c10:	c1 e0 16             	shl    $0x16,%eax$/;"	l
f0103c13	obj/kern/kernel.asm	/^f0103c13:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0103c16	obj/kern/kernel.asm	/^f0103c16:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0103c1b	obj/kern/kernel.asm	/^f0103c1b:	f6 84 9e 00 00 00 f0 	testb  $0x1,-0x10000000(%esi,%ebx,4)$/;"	l
f0103c22	obj/kern/kernel.asm	/^f0103c22:	01 $/;"	l
f0103c23	obj/kern/kernel.asm	/^f0103c23:	74 17                	je     f0103c3c <env_free+0xdd>$/;"	l
f0103c25	obj/kern/kernel.asm	/^f0103c25:	89 d8                	mov    %ebx,%eax$/;"	l
f0103c27	obj/kern/kernel.asm	/^f0103c27:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0103c2a	obj/kern/kernel.asm	/^f0103c2a:	0b 45 e4             	or     -0x1c(%ebp),%eax$/;"	l
f0103c2d	obj/kern/kernel.asm	/^f0103c2d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103c31	obj/kern/kernel.asm	/^f0103c31:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103c34	obj/kern/kernel.asm	/^f0103c34:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103c37	obj/kern/kernel.asm	/^f0103c37:	e8 f6 d7 ff ff       	call   f0101432 <page_remove>$/;"	l
f0103c3c	obj/kern/kernel.asm	/^f0103c3c:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0103c3f	obj/kern/kernel.asm	/^f0103c3f:	81 fb 00 04 00 00    	cmp    $0x400,%ebx$/;"	l
f0103c45	obj/kern/kernel.asm	/^f0103c45:	75 d4                	jne    f0103c1b <env_free+0xbc>$/;"	l
f0103c47	obj/kern/kernel.asm	/^f0103c47:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103c4a	obj/kern/kernel.asm	/^f0103c4a:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0103c4d	obj/kern/kernel.asm	/^f0103c4d:	c7 04 10 00 00 00 00 	movl   $0x0,(%eax,%edx,1)$/;"	l
f0103c54	obj/kern/kernel.asm	/^f0103c54:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0103c57	obj/kern/kernel.asm	/^f0103c57:	3b 05 94 8e 2b f0    	cmp    0xf02b8e94,%eax$/;"	l
f0103c5d	obj/kern/kernel.asm	/^f0103c5d:	72 1c                	jb     f0103c7b <env_free+0x11c>$/;"	l
f0103c5f	obj/kern/kernel.asm	/^f0103c5f:	c7 44 24 08 30 81 10 	movl   $0xf0108130,0x8(%esp)$/;"	l
f0103c66	obj/kern/kernel.asm	/^f0103c66:	f0 $/;"	l
f0103c67	obj/kern/kernel.asm	/^f0103c67:	c7 44 24 04 51 00 00 	movl   $0x51,0x4(%esp)$/;"	l
f0103c6e	obj/kern/kernel.asm	/^f0103c6e:	00 $/;"	l
f0103c6f	obj/kern/kernel.asm	/^f0103c6f:	c7 04 24 9d 89 10 f0 	movl   $0xf010899d,(%esp)$/;"	l
f0103c76	obj/kern/kernel.asm	/^f0103c76:	e8 c5 c3 ff ff       	call   f0100040 <_panic>$/;"	l
f0103c7b	obj/kern/kernel.asm	/^f0103c7b:	a1 9c 8e 2b f0       	mov    0xf02b8e9c,%eax$/;"	l
f0103c80	obj/kern/kernel.asm	/^f0103c80:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0103c83	obj/kern/kernel.asm	/^f0103c83:	8d 04 d0             	lea    (%eax,%edx,8),%eax$/;"	l
f0103c86	obj/kern/kernel.asm	/^f0103c86:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103c89	obj/kern/kernel.asm	/^f0103c89:	e8 99 d5 ff ff       	call   f0101227 <page_decref>$/;"	l
f0103c8e	obj/kern/kernel.asm	/^f0103c8e:	83 45 e0 01          	addl   $0x1,-0x20(%ebp)$/;"	l
f0103c92	obj/kern/kernel.asm	/^f0103c92:	81 7d e0 bb 03 00 00 	cmpl   $0x3bb,-0x20(%ebp)$/;"	l
f0103c99	obj/kern/kernel.asm	/^f0103c99:	0f 85 1b ff ff ff    	jne    f0103bba <env_free+0x5b>$/;"	l
f0103c9f	obj/kern/kernel.asm	/^f0103c9f:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103ca2	obj/kern/kernel.asm	/^f0103ca2:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103ca7	obj/kern/kernel.asm	/^f0103ca7:	77 20                	ja     f0103cc9 <env_free+0x16a>$/;"	l
f0103ca9	obj/kern/kernel.asm	/^f0103ca9:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103cad	obj/kern/kernel.asm	/^f0103cad:	c7 44 24 08 68 7a 10 	movl   $0xf0107a68,0x8(%esp)$/;"	l
f0103cb4	obj/kern/kernel.asm	/^f0103cb4:	f0 $/;"	l
f0103cb5	obj/kern/kernel.asm	/^f0103cb5:	c7 44 24 04 da 01 00 	movl   $0x1da,0x4(%esp)$/;"	l
f0103cbc	obj/kern/kernel.asm	/^f0103cbc:	00 $/;"	l
f0103cbd	obj/kern/kernel.asm	/^f0103cbd:	c7 04 24 e4 8c 10 f0 	movl   $0xf0108ce4,(%esp)$/;"	l
f0103cc4	obj/kern/kernel.asm	/^f0103cc4:	e8 77 c3 ff ff       	call   f0100040 <_panic>$/;"	l
f0103cc9	obj/kern/kernel.asm	/^f0103cc9:	c7 47 60 00 00 00 00 	movl   $0x0,0x60(%edi)$/;"	l
f0103cd0	obj/kern/kernel.asm	/^f0103cd0:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103cd5	obj/kern/kernel.asm	/^f0103cd5:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0103cd8	obj/kern/kernel.asm	/^f0103cd8:	3b 05 94 8e 2b f0    	cmp    0xf02b8e94,%eax$/;"	l
f0103cde	obj/kern/kernel.asm	/^f0103cde:	72 1c                	jb     f0103cfc <env_free+0x19d>$/;"	l
f0103ce0	obj/kern/kernel.asm	/^f0103ce0:	c7 44 24 08 30 81 10 	movl   $0xf0108130,0x8(%esp)$/;"	l
f0103ce7	obj/kern/kernel.asm	/^f0103ce7:	f0 $/;"	l
f0103ce8	obj/kern/kernel.asm	/^f0103ce8:	c7 44 24 04 51 00 00 	movl   $0x51,0x4(%esp)$/;"	l
f0103cef	obj/kern/kernel.asm	/^f0103cef:	00 $/;"	l
f0103cf0	obj/kern/kernel.asm	/^f0103cf0:	c7 04 24 9d 89 10 f0 	movl   $0xf010899d,(%esp)$/;"	l
f0103cf7	obj/kern/kernel.asm	/^f0103cf7:	e8 44 c3 ff ff       	call   f0100040 <_panic>$/;"	l
f0103cfc	obj/kern/kernel.asm	/^f0103cfc:	8b 15 9c 8e 2b f0    	mov    0xf02b8e9c,%edx$/;"	l
f0103d02	obj/kern/kernel.asm	/^f0103d02:	8d 04 c2             	lea    (%edx,%eax,8),%eax$/;"	l
f0103d05	obj/kern/kernel.asm	/^f0103d05:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103d08	obj/kern/kernel.asm	/^f0103d08:	e8 1a d5 ff ff       	call   f0101227 <page_decref>$/;"	l
f0103d0d	obj/kern/kernel.asm	/^f0103d0d:	c7 47 54 00 00 00 00 	movl   $0x0,0x54(%edi)$/;"	l
f0103d14	obj/kern/kernel.asm	/^f0103d14:	a1 4c 82 2b f0       	mov    0xf02b824c,%eax$/;"	l
f0103d19	obj/kern/kernel.asm	/^f0103d19:	89 47 44             	mov    %eax,0x44(%edi)$/;"	l
f0103d1c	obj/kern/kernel.asm	/^f0103d1c:	89 3d 4c 82 2b f0    	mov    %edi,0xf02b824c$/;"	l
f0103d22	obj/kern/kernel.asm	/^f0103d22:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0103d25	obj/kern/kernel.asm	/^f0103d25:	5b                   	pop    %ebx$/;"	l
f0103d26	obj/kern/kernel.asm	/^f0103d26:	5e                   	pop    %esi$/;"	l
f0103d27	obj/kern/kernel.asm	/^f0103d27:	5f                   	pop    %edi$/;"	l
f0103d28	obj/kern/kernel.asm	/^f0103d28:	5d                   	pop    %ebp$/;"	l
f0103d29	obj/kern/kernel.asm	/^f0103d29:	c3                   	ret    $/;"	l
f0103d2a	obj/kern/kernel.asm	/^f0103d2a <env_destroy>:$/;"	l
f0103d2a	obj/kern/kernel.asm	/^f0103d2a:	55                   	push   %ebp$/;"	l
f0103d2b	obj/kern/kernel.asm	/^f0103d2b:	89 e5                	mov    %esp,%ebp$/;"	l
f0103d2d	obj/kern/kernel.asm	/^f0103d2d:	53                   	push   %ebx$/;"	l
f0103d2e	obj/kern/kernel.asm	/^f0103d2e:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103d31	obj/kern/kernel.asm	/^f0103d31:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0103d34	obj/kern/kernel.asm	/^f0103d34:	83 7b 54 03          	cmpl   $0x3,0x54(%ebx)$/;"	l
f0103d38	obj/kern/kernel.asm	/^f0103d38:	75 19                	jne    f0103d53 <env_destroy+0x29>$/;"	l
f0103d3a	obj/kern/kernel.asm	/^f0103d3a:	e8 3a 2d 00 00       	call   f0106a79 <cpunum>$/;"	l
f0103d3f	obj/kern/kernel.asm	/^f0103d3f:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103d42	obj/kern/kernel.asm	/^f0103d42:	39 98 28 90 2b f0    	cmp    %ebx,-0xfd46fd8(%eax)$/;"	l
f0103d48	obj/kern/kernel.asm	/^f0103d48:	74 09                	je     f0103d53 <env_destroy+0x29>$/;"	l
f0103d4a	obj/kern/kernel.asm	/^f0103d4a:	c7 43 54 01 00 00 00 	movl   $0x1,0x54(%ebx)$/;"	l
f0103d51	obj/kern/kernel.asm	/^f0103d51:	eb 2f                	jmp    f0103d82 <env_destroy+0x58>$/;"	l
f0103d53	obj/kern/kernel.asm	/^f0103d53:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103d56	obj/kern/kernel.asm	/^f0103d56:	e8 04 fe ff ff       	call   f0103b5f <env_free>$/;"	l
f0103d5b	obj/kern/kernel.asm	/^f0103d5b:	e8 19 2d 00 00       	call   f0106a79 <cpunum>$/;"	l
f0103d60	obj/kern/kernel.asm	/^f0103d60:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103d63	obj/kern/kernel.asm	/^f0103d63:	39 98 28 90 2b f0    	cmp    %ebx,-0xfd46fd8(%eax)$/;"	l
f0103d69	obj/kern/kernel.asm	/^f0103d69:	75 17                	jne    f0103d82 <env_destroy+0x58>$/;"	l
f0103d6b	obj/kern/kernel.asm	/^f0103d6b:	e8 09 2d 00 00       	call   f0106a79 <cpunum>$/;"	l
f0103d70	obj/kern/kernel.asm	/^f0103d70:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103d73	obj/kern/kernel.asm	/^f0103d73:	c7 80 28 90 2b f0 00 	movl   $0x0,-0xfd46fd8(%eax)$/;"	l
f0103d7a	obj/kern/kernel.asm	/^f0103d7a:	00 00 00 $/;"	l
f0103d7d	obj/kern/kernel.asm	/^f0103d7d:	e8 79 11 00 00       	call   f0104efb <sched_yield>$/;"	l
f0103d82	obj/kern/kernel.asm	/^f0103d82:	83 c4 14             	add    $0x14,%esp$/;"	l
f0103d85	obj/kern/kernel.asm	/^f0103d85:	5b                   	pop    %ebx$/;"	l
f0103d86	obj/kern/kernel.asm	/^f0103d86:	5d                   	pop    %ebp$/;"	l
f0103d87	obj/kern/kernel.asm	/^f0103d87:	c3                   	ret    $/;"	l
f0103d88	obj/kern/kernel.asm	/^f0103d88 <env_pop_tf>:$/;"	l
f0103d88	obj/kern/kernel.asm	/^f0103d88:	55                   	push   %ebp$/;"	l
f0103d89	obj/kern/kernel.asm	/^f0103d89:	89 e5                	mov    %esp,%ebp$/;"	l
f0103d8b	obj/kern/kernel.asm	/^f0103d8b:	53                   	push   %ebx$/;"	l
f0103d8c	obj/kern/kernel.asm	/^f0103d8c:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103d8f	obj/kern/kernel.asm	/^f0103d8f:	e8 e5 2c 00 00       	call   f0106a79 <cpunum>$/;"	l
f0103d94	obj/kern/kernel.asm	/^f0103d94:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103d97	obj/kern/kernel.asm	/^f0103d97:	8b 98 28 90 2b f0    	mov    -0xfd46fd8(%eax),%ebx$/;"	l
f0103d9d	obj/kern/kernel.asm	/^f0103d9d:	e8 d7 2c 00 00       	call   f0106a79 <cpunum>$/;"	l
f0103da2	obj/kern/kernel.asm	/^f0103da2:	89 43 5c             	mov    %eax,0x5c(%ebx)$/;"	l
f0103da5	obj/kern/kernel.asm	/^f0103da5:	8b 65 08             	mov    0x8(%ebp),%esp$/;"	l
f0103da8	obj/kern/kernel.asm	/^f0103da8:	61                   	popa   $/;"	l
f0103da9	obj/kern/kernel.asm	/^f0103da9:	07                   	pop    %es$/;"	l
f0103daa	obj/kern/kernel.asm	/^f0103daa:	1f                   	pop    %ds$/;"	l
f0103dab	obj/kern/kernel.asm	/^f0103dab:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103dae	obj/kern/kernel.asm	/^f0103dae:	cf                   	iret   $/;"	l
f0103daf	obj/kern/kernel.asm	/^f0103daf:	c7 44 24 08 1b 8d 10 	movl   $0xf0108d1b,0x8(%esp)$/;"	l
f0103db6	obj/kern/kernel.asm	/^f0103db6:	f0 $/;"	l
f0103db7	obj/kern/kernel.asm	/^f0103db7:	c7 44 24 04 10 02 00 	movl   $0x210,0x4(%esp)$/;"	l
f0103dbe	obj/kern/kernel.asm	/^f0103dbe:	00 $/;"	l
f0103dbf	obj/kern/kernel.asm	/^f0103dbf:	c7 04 24 e4 8c 10 f0 	movl   $0xf0108ce4,(%esp)$/;"	l
f0103dc6	obj/kern/kernel.asm	/^f0103dc6:	e8 75 c2 ff ff       	call   f0100040 <_panic>$/;"	l
f0103dcb	obj/kern/kernel.asm	/^f0103dcb <env_run>:$/;"	l
f0103dcb	obj/kern/kernel.asm	/^f0103dcb:	55                   	push   %ebp$/;"	l
f0103dcc	obj/kern/kernel.asm	/^f0103dcc:	89 e5                	mov    %esp,%ebp$/;"	l
f0103dce	obj/kern/kernel.asm	/^f0103dce:	53                   	push   %ebx$/;"	l
f0103dcf	obj/kern/kernel.asm	/^f0103dcf:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103dd2	obj/kern/kernel.asm	/^f0103dd2:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0103dd5	obj/kern/kernel.asm	/^f0103dd5:	e8 9f 2c 00 00       	call   f0106a79 <cpunum>$/;"	l
f0103dda	obj/kern/kernel.asm	/^f0103dda:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103ddd	obj/kern/kernel.asm	/^f0103ddd:	83 b8 28 90 2b f0 00 	cmpl   $0x0,-0xfd46fd8(%eax)$/;"	l
f0103de4	obj/kern/kernel.asm	/^f0103de4:	74 29                	je     f0103e0f <env_run+0x44>$/;"	l
f0103de6	obj/kern/kernel.asm	/^f0103de6:	e8 8e 2c 00 00       	call   f0106a79 <cpunum>$/;"	l
f0103deb	obj/kern/kernel.asm	/^f0103deb:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103dee	obj/kern/kernel.asm	/^f0103dee:	8b 80 28 90 2b f0    	mov    -0xfd46fd8(%eax),%eax$/;"	l
f0103df4	obj/kern/kernel.asm	/^f0103df4:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f0103df8	obj/kern/kernel.asm	/^f0103df8:	75 15                	jne    f0103e0f <env_run+0x44>$/;"	l
f0103dfa	obj/kern/kernel.asm	/^f0103dfa:	e8 7a 2c 00 00       	call   f0106a79 <cpunum>$/;"	l
f0103dff	obj/kern/kernel.asm	/^f0103dff:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103e02	obj/kern/kernel.asm	/^f0103e02:	8b 80 28 90 2b f0    	mov    -0xfd46fd8(%eax),%eax$/;"	l
f0103e08	obj/kern/kernel.asm	/^f0103e08:	c7 40 54 02 00 00 00 	movl   $0x2,0x54(%eax)$/;"	l
f0103e0f	obj/kern/kernel.asm	/^f0103e0f:	e8 65 2c 00 00       	call   f0106a79 <cpunum>$/;"	l
f0103e14	obj/kern/kernel.asm	/^f0103e14:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103e17	obj/kern/kernel.asm	/^f0103e17:	89 98 28 90 2b f0    	mov    %ebx,-0xfd46fd8(%eax)$/;"	l
f0103e1d	obj/kern/kernel.asm	/^f0103e1d:	c7 43 54 03 00 00 00 	movl   $0x3,0x54(%ebx)$/;"	l
f0103e24	obj/kern/kernel.asm	/^f0103e24:	83 43 58 01          	addl   $0x1,0x58(%ebx)$/;"	l
f0103e28	obj/kern/kernel.asm	/^f0103e28:	8b 43 60             	mov    0x60(%ebx),%eax$/;"	l
f0103e2b	obj/kern/kernel.asm	/^f0103e2b:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103e30	obj/kern/kernel.asm	/^f0103e30:	77 20                	ja     f0103e52 <env_run+0x87>$/;"	l
f0103e32	obj/kern/kernel.asm	/^f0103e32:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103e36	obj/kern/kernel.asm	/^f0103e36:	c7 44 24 08 68 7a 10 	movl   $0xf0107a68,0x8(%esp)$/;"	l
f0103e3d	obj/kern/kernel.asm	/^f0103e3d:	f0 $/;"	l
f0103e3e	obj/kern/kernel.asm	/^f0103e3e:	c7 44 24 04 35 02 00 	movl   $0x235,0x4(%esp)$/;"	l
f0103e45	obj/kern/kernel.asm	/^f0103e45:	00 $/;"	l
f0103e46	obj/kern/kernel.asm	/^f0103e46:	c7 04 24 e4 8c 10 f0 	movl   $0xf0108ce4,(%esp)$/;"	l
f0103e4d	obj/kern/kernel.asm	/^f0103e4d:	e8 ee c1 ff ff       	call   f0100040 <_panic>$/;"	l
f0103e52	obj/kern/kernel.asm	/^f0103e52:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103e57	obj/kern/kernel.asm	/^f0103e57:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103e5a	obj/kern/kernel.asm	/^f0103e5a:	c7 04 24 c0 43 12 f0 	movl   $0xf01243c0,(%esp)$/;"	l
f0103e61	obj/kern/kernel.asm	/^f0103e61:	e8 3d 2f 00 00       	call   f0106da3 <spin_unlock>$/;"	l
f0103e66	obj/kern/kernel.asm	/^f0103e66:	f3 90                	pause  $/;"	l
f0103e68	obj/kern/kernel.asm	/^f0103e68:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103e6b	obj/kern/kernel.asm	/^f0103e6b:	e8 18 ff ff ff       	call   f0103d88 <env_pop_tf>$/;"	l
f0103e70	obj/kern/kernel.asm	/^f0103e70 <mc146818_read>:$/;"	l
f0103e70	obj/kern/kernel.asm	/^f0103e70:	55                   	push   %ebp$/;"	l
f0103e71	obj/kern/kernel.asm	/^f0103e71:	89 e5                	mov    %esp,%ebp$/;"	l
f0103e73	obj/kern/kernel.asm	/^f0103e73:	0f b6 45 08          	movzbl 0x8(%ebp),%eax$/;"	l
f0103e77	obj/kern/kernel.asm	/^f0103e77:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0103e7c	obj/kern/kernel.asm	/^f0103e7c:	ee                   	out    %al,(%dx)$/;"	l
f0103e7d	obj/kern/kernel.asm	/^f0103e7d:	b2 71                	mov    $0x71,%dl$/;"	l
f0103e7f	obj/kern/kernel.asm	/^f0103e7f:	ec                   	in     (%dx),%al$/;"	l
f0103e80	obj/kern/kernel.asm	/^f0103e80:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0103e83	obj/kern/kernel.asm	/^f0103e83:	5d                   	pop    %ebp$/;"	l
f0103e84	obj/kern/kernel.asm	/^f0103e84:	c3                   	ret    $/;"	l
f0103e85	obj/kern/kernel.asm	/^f0103e85 <mc146818_write>:$/;"	l
f0103e85	obj/kern/kernel.asm	/^f0103e85:	55                   	push   %ebp$/;"	l
f0103e86	obj/kern/kernel.asm	/^f0103e86:	89 e5                	mov    %esp,%ebp$/;"	l
f0103e88	obj/kern/kernel.asm	/^f0103e88:	0f b6 45 08          	movzbl 0x8(%ebp),%eax$/;"	l
f0103e8c	obj/kern/kernel.asm	/^f0103e8c:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0103e91	obj/kern/kernel.asm	/^f0103e91:	ee                   	out    %al,(%dx)$/;"	l
f0103e92	obj/kern/kernel.asm	/^f0103e92:	b2 71                	mov    $0x71,%dl$/;"	l
f0103e94	obj/kern/kernel.asm	/^f0103e94:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103e97	obj/kern/kernel.asm	/^f0103e97:	ee                   	out    %al,(%dx)$/;"	l
f0103e98	obj/kern/kernel.asm	/^f0103e98:	5d                   	pop    %ebp$/;"	l
f0103e99	obj/kern/kernel.asm	/^f0103e99:	c3                   	ret    $/;"	l
f0103e9a	obj/kern/kernel.asm	/^f0103e9a <irq_setmask_8259A>:$/;"	l
f0103e9a	obj/kern/kernel.asm	/^f0103e9a:	55                   	push   %ebp$/;"	l
f0103e9b	obj/kern/kernel.asm	/^f0103e9b:	89 e5                	mov    %esp,%ebp$/;"	l
f0103e9d	obj/kern/kernel.asm	/^f0103e9d:	56                   	push   %esi$/;"	l
f0103e9e	obj/kern/kernel.asm	/^f0103e9e:	53                   	push   %ebx$/;"	l
f0103e9f	obj/kern/kernel.asm	/^f0103e9f:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0103ea2	obj/kern/kernel.asm	/^f0103ea2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103ea5	obj/kern/kernel.asm	/^f0103ea5:	66 a3 a8 43 12 f0    	mov    %ax,0xf01243a8$/;"	l
f0103eab	obj/kern/kernel.asm	/^f0103eab:	80 3d 50 82 2b f0 00 	cmpb   $0x0,0xf02b8250$/;"	l
f0103eb2	obj/kern/kernel.asm	/^f0103eb2:	74 4e                	je     f0103f02 <irq_setmask_8259A+0x68>$/;"	l
f0103eb4	obj/kern/kernel.asm	/^f0103eb4:	89 c6                	mov    %eax,%esi$/;"	l
f0103eb6	obj/kern/kernel.asm	/^f0103eb6:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f0103ebb	obj/kern/kernel.asm	/^f0103ebb:	ee                   	out    %al,(%dx)$/;"	l
f0103ebc	obj/kern/kernel.asm	/^f0103ebc:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f0103ec0	obj/kern/kernel.asm	/^f0103ec0:	b2 a1                	mov    $0xa1,%dl$/;"	l
f0103ec2	obj/kern/kernel.asm	/^f0103ec2:	ee                   	out    %al,(%dx)$/;"	l
f0103ec3	obj/kern/kernel.asm	/^f0103ec3:	c7 04 24 4d 8d 10 f0 	movl   $0xf0108d4d,(%esp)$/;"	l
f0103eca	obj/kern/kernel.asm	/^f0103eca:	e8 1d 01 00 00       	call   f0103fec <cprintf>$/;"	l
f0103ecf	obj/kern/kernel.asm	/^f0103ecf:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0103ed4	obj/kern/kernel.asm	/^f0103ed4:	0f b7 f6             	movzwl %si,%esi$/;"	l
f0103ed7	obj/kern/kernel.asm	/^f0103ed7:	f7 d6                	not    %esi$/;"	l
f0103ed9	obj/kern/kernel.asm	/^f0103ed9:	0f a3 de             	bt     %ebx,%esi$/;"	l
f0103edc	obj/kern/kernel.asm	/^f0103edc:	73 10                	jae    f0103eee <irq_setmask_8259A+0x54>$/;"	l
f0103ede	obj/kern/kernel.asm	/^f0103ede:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0103ee2	obj/kern/kernel.asm	/^f0103ee2:	c7 04 24 0f 92 10 f0 	movl   $0xf010920f,(%esp)$/;"	l
f0103ee9	obj/kern/kernel.asm	/^f0103ee9:	e8 fe 00 00 00       	call   f0103fec <cprintf>$/;"	l
f0103eee	obj/kern/kernel.asm	/^f0103eee:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0103ef1	obj/kern/kernel.asm	/^f0103ef1:	83 fb 10             	cmp    $0x10,%ebx$/;"	l
f0103ef4	obj/kern/kernel.asm	/^f0103ef4:	75 e3                	jne    f0103ed9 <irq_setmask_8259A+0x3f>$/;"	l
f0103ef6	obj/kern/kernel.asm	/^f0103ef6:	c7 04 24 9b 8c 10 f0 	movl   $0xf0108c9b,(%esp)$/;"	l
f0103efd	obj/kern/kernel.asm	/^f0103efd:	e8 ea 00 00 00       	call   f0103fec <cprintf>$/;"	l
f0103f02	obj/kern/kernel.asm	/^f0103f02:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103f05	obj/kern/kernel.asm	/^f0103f05:	5b                   	pop    %ebx$/;"	l
f0103f06	obj/kern/kernel.asm	/^f0103f06:	5e                   	pop    %esi$/;"	l
f0103f07	obj/kern/kernel.asm	/^f0103f07:	5d                   	pop    %ebp$/;"	l
f0103f08	obj/kern/kernel.asm	/^f0103f08:	c3                   	ret    $/;"	l
f0103f09	obj/kern/kernel.asm	/^f0103f09 <pic_init>:$/;"	l
f0103f09	obj/kern/kernel.asm	/^f0103f09:	c6 05 50 82 2b f0 01 	movb   $0x1,0xf02b8250$/;"	l
f0103f10	obj/kern/kernel.asm	/^f0103f10:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f0103f15	obj/kern/kernel.asm	/^f0103f15:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0103f1a	obj/kern/kernel.asm	/^f0103f1a:	ee                   	out    %al,(%dx)$/;"	l
f0103f1b	obj/kern/kernel.asm	/^f0103f1b:	b2 a1                	mov    $0xa1,%dl$/;"	l
f0103f1d	obj/kern/kernel.asm	/^f0103f1d:	ee                   	out    %al,(%dx)$/;"	l
f0103f1e	obj/kern/kernel.asm	/^f0103f1e:	b2 20                	mov    $0x20,%dl$/;"	l
f0103f20	obj/kern/kernel.asm	/^f0103f20:	b8 11 00 00 00       	mov    $0x11,%eax$/;"	l
f0103f25	obj/kern/kernel.asm	/^f0103f25:	ee                   	out    %al,(%dx)$/;"	l
f0103f26	obj/kern/kernel.asm	/^f0103f26:	b2 21                	mov    $0x21,%dl$/;"	l
f0103f28	obj/kern/kernel.asm	/^f0103f28:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0103f2d	obj/kern/kernel.asm	/^f0103f2d:	ee                   	out    %al,(%dx)$/;"	l
f0103f2e	obj/kern/kernel.asm	/^f0103f2e:	b8 04 00 00 00       	mov    $0x4,%eax$/;"	l
f0103f33	obj/kern/kernel.asm	/^f0103f33:	ee                   	out    %al,(%dx)$/;"	l
f0103f34	obj/kern/kernel.asm	/^f0103f34:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f0103f39	obj/kern/kernel.asm	/^f0103f39:	ee                   	out    %al,(%dx)$/;"	l
f0103f3a	obj/kern/kernel.asm	/^f0103f3a:	b2 a0                	mov    $0xa0,%dl$/;"	l
f0103f3c	obj/kern/kernel.asm	/^f0103f3c:	b8 11 00 00 00       	mov    $0x11,%eax$/;"	l
f0103f41	obj/kern/kernel.asm	/^f0103f41:	ee                   	out    %al,(%dx)$/;"	l
f0103f42	obj/kern/kernel.asm	/^f0103f42:	b2 a1                	mov    $0xa1,%dl$/;"	l
f0103f44	obj/kern/kernel.asm	/^f0103f44:	b8 28 00 00 00       	mov    $0x28,%eax$/;"	l
f0103f49	obj/kern/kernel.asm	/^f0103f49:	ee                   	out    %al,(%dx)$/;"	l
f0103f4a	obj/kern/kernel.asm	/^f0103f4a:	b8 02 00 00 00       	mov    $0x2,%eax$/;"	l
f0103f4f	obj/kern/kernel.asm	/^f0103f4f:	ee                   	out    %al,(%dx)$/;"	l
f0103f50	obj/kern/kernel.asm	/^f0103f50:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0103f55	obj/kern/kernel.asm	/^f0103f55:	ee                   	out    %al,(%dx)$/;"	l
f0103f56	obj/kern/kernel.asm	/^f0103f56:	b2 20                	mov    $0x20,%dl$/;"	l
f0103f58	obj/kern/kernel.asm	/^f0103f58:	b8 68 00 00 00       	mov    $0x68,%eax$/;"	l
f0103f5d	obj/kern/kernel.asm	/^f0103f5d:	ee                   	out    %al,(%dx)$/;"	l
f0103f5e	obj/kern/kernel.asm	/^f0103f5e:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0103f63	obj/kern/kernel.asm	/^f0103f63:	ee                   	out    %al,(%dx)$/;"	l
f0103f64	obj/kern/kernel.asm	/^f0103f64:	b2 a0                	mov    $0xa0,%dl$/;"	l
f0103f66	obj/kern/kernel.asm	/^f0103f66:	b8 68 00 00 00       	mov    $0x68,%eax$/;"	l
f0103f6b	obj/kern/kernel.asm	/^f0103f6b:	ee                   	out    %al,(%dx)$/;"	l
f0103f6c	obj/kern/kernel.asm	/^f0103f6c:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0103f71	obj/kern/kernel.asm	/^f0103f71:	ee                   	out    %al,(%dx)$/;"	l
f0103f72	obj/kern/kernel.asm	/^f0103f72:	0f b7 05 a8 43 12 f0 	movzwl 0xf01243a8,%eax$/;"	l
f0103f79	obj/kern/kernel.asm	/^f0103f79:	66 83 f8 ff          	cmp    $0xffff,%ax$/;"	l
f0103f7d	obj/kern/kernel.asm	/^f0103f7d:	74 12                	je     f0103f91 <pic_init+0x88>$/;"	l
f0103f7f	obj/kern/kernel.asm	/^f0103f7f:	55                   	push   %ebp$/;"	l
f0103f80	obj/kern/kernel.asm	/^f0103f80:	89 e5                	mov    %esp,%ebp$/;"	l
f0103f82	obj/kern/kernel.asm	/^f0103f82:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0103f85	obj/kern/kernel.asm	/^f0103f85:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0103f88	obj/kern/kernel.asm	/^f0103f88:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103f8b	obj/kern/kernel.asm	/^f0103f8b:	e8 0a ff ff ff       	call   f0103e9a <irq_setmask_8259A>$/;"	l
f0103f90	obj/kern/kernel.asm	/^f0103f90:	c9                   	leave  $/;"	l
f0103f91	obj/kern/kernel.asm	/^f0103f91:	f3 c3                	repz ret $/;"	l
f0103f93	obj/kern/kernel.asm	/^f0103f93 <irq_eoi>:$/;"	l
f0103f93	obj/kern/kernel.asm	/^f0103f93:	55                   	push   %ebp$/;"	l
f0103f94	obj/kern/kernel.asm	/^f0103f94:	89 e5                	mov    %esp,%ebp$/;"	l
f0103f96	obj/kern/kernel.asm	/^f0103f96:	ba 20 00 00 00       	mov    $0x20,%edx$/;"	l
f0103f9b	obj/kern/kernel.asm	/^f0103f9b:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0103fa0	obj/kern/kernel.asm	/^f0103fa0:	ee                   	out    %al,(%dx)$/;"	l
f0103fa1	obj/kern/kernel.asm	/^f0103fa1:	b2 a0                	mov    $0xa0,%dl$/;"	l
f0103fa3	obj/kern/kernel.asm	/^f0103fa3:	ee                   	out    %al,(%dx)$/;"	l
f0103fa4	obj/kern/kernel.asm	/^f0103fa4:	5d                   	pop    %ebp$/;"	l
f0103fa5	obj/kern/kernel.asm	/^f0103fa5:	c3                   	ret    $/;"	l
f0103fa6	obj/kern/kernel.asm	/^f0103fa6 <putch>:$/;"	l
f0103fa6	obj/kern/kernel.asm	/^f0103fa6:	55                   	push   %ebp$/;"	l
f0103fa7	obj/kern/kernel.asm	/^f0103fa7:	89 e5                	mov    %esp,%ebp$/;"	l
f0103fa9	obj/kern/kernel.asm	/^f0103fa9:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0103fac	obj/kern/kernel.asm	/^f0103fac:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103faf	obj/kern/kernel.asm	/^f0103faf:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103fb2	obj/kern/kernel.asm	/^f0103fb2:	e8 39 c8 ff ff       	call   f01007f0 <cputchar>$/;"	l
f0103fb7	obj/kern/kernel.asm	/^f0103fb7:	c9                   	leave  $/;"	l
f0103fb8	obj/kern/kernel.asm	/^f0103fb8:	c3                   	ret    $/;"	l
f0103fb9	obj/kern/kernel.asm	/^f0103fb9 <vcprintf>:$/;"	l
f0103fb9	obj/kern/kernel.asm	/^f0103fb9:	55                   	push   %ebp$/;"	l
f0103fba	obj/kern/kernel.asm	/^f0103fba:	89 e5                	mov    %esp,%ebp$/;"	l
f0103fbc	obj/kern/kernel.asm	/^f0103fbc:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0103fbf	obj/kern/kernel.asm	/^f0103fbf:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0103fc6	obj/kern/kernel.asm	/^f0103fc6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103fc9	obj/kern/kernel.asm	/^f0103fc9:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103fcd	obj/kern/kernel.asm	/^f0103fcd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103fd0	obj/kern/kernel.asm	/^f0103fd0:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0103fd4	obj/kern/kernel.asm	/^f0103fd4:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0103fd7	obj/kern/kernel.asm	/^f0103fd7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103fdb	obj/kern/kernel.asm	/^f0103fdb:	c7 04 24 a6 3f 10 f0 	movl   $0xf0103fa6,(%esp)$/;"	l
f0103fe2	obj/kern/kernel.asm	/^f0103fe2:	e8 b7 1c 00 00       	call   f0105c9e <vprintfmt>$/;"	l
f0103fe7	obj/kern/kernel.asm	/^f0103fe7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0103fea	obj/kern/kernel.asm	/^f0103fea:	c9                   	leave  $/;"	l
f0103feb	obj/kern/kernel.asm	/^f0103feb:	c3                   	ret    $/;"	l
f0103fec	obj/kern/kernel.asm	/^f0103fec <cprintf>:$/;"	l
f0103fec	obj/kern/kernel.asm	/^f0103fec:	55                   	push   %ebp$/;"	l
f0103fed	obj/kern/kernel.asm	/^f0103fed:	89 e5                	mov    %esp,%ebp$/;"	l
f0103fef	obj/kern/kernel.asm	/^f0103fef:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0103ff2	obj/kern/kernel.asm	/^f0103ff2:	8d 45 0c             	lea    0xc(%ebp),%eax$/;"	l
f0103ff5	obj/kern/kernel.asm	/^f0103ff5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103ff9	obj/kern/kernel.asm	/^f0103ff9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103ffc	obj/kern/kernel.asm	/^f0103ffc:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103fff	obj/kern/kernel.asm	/^f0103fff:	e8 b5 ff ff ff       	call   f0103fb9 <vcprintf>$/;"	l
f0104004	obj/kern/kernel.asm	/^f0104004:	c9                   	leave  $/;"	l
f0104005	obj/kern/kernel.asm	/^f0104005:	c3                   	ret    $/;"	l
f0104006	obj/kern/kernel.asm	/^f0104006:	66 90                	xchg   %ax,%ax$/;"	l
f0104008	obj/kern/kernel.asm	/^f0104008:	66 90                	xchg   %ax,%ax$/;"	l
f010400a	obj/kern/kernel.asm	/^f010400a:	66 90                	xchg   %ax,%ax$/;"	l
f010400c	obj/kern/kernel.asm	/^f010400c:	66 90                	xchg   %ax,%ax$/;"	l
f010400e	obj/kern/kernel.asm	/^f010400e:	66 90                	xchg   %ax,%ax$/;"	l
f0104010	obj/kern/kernel.asm	/^f0104010 <trap_init_percpu>:$/;"	l
f0104010	obj/kern/kernel.asm	/^f0104010:	55                   	push   %ebp$/;"	l
f0104011	obj/kern/kernel.asm	/^f0104011:	89 e5                	mov    %esp,%ebp$/;"	l
f0104013	obj/kern/kernel.asm	/^f0104013:	57                   	push   %edi$/;"	l
f0104014	obj/kern/kernel.asm	/^f0104014:	56                   	push   %esi$/;"	l
f0104015	obj/kern/kernel.asm	/^f0104015:	53                   	push   %ebx$/;"	l
f0104016	obj/kern/kernel.asm	/^f0104016:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104019	obj/kern/kernel.asm	/^f0104019:	e8 5b 2a 00 00       	call   f0106a79 <cpunum>$/;"	l
f010401e	obj/kern/kernel.asm	/^f010401e:	89 c3                	mov    %eax,%ebx$/;"	l
f0104020	obj/kern/kernel.asm	/^f0104020:	e8 54 2a 00 00       	call   f0106a79 <cpunum>$/;"	l
f0104025	obj/kern/kernel.asm	/^f0104025:	6b db 74             	imul   $0x74,%ebx,%ebx$/;"	l
f0104028	obj/kern/kernel.asm	/^f0104028:	f7 d8                	neg    %eax$/;"	l
f010402a	obj/kern/kernel.asm	/^f010402a:	c1 e0 10             	shl    $0x10,%eax$/;"	l
f010402d	obj/kern/kernel.asm	/^f010402d:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0104032	obj/kern/kernel.asm	/^f0104032:	89 83 30 90 2b f0    	mov    %eax,-0xfd46fd0(%ebx)$/;"	l
f0104038	obj/kern/kernel.asm	/^f0104038:	e8 3c 2a 00 00       	call   f0106a79 <cpunum>$/;"	l
f010403d	obj/kern/kernel.asm	/^f010403d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104040	obj/kern/kernel.asm	/^f0104040:	66 c7 80 34 90 2b f0 	movw   $0x10,-0xfd46fcc(%eax)$/;"	l
f0104047	obj/kern/kernel.asm	/^f0104047:	10 00 $/;"	l
f0104049	obj/kern/kernel.asm	/^f0104049:	e8 2b 2a 00 00       	call   f0106a79 <cpunum>$/;"	l
f010404e	obj/kern/kernel.asm	/^f010404e:	8d 58 05             	lea    0x5(%eax),%ebx$/;"	l
f0104051	obj/kern/kernel.asm	/^f0104051:	e8 23 2a 00 00       	call   f0106a79 <cpunum>$/;"	l
f0104056	obj/kern/kernel.asm	/^f0104056:	89 c7                	mov    %eax,%edi$/;"	l
f0104058	obj/kern/kernel.asm	/^f0104058:	e8 1c 2a 00 00       	call   f0106a79 <cpunum>$/;"	l
f010405d	obj/kern/kernel.asm	/^f010405d:	89 c6                	mov    %eax,%esi$/;"	l
f010405f	obj/kern/kernel.asm	/^f010405f:	e8 15 2a 00 00       	call   f0106a79 <cpunum>$/;"	l
f0104064	obj/kern/kernel.asm	/^f0104064:	66 c7 04 dd 40 43 12 	movw   $0x67,-0xfedbcc0(,%ebx,8)$/;"	l
f010406b	obj/kern/kernel.asm	/^f010406b:	f0 67 00 $/;"	l
f010406e	obj/kern/kernel.asm	/^f010406e:	6b ff 74             	imul   $0x74,%edi,%edi$/;"	l
f0104071	obj/kern/kernel.asm	/^f0104071:	81 c7 2c 90 2b f0    	add    $0xf02b902c,%edi$/;"	l
f0104077	obj/kern/kernel.asm	/^f0104077:	66 89 3c dd 42 43 12 	mov    %di,-0xfedbcbe(,%ebx,8)$/;"	l
f010407e	obj/kern/kernel.asm	/^f010407e:	f0 $/;"	l
f010407f	obj/kern/kernel.asm	/^f010407f:	6b d6 74             	imul   $0x74,%esi,%edx$/;"	l
f0104082	obj/kern/kernel.asm	/^f0104082:	81 c2 2c 90 2b f0    	add    $0xf02b902c,%edx$/;"	l
f0104088	obj/kern/kernel.asm	/^f0104088:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f010408b	obj/kern/kernel.asm	/^f010408b:	88 14 dd 44 43 12 f0 	mov    %dl,-0xfedbcbc(,%ebx,8)$/;"	l
f0104092	obj/kern/kernel.asm	/^f0104092:	c6 04 dd 45 43 12 f0 	movb   $0x99,-0xfedbcbb(,%ebx,8)$/;"	l
f0104099	obj/kern/kernel.asm	/^f0104099:	99 $/;"	l
f010409a	obj/kern/kernel.asm	/^f010409a:	c6 04 dd 46 43 12 f0 	movb   $0x40,-0xfedbcba(,%ebx,8)$/;"	l
f01040a1	obj/kern/kernel.asm	/^f01040a1:	40 $/;"	l
f01040a2	obj/kern/kernel.asm	/^f01040a2:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01040a5	obj/kern/kernel.asm	/^f01040a5:	05 2c 90 2b f0       	add    $0xf02b902c,%eax$/;"	l
f01040aa	obj/kern/kernel.asm	/^f01040aa:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f01040ad	obj/kern/kernel.asm	/^f01040ad:	88 04 dd 47 43 12 f0 	mov    %al,-0xfedbcb9(,%ebx,8)$/;"	l
f01040b4	obj/kern/kernel.asm	/^f01040b4:	e8 c0 29 00 00       	call   f0106a79 <cpunum>$/;"	l
f01040b9	obj/kern/kernel.asm	/^f01040b9:	80 24 c5 6d 43 12 f0 	andb   $0xef,-0xfedbc93(,%eax,8)$/;"	l
f01040c0	obj/kern/kernel.asm	/^f01040c0:	ef $/;"	l
f01040c1	obj/kern/kernel.asm	/^f01040c1:	e8 b3 29 00 00       	call   f0106a79 <cpunum>$/;"	l
f01040c6	obj/kern/kernel.asm	/^f01040c6:	8d 04 c5 28 00 00 00 	lea    0x28(,%eax,8),%eax$/;"	l
f01040cd	obj/kern/kernel.asm	/^f01040cd:	0f 00 d8             	ltr    %ax$/;"	l
f01040d0	obj/kern/kernel.asm	/^f01040d0:	b8 aa 43 12 f0       	mov    $0xf01243aa,%eax$/;"	l
f01040d5	obj/kern/kernel.asm	/^f01040d5:	0f 01 18             	lidtl  (%eax)$/;"	l
f01040d8	obj/kern/kernel.asm	/^f01040d8:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01040db	obj/kern/kernel.asm	/^f01040db:	5b                   	pop    %ebx$/;"	l
f01040dc	obj/kern/kernel.asm	/^f01040dc:	5e                   	pop    %esi$/;"	l
f01040dd	obj/kern/kernel.asm	/^f01040dd:	5f                   	pop    %edi$/;"	l
f01040de	obj/kern/kernel.asm	/^f01040de:	5d                   	pop    %ebp$/;"	l
f01040df	obj/kern/kernel.asm	/^f01040df:	c3                   	ret    $/;"	l
f01040e0	obj/kern/kernel.asm	/^f01040e0 <trap_init>:$/;"	l
f01040e0	obj/kern/kernel.asm	/^f01040e0:	55                   	push   %ebp$/;"	l
f01040e1	obj/kern/kernel.asm	/^f01040e1:	89 e5                	mov    %esp,%ebp$/;"	l
f01040e3	obj/kern/kernel.asm	/^f01040e3:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01040e6	obj/kern/kernel.asm	/^f01040e6:	b8 14 4d 10 f0       	mov    $0xf0104d14,%eax$/;"	l
f01040eb	obj/kern/kernel.asm	/^f01040eb:	66 a3 60 82 2b f0    	mov    %ax,0xf02b8260$/;"	l
f01040f1	obj/kern/kernel.asm	/^f01040f1:	66 c7 05 62 82 2b f0 	movw   $0x8,0xf02b8262$/;"	l
f01040f8	obj/kern/kernel.asm	/^f01040f8:	08 00 $/;"	l
f01040fa	obj/kern/kernel.asm	/^f01040fa:	c6 05 64 82 2b f0 00 	movb   $0x0,0xf02b8264$/;"	l
f0104101	obj/kern/kernel.asm	/^f0104101:	c6 05 65 82 2b f0 8e 	movb   $0x8e,0xf02b8265$/;"	l
f0104108	obj/kern/kernel.asm	/^f0104108:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010410b	obj/kern/kernel.asm	/^f010410b:	66 a3 66 82 2b f0    	mov    %ax,0xf02b8266$/;"	l
f0104111	obj/kern/kernel.asm	/^f0104111:	b8 1e 4d 10 f0       	mov    $0xf0104d1e,%eax$/;"	l
f0104116	obj/kern/kernel.asm	/^f0104116:	66 a3 68 82 2b f0    	mov    %ax,0xf02b8268$/;"	l
f010411c	obj/kern/kernel.asm	/^f010411c:	66 c7 05 6a 82 2b f0 	movw   $0x8,0xf02b826a$/;"	l
f0104123	obj/kern/kernel.asm	/^f0104123:	08 00 $/;"	l
f0104125	obj/kern/kernel.asm	/^f0104125:	c6 05 6c 82 2b f0 00 	movb   $0x0,0xf02b826c$/;"	l
f010412c	obj/kern/kernel.asm	/^f010412c:	c6 05 6d 82 2b f0 8e 	movb   $0x8e,0xf02b826d$/;"	l
f0104133	obj/kern/kernel.asm	/^f0104133:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104136	obj/kern/kernel.asm	/^f0104136:	66 a3 6e 82 2b f0    	mov    %ax,0xf02b826e$/;"	l
f010413c	obj/kern/kernel.asm	/^f010413c:	b8 28 4d 10 f0       	mov    $0xf0104d28,%eax$/;"	l
f0104141	obj/kern/kernel.asm	/^f0104141:	66 a3 70 82 2b f0    	mov    %ax,0xf02b8270$/;"	l
f0104147	obj/kern/kernel.asm	/^f0104147:	66 c7 05 72 82 2b f0 	movw   $0x8,0xf02b8272$/;"	l
f010414e	obj/kern/kernel.asm	/^f010414e:	08 00 $/;"	l
f0104150	obj/kern/kernel.asm	/^f0104150:	c6 05 74 82 2b f0 00 	movb   $0x0,0xf02b8274$/;"	l
f0104157	obj/kern/kernel.asm	/^f0104157:	c6 05 75 82 2b f0 8e 	movb   $0x8e,0xf02b8275$/;"	l
f010415e	obj/kern/kernel.asm	/^f010415e:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104161	obj/kern/kernel.asm	/^f0104161:	66 a3 76 82 2b f0    	mov    %ax,0xf02b8276$/;"	l
f0104167	obj/kern/kernel.asm	/^f0104167:	b8 32 4d 10 f0       	mov    $0xf0104d32,%eax$/;"	l
f010416c	obj/kern/kernel.asm	/^f010416c:	66 a3 78 82 2b f0    	mov    %ax,0xf02b8278$/;"	l
f0104172	obj/kern/kernel.asm	/^f0104172:	66 c7 05 7a 82 2b f0 	movw   $0x8,0xf02b827a$/;"	l
f0104179	obj/kern/kernel.asm	/^f0104179:	08 00 $/;"	l
f010417b	obj/kern/kernel.asm	/^f010417b:	c6 05 7c 82 2b f0 00 	movb   $0x0,0xf02b827c$/;"	l
f0104182	obj/kern/kernel.asm	/^f0104182:	c6 05 7d 82 2b f0 ee 	movb   $0xee,0xf02b827d$/;"	l
f0104189	obj/kern/kernel.asm	/^f0104189:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010418c	obj/kern/kernel.asm	/^f010418c:	66 a3 7e 82 2b f0    	mov    %ax,0xf02b827e$/;"	l
f0104192	obj/kern/kernel.asm	/^f0104192:	b8 3c 4d 10 f0       	mov    $0xf0104d3c,%eax$/;"	l
f0104197	obj/kern/kernel.asm	/^f0104197:	66 a3 80 82 2b f0    	mov    %ax,0xf02b8280$/;"	l
f010419d	obj/kern/kernel.asm	/^f010419d:	66 c7 05 82 82 2b f0 	movw   $0x8,0xf02b8282$/;"	l
f01041a4	obj/kern/kernel.asm	/^f01041a4:	08 00 $/;"	l
f01041a6	obj/kern/kernel.asm	/^f01041a6:	c6 05 84 82 2b f0 00 	movb   $0x0,0xf02b8284$/;"	l
f01041ad	obj/kern/kernel.asm	/^f01041ad:	c6 05 85 82 2b f0 8e 	movb   $0x8e,0xf02b8285$/;"	l
f01041b4	obj/kern/kernel.asm	/^f01041b4:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01041b7	obj/kern/kernel.asm	/^f01041b7:	66 a3 86 82 2b f0    	mov    %ax,0xf02b8286$/;"	l
f01041bd	obj/kern/kernel.asm	/^f01041bd:	b8 46 4d 10 f0       	mov    $0xf0104d46,%eax$/;"	l
f01041c2	obj/kern/kernel.asm	/^f01041c2:	66 a3 88 82 2b f0    	mov    %ax,0xf02b8288$/;"	l
f01041c8	obj/kern/kernel.asm	/^f01041c8:	66 c7 05 8a 82 2b f0 	movw   $0x8,0xf02b828a$/;"	l
f01041cf	obj/kern/kernel.asm	/^f01041cf:	08 00 $/;"	l
f01041d1	obj/kern/kernel.asm	/^f01041d1:	c6 05 8c 82 2b f0 00 	movb   $0x0,0xf02b828c$/;"	l
f01041d8	obj/kern/kernel.asm	/^f01041d8:	c6 05 8d 82 2b f0 8e 	movb   $0x8e,0xf02b828d$/;"	l
f01041df	obj/kern/kernel.asm	/^f01041df:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01041e2	obj/kern/kernel.asm	/^f01041e2:	66 a3 8e 82 2b f0    	mov    %ax,0xf02b828e$/;"	l
f01041e8	obj/kern/kernel.asm	/^f01041e8:	b8 50 4d 10 f0       	mov    $0xf0104d50,%eax$/;"	l
f01041ed	obj/kern/kernel.asm	/^f01041ed:	66 a3 90 82 2b f0    	mov    %ax,0xf02b8290$/;"	l
f01041f3	obj/kern/kernel.asm	/^f01041f3:	66 c7 05 92 82 2b f0 	movw   $0x8,0xf02b8292$/;"	l
f01041fa	obj/kern/kernel.asm	/^f01041fa:	08 00 $/;"	l
f01041fc	obj/kern/kernel.asm	/^f01041fc:	c6 05 94 82 2b f0 00 	movb   $0x0,0xf02b8294$/;"	l
f0104203	obj/kern/kernel.asm	/^f0104203:	c6 05 95 82 2b f0 8e 	movb   $0x8e,0xf02b8295$/;"	l
f010420a	obj/kern/kernel.asm	/^f010420a:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010420d	obj/kern/kernel.asm	/^f010420d:	66 a3 96 82 2b f0    	mov    %ax,0xf02b8296$/;"	l
f0104213	obj/kern/kernel.asm	/^f0104213:	b8 5a 4d 10 f0       	mov    $0xf0104d5a,%eax$/;"	l
f0104218	obj/kern/kernel.asm	/^f0104218:	66 a3 98 82 2b f0    	mov    %ax,0xf02b8298$/;"	l
f010421e	obj/kern/kernel.asm	/^f010421e:	66 c7 05 9a 82 2b f0 	movw   $0x8,0xf02b829a$/;"	l
f0104225	obj/kern/kernel.asm	/^f0104225:	08 00 $/;"	l
f0104227	obj/kern/kernel.asm	/^f0104227:	c6 05 9c 82 2b f0 00 	movb   $0x0,0xf02b829c$/;"	l
f010422e	obj/kern/kernel.asm	/^f010422e:	c6 05 9d 82 2b f0 8e 	movb   $0x8e,0xf02b829d$/;"	l
f0104235	obj/kern/kernel.asm	/^f0104235:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104238	obj/kern/kernel.asm	/^f0104238:	66 a3 9e 82 2b f0    	mov    %ax,0xf02b829e$/;"	l
f010423e	obj/kern/kernel.asm	/^f010423e:	b8 64 4d 10 f0       	mov    $0xf0104d64,%eax$/;"	l
f0104243	obj/kern/kernel.asm	/^f0104243:	66 a3 a0 82 2b f0    	mov    %ax,0xf02b82a0$/;"	l
f0104249	obj/kern/kernel.asm	/^f0104249:	66 c7 05 a2 82 2b f0 	movw   $0x8,0xf02b82a2$/;"	l
f0104250	obj/kern/kernel.asm	/^f0104250:	08 00 $/;"	l
f0104252	obj/kern/kernel.asm	/^f0104252:	c6 05 a4 82 2b f0 00 	movb   $0x0,0xf02b82a4$/;"	l
f0104259	obj/kern/kernel.asm	/^f0104259:	c6 05 a5 82 2b f0 8e 	movb   $0x8e,0xf02b82a5$/;"	l
f0104260	obj/kern/kernel.asm	/^f0104260:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104263	obj/kern/kernel.asm	/^f0104263:	66 a3 a6 82 2b f0    	mov    %ax,0xf02b82a6$/;"	l
f0104269	obj/kern/kernel.asm	/^f0104269:	b8 6c 4d 10 f0       	mov    $0xf0104d6c,%eax$/;"	l
f010426e	obj/kern/kernel.asm	/^f010426e:	66 a3 b0 82 2b f0    	mov    %ax,0xf02b82b0$/;"	l
f0104274	obj/kern/kernel.asm	/^f0104274:	66 c7 05 b2 82 2b f0 	movw   $0x8,0xf02b82b2$/;"	l
f010427b	obj/kern/kernel.asm	/^f010427b:	08 00 $/;"	l
f010427d	obj/kern/kernel.asm	/^f010427d:	c6 05 b4 82 2b f0 00 	movb   $0x0,0xf02b82b4$/;"	l
f0104284	obj/kern/kernel.asm	/^f0104284:	c6 05 b5 82 2b f0 8e 	movb   $0x8e,0xf02b82b5$/;"	l
f010428b	obj/kern/kernel.asm	/^f010428b:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010428e	obj/kern/kernel.asm	/^f010428e:	66 a3 b6 82 2b f0    	mov    %ax,0xf02b82b6$/;"	l
f0104294	obj/kern/kernel.asm	/^f0104294:	b8 74 4d 10 f0       	mov    $0xf0104d74,%eax$/;"	l
f0104299	obj/kern/kernel.asm	/^f0104299:	66 a3 b8 82 2b f0    	mov    %ax,0xf02b82b8$/;"	l
f010429f	obj/kern/kernel.asm	/^f010429f:	66 c7 05 ba 82 2b f0 	movw   $0x8,0xf02b82ba$/;"	l
f01042a6	obj/kern/kernel.asm	/^f01042a6:	08 00 $/;"	l
f01042a8	obj/kern/kernel.asm	/^f01042a8:	c6 05 bc 82 2b f0 00 	movb   $0x0,0xf02b82bc$/;"	l
f01042af	obj/kern/kernel.asm	/^f01042af:	c6 05 bd 82 2b f0 8e 	movb   $0x8e,0xf02b82bd$/;"	l
f01042b6	obj/kern/kernel.asm	/^f01042b6:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01042b9	obj/kern/kernel.asm	/^f01042b9:	66 a3 be 82 2b f0    	mov    %ax,0xf02b82be$/;"	l
f01042bf	obj/kern/kernel.asm	/^f01042bf:	b8 7c 4d 10 f0       	mov    $0xf0104d7c,%eax$/;"	l
f01042c4	obj/kern/kernel.asm	/^f01042c4:	66 a3 c0 82 2b f0    	mov    %ax,0xf02b82c0$/;"	l
f01042ca	obj/kern/kernel.asm	/^f01042ca:	66 c7 05 c2 82 2b f0 	movw   $0x8,0xf02b82c2$/;"	l
f01042d1	obj/kern/kernel.asm	/^f01042d1:	08 00 $/;"	l
f01042d3	obj/kern/kernel.asm	/^f01042d3:	c6 05 c4 82 2b f0 00 	movb   $0x0,0xf02b82c4$/;"	l
f01042da	obj/kern/kernel.asm	/^f01042da:	c6 05 c5 82 2b f0 8e 	movb   $0x8e,0xf02b82c5$/;"	l
f01042e1	obj/kern/kernel.asm	/^f01042e1:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01042e4	obj/kern/kernel.asm	/^f01042e4:	66 a3 c6 82 2b f0    	mov    %ax,0xf02b82c6$/;"	l
f01042ea	obj/kern/kernel.asm	/^f01042ea:	b8 84 4d 10 f0       	mov    $0xf0104d84,%eax$/;"	l
f01042ef	obj/kern/kernel.asm	/^f01042ef:	66 a3 c8 82 2b f0    	mov    %ax,0xf02b82c8$/;"	l
f01042f5	obj/kern/kernel.asm	/^f01042f5:	66 c7 05 ca 82 2b f0 	movw   $0x8,0xf02b82ca$/;"	l
f01042fc	obj/kern/kernel.asm	/^f01042fc:	08 00 $/;"	l
f01042fe	obj/kern/kernel.asm	/^f01042fe:	c6 05 cc 82 2b f0 00 	movb   $0x0,0xf02b82cc$/;"	l
f0104305	obj/kern/kernel.asm	/^f0104305:	c6 05 cd 82 2b f0 8e 	movb   $0x8e,0xf02b82cd$/;"	l
f010430c	obj/kern/kernel.asm	/^f010430c:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010430f	obj/kern/kernel.asm	/^f010430f:	66 a3 ce 82 2b f0    	mov    %ax,0xf02b82ce$/;"	l
f0104315	obj/kern/kernel.asm	/^f0104315:	b8 8c 4d 10 f0       	mov    $0xf0104d8c,%eax$/;"	l
f010431a	obj/kern/kernel.asm	/^f010431a:	66 a3 d0 82 2b f0    	mov    %ax,0xf02b82d0$/;"	l
f0104320	obj/kern/kernel.asm	/^f0104320:	66 c7 05 d2 82 2b f0 	movw   $0x8,0xf02b82d2$/;"	l
f0104327	obj/kern/kernel.asm	/^f0104327:	08 00 $/;"	l
f0104329	obj/kern/kernel.asm	/^f0104329:	c6 05 d4 82 2b f0 00 	movb   $0x0,0xf02b82d4$/;"	l
f0104330	obj/kern/kernel.asm	/^f0104330:	c6 05 d5 82 2b f0 8e 	movb   $0x8e,0xf02b82d5$/;"	l
f0104337	obj/kern/kernel.asm	/^f0104337:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010433a	obj/kern/kernel.asm	/^f010433a:	66 a3 d6 82 2b f0    	mov    %ax,0xf02b82d6$/;"	l
f0104340	obj/kern/kernel.asm	/^f0104340:	b8 90 4d 10 f0       	mov    $0xf0104d90,%eax$/;"	l
f0104345	obj/kern/kernel.asm	/^f0104345:	66 a3 e0 82 2b f0    	mov    %ax,0xf02b82e0$/;"	l
f010434b	obj/kern/kernel.asm	/^f010434b:	66 c7 05 e2 82 2b f0 	movw   $0x8,0xf02b82e2$/;"	l
f0104352	obj/kern/kernel.asm	/^f0104352:	08 00 $/;"	l
f0104354	obj/kern/kernel.asm	/^f0104354:	c6 05 e4 82 2b f0 00 	movb   $0x0,0xf02b82e4$/;"	l
f010435b	obj/kern/kernel.asm	/^f010435b:	c6 05 e5 82 2b f0 8e 	movb   $0x8e,0xf02b82e5$/;"	l
f0104362	obj/kern/kernel.asm	/^f0104362:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104365	obj/kern/kernel.asm	/^f0104365:	66 a3 e6 82 2b f0    	mov    %ax,0xf02b82e6$/;"	l
f010436b	obj/kern/kernel.asm	/^f010436b:	b8 96 4d 10 f0       	mov    $0xf0104d96,%eax$/;"	l
f0104370	obj/kern/kernel.asm	/^f0104370:	66 a3 e8 82 2b f0    	mov    %ax,0xf02b82e8$/;"	l
f0104376	obj/kern/kernel.asm	/^f0104376:	66 c7 05 ea 82 2b f0 	movw   $0x8,0xf02b82ea$/;"	l
f010437d	obj/kern/kernel.asm	/^f010437d:	08 00 $/;"	l
f010437f	obj/kern/kernel.asm	/^f010437f:	c6 05 ec 82 2b f0 00 	movb   $0x0,0xf02b82ec$/;"	l
f0104386	obj/kern/kernel.asm	/^f0104386:	c6 05 ed 82 2b f0 8e 	movb   $0x8e,0xf02b82ed$/;"	l
f010438d	obj/kern/kernel.asm	/^f010438d:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104390	obj/kern/kernel.asm	/^f0104390:	66 a3 ee 82 2b f0    	mov    %ax,0xf02b82ee$/;"	l
f0104396	obj/kern/kernel.asm	/^f0104396:	b8 9a 4d 10 f0       	mov    $0xf0104d9a,%eax$/;"	l
f010439b	obj/kern/kernel.asm	/^f010439b:	66 a3 f0 82 2b f0    	mov    %ax,0xf02b82f0$/;"	l
f01043a1	obj/kern/kernel.asm	/^f01043a1:	66 c7 05 f2 82 2b f0 	movw   $0x8,0xf02b82f2$/;"	l
f01043a8	obj/kern/kernel.asm	/^f01043a8:	08 00 $/;"	l
f01043aa	obj/kern/kernel.asm	/^f01043aa:	c6 05 f4 82 2b f0 00 	movb   $0x0,0xf02b82f4$/;"	l
f01043b1	obj/kern/kernel.asm	/^f01043b1:	c6 05 f5 82 2b f0 8e 	movb   $0x8e,0xf02b82f5$/;"	l
f01043b8	obj/kern/kernel.asm	/^f01043b8:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01043bb	obj/kern/kernel.asm	/^f01043bb:	66 a3 f6 82 2b f0    	mov    %ax,0xf02b82f6$/;"	l
f01043c1	obj/kern/kernel.asm	/^f01043c1:	b8 a0 4d 10 f0       	mov    $0xf0104da0,%eax$/;"	l
f01043c6	obj/kern/kernel.asm	/^f01043c6:	66 a3 f8 82 2b f0    	mov    %ax,0xf02b82f8$/;"	l
f01043cc	obj/kern/kernel.asm	/^f01043cc:	66 c7 05 fa 82 2b f0 	movw   $0x8,0xf02b82fa$/;"	l
f01043d3	obj/kern/kernel.asm	/^f01043d3:	08 00 $/;"	l
f01043d5	obj/kern/kernel.asm	/^f01043d5:	c6 05 fc 82 2b f0 00 	movb   $0x0,0xf02b82fc$/;"	l
f01043dc	obj/kern/kernel.asm	/^f01043dc:	c6 05 fd 82 2b f0 8e 	movb   $0x8e,0xf02b82fd$/;"	l
f01043e3	obj/kern/kernel.asm	/^f01043e3:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01043e6	obj/kern/kernel.asm	/^f01043e6:	66 a3 fe 82 2b f0    	mov    %ax,0xf02b82fe$/;"	l
f01043ec	obj/kern/kernel.asm	/^f01043ec:	b8 a6 4d 10 f0       	mov    $0xf0104da6,%eax$/;"	l
f01043f1	obj/kern/kernel.asm	/^f01043f1:	66 a3 e0 83 2b f0    	mov    %ax,0xf02b83e0$/;"	l
f01043f7	obj/kern/kernel.asm	/^f01043f7:	66 c7 05 e2 83 2b f0 	movw   $0x8,0xf02b83e2$/;"	l
f01043fe	obj/kern/kernel.asm	/^f01043fe:	08 00 $/;"	l
f0104400	obj/kern/kernel.asm	/^f0104400:	c6 05 e4 83 2b f0 00 	movb   $0x0,0xf02b83e4$/;"	l
f0104407	obj/kern/kernel.asm	/^f0104407:	c6 05 e5 83 2b f0 ee 	movb   $0xee,0xf02b83e5$/;"	l
f010440e	obj/kern/kernel.asm	/^f010440e:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104411	obj/kern/kernel.asm	/^f0104411:	66 a3 e6 83 2b f0    	mov    %ax,0xf02b83e6$/;"	l
f0104417	obj/kern/kernel.asm	/^f0104417:	b8 ac 4d 10 f0       	mov    $0xf0104dac,%eax$/;"	l
f010441c	obj/kern/kernel.asm	/^f010441c:	66 a3 60 83 2b f0    	mov    %ax,0xf02b8360$/;"	l
f0104422	obj/kern/kernel.asm	/^f0104422:	66 c7 05 62 83 2b f0 	movw   $0x8,0xf02b8362$/;"	l
f0104429	obj/kern/kernel.asm	/^f0104429:	08 00 $/;"	l
f010442b	obj/kern/kernel.asm	/^f010442b:	c6 05 64 83 2b f0 00 	movb   $0x0,0xf02b8364$/;"	l
f0104432	obj/kern/kernel.asm	/^f0104432:	c6 05 65 83 2b f0 8e 	movb   $0x8e,0xf02b8365$/;"	l
f0104439	obj/kern/kernel.asm	/^f0104439:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010443c	obj/kern/kernel.asm	/^f010443c:	66 a3 66 83 2b f0    	mov    %ax,0xf02b8366$/;"	l
f0104442	obj/kern/kernel.asm	/^f0104442:	b8 b2 4d 10 f0       	mov    $0xf0104db2,%eax$/;"	l
f0104447	obj/kern/kernel.asm	/^f0104447:	66 a3 68 83 2b f0    	mov    %ax,0xf02b8368$/;"	l
f010444d	obj/kern/kernel.asm	/^f010444d:	66 c7 05 6a 83 2b f0 	movw   $0x8,0xf02b836a$/;"	l
f0104454	obj/kern/kernel.asm	/^f0104454:	08 00 $/;"	l
f0104456	obj/kern/kernel.asm	/^f0104456:	c6 05 6c 83 2b f0 00 	movb   $0x0,0xf02b836c$/;"	l
f010445d	obj/kern/kernel.asm	/^f010445d:	c6 05 6d 83 2b f0 8e 	movb   $0x8e,0xf02b836d$/;"	l
f0104464	obj/kern/kernel.asm	/^f0104464:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104467	obj/kern/kernel.asm	/^f0104467:	66 a3 6e 83 2b f0    	mov    %ax,0xf02b836e$/;"	l
f010446d	obj/kern/kernel.asm	/^f010446d:	b8 b8 4d 10 f0       	mov    $0xf0104db8,%eax$/;"	l
f0104472	obj/kern/kernel.asm	/^f0104472:	66 a3 70 83 2b f0    	mov    %ax,0xf02b8370$/;"	l
f0104478	obj/kern/kernel.asm	/^f0104478:	66 c7 05 72 83 2b f0 	movw   $0x8,0xf02b8372$/;"	l
f010447f	obj/kern/kernel.asm	/^f010447f:	08 00 $/;"	l
f0104481	obj/kern/kernel.asm	/^f0104481:	c6 05 74 83 2b f0 00 	movb   $0x0,0xf02b8374$/;"	l
f0104488	obj/kern/kernel.asm	/^f0104488:	c6 05 75 83 2b f0 8e 	movb   $0x8e,0xf02b8375$/;"	l
f010448f	obj/kern/kernel.asm	/^f010448f:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104492	obj/kern/kernel.asm	/^f0104492:	66 a3 76 83 2b f0    	mov    %ax,0xf02b8376$/;"	l
f0104498	obj/kern/kernel.asm	/^f0104498:	b8 be 4d 10 f0       	mov    $0xf0104dbe,%eax$/;"	l
f010449d	obj/kern/kernel.asm	/^f010449d:	66 a3 78 83 2b f0    	mov    %ax,0xf02b8378$/;"	l
f01044a3	obj/kern/kernel.asm	/^f01044a3:	66 c7 05 7a 83 2b f0 	movw   $0x8,0xf02b837a$/;"	l
f01044aa	obj/kern/kernel.asm	/^f01044aa:	08 00 $/;"	l
f01044ac	obj/kern/kernel.asm	/^f01044ac:	c6 05 7c 83 2b f0 00 	movb   $0x0,0xf02b837c$/;"	l
f01044b3	obj/kern/kernel.asm	/^f01044b3:	c6 05 7d 83 2b f0 8e 	movb   $0x8e,0xf02b837d$/;"	l
f01044ba	obj/kern/kernel.asm	/^f01044ba:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01044bd	obj/kern/kernel.asm	/^f01044bd:	66 a3 7e 83 2b f0    	mov    %ax,0xf02b837e$/;"	l
f01044c3	obj/kern/kernel.asm	/^f01044c3:	b8 c4 4d 10 f0       	mov    $0xf0104dc4,%eax$/;"	l
f01044c8	obj/kern/kernel.asm	/^f01044c8:	66 a3 80 83 2b f0    	mov    %ax,0xf02b8380$/;"	l
f01044ce	obj/kern/kernel.asm	/^f01044ce:	66 c7 05 82 83 2b f0 	movw   $0x8,0xf02b8382$/;"	l
f01044d5	obj/kern/kernel.asm	/^f01044d5:	08 00 $/;"	l
f01044d7	obj/kern/kernel.asm	/^f01044d7:	c6 05 84 83 2b f0 00 	movb   $0x0,0xf02b8384$/;"	l
f01044de	obj/kern/kernel.asm	/^f01044de:	c6 05 85 83 2b f0 8e 	movb   $0x8e,0xf02b8385$/;"	l
f01044e5	obj/kern/kernel.asm	/^f01044e5:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01044e8	obj/kern/kernel.asm	/^f01044e8:	66 a3 86 83 2b f0    	mov    %ax,0xf02b8386$/;"	l
f01044ee	obj/kern/kernel.asm	/^f01044ee:	b8 ca 4d 10 f0       	mov    $0xf0104dca,%eax$/;"	l
f01044f3	obj/kern/kernel.asm	/^f01044f3:	66 a3 88 83 2b f0    	mov    %ax,0xf02b8388$/;"	l
f01044f9	obj/kern/kernel.asm	/^f01044f9:	66 c7 05 8a 83 2b f0 	movw   $0x8,0xf02b838a$/;"	l
f0104500	obj/kern/kernel.asm	/^f0104500:	08 00 $/;"	l
f0104502	obj/kern/kernel.asm	/^f0104502:	c6 05 8c 83 2b f0 00 	movb   $0x0,0xf02b838c$/;"	l
f0104509	obj/kern/kernel.asm	/^f0104509:	c6 05 8d 83 2b f0 8e 	movb   $0x8e,0xf02b838d$/;"	l
f0104510	obj/kern/kernel.asm	/^f0104510:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104513	obj/kern/kernel.asm	/^f0104513:	66 a3 8e 83 2b f0    	mov    %ax,0xf02b838e$/;"	l
f0104519	obj/kern/kernel.asm	/^f0104519:	b8 d0 4d 10 f0       	mov    $0xf0104dd0,%eax$/;"	l
f010451e	obj/kern/kernel.asm	/^f010451e:	66 a3 90 83 2b f0    	mov    %ax,0xf02b8390$/;"	l
f0104524	obj/kern/kernel.asm	/^f0104524:	66 c7 05 92 83 2b f0 	movw   $0x8,0xf02b8392$/;"	l
f010452b	obj/kern/kernel.asm	/^f010452b:	08 00 $/;"	l
f010452d	obj/kern/kernel.asm	/^f010452d:	c6 05 94 83 2b f0 00 	movb   $0x0,0xf02b8394$/;"	l
f0104534	obj/kern/kernel.asm	/^f0104534:	c6 05 95 83 2b f0 8e 	movb   $0x8e,0xf02b8395$/;"	l
f010453b	obj/kern/kernel.asm	/^f010453b:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010453e	obj/kern/kernel.asm	/^f010453e:	66 a3 96 83 2b f0    	mov    %ax,0xf02b8396$/;"	l
f0104544	obj/kern/kernel.asm	/^f0104544:	b8 d6 4d 10 f0       	mov    $0xf0104dd6,%eax$/;"	l
f0104549	obj/kern/kernel.asm	/^f0104549:	66 a3 98 83 2b f0    	mov    %ax,0xf02b8398$/;"	l
f010454f	obj/kern/kernel.asm	/^f010454f:	66 c7 05 9a 83 2b f0 	movw   $0x8,0xf02b839a$/;"	l
f0104556	obj/kern/kernel.asm	/^f0104556:	08 00 $/;"	l
f0104558	obj/kern/kernel.asm	/^f0104558:	c6 05 9c 83 2b f0 00 	movb   $0x0,0xf02b839c$/;"	l
f010455f	obj/kern/kernel.asm	/^f010455f:	c6 05 9d 83 2b f0 8e 	movb   $0x8e,0xf02b839d$/;"	l
f0104566	obj/kern/kernel.asm	/^f0104566:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104569	obj/kern/kernel.asm	/^f0104569:	66 a3 9e 83 2b f0    	mov    %ax,0xf02b839e$/;"	l
f010456f	obj/kern/kernel.asm	/^f010456f:	b8 dc 4d 10 f0       	mov    $0xf0104ddc,%eax$/;"	l
f0104574	obj/kern/kernel.asm	/^f0104574:	66 a3 a0 83 2b f0    	mov    %ax,0xf02b83a0$/;"	l
f010457a	obj/kern/kernel.asm	/^f010457a:	66 c7 05 a2 83 2b f0 	movw   $0x8,0xf02b83a2$/;"	l
f0104581	obj/kern/kernel.asm	/^f0104581:	08 00 $/;"	l
f0104583	obj/kern/kernel.asm	/^f0104583:	c6 05 a4 83 2b f0 00 	movb   $0x0,0xf02b83a4$/;"	l
f010458a	obj/kern/kernel.asm	/^f010458a:	c6 05 a5 83 2b f0 8e 	movb   $0x8e,0xf02b83a5$/;"	l
f0104591	obj/kern/kernel.asm	/^f0104591:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104594	obj/kern/kernel.asm	/^f0104594:	66 a3 a6 83 2b f0    	mov    %ax,0xf02b83a6$/;"	l
f010459a	obj/kern/kernel.asm	/^f010459a:	b8 e2 4d 10 f0       	mov    $0xf0104de2,%eax$/;"	l
f010459f	obj/kern/kernel.asm	/^f010459f:	66 a3 a8 83 2b f0    	mov    %ax,0xf02b83a8$/;"	l
f01045a5	obj/kern/kernel.asm	/^f01045a5:	66 c7 05 aa 83 2b f0 	movw   $0x8,0xf02b83aa$/;"	l
f01045ac	obj/kern/kernel.asm	/^f01045ac:	08 00 $/;"	l
f01045ae	obj/kern/kernel.asm	/^f01045ae:	c6 05 ac 83 2b f0 00 	movb   $0x0,0xf02b83ac$/;"	l
f01045b5	obj/kern/kernel.asm	/^f01045b5:	c6 05 ad 83 2b f0 8e 	movb   $0x8e,0xf02b83ad$/;"	l
f01045bc	obj/kern/kernel.asm	/^f01045bc:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01045bf	obj/kern/kernel.asm	/^f01045bf:	66 a3 ae 83 2b f0    	mov    %ax,0xf02b83ae$/;"	l
f01045c5	obj/kern/kernel.asm	/^f01045c5:	b8 e8 4d 10 f0       	mov    $0xf0104de8,%eax$/;"	l
f01045ca	obj/kern/kernel.asm	/^f01045ca:	66 a3 b0 83 2b f0    	mov    %ax,0xf02b83b0$/;"	l
f01045d0	obj/kern/kernel.asm	/^f01045d0:	66 c7 05 b2 83 2b f0 	movw   $0x8,0xf02b83b2$/;"	l
f01045d7	obj/kern/kernel.asm	/^f01045d7:	08 00 $/;"	l
f01045d9	obj/kern/kernel.asm	/^f01045d9:	c6 05 b4 83 2b f0 00 	movb   $0x0,0xf02b83b4$/;"	l
f01045e0	obj/kern/kernel.asm	/^f01045e0:	c6 05 b5 83 2b f0 8e 	movb   $0x8e,0xf02b83b5$/;"	l
f01045e7	obj/kern/kernel.asm	/^f01045e7:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01045ea	obj/kern/kernel.asm	/^f01045ea:	66 a3 b6 83 2b f0    	mov    %ax,0xf02b83b6$/;"	l
f01045f0	obj/kern/kernel.asm	/^f01045f0:	b8 ee 4d 10 f0       	mov    $0xf0104dee,%eax$/;"	l
f01045f5	obj/kern/kernel.asm	/^f01045f5:	66 a3 b8 83 2b f0    	mov    %ax,0xf02b83b8$/;"	l
f01045fb	obj/kern/kernel.asm	/^f01045fb:	66 c7 05 ba 83 2b f0 	movw   $0x8,0xf02b83ba$/;"	l
f0104602	obj/kern/kernel.asm	/^f0104602:	08 00 $/;"	l
f0104604	obj/kern/kernel.asm	/^f0104604:	c6 05 bc 83 2b f0 00 	movb   $0x0,0xf02b83bc$/;"	l
f010460b	obj/kern/kernel.asm	/^f010460b:	c6 05 bd 83 2b f0 8e 	movb   $0x8e,0xf02b83bd$/;"	l
f0104612	obj/kern/kernel.asm	/^f0104612:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104615	obj/kern/kernel.asm	/^f0104615:	66 a3 be 83 2b f0    	mov    %ax,0xf02b83be$/;"	l
f010461b	obj/kern/kernel.asm	/^f010461b:	b8 f4 4d 10 f0       	mov    $0xf0104df4,%eax$/;"	l
f0104620	obj/kern/kernel.asm	/^f0104620:	66 a3 c0 83 2b f0    	mov    %ax,0xf02b83c0$/;"	l
f0104626	obj/kern/kernel.asm	/^f0104626:	66 c7 05 c2 83 2b f0 	movw   $0x8,0xf02b83c2$/;"	l
f010462d	obj/kern/kernel.asm	/^f010462d:	08 00 $/;"	l
f010462f	obj/kern/kernel.asm	/^f010462f:	c6 05 c4 83 2b f0 00 	movb   $0x0,0xf02b83c4$/;"	l
f0104636	obj/kern/kernel.asm	/^f0104636:	c6 05 c5 83 2b f0 8e 	movb   $0x8e,0xf02b83c5$/;"	l
f010463d	obj/kern/kernel.asm	/^f010463d:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104640	obj/kern/kernel.asm	/^f0104640:	66 a3 c6 83 2b f0    	mov    %ax,0xf02b83c6$/;"	l
f0104646	obj/kern/kernel.asm	/^f0104646:	b8 fa 4d 10 f0       	mov    $0xf0104dfa,%eax$/;"	l
f010464b	obj/kern/kernel.asm	/^f010464b:	66 a3 c8 83 2b f0    	mov    %ax,0xf02b83c8$/;"	l
f0104651	obj/kern/kernel.asm	/^f0104651:	66 c7 05 ca 83 2b f0 	movw   $0x8,0xf02b83ca$/;"	l
f0104658	obj/kern/kernel.asm	/^f0104658:	08 00 $/;"	l
f010465a	obj/kern/kernel.asm	/^f010465a:	c6 05 cc 83 2b f0 00 	movb   $0x0,0xf02b83cc$/;"	l
f0104661	obj/kern/kernel.asm	/^f0104661:	c6 05 cd 83 2b f0 8e 	movb   $0x8e,0xf02b83cd$/;"	l
f0104668	obj/kern/kernel.asm	/^f0104668:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010466b	obj/kern/kernel.asm	/^f010466b:	66 a3 ce 83 2b f0    	mov    %ax,0xf02b83ce$/;"	l
f0104671	obj/kern/kernel.asm	/^f0104671:	b8 00 4e 10 f0       	mov    $0xf0104e00,%eax$/;"	l
f0104676	obj/kern/kernel.asm	/^f0104676:	66 a3 d0 83 2b f0    	mov    %ax,0xf02b83d0$/;"	l
f010467c	obj/kern/kernel.asm	/^f010467c:	66 c7 05 d2 83 2b f0 	movw   $0x8,0xf02b83d2$/;"	l
f0104683	obj/kern/kernel.asm	/^f0104683:	08 00 $/;"	l
f0104685	obj/kern/kernel.asm	/^f0104685:	c6 05 d4 83 2b f0 00 	movb   $0x0,0xf02b83d4$/;"	l
f010468c	obj/kern/kernel.asm	/^f010468c:	c6 05 d5 83 2b f0 8e 	movb   $0x8e,0xf02b83d5$/;"	l
f0104693	obj/kern/kernel.asm	/^f0104693:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104696	obj/kern/kernel.asm	/^f0104696:	66 a3 d6 83 2b f0    	mov    %ax,0xf02b83d6$/;"	l
f010469c	obj/kern/kernel.asm	/^f010469c:	b8 06 4e 10 f0       	mov    $0xf0104e06,%eax$/;"	l
f01046a1	obj/kern/kernel.asm	/^f01046a1:	66 a3 d8 83 2b f0    	mov    %ax,0xf02b83d8$/;"	l
f01046a7	obj/kern/kernel.asm	/^f01046a7:	66 c7 05 da 83 2b f0 	movw   $0x8,0xf02b83da$/;"	l
f01046ae	obj/kern/kernel.asm	/^f01046ae:	08 00 $/;"	l
f01046b0	obj/kern/kernel.asm	/^f01046b0:	c6 05 dc 83 2b f0 00 	movb   $0x0,0xf02b83dc$/;"	l
f01046b7	obj/kern/kernel.asm	/^f01046b7:	c6 05 dd 83 2b f0 8e 	movb   $0x8e,0xf02b83dd$/;"	l
f01046be	obj/kern/kernel.asm	/^f01046be:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01046c1	obj/kern/kernel.asm	/^f01046c1:	66 a3 de 83 2b f0    	mov    %ax,0xf02b83de$/;"	l
f01046c7	obj/kern/kernel.asm	/^f01046c7:	e8 44 f9 ff ff       	call   f0104010 <trap_init_percpu>$/;"	l
f01046cc	obj/kern/kernel.asm	/^f01046cc:	c9                   	leave  $/;"	l
f01046cd	obj/kern/kernel.asm	/^f01046cd:	c3                   	ret    $/;"	l
f01046ce	obj/kern/kernel.asm	/^f01046ce <print_regs>:$/;"	l
f01046ce	obj/kern/kernel.asm	/^f01046ce:	55                   	push   %ebp$/;"	l
f01046cf	obj/kern/kernel.asm	/^f01046cf:	89 e5                	mov    %esp,%ebp$/;"	l
f01046d1	obj/kern/kernel.asm	/^f01046d1:	53                   	push   %ebx$/;"	l
f01046d2	obj/kern/kernel.asm	/^f01046d2:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01046d5	obj/kern/kernel.asm	/^f01046d5:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01046d8	obj/kern/kernel.asm	/^f01046d8:	8b 03                	mov    (%ebx),%eax$/;"	l
f01046da	obj/kern/kernel.asm	/^f01046da:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01046de	obj/kern/kernel.asm	/^f01046de:	c7 04 24 61 8d 10 f0 	movl   $0xf0108d61,(%esp)$/;"	l
f01046e5	obj/kern/kernel.asm	/^f01046e5:	e8 02 f9 ff ff       	call   f0103fec <cprintf>$/;"	l
f01046ea	obj/kern/kernel.asm	/^f01046ea:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f01046ed	obj/kern/kernel.asm	/^f01046ed:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01046f1	obj/kern/kernel.asm	/^f01046f1:	c7 04 24 70 8d 10 f0 	movl   $0xf0108d70,(%esp)$/;"	l
f01046f8	obj/kern/kernel.asm	/^f01046f8:	e8 ef f8 ff ff       	call   f0103fec <cprintf>$/;"	l
f01046fd	obj/kern/kernel.asm	/^f01046fd:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0104700	obj/kern/kernel.asm	/^f0104700:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104704	obj/kern/kernel.asm	/^f0104704:	c7 04 24 7f 8d 10 f0 	movl   $0xf0108d7f,(%esp)$/;"	l
f010470b	obj/kern/kernel.asm	/^f010470b:	e8 dc f8 ff ff       	call   f0103fec <cprintf>$/;"	l
f0104710	obj/kern/kernel.asm	/^f0104710:	8b 43 0c             	mov    0xc(%ebx),%eax$/;"	l
f0104713	obj/kern/kernel.asm	/^f0104713:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104717	obj/kern/kernel.asm	/^f0104717:	c7 04 24 8e 8d 10 f0 	movl   $0xf0108d8e,(%esp)$/;"	l
f010471e	obj/kern/kernel.asm	/^f010471e:	e8 c9 f8 ff ff       	call   f0103fec <cprintf>$/;"	l
f0104723	obj/kern/kernel.asm	/^f0104723:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f0104726	obj/kern/kernel.asm	/^f0104726:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010472a	obj/kern/kernel.asm	/^f010472a:	c7 04 24 9d 8d 10 f0 	movl   $0xf0108d9d,(%esp)$/;"	l
f0104731	obj/kern/kernel.asm	/^f0104731:	e8 b6 f8 ff ff       	call   f0103fec <cprintf>$/;"	l
f0104736	obj/kern/kernel.asm	/^f0104736:	8b 43 14             	mov    0x14(%ebx),%eax$/;"	l
f0104739	obj/kern/kernel.asm	/^f0104739:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010473d	obj/kern/kernel.asm	/^f010473d:	c7 04 24 ac 8d 10 f0 	movl   $0xf0108dac,(%esp)$/;"	l
f0104744	obj/kern/kernel.asm	/^f0104744:	e8 a3 f8 ff ff       	call   f0103fec <cprintf>$/;"	l
f0104749	obj/kern/kernel.asm	/^f0104749:	8b 43 18             	mov    0x18(%ebx),%eax$/;"	l
f010474c	obj/kern/kernel.asm	/^f010474c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104750	obj/kern/kernel.asm	/^f0104750:	c7 04 24 bb 8d 10 f0 	movl   $0xf0108dbb,(%esp)$/;"	l
f0104757	obj/kern/kernel.asm	/^f0104757:	e8 90 f8 ff ff       	call   f0103fec <cprintf>$/;"	l
f010475c	obj/kern/kernel.asm	/^f010475c:	8b 43 1c             	mov    0x1c(%ebx),%eax$/;"	l
f010475f	obj/kern/kernel.asm	/^f010475f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104763	obj/kern/kernel.asm	/^f0104763:	c7 04 24 ca 8d 10 f0 	movl   $0xf0108dca,(%esp)$/;"	l
f010476a	obj/kern/kernel.asm	/^f010476a:	e8 7d f8 ff ff       	call   f0103fec <cprintf>$/;"	l
f010476f	obj/kern/kernel.asm	/^f010476f:	83 c4 14             	add    $0x14,%esp$/;"	l
f0104772	obj/kern/kernel.asm	/^f0104772:	5b                   	pop    %ebx$/;"	l
f0104773	obj/kern/kernel.asm	/^f0104773:	5d                   	pop    %ebp$/;"	l
f0104774	obj/kern/kernel.asm	/^f0104774:	c3                   	ret    $/;"	l
f0104775	obj/kern/kernel.asm	/^f0104775 <print_trapframe>:$/;"	l
f0104775	obj/kern/kernel.asm	/^f0104775:	55                   	push   %ebp$/;"	l
f0104776	obj/kern/kernel.asm	/^f0104776:	89 e5                	mov    %esp,%ebp$/;"	l
f0104778	obj/kern/kernel.asm	/^f0104778:	56                   	push   %esi$/;"	l
f0104779	obj/kern/kernel.asm	/^f0104779:	53                   	push   %ebx$/;"	l
f010477a	obj/kern/kernel.asm	/^f010477a:	83 ec 10             	sub    $0x10,%esp$/;"	l
f010477d	obj/kern/kernel.asm	/^f010477d:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0104780	obj/kern/kernel.asm	/^f0104780:	e8 f4 22 00 00       	call   f0106a79 <cpunum>$/;"	l
f0104785	obj/kern/kernel.asm	/^f0104785:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0104789	obj/kern/kernel.asm	/^f0104789:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f010478d	obj/kern/kernel.asm	/^f010478d:	c7 04 24 2e 8e 10 f0 	movl   $0xf0108e2e,(%esp)$/;"	l
f0104794	obj/kern/kernel.asm	/^f0104794:	e8 53 f8 ff ff       	call   f0103fec <cprintf>$/;"	l
f0104799	obj/kern/kernel.asm	/^f0104799:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010479c	obj/kern/kernel.asm	/^f010479c:	e8 2d ff ff ff       	call   f01046ce <print_regs>$/;"	l
f01047a1	obj/kern/kernel.asm	/^f01047a1:	0f b7 43 20          	movzwl 0x20(%ebx),%eax$/;"	l
f01047a5	obj/kern/kernel.asm	/^f01047a5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01047a9	obj/kern/kernel.asm	/^f01047a9:	c7 04 24 4c 8e 10 f0 	movl   $0xf0108e4c,(%esp)$/;"	l
f01047b0	obj/kern/kernel.asm	/^f01047b0:	e8 37 f8 ff ff       	call   f0103fec <cprintf>$/;"	l
f01047b5	obj/kern/kernel.asm	/^f01047b5:	0f b7 43 24          	movzwl 0x24(%ebx),%eax$/;"	l
f01047b9	obj/kern/kernel.asm	/^f01047b9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01047bd	obj/kern/kernel.asm	/^f01047bd:	c7 04 24 5f 8e 10 f0 	movl   $0xf0108e5f,(%esp)$/;"	l
f01047c4	obj/kern/kernel.asm	/^f01047c4:	e8 23 f8 ff ff       	call   f0103fec <cprintf>$/;"	l
f01047c9	obj/kern/kernel.asm	/^f01047c9:	8b 43 28             	mov    0x28(%ebx),%eax$/;"	l
f01047cc	obj/kern/kernel.asm	/^f01047cc:	83 f8 13             	cmp    $0x13,%eax$/;"	l
f01047cf	obj/kern/kernel.asm	/^f01047cf:	77 09                	ja     f01047da <print_trapframe+0x65>$/;"	l
f01047d1	obj/kern/kernel.asm	/^f01047d1:	8b 14 85 00 91 10 f0 	mov    -0xfef6f00(,%eax,4),%edx$/;"	l
f01047d8	obj/kern/kernel.asm	/^f01047d8:	eb 1f                	jmp    f01047f9 <print_trapframe+0x84>$/;"	l
f01047da	obj/kern/kernel.asm	/^f01047da:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f01047dd	obj/kern/kernel.asm	/^f01047dd:	74 15                	je     f01047f4 <print_trapframe+0x7f>$/;"	l
f01047df	obj/kern/kernel.asm	/^f01047df:	8d 50 e0             	lea    -0x20(%eax),%edx$/;"	l
f01047e2	obj/kern/kernel.asm	/^f01047e2:	83 fa 0f             	cmp    $0xf,%edx$/;"	l
f01047e5	obj/kern/kernel.asm	/^f01047e5:	ba e5 8d 10 f0       	mov    $0xf0108de5,%edx$/;"	l
f01047ea	obj/kern/kernel.asm	/^f01047ea:	b9 f8 8d 10 f0       	mov    $0xf0108df8,%ecx$/;"	l
f01047ef	obj/kern/kernel.asm	/^f01047ef:	0f 47 d1             	cmova  %ecx,%edx$/;"	l
f01047f2	obj/kern/kernel.asm	/^f01047f2:	eb 05                	jmp    f01047f9 <print_trapframe+0x84>$/;"	l
f01047f4	obj/kern/kernel.asm	/^f01047f4:	ba d9 8d 10 f0       	mov    $0xf0108dd9,%edx$/;"	l
f01047f9	obj/kern/kernel.asm	/^f01047f9:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f01047fd	obj/kern/kernel.asm	/^f01047fd:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104801	obj/kern/kernel.asm	/^f0104801:	c7 04 24 72 8e 10 f0 	movl   $0xf0108e72,(%esp)$/;"	l
f0104808	obj/kern/kernel.asm	/^f0104808:	e8 df f7 ff ff       	call   f0103fec <cprintf>$/;"	l
f010480d	obj/kern/kernel.asm	/^f010480d:	3b 1d 60 8a 2b f0    	cmp    0xf02b8a60,%ebx$/;"	l
f0104813	obj/kern/kernel.asm	/^f0104813:	75 19                	jne    f010482e <print_trapframe+0xb9>$/;"	l
f0104815	obj/kern/kernel.asm	/^f0104815:	83 7b 28 0e          	cmpl   $0xe,0x28(%ebx)$/;"	l
f0104819	obj/kern/kernel.asm	/^f0104819:	75 13                	jne    f010482e <print_trapframe+0xb9>$/;"	l
f010481b	obj/kern/kernel.asm	/^f010481b:	0f 20 d0             	mov    %cr2,%eax$/;"	l
f010481e	obj/kern/kernel.asm	/^f010481e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104822	obj/kern/kernel.asm	/^f0104822:	c7 04 24 84 8e 10 f0 	movl   $0xf0108e84,(%esp)$/;"	l
f0104829	obj/kern/kernel.asm	/^f0104829:	e8 be f7 ff ff       	call   f0103fec <cprintf>$/;"	l
f010482e	obj/kern/kernel.asm	/^f010482e:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f0104831	obj/kern/kernel.asm	/^f0104831:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104835	obj/kern/kernel.asm	/^f0104835:	c7 04 24 93 8e 10 f0 	movl   $0xf0108e93,(%esp)$/;"	l
f010483c	obj/kern/kernel.asm	/^f010483c:	e8 ab f7 ff ff       	call   f0103fec <cprintf>$/;"	l
f0104841	obj/kern/kernel.asm	/^f0104841:	83 7b 28 0e          	cmpl   $0xe,0x28(%ebx)$/;"	l
f0104845	obj/kern/kernel.asm	/^f0104845:	75 51                	jne    f0104898 <print_trapframe+0x123>$/;"	l
f0104847	obj/kern/kernel.asm	/^f0104847:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f010484a	obj/kern/kernel.asm	/^f010484a:	89 c2                	mov    %eax,%edx$/;"	l
f010484c	obj/kern/kernel.asm	/^f010484c:	83 e2 01             	and    $0x1,%edx$/;"	l
f010484f	obj/kern/kernel.asm	/^f010484f:	ba 07 8e 10 f0       	mov    $0xf0108e07,%edx$/;"	l
f0104854	obj/kern/kernel.asm	/^f0104854:	b9 12 8e 10 f0       	mov    $0xf0108e12,%ecx$/;"	l
f0104859	obj/kern/kernel.asm	/^f0104859:	0f 45 ca             	cmovne %edx,%ecx$/;"	l
f010485c	obj/kern/kernel.asm	/^f010485c:	89 c2                	mov    %eax,%edx$/;"	l
f010485e	obj/kern/kernel.asm	/^f010485e:	83 e2 02             	and    $0x2,%edx$/;"	l
f0104861	obj/kern/kernel.asm	/^f0104861:	ba 1e 8e 10 f0       	mov    $0xf0108e1e,%edx$/;"	l
f0104866	obj/kern/kernel.asm	/^f0104866:	be 24 8e 10 f0       	mov    $0xf0108e24,%esi$/;"	l
f010486b	obj/kern/kernel.asm	/^f010486b:	0f 44 d6             	cmove  %esi,%edx$/;"	l
f010486e	obj/kern/kernel.asm	/^f010486e:	83 e0 04             	and    $0x4,%eax$/;"	l
f0104871	obj/kern/kernel.asm	/^f0104871:	b8 29 8e 10 f0       	mov    $0xf0108e29,%eax$/;"	l
f0104876	obj/kern/kernel.asm	/^f0104876:	be 73 8f 10 f0       	mov    $0xf0108f73,%esi$/;"	l
f010487b	obj/kern/kernel.asm	/^f010487b:	0f 44 c6             	cmove  %esi,%eax$/;"	l
f010487e	obj/kern/kernel.asm	/^f010487e:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f0104882	obj/kern/kernel.asm	/^f0104882:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0104886	obj/kern/kernel.asm	/^f0104886:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010488a	obj/kern/kernel.asm	/^f010488a:	c7 04 24 a1 8e 10 f0 	movl   $0xf0108ea1,(%esp)$/;"	l
f0104891	obj/kern/kernel.asm	/^f0104891:	e8 56 f7 ff ff       	call   f0103fec <cprintf>$/;"	l
f0104896	obj/kern/kernel.asm	/^f0104896:	eb 0c                	jmp    f01048a4 <print_trapframe+0x12f>$/;"	l
f0104898	obj/kern/kernel.asm	/^f0104898:	c7 04 24 9b 8c 10 f0 	movl   $0xf0108c9b,(%esp)$/;"	l
f010489f	obj/kern/kernel.asm	/^f010489f:	e8 48 f7 ff ff       	call   f0103fec <cprintf>$/;"	l
f01048a4	obj/kern/kernel.asm	/^f01048a4:	8b 43 30             	mov    0x30(%ebx),%eax$/;"	l
f01048a7	obj/kern/kernel.asm	/^f01048a7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01048ab	obj/kern/kernel.asm	/^f01048ab:	c7 04 24 b0 8e 10 f0 	movl   $0xf0108eb0,(%esp)$/;"	l
f01048b2	obj/kern/kernel.asm	/^f01048b2:	e8 35 f7 ff ff       	call   f0103fec <cprintf>$/;"	l
f01048b7	obj/kern/kernel.asm	/^f01048b7:	0f b7 43 34          	movzwl 0x34(%ebx),%eax$/;"	l
f01048bb	obj/kern/kernel.asm	/^f01048bb:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01048bf	obj/kern/kernel.asm	/^f01048bf:	c7 04 24 bf 8e 10 f0 	movl   $0xf0108ebf,(%esp)$/;"	l
f01048c6	obj/kern/kernel.asm	/^f01048c6:	e8 21 f7 ff ff       	call   f0103fec <cprintf>$/;"	l
f01048cb	obj/kern/kernel.asm	/^f01048cb:	8b 43 38             	mov    0x38(%ebx),%eax$/;"	l
f01048ce	obj/kern/kernel.asm	/^f01048ce:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01048d2	obj/kern/kernel.asm	/^f01048d2:	c7 04 24 d2 8e 10 f0 	movl   $0xf0108ed2,(%esp)$/;"	l
f01048d9	obj/kern/kernel.asm	/^f01048d9:	e8 0e f7 ff ff       	call   f0103fec <cprintf>$/;"	l
f01048de	obj/kern/kernel.asm	/^f01048de:	f6 43 34 03          	testb  $0x3,0x34(%ebx)$/;"	l
f01048e2	obj/kern/kernel.asm	/^f01048e2:	74 27                	je     f010490b <print_trapframe+0x196>$/;"	l
f01048e4	obj/kern/kernel.asm	/^f01048e4:	8b 43 3c             	mov    0x3c(%ebx),%eax$/;"	l
f01048e7	obj/kern/kernel.asm	/^f01048e7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01048eb	obj/kern/kernel.asm	/^f01048eb:	c7 04 24 e1 8e 10 f0 	movl   $0xf0108ee1,(%esp)$/;"	l
f01048f2	obj/kern/kernel.asm	/^f01048f2:	e8 f5 f6 ff ff       	call   f0103fec <cprintf>$/;"	l
f01048f7	obj/kern/kernel.asm	/^f01048f7:	0f b7 43 40          	movzwl 0x40(%ebx),%eax$/;"	l
f01048fb	obj/kern/kernel.asm	/^f01048fb:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01048ff	obj/kern/kernel.asm	/^f01048ff:	c7 04 24 f0 8e 10 f0 	movl   $0xf0108ef0,(%esp)$/;"	l
f0104906	obj/kern/kernel.asm	/^f0104906:	e8 e1 f6 ff ff       	call   f0103fec <cprintf>$/;"	l
f010490b	obj/kern/kernel.asm	/^f010490b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010490e	obj/kern/kernel.asm	/^f010490e:	5b                   	pop    %ebx$/;"	l
f010490f	obj/kern/kernel.asm	/^f010490f:	5e                   	pop    %esi$/;"	l
f0104910	obj/kern/kernel.asm	/^f0104910:	5d                   	pop    %ebp$/;"	l
f0104911	obj/kern/kernel.asm	/^f0104911:	c3                   	ret    $/;"	l
f0104912	obj/kern/kernel.asm	/^f0104912 <page_fault_handler>:$/;"	l
f0104912	obj/kern/kernel.asm	/^f0104912:	55                   	push   %ebp$/;"	l
f0104913	obj/kern/kernel.asm	/^f0104913:	89 e5                	mov    %esp,%ebp$/;"	l
f0104915	obj/kern/kernel.asm	/^f0104915:	57                   	push   %edi$/;"	l
f0104916	obj/kern/kernel.asm	/^f0104916:	56                   	push   %esi$/;"	l
f0104917	obj/kern/kernel.asm	/^f0104917:	53                   	push   %ebx$/;"	l
f0104918	obj/kern/kernel.asm	/^f0104918:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f010491b	obj/kern/kernel.asm	/^f010491b:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f010491e	obj/kern/kernel.asm	/^f010491e:	0f 20 d6             	mov    %cr2,%esi$/;"	l
f0104921	obj/kern/kernel.asm	/^f0104921:	0f b7 43 34          	movzwl 0x34(%ebx),%eax$/;"	l
f0104925	obj/kern/kernel.asm	/^f0104925:	83 e0 03             	and    $0x3,%eax$/;"	l
f0104928	obj/kern/kernel.asm	/^f0104928:	66 83 f8 03          	cmp    $0x3,%ax$/;"	l
f010492c	obj/kern/kernel.asm	/^f010492c:	74 1c                	je     f010494a <page_fault_handler+0x38>$/;"	l
f010492e	obj/kern/kernel.asm	/^f010492e:	c7 44 24 08 03 8f 10 	movl   $0xf0108f03,0x8(%esp)$/;"	l
f0104935	obj/kern/kernel.asm	/^f0104935:	f0 $/;"	l
f0104936	obj/kern/kernel.asm	/^f0104936:	c7 44 24 04 8d 01 00 	movl   $0x18d,0x4(%esp)$/;"	l
f010493d	obj/kern/kernel.asm	/^f010493d:	00 $/;"	l
f010493e	obj/kern/kernel.asm	/^f010493e:	c7 04 24 1f 8f 10 f0 	movl   $0xf0108f1f,(%esp)$/;"	l
f0104945	obj/kern/kernel.asm	/^f0104945:	e8 f6 b6 ff ff       	call   f0100040 <_panic>$/;"	l
f010494a	obj/kern/kernel.asm	/^f010494a:	e8 2a 21 00 00       	call   f0106a79 <cpunum>$/;"	l
f010494f	obj/kern/kernel.asm	/^f010494f:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104952	obj/kern/kernel.asm	/^f0104952:	8b 80 28 90 2b f0    	mov    -0xfd46fd8(%eax),%eax$/;"	l
f0104958	obj/kern/kernel.asm	/^f0104958:	83 78 64 00          	cmpl   $0x0,0x64(%eax)$/;"	l
f010495c	obj/kern/kernel.asm	/^f010495c:	0f 84 f7 00 00 00    	je     f0104a59 <page_fault_handler+0x147>$/;"	l
f0104962	obj/kern/kernel.asm	/^f0104962:	8b 43 3c             	mov    0x3c(%ebx),%eax$/;"	l
f0104965	obj/kern/kernel.asm	/^f0104965:	8d 90 00 10 40 11    	lea    0x11401000(%eax),%edx$/;"	l
f010496b	obj/kern/kernel.asm	/^f010496b:	83 e8 38             	sub    $0x38,%eax$/;"	l
f010496e	obj/kern/kernel.asm	/^f010496e:	81 fa 00 10 00 00    	cmp    $0x1000,%edx$/;"	l
f0104974	obj/kern/kernel.asm	/^f0104974:	ba cc ff bf ee       	mov    $0xeebfffcc,%edx$/;"	l
f0104979	obj/kern/kernel.asm	/^f0104979:	0f 46 d0             	cmovbe %eax,%edx$/;"	l
f010497c	obj/kern/kernel.asm	/^f010497c:	89 d7                	mov    %edx,%edi$/;"	l
f010497e	obj/kern/kernel.asm	/^f010497e:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0104981	obj/kern/kernel.asm	/^f0104981:	e8 f3 20 00 00       	call   f0106a79 <cpunum>$/;"	l
f0104986	obj/kern/kernel.asm	/^f0104986:	c7 44 24 0c 06 00 00 	movl   $0x6,0xc(%esp)$/;"	l
f010498d	obj/kern/kernel.asm	/^f010498d:	00 $/;"	l
f010498e	obj/kern/kernel.asm	/^f010498e:	c7 44 24 08 34 00 00 	movl   $0x34,0x8(%esp)$/;"	l
f0104995	obj/kern/kernel.asm	/^f0104995:	00 $/;"	l
f0104996	obj/kern/kernel.asm	/^f0104996:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f010499a	obj/kern/kernel.asm	/^f010499a:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010499d	obj/kern/kernel.asm	/^f010499d:	8b 80 28 90 2b f0    	mov    -0xfd46fd8(%eax),%eax$/;"	l
f01049a3	obj/kern/kernel.asm	/^f01049a3:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01049a6	obj/kern/kernel.asm	/^f01049a6:	e8 99 ec ff ff       	call   f0103644 <user_mem_assert>$/;"	l
f01049ab	obj/kern/kernel.asm	/^f01049ab:	89 37                	mov    %esi,(%edi)$/;"	l
f01049ad	obj/kern/kernel.asm	/^f01049ad:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f01049b0	obj/kern/kernel.asm	/^f01049b0:	89 47 04             	mov    %eax,0x4(%edi)$/;"	l
f01049b3	obj/kern/kernel.asm	/^f01049b3:	8d 7f 08             	lea    0x8(%edi),%edi$/;"	l
f01049b6	obj/kern/kernel.asm	/^f01049b6:	89 de                	mov    %ebx,%esi$/;"	l
f01049b8	obj/kern/kernel.asm	/^f01049b8:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01049bd	obj/kern/kernel.asm	/^f01049bd:	f7 c7 01 00 00 00    	test   $0x1,%edi$/;"	l
f01049c3	obj/kern/kernel.asm	/^f01049c3:	74 03                	je     f01049c8 <page_fault_handler+0xb6>$/;"	l
f01049c5	obj/kern/kernel.asm	/^f01049c5:	a4                   	movsb  %ds:(%esi),%es:(%edi)$/;"	l
f01049c6	obj/kern/kernel.asm	/^f01049c6:	b0 1f                	mov    $0x1f,%al$/;"	l
f01049c8	obj/kern/kernel.asm	/^f01049c8:	f7 c7 02 00 00 00    	test   $0x2,%edi$/;"	l
f01049ce	obj/kern/kernel.asm	/^f01049ce:	74 05                	je     f01049d5 <page_fault_handler+0xc3>$/;"	l
f01049d0	obj/kern/kernel.asm	/^f01049d0:	66 a5                	movsw  %ds:(%esi),%es:(%edi)$/;"	l
f01049d2	obj/kern/kernel.asm	/^f01049d2:	83 e8 02             	sub    $0x2,%eax$/;"	l
f01049d5	obj/kern/kernel.asm	/^f01049d5:	89 c1                	mov    %eax,%ecx$/;"	l
f01049d7	obj/kern/kernel.asm	/^f01049d7:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f01049da	obj/kern/kernel.asm	/^f01049da:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f01049dc	obj/kern/kernel.asm	/^f01049dc:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01049e1	obj/kern/kernel.asm	/^f01049e1:	a8 02                	test   $0x2,%al$/;"	l
f01049e3	obj/kern/kernel.asm	/^f01049e3:	74 0b                	je     f01049f0 <page_fault_handler+0xde>$/;"	l
f01049e5	obj/kern/kernel.asm	/^f01049e5:	0f b7 16             	movzwl (%esi),%edx$/;"	l
f01049e8	obj/kern/kernel.asm	/^f01049e8:	66 89 17             	mov    %dx,(%edi)$/;"	l
f01049eb	obj/kern/kernel.asm	/^f01049eb:	ba 02 00 00 00       	mov    $0x2,%edx$/;"	l
f01049f0	obj/kern/kernel.asm	/^f01049f0:	a8 01                	test   $0x1,%al$/;"	l
f01049f2	obj/kern/kernel.asm	/^f01049f2:	74 07                	je     f01049fb <page_fault_handler+0xe9>$/;"	l
f01049f4	obj/kern/kernel.asm	/^f01049f4:	0f b6 04 16          	movzbl (%esi,%edx,1),%eax$/;"	l
f01049f8	obj/kern/kernel.asm	/^f01049f8:	88 04 17             	mov    %al,(%edi,%edx,1)$/;"	l
f01049fb	obj/kern/kernel.asm	/^f01049fb:	8b 43 30             	mov    0x30(%ebx),%eax$/;"	l
f01049fe	obj/kern/kernel.asm	/^f01049fe:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f0104a01	obj/kern/kernel.asm	/^f0104a01:	89 46 28             	mov    %eax,0x28(%esi)$/;"	l
f0104a04	obj/kern/kernel.asm	/^f0104a04:	8b 43 38             	mov    0x38(%ebx),%eax$/;"	l
f0104a07	obj/kern/kernel.asm	/^f0104a07:	89 46 2c             	mov    %eax,0x2c(%esi)$/;"	l
f0104a0a	obj/kern/kernel.asm	/^f0104a0a:	8b 43 3c             	mov    0x3c(%ebx),%eax$/;"	l
f0104a0d	obj/kern/kernel.asm	/^f0104a0d:	89 46 30             	mov    %eax,0x30(%esi)$/;"	l
f0104a10	obj/kern/kernel.asm	/^f0104a10:	e8 64 20 00 00       	call   f0106a79 <cpunum>$/;"	l
f0104a15	obj/kern/kernel.asm	/^f0104a15:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104a18	obj/kern/kernel.asm	/^f0104a18:	8b 98 28 90 2b f0    	mov    -0xfd46fd8(%eax),%ebx$/;"	l
f0104a1e	obj/kern/kernel.asm	/^f0104a1e:	e8 56 20 00 00       	call   f0106a79 <cpunum>$/;"	l
f0104a23	obj/kern/kernel.asm	/^f0104a23:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104a26	obj/kern/kernel.asm	/^f0104a26:	8b 80 28 90 2b f0    	mov    -0xfd46fd8(%eax),%eax$/;"	l
f0104a2c	obj/kern/kernel.asm	/^f0104a2c:	8b 40 64             	mov    0x64(%eax),%eax$/;"	l
f0104a2f	obj/kern/kernel.asm	/^f0104a2f:	89 43 30             	mov    %eax,0x30(%ebx)$/;"	l
f0104a32	obj/kern/kernel.asm	/^f0104a32:	e8 42 20 00 00       	call   f0106a79 <cpunum>$/;"	l
f0104a37	obj/kern/kernel.asm	/^f0104a37:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104a3a	obj/kern/kernel.asm	/^f0104a3a:	8b 80 28 90 2b f0    	mov    -0xfd46fd8(%eax),%eax$/;"	l
f0104a40	obj/kern/kernel.asm	/^f0104a40:	89 70 3c             	mov    %esi,0x3c(%eax)$/;"	l
f0104a43	obj/kern/kernel.asm	/^f0104a43:	e8 31 20 00 00       	call   f0106a79 <cpunum>$/;"	l
f0104a48	obj/kern/kernel.asm	/^f0104a48:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104a4b	obj/kern/kernel.asm	/^f0104a4b:	8b 80 28 90 2b f0    	mov    -0xfd46fd8(%eax),%eax$/;"	l
f0104a51	obj/kern/kernel.asm	/^f0104a51:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104a54	obj/kern/kernel.asm	/^f0104a54:	e8 72 f3 ff ff       	call   f0103dcb <env_run>$/;"	l
f0104a59	obj/kern/kernel.asm	/^f0104a59:	8b 7b 30             	mov    0x30(%ebx),%edi$/;"	l
f0104a5c	obj/kern/kernel.asm	/^f0104a5c:	e8 18 20 00 00       	call   f0106a79 <cpunum>$/;"	l
f0104a61	obj/kern/kernel.asm	/^f0104a61:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f0104a65	obj/kern/kernel.asm	/^f0104a65:	89 74 24 08          	mov    %esi,0x8(%esp)$/;"	l
f0104a69	obj/kern/kernel.asm	/^f0104a69:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104a6c	obj/kern/kernel.asm	/^f0104a6c:	8b 80 28 90 2b f0    	mov    -0xfd46fd8(%eax),%eax$/;"	l
f0104a72	obj/kern/kernel.asm	/^f0104a72:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0104a75	obj/kern/kernel.asm	/^f0104a75:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104a79	obj/kern/kernel.asm	/^f0104a79:	c7 04 24 c0 90 10 f0 	movl   $0xf01090c0,(%esp)$/;"	l
f0104a80	obj/kern/kernel.asm	/^f0104a80:	e8 67 f5 ff ff       	call   f0103fec <cprintf>$/;"	l
f0104a85	obj/kern/kernel.asm	/^f0104a85:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0104a88	obj/kern/kernel.asm	/^f0104a88:	e8 e8 fc ff ff       	call   f0104775 <print_trapframe>$/;"	l
f0104a8d	obj/kern/kernel.asm	/^f0104a8d:	e8 e7 1f 00 00       	call   f0106a79 <cpunum>$/;"	l
f0104a92	obj/kern/kernel.asm	/^f0104a92:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104a95	obj/kern/kernel.asm	/^f0104a95:	8b 80 28 90 2b f0    	mov    -0xfd46fd8(%eax),%eax$/;"	l
f0104a9b	obj/kern/kernel.asm	/^f0104a9b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104a9e	obj/kern/kernel.asm	/^f0104a9e:	e8 87 f2 ff ff       	call   f0103d2a <env_destroy>$/;"	l
f0104aa3	obj/kern/kernel.asm	/^f0104aa3:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0104aa6	obj/kern/kernel.asm	/^f0104aa6:	5b                   	pop    %ebx$/;"	l
f0104aa7	obj/kern/kernel.asm	/^f0104aa7:	5e                   	pop    %esi$/;"	l
f0104aa8	obj/kern/kernel.asm	/^f0104aa8:	5f                   	pop    %edi$/;"	l
f0104aa9	obj/kern/kernel.asm	/^f0104aa9:	5d                   	pop    %ebp$/;"	l
f0104aaa	obj/kern/kernel.asm	/^f0104aaa:	c3                   	ret    $/;"	l
f0104aab	obj/kern/kernel.asm	/^f0104aab <trap>:$/;"	l
f0104aab	obj/kern/kernel.asm	/^f0104aab:	55                   	push   %ebp$/;"	l
f0104aac	obj/kern/kernel.asm	/^f0104aac:	89 e5                	mov    %esp,%ebp$/;"	l
f0104aae	obj/kern/kernel.asm	/^f0104aae:	57                   	push   %edi$/;"	l
f0104aaf	obj/kern/kernel.asm	/^f0104aaf:	56                   	push   %esi$/;"	l
f0104ab0	obj/kern/kernel.asm	/^f0104ab0:	83 ec 20             	sub    $0x20,%esp$/;"	l
f0104ab3	obj/kern/kernel.asm	/^f0104ab3:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0104ab6	obj/kern/kernel.asm	/^f0104ab6:	fc                   	cld    $/;"	l
f0104ab7	obj/kern/kernel.asm	/^f0104ab7:	83 3d 8c 8e 2b f0 00 	cmpl   $0x0,0xf02b8e8c$/;"	l
f0104abe	obj/kern/kernel.asm	/^f0104abe:	74 01                	je     f0104ac1 <trap+0x16>$/;"	l
f0104ac0	obj/kern/kernel.asm	/^f0104ac0:	f4                   	hlt    $/;"	l
f0104ac1	obj/kern/kernel.asm	/^f0104ac1:	e8 b3 1f 00 00       	call   f0106a79 <cpunum>$/;"	l
f0104ac6	obj/kern/kernel.asm	/^f0104ac6:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0104ac9	obj/kern/kernel.asm	/^f0104ac9:	81 c2 20 90 2b f0    	add    $0xf02b9020,%edx$/;"	l
f0104acf	obj/kern/kernel.asm	/^f0104acf:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0104ad4	obj/kern/kernel.asm	/^f0104ad4:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f0104ad8	obj/kern/kernel.asm	/^f0104ad8:	83 f8 02             	cmp    $0x2,%eax$/;"	l
f0104adb	obj/kern/kernel.asm	/^f0104adb:	75 0c                	jne    f0104ae9 <trap+0x3e>$/;"	l
f0104add	obj/kern/kernel.asm	/^f0104add:	c7 04 24 c0 43 12 f0 	movl   $0xf01243c0,(%esp)$/;"	l
f0104ae4	obj/kern/kernel.asm	/^f0104ae4:	e8 0e 22 00 00       	call   f0106cf7 <spin_lock>$/;"	l
f0104ae9	obj/kern/kernel.asm	/^f0104ae9:	9c                   	pushf  $/;"	l
f0104aea	obj/kern/kernel.asm	/^f0104aea:	58                   	pop    %eax$/;"	l
f0104aeb	obj/kern/kernel.asm	/^f0104aeb:	f6 c4 02             	test   $0x2,%ah$/;"	l
f0104aee	obj/kern/kernel.asm	/^f0104aee:	74 24                	je     f0104b14 <trap+0x69>$/;"	l
f0104af0	obj/kern/kernel.asm	/^f0104af0:	c7 44 24 0c 2b 8f 10 	movl   $0xf0108f2b,0xc(%esp)$/;"	l
f0104af7	obj/kern/kernel.asm	/^f0104af7:	f0 $/;"	l
f0104af8	obj/kern/kernel.asm	/^f0104af8:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f0104aff	obj/kern/kernel.asm	/^f0104aff:	f0 $/;"	l
f0104b00	obj/kern/kernel.asm	/^f0104b00:	c7 44 24 04 57 01 00 	movl   $0x157,0x4(%esp)$/;"	l
f0104b07	obj/kern/kernel.asm	/^f0104b07:	00 $/;"	l
f0104b08	obj/kern/kernel.asm	/^f0104b08:	c7 04 24 1f 8f 10 f0 	movl   $0xf0108f1f,(%esp)$/;"	l
f0104b0f	obj/kern/kernel.asm	/^f0104b0f:	e8 2c b5 ff ff       	call   f0100040 <_panic>$/;"	l
f0104b14	obj/kern/kernel.asm	/^f0104b14:	0f b7 46 34          	movzwl 0x34(%esi),%eax$/;"	l
f0104b18	obj/kern/kernel.asm	/^f0104b18:	83 e0 03             	and    $0x3,%eax$/;"	l
f0104b1b	obj/kern/kernel.asm	/^f0104b1b:	66 83 f8 03          	cmp    $0x3,%ax$/;"	l
f0104b1f	obj/kern/kernel.asm	/^f0104b1f:	0f 85 a7 00 00 00    	jne    f0104bcc <trap+0x121>$/;"	l
f0104b25	obj/kern/kernel.asm	/^f0104b25:	e8 4f 1f 00 00       	call   f0106a79 <cpunum>$/;"	l
f0104b2a	obj/kern/kernel.asm	/^f0104b2a:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104b2d	obj/kern/kernel.asm	/^f0104b2d:	83 b8 28 90 2b f0 00 	cmpl   $0x0,-0xfd46fd8(%eax)$/;"	l
f0104b34	obj/kern/kernel.asm	/^f0104b34:	75 24                	jne    f0104b5a <trap+0xaf>$/;"	l
f0104b36	obj/kern/kernel.asm	/^f0104b36:	c7 44 24 0c 9a 91 10 	movl   $0xf010919a,0xc(%esp)$/;"	l
f0104b3d	obj/kern/kernel.asm	/^f0104b3d:	f0 $/;"	l
f0104b3e	obj/kern/kernel.asm	/^f0104b3e:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f0104b45	obj/kern/kernel.asm	/^f0104b45:	f0 $/;"	l
f0104b46	obj/kern/kernel.asm	/^f0104b46:	c7 44 24 04 5e 01 00 	movl   $0x15e,0x4(%esp)$/;"	l
f0104b4d	obj/kern/kernel.asm	/^f0104b4d:	00 $/;"	l
f0104b4e	obj/kern/kernel.asm	/^f0104b4e:	c7 04 24 1f 8f 10 f0 	movl   $0xf0108f1f,(%esp)$/;"	l
f0104b55	obj/kern/kernel.asm	/^f0104b55:	e8 e6 b4 ff ff       	call   f0100040 <_panic>$/;"	l
f0104b5a	obj/kern/kernel.asm	/^f0104b5a:	c7 04 24 c0 43 12 f0 	movl   $0xf01243c0,(%esp)$/;"	l
f0104b61	obj/kern/kernel.asm	/^f0104b61:	e8 91 21 00 00       	call   f0106cf7 <spin_lock>$/;"	l
f0104b66	obj/kern/kernel.asm	/^f0104b66:	e8 0e 1f 00 00       	call   f0106a79 <cpunum>$/;"	l
f0104b6b	obj/kern/kernel.asm	/^f0104b6b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104b6e	obj/kern/kernel.asm	/^f0104b6e:	8b 80 28 90 2b f0    	mov    -0xfd46fd8(%eax),%eax$/;"	l
f0104b74	obj/kern/kernel.asm	/^f0104b74:	83 78 54 01          	cmpl   $0x1,0x54(%eax)$/;"	l
f0104b78	obj/kern/kernel.asm	/^f0104b78:	75 2d                	jne    f0104ba7 <trap+0xfc>$/;"	l
f0104b7a	obj/kern/kernel.asm	/^f0104b7a:	e8 fa 1e 00 00       	call   f0106a79 <cpunum>$/;"	l
f0104b7f	obj/kern/kernel.asm	/^f0104b7f:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104b82	obj/kern/kernel.asm	/^f0104b82:	8b 80 28 90 2b f0    	mov    -0xfd46fd8(%eax),%eax$/;"	l
f0104b88	obj/kern/kernel.asm	/^f0104b88:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104b8b	obj/kern/kernel.asm	/^f0104b8b:	e8 cf ef ff ff       	call   f0103b5f <env_free>$/;"	l
f0104b90	obj/kern/kernel.asm	/^f0104b90:	e8 e4 1e 00 00       	call   f0106a79 <cpunum>$/;"	l
f0104b95	obj/kern/kernel.asm	/^f0104b95:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104b98	obj/kern/kernel.asm	/^f0104b98:	c7 80 28 90 2b f0 00 	movl   $0x0,-0xfd46fd8(%eax)$/;"	l
f0104b9f	obj/kern/kernel.asm	/^f0104b9f:	00 00 00 $/;"	l
f0104ba2	obj/kern/kernel.asm	/^f0104ba2:	e8 54 03 00 00       	call   f0104efb <sched_yield>$/;"	l
f0104ba7	obj/kern/kernel.asm	/^f0104ba7:	e8 cd 1e 00 00       	call   f0106a79 <cpunum>$/;"	l
f0104bac	obj/kern/kernel.asm	/^f0104bac:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104baf	obj/kern/kernel.asm	/^f0104baf:	8b 80 28 90 2b f0    	mov    -0xfd46fd8(%eax),%eax$/;"	l
f0104bb5	obj/kern/kernel.asm	/^f0104bb5:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f0104bba	obj/kern/kernel.asm	/^f0104bba:	89 c7                	mov    %eax,%edi$/;"	l
f0104bbc	obj/kern/kernel.asm	/^f0104bbc:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0104bbe	obj/kern/kernel.asm	/^f0104bbe:	e8 b6 1e 00 00       	call   f0106a79 <cpunum>$/;"	l
f0104bc3	obj/kern/kernel.asm	/^f0104bc3:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104bc6	obj/kern/kernel.asm	/^f0104bc6:	8b b0 28 90 2b f0    	mov    -0xfd46fd8(%eax),%esi$/;"	l
f0104bcc	obj/kern/kernel.asm	/^f0104bcc:	89 35 60 8a 2b f0    	mov    %esi,0xf02b8a60$/;"	l
f0104bd2	obj/kern/kernel.asm	/^f0104bd2:	8b 46 28             	mov    0x28(%esi),%eax$/;"	l
f0104bd5	obj/kern/kernel.asm	/^f0104bd5:	83 f8 0e             	cmp    $0xe,%eax$/;"	l
f0104bd8	obj/kern/kernel.asm	/^f0104bd8:	74 17                	je     f0104bf1 <trap+0x146>$/;"	l
f0104bda	obj/kern/kernel.asm	/^f0104bda:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f0104bdd	obj/kern/kernel.asm	/^f0104bdd:	74 1f                	je     f0104bfe <trap+0x153>$/;"	l
f0104bdf	obj/kern/kernel.asm	/^f0104bdf:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f0104be2	obj/kern/kernel.asm	/^f0104be2:	75 4f                	jne    f0104c33 <trap+0x188>$/;"	l
f0104be4	obj/kern/kernel.asm	/^f0104be4:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104be7	obj/kern/kernel.asm	/^f0104be7:	e8 4e be ff ff       	call   f0100a3a <monitor>$/;"	l
f0104bec	obj/kern/kernel.asm	/^f0104bec:	e9 e2 00 00 00       	jmp    f0104cd3 <trap+0x228>$/;"	l
f0104bf1	obj/kern/kernel.asm	/^f0104bf1:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104bf4	obj/kern/kernel.asm	/^f0104bf4:	e8 19 fd ff ff       	call   f0104912 <page_fault_handler>$/;"	l
f0104bf9	obj/kern/kernel.asm	/^f0104bf9:	e9 d5 00 00 00       	jmp    f0104cd3 <trap+0x228>$/;"	l
f0104bfe	obj/kern/kernel.asm	/^f0104bfe:	8b 46 04             	mov    0x4(%esi),%eax$/;"	l
f0104c01	obj/kern/kernel.asm	/^f0104c01:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
f0104c05	obj/kern/kernel.asm	/^f0104c05:	8b 06                	mov    (%esi),%eax$/;"	l
f0104c07	obj/kern/kernel.asm	/^f0104c07:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f0104c0b	obj/kern/kernel.asm	/^f0104c0b:	8b 46 10             	mov    0x10(%esi),%eax$/;"	l
f0104c0e	obj/kern/kernel.asm	/^f0104c0e:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0104c12	obj/kern/kernel.asm	/^f0104c12:	8b 46 18             	mov    0x18(%esi),%eax$/;"	l
f0104c15	obj/kern/kernel.asm	/^f0104c15:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0104c19	obj/kern/kernel.asm	/^f0104c19:	8b 46 14             	mov    0x14(%esi),%eax$/;"	l
f0104c1c	obj/kern/kernel.asm	/^f0104c1c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104c20	obj/kern/kernel.asm	/^f0104c20:	8b 46 1c             	mov    0x1c(%esi),%eax$/;"	l
f0104c23	obj/kern/kernel.asm	/^f0104c23:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104c26	obj/kern/kernel.asm	/^f0104c26:	e8 a5 03 00 00       	call   f0104fd0 <syscall>$/;"	l
f0104c2b	obj/kern/kernel.asm	/^f0104c2b:	89 46 1c             	mov    %eax,0x1c(%esi)$/;"	l
f0104c2e	obj/kern/kernel.asm	/^f0104c2e:	e9 a0 00 00 00       	jmp    f0104cd3 <trap+0x228>$/;"	l
f0104c33	obj/kern/kernel.asm	/^f0104c33:	83 f8 27             	cmp    $0x27,%eax$/;"	l
f0104c36	obj/kern/kernel.asm	/^f0104c36:	75 19                	jne    f0104c51 <trap+0x1a6>$/;"	l
f0104c38	obj/kern/kernel.asm	/^f0104c38:	c7 04 24 44 8f 10 f0 	movl   $0xf0108f44,(%esp)$/;"	l
f0104c3f	obj/kern/kernel.asm	/^f0104c3f:	e8 a8 f3 ff ff       	call   f0103fec <cprintf>$/;"	l
f0104c44	obj/kern/kernel.asm	/^f0104c44:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104c47	obj/kern/kernel.asm	/^f0104c47:	e8 29 fb ff ff       	call   f0104775 <print_trapframe>$/;"	l
f0104c4c	obj/kern/kernel.asm	/^f0104c4c:	e9 82 00 00 00       	jmp    f0104cd3 <trap+0x228>$/;"	l
f0104c51	obj/kern/kernel.asm	/^f0104c51:	83 f8 20             	cmp    $0x20,%eax$/;"	l
f0104c54	obj/kern/kernel.asm	/^f0104c54:	75 1f                	jne    f0104c75 <trap+0x1ca>$/;"	l
f0104c56	obj/kern/kernel.asm	/^f0104c56:	e8 6b 1f 00 00       	call   f0106bc6 <lapic_eoi>$/;"	l
f0104c5b	obj/kern/kernel.asm	/^f0104c5b:	90                   	nop$/;"	l
f0104c5c	obj/kern/kernel.asm	/^f0104c5c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0104c60	obj/kern/kernel.asm	/^f0104c60:	e8 14 1e 00 00       	call   f0106a79 <cpunum>$/;"	l
f0104c65	obj/kern/kernel.asm	/^f0104c65:	85 c0                	test   %eax,%eax$/;"	l
f0104c67	obj/kern/kernel.asm	/^f0104c67:	75 05                	jne    f0104c6e <trap+0x1c3>$/;"	l
f0104c69	obj/kern/kernel.asm	/^f0104c69:	e8 d8 2a 00 00       	call   f0107746 <time_tick>$/;"	l
f0104c6e	obj/kern/kernel.asm	/^f0104c6e:	66 90                	xchg   %ax,%ax$/;"	l
f0104c70	obj/kern/kernel.asm	/^f0104c70:	e8 86 02 00 00       	call   f0104efb <sched_yield>$/;"	l
f0104c75	obj/kern/kernel.asm	/^f0104c75:	83 f8 21             	cmp    $0x21,%eax$/;"	l
f0104c78	obj/kern/kernel.asm	/^f0104c78:	75 08                	jne    f0104c82 <trap+0x1d7>$/;"	l
f0104c7a	obj/kern/kernel.asm	/^f0104c7a:	e8 ed b9 ff ff       	call   f010066c <kbd_intr>$/;"	l
f0104c7f	obj/kern/kernel.asm	/^f0104c7f:	90                   	nop$/;"	l
f0104c80	obj/kern/kernel.asm	/^f0104c80:	eb 51                	jmp    f0104cd3 <trap+0x228>$/;"	l
f0104c82	obj/kern/kernel.asm	/^f0104c82:	83 f8 24             	cmp    $0x24,%eax$/;"	l
f0104c85	obj/kern/kernel.asm	/^f0104c85:	75 0b                	jne    f0104c92 <trap+0x1e7>$/;"	l
f0104c87	obj/kern/kernel.asm	/^f0104c87:	e8 c4 b9 ff ff       	call   f0100650 <serial_intr>$/;"	l
f0104c8c	obj/kern/kernel.asm	/^f0104c8c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0104c90	obj/kern/kernel.asm	/^f0104c90:	eb 41                	jmp    f0104cd3 <trap+0x228>$/;"	l
f0104c92	obj/kern/kernel.asm	/^f0104c92:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104c95	obj/kern/kernel.asm	/^f0104c95:	e8 db fa ff ff       	call   f0104775 <print_trapframe>$/;"	l
f0104c9a	obj/kern/kernel.asm	/^f0104c9a:	66 83 7e 34 08       	cmpw   $0x8,0x34(%esi)$/;"	l
f0104c9f	obj/kern/kernel.asm	/^f0104c9f:	75 1c                	jne    f0104cbd <trap+0x212>$/;"	l
f0104ca1	obj/kern/kernel.asm	/^f0104ca1:	c7 44 24 08 61 8f 10 	movl   $0xf0108f61,0x8(%esp)$/;"	l
f0104ca8	obj/kern/kernel.asm	/^f0104ca8:	f0 $/;"	l
f0104ca9	obj/kern/kernel.asm	/^f0104ca9:	c7 44 24 04 3d 01 00 	movl   $0x13d,0x4(%esp)$/;"	l
f0104cb0	obj/kern/kernel.asm	/^f0104cb0:	00 $/;"	l
f0104cb1	obj/kern/kernel.asm	/^f0104cb1:	c7 04 24 1f 8f 10 f0 	movl   $0xf0108f1f,(%esp)$/;"	l
f0104cb8	obj/kern/kernel.asm	/^f0104cb8:	e8 83 b3 ff ff       	call   f0100040 <_panic>$/;"	l
f0104cbd	obj/kern/kernel.asm	/^f0104cbd:	e8 b7 1d 00 00       	call   f0106a79 <cpunum>$/;"	l
f0104cc2	obj/kern/kernel.asm	/^f0104cc2:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104cc5	obj/kern/kernel.asm	/^f0104cc5:	8b 80 28 90 2b f0    	mov    -0xfd46fd8(%eax),%eax$/;"	l
f0104ccb	obj/kern/kernel.asm	/^f0104ccb:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104cce	obj/kern/kernel.asm	/^f0104cce:	e8 57 f0 ff ff       	call   f0103d2a <env_destroy>$/;"	l
f0104cd3	obj/kern/kernel.asm	/^f0104cd3:	e8 a1 1d 00 00       	call   f0106a79 <cpunum>$/;"	l
f0104cd8	obj/kern/kernel.asm	/^f0104cd8:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104cdb	obj/kern/kernel.asm	/^f0104cdb:	83 b8 28 90 2b f0 00 	cmpl   $0x0,-0xfd46fd8(%eax)$/;"	l
f0104ce2	obj/kern/kernel.asm	/^f0104ce2:	74 2a                	je     f0104d0e <trap+0x263>$/;"	l
f0104ce4	obj/kern/kernel.asm	/^f0104ce4:	e8 90 1d 00 00       	call   f0106a79 <cpunum>$/;"	l
f0104ce9	obj/kern/kernel.asm	/^f0104ce9:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104cec	obj/kern/kernel.asm	/^f0104cec:	8b 80 28 90 2b f0    	mov    -0xfd46fd8(%eax),%eax$/;"	l
f0104cf2	obj/kern/kernel.asm	/^f0104cf2:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f0104cf6	obj/kern/kernel.asm	/^f0104cf6:	75 16                	jne    f0104d0e <trap+0x263>$/;"	l
f0104cf8	obj/kern/kernel.asm	/^f0104cf8:	e8 7c 1d 00 00       	call   f0106a79 <cpunum>$/;"	l
f0104cfd	obj/kern/kernel.asm	/^f0104cfd:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104d00	obj/kern/kernel.asm	/^f0104d00:	8b 80 28 90 2b f0    	mov    -0xfd46fd8(%eax),%eax$/;"	l
f0104d06	obj/kern/kernel.asm	/^f0104d06:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104d09	obj/kern/kernel.asm	/^f0104d09:	e8 bd f0 ff ff       	call   f0103dcb <env_run>$/;"	l
f0104d0e	obj/kern/kernel.asm	/^f0104d0e:	e8 e8 01 00 00       	call   f0104efb <sched_yield>$/;"	l
f0104d13	obj/kern/kernel.asm	/^f0104d13:	90                   	nop$/;"	l
f0104d14	obj/kern/kernel.asm	/^f0104d14 <handler0>:$/;"	l
f0104d14	obj/kern/kernel.asm	/^f0104d14:	6a 00                	push   $0x0$/;"	l
f0104d16	obj/kern/kernel.asm	/^f0104d16:	6a 00                	push   $0x0$/;"	l
f0104d18	obj/kern/kernel.asm	/^f0104d18:	e9 ef 00 00 00       	jmp    f0104e0c <_alltraps>$/;"	l
f0104d1d	obj/kern/kernel.asm	/^f0104d1d:	90                   	nop$/;"	l
f0104d1e	obj/kern/kernel.asm	/^f0104d1e <handler1>:$/;"	l
f0104d1e	obj/kern/kernel.asm	/^f0104d1e:	6a 00                	push   $0x0$/;"	l
f0104d20	obj/kern/kernel.asm	/^f0104d20:	6a 01                	push   $0x1$/;"	l
f0104d22	obj/kern/kernel.asm	/^f0104d22:	e9 e5 00 00 00       	jmp    f0104e0c <_alltraps>$/;"	l
f0104d27	obj/kern/kernel.asm	/^f0104d27:	90                   	nop$/;"	l
f0104d28	obj/kern/kernel.asm	/^f0104d28 <handler2>:$/;"	l
f0104d28	obj/kern/kernel.asm	/^f0104d28:	6a 00                	push   $0x0$/;"	l
f0104d2a	obj/kern/kernel.asm	/^f0104d2a:	6a 02                	push   $0x2$/;"	l
f0104d2c	obj/kern/kernel.asm	/^f0104d2c:	e9 db 00 00 00       	jmp    f0104e0c <_alltraps>$/;"	l
f0104d31	obj/kern/kernel.asm	/^f0104d31:	90                   	nop$/;"	l
f0104d32	obj/kern/kernel.asm	/^f0104d32 <handler3>:$/;"	l
f0104d32	obj/kern/kernel.asm	/^f0104d32:	6a 00                	push   $0x0$/;"	l
f0104d34	obj/kern/kernel.asm	/^f0104d34:	6a 03                	push   $0x3$/;"	l
f0104d36	obj/kern/kernel.asm	/^f0104d36:	e9 d1 00 00 00       	jmp    f0104e0c <_alltraps>$/;"	l
f0104d3b	obj/kern/kernel.asm	/^f0104d3b:	90                   	nop$/;"	l
f0104d3c	obj/kern/kernel.asm	/^f0104d3c <handler4>:$/;"	l
f0104d3c	obj/kern/kernel.asm	/^f0104d3c:	6a 00                	push   $0x0$/;"	l
f0104d3e	obj/kern/kernel.asm	/^f0104d3e:	6a 04                	push   $0x4$/;"	l
f0104d40	obj/kern/kernel.asm	/^f0104d40:	e9 c7 00 00 00       	jmp    f0104e0c <_alltraps>$/;"	l
f0104d45	obj/kern/kernel.asm	/^f0104d45:	90                   	nop$/;"	l
f0104d46	obj/kern/kernel.asm	/^f0104d46 <handler5>:$/;"	l
f0104d46	obj/kern/kernel.asm	/^f0104d46:	6a 00                	push   $0x0$/;"	l
f0104d48	obj/kern/kernel.asm	/^f0104d48:	6a 05                	push   $0x5$/;"	l
f0104d4a	obj/kern/kernel.asm	/^f0104d4a:	e9 bd 00 00 00       	jmp    f0104e0c <_alltraps>$/;"	l
f0104d4f	obj/kern/kernel.asm	/^f0104d4f:	90                   	nop$/;"	l
f0104d50	obj/kern/kernel.asm	/^f0104d50 <handler6>:$/;"	l
f0104d50	obj/kern/kernel.asm	/^f0104d50:	6a 00                	push   $0x0$/;"	l
f0104d52	obj/kern/kernel.asm	/^f0104d52:	6a 06                	push   $0x6$/;"	l
f0104d54	obj/kern/kernel.asm	/^f0104d54:	e9 b3 00 00 00       	jmp    f0104e0c <_alltraps>$/;"	l
f0104d59	obj/kern/kernel.asm	/^f0104d59:	90                   	nop$/;"	l
f0104d5a	obj/kern/kernel.asm	/^f0104d5a <handler7>:$/;"	l
f0104d5a	obj/kern/kernel.asm	/^f0104d5a:	6a 00                	push   $0x0$/;"	l
f0104d5c	obj/kern/kernel.asm	/^f0104d5c:	6a 07                	push   $0x7$/;"	l
f0104d5e	obj/kern/kernel.asm	/^f0104d5e:	e9 a9 00 00 00       	jmp    f0104e0c <_alltraps>$/;"	l
f0104d63	obj/kern/kernel.asm	/^f0104d63:	90                   	nop$/;"	l
f0104d64	obj/kern/kernel.asm	/^f0104d64 <handler8>:$/;"	l
f0104d64	obj/kern/kernel.asm	/^f0104d64:	6a 08                	push   $0x8$/;"	l
f0104d66	obj/kern/kernel.asm	/^f0104d66:	e9 a1 00 00 00       	jmp    f0104e0c <_alltraps>$/;"	l
f0104d6b	obj/kern/kernel.asm	/^f0104d6b:	90                   	nop$/;"	l
f0104d6c	obj/kern/kernel.asm	/^f0104d6c <handler10>:$/;"	l
f0104d6c	obj/kern/kernel.asm	/^f0104d6c:	6a 0a                	push   $0xa$/;"	l
f0104d6e	obj/kern/kernel.asm	/^f0104d6e:	e9 99 00 00 00       	jmp    f0104e0c <_alltraps>$/;"	l
f0104d73	obj/kern/kernel.asm	/^f0104d73:	90                   	nop$/;"	l
f0104d74	obj/kern/kernel.asm	/^f0104d74 <handler11>:$/;"	l
f0104d74	obj/kern/kernel.asm	/^f0104d74:	6a 0b                	push   $0xb$/;"	l
f0104d76	obj/kern/kernel.asm	/^f0104d76:	e9 91 00 00 00       	jmp    f0104e0c <_alltraps>$/;"	l
f0104d7b	obj/kern/kernel.asm	/^f0104d7b:	90                   	nop$/;"	l
f0104d7c	obj/kern/kernel.asm	/^f0104d7c <handler12>:$/;"	l
f0104d7c	obj/kern/kernel.asm	/^f0104d7c:	6a 0c                	push   $0xc$/;"	l
f0104d7e	obj/kern/kernel.asm	/^f0104d7e:	e9 89 00 00 00       	jmp    f0104e0c <_alltraps>$/;"	l
f0104d83	obj/kern/kernel.asm	/^f0104d83:	90                   	nop$/;"	l
f0104d84	obj/kern/kernel.asm	/^f0104d84 <handler13>:$/;"	l
f0104d84	obj/kern/kernel.asm	/^f0104d84:	6a 0d                	push   $0xd$/;"	l
f0104d86	obj/kern/kernel.asm	/^f0104d86:	e9 81 00 00 00       	jmp    f0104e0c <_alltraps>$/;"	l
f0104d8b	obj/kern/kernel.asm	/^f0104d8b:	90                   	nop$/;"	l
f0104d8c	obj/kern/kernel.asm	/^f0104d8c <handler14>:$/;"	l
f0104d8c	obj/kern/kernel.asm	/^f0104d8c:	6a 0e                	push   $0xe$/;"	l
f0104d8e	obj/kern/kernel.asm	/^f0104d8e:	eb 7c                	jmp    f0104e0c <_alltraps>$/;"	l
f0104d90	obj/kern/kernel.asm	/^f0104d90 <handler16>:$/;"	l
f0104d90	obj/kern/kernel.asm	/^f0104d90:	6a 00                	push   $0x0$/;"	l
f0104d92	obj/kern/kernel.asm	/^f0104d92:	6a 10                	push   $0x10$/;"	l
f0104d94	obj/kern/kernel.asm	/^f0104d94:	eb 76                	jmp    f0104e0c <_alltraps>$/;"	l
f0104d96	obj/kern/kernel.asm	/^f0104d96 <handler17>:$/;"	l
f0104d96	obj/kern/kernel.asm	/^f0104d96:	6a 11                	push   $0x11$/;"	l
f0104d98	obj/kern/kernel.asm	/^f0104d98:	eb 72                	jmp    f0104e0c <_alltraps>$/;"	l
f0104d9a	obj/kern/kernel.asm	/^f0104d9a <handler18>:$/;"	l
f0104d9a	obj/kern/kernel.asm	/^f0104d9a:	6a 00                	push   $0x0$/;"	l
f0104d9c	obj/kern/kernel.asm	/^f0104d9c:	6a 12                	push   $0x12$/;"	l
f0104d9e	obj/kern/kernel.asm	/^f0104d9e:	eb 6c                	jmp    f0104e0c <_alltraps>$/;"	l
f0104da0	obj/kern/kernel.asm	/^f0104da0 <handler19>:$/;"	l
f0104da0	obj/kern/kernel.asm	/^f0104da0:	6a 00                	push   $0x0$/;"	l
f0104da2	obj/kern/kernel.asm	/^f0104da2:	6a 13                	push   $0x13$/;"	l
f0104da4	obj/kern/kernel.asm	/^f0104da4:	eb 66                	jmp    f0104e0c <_alltraps>$/;"	l
f0104da6	obj/kern/kernel.asm	/^f0104da6 <handler48>:$/;"	l
f0104da6	obj/kern/kernel.asm	/^f0104da6:	6a 00                	push   $0x0$/;"	l
f0104da8	obj/kern/kernel.asm	/^f0104da8:	6a 30                	push   $0x30$/;"	l
f0104daa	obj/kern/kernel.asm	/^f0104daa:	eb 60                	jmp    f0104e0c <_alltraps>$/;"	l
f0104dac	obj/kern/kernel.asm	/^f0104dac <irq_handler0>:$/;"	l
f0104dac	obj/kern/kernel.asm	/^f0104dac:	6a 00                	push   $0x0$/;"	l
f0104dae	obj/kern/kernel.asm	/^f0104dae:	6a 20                	push   $0x20$/;"	l
f0104db0	obj/kern/kernel.asm	/^f0104db0:	eb 5a                	jmp    f0104e0c <_alltraps>$/;"	l
f0104db2	obj/kern/kernel.asm	/^f0104db2 <irq_handler1>:$/;"	l
f0104db2	obj/kern/kernel.asm	/^f0104db2:	6a 00                	push   $0x0$/;"	l
f0104db4	obj/kern/kernel.asm	/^f0104db4:	6a 21                	push   $0x21$/;"	l
f0104db6	obj/kern/kernel.asm	/^f0104db6:	eb 54                	jmp    f0104e0c <_alltraps>$/;"	l
f0104db8	obj/kern/kernel.asm	/^f0104db8 <irq_handler2>:$/;"	l
f0104db8	obj/kern/kernel.asm	/^f0104db8:	6a 00                	push   $0x0$/;"	l
f0104dba	obj/kern/kernel.asm	/^f0104dba:	6a 22                	push   $0x22$/;"	l
f0104dbc	obj/kern/kernel.asm	/^f0104dbc:	eb 4e                	jmp    f0104e0c <_alltraps>$/;"	l
f0104dbe	obj/kern/kernel.asm	/^f0104dbe <irq_handler3>:$/;"	l
f0104dbe	obj/kern/kernel.asm	/^f0104dbe:	6a 00                	push   $0x0$/;"	l
f0104dc0	obj/kern/kernel.asm	/^f0104dc0:	6a 23                	push   $0x23$/;"	l
f0104dc2	obj/kern/kernel.asm	/^f0104dc2:	eb 48                	jmp    f0104e0c <_alltraps>$/;"	l
f0104dc4	obj/kern/kernel.asm	/^f0104dc4 <irq_handler4>:$/;"	l
f0104dc4	obj/kern/kernel.asm	/^f0104dc4:	6a 00                	push   $0x0$/;"	l
f0104dc6	obj/kern/kernel.asm	/^f0104dc6:	6a 24                	push   $0x24$/;"	l
f0104dc8	obj/kern/kernel.asm	/^f0104dc8:	eb 42                	jmp    f0104e0c <_alltraps>$/;"	l
f0104dca	obj/kern/kernel.asm	/^f0104dca <irq_handler5>:$/;"	l
f0104dca	obj/kern/kernel.asm	/^f0104dca:	6a 00                	push   $0x0$/;"	l
f0104dcc	obj/kern/kernel.asm	/^f0104dcc:	6a 25                	push   $0x25$/;"	l
f0104dce	obj/kern/kernel.asm	/^f0104dce:	eb 3c                	jmp    f0104e0c <_alltraps>$/;"	l
f0104dd0	obj/kern/kernel.asm	/^f0104dd0 <irq_handler6>:$/;"	l
f0104dd0	obj/kern/kernel.asm	/^f0104dd0:	6a 00                	push   $0x0$/;"	l
f0104dd2	obj/kern/kernel.asm	/^f0104dd2:	6a 26                	push   $0x26$/;"	l
f0104dd4	obj/kern/kernel.asm	/^f0104dd4:	eb 36                	jmp    f0104e0c <_alltraps>$/;"	l
f0104dd6	obj/kern/kernel.asm	/^f0104dd6 <irq_handler7>:$/;"	l
f0104dd6	obj/kern/kernel.asm	/^f0104dd6:	6a 00                	push   $0x0$/;"	l
f0104dd8	obj/kern/kernel.asm	/^f0104dd8:	6a 27                	push   $0x27$/;"	l
f0104dda	obj/kern/kernel.asm	/^f0104dda:	eb 30                	jmp    f0104e0c <_alltraps>$/;"	l
f0104ddc	obj/kern/kernel.asm	/^f0104ddc <irq_handler8>:$/;"	l
f0104ddc	obj/kern/kernel.asm	/^f0104ddc:	6a 00                	push   $0x0$/;"	l
f0104dde	obj/kern/kernel.asm	/^f0104dde:	6a 28                	push   $0x28$/;"	l
f0104de0	obj/kern/kernel.asm	/^f0104de0:	eb 2a                	jmp    f0104e0c <_alltraps>$/;"	l
f0104de2	obj/kern/kernel.asm	/^f0104de2 <irq_handler9>:$/;"	l
f0104de2	obj/kern/kernel.asm	/^f0104de2:	6a 00                	push   $0x0$/;"	l
f0104de4	obj/kern/kernel.asm	/^f0104de4:	6a 29                	push   $0x29$/;"	l
f0104de6	obj/kern/kernel.asm	/^f0104de6:	eb 24                	jmp    f0104e0c <_alltraps>$/;"	l
f0104de8	obj/kern/kernel.asm	/^f0104de8 <irq_handler10>:$/;"	l
f0104de8	obj/kern/kernel.asm	/^f0104de8:	6a 00                	push   $0x0$/;"	l
f0104dea	obj/kern/kernel.asm	/^f0104dea:	6a 2a                	push   $0x2a$/;"	l
f0104dec	obj/kern/kernel.asm	/^f0104dec:	eb 1e                	jmp    f0104e0c <_alltraps>$/;"	l
f0104dee	obj/kern/kernel.asm	/^f0104dee <irq_handler11>:$/;"	l
f0104dee	obj/kern/kernel.asm	/^f0104dee:	6a 00                	push   $0x0$/;"	l
f0104df0	obj/kern/kernel.asm	/^f0104df0:	6a 2b                	push   $0x2b$/;"	l
f0104df2	obj/kern/kernel.asm	/^f0104df2:	eb 18                	jmp    f0104e0c <_alltraps>$/;"	l
f0104df4	obj/kern/kernel.asm	/^f0104df4 <irq_handler12>:$/;"	l
f0104df4	obj/kern/kernel.asm	/^f0104df4:	6a 00                	push   $0x0$/;"	l
f0104df6	obj/kern/kernel.asm	/^f0104df6:	6a 2c                	push   $0x2c$/;"	l
f0104df8	obj/kern/kernel.asm	/^f0104df8:	eb 12                	jmp    f0104e0c <_alltraps>$/;"	l
f0104dfa	obj/kern/kernel.asm	/^f0104dfa <irq_handler13>:$/;"	l
f0104dfa	obj/kern/kernel.asm	/^f0104dfa:	6a 00                	push   $0x0$/;"	l
f0104dfc	obj/kern/kernel.asm	/^f0104dfc:	6a 2d                	push   $0x2d$/;"	l
f0104dfe	obj/kern/kernel.asm	/^f0104dfe:	eb 0c                	jmp    f0104e0c <_alltraps>$/;"	l
f0104e00	obj/kern/kernel.asm	/^f0104e00 <irq_handler14>:$/;"	l
f0104e00	obj/kern/kernel.asm	/^f0104e00:	6a 00                	push   $0x0$/;"	l
f0104e02	obj/kern/kernel.asm	/^f0104e02:	6a 2e                	push   $0x2e$/;"	l
f0104e04	obj/kern/kernel.asm	/^f0104e04:	eb 06                	jmp    f0104e0c <_alltraps>$/;"	l
f0104e06	obj/kern/kernel.asm	/^f0104e06 <irq_handler15>:$/;"	l
f0104e06	obj/kern/kernel.asm	/^f0104e06:	6a 00                	push   $0x0$/;"	l
f0104e08	obj/kern/kernel.asm	/^f0104e08:	6a 2f                	push   $0x2f$/;"	l
f0104e0a	obj/kern/kernel.asm	/^f0104e0a:	eb 00                	jmp    f0104e0c <_alltraps>$/;"	l
f0104e0c	obj/kern/kernel.asm	/^f0104e0c <_alltraps>:$/;"	l
f0104e0c	obj/kern/kernel.asm	/^f0104e0c:	66 6a 00             	pushw  $0x0$/;"	l
f0104e0f	obj/kern/kernel.asm	/^f0104e0f:	66 1e                	pushw  %ds$/;"	l
f0104e11	obj/kern/kernel.asm	/^f0104e11:	66 6a 00             	pushw  $0x0$/;"	l
f0104e14	obj/kern/kernel.asm	/^f0104e14:	66 06                	pushw  %es$/;"	l
f0104e16	obj/kern/kernel.asm	/^f0104e16:	60                   	pusha  $/;"	l
f0104e17	obj/kern/kernel.asm	/^f0104e17:	66 b8 10 00          	mov    $0x10,%ax$/;"	l
f0104e1b	obj/kern/kernel.asm	/^f0104e1b:	8e d8                	mov    %eax,%ds$/;"	l
f0104e1d	obj/kern/kernel.asm	/^f0104e1d:	8e c0                	mov    %eax,%es$/;"	l
f0104e1f	obj/kern/kernel.asm	/^f0104e1f:	54                   	push   %esp$/;"	l
f0104e20	obj/kern/kernel.asm	/^f0104e20:	e8 86 fc ff ff       	call   f0104aab <trap>$/;"	l
f0104e25	obj/kern/kernel.asm	/^f0104e25 <sched_halt>:$/;"	l
f0104e25	obj/kern/kernel.asm	/^f0104e25:	55                   	push   %ebp$/;"	l
f0104e26	obj/kern/kernel.asm	/^f0104e26:	89 e5                	mov    %esp,%ebp$/;"	l
f0104e28	obj/kern/kernel.asm	/^f0104e28:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0104e2b	obj/kern/kernel.asm	/^f0104e2b:	8b 15 48 82 2b f0    	mov    0xf02b8248,%edx$/;"	l
f0104e31	obj/kern/kernel.asm	/^f0104e31:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104e36	obj/kern/kernel.asm	/^f0104e36:	8b 4a 54             	mov    0x54(%edx),%ecx$/;"	l
f0104e39	obj/kern/kernel.asm	/^f0104e39:	83 e9 01             	sub    $0x1,%ecx$/;"	l
f0104e3c	obj/kern/kernel.asm	/^f0104e3c:	83 f9 02             	cmp    $0x2,%ecx$/;"	l
f0104e3f	obj/kern/kernel.asm	/^f0104e3f:	76 0f                	jbe    f0104e50 <sched_halt+0x2b>$/;"	l
f0104e41	obj/kern/kernel.asm	/^f0104e41:	83 c0 01             	add    $0x1,%eax$/;"	l
f0104e44	obj/kern/kernel.asm	/^f0104e44:	83 c2 7c             	add    $0x7c,%edx$/;"	l
f0104e47	obj/kern/kernel.asm	/^f0104e47:	3d 00 04 00 00       	cmp    $0x400,%eax$/;"	l
f0104e4c	obj/kern/kernel.asm	/^f0104e4c:	75 e8                	jne    f0104e36 <sched_halt+0x11>$/;"	l
f0104e4e	obj/kern/kernel.asm	/^f0104e4e:	eb 07                	jmp    f0104e57 <sched_halt+0x32>$/;"	l
f0104e50	obj/kern/kernel.asm	/^f0104e50:	3d 00 04 00 00       	cmp    $0x400,%eax$/;"	l
f0104e55	obj/kern/kernel.asm	/^f0104e55:	75 1a                	jne    f0104e71 <sched_halt+0x4c>$/;"	l
f0104e57	obj/kern/kernel.asm	/^f0104e57:	c7 04 24 50 91 10 f0 	movl   $0xf0109150,(%esp)$/;"	l
f0104e5e	obj/kern/kernel.asm	/^f0104e5e:	e8 89 f1 ff ff       	call   f0103fec <cprintf>$/;"	l
f0104e63	obj/kern/kernel.asm	/^f0104e63:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0104e6a	obj/kern/kernel.asm	/^f0104e6a:	e8 cb bb ff ff       	call   f0100a3a <monitor>$/;"	l
f0104e6f	obj/kern/kernel.asm	/^f0104e6f:	eb f2                	jmp    f0104e63 <sched_halt+0x3e>$/;"	l
f0104e71	obj/kern/kernel.asm	/^f0104e71:	e8 03 1c 00 00       	call   f0106a79 <cpunum>$/;"	l
f0104e76	obj/kern/kernel.asm	/^f0104e76:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104e79	obj/kern/kernel.asm	/^f0104e79:	c7 80 28 90 2b f0 00 	movl   $0x0,-0xfd46fd8(%eax)$/;"	l
f0104e80	obj/kern/kernel.asm	/^f0104e80:	00 00 00 $/;"	l
f0104e83	obj/kern/kernel.asm	/^f0104e83:	a1 98 8e 2b f0       	mov    0xf02b8e98,%eax$/;"	l
f0104e88	obj/kern/kernel.asm	/^f0104e88:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0104e8d	obj/kern/kernel.asm	/^f0104e8d:	77 20                	ja     f0104eaf <sched_halt+0x8a>$/;"	l
f0104e8f	obj/kern/kernel.asm	/^f0104e8f:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0104e93	obj/kern/kernel.asm	/^f0104e93:	c7 44 24 08 68 7a 10 	movl   $0xf0107a68,0x8(%esp)$/;"	l
f0104e9a	obj/kern/kernel.asm	/^f0104e9a:	f0 $/;"	l
f0104e9b	obj/kern/kernel.asm	/^f0104e9b:	c7 44 24 04 4b 00 00 	movl   $0x4b,0x4(%esp)$/;"	l
f0104ea2	obj/kern/kernel.asm	/^f0104ea2:	00 $/;"	l
f0104ea3	obj/kern/kernel.asm	/^f0104ea3:	c7 04 24 79 91 10 f0 	movl   $0xf0109179,(%esp)$/;"	l
f0104eaa	obj/kern/kernel.asm	/^f0104eaa:	e8 91 b1 ff ff       	call   f0100040 <_panic>$/;"	l
f0104eaf	obj/kern/kernel.asm	/^f0104eaf:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0104eb4	obj/kern/kernel.asm	/^f0104eb4:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0104eb7	obj/kern/kernel.asm	/^f0104eb7:	e8 bd 1b 00 00       	call   f0106a79 <cpunum>$/;"	l
f0104ebc	obj/kern/kernel.asm	/^f0104ebc:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0104ebf	obj/kern/kernel.asm	/^f0104ebf:	81 c2 20 90 2b f0    	add    $0xf02b9020,%edx$/;"	l
f0104ec5	obj/kern/kernel.asm	/^f0104ec5:	b8 02 00 00 00       	mov    $0x2,%eax$/;"	l
f0104eca	obj/kern/kernel.asm	/^f0104eca:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f0104ece	obj/kern/kernel.asm	/^f0104ece:	c7 04 24 c0 43 12 f0 	movl   $0xf01243c0,(%esp)$/;"	l
f0104ed5	obj/kern/kernel.asm	/^f0104ed5:	e8 c9 1e 00 00       	call   f0106da3 <spin_unlock>$/;"	l
f0104eda	obj/kern/kernel.asm	/^f0104eda:	f3 90                	pause  $/;"	l
f0104edc	obj/kern/kernel.asm	/^f0104edc:	e8 98 1b 00 00       	call   f0106a79 <cpunum>$/;"	l
f0104ee1	obj/kern/kernel.asm	/^f0104ee1:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104ee4	obj/kern/kernel.asm	/^f0104ee4:	8b 80 30 90 2b f0    	mov    -0xfd46fd0(%eax),%eax$/;"	l
f0104eea	obj/kern/kernel.asm	/^f0104eea:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0104eef	obj/kern/kernel.asm	/^f0104eef:	89 c4                	mov    %eax,%esp$/;"	l
f0104ef1	obj/kern/kernel.asm	/^f0104ef1:	6a 00                	push   $0x0$/;"	l
f0104ef3	obj/kern/kernel.asm	/^f0104ef3:	6a 00                	push   $0x0$/;"	l
f0104ef5	obj/kern/kernel.asm	/^f0104ef5:	fb                   	sti    $/;"	l
f0104ef6	obj/kern/kernel.asm	/^f0104ef6:	f4                   	hlt    $/;"	l
f0104ef7	obj/kern/kernel.asm	/^f0104ef7:	eb fd                	jmp    f0104ef6 <sched_halt+0xd1>$/;"	l
f0104ef9	obj/kern/kernel.asm	/^f0104ef9:	c9                   	leave  $/;"	l
f0104efa	obj/kern/kernel.asm	/^f0104efa:	c3                   	ret    $/;"	l
f0104efb	obj/kern/kernel.asm	/^f0104efb <sched_yield>:$/;"	l
f0104efb	obj/kern/kernel.asm	/^f0104efb:	55                   	push   %ebp$/;"	l
f0104efc	obj/kern/kernel.asm	/^f0104efc:	89 e5                	mov    %esp,%ebp$/;"	l
f0104efe	obj/kern/kernel.asm	/^f0104efe:	56                   	push   %esi$/;"	l
f0104eff	obj/kern/kernel.asm	/^f0104eff:	53                   	push   %ebx$/;"	l
f0104f00	obj/kern/kernel.asm	/^f0104f00:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0104f03	obj/kern/kernel.asm	/^f0104f03:	e8 71 1b 00 00       	call   f0106a79 <cpunum>$/;"	l
f0104f08	obj/kern/kernel.asm	/^f0104f08:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104f0b	obj/kern/kernel.asm	/^f0104f0b:	8b 98 28 90 2b f0    	mov    -0xfd46fd8(%eax),%ebx$/;"	l
f0104f11	obj/kern/kernel.asm	/^f0104f11:	e8 63 1b 00 00       	call   f0106a79 <cpunum>$/;"	l
f0104f16	obj/kern/kernel.asm	/^f0104f16:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104f19	obj/kern/kernel.asm	/^f0104f19:	8b b0 28 90 2b f0    	mov    -0xfd46fd8(%eax),%esi$/;"	l
f0104f1f	obj/kern/kernel.asm	/^f0104f1f:	e8 55 1b 00 00       	call   f0106a79 <cpunum>$/;"	l
f0104f24	obj/kern/kernel.asm	/^f0104f24:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104f27	obj/kern/kernel.asm	/^f0104f27:	3b b0 28 90 2b f0    	cmp    -0xfd46fd8(%eax),%esi$/;"	l
f0104f2d	obj/kern/kernel.asm	/^f0104f2d:	74 24                	je     f0104f53 <sched_yield+0x58>$/;"	l
f0104f2f	obj/kern/kernel.asm	/^f0104f2f:	c7 44 24 0c 86 91 10 	movl   $0xf0109186,0xc(%esp)$/;"	l
f0104f36	obj/kern/kernel.asm	/^f0104f36:	f0 $/;"	l
f0104f37	obj/kern/kernel.asm	/^f0104f37:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f0104f3e	obj/kern/kernel.asm	/^f0104f3e:	f0 $/;"	l
f0104f3f	obj/kern/kernel.asm	/^f0104f3f:	c7 44 24 04 21 00 00 	movl   $0x21,0x4(%esp)$/;"	l
f0104f46	obj/kern/kernel.asm	/^f0104f46:	00 $/;"	l
f0104f47	obj/kern/kernel.asm	/^f0104f47:	c7 04 24 79 91 10 f0 	movl   $0xf0109179,(%esp)$/;"	l
f0104f4e	obj/kern/kernel.asm	/^f0104f4e:	e8 ed b0 ff ff       	call   f0100040 <_panic>$/;"	l
f0104f53	obj/kern/kernel.asm	/^f0104f53:	85 db                	test   %ebx,%ebx$/;"	l
f0104f55	obj/kern/kernel.asm	/^f0104f55:	0f 44 1d 48 82 2b f0 	cmove  0xf02b8248,%ebx$/;"	l
f0104f5c	obj/kern/kernel.asm	/^f0104f5c:	8b 15 48 82 2b f0    	mov    0xf02b8248,%edx$/;"	l
f0104f62	obj/kern/kernel.asm	/^f0104f62:	8d 8a 00 f0 01 00    	lea    0x1f000(%edx),%ecx$/;"	l
f0104f68	obj/kern/kernel.asm	/^f0104f68:	b8 00 04 00 00       	mov    $0x400,%eax$/;"	l
f0104f6d	obj/kern/kernel.asm	/^f0104f6d:	39 d9                	cmp    %ebx,%ecx$/;"	l
f0104f6f	obj/kern/kernel.asm	/^f0104f6f:	0f 46 da             	cmovbe %edx,%ebx$/;"	l
f0104f72	obj/kern/kernel.asm	/^f0104f72:	83 7b 54 02          	cmpl   $0x2,0x54(%ebx)$/;"	l
f0104f76	obj/kern/kernel.asm	/^f0104f76:	75 08                	jne    f0104f80 <sched_yield+0x85>$/;"	l
f0104f78	obj/kern/kernel.asm	/^f0104f78:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0104f7b	obj/kern/kernel.asm	/^f0104f7b:	e8 4b ee ff ff       	call   f0103dcb <env_run>$/;"	l
f0104f80	obj/kern/kernel.asm	/^f0104f80:	83 c3 7c             	add    $0x7c,%ebx$/;"	l
f0104f83	obj/kern/kernel.asm	/^f0104f83:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0104f86	obj/kern/kernel.asm	/^f0104f86:	75 e5                	jne    f0104f6d <sched_yield+0x72>$/;"	l
f0104f88	obj/kern/kernel.asm	/^f0104f88:	e8 ec 1a 00 00       	call   f0106a79 <cpunum>$/;"	l
f0104f8d	obj/kern/kernel.asm	/^f0104f8d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104f90	obj/kern/kernel.asm	/^f0104f90:	83 b8 28 90 2b f0 00 	cmpl   $0x0,-0xfd46fd8(%eax)$/;"	l
f0104f97	obj/kern/kernel.asm	/^f0104f97:	74 2a                	je     f0104fc3 <sched_yield+0xc8>$/;"	l
f0104f99	obj/kern/kernel.asm	/^f0104f99:	e8 db 1a 00 00       	call   f0106a79 <cpunum>$/;"	l
f0104f9e	obj/kern/kernel.asm	/^f0104f9e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104fa1	obj/kern/kernel.asm	/^f0104fa1:	8b 80 28 90 2b f0    	mov    -0xfd46fd8(%eax),%eax$/;"	l
f0104fa7	obj/kern/kernel.asm	/^f0104fa7:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f0104fab	obj/kern/kernel.asm	/^f0104fab:	75 16                	jne    f0104fc3 <sched_yield+0xc8>$/;"	l
f0104fad	obj/kern/kernel.asm	/^f0104fad:	e8 c7 1a 00 00       	call   f0106a79 <cpunum>$/;"	l
f0104fb2	obj/kern/kernel.asm	/^f0104fb2:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104fb5	obj/kern/kernel.asm	/^f0104fb5:	8b 80 28 90 2b f0    	mov    -0xfd46fd8(%eax),%eax$/;"	l
f0104fbb	obj/kern/kernel.asm	/^f0104fbb:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104fbe	obj/kern/kernel.asm	/^f0104fbe:	e8 08 ee ff ff       	call   f0103dcb <env_run>$/;"	l
f0104fc3	obj/kern/kernel.asm	/^f0104fc3:	e8 5d fe ff ff       	call   f0104e25 <sched_halt>$/;"	l
f0104fc8	obj/kern/kernel.asm	/^f0104fc8:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104fcb	obj/kern/kernel.asm	/^f0104fcb:	5b                   	pop    %ebx$/;"	l
f0104fcc	obj/kern/kernel.asm	/^f0104fcc:	5e                   	pop    %esi$/;"	l
f0104fcd	obj/kern/kernel.asm	/^f0104fcd:	5d                   	pop    %ebp$/;"	l
f0104fce	obj/kern/kernel.asm	/^f0104fce:	c3                   	ret    $/;"	l
f0104fcf	obj/kern/kernel.asm	/^f0104fcf:	90                   	nop$/;"	l
f0104fd0	obj/kern/kernel.asm	/^f0104fd0 <syscall>:$/;"	l
f0104fd0	obj/kern/kernel.asm	/^f0104fd0:	55                   	push   %ebp$/;"	l
f0104fd1	obj/kern/kernel.asm	/^f0104fd1:	89 e5                	mov    %esp,%ebp$/;"	l
f0104fd3	obj/kern/kernel.asm	/^f0104fd3:	57                   	push   %edi$/;"	l
f0104fd4	obj/kern/kernel.asm	/^f0104fd4:	56                   	push   %esi$/;"	l
f0104fd5	obj/kern/kernel.asm	/^f0104fd5:	53                   	push   %ebx$/;"	l
f0104fd6	obj/kern/kernel.asm	/^f0104fd6:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0104fd9	obj/kern/kernel.asm	/^f0104fd9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104fdc	obj/kern/kernel.asm	/^f0104fdc:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0104fdf	obj/kern/kernel.asm	/^f0104fdf:	83 f8 0f             	cmp    $0xf,%eax$/;"	l
f0104fe2	obj/kern/kernel.asm	/^f0104fe2:	0f 87 b8 06 00 00    	ja     f01056a0 <syscall+0x6d0>$/;"	l
f0104fe8	obj/kern/kernel.asm	/^f0104fe8:	ff 24 85 a8 91 10 f0 	jmp    *-0xfef6e58(,%eax,4)$/;"	l
f0104fef	obj/kern/kernel.asm	/^f0104fef:	e8 85 1a 00 00       	call   f0106a79 <cpunum>$/;"	l
f0104ff4	obj/kern/kernel.asm	/^f0104ff4:	c7 44 24 0c 04 00 00 	movl   $0x4,0xc(%esp)$/;"	l
f0104ffb	obj/kern/kernel.asm	/^f0104ffb:	00 $/;"	l
f0104ffc	obj/kern/kernel.asm	/^f0104ffc:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0105000	obj/kern/kernel.asm	/^f0105000:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0105003	obj/kern/kernel.asm	/^f0105003:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0105007	obj/kern/kernel.asm	/^f0105007:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010500a	obj/kern/kernel.asm	/^f010500a:	8b 80 28 90 2b f0    	mov    -0xfd46fd8(%eax),%eax$/;"	l
f0105010	obj/kern/kernel.asm	/^f0105010:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105013	obj/kern/kernel.asm	/^f0105013:	e8 2c e6 ff ff       	call   f0103644 <user_mem_assert>$/;"	l
f0105018	obj/kern/kernel.asm	/^f0105018:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010501b	obj/kern/kernel.asm	/^f010501b:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010501f	obj/kern/kernel.asm	/^f010501f:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0105023	obj/kern/kernel.asm	/^f0105023:	c7 04 24 a1 91 10 f0 	movl   $0xf01091a1,(%esp)$/;"	l
f010502a	obj/kern/kernel.asm	/^f010502a:	e8 bd ef ff ff       	call   f0103fec <cprintf>$/;"	l
f010502f	obj/kern/kernel.asm	/^f010502f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105034	obj/kern/kernel.asm	/^f0105034:	e9 d1 06 00 00       	jmp    f010570a <syscall+0x73a>$/;"	l
f0105039	obj/kern/kernel.asm	/^f0105039:	e8 40 b6 ff ff       	call   f010067e <cons_getc>$/;"	l
f010503e	obj/kern/kernel.asm	/^f010503e:	66 90                	xchg   %ax,%ax$/;"	l
f0105040	obj/kern/kernel.asm	/^f0105040:	e9 c5 06 00 00       	jmp    f010570a <syscall+0x73a>$/;"	l
f0105045	obj/kern/kernel.asm	/^f0105045:	e8 2f 1a 00 00       	call   f0106a79 <cpunum>$/;"	l
f010504a	obj/kern/kernel.asm	/^f010504a:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010504d	obj/kern/kernel.asm	/^f010504d:	8b 80 28 90 2b f0    	mov    -0xfd46fd8(%eax),%eax$/;"	l
f0105053	obj/kern/kernel.asm	/^f0105053:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0105056	obj/kern/kernel.asm	/^f0105056:	e9 af 06 00 00       	jmp    f010570a <syscall+0x73a>$/;"	l
f010505b	obj/kern/kernel.asm	/^f010505b:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0105062	obj/kern/kernel.asm	/^f0105062:	00 $/;"	l
f0105063	obj/kern/kernel.asm	/^f0105063:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0105066	obj/kern/kernel.asm	/^f0105066:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010506a	obj/kern/kernel.asm	/^f010506a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010506d	obj/kern/kernel.asm	/^f010506d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105070	obj/kern/kernel.asm	/^f0105070:	e8 ce e6 ff ff       	call   f0103743 <envid2env>$/;"	l
f0105075	obj/kern/kernel.asm	/^f0105075:	89 c2                	mov    %eax,%edx$/;"	l
f0105077	obj/kern/kernel.asm	/^f0105077:	85 c0                	test   %eax,%eax$/;"	l
f0105079	obj/kern/kernel.asm	/^f0105079:	78 10                	js     f010508b <syscall+0xbb>$/;"	l
f010507b	obj/kern/kernel.asm	/^f010507b:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010507e	obj/kern/kernel.asm	/^f010507e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105081	obj/kern/kernel.asm	/^f0105081:	e8 a4 ec ff ff       	call   f0103d2a <env_destroy>$/;"	l
f0105086	obj/kern/kernel.asm	/^f0105086:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010508b	obj/kern/kernel.asm	/^f010508b:	89 d0                	mov    %edx,%eax$/;"	l
f010508d	obj/kern/kernel.asm	/^f010508d:	e9 78 06 00 00       	jmp    f010570a <syscall+0x73a>$/;"	l
f0105092	obj/kern/kernel.asm	/^f0105092:	e8 64 fe ff ff       	call   f0104efb <sched_yield>$/;"	l
f0105097	obj/kern/kernel.asm	/^f0105097:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f010509e	obj/kern/kernel.asm	/^f010509e:	e8 d6 19 00 00       	call   f0106a79 <cpunum>$/;"	l
f01050a3	obj/kern/kernel.asm	/^f01050a3:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01050a6	obj/kern/kernel.asm	/^f01050a6:	8b 80 28 90 2b f0    	mov    -0xfd46fd8(%eax),%eax$/;"	l
f01050ac	obj/kern/kernel.asm	/^f01050ac:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f01050af	obj/kern/kernel.asm	/^f01050af:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01050b3	obj/kern/kernel.asm	/^f01050b3:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01050b6	obj/kern/kernel.asm	/^f01050b6:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01050b9	obj/kern/kernel.asm	/^f01050b9:	e8 96 e7 ff ff       	call   f0103854 <env_alloc>$/;"	l
f01050be	obj/kern/kernel.asm	/^f01050be:	89 c2                	mov    %eax,%edx$/;"	l
f01050c0	obj/kern/kernel.asm	/^f01050c0:	85 c0                	test   %eax,%eax$/;"	l
f01050c2	obj/kern/kernel.asm	/^f01050c2:	78 2e                	js     f01050f2 <syscall+0x122>$/;"	l
f01050c4	obj/kern/kernel.asm	/^f01050c4:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f01050c7	obj/kern/kernel.asm	/^f01050c7:	c7 43 54 04 00 00 00 	movl   $0x4,0x54(%ebx)$/;"	l
f01050ce	obj/kern/kernel.asm	/^f01050ce:	e8 a6 19 00 00       	call   f0106a79 <cpunum>$/;"	l
f01050d3	obj/kern/kernel.asm	/^f01050d3:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01050d6	obj/kern/kernel.asm	/^f01050d6:	8b b0 28 90 2b f0    	mov    -0xfd46fd8(%eax),%esi$/;"	l
f01050dc	obj/kern/kernel.asm	/^f01050dc:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f01050e1	obj/kern/kernel.asm	/^f01050e1:	89 df                	mov    %ebx,%edi$/;"	l
f01050e3	obj/kern/kernel.asm	/^f01050e3:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f01050e5	obj/kern/kernel.asm	/^f01050e5:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01050e8	obj/kern/kernel.asm	/^f01050e8:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)$/;"	l
f01050ef	obj/kern/kernel.asm	/^f01050ef:	8b 50 48             	mov    0x48(%eax),%edx$/;"	l
f01050f2	obj/kern/kernel.asm	/^f01050f2:	89 d0                	mov    %edx,%eax$/;"	l
f01050f4	obj/kern/kernel.asm	/^f01050f4:	e9 11 06 00 00       	jmp    f010570a <syscall+0x73a>$/;"	l
f01050f9	obj/kern/kernel.asm	/^f01050f9:	81 fb ff ff bf ee    	cmp    $0xeebfffff,%ebx$/;"	l
f01050ff	obj/kern/kernel.asm	/^f01050ff:	0f 87 94 00 00 00    	ja     f0105199 <syscall+0x1c9>$/;"	l
f0105105	obj/kern/kernel.asm	/^f0105105:	8d 83 ff 0f 00 00    	lea    0xfff(%ebx),%eax$/;"	l
f010510b	obj/kern/kernel.asm	/^f010510b:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0105110	obj/kern/kernel.asm	/^f0105110:	39 c3                	cmp    %eax,%ebx$/;"	l
f0105112	obj/kern/kernel.asm	/^f0105112:	0f 85 88 00 00 00    	jne    f01051a0 <syscall+0x1d0>$/;"	l
f0105118	obj/kern/kernel.asm	/^f0105118:	f7 45 14 f8 f1 ff ff 	testl  $0xfffff1f8,0x14(%ebp)$/;"	l
f010511f	obj/kern/kernel.asm	/^f010511f:	0f 85 82 00 00 00    	jne    f01051a7 <syscall+0x1d7>$/;"	l
f0105125	obj/kern/kernel.asm	/^f0105125:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105128	obj/kern/kernel.asm	/^f0105128:	f7 d0                	not    %eax$/;"	l
f010512a	obj/kern/kernel.asm	/^f010512a:	83 e0 05             	and    $0x5,%eax$/;"	l
f010512d	obj/kern/kernel.asm	/^f010512d:	89 c6                	mov    %eax,%esi$/;"	l
f010512f	obj/kern/kernel.asm	/^f010512f:	75 7d                	jne    f01051ae <syscall+0x1de>$/;"	l
f0105131	obj/kern/kernel.asm	/^f0105131:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0105138	obj/kern/kernel.asm	/^f0105138:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f010513f	obj/kern/kernel.asm	/^f010513f:	00 $/;"	l
f0105140	obj/kern/kernel.asm	/^f0105140:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0105143	obj/kern/kernel.asm	/^f0105143:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105147	obj/kern/kernel.asm	/^f0105147:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010514a	obj/kern/kernel.asm	/^f010514a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010514d	obj/kern/kernel.asm	/^f010514d:	e8 f1 e5 ff ff       	call   f0103743 <envid2env>$/;"	l
f0105152	obj/kern/kernel.asm	/^f0105152:	85 c0                	test   %eax,%eax$/;"	l
f0105154	obj/kern/kernel.asm	/^f0105154:	78 5f                	js     f01051b5 <syscall+0x1e5>$/;"	l
f0105156	obj/kern/kernel.asm	/^f0105156:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f010515d	obj/kern/kernel.asm	/^f010515d:	e8 d9 bf ff ff       	call   f010113b <page_alloc>$/;"	l
f0105162	obj/kern/kernel.asm	/^f0105162:	89 c7                	mov    %eax,%edi$/;"	l
f0105164	obj/kern/kernel.asm	/^f0105164:	85 c0                	test   %eax,%eax$/;"	l
f0105166	obj/kern/kernel.asm	/^f0105166:	74 51                	je     f01051b9 <syscall+0x1e9>$/;"	l
f0105168	obj/kern/kernel.asm	/^f0105168:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010516b	obj/kern/kernel.asm	/^f010516b:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010516f	obj/kern/kernel.asm	/^f010516f:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0105173	obj/kern/kernel.asm	/^f0105173:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105177	obj/kern/kernel.asm	/^f0105177:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010517a	obj/kern/kernel.asm	/^f010517a:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f010517d	obj/kern/kernel.asm	/^f010517d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105180	obj/kern/kernel.asm	/^f0105180:	e8 f6 c2 ff ff       	call   f010147b <page_insert>$/;"	l
f0105185	obj/kern/kernel.asm	/^f0105185:	89 c3                	mov    %eax,%ebx$/;"	l
f0105187	obj/kern/kernel.asm	/^f0105187:	85 c0                	test   %eax,%eax$/;"	l
f0105189	obj/kern/kernel.asm	/^f0105189:	79 33                	jns    f01051be <syscall+0x1ee>$/;"	l
f010518b	obj/kern/kernel.asm	/^f010518b:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f010518e	obj/kern/kernel.asm	/^f010518e:	e8 38 c0 ff ff       	call   f01011cb <page_free>$/;"	l
f0105193	obj/kern/kernel.asm	/^f0105193:	89 de                	mov    %ebx,%esi$/;"	l
f0105195	obj/kern/kernel.asm	/^f0105195:	f7 de                	neg    %esi$/;"	l
f0105197	obj/kern/kernel.asm	/^f0105197:	eb 25                	jmp    f01051be <syscall+0x1ee>$/;"	l
f0105199	obj/kern/kernel.asm	/^f0105199:	be fd ff ff ff       	mov    $0xfffffffd,%esi$/;"	l
f010519e	obj/kern/kernel.asm	/^f010519e:	eb 1e                	jmp    f01051be <syscall+0x1ee>$/;"	l
f01051a0	obj/kern/kernel.asm	/^f01051a0:	be fd ff ff ff       	mov    $0xfffffffd,%esi$/;"	l
f01051a5	obj/kern/kernel.asm	/^f01051a5:	eb 17                	jmp    f01051be <syscall+0x1ee>$/;"	l
f01051a7	obj/kern/kernel.asm	/^f01051a7:	be fd ff ff ff       	mov    $0xfffffffd,%esi$/;"	l
f01051ac	obj/kern/kernel.asm	/^f01051ac:	eb 10                	jmp    f01051be <syscall+0x1ee>$/;"	l
f01051ae	obj/kern/kernel.asm	/^f01051ae:	be fd ff ff ff       	mov    $0xfffffffd,%esi$/;"	l
f01051b3	obj/kern/kernel.asm	/^f01051b3:	eb 09                	jmp    f01051be <syscall+0x1ee>$/;"	l
f01051b5	obj/kern/kernel.asm	/^f01051b5:	89 c6                	mov    %eax,%esi$/;"	l
f01051b7	obj/kern/kernel.asm	/^f01051b7:	eb 05                	jmp    f01051be <syscall+0x1ee>$/;"	l
f01051b9	obj/kern/kernel.asm	/^f01051b9:	be fc ff ff ff       	mov    $0xfffffffc,%esi$/;"	l
f01051be	obj/kern/kernel.asm	/^f01051be:	89 f0                	mov    %esi,%eax$/;"	l
f01051c0	obj/kern/kernel.asm	/^f01051c0:	e9 45 05 00 00       	jmp    f010570a <syscall+0x73a>$/;"	l
f01051c5	obj/kern/kernel.asm	/^f01051c5:	81 fb ff ff bf ee    	cmp    $0xeebfffff,%ebx$/;"	l
f01051cb	obj/kern/kernel.asm	/^f01051cb:	0f 87 f5 00 00 00    	ja     f01052c6 <syscall+0x2f6>$/;"	l
f01051d1	obj/kern/kernel.asm	/^f01051d1:	81 7d 18 ff ff bf ee 	cmpl   $0xeebfffff,0x18(%ebp)$/;"	l
f01051d8	obj/kern/kernel.asm	/^f01051d8:	0f 87 e8 00 00 00    	ja     f01052c6 <syscall+0x2f6>$/;"	l
f01051de	obj/kern/kernel.asm	/^f01051de:	8d 83 ff 0f 00 00    	lea    0xfff(%ebx),%eax$/;"	l
f01051e4	obj/kern/kernel.asm	/^f01051e4:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01051e9	obj/kern/kernel.asm	/^f01051e9:	39 c3                	cmp    %eax,%ebx$/;"	l
f01051eb	obj/kern/kernel.asm	/^f01051eb:	0f 85 dc 00 00 00    	jne    f01052cd <syscall+0x2fd>$/;"	l
f01051f1	obj/kern/kernel.asm	/^f01051f1:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
f01051f4	obj/kern/kernel.asm	/^f01051f4:	05 ff 0f 00 00       	add    $0xfff,%eax$/;"	l
f01051f9	obj/kern/kernel.asm	/^f01051f9:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01051fe	obj/kern/kernel.asm	/^f01051fe:	39 45 18             	cmp    %eax,0x18(%ebp)$/;"	l
f0105201	obj/kern/kernel.asm	/^f0105201:	0f 85 cd 00 00 00    	jne    f01052d4 <syscall+0x304>$/;"	l
f0105207	obj/kern/kernel.asm	/^f0105207:	f7 45 1c f8 f1 ff ff 	testl  $0xfffff1f8,0x1c(%ebp)$/;"	l
f010520e	obj/kern/kernel.asm	/^f010520e:	0f 85 c7 00 00 00    	jne    f01052db <syscall+0x30b>$/;"	l
f0105214	obj/kern/kernel.asm	/^f0105214:	8b 75 1c             	mov    0x1c(%ebp),%esi$/;"	l
f0105217	obj/kern/kernel.asm	/^f0105217:	f7 d6                	not    %esi$/;"	l
f0105219	obj/kern/kernel.asm	/^f0105219:	83 e6 05             	and    $0x5,%esi$/;"	l
f010521c	obj/kern/kernel.asm	/^f010521c:	0f 85 c0 00 00 00    	jne    f01052e2 <syscall+0x312>$/;"	l
f0105222	obj/kern/kernel.asm	/^f0105222:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f0105229	obj/kern/kernel.asm	/^f0105229:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0105230	obj/kern/kernel.asm	/^f0105230:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0105237	obj/kern/kernel.asm	/^f0105237:	00 $/;"	l
f0105238	obj/kern/kernel.asm	/^f0105238:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f010523b	obj/kern/kernel.asm	/^f010523b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010523f	obj/kern/kernel.asm	/^f010523f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105242	obj/kern/kernel.asm	/^f0105242:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105245	obj/kern/kernel.asm	/^f0105245:	e8 f9 e4 ff ff       	call   f0103743 <envid2env>$/;"	l
f010524a	obj/kern/kernel.asm	/^f010524a:	85 c0                	test   %eax,%eax$/;"	l
f010524c	obj/kern/kernel.asm	/^f010524c:	0f 88 97 00 00 00    	js     f01052e9 <syscall+0x319>$/;"	l
f0105252	obj/kern/kernel.asm	/^f0105252:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0105259	obj/kern/kernel.asm	/^f0105259:	00 $/;"	l
f010525a	obj/kern/kernel.asm	/^f010525a:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f010525d	obj/kern/kernel.asm	/^f010525d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105261	obj/kern/kernel.asm	/^f0105261:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105264	obj/kern/kernel.asm	/^f0105264:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105267	obj/kern/kernel.asm	/^f0105267:	e8 d7 e4 ff ff       	call   f0103743 <envid2env>$/;"	l
f010526c	obj/kern/kernel.asm	/^f010526c:	85 c0                	test   %eax,%eax$/;"	l
f010526e	obj/kern/kernel.asm	/^f010526e:	78 7d                	js     f01052ed <syscall+0x31d>$/;"	l
f0105270	obj/kern/kernel.asm	/^f0105270:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
f0105273	obj/kern/kernel.asm	/^f0105273:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0105277	obj/kern/kernel.asm	/^f0105277:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f010527b	obj/kern/kernel.asm	/^f010527b:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f010527e	obj/kern/kernel.asm	/^f010527e:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0105281	obj/kern/kernel.asm	/^f0105281:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105284	obj/kern/kernel.asm	/^f0105284:	e8 fb c0 ff ff       	call   f0101384 <page_lookup>$/;"	l
f0105289	obj/kern/kernel.asm	/^f0105289:	85 c0                	test   %eax,%eax$/;"	l
f010528b	obj/kern/kernel.asm	/^f010528b:	74 65                	je     f01052f2 <syscall+0x322>$/;"	l
f010528d	obj/kern/kernel.asm	/^f010528d:	f6 45 1c 02          	testb  $0x2,0x1c(%ebp)$/;"	l
f0105291	obj/kern/kernel.asm	/^f0105291:	74 08                	je     f010529b <syscall+0x2cb>$/;"	l
f0105293	obj/kern/kernel.asm	/^f0105293:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0105296	obj/kern/kernel.asm	/^f0105296:	f6 02 02             	testb  $0x2,(%edx)$/;"	l
f0105299	obj/kern/kernel.asm	/^f0105299:	74 5e                	je     f01052f9 <syscall+0x329>$/;"	l
f010529b	obj/kern/kernel.asm	/^f010529b:	8b 4d 1c             	mov    0x1c(%ebp),%ecx$/;"	l
f010529e	obj/kern/kernel.asm	/^f010529e:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f01052a2	obj/kern/kernel.asm	/^f01052a2:	8b 7d 18             	mov    0x18(%ebp),%edi$/;"	l
f01052a5	obj/kern/kernel.asm	/^f01052a5:	89 7c 24 08          	mov    %edi,0x8(%esp)$/;"	l
f01052a9	obj/kern/kernel.asm	/^f01052a9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01052ad	obj/kern/kernel.asm	/^f01052ad:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01052b0	obj/kern/kernel.asm	/^f01052b0:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f01052b3	obj/kern/kernel.asm	/^f01052b3:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01052b6	obj/kern/kernel.asm	/^f01052b6:	e8 c0 c1 ff ff       	call   f010147b <page_insert>$/;"	l
f01052bb	obj/kern/kernel.asm	/^f01052bb:	89 c2                	mov    %eax,%edx$/;"	l
f01052bd	obj/kern/kernel.asm	/^f01052bd:	f7 da                	neg    %edx$/;"	l
f01052bf	obj/kern/kernel.asm	/^f01052bf:	85 c0                	test   %eax,%eax$/;"	l
f01052c1	obj/kern/kernel.asm	/^f01052c1:	0f 48 f2             	cmovs  %edx,%esi$/;"	l
f01052c4	obj/kern/kernel.asm	/^f01052c4:	eb 38                	jmp    f01052fe <syscall+0x32e>$/;"	l
f01052c6	obj/kern/kernel.asm	/^f01052c6:	be fd ff ff ff       	mov    $0xfffffffd,%esi$/;"	l
f01052cb	obj/kern/kernel.asm	/^f01052cb:	eb 31                	jmp    f01052fe <syscall+0x32e>$/;"	l
f01052cd	obj/kern/kernel.asm	/^f01052cd:	be fd ff ff ff       	mov    $0xfffffffd,%esi$/;"	l
f01052d2	obj/kern/kernel.asm	/^f01052d2:	eb 2a                	jmp    f01052fe <syscall+0x32e>$/;"	l
f01052d4	obj/kern/kernel.asm	/^f01052d4:	be fd ff ff ff       	mov    $0xfffffffd,%esi$/;"	l
f01052d9	obj/kern/kernel.asm	/^f01052d9:	eb 23                	jmp    f01052fe <syscall+0x32e>$/;"	l
f01052db	obj/kern/kernel.asm	/^f01052db:	be fd ff ff ff       	mov    $0xfffffffd,%esi$/;"	l
f01052e0	obj/kern/kernel.asm	/^f01052e0:	eb 1c                	jmp    f01052fe <syscall+0x32e>$/;"	l
f01052e2	obj/kern/kernel.asm	/^f01052e2:	be fd ff ff ff       	mov    $0xfffffffd,%esi$/;"	l
f01052e7	obj/kern/kernel.asm	/^f01052e7:	eb 15                	jmp    f01052fe <syscall+0x32e>$/;"	l
f01052e9	obj/kern/kernel.asm	/^f01052e9:	89 c6                	mov    %eax,%esi$/;"	l
f01052eb	obj/kern/kernel.asm	/^f01052eb:	eb 11                	jmp    f01052fe <syscall+0x32e>$/;"	l
f01052ed	obj/kern/kernel.asm	/^f01052ed:	89 c6                	mov    %eax,%esi$/;"	l
f01052ef	obj/kern/kernel.asm	/^f01052ef:	90                   	nop$/;"	l
f01052f0	obj/kern/kernel.asm	/^f01052f0:	eb 0c                	jmp    f01052fe <syscall+0x32e>$/;"	l
f01052f2	obj/kern/kernel.asm	/^f01052f2:	be fd ff ff ff       	mov    $0xfffffffd,%esi$/;"	l
f01052f7	obj/kern/kernel.asm	/^f01052f7:	eb 05                	jmp    f01052fe <syscall+0x32e>$/;"	l
f01052f9	obj/kern/kernel.asm	/^f01052f9:	be fd ff ff ff       	mov    $0xfffffffd,%esi$/;"	l
f01052fe	obj/kern/kernel.asm	/^f01052fe:	89 f0                	mov    %esi,%eax$/;"	l
f0105300	obj/kern/kernel.asm	/^f0105300:	e9 05 04 00 00       	jmp    f010570a <syscall+0x73a>$/;"	l
f0105305	obj/kern/kernel.asm	/^f0105305:	81 fb ff ff bf ee    	cmp    $0xeebfffff,%ebx$/;"	l
f010530b	obj/kern/kernel.asm	/^f010530b:	77 4f                	ja     f010535c <syscall+0x38c>$/;"	l
f010530d	obj/kern/kernel.asm	/^f010530d:	8d 83 ff 0f 00 00    	lea    0xfff(%ebx),%eax$/;"	l
f0105313	obj/kern/kernel.asm	/^f0105313:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0105318	obj/kern/kernel.asm	/^f0105318:	39 c3                	cmp    %eax,%ebx$/;"	l
f010531a	obj/kern/kernel.asm	/^f010531a:	75 47                	jne    f0105363 <syscall+0x393>$/;"	l
f010531c	obj/kern/kernel.asm	/^f010531c:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0105323	obj/kern/kernel.asm	/^f0105323:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f010532a	obj/kern/kernel.asm	/^f010532a:	00 $/;"	l
f010532b	obj/kern/kernel.asm	/^f010532b:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f010532e	obj/kern/kernel.asm	/^f010532e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105332	obj/kern/kernel.asm	/^f0105332:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105335	obj/kern/kernel.asm	/^f0105335:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105338	obj/kern/kernel.asm	/^f0105338:	e8 06 e4 ff ff       	call   f0103743 <envid2env>$/;"	l
f010533d	obj/kern/kernel.asm	/^f010533d:	89 c2                	mov    %eax,%edx$/;"	l
f010533f	obj/kern/kernel.asm	/^f010533f:	85 c0                	test   %eax,%eax$/;"	l
f0105341	obj/kern/kernel.asm	/^f0105341:	78 25                	js     f0105368 <syscall+0x398>$/;"	l
f0105343	obj/kern/kernel.asm	/^f0105343:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0105347	obj/kern/kernel.asm	/^f0105347:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010534a	obj/kern/kernel.asm	/^f010534a:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f010534d	obj/kern/kernel.asm	/^f010534d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105350	obj/kern/kernel.asm	/^f0105350:	e8 dd c0 ff ff       	call   f0101432 <page_remove>$/;"	l
f0105355	obj/kern/kernel.asm	/^f0105355:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010535a	obj/kern/kernel.asm	/^f010535a:	eb 0c                	jmp    f0105368 <syscall+0x398>$/;"	l
f010535c	obj/kern/kernel.asm	/^f010535c:	ba fd ff ff ff       	mov    $0xfffffffd,%edx$/;"	l
f0105361	obj/kern/kernel.asm	/^f0105361:	eb 05                	jmp    f0105368 <syscall+0x398>$/;"	l
f0105363	obj/kern/kernel.asm	/^f0105363:	ba fd ff ff ff       	mov    $0xfffffffd,%edx$/;"	l
f0105368	obj/kern/kernel.asm	/^f0105368:	89 d0                	mov    %edx,%eax$/;"	l
f010536a	obj/kern/kernel.asm	/^f010536a:	e9 9b 03 00 00       	jmp    f010570a <syscall+0x73a>$/;"	l
f010536f	obj/kern/kernel.asm	/^f010536f:	83 fb 04             	cmp    $0x4,%ebx$/;"	l
f0105372	obj/kern/kernel.asm	/^f0105372:	74 05                	je     f0105379 <syscall+0x3a9>$/;"	l
f0105374	obj/kern/kernel.asm	/^f0105374:	83 fb 02             	cmp    $0x2,%ebx$/;"	l
f0105377	obj/kern/kernel.asm	/^f0105377:	75 39                	jne    f01053b2 <syscall+0x3e2>$/;"	l
f0105379	obj/kern/kernel.asm	/^f0105379:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0105380	obj/kern/kernel.asm	/^f0105380:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0105387	obj/kern/kernel.asm	/^f0105387:	00 $/;"	l
f0105388	obj/kern/kernel.asm	/^f0105388:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f010538b	obj/kern/kernel.asm	/^f010538b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010538f	obj/kern/kernel.asm	/^f010538f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105392	obj/kern/kernel.asm	/^f0105392:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105395	obj/kern/kernel.asm	/^f0105395:	e8 a9 e3 ff ff       	call   f0103743 <envid2env>$/;"	l
f010539a	obj/kern/kernel.asm	/^f010539a:	85 c0                	test   %eax,%eax$/;"	l
f010539c	obj/kern/kernel.asm	/^f010539c:	0f 88 68 03 00 00    	js     f010570a <syscall+0x73a>$/;"	l
f01053a2	obj/kern/kernel.asm	/^f01053a2:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01053a5	obj/kern/kernel.asm	/^f01053a5:	89 58 54             	mov    %ebx,0x54(%eax)$/;"	l
f01053a8	obj/kern/kernel.asm	/^f01053a8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01053ad	obj/kern/kernel.asm	/^f01053ad:	e9 58 03 00 00       	jmp    f010570a <syscall+0x73a>$/;"	l
f01053b2	obj/kern/kernel.asm	/^f01053b2:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f01053b7	obj/kern/kernel.asm	/^f01053b7:	e9 4e 03 00 00       	jmp    f010570a <syscall+0x73a>$/;"	l
f01053bc	obj/kern/kernel.asm	/^f01053bc:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f01053c3	obj/kern/kernel.asm	/^f01053c3:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f01053ca	obj/kern/kernel.asm	/^f01053ca:	00 $/;"	l
f01053cb	obj/kern/kernel.asm	/^f01053cb:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01053ce	obj/kern/kernel.asm	/^f01053ce:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01053d2	obj/kern/kernel.asm	/^f01053d2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01053d5	obj/kern/kernel.asm	/^f01053d5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01053d8	obj/kern/kernel.asm	/^f01053d8:	e8 66 e3 ff ff       	call   f0103743 <envid2env>$/;"	l
f01053dd	obj/kern/kernel.asm	/^f01053dd:	85 c0                	test   %eax,%eax$/;"	l
f01053df	obj/kern/kernel.asm	/^f01053df:	0f 88 25 03 00 00    	js     f010570a <syscall+0x73a>$/;"	l
f01053e5	obj/kern/kernel.asm	/^f01053e5:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01053e8	obj/kern/kernel.asm	/^f01053e8:	89 58 64             	mov    %ebx,0x64(%eax)$/;"	l
f01053eb	obj/kern/kernel.asm	/^f01053eb:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01053f0	obj/kern/kernel.asm	/^f01053f0:	e9 15 03 00 00       	jmp    f010570a <syscall+0x73a>$/;"	l
f01053f5	obj/kern/kernel.asm	/^f01053f5:	81 7d 14 ff ff bf ee 	cmpl   $0xeebfffff,0x14(%ebp)$/;"	l
f01053fc	obj/kern/kernel.asm	/^f01053fc:	0f 87 f0 02 00 00    	ja     f01056f2 <syscall+0x722>$/;"	l
f0105402	obj/kern/kernel.asm	/^f0105402:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105405	obj/kern/kernel.asm	/^f0105405:	05 ff 0f 00 00       	add    $0xfff,%eax$/;"	l
f010540a	obj/kern/kernel.asm	/^f010540a:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f010540f	obj/kern/kernel.asm	/^f010540f:	39 45 14             	cmp    %eax,0x14(%ebp)$/;"	l
f0105412	obj/kern/kernel.asm	/^f0105412:	0f 85 ea 00 00 00    	jne    f0105502 <syscall+0x532>$/;"	l
f0105418	obj/kern/kernel.asm	/^f0105418:	f7 45 18 f8 f1 ff ff 	testl  $0xfffff1f8,0x18(%ebp)$/;"	l
f010541f	obj/kern/kernel.asm	/^f010541f:	0f 85 e7 00 00 00    	jne    f010550c <syscall+0x53c>$/;"	l
f0105425	obj/kern/kernel.asm	/^f0105425:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
f0105428	obj/kern/kernel.asm	/^f0105428:	f7 d0                	not    %eax$/;"	l
f010542a	obj/kern/kernel.asm	/^f010542a:	a8 05                	test   $0x5,%al$/;"	l
f010542c	obj/kern/kernel.asm	/^f010542c:	0f 84 7c 02 00 00    	je     f01056ae <syscall+0x6de>$/;"	l
f0105432	obj/kern/kernel.asm	/^f0105432:	e9 df 00 00 00       	jmp    f0105516 <syscall+0x546>$/;"	l
f0105437	obj/kern/kernel.asm	/^f0105437:	f6 45 18 02          	testb  $0x2,0x18(%ebp)$/;"	l
f010543b	obj/kern/kernel.asm	/^f010543b:	74 0c                	je     f0105449 <syscall+0x479>$/;"	l
f010543d	obj/kern/kernel.asm	/^f010543d:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105440	obj/kern/kernel.asm	/^f0105440:	f6 00 02             	testb  $0x2,(%eax)$/;"	l
f0105443	obj/kern/kernel.asm	/^f0105443:	0f 84 d7 00 00 00    	je     f0105520 <syscall+0x550>$/;"	l
f0105449	obj/kern/kernel.asm	/^f0105449:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0105450	obj/kern/kernel.asm	/^f0105450:	00 $/;"	l
f0105451	obj/kern/kernel.asm	/^f0105451:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0105454	obj/kern/kernel.asm	/^f0105454:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105458	obj/kern/kernel.asm	/^f0105458:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010545b	obj/kern/kernel.asm	/^f010545b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010545e	obj/kern/kernel.asm	/^f010545e:	e8 e0 e2 ff ff       	call   f0103743 <envid2env>$/;"	l
f0105463	obj/kern/kernel.asm	/^f0105463:	85 c0                	test   %eax,%eax$/;"	l
f0105465	obj/kern/kernel.asm	/^f0105465:	0f 88 9f 02 00 00    	js     f010570a <syscall+0x73a>$/;"	l
f010546b	obj/kern/kernel.asm	/^f010546b:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f010546e	obj/kern/kernel.asm	/^f010546e:	80 7a 68 00          	cmpb   $0x0,0x68(%edx)$/;"	l
f0105472	obj/kern/kernel.asm	/^f0105472:	0f 84 b2 00 00 00    	je     f010552a <syscall+0x55a>$/;"	l
f0105478	obj/kern/kernel.asm	/^f0105478:	83 7a 54 04          	cmpl   $0x4,0x54(%edx)$/;"	l
f010547c	obj/kern/kernel.asm	/^f010547c:	0f 85 b2 00 00 00    	jne    f0105534 <syscall+0x564>$/;"	l
f0105482	obj/kern/kernel.asm	/^f0105482:	81 7d 14 ff ff bf ee 	cmpl   $0xeebfffff,0x14(%ebp)$/;"	l
f0105489	obj/kern/kernel.asm	/^f0105489:	77 37                	ja     f01054c2 <syscall+0x4f2>$/;"	l
f010548b	obj/kern/kernel.asm	/^f010548b:	8b 42 6c             	mov    0x6c(%edx),%eax$/;"	l
f010548e	obj/kern/kernel.asm	/^f010548e:	3d ff ff bf ee       	cmp    $0xeebfffff,%eax$/;"	l
f0105493	obj/kern/kernel.asm	/^f0105493:	77 2d                	ja     f01054c2 <syscall+0x4f2>$/;"	l
f0105495	obj/kern/kernel.asm	/^f0105495:	8b 4d 18             	mov    0x18(%ebp),%ecx$/;"	l
f0105498	obj/kern/kernel.asm	/^f0105498:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f010549c	obj/kern/kernel.asm	/^f010549c:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01054a0	obj/kern/kernel.asm	/^f01054a0:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f01054a4	obj/kern/kernel.asm	/^f01054a4:	8b 42 60             	mov    0x60(%edx),%eax$/;"	l
f01054a7	obj/kern/kernel.asm	/^f01054a7:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01054aa	obj/kern/kernel.asm	/^f01054aa:	e8 cc bf ff ff       	call   f010147b <page_insert>$/;"	l
f01054af	obj/kern/kernel.asm	/^f01054af:	85 c0                	test   %eax,%eax$/;"	l
f01054b1	obj/kern/kernel.asm	/^f01054b1:	0f 88 53 02 00 00    	js     f010570a <syscall+0x73a>$/;"	l
f01054b7	obj/kern/kernel.asm	/^f01054b7:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01054ba	obj/kern/kernel.asm	/^f01054ba:	8b 4d 18             	mov    0x18(%ebp),%ecx$/;"	l
f01054bd	obj/kern/kernel.asm	/^f01054bd:	89 48 78             	mov    %ecx,0x78(%eax)$/;"	l
f01054c0	obj/kern/kernel.asm	/^f01054c0:	eb 07                	jmp    f01054c9 <syscall+0x4f9>$/;"	l
f01054c2	obj/kern/kernel.asm	/^f01054c2:	c7 42 78 00 00 00 00 	movl   $0x0,0x78(%edx)$/;"	l
f01054c9	obj/kern/kernel.asm	/^f01054c9:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f01054cc	obj/kern/kernel.asm	/^f01054cc:	c6 46 68 00          	movb   $0x0,0x68(%esi)$/;"	l
f01054d0	obj/kern/kernel.asm	/^f01054d0:	89 5e 70             	mov    %ebx,0x70(%esi)$/;"	l
f01054d3	obj/kern/kernel.asm	/^f01054d3:	e8 a1 15 00 00       	call   f0106a79 <cpunum>$/;"	l
f01054d8	obj/kern/kernel.asm	/^f01054d8:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01054db	obj/kern/kernel.asm	/^f01054db:	8b 80 28 90 2b f0    	mov    -0xfd46fd8(%eax),%eax$/;"	l
f01054e1	obj/kern/kernel.asm	/^f01054e1:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f01054e4	obj/kern/kernel.asm	/^f01054e4:	89 46 74             	mov    %eax,0x74(%esi)$/;"	l
f01054e7	obj/kern/kernel.asm	/^f01054e7:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01054ea	obj/kern/kernel.asm	/^f01054ea:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)$/;"	l
f01054f1	obj/kern/kernel.asm	/^f01054f1:	c7 40 54 02 00 00 00 	movl   $0x2,0x54(%eax)$/;"	l
f01054f8	obj/kern/kernel.asm	/^f01054f8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01054fd	obj/kern/kernel.asm	/^f01054fd:	e9 08 02 00 00       	jmp    f010570a <syscall+0x73a>$/;"	l
f0105502	obj/kern/kernel.asm	/^f0105502:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105507	obj/kern/kernel.asm	/^f0105507:	e9 fe 01 00 00       	jmp    f010570a <syscall+0x73a>$/;"	l
f010550c	obj/kern/kernel.asm	/^f010550c:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105511	obj/kern/kernel.asm	/^f0105511:	e9 f4 01 00 00       	jmp    f010570a <syscall+0x73a>$/;"	l
f0105516	obj/kern/kernel.asm	/^f0105516:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f010551b	obj/kern/kernel.asm	/^f010551b:	e9 ea 01 00 00       	jmp    f010570a <syscall+0x73a>$/;"	l
f0105520	obj/kern/kernel.asm	/^f0105520:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105525	obj/kern/kernel.asm	/^f0105525:	e9 e0 01 00 00       	jmp    f010570a <syscall+0x73a>$/;"	l
f010552a	obj/kern/kernel.asm	/^f010552a:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax$/;"	l
f010552f	obj/kern/kernel.asm	/^f010552f:	e9 d6 01 00 00       	jmp    f010570a <syscall+0x73a>$/;"	l
f0105534	obj/kern/kernel.asm	/^f0105534:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax$/;"	l
f0105539	obj/kern/kernel.asm	/^f0105539:	e9 cc 01 00 00       	jmp    f010570a <syscall+0x73a>$/;"	l
f010553e	obj/kern/kernel.asm	/^f010553e:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105543	obj/kern/kernel.asm	/^f0105543:	e9 c2 01 00 00       	jmp    f010570a <syscall+0x73a>$/;"	l
f0105548	obj/kern/kernel.asm	/^f0105548:	81 7d 0c ff ff bf ee 	cmpl   $0xeebfffff,0xc(%ebp)$/;"	l
f010554f	obj/kern/kernel.asm	/^f010554f:	77 2a                	ja     f010557b <syscall+0x5ab>$/;"	l
f0105551	obj/kern/kernel.asm	/^f0105551:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105554	obj/kern/kernel.asm	/^f0105554:	05 ff 0f 00 00       	add    $0xfff,%eax$/;"	l
f0105559	obj/kern/kernel.asm	/^f0105559:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f010555e	obj/kern/kernel.asm	/^f010555e:	39 45 0c             	cmp    %eax,0xc(%ebp)$/;"	l
f0105561	obj/kern/kernel.asm	/^f0105561:	0f 85 40 01 00 00    	jne    f01056a7 <syscall+0x6d7>$/;"	l
f0105567	obj/kern/kernel.asm	/^f0105567:	e8 0d 15 00 00       	call   f0106a79 <cpunum>$/;"	l
f010556c	obj/kern/kernel.asm	/^f010556c:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010556f	obj/kern/kernel.asm	/^f010556f:	8b 80 28 90 2b f0    	mov    -0xfd46fd8(%eax),%eax$/;"	l
f0105575	obj/kern/kernel.asm	/^f0105575:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0105578	obj/kern/kernel.asm	/^f0105578:	89 48 6c             	mov    %ecx,0x6c(%eax)$/;"	l
f010557b	obj/kern/kernel.asm	/^f010557b:	e8 f9 14 00 00       	call   f0106a79 <cpunum>$/;"	l
f0105580	obj/kern/kernel.asm	/^f0105580:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105583	obj/kern/kernel.asm	/^f0105583:	8b 80 28 90 2b f0    	mov    -0xfd46fd8(%eax),%eax$/;"	l
f0105589	obj/kern/kernel.asm	/^f0105589:	c6 40 68 01          	movb   $0x1,0x68(%eax)$/;"	l
f010558d	obj/kern/kernel.asm	/^f010558d:	e8 e7 14 00 00       	call   f0106a79 <cpunum>$/;"	l
f0105592	obj/kern/kernel.asm	/^f0105592:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105595	obj/kern/kernel.asm	/^f0105595:	8b 80 28 90 2b f0    	mov    -0xfd46fd8(%eax),%eax$/;"	l
f010559b	obj/kern/kernel.asm	/^f010559b:	c7 40 54 04 00 00 00 	movl   $0x4,0x54(%eax)$/;"	l
f01055a2	obj/kern/kernel.asm	/^f01055a2:	e8 54 f9 ff ff       	call   f0104efb <sched_yield>$/;"	l
f01055a7	obj/kern/kernel.asm	/^f01055a7:	89 de                	mov    %ebx,%esi$/;"	l
f01055a9	obj/kern/kernel.asm	/^f01055a9:	e8 cb 14 00 00       	call   f0106a79 <cpunum>$/;"	l
f01055ae	obj/kern/kernel.asm	/^f01055ae:	c7 44 24 0c 05 00 00 	movl   $0x5,0xc(%esp)$/;"	l
f01055b5	obj/kern/kernel.asm	/^f01055b5:	00 $/;"	l
f01055b6	obj/kern/kernel.asm	/^f01055b6:	c7 44 24 08 44 00 00 	movl   $0x44,0x8(%esp)$/;"	l
f01055bd	obj/kern/kernel.asm	/^f01055bd:	00 $/;"	l
f01055be	obj/kern/kernel.asm	/^f01055be:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01055c2	obj/kern/kernel.asm	/^f01055c2:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01055c5	obj/kern/kernel.asm	/^f01055c5:	8b 80 28 90 2b f0    	mov    -0xfd46fd8(%eax),%eax$/;"	l
f01055cb	obj/kern/kernel.asm	/^f01055cb:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01055ce	obj/kern/kernel.asm	/^f01055ce:	e8 71 e0 ff ff       	call   f0103644 <user_mem_assert>$/;"	l
f01055d3	obj/kern/kernel.asm	/^f01055d3:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f01055da	obj/kern/kernel.asm	/^f01055da:	00 $/;"	l
f01055db	obj/kern/kernel.asm	/^f01055db:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01055de	obj/kern/kernel.asm	/^f01055de:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01055e2	obj/kern/kernel.asm	/^f01055e2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01055e5	obj/kern/kernel.asm	/^f01055e5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01055e8	obj/kern/kernel.asm	/^f01055e8:	e8 56 e1 ff ff       	call   f0103743 <envid2env>$/;"	l
f01055ed	obj/kern/kernel.asm	/^f01055ed:	85 c0                	test   %eax,%eax$/;"	l
f01055ef	obj/kern/kernel.asm	/^f01055ef:	0f 88 15 01 00 00    	js     f010570a <syscall+0x73a>$/;"	l
f01055f5	obj/kern/kernel.asm	/^f01055f5:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f01055fa	obj/kern/kernel.asm	/^f01055fa:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01055fd	obj/kern/kernel.asm	/^f01055fd:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f01055ff	obj/kern/kernel.asm	/^f01055ff:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105602	obj/kern/kernel.asm	/^f0105602:	81 48 38 00 02 00 00 	orl    $0x200,0x38(%eax)$/;"	l
f0105609	obj/kern/kernel.asm	/^f0105609:	66 c7 40 34 1b 00    	movw   $0x1b,0x34(%eax)$/;"	l
f010560f	obj/kern/kernel.asm	/^f010560f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105614	obj/kern/kernel.asm	/^f0105614:	e9 f1 00 00 00       	jmp    f010570a <syscall+0x73a>$/;"	l
f0105619	obj/kern/kernel.asm	/^f0105619:	e8 62 21 00 00       	call   f0107780 <time_msec>$/;"	l
f010561e	obj/kern/kernel.asm	/^f010561e:	e9 e7 00 00 00       	jmp    f010570a <syscall+0x73a>$/;"	l
f0105623	obj/kern/kernel.asm	/^f0105623:	e8 51 14 00 00       	call   f0106a79 <cpunum>$/;"	l
f0105628	obj/kern/kernel.asm	/^f0105628:	c7 44 24 0c 05 00 00 	movl   $0x5,0xc(%esp)$/;"	l
f010562f	obj/kern/kernel.asm	/^f010562f:	00 $/;"	l
f0105630	obj/kern/kernel.asm	/^f0105630:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0105634	obj/kern/kernel.asm	/^f0105634:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0105637	obj/kern/kernel.asm	/^f0105637:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f010563b	obj/kern/kernel.asm	/^f010563b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010563e	obj/kern/kernel.asm	/^f010563e:	8b 80 28 90 2b f0    	mov    -0xfd46fd8(%eax),%eax$/;"	l
f0105644	obj/kern/kernel.asm	/^f0105644:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105647	obj/kern/kernel.asm	/^f0105647:	e8 f8 df ff ff       	call   f0103644 <user_mem_assert>$/;"	l
f010564c	obj/kern/kernel.asm	/^f010564c:	e8 28 14 00 00       	call   f0106a79 <cpunum>$/;"	l
f0105651	obj/kern/kernel.asm	/^f0105651:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f0105654	obj/kern/kernel.asm	/^f0105654:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0105658	obj/kern/kernel.asm	/^f0105658:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f010565b	obj/kern/kernel.asm	/^f010565b:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f010565f	obj/kern/kernel.asm	/^f010565f:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105662	obj/kern/kernel.asm	/^f0105662:	8b 80 28 90 2b f0    	mov    -0xfd46fd8(%eax),%eax$/;"	l
f0105668	obj/kern/kernel.asm	/^f0105668:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f010566b	obj/kern/kernel.asm	/^f010566b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010566e	obj/kern/kernel.asm	/^f010566e:	e8 11 bd ff ff       	call   f0101384 <page_lookup>$/;"	l
f0105673	obj/kern/kernel.asm	/^f0105673:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0105677	obj/kern/kernel.asm	/^f0105677:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010567a	obj/kern/kernel.asm	/^f010567a:	81 e2 ff 0f 00 00    	and    $0xfff,%edx$/;"	l
f0105680	obj/kern/kernel.asm	/^f0105680:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105683	obj/kern/kernel.asm	/^f0105683:	8b 00                	mov    (%eax),%eax$/;"	l
f0105685	obj/kern/kernel.asm	/^f0105685:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f010568a	obj/kern/kernel.asm	/^f010568a:	09 d0                	or     %edx,%eax$/;"	l
f010568c	obj/kern/kernel.asm	/^f010568c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010568f	obj/kern/kernel.asm	/^f010568f:	e8 02 1a 00 00       	call   f0107096 <transmit_packet>$/;"	l
f0105694	obj/kern/kernel.asm	/^f0105694:	85 c0                	test   %eax,%eax$/;"	l
f0105696	obj/kern/kernel.asm	/^f0105696:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010569b	obj/kern/kernel.asm	/^f010569b:	0f 4f c2             	cmovg  %edx,%eax$/;"	l
f010569e	obj/kern/kernel.asm	/^f010569e:	eb 6a                	jmp    f010570a <syscall+0x73a>$/;"	l
f01056a0	obj/kern/kernel.asm	/^f01056a0:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f01056a5	obj/kern/kernel.asm	/^f01056a5:	eb 63                	jmp    f010570a <syscall+0x73a>$/;"	l
f01056a7	obj/kern/kernel.asm	/^f01056a7:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f01056ac	obj/kern/kernel.asm	/^f01056ac:	eb 5c                	jmp    f010570a <syscall+0x73a>$/;"	l
f01056ae	obj/kern/kernel.asm	/^f01056ae:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f01056b5	obj/kern/kernel.asm	/^f01056b5:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f01056bc	obj/kern/kernel.asm	/^f01056bc:	e8 b8 13 00 00       	call   f0106a79 <cpunum>$/;"	l
f01056c1	obj/kern/kernel.asm	/^f01056c1:	8d 55 e0             	lea    -0x20(%ebp),%edx$/;"	l
f01056c4	obj/kern/kernel.asm	/^f01056c4:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f01056c8	obj/kern/kernel.asm	/^f01056c8:	8b 7d 14             	mov    0x14(%ebp),%edi$/;"	l
f01056cb	obj/kern/kernel.asm	/^f01056cb:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01056cf	obj/kern/kernel.asm	/^f01056cf:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01056d2	obj/kern/kernel.asm	/^f01056d2:	8b 80 28 90 2b f0    	mov    -0xfd46fd8(%eax),%eax$/;"	l
f01056d8	obj/kern/kernel.asm	/^f01056d8:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f01056db	obj/kern/kernel.asm	/^f01056db:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01056de	obj/kern/kernel.asm	/^f01056de:	e8 a1 bc ff ff       	call   f0101384 <page_lookup>$/;"	l
f01056e3	obj/kern/kernel.asm	/^f01056e3:	89 c6                	mov    %eax,%esi$/;"	l
f01056e5	obj/kern/kernel.asm	/^f01056e5:	85 c0                	test   %eax,%eax$/;"	l
f01056e7	obj/kern/kernel.asm	/^f01056e7:	0f 85 4a fd ff ff    	jne    f0105437 <syscall+0x467>$/;"	l
f01056ed	obj/kern/kernel.asm	/^f01056ed:	e9 4c fe ff ff       	jmp    f010553e <syscall+0x56e>$/;"	l
f01056f2	obj/kern/kernel.asm	/^f01056f2:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f01056f9	obj/kern/kernel.asm	/^f01056f9:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0105700	obj/kern/kernel.asm	/^f0105700:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0105705	obj/kern/kernel.asm	/^f0105705:	e9 3f fd ff ff       	jmp    f0105449 <syscall+0x479>$/;"	l
f010570a	obj/kern/kernel.asm	/^f010570a:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f010570d	obj/kern/kernel.asm	/^f010570d:	5b                   	pop    %ebx$/;"	l
f010570e	obj/kern/kernel.asm	/^f010570e:	5e                   	pop    %esi$/;"	l
f010570f	obj/kern/kernel.asm	/^f010570f:	5f                   	pop    %edi$/;"	l
f0105710	obj/kern/kernel.asm	/^f0105710:	5d                   	pop    %ebp$/;"	l
f0105711	obj/kern/kernel.asm	/^f0105711:	c3                   	ret    $/;"	l
f0105712	obj/kern/kernel.asm	/^f0105712 <stab_binsearch>:$/;"	l
f0105712	obj/kern/kernel.asm	/^f0105712:	55                   	push   %ebp$/;"	l
f0105713	obj/kern/kernel.asm	/^f0105713:	89 e5                	mov    %esp,%ebp$/;"	l
f0105715	obj/kern/kernel.asm	/^f0105715:	57                   	push   %edi$/;"	l
f0105716	obj/kern/kernel.asm	/^f0105716:	56                   	push   %esi$/;"	l
f0105717	obj/kern/kernel.asm	/^f0105717:	53                   	push   %ebx$/;"	l
f0105718	obj/kern/kernel.asm	/^f0105718:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010571b	obj/kern/kernel.asm	/^f010571b:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f010571e	obj/kern/kernel.asm	/^f010571e:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0105721	obj/kern/kernel.asm	/^f0105721:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f0105724	obj/kern/kernel.asm	/^f0105724:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0105727	obj/kern/kernel.asm	/^f0105727:	8b 1a                	mov    (%edx),%ebx$/;"	l
f0105729	obj/kern/kernel.asm	/^f0105729:	8b 01                	mov    (%ecx),%eax$/;"	l
f010572b	obj/kern/kernel.asm	/^f010572b:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f010572e	obj/kern/kernel.asm	/^f010572e:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
f0105735	obj/kern/kernel.asm	/^f0105735:	e9 88 00 00 00       	jmp    f01057c2 <stab_binsearch+0xb0>$/;"	l
f010573a	obj/kern/kernel.asm	/^f010573a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f010573d	obj/kern/kernel.asm	/^f010573d:	01 d8                	add    %ebx,%eax$/;"	l
f010573f	obj/kern/kernel.asm	/^f010573f:	89 c7                	mov    %eax,%edi$/;"	l
f0105741	obj/kern/kernel.asm	/^f0105741:	c1 ef 1f             	shr    $0x1f,%edi$/;"	l
f0105744	obj/kern/kernel.asm	/^f0105744:	01 c7                	add    %eax,%edi$/;"	l
f0105746	obj/kern/kernel.asm	/^f0105746:	d1 ff                	sar    %edi$/;"	d
f0105748	obj/kern/kernel.asm	/^f0105748:	8d 04 7f             	lea    (%edi,%edi,2),%eax$/;"	l
f010574b	obj/kern/kernel.asm	/^f010574b:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
f010574e	obj/kern/kernel.asm	/^f010574e:	8d 14 81             	lea    (%ecx,%eax,4),%edx$/;"	l
f0105751	obj/kern/kernel.asm	/^f0105751:	89 f8                	mov    %edi,%eax$/;"	l
f0105753	obj/kern/kernel.asm	/^f0105753:	eb 03                	jmp    f0105758 <stab_binsearch+0x46>$/;"	l
f0105755	obj/kern/kernel.asm	/^f0105755:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0105758	obj/kern/kernel.asm	/^f0105758:	39 c3                	cmp    %eax,%ebx$/;"	l
f010575a	obj/kern/kernel.asm	/^f010575a:	7f 1f                	jg     f010577b <stab_binsearch+0x69>$/;"	l
f010575c	obj/kern/kernel.asm	/^f010575c:	0f b6 4a 04          	movzbl 0x4(%edx),%ecx$/;"	l
f0105760	obj/kern/kernel.asm	/^f0105760:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0105763	obj/kern/kernel.asm	/^f0105763:	39 f1                	cmp    %esi,%ecx$/;"	l
f0105765	obj/kern/kernel.asm	/^f0105765:	75 ee                	jne    f0105755 <stab_binsearch+0x43>$/;"	l
f0105767	obj/kern/kernel.asm	/^f0105767:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
f010576a	obj/kern/kernel.asm	/^f010576a:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f010576d	obj/kern/kernel.asm	/^f010576d:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
f0105770	obj/kern/kernel.asm	/^f0105770:	8b 54 91 08          	mov    0x8(%ecx,%edx,4),%edx$/;"	l
f0105774	obj/kern/kernel.asm	/^f0105774:	39 55 0c             	cmp    %edx,0xc(%ebp)$/;"	l
f0105777	obj/kern/kernel.asm	/^f0105777:	76 18                	jbe    f0105791 <stab_binsearch+0x7f>$/;"	l
f0105779	obj/kern/kernel.asm	/^f0105779:	eb 05                	jmp    f0105780 <stab_binsearch+0x6e>$/;"	l
f010577b	obj/kern/kernel.asm	/^f010577b:	8d 5f 01             	lea    0x1(%edi),%ebx$/;"	l
f010577e	obj/kern/kernel.asm	/^f010577e:	eb 42                	jmp    f01057c2 <stab_binsearch+0xb0>$/;"	l
f0105780	obj/kern/kernel.asm	/^f0105780:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0105783	obj/kern/kernel.asm	/^f0105783:	89 03                	mov    %eax,(%ebx)$/;"	l
f0105785	obj/kern/kernel.asm	/^f0105785:	8d 5f 01             	lea    0x1(%edi),%ebx$/;"	l
f0105788	obj/kern/kernel.asm	/^f0105788:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f010578f	obj/kern/kernel.asm	/^f010578f:	eb 31                	jmp    f01057c2 <stab_binsearch+0xb0>$/;"	l
f0105791	obj/kern/kernel.asm	/^f0105791:	39 55 0c             	cmp    %edx,0xc(%ebp)$/;"	l
f0105794	obj/kern/kernel.asm	/^f0105794:	73 17                	jae    f01057ad <stab_binsearch+0x9b>$/;"	l
f0105796	obj/kern/kernel.asm	/^f0105796:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f0105799	obj/kern/kernel.asm	/^f0105799:	83 e8 01             	sub    $0x1,%eax$/;"	l
f010579c	obj/kern/kernel.asm	/^f010579c:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f010579f	obj/kern/kernel.asm	/^f010579f:	8b 7d e0             	mov    -0x20(%ebp),%edi$/;"	l
f01057a2	obj/kern/kernel.asm	/^f01057a2:	89 07                	mov    %eax,(%edi)$/;"	l
f01057a4	obj/kern/kernel.asm	/^f01057a4:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f01057ab	obj/kern/kernel.asm	/^f01057ab:	eb 15                	jmp    f01057c2 <stab_binsearch+0xb0>$/;"	l
f01057ad	obj/kern/kernel.asm	/^f01057ad:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01057b0	obj/kern/kernel.asm	/^f01057b0:	8b 5d e8             	mov    -0x18(%ebp),%ebx$/;"	l
f01057b3	obj/kern/kernel.asm	/^f01057b3:	89 1f                	mov    %ebx,(%edi)$/;"	l
f01057b5	obj/kern/kernel.asm	/^f01057b5:	83 45 0c 01          	addl   $0x1,0xc(%ebp)$/;"	l
f01057b9	obj/kern/kernel.asm	/^f01057b9:	89 c3                	mov    %eax,%ebx$/;"	l
f01057bb	obj/kern/kernel.asm	/^f01057bb:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f01057c2	obj/kern/kernel.asm	/^f01057c2:	3b 5d f0             	cmp    -0x10(%ebp),%ebx$/;"	l
f01057c5	obj/kern/kernel.asm	/^f01057c5:	0f 8e 6f ff ff ff    	jle    f010573a <stab_binsearch+0x28>$/;"	l
f01057cb	obj/kern/kernel.asm	/^f01057cb:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
f01057cf	obj/kern/kernel.asm	/^f01057cf:	75 0f                	jne    f01057e0 <stab_binsearch+0xce>$/;"	l
f01057d1	obj/kern/kernel.asm	/^f01057d1:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01057d4	obj/kern/kernel.asm	/^f01057d4:	8b 00                	mov    (%eax),%eax$/;"	l
f01057d6	obj/kern/kernel.asm	/^f01057d6:	83 e8 01             	sub    $0x1,%eax$/;"	l
f01057d9	obj/kern/kernel.asm	/^f01057d9:	8b 7d e0             	mov    -0x20(%ebp),%edi$/;"	l
f01057dc	obj/kern/kernel.asm	/^f01057dc:	89 07                	mov    %eax,(%edi)$/;"	l
f01057de	obj/kern/kernel.asm	/^f01057de:	eb 2c                	jmp    f010580c <stab_binsearch+0xfa>$/;"	l
f01057e0	obj/kern/kernel.asm	/^f01057e0:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01057e3	obj/kern/kernel.asm	/^f01057e3:	8b 00                	mov    (%eax),%eax$/;"	l
f01057e5	obj/kern/kernel.asm	/^f01057e5:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01057e8	obj/kern/kernel.asm	/^f01057e8:	8b 0f                	mov    (%edi),%ecx$/;"	l
f01057ea	obj/kern/kernel.asm	/^f01057ea:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f01057ed	obj/kern/kernel.asm	/^f01057ed:	8b 7d ec             	mov    -0x14(%ebp),%edi$/;"	l
f01057f0	obj/kern/kernel.asm	/^f01057f0:	8d 14 97             	lea    (%edi,%edx,4),%edx$/;"	l
f01057f3	obj/kern/kernel.asm	/^f01057f3:	eb 03                	jmp    f01057f8 <stab_binsearch+0xe6>$/;"	l
f01057f5	obj/kern/kernel.asm	/^f01057f5:	83 e8 01             	sub    $0x1,%eax$/;"	l
f01057f8	obj/kern/kernel.asm	/^f01057f8:	39 c8                	cmp    %ecx,%eax$/;"	l
f01057fa	obj/kern/kernel.asm	/^f01057fa:	7e 0b                	jle    f0105807 <stab_binsearch+0xf5>$/;"	l
f01057fc	obj/kern/kernel.asm	/^f01057fc:	0f b6 5a 04          	movzbl 0x4(%edx),%ebx$/;"	l
f0105800	obj/kern/kernel.asm	/^f0105800:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0105803	obj/kern/kernel.asm	/^f0105803:	39 f3                	cmp    %esi,%ebx$/;"	l
f0105805	obj/kern/kernel.asm	/^f0105805:	75 ee                	jne    f01057f5 <stab_binsearch+0xe3>$/;"	l
f0105807	obj/kern/kernel.asm	/^f0105807:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f010580a	obj/kern/kernel.asm	/^f010580a:	89 07                	mov    %eax,(%edi)$/;"	l
f010580c	obj/kern/kernel.asm	/^f010580c:	83 c4 14             	add    $0x14,%esp$/;"	l
f010580f	obj/kern/kernel.asm	/^f010580f:	5b                   	pop    %ebx$/;"	l
f0105810	obj/kern/kernel.asm	/^f0105810:	5e                   	pop    %esi$/;"	l
f0105811	obj/kern/kernel.asm	/^f0105811:	5f                   	pop    %edi$/;"	l
f0105812	obj/kern/kernel.asm	/^f0105812:	5d                   	pop    %ebp$/;"	l
f0105813	obj/kern/kernel.asm	/^f0105813:	c3                   	ret    $/;"	l
f0105814	obj/kern/kernel.asm	/^f0105814 <debuginfo_eip>:$/;"	l
f0105814	obj/kern/kernel.asm	/^f0105814:	55                   	push   %ebp$/;"	l
f0105815	obj/kern/kernel.asm	/^f0105815:	89 e5                	mov    %esp,%ebp$/;"	l
f0105817	obj/kern/kernel.asm	/^f0105817:	57                   	push   %edi$/;"	l
f0105818	obj/kern/kernel.asm	/^f0105818:	56                   	push   %esi$/;"	l
f0105819	obj/kern/kernel.asm	/^f0105819:	53                   	push   %ebx$/;"	l
f010581a	obj/kern/kernel.asm	/^f010581a:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f010581d	obj/kern/kernel.asm	/^f010581d:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0105820	obj/kern/kernel.asm	/^f0105820:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0105823	obj/kern/kernel.asm	/^f0105823:	c7 07 e8 91 10 f0    	movl   $0xf01091e8,(%edi)$/;"	l
f0105829	obj/kern/kernel.asm	/^f0105829:	c7 47 04 00 00 00 00 	movl   $0x0,0x4(%edi)$/;"	l
f0105830	obj/kern/kernel.asm	/^f0105830:	c7 47 08 e8 91 10 f0 	movl   $0xf01091e8,0x8(%edi)$/;"	l
f0105837	obj/kern/kernel.asm	/^f0105837:	c7 47 0c 09 00 00 00 	movl   $0x9,0xc(%edi)$/;"	l
f010583e	obj/kern/kernel.asm	/^f010583e:	89 77 10             	mov    %esi,0x10(%edi)$/;"	l
f0105841	obj/kern/kernel.asm	/^f0105841:	c7 47 14 00 00 00 00 	movl   $0x0,0x14(%edi)$/;"	l
f0105848	obj/kern/kernel.asm	/^f0105848:	81 fe ff ff 7f ef    	cmp    $0xef7fffff,%esi$/;"	l
f010584e	obj/kern/kernel.asm	/^f010584e:	0f 87 ca 00 00 00    	ja     f010591e <debuginfo_eip+0x10a>$/;"	l
f0105854	obj/kern/kernel.asm	/^f0105854:	e8 20 12 00 00       	call   f0106a79 <cpunum>$/;"	l
f0105859	obj/kern/kernel.asm	/^f0105859:	c7 44 24 0c 04 00 00 	movl   $0x4,0xc(%esp)$/;"	l
f0105860	obj/kern/kernel.asm	/^f0105860:	00 $/;"	l
f0105861	obj/kern/kernel.asm	/^f0105861:	c7 44 24 08 10 00 00 	movl   $0x10,0x8(%esp)$/;"	l
f0105868	obj/kern/kernel.asm	/^f0105868:	00 $/;"	l
f0105869	obj/kern/kernel.asm	/^f0105869:	c7 44 24 04 00 00 20 	movl   $0x200000,0x4(%esp)$/;"	l
f0105870	obj/kern/kernel.asm	/^f0105870:	00 $/;"	l
f0105871	obj/kern/kernel.asm	/^f0105871:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105874	obj/kern/kernel.asm	/^f0105874:	8b 80 28 90 2b f0    	mov    -0xfd46fd8(%eax),%eax$/;"	l
f010587a	obj/kern/kernel.asm	/^f010587a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010587d	obj/kern/kernel.asm	/^f010587d:	e8 2b dd ff ff       	call   f01035ad <user_mem_check>$/;"	l
f0105882	obj/kern/kernel.asm	/^f0105882:	85 c0                	test   %eax,%eax$/;"	l
f0105884	obj/kern/kernel.asm	/^f0105884:	0f 85 5a 02 00 00    	jne    f0105ae4 <debuginfo_eip+0x2d0>$/;"	l
f010588a	obj/kern/kernel.asm	/^f010588a:	a1 00 00 20 00       	mov    0x200000,%eax$/;"	l
f010588f	obj/kern/kernel.asm	/^f010588f:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f0105892	obj/kern/kernel.asm	/^f0105892:	8b 1d 04 00 20 00    	mov    0x200004,%ebx$/;"	l
f0105898	obj/kern/kernel.asm	/^f0105898:	8b 15 08 00 20 00    	mov    0x200008,%edx$/;"	l
f010589e	obj/kern/kernel.asm	/^f010589e:	89 55 c0             	mov    %edx,-0x40(%ebp)$/;"	l
f01058a1	obj/kern/kernel.asm	/^f01058a1:	a1 0c 00 20 00       	mov    0x20000c,%eax$/;"	l
f01058a6	obj/kern/kernel.asm	/^f01058a6:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
f01058a9	obj/kern/kernel.asm	/^f01058a9:	e8 cb 11 00 00       	call   f0106a79 <cpunum>$/;"	l
f01058ae	obj/kern/kernel.asm	/^f01058ae:	c7 44 24 0c 04 00 00 	movl   $0x4,0xc(%esp)$/;"	l
f01058b5	obj/kern/kernel.asm	/^f01058b5:	00 $/;"	l
f01058b6	obj/kern/kernel.asm	/^f01058b6:	89 da                	mov    %ebx,%edx$/;"	l
f01058b8	obj/kern/kernel.asm	/^f01058b8:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
f01058bb	obj/kern/kernel.asm	/^f01058bb:	29 ca                	sub    %ecx,%edx$/;"	l
f01058bd	obj/kern/kernel.asm	/^f01058bd:	c1 fa 02             	sar    $0x2,%edx$/;"	l
f01058c0	obj/kern/kernel.asm	/^f01058c0:	69 d2 ab aa aa aa    	imul   $0xaaaaaaab,%edx,%edx$/;"	l
f01058c6	obj/kern/kernel.asm	/^f01058c6:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f01058ca	obj/kern/kernel.asm	/^f01058ca:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f01058ce	obj/kern/kernel.asm	/^f01058ce:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01058d1	obj/kern/kernel.asm	/^f01058d1:	8b 80 28 90 2b f0    	mov    -0xfd46fd8(%eax),%eax$/;"	l
f01058d7	obj/kern/kernel.asm	/^f01058d7:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01058da	obj/kern/kernel.asm	/^f01058da:	e8 ce dc ff ff       	call   f01035ad <user_mem_check>$/;"	l
f01058df	obj/kern/kernel.asm	/^f01058df:	85 c0                	test   %eax,%eax$/;"	l
f01058e1	obj/kern/kernel.asm	/^f01058e1:	0f 85 04 02 00 00    	jne    f0105aeb <debuginfo_eip+0x2d7>$/;"	l
f01058e7	obj/kern/kernel.asm	/^f01058e7:	e8 8d 11 00 00       	call   f0106a79 <cpunum>$/;"	l
f01058ec	obj/kern/kernel.asm	/^f01058ec:	c7 44 24 0c 04 00 00 	movl   $0x4,0xc(%esp)$/;"	l
f01058f3	obj/kern/kernel.asm	/^f01058f3:	00 $/;"	l
f01058f4	obj/kern/kernel.asm	/^f01058f4:	8b 55 bc             	mov    -0x44(%ebp),%edx$/;"	l
f01058f7	obj/kern/kernel.asm	/^f01058f7:	8b 4d c0             	mov    -0x40(%ebp),%ecx$/;"	l
f01058fa	obj/kern/kernel.asm	/^f01058fa:	29 ca                	sub    %ecx,%edx$/;"	l
f01058fc	obj/kern/kernel.asm	/^f01058fc:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0105900	obj/kern/kernel.asm	/^f0105900:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0105904	obj/kern/kernel.asm	/^f0105904:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105907	obj/kern/kernel.asm	/^f0105907:	8b 80 28 90 2b f0    	mov    -0xfd46fd8(%eax),%eax$/;"	l
f010590d	obj/kern/kernel.asm	/^f010590d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105910	obj/kern/kernel.asm	/^f0105910:	e8 98 dc ff ff       	call   f01035ad <user_mem_check>$/;"	l
f0105915	obj/kern/kernel.asm	/^f0105915:	85 c0                	test   %eax,%eax$/;"	l
f0105917	obj/kern/kernel.asm	/^f0105917:	74 1f                	je     f0105938 <debuginfo_eip+0x124>$/;"	l
f0105919	obj/kern/kernel.asm	/^f0105919:	e9 d4 01 00 00       	jmp    f0105af2 <debuginfo_eip+0x2de>$/;"	l
f010591e	obj/kern/kernel.asm	/^f010591e:	c7 45 bc 5d 99 11 f0 	movl   $0xf011995d,-0x44(%ebp)$/;"	l
f0105925	obj/kern/kernel.asm	/^f0105925:	c7 45 c0 89 57 11 f0 	movl   $0xf0115789,-0x40(%ebp)$/;"	l
f010592c	obj/kern/kernel.asm	/^f010592c:	bb 88 57 11 f0       	mov    $0xf0115788,%ebx$/;"	l
f0105931	obj/kern/kernel.asm	/^f0105931:	c7 45 c4 00 9b 10 f0 	movl   $0xf0109b00,-0x3c(%ebp)$/;"	l
f0105938	obj/kern/kernel.asm	/^f0105938:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
f010593b	obj/kern/kernel.asm	/^f010593b:	39 45 c0             	cmp    %eax,-0x40(%ebp)$/;"	l
f010593e	obj/kern/kernel.asm	/^f010593e:	0f 83 b5 01 00 00    	jae    f0105af9 <debuginfo_eip+0x2e5>$/;"	l
f0105944	obj/kern/kernel.asm	/^f0105944:	80 78 ff 00          	cmpb   $0x0,-0x1(%eax)$/;"	l
f0105948	obj/kern/kernel.asm	/^f0105948:	0f 85 b2 01 00 00    	jne    f0105b00 <debuginfo_eip+0x2ec>$/;"	l
f010594e	obj/kern/kernel.asm	/^f010594e:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0105955	obj/kern/kernel.asm	/^f0105955:	2b 5d c4             	sub    -0x3c(%ebp),%ebx$/;"	l
f0105958	obj/kern/kernel.asm	/^f0105958:	c1 fb 02             	sar    $0x2,%ebx$/;"	l
f010595b	obj/kern/kernel.asm	/^f010595b:	69 c3 ab aa aa aa    	imul   $0xaaaaaaab,%ebx,%eax$/;"	l
f0105961	obj/kern/kernel.asm	/^f0105961:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0105964	obj/kern/kernel.asm	/^f0105964:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0105967	obj/kern/kernel.asm	/^f0105967:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f010596b	obj/kern/kernel.asm	/^f010596b:	c7 04 24 64 00 00 00 	movl   $0x64,(%esp)$/;"	l
f0105972	obj/kern/kernel.asm	/^f0105972:	8d 4d e0             	lea    -0x20(%ebp),%ecx$/;"	l
f0105975	obj/kern/kernel.asm	/^f0105975:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f0105978	obj/kern/kernel.asm	/^f0105978:	8b 5d c4             	mov    -0x3c(%ebp),%ebx$/;"	l
f010597b	obj/kern/kernel.asm	/^f010597b:	89 d8                	mov    %ebx,%eax$/;"	l
f010597d	obj/kern/kernel.asm	/^f010597d:	e8 90 fd ff ff       	call   f0105712 <stab_binsearch>$/;"	l
f0105982	obj/kern/kernel.asm	/^f0105982:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105985	obj/kern/kernel.asm	/^f0105985:	85 c0                	test   %eax,%eax$/;"	l
f0105987	obj/kern/kernel.asm	/^f0105987:	0f 84 7a 01 00 00    	je     f0105b07 <debuginfo_eip+0x2f3>$/;"	l
f010598d	obj/kern/kernel.asm	/^f010598d:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0105990	obj/kern/kernel.asm	/^f0105990:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105993	obj/kern/kernel.asm	/^f0105993:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0105996	obj/kern/kernel.asm	/^f0105996:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f010599a	obj/kern/kernel.asm	/^f010599a:	c7 04 24 24 00 00 00 	movl   $0x24,(%esp)$/;"	l
f01059a1	obj/kern/kernel.asm	/^f01059a1:	8d 4d d8             	lea    -0x28(%ebp),%ecx$/;"	l
f01059a4	obj/kern/kernel.asm	/^f01059a4:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f01059a7	obj/kern/kernel.asm	/^f01059a7:	89 d8                	mov    %ebx,%eax$/;"	l
f01059a9	obj/kern/kernel.asm	/^f01059a9:	e8 64 fd ff ff       	call   f0105712 <stab_binsearch>$/;"	l
f01059ae	obj/kern/kernel.asm	/^f01059ae:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f01059b1	obj/kern/kernel.asm	/^f01059b1:	8b 5d d8             	mov    -0x28(%ebp),%ebx$/;"	l
f01059b4	obj/kern/kernel.asm	/^f01059b4:	39 d8                	cmp    %ebx,%eax$/;"	l
f01059b6	obj/kern/kernel.asm	/^f01059b6:	7f 32                	jg     f01059ea <debuginfo_eip+0x1d6>$/;"	l
f01059b8	obj/kern/kernel.asm	/^f01059b8:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f01059bb	obj/kern/kernel.asm	/^f01059bb:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
f01059be	obj/kern/kernel.asm	/^f01059be:	8d 14 91             	lea    (%ecx,%edx,4),%edx$/;"	l
f01059c1	obj/kern/kernel.asm	/^f01059c1:	8b 0a                	mov    (%edx),%ecx$/;"	l
f01059c3	obj/kern/kernel.asm	/^f01059c3:	89 4d b8             	mov    %ecx,-0x48(%ebp)$/;"	l
f01059c6	obj/kern/kernel.asm	/^f01059c6:	8b 4d bc             	mov    -0x44(%ebp),%ecx$/;"	l
f01059c9	obj/kern/kernel.asm	/^f01059c9:	2b 4d c0             	sub    -0x40(%ebp),%ecx$/;"	l
f01059cc	obj/kern/kernel.asm	/^f01059cc:	39 4d b8             	cmp    %ecx,-0x48(%ebp)$/;"	l
f01059cf	obj/kern/kernel.asm	/^f01059cf:	73 09                	jae    f01059da <debuginfo_eip+0x1c6>$/;"	l
f01059d1	obj/kern/kernel.asm	/^f01059d1:	8b 4d b8             	mov    -0x48(%ebp),%ecx$/;"	l
f01059d4	obj/kern/kernel.asm	/^f01059d4:	03 4d c0             	add    -0x40(%ebp),%ecx$/;"	l
f01059d7	obj/kern/kernel.asm	/^f01059d7:	89 4f 08             	mov    %ecx,0x8(%edi)$/;"	l
f01059da	obj/kern/kernel.asm	/^f01059da:	8b 52 08             	mov    0x8(%edx),%edx$/;"	l
f01059dd	obj/kern/kernel.asm	/^f01059dd:	89 57 10             	mov    %edx,0x10(%edi)$/;"	l
f01059e0	obj/kern/kernel.asm	/^f01059e0:	29 d6                	sub    %edx,%esi$/;"	l
f01059e2	obj/kern/kernel.asm	/^f01059e2:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01059e5	obj/kern/kernel.asm	/^f01059e5:	89 5d d0             	mov    %ebx,-0x30(%ebp)$/;"	l
f01059e8	obj/kern/kernel.asm	/^f01059e8:	eb 0f                	jmp    f01059f9 <debuginfo_eip+0x1e5>$/;"	l
f01059ea	obj/kern/kernel.asm	/^f01059ea:	89 77 10             	mov    %esi,0x10(%edi)$/;"	l
f01059ed	obj/kern/kernel.asm	/^f01059ed:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01059f0	obj/kern/kernel.asm	/^f01059f0:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01059f3	obj/kern/kernel.asm	/^f01059f3:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01059f6	obj/kern/kernel.asm	/^f01059f6:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f01059f9	obj/kern/kernel.asm	/^f01059f9:	c7 44 24 04 3a 00 00 	movl   $0x3a,0x4(%esp)$/;"	l
f0105a00	obj/kern/kernel.asm	/^f0105a00:	00 $/;"	l
f0105a01	obj/kern/kernel.asm	/^f0105a01:	8b 47 08             	mov    0x8(%edi),%eax$/;"	l
f0105a04	obj/kern/kernel.asm	/^f0105a04:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105a07	obj/kern/kernel.asm	/^f0105a07:	e8 ff 09 00 00       	call   f010640b <strfind>$/;"	l
f0105a0c	obj/kern/kernel.asm	/^f0105a0c:	2b 47 08             	sub    0x8(%edi),%eax$/;"	l
f0105a0f	obj/kern/kernel.asm	/^f0105a0f:	89 47 0c             	mov    %eax,0xc(%edi)$/;"	l
f0105a12	obj/kern/kernel.asm	/^f0105a12:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0105a16	obj/kern/kernel.asm	/^f0105a16:	c7 04 24 44 00 00 00 	movl   $0x44,(%esp)$/;"	l
f0105a1d	obj/kern/kernel.asm	/^f0105a1d:	8d 4d d0             	lea    -0x30(%ebp),%ecx$/;"	l
f0105a20	obj/kern/kernel.asm	/^f0105a20:	8d 55 d4             	lea    -0x2c(%ebp),%edx$/;"	l
f0105a23	obj/kern/kernel.asm	/^f0105a23:	8b 75 c4             	mov    -0x3c(%ebp),%esi$/;"	l
f0105a26	obj/kern/kernel.asm	/^f0105a26:	89 f0                	mov    %esi,%eax$/;"	l
f0105a28	obj/kern/kernel.asm	/^f0105a28:	e8 e5 fc ff ff       	call   f0105712 <stab_binsearch>$/;"	l
f0105a2d	obj/kern/kernel.asm	/^f0105a2d:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0105a30	obj/kern/kernel.asm	/^f0105a30:	39 45 d0             	cmp    %eax,-0x30(%ebp)$/;"	l
f0105a33	obj/kern/kernel.asm	/^f0105a33:	0f 8c d5 00 00 00    	jl     f0105b0e <debuginfo_eip+0x2fa>$/;"	l
f0105a39	obj/kern/kernel.asm	/^f0105a39:	8d 04 40             	lea    (%eax,%eax,2),%eax$/;"	l
f0105a3c	obj/kern/kernel.asm	/^f0105a3c:	0f b7 44 86 06       	movzwl 0x6(%esi,%eax,4),%eax$/;"	l
f0105a41	obj/kern/kernel.asm	/^f0105a41:	89 47 04             	mov    %eax,0x4(%edi)$/;"	l
f0105a44	obj/kern/kernel.asm	/^f0105a44:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105a47	obj/kern/kernel.asm	/^f0105a47:	89 c3                	mov    %eax,%ebx$/;"	l
f0105a49	obj/kern/kernel.asm	/^f0105a49:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0105a4c	obj/kern/kernel.asm	/^f0105a4c:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0105a4f	obj/kern/kernel.asm	/^f0105a4f:	8d 14 96             	lea    (%esi,%edx,4),%edx$/;"	l
f0105a52	obj/kern/kernel.asm	/^f0105a52:	89 7d 0c             	mov    %edi,0xc(%ebp)$/;"	l
f0105a55	obj/kern/kernel.asm	/^f0105a55:	89 df                	mov    %ebx,%edi$/;"	l
f0105a57	obj/kern/kernel.asm	/^f0105a57:	eb 06                	jmp    f0105a5f <debuginfo_eip+0x24b>$/;"	l
f0105a59	obj/kern/kernel.asm	/^f0105a59:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0105a5c	obj/kern/kernel.asm	/^f0105a5c:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0105a5f	obj/kern/kernel.asm	/^f0105a5f:	89 c6                	mov    %eax,%esi$/;"	l
f0105a61	obj/kern/kernel.asm	/^f0105a61:	39 c7                	cmp    %eax,%edi$/;"	l
f0105a63	obj/kern/kernel.asm	/^f0105a63:	7f 3c                	jg     f0105aa1 <debuginfo_eip+0x28d>$/;"	l
f0105a65	obj/kern/kernel.asm	/^f0105a65:	0f b6 4a 04          	movzbl 0x4(%edx),%ecx$/;"	l
f0105a69	obj/kern/kernel.asm	/^f0105a69:	80 f9 84             	cmp    $0x84,%cl$/;"	l
f0105a6c	obj/kern/kernel.asm	/^f0105a6c:	75 08                	jne    f0105a76 <debuginfo_eip+0x262>$/;"	l
f0105a6e	obj/kern/kernel.asm	/^f0105a6e:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0105a71	obj/kern/kernel.asm	/^f0105a71:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105a74	obj/kern/kernel.asm	/^f0105a74:	eb 11                	jmp    f0105a87 <debuginfo_eip+0x273>$/;"	l
f0105a76	obj/kern/kernel.asm	/^f0105a76:	80 f9 64             	cmp    $0x64,%cl$/;"	l
f0105a79	obj/kern/kernel.asm	/^f0105a79:	75 de                	jne    f0105a59 <debuginfo_eip+0x245>$/;"	l
f0105a7b	obj/kern/kernel.asm	/^f0105a7b:	83 7a 08 00          	cmpl   $0x0,0x8(%edx)$/;"	l
f0105a7f	obj/kern/kernel.asm	/^f0105a7f:	74 d8                	je     f0105a59 <debuginfo_eip+0x245>$/;"	l
f0105a81	obj/kern/kernel.asm	/^f0105a81:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0105a84	obj/kern/kernel.asm	/^f0105a84:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105a87	obj/kern/kernel.asm	/^f0105a87:	8d 04 76             	lea    (%esi,%esi,2),%eax$/;"	l
f0105a8a	obj/kern/kernel.asm	/^f0105a8a:	8b 75 c4             	mov    -0x3c(%ebp),%esi$/;"	l
f0105a8d	obj/kern/kernel.asm	/^f0105a8d:	8b 04 86             	mov    (%esi,%eax,4),%eax$/;"	l
f0105a90	obj/kern/kernel.asm	/^f0105a90:	8b 55 bc             	mov    -0x44(%ebp),%edx$/;"	l
f0105a93	obj/kern/kernel.asm	/^f0105a93:	2b 55 c0             	sub    -0x40(%ebp),%edx$/;"	l
f0105a96	obj/kern/kernel.asm	/^f0105a96:	39 d0                	cmp    %edx,%eax$/;"	l
f0105a98	obj/kern/kernel.asm	/^f0105a98:	73 0a                	jae    f0105aa4 <debuginfo_eip+0x290>$/;"	l
f0105a9a	obj/kern/kernel.asm	/^f0105a9a:	03 45 c0             	add    -0x40(%ebp),%eax$/;"	l
f0105a9d	obj/kern/kernel.asm	/^f0105a9d:	89 07                	mov    %eax,(%edi)$/;"	l
f0105a9f	obj/kern/kernel.asm	/^f0105a9f:	eb 03                	jmp    f0105aa4 <debuginfo_eip+0x290>$/;"	l
f0105aa1	obj/kern/kernel.asm	/^f0105aa1:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0105aa4	obj/kern/kernel.asm	/^f0105aa4:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0105aa7	obj/kern/kernel.asm	/^f0105aa7:	8b 5d d8             	mov    -0x28(%ebp),%ebx$/;"	l
f0105aaa	obj/kern/kernel.asm	/^f0105aaa:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105aaf	obj/kern/kernel.asm	/^f0105aaf:	39 da                	cmp    %ebx,%edx$/;"	l
f0105ab1	obj/kern/kernel.asm	/^f0105ab1:	7d 67                	jge    f0105b1a <debuginfo_eip+0x306>$/;"	l
f0105ab3	obj/kern/kernel.asm	/^f0105ab3:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105ab6	obj/kern/kernel.asm	/^f0105ab6:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f0105ab9	obj/kern/kernel.asm	/^f0105ab9:	89 d0                	mov    %edx,%eax$/;"	l
f0105abb	obj/kern/kernel.asm	/^f0105abb:	8d 14 52             	lea    (%edx,%edx,2),%edx$/;"	l
f0105abe	obj/kern/kernel.asm	/^f0105abe:	8b 75 c4             	mov    -0x3c(%ebp),%esi$/;"	l
f0105ac1	obj/kern/kernel.asm	/^f0105ac1:	8d 14 96             	lea    (%esi,%edx,4),%edx$/;"	l
f0105ac4	obj/kern/kernel.asm	/^f0105ac4:	eb 04                	jmp    f0105aca <debuginfo_eip+0x2b6>$/;"	l
f0105ac6	obj/kern/kernel.asm	/^f0105ac6:	83 47 14 01          	addl   $0x1,0x14(%edi)$/;"	l
f0105aca	obj/kern/kernel.asm	/^f0105aca:	39 c3                	cmp    %eax,%ebx$/;"	l
f0105acc	obj/kern/kernel.asm	/^f0105acc:	7e 47                	jle    f0105b15 <debuginfo_eip+0x301>$/;"	l
f0105ace	obj/kern/kernel.asm	/^f0105ace:	0f b6 4a 04          	movzbl 0x4(%edx),%ecx$/;"	l
f0105ad2	obj/kern/kernel.asm	/^f0105ad2:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105ad5	obj/kern/kernel.asm	/^f0105ad5:	83 c2 0c             	add    $0xc,%edx$/;"	l
f0105ad8	obj/kern/kernel.asm	/^f0105ad8:	80 f9 a0             	cmp    $0xa0,%cl$/;"	l
f0105adb	obj/kern/kernel.asm	/^f0105adb:	74 e9                	je     f0105ac6 <debuginfo_eip+0x2b2>$/;"	l
f0105add	obj/kern/kernel.asm	/^f0105add:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105ae2	obj/kern/kernel.asm	/^f0105ae2:	eb 36                	jmp    f0105b1a <debuginfo_eip+0x306>$/;"	l
f0105ae4	obj/kern/kernel.asm	/^f0105ae4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0105ae9	obj/kern/kernel.asm	/^f0105ae9:	eb 2f                	jmp    f0105b1a <debuginfo_eip+0x306>$/;"	l
f0105aeb	obj/kern/kernel.asm	/^f0105aeb:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0105af0	obj/kern/kernel.asm	/^f0105af0:	eb 28                	jmp    f0105b1a <debuginfo_eip+0x306>$/;"	l
f0105af2	obj/kern/kernel.asm	/^f0105af2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0105af7	obj/kern/kernel.asm	/^f0105af7:	eb 21                	jmp    f0105b1a <debuginfo_eip+0x306>$/;"	l
f0105af9	obj/kern/kernel.asm	/^f0105af9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0105afe	obj/kern/kernel.asm	/^f0105afe:	eb 1a                	jmp    f0105b1a <debuginfo_eip+0x306>$/;"	l
f0105b00	obj/kern/kernel.asm	/^f0105b00:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0105b05	obj/kern/kernel.asm	/^f0105b05:	eb 13                	jmp    f0105b1a <debuginfo_eip+0x306>$/;"	l
f0105b07	obj/kern/kernel.asm	/^f0105b07:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0105b0c	obj/kern/kernel.asm	/^f0105b0c:	eb 0c                	jmp    f0105b1a <debuginfo_eip+0x306>$/;"	l
f0105b0e	obj/kern/kernel.asm	/^f0105b0e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0105b13	obj/kern/kernel.asm	/^f0105b13:	eb 05                	jmp    f0105b1a <debuginfo_eip+0x306>$/;"	l
f0105b15	obj/kern/kernel.asm	/^f0105b15:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105b1a	obj/kern/kernel.asm	/^f0105b1a:	83 c4 4c             	add    $0x4c,%esp$/;"	l
f0105b1d	obj/kern/kernel.asm	/^f0105b1d:	5b                   	pop    %ebx$/;"	l
f0105b1e	obj/kern/kernel.asm	/^f0105b1e:	5e                   	pop    %esi$/;"	l
f0105b1f	obj/kern/kernel.asm	/^f0105b1f:	5f                   	pop    %edi$/;"	l
f0105b20	obj/kern/kernel.asm	/^f0105b20:	5d                   	pop    %ebp$/;"	l
f0105b21	obj/kern/kernel.asm	/^f0105b21:	c3                   	ret    $/;"	l
f0105b22	obj/kern/kernel.asm	/^f0105b22:	66 90                	xchg   %ax,%ax$/;"	l
f0105b24	obj/kern/kernel.asm	/^f0105b24:	66 90                	xchg   %ax,%ax$/;"	l
f0105b26	obj/kern/kernel.asm	/^f0105b26:	66 90                	xchg   %ax,%ax$/;"	l
f0105b28	obj/kern/kernel.asm	/^f0105b28:	66 90                	xchg   %ax,%ax$/;"	l
f0105b2a	obj/kern/kernel.asm	/^f0105b2a:	66 90                	xchg   %ax,%ax$/;"	l
f0105b2c	obj/kern/kernel.asm	/^f0105b2c:	66 90                	xchg   %ax,%ax$/;"	l
f0105b2e	obj/kern/kernel.asm	/^f0105b2e:	66 90                	xchg   %ax,%ax$/;"	l
f0105b30	obj/kern/kernel.asm	/^f0105b30 <printnum>:$/;"	l
f0105b30	obj/kern/kernel.asm	/^f0105b30:	55                   	push   %ebp$/;"	l
f0105b31	obj/kern/kernel.asm	/^f0105b31:	89 e5                	mov    %esp,%ebp$/;"	l
f0105b33	obj/kern/kernel.asm	/^f0105b33:	57                   	push   %edi$/;"	l
f0105b34	obj/kern/kernel.asm	/^f0105b34:	56                   	push   %esi$/;"	l
f0105b35	obj/kern/kernel.asm	/^f0105b35:	53                   	push   %ebx$/;"	l
f0105b36	obj/kern/kernel.asm	/^f0105b36:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0105b39	obj/kern/kernel.asm	/^f0105b39:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0105b3c	obj/kern/kernel.asm	/^f0105b3c:	89 d7                	mov    %edx,%edi$/;"	l
f0105b3e	obj/kern/kernel.asm	/^f0105b3e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105b41	obj/kern/kernel.asm	/^f0105b41:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0105b44	obj/kern/kernel.asm	/^f0105b44:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105b47	obj/kern/kernel.asm	/^f0105b47:	89 c3                	mov    %eax,%ebx$/;"	l
f0105b49	obj/kern/kernel.asm	/^f0105b49:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105b4c	obj/kern/kernel.asm	/^f0105b4c:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0105b4f	obj/kern/kernel.asm	/^f0105b4f:	8b 75 14             	mov    0x14(%ebp),%esi$/;"	l
f0105b52	obj/kern/kernel.asm	/^f0105b52:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0105b57	obj/kern/kernel.asm	/^f0105b57:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0105b5a	obj/kern/kernel.asm	/^f0105b5a:	89 4d dc             	mov    %ecx,-0x24(%ebp)$/;"	l
f0105b5d	obj/kern/kernel.asm	/^f0105b5d:	39 d9                	cmp    %ebx,%ecx$/;"	l
f0105b5f	obj/kern/kernel.asm	/^f0105b5f:	72 05                	jb     f0105b66 <printnum+0x36>$/;"	l
f0105b61	obj/kern/kernel.asm	/^f0105b61:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
f0105b64	obj/kern/kernel.asm	/^f0105b64:	77 69                	ja     f0105bcf <printnum+0x9f>$/;"	l
f0105b66	obj/kern/kernel.asm	/^f0105b66:	8b 4d 18             	mov    0x18(%ebp),%ecx$/;"	l
f0105b69	obj/kern/kernel.asm	/^f0105b69:	89 4c 24 10          	mov    %ecx,0x10(%esp)$/;"	l
f0105b6d	obj/kern/kernel.asm	/^f0105b6d:	83 ee 01             	sub    $0x1,%esi$/;"	l
f0105b70	obj/kern/kernel.asm	/^f0105b70:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f0105b74	obj/kern/kernel.asm	/^f0105b74:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0105b78	obj/kern/kernel.asm	/^f0105b78:	8b 44 24 08          	mov    0x8(%esp),%eax$/;"	l
f0105b7c	obj/kern/kernel.asm	/^f0105b7c:	8b 54 24 0c          	mov    0xc(%esp),%edx$/;"	l
f0105b80	obj/kern/kernel.asm	/^f0105b80:	89 c3                	mov    %eax,%ebx$/;"	l
f0105b82	obj/kern/kernel.asm	/^f0105b82:	89 d6                	mov    %edx,%esi$/;"	l
f0105b84	obj/kern/kernel.asm	/^f0105b84:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0105b87	obj/kern/kernel.asm	/^f0105b87:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
f0105b8a	obj/kern/kernel.asm	/^f0105b8a:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0105b8e	obj/kern/kernel.asm	/^f0105b8e:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f0105b92	obj/kern/kernel.asm	/^f0105b92:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105b95	obj/kern/kernel.asm	/^f0105b95:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105b98	obj/kern/kernel.asm	/^f0105b98:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0105b9b	obj/kern/kernel.asm	/^f0105b9b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105b9f	obj/kern/kernel.asm	/^f0105b9f:	e8 ec 1b 00 00       	call   f0107790 <__udivdi3>$/;"	l
f0105ba4	obj/kern/kernel.asm	/^f0105ba4:	89 d9                	mov    %ebx,%ecx$/;"	l
f0105ba6	obj/kern/kernel.asm	/^f0105ba6:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0105baa	obj/kern/kernel.asm	/^f0105baa:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f0105bae	obj/kern/kernel.asm	/^f0105bae:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105bb1	obj/kern/kernel.asm	/^f0105bb1:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0105bb5	obj/kern/kernel.asm	/^f0105bb5:	89 fa                	mov    %edi,%edx$/;"	l
f0105bb7	obj/kern/kernel.asm	/^f0105bb7:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105bba	obj/kern/kernel.asm	/^f0105bba:	e8 71 ff ff ff       	call   f0105b30 <printnum>$/;"	l
f0105bbf	obj/kern/kernel.asm	/^f0105bbf:	eb 1b                	jmp    f0105bdc <printnum+0xac>$/;"	l
f0105bc1	obj/kern/kernel.asm	/^f0105bc1:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105bc5	obj/kern/kernel.asm	/^f0105bc5:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
f0105bc8	obj/kern/kernel.asm	/^f0105bc8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105bcb	obj/kern/kernel.asm	/^f0105bcb:	ff d3                	call   *%ebx$/;"	l
f0105bcd	obj/kern/kernel.asm	/^f0105bcd:	eb 03                	jmp    f0105bd2 <printnum+0xa2>$/;"	l
f0105bcf	obj/kern/kernel.asm	/^f0105bcf:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0105bd2	obj/kern/kernel.asm	/^f0105bd2:	83 ee 01             	sub    $0x1,%esi$/;"	l
f0105bd5	obj/kern/kernel.asm	/^f0105bd5:	85 f6                	test   %esi,%esi$/;"	l
f0105bd7	obj/kern/kernel.asm	/^f0105bd7:	7f e8                	jg     f0105bc1 <printnum+0x91>$/;"	l
f0105bd9	obj/kern/kernel.asm	/^f0105bd9:	89 5d e4             	mov    %ebx,-0x1c(%ebp)$/;"	l
f0105bdc	obj/kern/kernel.asm	/^f0105bdc:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105be0	obj/kern/kernel.asm	/^f0105be0:	8b 7c 24 04          	mov    0x4(%esp),%edi$/;"	l
f0105be4	obj/kern/kernel.asm	/^f0105be4:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0105be7	obj/kern/kernel.asm	/^f0105be7:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0105bea	obj/kern/kernel.asm	/^f0105bea:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0105bee	obj/kern/kernel.asm	/^f0105bee:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0105bf2	obj/kern/kernel.asm	/^f0105bf2:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105bf5	obj/kern/kernel.asm	/^f0105bf5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105bf8	obj/kern/kernel.asm	/^f0105bf8:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0105bfb	obj/kern/kernel.asm	/^f0105bfb:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105bff	obj/kern/kernel.asm	/^f0105bff:	e8 bc 1c 00 00       	call   f01078c0 <__umoddi3>$/;"	l
f0105c04	obj/kern/kernel.asm	/^f0105c04:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105c08	obj/kern/kernel.asm	/^f0105c08:	0f be 80 f2 91 10 f0 	movsbl -0xfef6e0e(%eax),%eax$/;"	l
f0105c0f	obj/kern/kernel.asm	/^f0105c0f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105c12	obj/kern/kernel.asm	/^f0105c12:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105c15	obj/kern/kernel.asm	/^f0105c15:	ff d0                	call   *%eax$/;"	l
f0105c17	obj/kern/kernel.asm	/^f0105c17:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f0105c1a	obj/kern/kernel.asm	/^f0105c1a:	5b                   	pop    %ebx$/;"	l
f0105c1b	obj/kern/kernel.asm	/^f0105c1b:	5e                   	pop    %esi$/;"	l
f0105c1c	obj/kern/kernel.asm	/^f0105c1c:	5f                   	pop    %edi$/;"	l
f0105c1d	obj/kern/kernel.asm	/^f0105c1d:	5d                   	pop    %ebp$/;"	l
f0105c1e	obj/kern/kernel.asm	/^f0105c1e:	c3                   	ret    $/;"	l
f0105c1f	obj/kern/kernel.asm	/^f0105c1f <getuint>:$/;"	l
f0105c1f	obj/kern/kernel.asm	/^f0105c1f:	55                   	push   %ebp$/;"	l
f0105c20	obj/kern/kernel.asm	/^f0105c20:	89 e5                	mov    %esp,%ebp$/;"	l
f0105c22	obj/kern/kernel.asm	/^f0105c22:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f0105c25	obj/kern/kernel.asm	/^f0105c25:	7e 0e                	jle    f0105c35 <getuint+0x16>$/;"	l
f0105c27	obj/kern/kernel.asm	/^f0105c27:	8b 10                	mov    (%eax),%edx$/;"	l
f0105c29	obj/kern/kernel.asm	/^f0105c29:	8d 4a 08             	lea    0x8(%edx),%ecx$/;"	l
f0105c2c	obj/kern/kernel.asm	/^f0105c2c:	89 08                	mov    %ecx,(%eax)$/;"	l
f0105c2e	obj/kern/kernel.asm	/^f0105c2e:	8b 02                	mov    (%edx),%eax$/;"	l
f0105c30	obj/kern/kernel.asm	/^f0105c30:	8b 52 04             	mov    0x4(%edx),%edx$/;"	l
f0105c33	obj/kern/kernel.asm	/^f0105c33:	eb 22                	jmp    f0105c57 <getuint+0x38>$/;"	l
f0105c35	obj/kern/kernel.asm	/^f0105c35:	85 d2                	test   %edx,%edx$/;"	l
f0105c37	obj/kern/kernel.asm	/^f0105c37:	74 10                	je     f0105c49 <getuint+0x2a>$/;"	l
f0105c39	obj/kern/kernel.asm	/^f0105c39:	8b 10                	mov    (%eax),%edx$/;"	l
f0105c3b	obj/kern/kernel.asm	/^f0105c3b:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
f0105c3e	obj/kern/kernel.asm	/^f0105c3e:	89 08                	mov    %ecx,(%eax)$/;"	l
f0105c40	obj/kern/kernel.asm	/^f0105c40:	8b 02                	mov    (%edx),%eax$/;"	l
f0105c42	obj/kern/kernel.asm	/^f0105c42:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105c47	obj/kern/kernel.asm	/^f0105c47:	eb 0e                	jmp    f0105c57 <getuint+0x38>$/;"	l
f0105c49	obj/kern/kernel.asm	/^f0105c49:	8b 10                	mov    (%eax),%edx$/;"	l
f0105c4b	obj/kern/kernel.asm	/^f0105c4b:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
f0105c4e	obj/kern/kernel.asm	/^f0105c4e:	89 08                	mov    %ecx,(%eax)$/;"	l
f0105c50	obj/kern/kernel.asm	/^f0105c50:	8b 02                	mov    (%edx),%eax$/;"	l
f0105c52	obj/kern/kernel.asm	/^f0105c52:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105c57	obj/kern/kernel.asm	/^f0105c57:	5d                   	pop    %ebp$/;"	l
f0105c58	obj/kern/kernel.asm	/^f0105c58:	c3                   	ret    $/;"	l
f0105c59	obj/kern/kernel.asm	/^f0105c59 <sprintputch>:$/;"	l
f0105c59	obj/kern/kernel.asm	/^f0105c59:	55                   	push   %ebp$/;"	l
f0105c5a	obj/kern/kernel.asm	/^f0105c5a:	89 e5                	mov    %esp,%ebp$/;"	l
f0105c5c	obj/kern/kernel.asm	/^f0105c5c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105c5f	obj/kern/kernel.asm	/^f0105c5f:	83 40 08 01          	addl   $0x1,0x8(%eax)$/;"	l
f0105c63	obj/kern/kernel.asm	/^f0105c63:	8b 10                	mov    (%eax),%edx$/;"	l
f0105c65	obj/kern/kernel.asm	/^f0105c65:	3b 50 04             	cmp    0x4(%eax),%edx$/;"	l
f0105c68	obj/kern/kernel.asm	/^f0105c68:	73 0a                	jae    f0105c74 <sprintputch+0x1b>$/;"	l
f0105c6a	obj/kern/kernel.asm	/^f0105c6a:	8d 4a 01             	lea    0x1(%edx),%ecx$/;"	l
f0105c6d	obj/kern/kernel.asm	/^f0105c6d:	89 08                	mov    %ecx,(%eax)$/;"	l
f0105c6f	obj/kern/kernel.asm	/^f0105c6f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105c72	obj/kern/kernel.asm	/^f0105c72:	88 02                	mov    %al,(%edx)$/;"	l
f0105c74	obj/kern/kernel.asm	/^f0105c74:	5d                   	pop    %ebp$/;"	l
f0105c75	obj/kern/kernel.asm	/^f0105c75:	c3                   	ret    $/;"	l
f0105c76	obj/kern/kernel.asm	/^f0105c76 <printfmt>:$/;"	l
f0105c76	obj/kern/kernel.asm	/^f0105c76:	55                   	push   %ebp$/;"	l
f0105c77	obj/kern/kernel.asm	/^f0105c77:	89 e5                	mov    %esp,%ebp$/;"	l
f0105c79	obj/kern/kernel.asm	/^f0105c79:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0105c7c	obj/kern/kernel.asm	/^f0105c7c:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0105c7f	obj/kern/kernel.asm	/^f0105c7f:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0105c83	obj/kern/kernel.asm	/^f0105c83:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0105c86	obj/kern/kernel.asm	/^f0105c86:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0105c8a	obj/kern/kernel.asm	/^f0105c8a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105c8d	obj/kern/kernel.asm	/^f0105c8d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105c91	obj/kern/kernel.asm	/^f0105c91:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105c94	obj/kern/kernel.asm	/^f0105c94:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105c97	obj/kern/kernel.asm	/^f0105c97:	e8 02 00 00 00       	call   f0105c9e <vprintfmt>$/;"	l
f0105c9c	obj/kern/kernel.asm	/^f0105c9c:	c9                   	leave  $/;"	l
f0105c9d	obj/kern/kernel.asm	/^f0105c9d:	c3                   	ret    $/;"	l
f0105c9e	obj/kern/kernel.asm	/^f0105c9e <vprintfmt>:$/;"	l
f0105c9e	obj/kern/kernel.asm	/^f0105c9e:	55                   	push   %ebp$/;"	l
f0105c9f	obj/kern/kernel.asm	/^f0105c9f:	89 e5                	mov    %esp,%ebp$/;"	l
f0105ca1	obj/kern/kernel.asm	/^f0105ca1:	57                   	push   %edi$/;"	l
f0105ca2	obj/kern/kernel.asm	/^f0105ca2:	56                   	push   %esi$/;"	l
f0105ca3	obj/kern/kernel.asm	/^f0105ca3:	53                   	push   %ebx$/;"	l
f0105ca4	obj/kern/kernel.asm	/^f0105ca4:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0105ca7	obj/kern/kernel.asm	/^f0105ca7:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0105caa	obj/kern/kernel.asm	/^f0105caa:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0105cad	obj/kern/kernel.asm	/^f0105cad:	eb 1f                	jmp    f0105cce <vprintfmt+0x30>$/;"	l
f0105caf	obj/kern/kernel.asm	/^f0105caf:	85 c0                	test   %eax,%eax$/;"	l
f0105cb1	obj/kern/kernel.asm	/^f0105cb1:	75 0f                	jne    f0105cc2 <vprintfmt+0x24>$/;"	l
f0105cb3	obj/kern/kernel.asm	/^f0105cb3:	c7 05 a0 8e 2b f0 00 	movl   $0x0,0xf02b8ea0$/;"	l
f0105cba	obj/kern/kernel.asm	/^f0105cba:	00 00 00 $/;"	l
f0105cbd	obj/kern/kernel.asm	/^f0105cbd:	e9 6e 04 00 00       	jmp    f0106130 <vprintfmt+0x492>$/;"	l
f0105cc2	obj/kern/kernel.asm	/^f0105cc2:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105cc6	obj/kern/kernel.asm	/^f0105cc6:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105cc9	obj/kern/kernel.asm	/^f0105cc9:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105ccc	obj/kern/kernel.asm	/^f0105ccc:	89 f3                	mov    %esi,%ebx$/;"	l
f0105cce	obj/kern/kernel.asm	/^f0105cce:	8d 73 01             	lea    0x1(%ebx),%esi$/;"	l
f0105cd1	obj/kern/kernel.asm	/^f0105cd1:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0105cd4	obj/kern/kernel.asm	/^f0105cd4:	83 f8 25             	cmp    $0x25,%eax$/;"	l
f0105cd7	obj/kern/kernel.asm	/^f0105cd7:	75 d6                	jne    f0105caf <vprintfmt+0x11>$/;"	l
f0105cd9	obj/kern/kernel.asm	/^f0105cd9:	c6 45 d8 20          	movb   $0x20,-0x28(%ebp)$/;"	l
f0105cdd	obj/kern/kernel.asm	/^f0105cdd:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f0105ce4	obj/kern/kernel.asm	/^f0105ce4:	c7 45 d4 ff ff ff ff 	movl   $0xffffffff,-0x2c(%ebp)$/;"	l
f0105ceb	obj/kern/kernel.asm	/^f0105ceb:	c7 45 dc ff ff ff ff 	movl   $0xffffffff,-0x24(%ebp)$/;"	l
f0105cf2	obj/kern/kernel.asm	/^f0105cf2:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105cf7	obj/kern/kernel.asm	/^f0105cf7:	eb 1d                	jmp    f0105d16 <vprintfmt+0x78>$/;"	l
f0105cf9	obj/kern/kernel.asm	/^f0105cf9:	89 de                	mov    %ebx,%esi$/;"	l
f0105cfb	obj/kern/kernel.asm	/^f0105cfb:	c6 45 d8 2d          	movb   $0x2d,-0x28(%ebp)$/;"	l
f0105cff	obj/kern/kernel.asm	/^f0105cff:	eb 15                	jmp    f0105d16 <vprintfmt+0x78>$/;"	l
f0105d01	obj/kern/kernel.asm	/^f0105d01:	89 de                	mov    %ebx,%esi$/;"	l
f0105d03	obj/kern/kernel.asm	/^f0105d03:	c6 45 d8 30          	movb   $0x30,-0x28(%ebp)$/;"	l
f0105d07	obj/kern/kernel.asm	/^f0105d07:	eb 0d                	jmp    f0105d16 <vprintfmt+0x78>$/;"	l
f0105d09	obj/kern/kernel.asm	/^f0105d09:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0105d0c	obj/kern/kernel.asm	/^f0105d0c:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0105d0f	obj/kern/kernel.asm	/^f0105d0f:	c7 45 d4 ff ff ff ff 	movl   $0xffffffff,-0x2c(%ebp)$/;"	l
f0105d16	obj/kern/kernel.asm	/^f0105d16:	8d 5e 01             	lea    0x1(%esi),%ebx$/;"	l
f0105d19	obj/kern/kernel.asm	/^f0105d19:	0f b6 06             	movzbl (%esi),%eax$/;"	l
f0105d1c	obj/kern/kernel.asm	/^f0105d1c:	0f b6 c8             	movzbl %al,%ecx$/;"	l
f0105d1f	obj/kern/kernel.asm	/^f0105d1f:	83 e8 23             	sub    $0x23,%eax$/;"	l
f0105d22	obj/kern/kernel.asm	/^f0105d22:	3c 55                	cmp    $0x55,%al$/;"	l
f0105d24	obj/kern/kernel.asm	/^f0105d24:	0f 87 45 03 00 00    	ja     f010606f <vprintfmt+0x3d1>$/;"	l
f0105d2a	obj/kern/kernel.asm	/^f0105d2a:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0105d2d	obj/kern/kernel.asm	/^f0105d2d:	ff 24 85 40 93 10 f0 	jmp    *-0xfef6cc0(,%eax,4)$/;"	l
f0105d34	obj/kern/kernel.asm	/^f0105d34:	c7 05 a0 8e 2b f0 00 	movl   $0x0,0xf02b8ea0$/;"	l
f0105d3b	obj/kern/kernel.asm	/^f0105d3b:	00 00 00 $/;"	l
f0105d3e	obj/kern/kernel.asm	/^f0105d3e:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105d43	obj/kern/kernel.asm	/^f0105d43:	e9 4a 03 00 00       	jmp    f0106092 <vprintfmt+0x3f4>$/;"	l
f0105d48	obj/kern/kernel.asm	/^f0105d48:	89 de                	mov    %ebx,%esi$/;"	l
f0105d4a	obj/kern/kernel.asm	/^f0105d4a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105d4f	obj/kern/kernel.asm	/^f0105d4f:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f0105d52	obj/kern/kernel.asm	/^f0105d52:	8d 44 41 d0          	lea    -0x30(%ecx,%eax,2),%eax$/;"	l
f0105d56	obj/kern/kernel.asm	/^f0105d56:	0f be 0e             	movsbl (%esi),%ecx$/;"	l
f0105d59	obj/kern/kernel.asm	/^f0105d59:	8d 59 d0             	lea    -0x30(%ecx),%ebx$/;"	l
f0105d5c	obj/kern/kernel.asm	/^f0105d5c:	83 fb 09             	cmp    $0x9,%ebx$/;"	l
f0105d5f	obj/kern/kernel.asm	/^f0105d5f:	77 39                	ja     f0105d9a <vprintfmt+0xfc>$/;"	l
f0105d61	obj/kern/kernel.asm	/^f0105d61:	83 c6 01             	add    $0x1,%esi$/;"	l
f0105d64	obj/kern/kernel.asm	/^f0105d64:	eb e9                	jmp    f0105d4f <vprintfmt+0xb1>$/;"	l
f0105d66	obj/kern/kernel.asm	/^f0105d66:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105d69	obj/kern/kernel.asm	/^f0105d69:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
f0105d6c	obj/kern/kernel.asm	/^f0105d6c:	89 4d 14             	mov    %ecx,0x14(%ebp)$/;"	l
f0105d6f	obj/kern/kernel.asm	/^f0105d6f:	8b 00                	mov    (%eax),%eax$/;"	l
f0105d71	obj/kern/kernel.asm	/^f0105d71:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105d74	obj/kern/kernel.asm	/^f0105d74:	89 de                	mov    %ebx,%esi$/;"	l
f0105d76	obj/kern/kernel.asm	/^f0105d76:	eb 25                	jmp    f0105d9d <vprintfmt+0xff>$/;"	l
f0105d78	obj/kern/kernel.asm	/^f0105d78:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
f0105d7b	obj/kern/kernel.asm	/^f0105d7b:	85 c9                	test   %ecx,%ecx$/;"	l
f0105d7d	obj/kern/kernel.asm	/^f0105d7d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105d82	obj/kern/kernel.asm	/^f0105d82:	0f 49 c1             	cmovns %ecx,%eax$/;"	l
f0105d85	obj/kern/kernel.asm	/^f0105d85:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0105d88	obj/kern/kernel.asm	/^f0105d88:	89 de                	mov    %ebx,%esi$/;"	l
f0105d8a	obj/kern/kernel.asm	/^f0105d8a:	eb 8a                	jmp    f0105d16 <vprintfmt+0x78>$/;"	l
f0105d8c	obj/kern/kernel.asm	/^f0105d8c:	89 de                	mov    %ebx,%esi$/;"	l
f0105d8e	obj/kern/kernel.asm	/^f0105d8e:	c7 45 e0 01 00 00 00 	movl   $0x1,-0x20(%ebp)$/;"	l
f0105d95	obj/kern/kernel.asm	/^f0105d95:	e9 7c ff ff ff       	jmp    f0105d16 <vprintfmt+0x78>$/;"	l
f0105d9a	obj/kern/kernel.asm	/^f0105d9a:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105d9d	obj/kern/kernel.asm	/^f0105d9d:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
f0105da1	obj/kern/kernel.asm	/^f0105da1:	0f 89 6f ff ff ff    	jns    f0105d16 <vprintfmt+0x78>$/;"	l
f0105da7	obj/kern/kernel.asm	/^f0105da7:	e9 5d ff ff ff       	jmp    f0105d09 <vprintfmt+0x6b>$/;"	l
f0105dac	obj/kern/kernel.asm	/^f0105dac:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105daf	obj/kern/kernel.asm	/^f0105daf:	89 de                	mov    %ebx,%esi$/;"	l
f0105db1	obj/kern/kernel.asm	/^f0105db1:	e9 60 ff ff ff       	jmp    f0105d16 <vprintfmt+0x78>$/;"	l
f0105db6	obj/kern/kernel.asm	/^f0105db6:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105db9	obj/kern/kernel.asm	/^f0105db9:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105dbc	obj/kern/kernel.asm	/^f0105dbc:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105dbf	obj/kern/kernel.asm	/^f0105dbf:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105dc3	obj/kern/kernel.asm	/^f0105dc3:	8b 00                	mov    (%eax),%eax$/;"	l
f0105dc5	obj/kern/kernel.asm	/^f0105dc5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105dc8	obj/kern/kernel.asm	/^f0105dc8:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105dcb	obj/kern/kernel.asm	/^f0105dcb:	e9 fe fe ff ff       	jmp    f0105cce <vprintfmt+0x30>$/;"	l
f0105dd0	obj/kern/kernel.asm	/^f0105dd0:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105dd3	obj/kern/kernel.asm	/^f0105dd3:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105dd6	obj/kern/kernel.asm	/^f0105dd6:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105dd9	obj/kern/kernel.asm	/^f0105dd9:	8b 00                	mov    (%eax),%eax$/;"	l
f0105ddb	obj/kern/kernel.asm	/^f0105ddb:	99                   	cltd   $/;"	l
f0105ddc	obj/kern/kernel.asm	/^f0105ddc:	31 d0                	xor    %edx,%eax$/;"	l
f0105dde	obj/kern/kernel.asm	/^f0105dde:	29 d0                	sub    %edx,%eax$/;"	l
f0105de0	obj/kern/kernel.asm	/^f0105de0:	83 f8 11             	cmp    $0x11,%eax$/;"	l
f0105de3	obj/kern/kernel.asm	/^f0105de3:	7f 0b                	jg     f0105df0 <vprintfmt+0x152>$/;"	l
f0105de5	obj/kern/kernel.asm	/^f0105de5:	8b 14 85 80 95 10 f0 	mov    -0xfef6a80(,%eax,4),%edx$/;"	l
f0105dec	obj/kern/kernel.asm	/^f0105dec:	85 d2                	test   %edx,%edx$/;"	l
f0105dee	obj/kern/kernel.asm	/^f0105dee:	75 20                	jne    f0105e10 <vprintfmt+0x172>$/;"	l
f0105df0	obj/kern/kernel.asm	/^f0105df0:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0105df4	obj/kern/kernel.asm	/^f0105df4:	c7 44 24 08 0a 92 10 	movl   $0xf010920a,0x8(%esp)$/;"	l
f0105dfb	obj/kern/kernel.asm	/^f0105dfb:	f0 $/;"	l
f0105dfc	obj/kern/kernel.asm	/^f0105dfc:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105e00	obj/kern/kernel.asm	/^f0105e00:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105e03	obj/kern/kernel.asm	/^f0105e03:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105e06	obj/kern/kernel.asm	/^f0105e06:	e8 6b fe ff ff       	call   f0105c76 <printfmt>$/;"	l
f0105e0b	obj/kern/kernel.asm	/^f0105e0b:	e9 be fe ff ff       	jmp    f0105cce <vprintfmt+0x30>$/;"	l
f0105e10	obj/kern/kernel.asm	/^f0105e10:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0105e14	obj/kern/kernel.asm	/^f0105e14:	c7 44 24 08 e5 89 10 	movl   $0xf01089e5,0x8(%esp)$/;"	l
f0105e1b	obj/kern/kernel.asm	/^f0105e1b:	f0 $/;"	l
f0105e1c	obj/kern/kernel.asm	/^f0105e1c:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105e20	obj/kern/kernel.asm	/^f0105e20:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105e23	obj/kern/kernel.asm	/^f0105e23:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105e26	obj/kern/kernel.asm	/^f0105e26:	e8 4b fe ff ff       	call   f0105c76 <printfmt>$/;"	l
f0105e2b	obj/kern/kernel.asm	/^f0105e2b:	e9 9e fe ff ff       	jmp    f0105cce <vprintfmt+0x30>$/;"	l
f0105e30	obj/kern/kernel.asm	/^f0105e30:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f0105e33	obj/kern/kernel.asm	/^f0105e33:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0105e36	obj/kern/kernel.asm	/^f0105e36:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0105e39	obj/kern/kernel.asm	/^f0105e39:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105e3c	obj/kern/kernel.asm	/^f0105e3c:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105e3f	obj/kern/kernel.asm	/^f0105e3f:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105e42	obj/kern/kernel.asm	/^f0105e42:	8b 30                	mov    (%eax),%esi$/;"	l
f0105e44	obj/kern/kernel.asm	/^f0105e44:	85 f6                	test   %esi,%esi$/;"	l
f0105e46	obj/kern/kernel.asm	/^f0105e46:	b8 03 92 10 f0       	mov    $0xf0109203,%eax$/;"	l
f0105e4b	obj/kern/kernel.asm	/^f0105e4b:	0f 44 f0             	cmove  %eax,%esi$/;"	l
f0105e4e	obj/kern/kernel.asm	/^f0105e4e:	80 7d d8 2d          	cmpb   $0x2d,-0x28(%ebp)$/;"	l
f0105e52	obj/kern/kernel.asm	/^f0105e52:	0f 84 97 00 00 00    	je     f0105eef <vprintfmt+0x251>$/;"	l
f0105e58	obj/kern/kernel.asm	/^f0105e58:	83 7d d0 00          	cmpl   $0x0,-0x30(%ebp)$/;"	l
f0105e5c	obj/kern/kernel.asm	/^f0105e5c:	0f 8e 9b 00 00 00    	jle    f0105efd <vprintfmt+0x25f>$/;"	l
f0105e62	obj/kern/kernel.asm	/^f0105e62:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0105e66	obj/kern/kernel.asm	/^f0105e66:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0105e69	obj/kern/kernel.asm	/^f0105e69:	e8 4a 04 00 00       	call   f01062b8 <strnlen>$/;"	l
f0105e6e	obj/kern/kernel.asm	/^f0105e6e:	8b 4d d0             	mov    -0x30(%ebp),%ecx$/;"	l
f0105e71	obj/kern/kernel.asm	/^f0105e71:	29 c1                	sub    %eax,%ecx$/;"	l
f0105e73	obj/kern/kernel.asm	/^f0105e73:	89 4d d0             	mov    %ecx,-0x30(%ebp)$/;"	l
f0105e76	obj/kern/kernel.asm	/^f0105e76:	0f be 45 d8          	movsbl -0x28(%ebp),%eax$/;"	l
f0105e7a	obj/kern/kernel.asm	/^f0105e7a:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0105e7d	obj/kern/kernel.asm	/^f0105e7d:	89 75 d8             	mov    %esi,-0x28(%ebp)$/;"	l
f0105e80	obj/kern/kernel.asm	/^f0105e80:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0105e83	obj/kern/kernel.asm	/^f0105e83:	89 5d 10             	mov    %ebx,0x10(%ebp)$/;"	l
f0105e86	obj/kern/kernel.asm	/^f0105e86:	89 cb                	mov    %ecx,%ebx$/;"	l
f0105e88	obj/kern/kernel.asm	/^f0105e88:	eb 0f                	jmp    f0105e99 <vprintfmt+0x1fb>$/;"	l
f0105e8a	obj/kern/kernel.asm	/^f0105e8a:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105e8e	obj/kern/kernel.asm	/^f0105e8e:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0105e91	obj/kern/kernel.asm	/^f0105e91:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105e94	obj/kern/kernel.asm	/^f0105e94:	ff d6                	call   *%esi$/;"	l
f0105e96	obj/kern/kernel.asm	/^f0105e96:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0105e99	obj/kern/kernel.asm	/^f0105e99:	85 db                	test   %ebx,%ebx$/;"	l
f0105e9b	obj/kern/kernel.asm	/^f0105e9b:	7f ed                	jg     f0105e8a <vprintfmt+0x1ec>$/;"	l
f0105e9d	obj/kern/kernel.asm	/^f0105e9d:	8b 75 d8             	mov    -0x28(%ebp),%esi$/;"	l
f0105ea0	obj/kern/kernel.asm	/^f0105ea0:	8b 4d d0             	mov    -0x30(%ebp),%ecx$/;"	l
f0105ea3	obj/kern/kernel.asm	/^f0105ea3:	85 c9                	test   %ecx,%ecx$/;"	l
f0105ea5	obj/kern/kernel.asm	/^f0105ea5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105eaa	obj/kern/kernel.asm	/^f0105eaa:	0f 49 c1             	cmovns %ecx,%eax$/;"	l
f0105ead	obj/kern/kernel.asm	/^f0105ead:	29 c1                	sub    %eax,%ecx$/;"	l
f0105eaf	obj/kern/kernel.asm	/^f0105eaf:	89 7d 0c             	mov    %edi,0xc(%ebp)$/;"	l
f0105eb2	obj/kern/kernel.asm	/^f0105eb2:	89 cf                	mov    %ecx,%edi$/;"	l
f0105eb4	obj/kern/kernel.asm	/^f0105eb4:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0105eb7	obj/kern/kernel.asm	/^f0105eb7:	eb 50                	jmp    f0105f09 <vprintfmt+0x26b>$/;"	l
f0105eb9	obj/kern/kernel.asm	/^f0105eb9:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
f0105ebd	obj/kern/kernel.asm	/^f0105ebd:	74 1e                	je     f0105edd <vprintfmt+0x23f>$/;"	l
f0105ebf	obj/kern/kernel.asm	/^f0105ebf:	0f be d2             	movsbl %dl,%edx$/;"	l
f0105ec2	obj/kern/kernel.asm	/^f0105ec2:	83 ea 20             	sub    $0x20,%edx$/;"	l
f0105ec5	obj/kern/kernel.asm	/^f0105ec5:	83 fa 5e             	cmp    $0x5e,%edx$/;"	l
f0105ec8	obj/kern/kernel.asm	/^f0105ec8:	76 13                	jbe    f0105edd <vprintfmt+0x23f>$/;"	l
f0105eca	obj/kern/kernel.asm	/^f0105eca:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105ecd	obj/kern/kernel.asm	/^f0105ecd:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105ed1	obj/kern/kernel.asm	/^f0105ed1:	c7 04 24 3f 00 00 00 	movl   $0x3f,(%esp)$/;"	l
f0105ed8	obj/kern/kernel.asm	/^f0105ed8:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105edb	obj/kern/kernel.asm	/^f0105edb:	eb 0d                	jmp    f0105eea <vprintfmt+0x24c>$/;"	l
f0105edd	obj/kern/kernel.asm	/^f0105edd:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0105ee0	obj/kern/kernel.asm	/^f0105ee0:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0105ee4	obj/kern/kernel.asm	/^f0105ee4:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105ee7	obj/kern/kernel.asm	/^f0105ee7:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105eea	obj/kern/kernel.asm	/^f0105eea:	83 ef 01             	sub    $0x1,%edi$/;"	l
f0105eed	obj/kern/kernel.asm	/^f0105eed:	eb 1a                	jmp    f0105f09 <vprintfmt+0x26b>$/;"	l
f0105eef	obj/kern/kernel.asm	/^f0105eef:	89 7d 0c             	mov    %edi,0xc(%ebp)$/;"	l
f0105ef2	obj/kern/kernel.asm	/^f0105ef2:	8b 7d dc             	mov    -0x24(%ebp),%edi$/;"	l
f0105ef5	obj/kern/kernel.asm	/^f0105ef5:	89 5d 10             	mov    %ebx,0x10(%ebp)$/;"	l
f0105ef8	obj/kern/kernel.asm	/^f0105ef8:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0105efb	obj/kern/kernel.asm	/^f0105efb:	eb 0c                	jmp    f0105f09 <vprintfmt+0x26b>$/;"	l
f0105efd	obj/kern/kernel.asm	/^f0105efd:	89 7d 0c             	mov    %edi,0xc(%ebp)$/;"	l
f0105f00	obj/kern/kernel.asm	/^f0105f00:	8b 7d dc             	mov    -0x24(%ebp),%edi$/;"	l
f0105f03	obj/kern/kernel.asm	/^f0105f03:	89 5d 10             	mov    %ebx,0x10(%ebp)$/;"	l
f0105f06	obj/kern/kernel.asm	/^f0105f06:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0105f09	obj/kern/kernel.asm	/^f0105f09:	83 c6 01             	add    $0x1,%esi$/;"	l
f0105f0c	obj/kern/kernel.asm	/^f0105f0c:	0f b6 56 ff          	movzbl -0x1(%esi),%edx$/;"	l
f0105f10	obj/kern/kernel.asm	/^f0105f10:	0f be c2             	movsbl %dl,%eax$/;"	l
f0105f13	obj/kern/kernel.asm	/^f0105f13:	85 c0                	test   %eax,%eax$/;"	l
f0105f15	obj/kern/kernel.asm	/^f0105f15:	74 27                	je     f0105f3e <vprintfmt+0x2a0>$/;"	l
f0105f17	obj/kern/kernel.asm	/^f0105f17:	85 db                	test   %ebx,%ebx$/;"	l
f0105f19	obj/kern/kernel.asm	/^f0105f19:	78 9e                	js     f0105eb9 <vprintfmt+0x21b>$/;"	l
f0105f1b	obj/kern/kernel.asm	/^f0105f1b:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0105f1e	obj/kern/kernel.asm	/^f0105f1e:	79 99                	jns    f0105eb9 <vprintfmt+0x21b>$/;"	l
f0105f20	obj/kern/kernel.asm	/^f0105f20:	89 f8                	mov    %edi,%eax$/;"	l
f0105f22	obj/kern/kernel.asm	/^f0105f22:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0105f25	obj/kern/kernel.asm	/^f0105f25:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0105f28	obj/kern/kernel.asm	/^f0105f28:	89 c3                	mov    %eax,%ebx$/;"	l
f0105f2a	obj/kern/kernel.asm	/^f0105f2a:	eb 1a                	jmp    f0105f46 <vprintfmt+0x2a8>$/;"	l
f0105f2c	obj/kern/kernel.asm	/^f0105f2c:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105f30	obj/kern/kernel.asm	/^f0105f30:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)$/;"	l
f0105f37	obj/kern/kernel.asm	/^f0105f37:	ff d6                	call   *%esi$/;"	l
f0105f39	obj/kern/kernel.asm	/^f0105f39:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0105f3c	obj/kern/kernel.asm	/^f0105f3c:	eb 08                	jmp    f0105f46 <vprintfmt+0x2a8>$/;"	l
f0105f3e	obj/kern/kernel.asm	/^f0105f3e:	89 fb                	mov    %edi,%ebx$/;"	l
f0105f40	obj/kern/kernel.asm	/^f0105f40:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0105f43	obj/kern/kernel.asm	/^f0105f43:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0105f46	obj/kern/kernel.asm	/^f0105f46:	85 db                	test   %ebx,%ebx$/;"	l
f0105f48	obj/kern/kernel.asm	/^f0105f48:	7f e2                	jg     f0105f2c <vprintfmt+0x28e>$/;"	l
f0105f4a	obj/kern/kernel.asm	/^f0105f4a:	89 75 08             	mov    %esi,0x8(%ebp)$/;"	l
f0105f4d	obj/kern/kernel.asm	/^f0105f4d:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0105f50	obj/kern/kernel.asm	/^f0105f50:	e9 79 fd ff ff       	jmp    f0105cce <vprintfmt+0x30>$/;"	l
f0105f55	obj/kern/kernel.asm	/^f0105f55:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f0105f58	obj/kern/kernel.asm	/^f0105f58:	7e 16                	jle    f0105f70 <vprintfmt+0x2d2>$/;"	l
f0105f5a	obj/kern/kernel.asm	/^f0105f5a:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105f5d	obj/kern/kernel.asm	/^f0105f5d:	8d 50 08             	lea    0x8(%eax),%edx$/;"	l
f0105f60	obj/kern/kernel.asm	/^f0105f60:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105f63	obj/kern/kernel.asm	/^f0105f63:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
f0105f66	obj/kern/kernel.asm	/^f0105f66:	8b 00                	mov    (%eax),%eax$/;"	l
f0105f68	obj/kern/kernel.asm	/^f0105f68:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0105f6b	obj/kern/kernel.asm	/^f0105f6b:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0105f6e	obj/kern/kernel.asm	/^f0105f6e:	eb 32                	jmp    f0105fa2 <vprintfmt+0x304>$/;"	l
f0105f70	obj/kern/kernel.asm	/^f0105f70:	85 d2                	test   %edx,%edx$/;"	l
f0105f72	obj/kern/kernel.asm	/^f0105f72:	74 18                	je     f0105f8c <vprintfmt+0x2ee>$/;"	l
f0105f74	obj/kern/kernel.asm	/^f0105f74:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105f77	obj/kern/kernel.asm	/^f0105f77:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105f7a	obj/kern/kernel.asm	/^f0105f7a:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105f7d	obj/kern/kernel.asm	/^f0105f7d:	8b 30                	mov    (%eax),%esi$/;"	l
f0105f7f	obj/kern/kernel.asm	/^f0105f7f:	89 75 e0             	mov    %esi,-0x20(%ebp)$/;"	l
f0105f82	obj/kern/kernel.asm	/^f0105f82:	89 f0                	mov    %esi,%eax$/;"	l
f0105f84	obj/kern/kernel.asm	/^f0105f84:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
f0105f87	obj/kern/kernel.asm	/^f0105f87:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0105f8a	obj/kern/kernel.asm	/^f0105f8a:	eb 16                	jmp    f0105fa2 <vprintfmt+0x304>$/;"	l
f0105f8c	obj/kern/kernel.asm	/^f0105f8c:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105f8f	obj/kern/kernel.asm	/^f0105f8f:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105f92	obj/kern/kernel.asm	/^f0105f92:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105f95	obj/kern/kernel.asm	/^f0105f95:	8b 30                	mov    (%eax),%esi$/;"	l
f0105f97	obj/kern/kernel.asm	/^f0105f97:	89 75 e0             	mov    %esi,-0x20(%ebp)$/;"	l
f0105f9a	obj/kern/kernel.asm	/^f0105f9a:	89 f0                	mov    %esi,%eax$/;"	l
f0105f9c	obj/kern/kernel.asm	/^f0105f9c:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
f0105f9f	obj/kern/kernel.asm	/^f0105f9f:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0105fa2	obj/kern/kernel.asm	/^f0105fa2:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105fa5	obj/kern/kernel.asm	/^f0105fa5:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0105fa8	obj/kern/kernel.asm	/^f0105fa8:	b9 0a 00 00 00       	mov    $0xa,%ecx$/;"	l
f0105fad	obj/kern/kernel.asm	/^f0105fad:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f0105fb1	obj/kern/kernel.asm	/^f0105fb1:	0f 89 80 00 00 00    	jns    f0106037 <vprintfmt+0x399>$/;"	l
f0105fb7	obj/kern/kernel.asm	/^f0105fb7:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105fbb	obj/kern/kernel.asm	/^f0105fbb:	c7 04 24 2d 00 00 00 	movl   $0x2d,(%esp)$/;"	l
f0105fc2	obj/kern/kernel.asm	/^f0105fc2:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105fc5	obj/kern/kernel.asm	/^f0105fc5:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105fc8	obj/kern/kernel.asm	/^f0105fc8:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0105fcb	obj/kern/kernel.asm	/^f0105fcb:	f7 d8                	neg    %eax$/;"	l
f0105fcd	obj/kern/kernel.asm	/^f0105fcd:	83 d2 00             	adc    $0x0,%edx$/;"	l
f0105fd0	obj/kern/kernel.asm	/^f0105fd0:	f7 da                	neg    %edx$/;"	l
f0105fd2	obj/kern/kernel.asm	/^f0105fd2:	b9 0a 00 00 00       	mov    $0xa,%ecx$/;"	l
f0105fd7	obj/kern/kernel.asm	/^f0105fd7:	eb 5e                	jmp    f0106037 <vprintfmt+0x399>$/;"	l
f0105fd9	obj/kern/kernel.asm	/^f0105fd9:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0105fdc	obj/kern/kernel.asm	/^f0105fdc:	e8 3e fc ff ff       	call   f0105c1f <getuint>$/;"	l
f0105fe1	obj/kern/kernel.asm	/^f0105fe1:	b9 0a 00 00 00       	mov    $0xa,%ecx$/;"	l
f0105fe6	obj/kern/kernel.asm	/^f0105fe6:	eb 4f                	jmp    f0106037 <vprintfmt+0x399>$/;"	l
f0105fe8	obj/kern/kernel.asm	/^f0105fe8:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0105feb	obj/kern/kernel.asm	/^f0105feb:	e8 2f fc ff ff       	call   f0105c1f <getuint>$/;"	l
f0105ff0	obj/kern/kernel.asm	/^f0105ff0:	b9 08 00 00 00       	mov    $0x8,%ecx$/;"	l
f0105ff5	obj/kern/kernel.asm	/^f0105ff5:	eb 40                	jmp    f0106037 <vprintfmt+0x399>$/;"	l
f0105ff7	obj/kern/kernel.asm	/^f0105ff7:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105ffb	obj/kern/kernel.asm	/^f0105ffb:	c7 04 24 30 00 00 00 	movl   $0x30,(%esp)$/;"	l
f0106002	obj/kern/kernel.asm	/^f0106002:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0106005	obj/kern/kernel.asm	/^f0106005:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0106009	obj/kern/kernel.asm	/^f0106009:	c7 04 24 78 00 00 00 	movl   $0x78,(%esp)$/;"	l
f0106010	obj/kern/kernel.asm	/^f0106010:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0106013	obj/kern/kernel.asm	/^f0106013:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0106016	obj/kern/kernel.asm	/^f0106016:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0106019	obj/kern/kernel.asm	/^f0106019:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f010601c	obj/kern/kernel.asm	/^f010601c:	8b 00                	mov    (%eax),%eax$/;"	l
f010601e	obj/kern/kernel.asm	/^f010601e:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106023	obj/kern/kernel.asm	/^f0106023:	b9 10 00 00 00       	mov    $0x10,%ecx$/;"	l
f0106028	obj/kern/kernel.asm	/^f0106028:	eb 0d                	jmp    f0106037 <vprintfmt+0x399>$/;"	l
f010602a	obj/kern/kernel.asm	/^f010602a:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f010602d	obj/kern/kernel.asm	/^f010602d:	e8 ed fb ff ff       	call   f0105c1f <getuint>$/;"	l
f0106032	obj/kern/kernel.asm	/^f0106032:	b9 10 00 00 00       	mov    $0x10,%ecx$/;"	l
f0106037	obj/kern/kernel.asm	/^f0106037:	0f be 75 d8          	movsbl -0x28(%ebp),%esi$/;"	l
f010603b	obj/kern/kernel.asm	/^f010603b:	89 74 24 10          	mov    %esi,0x10(%esp)$/;"	l
f010603f	obj/kern/kernel.asm	/^f010603f:	8b 75 dc             	mov    -0x24(%ebp),%esi$/;"	l
f0106042	obj/kern/kernel.asm	/^f0106042:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f0106046	obj/kern/kernel.asm	/^f0106046:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f010604a	obj/kern/kernel.asm	/^f010604a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010604d	obj/kern/kernel.asm	/^f010604d:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0106051	obj/kern/kernel.asm	/^f0106051:	89 fa                	mov    %edi,%edx$/;"	l
f0106053	obj/kern/kernel.asm	/^f0106053:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106056	obj/kern/kernel.asm	/^f0106056:	e8 d5 fa ff ff       	call   f0105b30 <printnum>$/;"	l
f010605b	obj/kern/kernel.asm	/^f010605b:	e9 6e fc ff ff       	jmp    f0105cce <vprintfmt+0x30>$/;"	l
f0106060	obj/kern/kernel.asm	/^f0106060:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0106064	obj/kern/kernel.asm	/^f0106064:	89 0c 24             	mov    %ecx,(%esp)$/;"	l
f0106067	obj/kern/kernel.asm	/^f0106067:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f010606a	obj/kern/kernel.asm	/^f010606a:	e9 5f fc ff ff       	jmp    f0105cce <vprintfmt+0x30>$/;"	l
f010606f	obj/kern/kernel.asm	/^f010606f:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0106073	obj/kern/kernel.asm	/^f0106073:	c7 04 24 25 00 00 00 	movl   $0x25,(%esp)$/;"	l
f010607a	obj/kern/kernel.asm	/^f010607a:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f010607d	obj/kern/kernel.asm	/^f010607d:	89 f3                	mov    %esi,%ebx$/;"	l
f010607f	obj/kern/kernel.asm	/^f010607f:	eb 03                	jmp    f0106084 <vprintfmt+0x3e6>$/;"	l
f0106081	obj/kern/kernel.asm	/^f0106081:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0106084	obj/kern/kernel.asm	/^f0106084:	80 7b ff 25          	cmpb   $0x25,-0x1(%ebx)$/;"	l
f0106088	obj/kern/kernel.asm	/^f0106088:	75 f7                	jne    f0106081 <vprintfmt+0x3e3>$/;"	l
f010608a	obj/kern/kernel.asm	/^f010608a:	e9 3f fc ff ff       	jmp    f0105cce <vprintfmt+0x30>$/;"	l
f010608f	obj/kern/kernel.asm	/^f010608f:	83 c2 01             	add    $0x1,%edx$/;"	l
f0106092	obj/kern/kernel.asm	/^f0106092:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0106095	obj/kern/kernel.asm	/^f0106095:	0f b6 43 ff          	movzbl -0x1(%ebx),%eax$/;"	l
f0106099	obj/kern/kernel.asm	/^f0106099:	0f b6 c8             	movzbl %al,%ecx$/;"	l
f010609c	obj/kern/kernel.asm	/^f010609c:	83 e8 30             	sub    $0x30,%eax$/;"	l
f010609f	obj/kern/kernel.asm	/^f010609f:	3c 36                	cmp    $0x36,%al$/;"	l
f01060a1	obj/kern/kernel.asm	/^f01060a1:	0f 87 27 fc ff ff    	ja     f0105cce <vprintfmt+0x30>$/;"	l
f01060a7	obj/kern/kernel.asm	/^f01060a7:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01060aa	obj/kern/kernel.asm	/^f01060aa:	ff 24 85 98 94 10 f0 	jmp    *-0xfef6b68(,%eax,4)$/;"	l
f01060b1	obj/kern/kernel.asm	/^f01060b1:	85 d2                	test   %edx,%edx$/;"	l
f01060b3	obj/kern/kernel.asm	/^f01060b3:	75 0e                	jne    f01060c3 <vprintfmt+0x425>$/;"	l
f01060b5	obj/kern/kernel.asm	/^f01060b5:	8d 41 a9             	lea    -0x57(%ecx),%eax$/;"	l
f01060b8	obj/kern/kernel.asm	/^f01060b8:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01060bb	obj/kern/kernel.asm	/^f01060bb:	09 05 a0 8e 2b f0    	or     %eax,0xf02b8ea0$/;"	l
f01060c1	obj/kern/kernel.asm	/^f01060c1:	eb cc                	jmp    f010608f <vprintfmt+0x3f1>$/;"	l
f01060c3	obj/kern/kernel.asm	/^f01060c3:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f01060c6	obj/kern/kernel.asm	/^f01060c6:	75 c7                	jne    f010608f <vprintfmt+0x3f1>$/;"	l
f01060c8	obj/kern/kernel.asm	/^f01060c8:	8d 41 a9             	lea    -0x57(%ecx),%eax$/;"	l
f01060cb	obj/kern/kernel.asm	/^f01060cb:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f01060ce	obj/kern/kernel.asm	/^f01060ce:	09 05 a0 8e 2b f0    	or     %eax,0xf02b8ea0$/;"	l
f01060d4	obj/kern/kernel.asm	/^f01060d4:	e9 f5 fb ff ff       	jmp    f0105cce <vprintfmt+0x30>$/;"	l
f01060d9	obj/kern/kernel.asm	/^f01060d9:	85 d2                	test   %edx,%edx$/;"	l
f01060db	obj/kern/kernel.asm	/^f01060db:	75 0e                	jne    f01060eb <vprintfmt+0x44d>$/;"	l
f01060dd	obj/kern/kernel.asm	/^f01060dd:	8d 41 c9             	lea    -0x37(%ecx),%eax$/;"	l
f01060e0	obj/kern/kernel.asm	/^f01060e0:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01060e3	obj/kern/kernel.asm	/^f01060e3:	09 05 a0 8e 2b f0    	or     %eax,0xf02b8ea0$/;"	l
f01060e9	obj/kern/kernel.asm	/^f01060e9:	eb a4                	jmp    f010608f <vprintfmt+0x3f1>$/;"	l
f01060eb	obj/kern/kernel.asm	/^f01060eb:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f01060ee	obj/kern/kernel.asm	/^f01060ee:	75 9f                	jne    f010608f <vprintfmt+0x3f1>$/;"	l
f01060f0	obj/kern/kernel.asm	/^f01060f0:	8d 41 c9             	lea    -0x37(%ecx),%eax$/;"	l
f01060f3	obj/kern/kernel.asm	/^f01060f3:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f01060f6	obj/kern/kernel.asm	/^f01060f6:	09 05 a0 8e 2b f0    	or     %eax,0xf02b8ea0$/;"	l
f01060fc	obj/kern/kernel.asm	/^f01060fc:	e9 cd fb ff ff       	jmp    f0105cce <vprintfmt+0x30>$/;"	l
f0106101	obj/kern/kernel.asm	/^f0106101:	85 d2                	test   %edx,%edx$/;"	l
f0106103	obj/kern/kernel.asm	/^f0106103:	75 11                	jne    f0106116 <vprintfmt+0x478>$/;"	l
f0106105	obj/kern/kernel.asm	/^f0106105:	8d 41 d0             	lea    -0x30(%ecx),%eax$/;"	l
f0106108	obj/kern/kernel.asm	/^f0106108:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010610b	obj/kern/kernel.asm	/^f010610b:	09 05 a0 8e 2b f0    	or     %eax,0xf02b8ea0$/;"	l
f0106111	obj/kern/kernel.asm	/^f0106111:	e9 79 ff ff ff       	jmp    f010608f <vprintfmt+0x3f1>$/;"	l
f0106116	obj/kern/kernel.asm	/^f0106116:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f0106119	obj/kern/kernel.asm	/^f0106119:	0f 85 70 ff ff ff    	jne    f010608f <vprintfmt+0x3f1>$/;"	l
f010611f	obj/kern/kernel.asm	/^f010611f:	8d 41 d0             	lea    -0x30(%ecx),%eax$/;"	l
f0106122	obj/kern/kernel.asm	/^f0106122:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f0106125	obj/kern/kernel.asm	/^f0106125:	09 05 a0 8e 2b f0    	or     %eax,0xf02b8ea0$/;"	l
f010612b	obj/kern/kernel.asm	/^f010612b:	e9 9e fb ff ff       	jmp    f0105cce <vprintfmt+0x30>$/;"	l
f0106130	obj/kern/kernel.asm	/^f0106130:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f0106133	obj/kern/kernel.asm	/^f0106133:	5b                   	pop    %ebx$/;"	l
f0106134	obj/kern/kernel.asm	/^f0106134:	5e                   	pop    %esi$/;"	l
f0106135	obj/kern/kernel.asm	/^f0106135:	5f                   	pop    %edi$/;"	l
f0106136	obj/kern/kernel.asm	/^f0106136:	5d                   	pop    %ebp$/;"	l
f0106137	obj/kern/kernel.asm	/^f0106137:	c3                   	ret    $/;"	l
f0106138	obj/kern/kernel.asm	/^f0106138 <vsnprintf>:$/;"	l
f0106138	obj/kern/kernel.asm	/^f0106138:	55                   	push   %ebp$/;"	l
f0106139	obj/kern/kernel.asm	/^f0106139:	89 e5                	mov    %esp,%ebp$/;"	l
f010613b	obj/kern/kernel.asm	/^f010613b:	83 ec 28             	sub    $0x28,%esp$/;"	l
f010613e	obj/kern/kernel.asm	/^f010613e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106141	obj/kern/kernel.asm	/^f0106141:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0106144	obj/kern/kernel.asm	/^f0106144:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0106147	obj/kern/kernel.asm	/^f0106147:	8d 4c 10 ff          	lea    -0x1(%eax,%edx,1),%ecx$/;"	l
f010614b	obj/kern/kernel.asm	/^f010614b:	89 4d f0             	mov    %ecx,-0x10(%ebp)$/;"	l
f010614e	obj/kern/kernel.asm	/^f010614e:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0106155	obj/kern/kernel.asm	/^f0106155:	85 c0                	test   %eax,%eax$/;"	l
f0106157	obj/kern/kernel.asm	/^f0106157:	74 30                	je     f0106189 <vsnprintf+0x51>$/;"	l
f0106159	obj/kern/kernel.asm	/^f0106159:	85 d2                	test   %edx,%edx$/;"	l
f010615b	obj/kern/kernel.asm	/^f010615b:	7e 2c                	jle    f0106189 <vsnprintf+0x51>$/;"	l
f010615d	obj/kern/kernel.asm	/^f010615d:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0106160	obj/kern/kernel.asm	/^f0106160:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0106164	obj/kern/kernel.asm	/^f0106164:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0106167	obj/kern/kernel.asm	/^f0106167:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010616b	obj/kern/kernel.asm	/^f010616b:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
f010616e	obj/kern/kernel.asm	/^f010616e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106172	obj/kern/kernel.asm	/^f0106172:	c7 04 24 59 5c 10 f0 	movl   $0xf0105c59,(%esp)$/;"	l
f0106179	obj/kern/kernel.asm	/^f0106179:	e8 20 fb ff ff       	call   f0105c9e <vprintfmt>$/;"	l
f010617e	obj/kern/kernel.asm	/^f010617e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0106181	obj/kern/kernel.asm	/^f0106181:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f0106184	obj/kern/kernel.asm	/^f0106184:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0106187	obj/kern/kernel.asm	/^f0106187:	eb 05                	jmp    f010618e <vsnprintf+0x56>$/;"	l
f0106189	obj/kern/kernel.asm	/^f0106189:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f010618e	obj/kern/kernel.asm	/^f010618e:	c9                   	leave  $/;"	l
f010618f	obj/kern/kernel.asm	/^f010618f:	c3                   	ret    $/;"	l
f0106190	obj/kern/kernel.asm	/^f0106190 <snprintf>:$/;"	l
f0106190	obj/kern/kernel.asm	/^f0106190:	55                   	push   %ebp$/;"	l
f0106191	obj/kern/kernel.asm	/^f0106191:	89 e5                	mov    %esp,%ebp$/;"	l
f0106193	obj/kern/kernel.asm	/^f0106193:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0106196	obj/kern/kernel.asm	/^f0106196:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0106199	obj/kern/kernel.asm	/^f0106199:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010619d	obj/kern/kernel.asm	/^f010619d:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01061a0	obj/kern/kernel.asm	/^f01061a0:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01061a4	obj/kern/kernel.asm	/^f01061a4:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01061a7	obj/kern/kernel.asm	/^f01061a7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01061ab	obj/kern/kernel.asm	/^f01061ab:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01061ae	obj/kern/kernel.asm	/^f01061ae:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01061b1	obj/kern/kernel.asm	/^f01061b1:	e8 82 ff ff ff       	call   f0106138 <vsnprintf>$/;"	l
f01061b6	obj/kern/kernel.asm	/^f01061b6:	c9                   	leave  $/;"	l
f01061b7	obj/kern/kernel.asm	/^f01061b7:	c3                   	ret    $/;"	l
f01061b8	obj/kern/kernel.asm	/^f01061b8:	66 90                	xchg   %ax,%ax$/;"	l
f01061ba	obj/kern/kernel.asm	/^f01061ba:	66 90                	xchg   %ax,%ax$/;"	l
f01061bc	obj/kern/kernel.asm	/^f01061bc:	66 90                	xchg   %ax,%ax$/;"	l
f01061be	obj/kern/kernel.asm	/^f01061be:	66 90                	xchg   %ax,%ax$/;"	l
f01061c0	obj/kern/kernel.asm	/^f01061c0 <readline>:$/;"	l
f01061c0	obj/kern/kernel.asm	/^f01061c0:	55                   	push   %ebp$/;"	l
f01061c1	obj/kern/kernel.asm	/^f01061c1:	89 e5                	mov    %esp,%ebp$/;"	l
f01061c3	obj/kern/kernel.asm	/^f01061c3:	57                   	push   %edi$/;"	l
f01061c4	obj/kern/kernel.asm	/^f01061c4:	56                   	push   %esi$/;"	l
f01061c5	obj/kern/kernel.asm	/^f01061c5:	53                   	push   %ebx$/;"	l
f01061c6	obj/kern/kernel.asm	/^f01061c6:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01061c9	obj/kern/kernel.asm	/^f01061c9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01061cc	obj/kern/kernel.asm	/^f01061cc:	85 c0                	test   %eax,%eax$/;"	l
f01061ce	obj/kern/kernel.asm	/^f01061ce:	74 10                	je     f01061e0 <readline+0x20>$/;"	l
f01061d0	obj/kern/kernel.asm	/^f01061d0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01061d4	obj/kern/kernel.asm	/^f01061d4:	c7 04 24 e5 89 10 f0 	movl   $0xf01089e5,(%esp)$/;"	l
f01061db	obj/kern/kernel.asm	/^f01061db:	e8 0c de ff ff       	call   f0103fec <cprintf>$/;"	l
f01061e0	obj/kern/kernel.asm	/^f01061e0:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01061e7	obj/kern/kernel.asm	/^f01061e7:	e8 25 a6 ff ff       	call   f0100811 <iscons>$/;"	l
f01061ec	obj/kern/kernel.asm	/^f01061ec:	89 c7                	mov    %eax,%edi$/;"	l
f01061ee	obj/kern/kernel.asm	/^f01061ee:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f01061f3	obj/kern/kernel.asm	/^f01061f3:	e8 08 a6 ff ff       	call   f0100800 <getchar>$/;"	l
f01061f8	obj/kern/kernel.asm	/^f01061f8:	89 c3                	mov    %eax,%ebx$/;"	l
f01061fa	obj/kern/kernel.asm	/^f01061fa:	85 c0                	test   %eax,%eax$/;"	l
f01061fc	obj/kern/kernel.asm	/^f01061fc:	79 25                	jns    f0106223 <readline+0x63>$/;"	l
f01061fe	obj/kern/kernel.asm	/^f01061fe:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106203	obj/kern/kernel.asm	/^f0106203:	83 fb f8             	cmp    $0xfffffff8,%ebx$/;"	l
f0106206	obj/kern/kernel.asm	/^f0106206:	0f 84 89 00 00 00    	je     f0106295 <readline+0xd5>$/;"	l
f010620c	obj/kern/kernel.asm	/^f010620c:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0106210	obj/kern/kernel.asm	/^f0106210:	c7 04 24 e7 95 10 f0 	movl   $0xf01095e7,(%esp)$/;"	l
f0106217	obj/kern/kernel.asm	/^f0106217:	e8 d0 dd ff ff       	call   f0103fec <cprintf>$/;"	l
f010621c	obj/kern/kernel.asm	/^f010621c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106221	obj/kern/kernel.asm	/^f0106221:	eb 72                	jmp    f0106295 <readline+0xd5>$/;"	l
f0106223	obj/kern/kernel.asm	/^f0106223:	83 f8 7f             	cmp    $0x7f,%eax$/;"	l
f0106226	obj/kern/kernel.asm	/^f0106226:	74 05                	je     f010622d <readline+0x6d>$/;"	l
f0106228	obj/kern/kernel.asm	/^f0106228:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f010622b	obj/kern/kernel.asm	/^f010622b:	75 1a                	jne    f0106247 <readline+0x87>$/;"	l
f010622d	obj/kern/kernel.asm	/^f010622d:	85 f6                	test   %esi,%esi$/;"	l
f010622f	obj/kern/kernel.asm	/^f010622f:	90                   	nop$/;"	l
f0106230	obj/kern/kernel.asm	/^f0106230:	7e 15                	jle    f0106247 <readline+0x87>$/;"	l
f0106232	obj/kern/kernel.asm	/^f0106232:	85 ff                	test   %edi,%edi$/;"	l
f0106234	obj/kern/kernel.asm	/^f0106234:	74 0c                	je     f0106242 <readline+0x82>$/;"	l
f0106236	obj/kern/kernel.asm	/^f0106236:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)$/;"	l
f010623d	obj/kern/kernel.asm	/^f010623d:	e8 ae a5 ff ff       	call   f01007f0 <cputchar>$/;"	l
f0106242	obj/kern/kernel.asm	/^f0106242:	83 ee 01             	sub    $0x1,%esi$/;"	l
f0106245	obj/kern/kernel.asm	/^f0106245:	eb ac                	jmp    f01061f3 <readline+0x33>$/;"	l
f0106247	obj/kern/kernel.asm	/^f0106247:	81 fe fe 03 00 00    	cmp    $0x3fe,%esi$/;"	l
f010624d	obj/kern/kernel.asm	/^f010624d:	7f 1c                	jg     f010626b <readline+0xab>$/;"	l
f010624f	obj/kern/kernel.asm	/^f010624f:	83 fb 1f             	cmp    $0x1f,%ebx$/;"	l
f0106252	obj/kern/kernel.asm	/^f0106252:	7e 17                	jle    f010626b <readline+0xab>$/;"	l
f0106254	obj/kern/kernel.asm	/^f0106254:	85 ff                	test   %edi,%edi$/;"	l
f0106256	obj/kern/kernel.asm	/^f0106256:	74 08                	je     f0106260 <readline+0xa0>$/;"	l
f0106258	obj/kern/kernel.asm	/^f0106258:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010625b	obj/kern/kernel.asm	/^f010625b:	e8 90 a5 ff ff       	call   f01007f0 <cputchar>$/;"	l
f0106260	obj/kern/kernel.asm	/^f0106260:	88 9e 80 8a 2b f0    	mov    %bl,-0xfd47580(%esi)$/;"	l
f0106266	obj/kern/kernel.asm	/^f0106266:	8d 76 01             	lea    0x1(%esi),%esi$/;"	l
f0106269	obj/kern/kernel.asm	/^f0106269:	eb 88                	jmp    f01061f3 <readline+0x33>$/;"	l
f010626b	obj/kern/kernel.asm	/^f010626b:	83 fb 0d             	cmp    $0xd,%ebx$/;"	l
f010626e	obj/kern/kernel.asm	/^f010626e:	74 09                	je     f0106279 <readline+0xb9>$/;"	l
f0106270	obj/kern/kernel.asm	/^f0106270:	83 fb 0a             	cmp    $0xa,%ebx$/;"	l
f0106273	obj/kern/kernel.asm	/^f0106273:	0f 85 7a ff ff ff    	jne    f01061f3 <readline+0x33>$/;"	l
f0106279	obj/kern/kernel.asm	/^f0106279:	85 ff                	test   %edi,%edi$/;"	l
f010627b	obj/kern/kernel.asm	/^f010627b:	74 0c                	je     f0106289 <readline+0xc9>$/;"	l
f010627d	obj/kern/kernel.asm	/^f010627d:	c7 04 24 0a 00 00 00 	movl   $0xa,(%esp)$/;"	l
f0106284	obj/kern/kernel.asm	/^f0106284:	e8 67 a5 ff ff       	call   f01007f0 <cputchar>$/;"	l
f0106289	obj/kern/kernel.asm	/^f0106289:	c6 86 80 8a 2b f0 00 	movb   $0x0,-0xfd47580(%esi)$/;"	l
f0106290	obj/kern/kernel.asm	/^f0106290:	b8 80 8a 2b f0       	mov    $0xf02b8a80,%eax$/;"	l
f0106295	obj/kern/kernel.asm	/^f0106295:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0106298	obj/kern/kernel.asm	/^f0106298:	5b                   	pop    %ebx$/;"	l
f0106299	obj/kern/kernel.asm	/^f0106299:	5e                   	pop    %esi$/;"	l
f010629a	obj/kern/kernel.asm	/^f010629a:	5f                   	pop    %edi$/;"	l
f010629b	obj/kern/kernel.asm	/^f010629b:	5d                   	pop    %ebp$/;"	l
f010629c	obj/kern/kernel.asm	/^f010629c:	c3                   	ret    $/;"	l
f010629d	obj/kern/kernel.asm	/^f010629d:	66 90                	xchg   %ax,%ax$/;"	l
f010629f	obj/kern/kernel.asm	/^f010629f:	90                   	nop$/;"	l
f01062a0	obj/kern/kernel.asm	/^f01062a0 <strlen>:$/;"	l
f01062a0	obj/kern/kernel.asm	/^f01062a0:	55                   	push   %ebp$/;"	l
f01062a1	obj/kern/kernel.asm	/^f01062a1:	89 e5                	mov    %esp,%ebp$/;"	l
f01062a3	obj/kern/kernel.asm	/^f01062a3:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f01062a6	obj/kern/kernel.asm	/^f01062a6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01062ab	obj/kern/kernel.asm	/^f01062ab:	eb 03                	jmp    f01062b0 <strlen+0x10>$/;"	l
f01062ad	obj/kern/kernel.asm	/^f01062ad:	83 c0 01             	add    $0x1,%eax$/;"	l
f01062b0	obj/kern/kernel.asm	/^f01062b0:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)$/;"	l
f01062b4	obj/kern/kernel.asm	/^f01062b4:	75 f7                	jne    f01062ad <strlen+0xd>$/;"	l
f01062b6	obj/kern/kernel.asm	/^f01062b6:	5d                   	pop    %ebp$/;"	l
f01062b7	obj/kern/kernel.asm	/^f01062b7:	c3                   	ret    $/;"	l
f01062b8	obj/kern/kernel.asm	/^f01062b8 <strnlen>:$/;"	l
f01062b8	obj/kern/kernel.asm	/^f01062b8:	55                   	push   %ebp$/;"	l
f01062b9	obj/kern/kernel.asm	/^f01062b9:	89 e5                	mov    %esp,%ebp$/;"	l
f01062bb	obj/kern/kernel.asm	/^f01062bb:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f01062be	obj/kern/kernel.asm	/^f01062be:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01062c1	obj/kern/kernel.asm	/^f01062c1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01062c6	obj/kern/kernel.asm	/^f01062c6:	eb 03                	jmp    f01062cb <strnlen+0x13>$/;"	l
f01062c8	obj/kern/kernel.asm	/^f01062c8:	83 c0 01             	add    $0x1,%eax$/;"	l
f01062cb	obj/kern/kernel.asm	/^f01062cb:	39 d0                	cmp    %edx,%eax$/;"	l
f01062cd	obj/kern/kernel.asm	/^f01062cd:	74 06                	je     f01062d5 <strnlen+0x1d>$/;"	l
f01062cf	obj/kern/kernel.asm	/^f01062cf:	80 3c 01 00          	cmpb   $0x0,(%ecx,%eax,1)$/;"	l
f01062d3	obj/kern/kernel.asm	/^f01062d3:	75 f3                	jne    f01062c8 <strnlen+0x10>$/;"	l
f01062d5	obj/kern/kernel.asm	/^f01062d5:	5d                   	pop    %ebp$/;"	l
f01062d6	obj/kern/kernel.asm	/^f01062d6:	c3                   	ret    $/;"	l
f01062d7	obj/kern/kernel.asm	/^f01062d7 <strcpy>:$/;"	l
f01062d7	obj/kern/kernel.asm	/^f01062d7:	55                   	push   %ebp$/;"	l
f01062d8	obj/kern/kernel.asm	/^f01062d8:	89 e5                	mov    %esp,%ebp$/;"	l
f01062da	obj/kern/kernel.asm	/^f01062da:	53                   	push   %ebx$/;"	l
f01062db	obj/kern/kernel.asm	/^f01062db:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01062de	obj/kern/kernel.asm	/^f01062de:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f01062e1	obj/kern/kernel.asm	/^f01062e1:	89 c2                	mov    %eax,%edx$/;"	l
f01062e3	obj/kern/kernel.asm	/^f01062e3:	83 c2 01             	add    $0x1,%edx$/;"	l
f01062e6	obj/kern/kernel.asm	/^f01062e6:	83 c1 01             	add    $0x1,%ecx$/;"	l
f01062e9	obj/kern/kernel.asm	/^f01062e9:	0f b6 59 ff          	movzbl -0x1(%ecx),%ebx$/;"	l
f01062ed	obj/kern/kernel.asm	/^f01062ed:	88 5a ff             	mov    %bl,-0x1(%edx)$/;"	l
f01062f0	obj/kern/kernel.asm	/^f01062f0:	84 db                	test   %bl,%bl$/;"	l
f01062f2	obj/kern/kernel.asm	/^f01062f2:	75 ef                	jne    f01062e3 <strcpy+0xc>$/;"	l
f01062f4	obj/kern/kernel.asm	/^f01062f4:	5b                   	pop    %ebx$/;"	l
f01062f5	obj/kern/kernel.asm	/^f01062f5:	5d                   	pop    %ebp$/;"	l
f01062f6	obj/kern/kernel.asm	/^f01062f6:	c3                   	ret    $/;"	l
f01062f7	obj/kern/kernel.asm	/^f01062f7 <strcat>:$/;"	l
f01062f7	obj/kern/kernel.asm	/^f01062f7:	55                   	push   %ebp$/;"	l
f01062f8	obj/kern/kernel.asm	/^f01062f8:	89 e5                	mov    %esp,%ebp$/;"	l
f01062fa	obj/kern/kernel.asm	/^f01062fa:	53                   	push   %ebx$/;"	l
f01062fb	obj/kern/kernel.asm	/^f01062fb:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01062fe	obj/kern/kernel.asm	/^f01062fe:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0106301	obj/kern/kernel.asm	/^f0106301:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0106304	obj/kern/kernel.asm	/^f0106304:	e8 97 ff ff ff       	call   f01062a0 <strlen>$/;"	l
f0106309	obj/kern/kernel.asm	/^f0106309:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010630c	obj/kern/kernel.asm	/^f010630c:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0106310	obj/kern/kernel.asm	/^f0106310:	01 d8                	add    %ebx,%eax$/;"	l
f0106312	obj/kern/kernel.asm	/^f0106312:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106315	obj/kern/kernel.asm	/^f0106315:	e8 bd ff ff ff       	call   f01062d7 <strcpy>$/;"	l
f010631a	obj/kern/kernel.asm	/^f010631a:	89 d8                	mov    %ebx,%eax$/;"	l
f010631c	obj/kern/kernel.asm	/^f010631c:	83 c4 08             	add    $0x8,%esp$/;"	l
f010631f	obj/kern/kernel.asm	/^f010631f:	5b                   	pop    %ebx$/;"	l
f0106320	obj/kern/kernel.asm	/^f0106320:	5d                   	pop    %ebp$/;"	l
f0106321	obj/kern/kernel.asm	/^f0106321:	c3                   	ret    $/;"	l
f0106322	obj/kern/kernel.asm	/^f0106322 <strncpy>:$/;"	l
f0106322	obj/kern/kernel.asm	/^f0106322:	55                   	push   %ebp$/;"	l
f0106323	obj/kern/kernel.asm	/^f0106323:	89 e5                	mov    %esp,%ebp$/;"	l
f0106325	obj/kern/kernel.asm	/^f0106325:	56                   	push   %esi$/;"	l
f0106326	obj/kern/kernel.asm	/^f0106326:	53                   	push   %ebx$/;"	l
f0106327	obj/kern/kernel.asm	/^f0106327:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f010632a	obj/kern/kernel.asm	/^f010632a:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f010632d	obj/kern/kernel.asm	/^f010632d:	89 f3                	mov    %esi,%ebx$/;"	l
f010632f	obj/kern/kernel.asm	/^f010632f:	03 5d 10             	add    0x10(%ebp),%ebx$/;"	l
f0106332	obj/kern/kernel.asm	/^f0106332:	89 f2                	mov    %esi,%edx$/;"	l
f0106334	obj/kern/kernel.asm	/^f0106334:	eb 0f                	jmp    f0106345 <strncpy+0x23>$/;"	l
f0106336	obj/kern/kernel.asm	/^f0106336:	83 c2 01             	add    $0x1,%edx$/;"	l
f0106339	obj/kern/kernel.asm	/^f0106339:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f010633c	obj/kern/kernel.asm	/^f010633c:	88 42 ff             	mov    %al,-0x1(%edx)$/;"	l
f010633f	obj/kern/kernel.asm	/^f010633f:	80 39 01             	cmpb   $0x1,(%ecx)$/;"	l
f0106342	obj/kern/kernel.asm	/^f0106342:	83 d9 ff             	sbb    $0xffffffff,%ecx$/;"	l
f0106345	obj/kern/kernel.asm	/^f0106345:	39 da                	cmp    %ebx,%edx$/;"	l
f0106347	obj/kern/kernel.asm	/^f0106347:	75 ed                	jne    f0106336 <strncpy+0x14>$/;"	l
f0106349	obj/kern/kernel.asm	/^f0106349:	89 f0                	mov    %esi,%eax$/;"	l
f010634b	obj/kern/kernel.asm	/^f010634b:	5b                   	pop    %ebx$/;"	l
f010634c	obj/kern/kernel.asm	/^f010634c:	5e                   	pop    %esi$/;"	l
f010634d	obj/kern/kernel.asm	/^f010634d:	5d                   	pop    %ebp$/;"	l
f010634e	obj/kern/kernel.asm	/^f010634e:	c3                   	ret    $/;"	l
f010634f	obj/kern/kernel.asm	/^f010634f <strlcpy>:$/;"	l
f010634f	obj/kern/kernel.asm	/^f010634f:	55                   	push   %ebp$/;"	l
f0106350	obj/kern/kernel.asm	/^f0106350:	89 e5                	mov    %esp,%ebp$/;"	l
f0106352	obj/kern/kernel.asm	/^f0106352:	56                   	push   %esi$/;"	l
f0106353	obj/kern/kernel.asm	/^f0106353:	53                   	push   %ebx$/;"	l
f0106354	obj/kern/kernel.asm	/^f0106354:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0106357	obj/kern/kernel.asm	/^f0106357:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010635a	obj/kern/kernel.asm	/^f010635a:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f010635d	obj/kern/kernel.asm	/^f010635d:	89 f0                	mov    %esi,%eax$/;"	l
f010635f	obj/kern/kernel.asm	/^f010635f:	8d 5c 0e ff          	lea    -0x1(%esi,%ecx,1),%ebx$/;"	l
f0106363	obj/kern/kernel.asm	/^f0106363:	85 c9                	test   %ecx,%ecx$/;"	l
f0106365	obj/kern/kernel.asm	/^f0106365:	75 0b                	jne    f0106372 <strlcpy+0x23>$/;"	l
f0106367	obj/kern/kernel.asm	/^f0106367:	eb 1d                	jmp    f0106386 <strlcpy+0x37>$/;"	l
f0106369	obj/kern/kernel.asm	/^f0106369:	83 c0 01             	add    $0x1,%eax$/;"	l
f010636c	obj/kern/kernel.asm	/^f010636c:	83 c2 01             	add    $0x1,%edx$/;"	l
f010636f	obj/kern/kernel.asm	/^f010636f:	88 48 ff             	mov    %cl,-0x1(%eax)$/;"	l
f0106372	obj/kern/kernel.asm	/^f0106372:	39 d8                	cmp    %ebx,%eax$/;"	l
f0106374	obj/kern/kernel.asm	/^f0106374:	74 0b                	je     f0106381 <strlcpy+0x32>$/;"	l
f0106376	obj/kern/kernel.asm	/^f0106376:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f0106379	obj/kern/kernel.asm	/^f0106379:	84 c9                	test   %cl,%cl$/;"	l
f010637b	obj/kern/kernel.asm	/^f010637b:	75 ec                	jne    f0106369 <strlcpy+0x1a>$/;"	l
f010637d	obj/kern/kernel.asm	/^f010637d:	89 c2                	mov    %eax,%edx$/;"	l
f010637f	obj/kern/kernel.asm	/^f010637f:	eb 02                	jmp    f0106383 <strlcpy+0x34>$/;"	l
f0106381	obj/kern/kernel.asm	/^f0106381:	89 c2                	mov    %eax,%edx$/;"	l
f0106383	obj/kern/kernel.asm	/^f0106383:	c6 02 00             	movb   $0x0,(%edx)$/;"	l
f0106386	obj/kern/kernel.asm	/^f0106386:	29 f0                	sub    %esi,%eax$/;"	l
f0106388	obj/kern/kernel.asm	/^f0106388:	5b                   	pop    %ebx$/;"	l
f0106389	obj/kern/kernel.asm	/^f0106389:	5e                   	pop    %esi$/;"	l
f010638a	obj/kern/kernel.asm	/^f010638a:	5d                   	pop    %ebp$/;"	l
f010638b	obj/kern/kernel.asm	/^f010638b:	c3                   	ret    $/;"	l
f010638c	obj/kern/kernel.asm	/^f010638c <strcmp>:$/;"	l
f010638c	obj/kern/kernel.asm	/^f010638c:	55                   	push   %ebp$/;"	l
f010638d	obj/kern/kernel.asm	/^f010638d:	89 e5                	mov    %esp,%ebp$/;"	l
f010638f	obj/kern/kernel.asm	/^f010638f:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0106392	obj/kern/kernel.asm	/^f0106392:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0106395	obj/kern/kernel.asm	/^f0106395:	eb 06                	jmp    f010639d <strcmp+0x11>$/;"	l
f0106397	obj/kern/kernel.asm	/^f0106397:	83 c1 01             	add    $0x1,%ecx$/;"	l
f010639a	obj/kern/kernel.asm	/^f010639a:	83 c2 01             	add    $0x1,%edx$/;"	l
f010639d	obj/kern/kernel.asm	/^f010639d:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f01063a0	obj/kern/kernel.asm	/^f01063a0:	84 c0                	test   %al,%al$/;"	l
f01063a2	obj/kern/kernel.asm	/^f01063a2:	74 04                	je     f01063a8 <strcmp+0x1c>$/;"	l
f01063a4	obj/kern/kernel.asm	/^f01063a4:	3a 02                	cmp    (%edx),%al$/;"	l
f01063a6	obj/kern/kernel.asm	/^f01063a6:	74 ef                	je     f0106397 <strcmp+0xb>$/;"	l
f01063a8	obj/kern/kernel.asm	/^f01063a8:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01063ab	obj/kern/kernel.asm	/^f01063ab:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f01063ae	obj/kern/kernel.asm	/^f01063ae:	29 d0                	sub    %edx,%eax$/;"	l
f01063b0	obj/kern/kernel.asm	/^f01063b0:	5d                   	pop    %ebp$/;"	l
f01063b1	obj/kern/kernel.asm	/^f01063b1:	c3                   	ret    $/;"	l
f01063b2	obj/kern/kernel.asm	/^f01063b2 <strncmp>:$/;"	l
f01063b2	obj/kern/kernel.asm	/^f01063b2:	55                   	push   %ebp$/;"	l
f01063b3	obj/kern/kernel.asm	/^f01063b3:	89 e5                	mov    %esp,%ebp$/;"	l
f01063b5	obj/kern/kernel.asm	/^f01063b5:	53                   	push   %ebx$/;"	l
f01063b6	obj/kern/kernel.asm	/^f01063b6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01063b9	obj/kern/kernel.asm	/^f01063b9:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01063bc	obj/kern/kernel.asm	/^f01063bc:	89 c3                	mov    %eax,%ebx$/;"	l
f01063be	obj/kern/kernel.asm	/^f01063be:	03 5d 10             	add    0x10(%ebp),%ebx$/;"	l
f01063c1	obj/kern/kernel.asm	/^f01063c1:	eb 06                	jmp    f01063c9 <strncmp+0x17>$/;"	l
f01063c3	obj/kern/kernel.asm	/^f01063c3:	83 c0 01             	add    $0x1,%eax$/;"	l
f01063c6	obj/kern/kernel.asm	/^f01063c6:	83 c2 01             	add    $0x1,%edx$/;"	l
f01063c9	obj/kern/kernel.asm	/^f01063c9:	39 d8                	cmp    %ebx,%eax$/;"	l
f01063cb	obj/kern/kernel.asm	/^f01063cb:	74 15                	je     f01063e2 <strncmp+0x30>$/;"	l
f01063cd	obj/kern/kernel.asm	/^f01063cd:	0f b6 08             	movzbl (%eax),%ecx$/;"	l
f01063d0	obj/kern/kernel.asm	/^f01063d0:	84 c9                	test   %cl,%cl$/;"	l
f01063d2	obj/kern/kernel.asm	/^f01063d2:	74 04                	je     f01063d8 <strncmp+0x26>$/;"	l
f01063d4	obj/kern/kernel.asm	/^f01063d4:	3a 0a                	cmp    (%edx),%cl$/;"	l
f01063d6	obj/kern/kernel.asm	/^f01063d6:	74 eb                	je     f01063c3 <strncmp+0x11>$/;"	l
f01063d8	obj/kern/kernel.asm	/^f01063d8:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f01063db	obj/kern/kernel.asm	/^f01063db:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f01063de	obj/kern/kernel.asm	/^f01063de:	29 d0                	sub    %edx,%eax$/;"	l
f01063e0	obj/kern/kernel.asm	/^f01063e0:	eb 05                	jmp    f01063e7 <strncmp+0x35>$/;"	l
f01063e2	obj/kern/kernel.asm	/^f01063e2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01063e7	obj/kern/kernel.asm	/^f01063e7:	5b                   	pop    %ebx$/;"	l
f01063e8	obj/kern/kernel.asm	/^f01063e8:	5d                   	pop    %ebp$/;"	l
f01063e9	obj/kern/kernel.asm	/^f01063e9:	c3                   	ret    $/;"	l
f01063ea	obj/kern/kernel.asm	/^f01063ea <strchr>:$/;"	l
f01063ea	obj/kern/kernel.asm	/^f01063ea:	55                   	push   %ebp$/;"	l
f01063eb	obj/kern/kernel.asm	/^f01063eb:	89 e5                	mov    %esp,%ebp$/;"	l
f01063ed	obj/kern/kernel.asm	/^f01063ed:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01063f0	obj/kern/kernel.asm	/^f01063f0:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f01063f4	obj/kern/kernel.asm	/^f01063f4:	eb 07                	jmp    f01063fd <strchr+0x13>$/;"	l
f01063f6	obj/kern/kernel.asm	/^f01063f6:	38 ca                	cmp    %cl,%dl$/;"	l
f01063f8	obj/kern/kernel.asm	/^f01063f8:	74 0f                	je     f0106409 <strchr+0x1f>$/;"	l
f01063fa	obj/kern/kernel.asm	/^f01063fa:	83 c0 01             	add    $0x1,%eax$/;"	l
f01063fd	obj/kern/kernel.asm	/^f01063fd:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f0106400	obj/kern/kernel.asm	/^f0106400:	84 d2                	test   %dl,%dl$/;"	l
f0106402	obj/kern/kernel.asm	/^f0106402:	75 f2                	jne    f01063f6 <strchr+0xc>$/;"	l
f0106404	obj/kern/kernel.asm	/^f0106404:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106409	obj/kern/kernel.asm	/^f0106409:	5d                   	pop    %ebp$/;"	l
f010640a	obj/kern/kernel.asm	/^f010640a:	c3                   	ret    $/;"	l
f010640b	obj/kern/kernel.asm	/^f010640b <strfind>:$/;"	l
f010640b	obj/kern/kernel.asm	/^f010640b:	55                   	push   %ebp$/;"	l
f010640c	obj/kern/kernel.asm	/^f010640c:	89 e5                	mov    %esp,%ebp$/;"	l
f010640e	obj/kern/kernel.asm	/^f010640e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106411	obj/kern/kernel.asm	/^f0106411:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f0106415	obj/kern/kernel.asm	/^f0106415:	eb 07                	jmp    f010641e <strfind+0x13>$/;"	l
f0106417	obj/kern/kernel.asm	/^f0106417:	38 ca                	cmp    %cl,%dl$/;"	l
f0106419	obj/kern/kernel.asm	/^f0106419:	74 0a                	je     f0106425 <strfind+0x1a>$/;"	l
f010641b	obj/kern/kernel.asm	/^f010641b:	83 c0 01             	add    $0x1,%eax$/;"	l
f010641e	obj/kern/kernel.asm	/^f010641e:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f0106421	obj/kern/kernel.asm	/^f0106421:	84 d2                	test   %dl,%dl$/;"	l
f0106423	obj/kern/kernel.asm	/^f0106423:	75 f2                	jne    f0106417 <strfind+0xc>$/;"	l
f0106425	obj/kern/kernel.asm	/^f0106425:	5d                   	pop    %ebp$/;"	l
f0106426	obj/kern/kernel.asm	/^f0106426:	c3                   	ret    $/;"	l
f0106427	obj/kern/kernel.asm	/^f0106427 <memset>:$/;"	l
f0106427	obj/kern/kernel.asm	/^f0106427:	55                   	push   %ebp$/;"	l
f0106428	obj/kern/kernel.asm	/^f0106428:	89 e5                	mov    %esp,%ebp$/;"	l
f010642a	obj/kern/kernel.asm	/^f010642a:	57                   	push   %edi$/;"	l
f010642b	obj/kern/kernel.asm	/^f010642b:	56                   	push   %esi$/;"	l
f010642c	obj/kern/kernel.asm	/^f010642c:	53                   	push   %ebx$/;"	l
f010642d	obj/kern/kernel.asm	/^f010642d:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0106430	obj/kern/kernel.asm	/^f0106430:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0106433	obj/kern/kernel.asm	/^f0106433:	85 c9                	test   %ecx,%ecx$/;"	l
f0106435	obj/kern/kernel.asm	/^f0106435:	74 36                	je     f010646d <memset+0x46>$/;"	l
f0106437	obj/kern/kernel.asm	/^f0106437:	f7 c7 03 00 00 00    	test   $0x3,%edi$/;"	l
f010643d	obj/kern/kernel.asm	/^f010643d:	75 28                	jne    f0106467 <memset+0x40>$/;"	l
f010643f	obj/kern/kernel.asm	/^f010643f:	f6 c1 03             	test   $0x3,%cl$/;"	l
f0106442	obj/kern/kernel.asm	/^f0106442:	75 23                	jne    f0106467 <memset+0x40>$/;"	l
f0106444	obj/kern/kernel.asm	/^f0106444:	0f b6 55 0c          	movzbl 0xc(%ebp),%edx$/;"	l
f0106448	obj/kern/kernel.asm	/^f0106448:	89 d3                	mov    %edx,%ebx$/;"	l
f010644a	obj/kern/kernel.asm	/^f010644a:	c1 e3 08             	shl    $0x8,%ebx$/;"	l
f010644d	obj/kern/kernel.asm	/^f010644d:	89 d6                	mov    %edx,%esi$/;"	l
f010644f	obj/kern/kernel.asm	/^f010644f:	c1 e6 18             	shl    $0x18,%esi$/;"	l
f0106452	obj/kern/kernel.asm	/^f0106452:	89 d0                	mov    %edx,%eax$/;"	l
f0106454	obj/kern/kernel.asm	/^f0106454:	c1 e0 10             	shl    $0x10,%eax$/;"	l
f0106457	obj/kern/kernel.asm	/^f0106457:	09 f0                	or     %esi,%eax$/;"	l
f0106459	obj/kern/kernel.asm	/^f0106459:	09 c2                	or     %eax,%edx$/;"	l
f010645b	obj/kern/kernel.asm	/^f010645b:	89 d0                	mov    %edx,%eax$/;"	l
f010645d	obj/kern/kernel.asm	/^f010645d:	09 d8                	or     %ebx,%eax$/;"	l
f010645f	obj/kern/kernel.asm	/^f010645f:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0106462	obj/kern/kernel.asm	/^f0106462:	fc                   	cld    $/;"	l
f0106463	obj/kern/kernel.asm	/^f0106463:	f3 ab                	rep stos %eax,%es:(%edi)$/;"	l
f0106465	obj/kern/kernel.asm	/^f0106465:	eb 06                	jmp    f010646d <memset+0x46>$/;"	l
f0106467	obj/kern/kernel.asm	/^f0106467:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010646a	obj/kern/kernel.asm	/^f010646a:	fc                   	cld    $/;"	l
f010646b	obj/kern/kernel.asm	/^f010646b:	f3 aa                	rep stos %al,%es:(%edi)$/;"	l
f010646d	obj/kern/kernel.asm	/^f010646d:	89 f8                	mov    %edi,%eax$/;"	l
f010646f	obj/kern/kernel.asm	/^f010646f:	5b                   	pop    %ebx$/;"	l
f0106470	obj/kern/kernel.asm	/^f0106470:	5e                   	pop    %esi$/;"	l
f0106471	obj/kern/kernel.asm	/^f0106471:	5f                   	pop    %edi$/;"	l
f0106472	obj/kern/kernel.asm	/^f0106472:	5d                   	pop    %ebp$/;"	l
f0106473	obj/kern/kernel.asm	/^f0106473:	c3                   	ret    $/;"	l
f0106474	obj/kern/kernel.asm	/^f0106474 <memmove>:$/;"	l
f0106474	obj/kern/kernel.asm	/^f0106474:	55                   	push   %ebp$/;"	l
f0106475	obj/kern/kernel.asm	/^f0106475:	89 e5                	mov    %esp,%ebp$/;"	l
f0106477	obj/kern/kernel.asm	/^f0106477:	57                   	push   %edi$/;"	l
f0106478	obj/kern/kernel.asm	/^f0106478:	56                   	push   %esi$/;"	l
f0106479	obj/kern/kernel.asm	/^f0106479:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010647c	obj/kern/kernel.asm	/^f010647c:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f010647f	obj/kern/kernel.asm	/^f010647f:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0106482	obj/kern/kernel.asm	/^f0106482:	39 c6                	cmp    %eax,%esi$/;"	l
f0106484	obj/kern/kernel.asm	/^f0106484:	73 35                	jae    f01064bb <memmove+0x47>$/;"	l
f0106486	obj/kern/kernel.asm	/^f0106486:	8d 14 0e             	lea    (%esi,%ecx,1),%edx$/;"	l
f0106489	obj/kern/kernel.asm	/^f0106489:	39 d0                	cmp    %edx,%eax$/;"	l
f010648b	obj/kern/kernel.asm	/^f010648b:	73 2e                	jae    f01064bb <memmove+0x47>$/;"	l
f010648d	obj/kern/kernel.asm	/^f010648d:	8d 3c 08             	lea    (%eax,%ecx,1),%edi$/;"	l
f0106490	obj/kern/kernel.asm	/^f0106490:	89 d6                	mov    %edx,%esi$/;"	l
f0106492	obj/kern/kernel.asm	/^f0106492:	09 fe                	or     %edi,%esi$/;"	l
f0106494	obj/kern/kernel.asm	/^f0106494:	f7 c6 03 00 00 00    	test   $0x3,%esi$/;"	l
f010649a	obj/kern/kernel.asm	/^f010649a:	75 13                	jne    f01064af <memmove+0x3b>$/;"	l
f010649c	obj/kern/kernel.asm	/^f010649c:	f6 c1 03             	test   $0x3,%cl$/;"	l
f010649f	obj/kern/kernel.asm	/^f010649f:	75 0e                	jne    f01064af <memmove+0x3b>$/;"	l
f01064a1	obj/kern/kernel.asm	/^f01064a1:	83 ef 04             	sub    $0x4,%edi$/;"	l
f01064a4	obj/kern/kernel.asm	/^f01064a4:	8d 72 fc             	lea    -0x4(%edx),%esi$/;"	l
f01064a7	obj/kern/kernel.asm	/^f01064a7:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f01064aa	obj/kern/kernel.asm	/^f01064aa:	fd                   	std    $/;"	l
f01064ab	obj/kern/kernel.asm	/^f01064ab:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f01064ad	obj/kern/kernel.asm	/^f01064ad:	eb 09                	jmp    f01064b8 <memmove+0x44>$/;"	l
f01064af	obj/kern/kernel.asm	/^f01064af:	83 ef 01             	sub    $0x1,%edi$/;"	l
f01064b2	obj/kern/kernel.asm	/^f01064b2:	8d 72 ff             	lea    -0x1(%edx),%esi$/;"	l
f01064b5	obj/kern/kernel.asm	/^f01064b5:	fd                   	std    $/;"	l
f01064b6	obj/kern/kernel.asm	/^f01064b6:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f01064b8	obj/kern/kernel.asm	/^f01064b8:	fc                   	cld    $/;"	l
f01064b9	obj/kern/kernel.asm	/^f01064b9:	eb 1d                	jmp    f01064d8 <memmove+0x64>$/;"	l
f01064bb	obj/kern/kernel.asm	/^f01064bb:	89 f2                	mov    %esi,%edx$/;"	l
f01064bd	obj/kern/kernel.asm	/^f01064bd:	09 c2                	or     %eax,%edx$/;"	l
f01064bf	obj/kern/kernel.asm	/^f01064bf:	f6 c2 03             	test   $0x3,%dl$/;"	l
f01064c2	obj/kern/kernel.asm	/^f01064c2:	75 0f                	jne    f01064d3 <memmove+0x5f>$/;"	l
f01064c4	obj/kern/kernel.asm	/^f01064c4:	f6 c1 03             	test   $0x3,%cl$/;"	l
f01064c7	obj/kern/kernel.asm	/^f01064c7:	75 0a                	jne    f01064d3 <memmove+0x5f>$/;"	l
f01064c9	obj/kern/kernel.asm	/^f01064c9:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f01064cc	obj/kern/kernel.asm	/^f01064cc:	89 c7                	mov    %eax,%edi$/;"	l
f01064ce	obj/kern/kernel.asm	/^f01064ce:	fc                   	cld    $/;"	l
f01064cf	obj/kern/kernel.asm	/^f01064cf:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f01064d1	obj/kern/kernel.asm	/^f01064d1:	eb 05                	jmp    f01064d8 <memmove+0x64>$/;"	l
f01064d3	obj/kern/kernel.asm	/^f01064d3:	89 c7                	mov    %eax,%edi$/;"	l
f01064d5	obj/kern/kernel.asm	/^f01064d5:	fc                   	cld    $/;"	l
f01064d6	obj/kern/kernel.asm	/^f01064d6:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f01064d8	obj/kern/kernel.asm	/^f01064d8:	5e                   	pop    %esi$/;"	l
f01064d9	obj/kern/kernel.asm	/^f01064d9:	5f                   	pop    %edi$/;"	l
f01064da	obj/kern/kernel.asm	/^f01064da:	5d                   	pop    %ebp$/;"	l
f01064db	obj/kern/kernel.asm	/^f01064db:	c3                   	ret    $/;"	l
f01064dc	obj/kern/kernel.asm	/^f01064dc <memcpy>:$/;"	l
f01064dc	obj/kern/kernel.asm	/^f01064dc:	55                   	push   %ebp$/;"	l
f01064dd	obj/kern/kernel.asm	/^f01064dd:	89 e5                	mov    %esp,%ebp$/;"	l
f01064df	obj/kern/kernel.asm	/^f01064df:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01064e2	obj/kern/kernel.asm	/^f01064e2:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01064e5	obj/kern/kernel.asm	/^f01064e5:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01064e9	obj/kern/kernel.asm	/^f01064e9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01064ec	obj/kern/kernel.asm	/^f01064ec:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01064f0	obj/kern/kernel.asm	/^f01064f0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01064f3	obj/kern/kernel.asm	/^f01064f3:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01064f6	obj/kern/kernel.asm	/^f01064f6:	e8 79 ff ff ff       	call   f0106474 <memmove>$/;"	l
f01064fb	obj/kern/kernel.asm	/^f01064fb:	c9                   	leave  $/;"	l
f01064fc	obj/kern/kernel.asm	/^f01064fc:	c3                   	ret    $/;"	l
f01064fd	obj/kern/kernel.asm	/^f01064fd <memcmp>:$/;"	l
f01064fd	obj/kern/kernel.asm	/^f01064fd:	55                   	push   %ebp$/;"	l
f01064fe	obj/kern/kernel.asm	/^f01064fe:	89 e5                	mov    %esp,%ebp$/;"	l
f0106500	obj/kern/kernel.asm	/^f0106500:	56                   	push   %esi$/;"	l
f0106501	obj/kern/kernel.asm	/^f0106501:	53                   	push   %ebx$/;"	l
f0106502	obj/kern/kernel.asm	/^f0106502:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0106505	obj/kern/kernel.asm	/^f0106505:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0106508	obj/kern/kernel.asm	/^f0106508:	89 d6                	mov    %edx,%esi$/;"	l
f010650a	obj/kern/kernel.asm	/^f010650a:	03 75 10             	add    0x10(%ebp),%esi$/;"	l
f010650d	obj/kern/kernel.asm	/^f010650d:	eb 1a                	jmp    f0106529 <memcmp+0x2c>$/;"	l
f010650f	obj/kern/kernel.asm	/^f010650f:	0f b6 02             	movzbl (%edx),%eax$/;"	l
f0106512	obj/kern/kernel.asm	/^f0106512:	0f b6 19             	movzbl (%ecx),%ebx$/;"	l
f0106515	obj/kern/kernel.asm	/^f0106515:	38 d8                	cmp    %bl,%al$/;"	l
f0106517	obj/kern/kernel.asm	/^f0106517:	74 0a                	je     f0106523 <memcmp+0x26>$/;"	l
f0106519	obj/kern/kernel.asm	/^f0106519:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010651c	obj/kern/kernel.asm	/^f010651c:	0f b6 db             	movzbl %bl,%ebx$/;"	l
f010651f	obj/kern/kernel.asm	/^f010651f:	29 d8                	sub    %ebx,%eax$/;"	l
f0106521	obj/kern/kernel.asm	/^f0106521:	eb 0f                	jmp    f0106532 <memcmp+0x35>$/;"	l
f0106523	obj/kern/kernel.asm	/^f0106523:	83 c2 01             	add    $0x1,%edx$/;"	l
f0106526	obj/kern/kernel.asm	/^f0106526:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0106529	obj/kern/kernel.asm	/^f0106529:	39 f2                	cmp    %esi,%edx$/;"	l
f010652b	obj/kern/kernel.asm	/^f010652b:	75 e2                	jne    f010650f <memcmp+0x12>$/;"	l
f010652d	obj/kern/kernel.asm	/^f010652d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106532	obj/kern/kernel.asm	/^f0106532:	5b                   	pop    %ebx$/;"	l
f0106533	obj/kern/kernel.asm	/^f0106533:	5e                   	pop    %esi$/;"	l
f0106534	obj/kern/kernel.asm	/^f0106534:	5d                   	pop    %ebp$/;"	l
f0106535	obj/kern/kernel.asm	/^f0106535:	c3                   	ret    $/;"	l
f0106536	obj/kern/kernel.asm	/^f0106536 <memfind>:$/;"	l
f0106536	obj/kern/kernel.asm	/^f0106536:	55                   	push   %ebp$/;"	l
f0106537	obj/kern/kernel.asm	/^f0106537:	89 e5                	mov    %esp,%ebp$/;"	l
f0106539	obj/kern/kernel.asm	/^f0106539:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010653c	obj/kern/kernel.asm	/^f010653c:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f010653f	obj/kern/kernel.asm	/^f010653f:	89 c2                	mov    %eax,%edx$/;"	l
f0106541	obj/kern/kernel.asm	/^f0106541:	03 55 10             	add    0x10(%ebp),%edx$/;"	l
f0106544	obj/kern/kernel.asm	/^f0106544:	eb 07                	jmp    f010654d <memfind+0x17>$/;"	l
f0106546	obj/kern/kernel.asm	/^f0106546:	38 08                	cmp    %cl,(%eax)$/;"	l
f0106548	obj/kern/kernel.asm	/^f0106548:	74 07                	je     f0106551 <memfind+0x1b>$/;"	l
f010654a	obj/kern/kernel.asm	/^f010654a:	83 c0 01             	add    $0x1,%eax$/;"	l
f010654d	obj/kern/kernel.asm	/^f010654d:	39 d0                	cmp    %edx,%eax$/;"	l
f010654f	obj/kern/kernel.asm	/^f010654f:	72 f5                	jb     f0106546 <memfind+0x10>$/;"	l
f0106551	obj/kern/kernel.asm	/^f0106551:	5d                   	pop    %ebp$/;"	l
f0106552	obj/kern/kernel.asm	/^f0106552:	c3                   	ret    $/;"	l
f0106553	obj/kern/kernel.asm	/^f0106553 <strtol>:$/;"	l
f0106553	obj/kern/kernel.asm	/^f0106553:	55                   	push   %ebp$/;"	l
f0106554	obj/kern/kernel.asm	/^f0106554:	89 e5                	mov    %esp,%ebp$/;"	l
f0106556	obj/kern/kernel.asm	/^f0106556:	57                   	push   %edi$/;"	l
f0106557	obj/kern/kernel.asm	/^f0106557:	56                   	push   %esi$/;"	l
f0106558	obj/kern/kernel.asm	/^f0106558:	53                   	push   %ebx$/;"	l
f0106559	obj/kern/kernel.asm	/^f0106559:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f010655c	obj/kern/kernel.asm	/^f010655c:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f010655f	obj/kern/kernel.asm	/^f010655f:	eb 03                	jmp    f0106564 <strtol+0x11>$/;"	l
f0106561	obj/kern/kernel.asm	/^f0106561:	83 c2 01             	add    $0x1,%edx$/;"	l
f0106564	obj/kern/kernel.asm	/^f0106564:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f0106567	obj/kern/kernel.asm	/^f0106567:	80 f9 09             	cmp    $0x9,%cl$/;"	l
f010656a	obj/kern/kernel.asm	/^f010656a:	74 f5                	je     f0106561 <strtol+0xe>$/;"	l
f010656c	obj/kern/kernel.asm	/^f010656c:	80 f9 20             	cmp    $0x20,%cl$/;"	l
f010656f	obj/kern/kernel.asm	/^f010656f:	74 f0                	je     f0106561 <strtol+0xe>$/;"	l
f0106571	obj/kern/kernel.asm	/^f0106571:	80 f9 2b             	cmp    $0x2b,%cl$/;"	l
f0106574	obj/kern/kernel.asm	/^f0106574:	75 0a                	jne    f0106580 <strtol+0x2d>$/;"	l
f0106576	obj/kern/kernel.asm	/^f0106576:	83 c2 01             	add    $0x1,%edx$/;"	l
f0106579	obj/kern/kernel.asm	/^f0106579:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f010657e	obj/kern/kernel.asm	/^f010657e:	eb 11                	jmp    f0106591 <strtol+0x3e>$/;"	l
f0106580	obj/kern/kernel.asm	/^f0106580:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0106585	obj/kern/kernel.asm	/^f0106585:	80 f9 2d             	cmp    $0x2d,%cl$/;"	l
f0106588	obj/kern/kernel.asm	/^f0106588:	75 07                	jne    f0106591 <strtol+0x3e>$/;"	l
f010658a	obj/kern/kernel.asm	/^f010658a:	8d 52 01             	lea    0x1(%edx),%edx$/;"	l
f010658d	obj/kern/kernel.asm	/^f010658d:	66 bf 01 00          	mov    $0x1,%di$/;"	l
f0106591	obj/kern/kernel.asm	/^f0106591:	a9 ef ff ff ff       	test   $0xffffffef,%eax$/;"	l
f0106596	obj/kern/kernel.asm	/^f0106596:	75 15                	jne    f01065ad <strtol+0x5a>$/;"	l
f0106598	obj/kern/kernel.asm	/^f0106598:	80 3a 30             	cmpb   $0x30,(%edx)$/;"	l
f010659b	obj/kern/kernel.asm	/^f010659b:	75 10                	jne    f01065ad <strtol+0x5a>$/;"	l
f010659d	obj/kern/kernel.asm	/^f010659d:	80 7a 01 78          	cmpb   $0x78,0x1(%edx)$/;"	l
f01065a1	obj/kern/kernel.asm	/^f01065a1:	75 0a                	jne    f01065ad <strtol+0x5a>$/;"	l
f01065a3	obj/kern/kernel.asm	/^f01065a3:	83 c2 02             	add    $0x2,%edx$/;"	l
f01065a6	obj/kern/kernel.asm	/^f01065a6:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f01065ab	obj/kern/kernel.asm	/^f01065ab:	eb 10                	jmp    f01065bd <strtol+0x6a>$/;"	l
f01065ad	obj/kern/kernel.asm	/^f01065ad:	85 c0                	test   %eax,%eax$/;"	l
f01065af	obj/kern/kernel.asm	/^f01065af:	75 0c                	jne    f01065bd <strtol+0x6a>$/;"	l
f01065b1	obj/kern/kernel.asm	/^f01065b1:	b0 0a                	mov    $0xa,%al$/;"	l
f01065b3	obj/kern/kernel.asm	/^f01065b3:	80 3a 30             	cmpb   $0x30,(%edx)$/;"	l
f01065b6	obj/kern/kernel.asm	/^f01065b6:	75 05                	jne    f01065bd <strtol+0x6a>$/;"	l
f01065b8	obj/kern/kernel.asm	/^f01065b8:	83 c2 01             	add    $0x1,%edx$/;"	l
f01065bb	obj/kern/kernel.asm	/^f01065bb:	b0 08                	mov    $0x8,%al$/;"	l
f01065bd	obj/kern/kernel.asm	/^f01065bd:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01065c2	obj/kern/kernel.asm	/^f01065c2:	89 45 10             	mov    %eax,0x10(%ebp)$/;"	l
f01065c5	obj/kern/kernel.asm	/^f01065c5:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f01065c8	obj/kern/kernel.asm	/^f01065c8:	8d 71 d0             	lea    -0x30(%ecx),%esi$/;"	l
f01065cb	obj/kern/kernel.asm	/^f01065cb:	89 f0                	mov    %esi,%eax$/;"	l
f01065cd	obj/kern/kernel.asm	/^f01065cd:	3c 09                	cmp    $0x9,%al$/;"	l
f01065cf	obj/kern/kernel.asm	/^f01065cf:	77 08                	ja     f01065d9 <strtol+0x86>$/;"	l
f01065d1	obj/kern/kernel.asm	/^f01065d1:	0f be c9             	movsbl %cl,%ecx$/;"	l
f01065d4	obj/kern/kernel.asm	/^f01065d4:	83 e9 30             	sub    $0x30,%ecx$/;"	l
f01065d7	obj/kern/kernel.asm	/^f01065d7:	eb 20                	jmp    f01065f9 <strtol+0xa6>$/;"	l
f01065d9	obj/kern/kernel.asm	/^f01065d9:	8d 71 9f             	lea    -0x61(%ecx),%esi$/;"	l
f01065dc	obj/kern/kernel.asm	/^f01065dc:	89 f0                	mov    %esi,%eax$/;"	l
f01065de	obj/kern/kernel.asm	/^f01065de:	3c 19                	cmp    $0x19,%al$/;"	l
f01065e0	obj/kern/kernel.asm	/^f01065e0:	77 08                	ja     f01065ea <strtol+0x97>$/;"	l
f01065e2	obj/kern/kernel.asm	/^f01065e2:	0f be c9             	movsbl %cl,%ecx$/;"	l
f01065e5	obj/kern/kernel.asm	/^f01065e5:	83 e9 57             	sub    $0x57,%ecx$/;"	l
f01065e8	obj/kern/kernel.asm	/^f01065e8:	eb 0f                	jmp    f01065f9 <strtol+0xa6>$/;"	l
f01065ea	obj/kern/kernel.asm	/^f01065ea:	8d 71 bf             	lea    -0x41(%ecx),%esi$/;"	l
f01065ed	obj/kern/kernel.asm	/^f01065ed:	89 f0                	mov    %esi,%eax$/;"	l
f01065ef	obj/kern/kernel.asm	/^f01065ef:	3c 19                	cmp    $0x19,%al$/;"	l
f01065f1	obj/kern/kernel.asm	/^f01065f1:	77 16                	ja     f0106609 <strtol+0xb6>$/;"	l
f01065f3	obj/kern/kernel.asm	/^f01065f3:	0f be c9             	movsbl %cl,%ecx$/;"	l
f01065f6	obj/kern/kernel.asm	/^f01065f6:	83 e9 37             	sub    $0x37,%ecx$/;"	l
f01065f9	obj/kern/kernel.asm	/^f01065f9:	3b 4d 10             	cmp    0x10(%ebp),%ecx$/;"	l
f01065fc	obj/kern/kernel.asm	/^f01065fc:	7d 0f                	jge    f010660d <strtol+0xba>$/;"	l
f01065fe	obj/kern/kernel.asm	/^f01065fe:	83 c2 01             	add    $0x1,%edx$/;"	l
f0106601	obj/kern/kernel.asm	/^f0106601:	0f af 5d 10          	imul   0x10(%ebp),%ebx$/;"	l
f0106605	obj/kern/kernel.asm	/^f0106605:	01 cb                	add    %ecx,%ebx$/;"	l
f0106607	obj/kern/kernel.asm	/^f0106607:	eb bc                	jmp    f01065c5 <strtol+0x72>$/;"	l
f0106609	obj/kern/kernel.asm	/^f0106609:	89 d8                	mov    %ebx,%eax$/;"	l
f010660b	obj/kern/kernel.asm	/^f010660b:	eb 02                	jmp    f010660f <strtol+0xbc>$/;"	l
f010660d	obj/kern/kernel.asm	/^f010660d:	89 d8                	mov    %ebx,%eax$/;"	l
f010660f	obj/kern/kernel.asm	/^f010660f:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
f0106613	obj/kern/kernel.asm	/^f0106613:	74 05                	je     f010661a <strtol+0xc7>$/;"	l
f0106615	obj/kern/kernel.asm	/^f0106615:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0106618	obj/kern/kernel.asm	/^f0106618:	89 16                	mov    %edx,(%esi)$/;"	l
f010661a	obj/kern/kernel.asm	/^f010661a:	f7 d8                	neg    %eax$/;"	l
f010661c	obj/kern/kernel.asm	/^f010661c:	85 ff                	test   %edi,%edi$/;"	l
f010661e	obj/kern/kernel.asm	/^f010661e:	0f 44 c3             	cmove  %ebx,%eax$/;"	l
f0106621	obj/kern/kernel.asm	/^f0106621:	5b                   	pop    %ebx$/;"	l
f0106622	obj/kern/kernel.asm	/^f0106622:	5e                   	pop    %esi$/;"	l
f0106623	obj/kern/kernel.asm	/^f0106623:	5f                   	pop    %edi$/;"	l
f0106624	obj/kern/kernel.asm	/^f0106624:	5d                   	pop    %ebp$/;"	l
f0106625	obj/kern/kernel.asm	/^f0106625:	c3                   	ret    $/;"	l
f0106626	obj/kern/kernel.asm	/^f0106626:	66 90                	xchg   %ax,%ax$/;"	l
f0106628	obj/kern/kernel.asm	/^f0106628 <mpentry_start>:$/;"	l
f0106628	obj/kern/kernel.asm	/^f0106628:	fa                   	cli    $/;"	l
f0106629	obj/kern/kernel.asm	/^f0106629:	31 c0                	xor    %eax,%eax$/;"	l
f010662b	obj/kern/kernel.asm	/^f010662b:	8e d8                	mov    %eax,%ds$/;"	l
f010662d	obj/kern/kernel.asm	/^f010662d:	8e c0                	mov    %eax,%es$/;"	l
f010662f	obj/kern/kernel.asm	/^f010662f:	8e d0                	mov    %eax,%ss$/;"	l
f0106631	obj/kern/kernel.asm	/^f0106631:	0f 01 16             	lgdtl  (%esi)$/;"	l
f0106634	obj/kern/kernel.asm	/^f0106634:	74 70                	je     f01066a6 <mpentry_end+0x4>$/;"	l
f0106636	obj/kern/kernel.asm	/^f0106636:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0106639	obj/kern/kernel.asm	/^f0106639:	66 83 c8 01          	or     $0x1,%ax$/;"	l
f010663d	obj/kern/kernel.asm	/^f010663d:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0106640	obj/kern/kernel.asm	/^f0106640:	66 ea 20 70 00 00    	ljmpw  $0x0,$0x7020$/;"	l
f0106646	obj/kern/kernel.asm	/^f0106646:	08 00                	or     %al,(%eax)$/;"	l
f0106648	obj/kern/kernel.asm	/^f0106648 <start32>:$/;"	l
f0106648	obj/kern/kernel.asm	/^f0106648:	66 b8 10 00          	mov    $0x10,%ax$/;"	l
f010664c	obj/kern/kernel.asm	/^f010664c:	8e d8                	mov    %eax,%ds$/;"	l
f010664e	obj/kern/kernel.asm	/^f010664e:	8e c0                	mov    %eax,%es$/;"	l
f0106650	obj/kern/kernel.asm	/^f0106650:	8e d0                	mov    %eax,%ss$/;"	l
f0106652	obj/kern/kernel.asm	/^f0106652:	66 b8 00 00          	mov    $0x0,%ax$/;"	l
f0106656	obj/kern/kernel.asm	/^f0106656:	8e e0                	mov    %eax,%fs$/;"	l
f0106658	obj/kern/kernel.asm	/^f0106658:	8e e8                	mov    %eax,%gs$/;"	l
f010665a	obj/kern/kernel.asm	/^f010665a:	b8 00 20 12 00       	mov    $0x122000,%eax$/;"	l
f010665f	obj/kern/kernel.asm	/^f010665f:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0106662	obj/kern/kernel.asm	/^f0106662:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0106665	obj/kern/kernel.asm	/^f0106665:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f010666a	obj/kern/kernel.asm	/^f010666a:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f010666d	obj/kern/kernel.asm	/^f010666d:	8b 25 90 8e 2b f0    	mov    0xf02b8e90,%esp$/;"	l
f0106673	obj/kern/kernel.asm	/^f0106673:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0106678	obj/kern/kernel.asm	/^f0106678:	b8 24 02 10 f0       	mov    $0xf0100224,%eax$/;"	l
f010667d	obj/kern/kernel.asm	/^f010667d:	ff d0                	call   *%eax$/;"	l
f010667f	obj/kern/kernel.asm	/^f010667f <spin>:$/;"	l
f010667f	obj/kern/kernel.asm	/^f010667f:	eb fe                	jmp    f010667f <spin>$/;"	l
f0106681	obj/kern/kernel.asm	/^f0106681:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0106684	obj/kern/kernel.asm	/^f0106684 <gdt>:$/;"	l
f010668c	obj/kern/kernel.asm	/^f010668c:	ff                   	(bad)  $/;"	l
f010668d	obj/kern/kernel.asm	/^f010668d:	ff 00                	incl   (%eax)$/;"	l
f010668f	obj/kern/kernel.asm	/^f010668f:	00 00                	add    %al,(%eax)$/;"	l
f0106691	obj/kern/kernel.asm	/^f0106691:	9a cf 00 ff ff 00 00 	lcall  $0x0,$0xffff00cf$/;"	l
f0106698	obj/kern/kernel.asm	/^f0106698:	00 92 cf 00 17 00    	add    %dl,0x1700cf(%edx)$/;"	l
f010669c	obj/kern/kernel.asm	/^f010669c <gdtdesc>:$/;"	l
f010669c	obj/kern/kernel.asm	/^f010669c:	17                   	pop    %ss$/;"	l
f010669d	obj/kern/kernel.asm	/^f010669d:	00 5c 70 00          	add    %bl,0x0(%eax,%esi,2)$/;"	l
f01066a2	obj/kern/kernel.asm	/^f01066a2 <mpentry_end>:$/;"	l
f01066a2	obj/kern/kernel.asm	/^f01066a2:	90                   	nop$/;"	l
f01066a3	obj/kern/kernel.asm	/^f01066a3:	66 90                	xchg   %ax,%ax$/;"	l
f01066a5	obj/kern/kernel.asm	/^f01066a5:	66 90                	xchg   %ax,%ax$/;"	l
f01066a7	obj/kern/kernel.asm	/^f01066a7:	66 90                	xchg   %ax,%ax$/;"	l
f01066a9	obj/kern/kernel.asm	/^f01066a9:	66 90                	xchg   %ax,%ax$/;"	l
f01066ab	obj/kern/kernel.asm	/^f01066ab:	66 90                	xchg   %ax,%ax$/;"	l
f01066ad	obj/kern/kernel.asm	/^f01066ad:	66 90                	xchg   %ax,%ax$/;"	l
f01066af	obj/kern/kernel.asm	/^f01066af:	90                   	nop$/;"	l
f01066b0	obj/kern/kernel.asm	/^f01066b0 <mpsearch1>:$/;"	l
f01066b0	obj/kern/kernel.asm	/^f01066b0:	55                   	push   %ebp$/;"	l
f01066b1	obj/kern/kernel.asm	/^f01066b1:	89 e5                	mov    %esp,%ebp$/;"	l
f01066b3	obj/kern/kernel.asm	/^f01066b3:	56                   	push   %esi$/;"	l
f01066b4	obj/kern/kernel.asm	/^f01066b4:	53                   	push   %ebx$/;"	l
f01066b5	obj/kern/kernel.asm	/^f01066b5:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01066b8	obj/kern/kernel.asm	/^f01066b8:	8b 0d 94 8e 2b f0    	mov    0xf02b8e94,%ecx$/;"	l
f01066be	obj/kern/kernel.asm	/^f01066be:	89 c3                	mov    %eax,%ebx$/;"	l
f01066c0	obj/kern/kernel.asm	/^f01066c0:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f01066c3	obj/kern/kernel.asm	/^f01066c3:	39 cb                	cmp    %ecx,%ebx$/;"	l
f01066c5	obj/kern/kernel.asm	/^f01066c5:	72 20                	jb     f01066e7 <mpsearch1+0x37>$/;"	l
f01066c7	obj/kern/kernel.asm	/^f01066c7:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01066cb	obj/kern/kernel.asm	/^f01066cb:	c7 44 24 08 44 7a 10 	movl   $0xf0107a44,0x8(%esp)$/;"	l
f01066d2	obj/kern/kernel.asm	/^f01066d2:	f0 $/;"	l
f01066d3	obj/kern/kernel.asm	/^f01066d3:	c7 44 24 04 57 00 00 	movl   $0x57,0x4(%esp)$/;"	l
f01066da	obj/kern/kernel.asm	/^f01066da:	00 $/;"	l
f01066db	obj/kern/kernel.asm	/^f01066db:	c7 04 24 85 97 10 f0 	movl   $0xf0109785,(%esp)$/;"	l
f01066e2	obj/kern/kernel.asm	/^f01066e2:	e8 59 99 ff ff       	call   f0100040 <_panic>$/;"	l
f01066e7	obj/kern/kernel.asm	/^f01066e7:	8d 98 00 00 00 f0    	lea    -0x10000000(%eax),%ebx$/;"	l
f01066ed	obj/kern/kernel.asm	/^f01066ed:	01 d0                	add    %edx,%eax$/;"	l
f01066ef	obj/kern/kernel.asm	/^f01066ef:	89 c2                	mov    %eax,%edx$/;"	l
f01066f1	obj/kern/kernel.asm	/^f01066f1:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01066f4	obj/kern/kernel.asm	/^f01066f4:	39 d1                	cmp    %edx,%ecx$/;"	l
f01066f6	obj/kern/kernel.asm	/^f01066f6:	77 20                	ja     f0106718 <mpsearch1+0x68>$/;"	l
f01066f8	obj/kern/kernel.asm	/^f01066f8:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01066fc	obj/kern/kernel.asm	/^f01066fc:	c7 44 24 08 44 7a 10 	movl   $0xf0107a44,0x8(%esp)$/;"	l
f0106703	obj/kern/kernel.asm	/^f0106703:	f0 $/;"	l
f0106704	obj/kern/kernel.asm	/^f0106704:	c7 44 24 04 57 00 00 	movl   $0x57,0x4(%esp)$/;"	l
f010670b	obj/kern/kernel.asm	/^f010670b:	00 $/;"	l
f010670c	obj/kern/kernel.asm	/^f010670c:	c7 04 24 85 97 10 f0 	movl   $0xf0109785,(%esp)$/;"	l
f0106713	obj/kern/kernel.asm	/^f0106713:	e8 28 99 ff ff       	call   f0100040 <_panic>$/;"	l
f0106718	obj/kern/kernel.asm	/^f0106718:	8d b0 00 00 00 f0    	lea    -0x10000000(%eax),%esi$/;"	l
f010671e	obj/kern/kernel.asm	/^f010671e:	eb 36                	jmp    f0106756 <mpsearch1+0xa6>$/;"	l
f0106720	obj/kern/kernel.asm	/^f0106720:	c7 44 24 08 04 00 00 	movl   $0x4,0x8(%esp)$/;"	l
f0106727	obj/kern/kernel.asm	/^f0106727:	00 $/;"	l
f0106728	obj/kern/kernel.asm	/^f0106728:	c7 44 24 04 95 97 10 	movl   $0xf0109795,0x4(%esp)$/;"	l
f010672f	obj/kern/kernel.asm	/^f010672f:	f0 $/;"	l
f0106730	obj/kern/kernel.asm	/^f0106730:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0106733	obj/kern/kernel.asm	/^f0106733:	e8 c5 fd ff ff       	call   f01064fd <memcmp>$/;"	l
f0106738	obj/kern/kernel.asm	/^f0106738:	85 c0                	test   %eax,%eax$/;"	l
f010673a	obj/kern/kernel.asm	/^f010673a:	75 17                	jne    f0106753 <mpsearch1+0xa3>$/;"	l
f010673c	obj/kern/kernel.asm	/^f010673c:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106741	obj/kern/kernel.asm	/^f0106741:	0f b6 0c 13          	movzbl (%ebx,%edx,1),%ecx$/;"	l
f0106745	obj/kern/kernel.asm	/^f0106745:	01 c8                	add    %ecx,%eax$/;"	l
f0106747	obj/kern/kernel.asm	/^f0106747:	83 c2 01             	add    $0x1,%edx$/;"	l
f010674a	obj/kern/kernel.asm	/^f010674a:	83 fa 10             	cmp    $0x10,%edx$/;"	l
f010674d	obj/kern/kernel.asm	/^f010674d:	75 f2                	jne    f0106741 <mpsearch1+0x91>$/;"	l
f010674f	obj/kern/kernel.asm	/^f010674f:	84 c0                	test   %al,%al$/;"	l
f0106751	obj/kern/kernel.asm	/^f0106751:	74 0e                	je     f0106761 <mpsearch1+0xb1>$/;"	l
f0106753	obj/kern/kernel.asm	/^f0106753:	83 c3 10             	add    $0x10,%ebx$/;"	l
f0106756	obj/kern/kernel.asm	/^f0106756:	39 f3                	cmp    %esi,%ebx$/;"	l
f0106758	obj/kern/kernel.asm	/^f0106758:	72 c6                	jb     f0106720 <mpsearch1+0x70>$/;"	l
f010675a	obj/kern/kernel.asm	/^f010675a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010675f	obj/kern/kernel.asm	/^f010675f:	eb 02                	jmp    f0106763 <mpsearch1+0xb3>$/;"	l
f0106761	obj/kern/kernel.asm	/^f0106761:	89 d8                	mov    %ebx,%eax$/;"	l
f0106763	obj/kern/kernel.asm	/^f0106763:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106766	obj/kern/kernel.asm	/^f0106766:	5b                   	pop    %ebx$/;"	l
f0106767	obj/kern/kernel.asm	/^f0106767:	5e                   	pop    %esi$/;"	l
f0106768	obj/kern/kernel.asm	/^f0106768:	5d                   	pop    %ebp$/;"	l
f0106769	obj/kern/kernel.asm	/^f0106769:	c3                   	ret    $/;"	l
f010676a	obj/kern/kernel.asm	/^f010676a <mp_init>:$/;"	l
f010676a	obj/kern/kernel.asm	/^f010676a:	55                   	push   %ebp$/;"	l
f010676b	obj/kern/kernel.asm	/^f010676b:	89 e5                	mov    %esp,%ebp$/;"	l
f010676d	obj/kern/kernel.asm	/^f010676d:	57                   	push   %edi$/;"	l
f010676e	obj/kern/kernel.asm	/^f010676e:	56                   	push   %esi$/;"	l
f010676f	obj/kern/kernel.asm	/^f010676f:	53                   	push   %ebx$/;"	l
f0106770	obj/kern/kernel.asm	/^f0106770:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0106773	obj/kern/kernel.asm	/^f0106773:	c7 05 c0 93 2b f0 20 	movl   $0xf02b9020,0xf02b93c0$/;"	l
f010677a	obj/kern/kernel.asm	/^f010677a:	90 2b f0 $/;"	l
f010677d	obj/kern/kernel.asm	/^f010677d:	83 3d 94 8e 2b f0 00 	cmpl   $0x0,0xf02b8e94$/;"	l
f0106784	obj/kern/kernel.asm	/^f0106784:	75 24                	jne    f01067aa <mp_init+0x40>$/;"	l
f0106786	obj/kern/kernel.asm	/^f0106786:	c7 44 24 0c 00 04 00 	movl   $0x400,0xc(%esp)$/;"	l
f010678d	obj/kern/kernel.asm	/^f010678d:	00 $/;"	l
f010678e	obj/kern/kernel.asm	/^f010678e:	c7 44 24 08 44 7a 10 	movl   $0xf0107a44,0x8(%esp)$/;"	l
f0106795	obj/kern/kernel.asm	/^f0106795:	f0 $/;"	l
f0106796	obj/kern/kernel.asm	/^f0106796:	c7 44 24 04 6f 00 00 	movl   $0x6f,0x4(%esp)$/;"	l
f010679d	obj/kern/kernel.asm	/^f010679d:	00 $/;"	l
f010679e	obj/kern/kernel.asm	/^f010679e:	c7 04 24 85 97 10 f0 	movl   $0xf0109785,(%esp)$/;"	l
f01067a5	obj/kern/kernel.asm	/^f01067a5:	e8 96 98 ff ff       	call   f0100040 <_panic>$/;"	l
f01067aa	obj/kern/kernel.asm	/^f01067aa:	0f b7 05 0e 04 00 f0 	movzwl 0xf000040e,%eax$/;"	l
f01067b1	obj/kern/kernel.asm	/^f01067b1:	85 c0                	test   %eax,%eax$/;"	l
f01067b3	obj/kern/kernel.asm	/^f01067b3:	74 16                	je     f01067cb <mp_init+0x61>$/;"	l
f01067b5	obj/kern/kernel.asm	/^f01067b5:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f01067b8	obj/kern/kernel.asm	/^f01067b8:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f01067bd	obj/kern/kernel.asm	/^f01067bd:	e8 ee fe ff ff       	call   f01066b0 <mpsearch1>$/;"	l
f01067c2	obj/kern/kernel.asm	/^f01067c2:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01067c5	obj/kern/kernel.asm	/^f01067c5:	85 c0                	test   %eax,%eax$/;"	l
f01067c7	obj/kern/kernel.asm	/^f01067c7:	75 3c                	jne    f0106805 <mp_init+0x9b>$/;"	l
f01067c9	obj/kern/kernel.asm	/^f01067c9:	eb 20                	jmp    f01067eb <mp_init+0x81>$/;"	l
f01067cb	obj/kern/kernel.asm	/^f01067cb:	0f b7 05 13 04 00 f0 	movzwl 0xf0000413,%eax$/;"	l
f01067d2	obj/kern/kernel.asm	/^f01067d2:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f01067d5	obj/kern/kernel.asm	/^f01067d5:	2d 00 04 00 00       	sub    $0x400,%eax$/;"	l
f01067da	obj/kern/kernel.asm	/^f01067da:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f01067df	obj/kern/kernel.asm	/^f01067df:	e8 cc fe ff ff       	call   f01066b0 <mpsearch1>$/;"	l
f01067e4	obj/kern/kernel.asm	/^f01067e4:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01067e7	obj/kern/kernel.asm	/^f01067e7:	85 c0                	test   %eax,%eax$/;"	l
f01067e9	obj/kern/kernel.asm	/^f01067e9:	75 1a                	jne    f0106805 <mp_init+0x9b>$/;"	l
f01067eb	obj/kern/kernel.asm	/^f01067eb:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f01067f0	obj/kern/kernel.asm	/^f01067f0:	b8 00 00 0f 00       	mov    $0xf0000,%eax$/;"	l
f01067f5	obj/kern/kernel.asm	/^f01067f5:	e8 b6 fe ff ff       	call   f01066b0 <mpsearch1>$/;"	l
f01067fa	obj/kern/kernel.asm	/^f01067fa:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01067fd	obj/kern/kernel.asm	/^f01067fd:	85 c0                	test   %eax,%eax$/;"	l
f01067ff	obj/kern/kernel.asm	/^f01067ff:	0f 84 54 02 00 00    	je     f0106a59 <mp_init+0x2ef>$/;"	l
f0106805	obj/kern/kernel.asm	/^f0106805:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0106808	obj/kern/kernel.asm	/^f0106808:	8b 70 04             	mov    0x4(%eax),%esi$/;"	l
f010680b	obj/kern/kernel.asm	/^f010680b:	85 f6                	test   %esi,%esi$/;"	l
f010680d	obj/kern/kernel.asm	/^f010680d:	74 06                	je     f0106815 <mp_init+0xab>$/;"	l
f010680f	obj/kern/kernel.asm	/^f010680f:	80 78 0b 00          	cmpb   $0x0,0xb(%eax)$/;"	l
f0106813	obj/kern/kernel.asm	/^f0106813:	74 11                	je     f0106826 <mp_init+0xbc>$/;"	l
f0106815	obj/kern/kernel.asm	/^f0106815:	c7 04 24 f8 95 10 f0 	movl   $0xf01095f8,(%esp)$/;"	l
f010681c	obj/kern/kernel.asm	/^f010681c:	e8 cb d7 ff ff       	call   f0103fec <cprintf>$/;"	l
f0106821	obj/kern/kernel.asm	/^f0106821:	e9 33 02 00 00       	jmp    f0106a59 <mp_init+0x2ef>$/;"	l
f0106826	obj/kern/kernel.asm	/^f0106826:	89 f0                	mov    %esi,%eax$/;"	l
f0106828	obj/kern/kernel.asm	/^f0106828:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f010682b	obj/kern/kernel.asm	/^f010682b:	3b 05 94 8e 2b f0    	cmp    0xf02b8e94,%eax$/;"	l
f0106831	obj/kern/kernel.asm	/^f0106831:	72 20                	jb     f0106853 <mp_init+0xe9>$/;"	l
f0106833	obj/kern/kernel.asm	/^f0106833:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f0106837	obj/kern/kernel.asm	/^f0106837:	c7 44 24 08 44 7a 10 	movl   $0xf0107a44,0x8(%esp)$/;"	l
f010683e	obj/kern/kernel.asm	/^f010683e:	f0 $/;"	l
f010683f	obj/kern/kernel.asm	/^f010683f:	c7 44 24 04 90 00 00 	movl   $0x90,0x4(%esp)$/;"	l
f0106846	obj/kern/kernel.asm	/^f0106846:	00 $/;"	l
f0106847	obj/kern/kernel.asm	/^f0106847:	c7 04 24 85 97 10 f0 	movl   $0xf0109785,(%esp)$/;"	l
f010684e	obj/kern/kernel.asm	/^f010684e:	e8 ed 97 ff ff       	call   f0100040 <_panic>$/;"	l
f0106853	obj/kern/kernel.asm	/^f0106853:	8d 9e 00 00 00 f0    	lea    -0x10000000(%esi),%ebx$/;"	l
f0106859	obj/kern/kernel.asm	/^f0106859:	c7 44 24 08 04 00 00 	movl   $0x4,0x8(%esp)$/;"	l
f0106860	obj/kern/kernel.asm	/^f0106860:	00 $/;"	l
f0106861	obj/kern/kernel.asm	/^f0106861:	c7 44 24 04 9a 97 10 	movl   $0xf010979a,0x4(%esp)$/;"	l
f0106868	obj/kern/kernel.asm	/^f0106868:	f0 $/;"	l
f0106869	obj/kern/kernel.asm	/^f0106869:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010686c	obj/kern/kernel.asm	/^f010686c:	e8 8c fc ff ff       	call   f01064fd <memcmp>$/;"	l
f0106871	obj/kern/kernel.asm	/^f0106871:	85 c0                	test   %eax,%eax$/;"	l
f0106873	obj/kern/kernel.asm	/^f0106873:	74 11                	je     f0106886 <mp_init+0x11c>$/;"	l
f0106875	obj/kern/kernel.asm	/^f0106875:	c7 04 24 28 96 10 f0 	movl   $0xf0109628,(%esp)$/;"	l
f010687c	obj/kern/kernel.asm	/^f010687c:	e8 6b d7 ff ff       	call   f0103fec <cprintf>$/;"	l
f0106881	obj/kern/kernel.asm	/^f0106881:	e9 d3 01 00 00       	jmp    f0106a59 <mp_init+0x2ef>$/;"	l
f0106886	obj/kern/kernel.asm	/^f0106886:	0f b7 43 04          	movzwl 0x4(%ebx),%eax$/;"	l
f010688a	obj/kern/kernel.asm	/^f010688a:	66 89 45 e2          	mov    %ax,-0x1e(%ebp)$/;"	l
f010688e	obj/kern/kernel.asm	/^f010688e:	0f b7 f8             	movzwl %ax,%edi$/;"	l
f0106891	obj/kern/kernel.asm	/^f0106891:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106896	obj/kern/kernel.asm	/^f0106896:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010689b	obj/kern/kernel.asm	/^f010689b:	eb 0d                	jmp    f01068aa <mp_init+0x140>$/;"	l
f010689d	obj/kern/kernel.asm	/^f010689d:	0f b6 8c 30 00 00 00 	movzbl -0x10000000(%eax,%esi,1),%ecx$/;"	l
f01068a4	obj/kern/kernel.asm	/^f01068a4:	f0 $/;"	l
f01068a5	obj/kern/kernel.asm	/^f01068a5:	01 ca                	add    %ecx,%edx$/;"	l
f01068a7	obj/kern/kernel.asm	/^f01068a7:	83 c0 01             	add    $0x1,%eax$/;"	l
f01068aa	obj/kern/kernel.asm	/^f01068aa:	39 c7                	cmp    %eax,%edi$/;"	l
f01068ac	obj/kern/kernel.asm	/^f01068ac:	7f ef                	jg     f010689d <mp_init+0x133>$/;"	l
f01068ae	obj/kern/kernel.asm	/^f01068ae:	84 d2                	test   %dl,%dl$/;"	l
f01068b0	obj/kern/kernel.asm	/^f01068b0:	74 11                	je     f01068c3 <mp_init+0x159>$/;"	l
f01068b2	obj/kern/kernel.asm	/^f01068b2:	c7 04 24 5c 96 10 f0 	movl   $0xf010965c,(%esp)$/;"	l
f01068b9	obj/kern/kernel.asm	/^f01068b9:	e8 2e d7 ff ff       	call   f0103fec <cprintf>$/;"	l
f01068be	obj/kern/kernel.asm	/^f01068be:	e9 96 01 00 00       	jmp    f0106a59 <mp_init+0x2ef>$/;"	l
f01068c3	obj/kern/kernel.asm	/^f01068c3:	0f b6 43 06          	movzbl 0x6(%ebx),%eax$/;"	l
f01068c7	obj/kern/kernel.asm	/^f01068c7:	3c 04                	cmp    $0x4,%al$/;"	l
f01068c9	obj/kern/kernel.asm	/^f01068c9:	74 1f                	je     f01068ea <mp_init+0x180>$/;"	l
f01068cb	obj/kern/kernel.asm	/^f01068cb:	3c 01                	cmp    $0x1,%al$/;"	l
f01068cd	obj/kern/kernel.asm	/^f01068cd:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f01068d0	obj/kern/kernel.asm	/^f01068d0:	74 18                	je     f01068ea <mp_init+0x180>$/;"	l
f01068d2	obj/kern/kernel.asm	/^f01068d2:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01068d5	obj/kern/kernel.asm	/^f01068d5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01068d9	obj/kern/kernel.asm	/^f01068d9:	c7 04 24 80 96 10 f0 	movl   $0xf0109680,(%esp)$/;"	l
f01068e0	obj/kern/kernel.asm	/^f01068e0:	e8 07 d7 ff ff       	call   f0103fec <cprintf>$/;"	l
f01068e5	obj/kern/kernel.asm	/^f01068e5:	e9 6f 01 00 00       	jmp    f0106a59 <mp_init+0x2ef>$/;"	l
f01068ea	obj/kern/kernel.asm	/^f01068ea:	0f b7 73 28          	movzwl 0x28(%ebx),%esi$/;"	l
f01068ee	obj/kern/kernel.asm	/^f01068ee:	0f b7 7d e2          	movzwl -0x1e(%ebp),%edi$/;"	l
f01068f2	obj/kern/kernel.asm	/^f01068f2:	01 df                	add    %ebx,%edi$/;"	l
f01068f4	obj/kern/kernel.asm	/^f01068f4:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01068f9	obj/kern/kernel.asm	/^f01068f9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01068fe	obj/kern/kernel.asm	/^f01068fe:	eb 09                	jmp    f0106909 <mp_init+0x19f>$/;"	l
f0106900	obj/kern/kernel.asm	/^f0106900:	0f b6 0c 07          	movzbl (%edi,%eax,1),%ecx$/;"	l
f0106904	obj/kern/kernel.asm	/^f0106904:	01 ca                	add    %ecx,%edx$/;"	l
f0106906	obj/kern/kernel.asm	/^f0106906:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106909	obj/kern/kernel.asm	/^f0106909:	39 c6                	cmp    %eax,%esi$/;"	l
f010690b	obj/kern/kernel.asm	/^f010690b:	7f f3                	jg     f0106900 <mp_init+0x196>$/;"	l
f010690d	obj/kern/kernel.asm	/^f010690d:	02 53 2a             	add    0x2a(%ebx),%dl$/;"	l
f0106910	obj/kern/kernel.asm	/^f0106910:	84 d2                	test   %dl,%dl$/;"	l
f0106912	obj/kern/kernel.asm	/^f0106912:	74 11                	je     f0106925 <mp_init+0x1bb>$/;"	l
f0106914	obj/kern/kernel.asm	/^f0106914:	c7 04 24 a0 96 10 f0 	movl   $0xf01096a0,(%esp)$/;"	l
f010691b	obj/kern/kernel.asm	/^f010691b:	e8 cc d6 ff ff       	call   f0103fec <cprintf>$/;"	l
f0106920	obj/kern/kernel.asm	/^f0106920:	e9 34 01 00 00       	jmp    f0106a59 <mp_init+0x2ef>$/;"	l
f0106925	obj/kern/kernel.asm	/^f0106925:	85 db                	test   %ebx,%ebx$/;"	l
f0106927	obj/kern/kernel.asm	/^f0106927:	0f 84 2c 01 00 00    	je     f0106a59 <mp_init+0x2ef>$/;"	l
f010692d	obj/kern/kernel.asm	/^f010692d:	c7 05 00 90 2b f0 01 	movl   $0x1,0xf02b9000$/;"	l
f0106934	obj/kern/kernel.asm	/^f0106934:	00 00 00 $/;"	l
f0106937	obj/kern/kernel.asm	/^f0106937:	8b 43 24             	mov    0x24(%ebx),%eax$/;"	l
f010693a	obj/kern/kernel.asm	/^f010693a:	a3 00 a0 2f f0       	mov    %eax,0xf02fa000$/;"	l
f010693f	obj/kern/kernel.asm	/^f010693f:	8d 7b 2c             	lea    0x2c(%ebx),%edi$/;"	l
f0106942	obj/kern/kernel.asm	/^f0106942:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0106947	obj/kern/kernel.asm	/^f0106947:	e9 86 00 00 00       	jmp    f01069d2 <mp_init+0x268>$/;"	l
f010694c	obj/kern/kernel.asm	/^f010694c:	0f b6 07             	movzbl (%edi),%eax$/;"	l
f010694f	obj/kern/kernel.asm	/^f010694f:	84 c0                	test   %al,%al$/;"	l
f0106951	obj/kern/kernel.asm	/^f0106951:	74 06                	je     f0106959 <mp_init+0x1ef>$/;"	l
f0106953	obj/kern/kernel.asm	/^f0106953:	3c 04                	cmp    $0x4,%al$/;"	l
f0106955	obj/kern/kernel.asm	/^f0106955:	77 57                	ja     f01069ae <mp_init+0x244>$/;"	l
f0106957	obj/kern/kernel.asm	/^f0106957:	eb 50                	jmp    f01069a9 <mp_init+0x23f>$/;"	l
f0106959	obj/kern/kernel.asm	/^f0106959:	f6 47 03 02          	testb  $0x2,0x3(%edi)$/;"	l
f010695d	obj/kern/kernel.asm	/^f010695d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0106960	obj/kern/kernel.asm	/^f0106960:	74 11                	je     f0106973 <mp_init+0x209>$/;"	l
f0106962	obj/kern/kernel.asm	/^f0106962:	6b 05 c4 93 2b f0 74 	imul   $0x74,0xf02b93c4,%eax$/;"	l
f0106969	obj/kern/kernel.asm	/^f0106969:	05 20 90 2b f0       	add    $0xf02b9020,%eax$/;"	l
f010696e	obj/kern/kernel.asm	/^f010696e:	a3 c0 93 2b f0       	mov    %eax,0xf02b93c0$/;"	l
f0106973	obj/kern/kernel.asm	/^f0106973:	a1 c4 93 2b f0       	mov    0xf02b93c4,%eax$/;"	l
f0106978	obj/kern/kernel.asm	/^f0106978:	83 f8 07             	cmp    $0x7,%eax$/;"	l
f010697b	obj/kern/kernel.asm	/^f010697b:	7f 13                	jg     f0106990 <mp_init+0x226>$/;"	l
f010697d	obj/kern/kernel.asm	/^f010697d:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0106980	obj/kern/kernel.asm	/^f0106980:	88 82 20 90 2b f0    	mov    %al,-0xfd46fe0(%edx)$/;"	l
f0106986	obj/kern/kernel.asm	/^f0106986:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106989	obj/kern/kernel.asm	/^f0106989:	a3 c4 93 2b f0       	mov    %eax,0xf02b93c4$/;"	l
f010698e	obj/kern/kernel.asm	/^f010698e:	eb 14                	jmp    f01069a4 <mp_init+0x23a>$/;"	l
f0106990	obj/kern/kernel.asm	/^f0106990:	0f b6 47 01          	movzbl 0x1(%edi),%eax$/;"	l
f0106994	obj/kern/kernel.asm	/^f0106994:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106998	obj/kern/kernel.asm	/^f0106998:	c7 04 24 d0 96 10 f0 	movl   $0xf01096d0,(%esp)$/;"	l
f010699f	obj/kern/kernel.asm	/^f010699f:	e8 48 d6 ff ff       	call   f0103fec <cprintf>$/;"	l
f01069a4	obj/kern/kernel.asm	/^f01069a4:	83 c7 14             	add    $0x14,%edi$/;"	l
f01069a7	obj/kern/kernel.asm	/^f01069a7:	eb 26                	jmp    f01069cf <mp_init+0x265>$/;"	l
f01069a9	obj/kern/kernel.asm	/^f01069a9:	83 c7 08             	add    $0x8,%edi$/;"	l
f01069ac	obj/kern/kernel.asm	/^f01069ac:	eb 21                	jmp    f01069cf <mp_init+0x265>$/;"	l
f01069ae	obj/kern/kernel.asm	/^f01069ae:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01069b1	obj/kern/kernel.asm	/^f01069b1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01069b5	obj/kern/kernel.asm	/^f01069b5:	c7 04 24 f8 96 10 f0 	movl   $0xf01096f8,(%esp)$/;"	l
f01069bc	obj/kern/kernel.asm	/^f01069bc:	e8 2b d6 ff ff       	call   f0103fec <cprintf>$/;"	l
f01069c1	obj/kern/kernel.asm	/^f01069c1:	c7 05 00 90 2b f0 00 	movl   $0x0,0xf02b9000$/;"	l
f01069c8	obj/kern/kernel.asm	/^f01069c8:	00 00 00 $/;"	l
f01069cb	obj/kern/kernel.asm	/^f01069cb:	0f b7 73 22          	movzwl 0x22(%ebx),%esi$/;"	l
f01069cf	obj/kern/kernel.asm	/^f01069cf:	83 c6 01             	add    $0x1,%esi$/;"	l
f01069d2	obj/kern/kernel.asm	/^f01069d2:	0f b7 43 22          	movzwl 0x22(%ebx),%eax$/;"	l
f01069d6	obj/kern/kernel.asm	/^f01069d6:	39 c6                	cmp    %eax,%esi$/;"	l
f01069d8	obj/kern/kernel.asm	/^f01069d8:	0f 82 6e ff ff ff    	jb     f010694c <mp_init+0x1e2>$/;"	l
f01069de	obj/kern/kernel.asm	/^f01069de:	a1 c0 93 2b f0       	mov    0xf02b93c0,%eax$/;"	l
f01069e3	obj/kern/kernel.asm	/^f01069e3:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)$/;"	l
f01069ea	obj/kern/kernel.asm	/^f01069ea:	83 3d 00 90 2b f0 00 	cmpl   $0x0,0xf02b9000$/;"	l
f01069f1	obj/kern/kernel.asm	/^f01069f1:	75 22                	jne    f0106a15 <mp_init+0x2ab>$/;"	l
f01069f3	obj/kern/kernel.asm	/^f01069f3:	c7 05 c4 93 2b f0 01 	movl   $0x1,0xf02b93c4$/;"	l
f01069fa	obj/kern/kernel.asm	/^f01069fa:	00 00 00 $/;"	l
f01069fd	obj/kern/kernel.asm	/^f01069fd:	c7 05 00 a0 2f f0 00 	movl   $0x0,0xf02fa000$/;"	l
f0106a04	obj/kern/kernel.asm	/^f0106a04:	00 00 00 $/;"	l
f0106a07	obj/kern/kernel.asm	/^f0106a07:	c7 04 24 18 97 10 f0 	movl   $0xf0109718,(%esp)$/;"	l
f0106a0e	obj/kern/kernel.asm	/^f0106a0e:	e8 d9 d5 ff ff       	call   f0103fec <cprintf>$/;"	l
f0106a13	obj/kern/kernel.asm	/^f0106a13:	eb 44                	jmp    f0106a59 <mp_init+0x2ef>$/;"	l
f0106a15	obj/kern/kernel.asm	/^f0106a15:	8b 15 c4 93 2b f0    	mov    0xf02b93c4,%edx$/;"	l
f0106a1b	obj/kern/kernel.asm	/^f0106a1b:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0106a1f	obj/kern/kernel.asm	/^f0106a1f:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0106a22	obj/kern/kernel.asm	/^f0106a22:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106a26	obj/kern/kernel.asm	/^f0106a26:	c7 04 24 9f 97 10 f0 	movl   $0xf010979f,(%esp)$/;"	l
f0106a2d	obj/kern/kernel.asm	/^f0106a2d:	e8 ba d5 ff ff       	call   f0103fec <cprintf>$/;"	l
f0106a32	obj/kern/kernel.asm	/^f0106a32:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0106a35	obj/kern/kernel.asm	/^f0106a35:	80 78 0c 00          	cmpb   $0x0,0xc(%eax)$/;"	l
f0106a39	obj/kern/kernel.asm	/^f0106a39:	74 1e                	je     f0106a59 <mp_init+0x2ef>$/;"	l
f0106a3b	obj/kern/kernel.asm	/^f0106a3b:	c7 04 24 44 97 10 f0 	movl   $0xf0109744,(%esp)$/;"	l
f0106a42	obj/kern/kernel.asm	/^f0106a42:	e8 a5 d5 ff ff       	call   f0103fec <cprintf>$/;"	l
f0106a47	obj/kern/kernel.asm	/^f0106a47:	ba 22 00 00 00       	mov    $0x22,%edx$/;"	l
f0106a4c	obj/kern/kernel.asm	/^f0106a4c:	b8 70 00 00 00       	mov    $0x70,%eax$/;"	l
f0106a51	obj/kern/kernel.asm	/^f0106a51:	ee                   	out    %al,(%dx)$/;"	l
f0106a52	obj/kern/kernel.asm	/^f0106a52:	b2 23                	mov    $0x23,%dl$/;"	l
f0106a54	obj/kern/kernel.asm	/^f0106a54:	ec                   	in     (%dx),%al$/;"	l
f0106a55	obj/kern/kernel.asm	/^f0106a55:	83 c8 01             	or     $0x1,%eax$/;"	l
f0106a58	obj/kern/kernel.asm	/^f0106a58:	ee                   	out    %al,(%dx)$/;"	l
f0106a59	obj/kern/kernel.asm	/^f0106a59:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0106a5c	obj/kern/kernel.asm	/^f0106a5c:	5b                   	pop    %ebx$/;"	l
f0106a5d	obj/kern/kernel.asm	/^f0106a5d:	5e                   	pop    %esi$/;"	l
f0106a5e	obj/kern/kernel.asm	/^f0106a5e:	5f                   	pop    %edi$/;"	l
f0106a5f	obj/kern/kernel.asm	/^f0106a5f:	5d                   	pop    %ebp$/;"	l
f0106a60	obj/kern/kernel.asm	/^f0106a60:	c3                   	ret    $/;"	l
f0106a61	obj/kern/kernel.asm	/^f0106a61 <lapicw>:$/;"	l
f0106a61	obj/kern/kernel.asm	/^f0106a61:	55                   	push   %ebp$/;"	l
f0106a62	obj/kern/kernel.asm	/^f0106a62:	89 e5                	mov    %esp,%ebp$/;"	l
f0106a64	obj/kern/kernel.asm	/^f0106a64:	8b 0d 04 a0 2f f0    	mov    0xf02fa004,%ecx$/;"	l
f0106a6a	obj/kern/kernel.asm	/^f0106a6a:	8d 04 81             	lea    (%ecx,%eax,4),%eax$/;"	l
f0106a6d	obj/kern/kernel.asm	/^f0106a6d:	89 10                	mov    %edx,(%eax)$/;"	l
f0106a6f	obj/kern/kernel.asm	/^f0106a6f:	a1 04 a0 2f f0       	mov    0xf02fa004,%eax$/;"	l
f0106a74	obj/kern/kernel.asm	/^f0106a74:	8b 40 20             	mov    0x20(%eax),%eax$/;"	l
f0106a77	obj/kern/kernel.asm	/^f0106a77:	5d                   	pop    %ebp$/;"	l
f0106a78	obj/kern/kernel.asm	/^f0106a78:	c3                   	ret    $/;"	l
f0106a79	obj/kern/kernel.asm	/^f0106a79 <cpunum>:$/;"	l
f0106a79	obj/kern/kernel.asm	/^f0106a79:	55                   	push   %ebp$/;"	l
f0106a7a	obj/kern/kernel.asm	/^f0106a7a:	89 e5                	mov    %esp,%ebp$/;"	l
f0106a7c	obj/kern/kernel.asm	/^f0106a7c:	a1 04 a0 2f f0       	mov    0xf02fa004,%eax$/;"	l
f0106a81	obj/kern/kernel.asm	/^f0106a81:	85 c0                	test   %eax,%eax$/;"	l
f0106a83	obj/kern/kernel.asm	/^f0106a83:	74 08                	je     f0106a8d <cpunum+0x14>$/;"	l
f0106a85	obj/kern/kernel.asm	/^f0106a85:	8b 40 20             	mov    0x20(%eax),%eax$/;"	l
f0106a88	obj/kern/kernel.asm	/^f0106a88:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f0106a8b	obj/kern/kernel.asm	/^f0106a8b:	eb 05                	jmp    f0106a92 <cpunum+0x19>$/;"	l
f0106a8d	obj/kern/kernel.asm	/^f0106a8d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106a92	obj/kern/kernel.asm	/^f0106a92:	5d                   	pop    %ebp$/;"	l
f0106a93	obj/kern/kernel.asm	/^f0106a93:	c3                   	ret    $/;"	l
f0106a94	obj/kern/kernel.asm	/^f0106a94 <lapic_init>:$/;"	l
f0106a94	obj/kern/kernel.asm	/^f0106a94:	a1 00 a0 2f f0       	mov    0xf02fa000,%eax$/;"	l
f0106a99	obj/kern/kernel.asm	/^f0106a99:	85 c0                	test   %eax,%eax$/;"	l
f0106a9b	obj/kern/kernel.asm	/^f0106a9b:	0f 84 23 01 00 00    	je     f0106bc4 <lapic_init+0x130>$/;"	l
f0106aa1	obj/kern/kernel.asm	/^f0106aa1:	55                   	push   %ebp$/;"	l
f0106aa2	obj/kern/kernel.asm	/^f0106aa2:	89 e5                	mov    %esp,%ebp$/;"	l
f0106aa4	obj/kern/kernel.asm	/^f0106aa4:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0106aa7	obj/kern/kernel.asm	/^f0106aa7:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0106aae	obj/kern/kernel.asm	/^f0106aae:	00 $/;"	l
f0106aaf	obj/kern/kernel.asm	/^f0106aaf:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106ab2	obj/kern/kernel.asm	/^f0106ab2:	e8 5e aa ff ff       	call   f0101515 <mmio_map_region>$/;"	l
f0106ab7	obj/kern/kernel.asm	/^f0106ab7:	a3 04 a0 2f f0       	mov    %eax,0xf02fa004$/;"	l
f0106abc	obj/kern/kernel.asm	/^f0106abc:	ba 27 01 00 00       	mov    $0x127,%edx$/;"	l
f0106ac1	obj/kern/kernel.asm	/^f0106ac1:	b8 3c 00 00 00       	mov    $0x3c,%eax$/;"	l
f0106ac6	obj/kern/kernel.asm	/^f0106ac6:	e8 96 ff ff ff       	call   f0106a61 <lapicw>$/;"	l
f0106acb	obj/kern/kernel.asm	/^f0106acb:	ba 0b 00 00 00       	mov    $0xb,%edx$/;"	l
f0106ad0	obj/kern/kernel.asm	/^f0106ad0:	b8 f8 00 00 00       	mov    $0xf8,%eax$/;"	l
f0106ad5	obj/kern/kernel.asm	/^f0106ad5:	e8 87 ff ff ff       	call   f0106a61 <lapicw>$/;"	l
f0106ada	obj/kern/kernel.asm	/^f0106ada:	ba 20 00 02 00       	mov    $0x20020,%edx$/;"	l
f0106adf	obj/kern/kernel.asm	/^f0106adf:	b8 c8 00 00 00       	mov    $0xc8,%eax$/;"	l
f0106ae4	obj/kern/kernel.asm	/^f0106ae4:	e8 78 ff ff ff       	call   f0106a61 <lapicw>$/;"	l
f0106ae9	obj/kern/kernel.asm	/^f0106ae9:	ba 80 96 98 00       	mov    $0x989680,%edx$/;"	l
f0106aee	obj/kern/kernel.asm	/^f0106aee:	b8 e0 00 00 00       	mov    $0xe0,%eax$/;"	l
f0106af3	obj/kern/kernel.asm	/^f0106af3:	e8 69 ff ff ff       	call   f0106a61 <lapicw>$/;"	l
f0106af8	obj/kern/kernel.asm	/^f0106af8:	e8 7c ff ff ff       	call   f0106a79 <cpunum>$/;"	l
f0106afd	obj/kern/kernel.asm	/^f0106afd:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0106b00	obj/kern/kernel.asm	/^f0106b00:	05 20 90 2b f0       	add    $0xf02b9020,%eax$/;"	l
f0106b05	obj/kern/kernel.asm	/^f0106b05:	39 05 c0 93 2b f0    	cmp    %eax,0xf02b93c0$/;"	l
f0106b0b	obj/kern/kernel.asm	/^f0106b0b:	74 0f                	je     f0106b1c <lapic_init+0x88>$/;"	l
f0106b0d	obj/kern/kernel.asm	/^f0106b0d:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0106b12	obj/kern/kernel.asm	/^f0106b12:	b8 d4 00 00 00       	mov    $0xd4,%eax$/;"	l
f0106b17	obj/kern/kernel.asm	/^f0106b17:	e8 45 ff ff ff       	call   f0106a61 <lapicw>$/;"	l
f0106b1c	obj/kern/kernel.asm	/^f0106b1c:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0106b21	obj/kern/kernel.asm	/^f0106b21:	b8 d8 00 00 00       	mov    $0xd8,%eax$/;"	l
f0106b26	obj/kern/kernel.asm	/^f0106b26:	e8 36 ff ff ff       	call   f0106a61 <lapicw>$/;"	l
f0106b2b	obj/kern/kernel.asm	/^f0106b2b:	a1 04 a0 2f f0       	mov    0xf02fa004,%eax$/;"	l
f0106b30	obj/kern/kernel.asm	/^f0106b30:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
f0106b33	obj/kern/kernel.asm	/^f0106b33:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0106b36	obj/kern/kernel.asm	/^f0106b36:	3c 03                	cmp    $0x3,%al$/;"	l
f0106b38	obj/kern/kernel.asm	/^f0106b38:	76 0f                	jbe    f0106b49 <lapic_init+0xb5>$/;"	l
f0106b3a	obj/kern/kernel.asm	/^f0106b3a:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0106b3f	obj/kern/kernel.asm	/^f0106b3f:	b8 d0 00 00 00       	mov    $0xd0,%eax$/;"	l
f0106b44	obj/kern/kernel.asm	/^f0106b44:	e8 18 ff ff ff       	call   f0106a61 <lapicw>$/;"	l
f0106b49	obj/kern/kernel.asm	/^f0106b49:	ba 33 00 00 00       	mov    $0x33,%edx$/;"	l
f0106b4e	obj/kern/kernel.asm	/^f0106b4e:	b8 dc 00 00 00       	mov    $0xdc,%eax$/;"	l
f0106b53	obj/kern/kernel.asm	/^f0106b53:	e8 09 ff ff ff       	call   f0106a61 <lapicw>$/;"	l
f0106b58	obj/kern/kernel.asm	/^f0106b58:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106b5d	obj/kern/kernel.asm	/^f0106b5d:	b8 a0 00 00 00       	mov    $0xa0,%eax$/;"	l
f0106b62	obj/kern/kernel.asm	/^f0106b62:	e8 fa fe ff ff       	call   f0106a61 <lapicw>$/;"	l
f0106b67	obj/kern/kernel.asm	/^f0106b67:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106b6c	obj/kern/kernel.asm	/^f0106b6c:	b8 a0 00 00 00       	mov    $0xa0,%eax$/;"	l
f0106b71	obj/kern/kernel.asm	/^f0106b71:	e8 eb fe ff ff       	call   f0106a61 <lapicw>$/;"	l
f0106b76	obj/kern/kernel.asm	/^f0106b76:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106b7b	obj/kern/kernel.asm	/^f0106b7b:	b8 2c 00 00 00       	mov    $0x2c,%eax$/;"	l
f0106b80	obj/kern/kernel.asm	/^f0106b80:	e8 dc fe ff ff       	call   f0106a61 <lapicw>$/;"	l
f0106b85	obj/kern/kernel.asm	/^f0106b85:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106b8a	obj/kern/kernel.asm	/^f0106b8a:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0106b8f	obj/kern/kernel.asm	/^f0106b8f:	e8 cd fe ff ff       	call   f0106a61 <lapicw>$/;"	l
f0106b94	obj/kern/kernel.asm	/^f0106b94:	ba 00 85 08 00       	mov    $0x88500,%edx$/;"	l
f0106b99	obj/kern/kernel.asm	/^f0106b99:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106b9e	obj/kern/kernel.asm	/^f0106b9e:	e8 be fe ff ff       	call   f0106a61 <lapicw>$/;"	l
f0106ba3	obj/kern/kernel.asm	/^f0106ba3:	8b 15 04 a0 2f f0    	mov    0xf02fa004,%edx$/;"	l
f0106ba9	obj/kern/kernel.asm	/^f0106ba9:	8b 82 00 03 00 00    	mov    0x300(%edx),%eax$/;"	l
f0106baf	obj/kern/kernel.asm	/^f0106baf:	f6 c4 10             	test   $0x10,%ah$/;"	l
f0106bb2	obj/kern/kernel.asm	/^f0106bb2:	75 f5                	jne    f0106ba9 <lapic_init+0x115>$/;"	l
f0106bb4	obj/kern/kernel.asm	/^f0106bb4:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106bb9	obj/kern/kernel.asm	/^f0106bb9:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0106bbe	obj/kern/kernel.asm	/^f0106bbe:	e8 9e fe ff ff       	call   f0106a61 <lapicw>$/;"	l
f0106bc3	obj/kern/kernel.asm	/^f0106bc3:	c9                   	leave  $/;"	l
f0106bc4	obj/kern/kernel.asm	/^f0106bc4:	f3 c3                	repz ret $/;"	l
f0106bc6	obj/kern/kernel.asm	/^f0106bc6 <lapic_eoi>:$/;"	l
f0106bc6	obj/kern/kernel.asm	/^f0106bc6:	83 3d 04 a0 2f f0 00 	cmpl   $0x0,0xf02fa004$/;"	l
f0106bcd	obj/kern/kernel.asm	/^f0106bcd:	74 13                	je     f0106be2 <lapic_eoi+0x1c>$/;"	l
f0106bcf	obj/kern/kernel.asm	/^f0106bcf:	55                   	push   %ebp$/;"	l
f0106bd0	obj/kern/kernel.asm	/^f0106bd0:	89 e5                	mov    %esp,%ebp$/;"	l
f0106bd2	obj/kern/kernel.asm	/^f0106bd2:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106bd7	obj/kern/kernel.asm	/^f0106bd7:	b8 2c 00 00 00       	mov    $0x2c,%eax$/;"	l
f0106bdc	obj/kern/kernel.asm	/^f0106bdc:	e8 80 fe ff ff       	call   f0106a61 <lapicw>$/;"	l
f0106be1	obj/kern/kernel.asm	/^f0106be1:	5d                   	pop    %ebp$/;"	l
f0106be2	obj/kern/kernel.asm	/^f0106be2:	f3 c3                	repz ret $/;"	l
f0106be4	obj/kern/kernel.asm	/^f0106be4 <lapic_startap>:$/;"	l
f0106be4	obj/kern/kernel.asm	/^f0106be4:	55                   	push   %ebp$/;"	l
f0106be5	obj/kern/kernel.asm	/^f0106be5:	89 e5                	mov    %esp,%ebp$/;"	l
f0106be7	obj/kern/kernel.asm	/^f0106be7:	56                   	push   %esi$/;"	l
f0106be8	obj/kern/kernel.asm	/^f0106be8:	53                   	push   %ebx$/;"	l
f0106be9	obj/kern/kernel.asm	/^f0106be9:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0106bec	obj/kern/kernel.asm	/^f0106bec:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0106bef	obj/kern/kernel.asm	/^f0106bef:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0106bf2	obj/kern/kernel.asm	/^f0106bf2:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0106bf7	obj/kern/kernel.asm	/^f0106bf7:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f0106bfc	obj/kern/kernel.asm	/^f0106bfc:	ee                   	out    %al,(%dx)$/;"	l
f0106bfd	obj/kern/kernel.asm	/^f0106bfd:	b2 71                	mov    $0x71,%dl$/;"	l
f0106bff	obj/kern/kernel.asm	/^f0106bff:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0106c04	obj/kern/kernel.asm	/^f0106c04:	ee                   	out    %al,(%dx)$/;"	l
f0106c05	obj/kern/kernel.asm	/^f0106c05:	83 3d 94 8e 2b f0 00 	cmpl   $0x0,0xf02b8e94$/;"	l
f0106c0c	obj/kern/kernel.asm	/^f0106c0c:	75 24                	jne    f0106c32 <lapic_startap+0x4e>$/;"	l
f0106c0e	obj/kern/kernel.asm	/^f0106c0e:	c7 44 24 0c 67 04 00 	movl   $0x467,0xc(%esp)$/;"	l
f0106c15	obj/kern/kernel.asm	/^f0106c15:	00 $/;"	l
f0106c16	obj/kern/kernel.asm	/^f0106c16:	c7 44 24 08 44 7a 10 	movl   $0xf0107a44,0x8(%esp)$/;"	l
f0106c1d	obj/kern/kernel.asm	/^f0106c1d:	f0 $/;"	l
f0106c1e	obj/kern/kernel.asm	/^f0106c1e:	c7 44 24 04 98 00 00 	movl   $0x98,0x4(%esp)$/;"	l
f0106c25	obj/kern/kernel.asm	/^f0106c25:	00 $/;"	l
f0106c26	obj/kern/kernel.asm	/^f0106c26:	c7 04 24 bc 97 10 f0 	movl   $0xf01097bc,(%esp)$/;"	l
f0106c2d	obj/kern/kernel.asm	/^f0106c2d:	e8 0e 94 ff ff       	call   f0100040 <_panic>$/;"	l
f0106c32	obj/kern/kernel.asm	/^f0106c32:	66 c7 05 67 04 00 f0 	movw   $0x0,0xf0000467$/;"	l
f0106c39	obj/kern/kernel.asm	/^f0106c39:	00 00 $/;"	l
f0106c3b	obj/kern/kernel.asm	/^f0106c3b:	89 f0                	mov    %esi,%eax$/;"	l
f0106c3d	obj/kern/kernel.asm	/^f0106c3d:	c1 e8 04             	shr    $0x4,%eax$/;"	l
f0106c40	obj/kern/kernel.asm	/^f0106c40:	66 a3 69 04 00 f0    	mov    %ax,0xf0000469$/;"	l
f0106c46	obj/kern/kernel.asm	/^f0106c46:	c1 e3 18             	shl    $0x18,%ebx$/;"	l
f0106c49	obj/kern/kernel.asm	/^f0106c49:	89 da                	mov    %ebx,%edx$/;"	l
f0106c4b	obj/kern/kernel.asm	/^f0106c4b:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0106c50	obj/kern/kernel.asm	/^f0106c50:	e8 0c fe ff ff       	call   f0106a61 <lapicw>$/;"	l
f0106c55	obj/kern/kernel.asm	/^f0106c55:	ba 00 c5 00 00       	mov    $0xc500,%edx$/;"	l
f0106c5a	obj/kern/kernel.asm	/^f0106c5a:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106c5f	obj/kern/kernel.asm	/^f0106c5f:	e8 fd fd ff ff       	call   f0106a61 <lapicw>$/;"	l
f0106c64	obj/kern/kernel.asm	/^f0106c64:	ba 00 85 00 00       	mov    $0x8500,%edx$/;"	l
f0106c69	obj/kern/kernel.asm	/^f0106c69:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106c6e	obj/kern/kernel.asm	/^f0106c6e:	e8 ee fd ff ff       	call   f0106a61 <lapicw>$/;"	l
f0106c73	obj/kern/kernel.asm	/^f0106c73:	c1 ee 0c             	shr    $0xc,%esi$/;"	l
f0106c76	obj/kern/kernel.asm	/^f0106c76:	81 ce 00 06 00 00    	or     $0x600,%esi$/;"	l
f0106c7c	obj/kern/kernel.asm	/^f0106c7c:	89 da                	mov    %ebx,%edx$/;"	l
f0106c7e	obj/kern/kernel.asm	/^f0106c7e:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0106c83	obj/kern/kernel.asm	/^f0106c83:	e8 d9 fd ff ff       	call   f0106a61 <lapicw>$/;"	l
f0106c88	obj/kern/kernel.asm	/^f0106c88:	89 f2                	mov    %esi,%edx$/;"	l
f0106c8a	obj/kern/kernel.asm	/^f0106c8a:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106c8f	obj/kern/kernel.asm	/^f0106c8f:	e8 cd fd ff ff       	call   f0106a61 <lapicw>$/;"	l
f0106c94	obj/kern/kernel.asm	/^f0106c94:	89 da                	mov    %ebx,%edx$/;"	l
f0106c96	obj/kern/kernel.asm	/^f0106c96:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0106c9b	obj/kern/kernel.asm	/^f0106c9b:	e8 c1 fd ff ff       	call   f0106a61 <lapicw>$/;"	l
f0106ca0	obj/kern/kernel.asm	/^f0106ca0:	89 f2                	mov    %esi,%edx$/;"	l
f0106ca2	obj/kern/kernel.asm	/^f0106ca2:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106ca7	obj/kern/kernel.asm	/^f0106ca7:	e8 b5 fd ff ff       	call   f0106a61 <lapicw>$/;"	l
f0106cac	obj/kern/kernel.asm	/^f0106cac:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106caf	obj/kern/kernel.asm	/^f0106caf:	5b                   	pop    %ebx$/;"	l
f0106cb0	obj/kern/kernel.asm	/^f0106cb0:	5e                   	pop    %esi$/;"	l
f0106cb1	obj/kern/kernel.asm	/^f0106cb1:	5d                   	pop    %ebp$/;"	l
f0106cb2	obj/kern/kernel.asm	/^f0106cb2:	c3                   	ret    $/;"	l
f0106cb3	obj/kern/kernel.asm	/^f0106cb3 <lapic_ipi>:$/;"	l
f0106cb3	obj/kern/kernel.asm	/^f0106cb3:	55                   	push   %ebp$/;"	l
f0106cb4	obj/kern/kernel.asm	/^f0106cb4:	89 e5                	mov    %esp,%ebp$/;"	l
f0106cb6	obj/kern/kernel.asm	/^f0106cb6:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0106cb9	obj/kern/kernel.asm	/^f0106cb9:	81 ca 00 00 0c 00    	or     $0xc0000,%edx$/;"	l
f0106cbf	obj/kern/kernel.asm	/^f0106cbf:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106cc4	obj/kern/kernel.asm	/^f0106cc4:	e8 98 fd ff ff       	call   f0106a61 <lapicw>$/;"	l
f0106cc9	obj/kern/kernel.asm	/^f0106cc9:	8b 15 04 a0 2f f0    	mov    0xf02fa004,%edx$/;"	l
f0106ccf	obj/kern/kernel.asm	/^f0106ccf:	8b 82 00 03 00 00    	mov    0x300(%edx),%eax$/;"	l
f0106cd5	obj/kern/kernel.asm	/^f0106cd5:	f6 c4 10             	test   $0x10,%ah$/;"	l
f0106cd8	obj/kern/kernel.asm	/^f0106cd8:	75 f5                	jne    f0106ccf <lapic_ipi+0x1c>$/;"	l
f0106cda	obj/kern/kernel.asm	/^f0106cda:	5d                   	pop    %ebp$/;"	l
f0106cdb	obj/kern/kernel.asm	/^f0106cdb:	c3                   	ret    $/;"	l
f0106cdc	obj/kern/kernel.asm	/^f0106cdc <__spin_initlock>:$/;"	l
f0106cdc	obj/kern/kernel.asm	/^f0106cdc:	55                   	push   %ebp$/;"	l
f0106cdd	obj/kern/kernel.asm	/^f0106cdd:	89 e5                	mov    %esp,%ebp$/;"	l
f0106cdf	obj/kern/kernel.asm	/^f0106cdf:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106ce2	obj/kern/kernel.asm	/^f0106ce2:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0106ce8	obj/kern/kernel.asm	/^f0106ce8:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0106ceb	obj/kern/kernel.asm	/^f0106ceb:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
f0106cee	obj/kern/kernel.asm	/^f0106cee:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
f0106cf5	obj/kern/kernel.asm	/^f0106cf5:	5d                   	pop    %ebp$/;"	l
f0106cf6	obj/kern/kernel.asm	/^f0106cf6:	c3                   	ret    $/;"	l
f0106cf7	obj/kern/kernel.asm	/^f0106cf7 <spin_lock>:$/;"	l
f0106cf7	obj/kern/kernel.asm	/^f0106cf7:	55                   	push   %ebp$/;"	l
f0106cf8	obj/kern/kernel.asm	/^f0106cf8:	89 e5                	mov    %esp,%ebp$/;"	l
f0106cfa	obj/kern/kernel.asm	/^f0106cfa:	56                   	push   %esi$/;"	l
f0106cfb	obj/kern/kernel.asm	/^f0106cfb:	53                   	push   %ebx$/;"	l
f0106cfc	obj/kern/kernel.asm	/^f0106cfc:	83 ec 20             	sub    $0x20,%esp$/;"	l
f0106cff	obj/kern/kernel.asm	/^f0106cff:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0106d02	obj/kern/kernel.asm	/^f0106d02:	83 3b 00             	cmpl   $0x0,(%ebx)$/;"	l
f0106d05	obj/kern/kernel.asm	/^f0106d05:	75 07                	jne    f0106d0e <spin_lock+0x17>$/;"	l
f0106d07	obj/kern/kernel.asm	/^f0106d07:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
f0106d0c	obj/kern/kernel.asm	/^f0106d0c:	eb 42                	jmp    f0106d50 <spin_lock+0x59>$/;"	l
f0106d0e	obj/kern/kernel.asm	/^f0106d0e:	8b 73 08             	mov    0x8(%ebx),%esi$/;"	l
f0106d11	obj/kern/kernel.asm	/^f0106d11:	e8 63 fd ff ff       	call   f0106a79 <cpunum>$/;"	l
f0106d16	obj/kern/kernel.asm	/^f0106d16:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0106d19	obj/kern/kernel.asm	/^f0106d19:	05 20 90 2b f0       	add    $0xf02b9020,%eax$/;"	l
f0106d1e	obj/kern/kernel.asm	/^f0106d1e:	39 c6                	cmp    %eax,%esi$/;"	l
f0106d20	obj/kern/kernel.asm	/^f0106d20:	75 e5                	jne    f0106d07 <spin_lock+0x10>$/;"	l
f0106d22	obj/kern/kernel.asm	/^f0106d22:	8b 5b 04             	mov    0x4(%ebx),%ebx$/;"	l
f0106d25	obj/kern/kernel.asm	/^f0106d25:	e8 4f fd ff ff       	call   f0106a79 <cpunum>$/;"	l
f0106d2a	obj/kern/kernel.asm	/^f0106d2a:	89 5c 24 10          	mov    %ebx,0x10(%esp)$/;"	l
f0106d2e	obj/kern/kernel.asm	/^f0106d2e:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0106d32	obj/kern/kernel.asm	/^f0106d32:	c7 44 24 08 cc 97 10 	movl   $0xf01097cc,0x8(%esp)$/;"	l
f0106d39	obj/kern/kernel.asm	/^f0106d39:	f0 $/;"	l
f0106d3a	obj/kern/kernel.asm	/^f0106d3a:	c7 44 24 04 41 00 00 	movl   $0x41,0x4(%esp)$/;"	l
f0106d41	obj/kern/kernel.asm	/^f0106d41:	00 $/;"	l
f0106d42	obj/kern/kernel.asm	/^f0106d42:	c7 04 24 2e 98 10 f0 	movl   $0xf010982e,(%esp)$/;"	l
f0106d49	obj/kern/kernel.asm	/^f0106d49:	e8 f2 92 ff ff       	call   f0100040 <_panic>$/;"	l
f0106d4e	obj/kern/kernel.asm	/^f0106d4e:	f3 90                	pause  $/;"	l
f0106d50	obj/kern/kernel.asm	/^f0106d50:	89 d0                	mov    %edx,%eax$/;"	l
f0106d52	obj/kern/kernel.asm	/^f0106d52:	f0 87 03             	lock xchg %eax,(%ebx)$/;"	l
f0106d55	obj/kern/kernel.asm	/^f0106d55:	85 c0                	test   %eax,%eax$/;"	l
f0106d57	obj/kern/kernel.asm	/^f0106d57:	75 f5                	jne    f0106d4e <spin_lock+0x57>$/;"	l
f0106d59	obj/kern/kernel.asm	/^f0106d59:	e8 1b fd ff ff       	call   f0106a79 <cpunum>$/;"	l
f0106d5e	obj/kern/kernel.asm	/^f0106d5e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0106d61	obj/kern/kernel.asm	/^f0106d61:	05 20 90 2b f0       	add    $0xf02b9020,%eax$/;"	l
f0106d66	obj/kern/kernel.asm	/^f0106d66:	89 43 08             	mov    %eax,0x8(%ebx)$/;"	l
f0106d69	obj/kern/kernel.asm	/^f0106d69:	83 c3 0c             	add    $0xc,%ebx$/;"	l
f0106d6c	obj/kern/kernel.asm	/^f0106d6c:	89 ea                	mov    %ebp,%edx$/;"	l
f0106d6e	obj/kern/kernel.asm	/^f0106d6e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106d73	obj/kern/kernel.asm	/^f0106d73:	81 fa ff ff 7f ef    	cmp    $0xef7fffff,%edx$/;"	l
f0106d79	obj/kern/kernel.asm	/^f0106d79:	76 12                	jbe    f0106d8d <spin_lock+0x96>$/;"	l
f0106d7b	obj/kern/kernel.asm	/^f0106d7b:	8b 4a 04             	mov    0x4(%edx),%ecx$/;"	l
f0106d7e	obj/kern/kernel.asm	/^f0106d7e:	89 0c 83             	mov    %ecx,(%ebx,%eax,4)$/;"	l
f0106d81	obj/kern/kernel.asm	/^f0106d81:	8b 12                	mov    (%edx),%edx$/;"	l
f0106d83	obj/kern/kernel.asm	/^f0106d83:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106d86	obj/kern/kernel.asm	/^f0106d86:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
f0106d89	obj/kern/kernel.asm	/^f0106d89:	75 e8                	jne    f0106d73 <spin_lock+0x7c>$/;"	l
f0106d8b	obj/kern/kernel.asm	/^f0106d8b:	eb 0f                	jmp    f0106d9c <spin_lock+0xa5>$/;"	l
f0106d8d	obj/kern/kernel.asm	/^f0106d8d:	c7 04 83 00 00 00 00 	movl   $0x0,(%ebx,%eax,4)$/;"	l
f0106d94	obj/kern/kernel.asm	/^f0106d94:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106d97	obj/kern/kernel.asm	/^f0106d97:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f0106d9a	obj/kern/kernel.asm	/^f0106d9a:	7e f1                	jle    f0106d8d <spin_lock+0x96>$/;"	l
f0106d9c	obj/kern/kernel.asm	/^f0106d9c:	83 c4 20             	add    $0x20,%esp$/;"	l
f0106d9f	obj/kern/kernel.asm	/^f0106d9f:	5b                   	pop    %ebx$/;"	l
f0106da0	obj/kern/kernel.asm	/^f0106da0:	5e                   	pop    %esi$/;"	l
f0106da1	obj/kern/kernel.asm	/^f0106da1:	5d                   	pop    %ebp$/;"	l
f0106da2	obj/kern/kernel.asm	/^f0106da2:	c3                   	ret    $/;"	l
f0106da3	obj/kern/kernel.asm	/^f0106da3 <spin_unlock>:$/;"	l
f0106da3	obj/kern/kernel.asm	/^f0106da3:	55                   	push   %ebp$/;"	l
f0106da4	obj/kern/kernel.asm	/^f0106da4:	89 e5                	mov    %esp,%ebp$/;"	l
f0106da6	obj/kern/kernel.asm	/^f0106da6:	57                   	push   %edi$/;"	l
f0106da7	obj/kern/kernel.asm	/^f0106da7:	56                   	push   %esi$/;"	l
f0106da8	obj/kern/kernel.asm	/^f0106da8:	53                   	push   %ebx$/;"	l
f0106da9	obj/kern/kernel.asm	/^f0106da9:	83 ec 6c             	sub    $0x6c,%esp$/;"	l
f0106dac	obj/kern/kernel.asm	/^f0106dac:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0106daf	obj/kern/kernel.asm	/^f0106daf:	83 3e 00             	cmpl   $0x0,(%esi)$/;"	l
f0106db2	obj/kern/kernel.asm	/^f0106db2:	74 18                	je     f0106dcc <spin_unlock+0x29>$/;"	l
f0106db4	obj/kern/kernel.asm	/^f0106db4:	8b 5e 08             	mov    0x8(%esi),%ebx$/;"	l
f0106db7	obj/kern/kernel.asm	/^f0106db7:	e8 bd fc ff ff       	call   f0106a79 <cpunum>$/;"	l
f0106dbc	obj/kern/kernel.asm	/^f0106dbc:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0106dbf	obj/kern/kernel.asm	/^f0106dbf:	05 20 90 2b f0       	add    $0xf02b9020,%eax$/;"	l
f0106dc4	obj/kern/kernel.asm	/^f0106dc4:	39 c3                	cmp    %eax,%ebx$/;"	l
f0106dc6	obj/kern/kernel.asm	/^f0106dc6:	0f 84 ce 00 00 00    	je     f0106e9a <spin_unlock+0xf7>$/;"	l
f0106dcc	obj/kern/kernel.asm	/^f0106dcc:	c7 44 24 08 28 00 00 	movl   $0x28,0x8(%esp)$/;"	l
f0106dd3	obj/kern/kernel.asm	/^f0106dd3:	00 $/;"	l
f0106dd4	obj/kern/kernel.asm	/^f0106dd4:	8d 46 0c             	lea    0xc(%esi),%eax$/;"	l
f0106dd7	obj/kern/kernel.asm	/^f0106dd7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106ddb	obj/kern/kernel.asm	/^f0106ddb:	8d 5d c0             	lea    -0x40(%ebp),%ebx$/;"	l
f0106dde	obj/kern/kernel.asm	/^f0106dde:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0106de1	obj/kern/kernel.asm	/^f0106de1:	e8 8e f6 ff ff       	call   f0106474 <memmove>$/;"	l
f0106de6	obj/kern/kernel.asm	/^f0106de6:	8b 46 08             	mov    0x8(%esi),%eax$/;"	l
f0106de9	obj/kern/kernel.asm	/^f0106de9:	0f b6 38             	movzbl (%eax),%edi$/;"	l
f0106dec	obj/kern/kernel.asm	/^f0106dec:	8b 76 04             	mov    0x4(%esi),%esi$/;"	l
f0106def	obj/kern/kernel.asm	/^f0106def:	e8 85 fc ff ff       	call   f0106a79 <cpunum>$/;"	l
f0106df4	obj/kern/kernel.asm	/^f0106df4:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f0106df8	obj/kern/kernel.asm	/^f0106df8:	89 74 24 08          	mov    %esi,0x8(%esp)$/;"	l
f0106dfc	obj/kern/kernel.asm	/^f0106dfc:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106e00	obj/kern/kernel.asm	/^f0106e00:	c7 04 24 f8 97 10 f0 	movl   $0xf01097f8,(%esp)$/;"	l
f0106e07	obj/kern/kernel.asm	/^f0106e07:	e8 e0 d1 ff ff       	call   f0103fec <cprintf>$/;"	l
f0106e0c	obj/kern/kernel.asm	/^f0106e0c:	8d 7d a8             	lea    -0x58(%ebp),%edi$/;"	l
f0106e0f	obj/kern/kernel.asm	/^f0106e0f:	eb 65                	jmp    f0106e76 <spin_unlock+0xd3>$/;"	l
f0106e11	obj/kern/kernel.asm	/^f0106e11:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0106e15	obj/kern/kernel.asm	/^f0106e15:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106e18	obj/kern/kernel.asm	/^f0106e18:	e8 f7 e9 ff ff       	call   f0105814 <debuginfo_eip>$/;"	l
f0106e1d	obj/kern/kernel.asm	/^f0106e1d:	85 c0                	test   %eax,%eax$/;"	l
f0106e1f	obj/kern/kernel.asm	/^f0106e1f:	78 39                	js     f0106e5a <spin_unlock+0xb7>$/;"	l
f0106e21	obj/kern/kernel.asm	/^f0106e21:	8b 06                	mov    (%esi),%eax$/;"	l
f0106e23	obj/kern/kernel.asm	/^f0106e23:	89 c2                	mov    %eax,%edx$/;"	l
f0106e25	obj/kern/kernel.asm	/^f0106e25:	2b 55 b8             	sub    -0x48(%ebp),%edx$/;"	l
f0106e28	obj/kern/kernel.asm	/^f0106e28:	89 54 24 18          	mov    %edx,0x18(%esp)$/;"	l
f0106e2c	obj/kern/kernel.asm	/^f0106e2c:	8b 55 b0             	mov    -0x50(%ebp),%edx$/;"	l
f0106e2f	obj/kern/kernel.asm	/^f0106e2f:	89 54 24 14          	mov    %edx,0x14(%esp)$/;"	l
f0106e33	obj/kern/kernel.asm	/^f0106e33:	8b 55 b4             	mov    -0x4c(%ebp),%edx$/;"	l
f0106e36	obj/kern/kernel.asm	/^f0106e36:	89 54 24 10          	mov    %edx,0x10(%esp)$/;"	l
f0106e3a	obj/kern/kernel.asm	/^f0106e3a:	8b 55 ac             	mov    -0x54(%ebp),%edx$/;"	l
f0106e3d	obj/kern/kernel.asm	/^f0106e3d:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0106e41	obj/kern/kernel.asm	/^f0106e41:	8b 55 a8             	mov    -0x58(%ebp),%edx$/;"	l
f0106e44	obj/kern/kernel.asm	/^f0106e44:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0106e48	obj/kern/kernel.asm	/^f0106e48:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106e4c	obj/kern/kernel.asm	/^f0106e4c:	c7 04 24 3e 98 10 f0 	movl   $0xf010983e,(%esp)$/;"	l
f0106e53	obj/kern/kernel.asm	/^f0106e53:	e8 94 d1 ff ff       	call   f0103fec <cprintf>$/;"	l
f0106e58	obj/kern/kernel.asm	/^f0106e58:	eb 12                	jmp    f0106e6c <spin_unlock+0xc9>$/;"	l
f0106e5a	obj/kern/kernel.asm	/^f0106e5a:	8b 06                	mov    (%esi),%eax$/;"	l
f0106e5c	obj/kern/kernel.asm	/^f0106e5c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106e60	obj/kern/kernel.asm	/^f0106e60:	c7 04 24 55 98 10 f0 	movl   $0xf0109855,(%esp)$/;"	l
f0106e67	obj/kern/kernel.asm	/^f0106e67:	e8 80 d1 ff ff       	call   f0103fec <cprintf>$/;"	l
f0106e6c	obj/kern/kernel.asm	/^f0106e6c:	83 c3 04             	add    $0x4,%ebx$/;"	l
f0106e6f	obj/kern/kernel.asm	/^f0106e6f:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
f0106e72	obj/kern/kernel.asm	/^f0106e72:	39 c3                	cmp    %eax,%ebx$/;"	l
f0106e74	obj/kern/kernel.asm	/^f0106e74:	74 08                	je     f0106e7e <spin_unlock+0xdb>$/;"	l
f0106e76	obj/kern/kernel.asm	/^f0106e76:	89 de                	mov    %ebx,%esi$/;"	l
f0106e78	obj/kern/kernel.asm	/^f0106e78:	8b 03                	mov    (%ebx),%eax$/;"	l
f0106e7a	obj/kern/kernel.asm	/^f0106e7a:	85 c0                	test   %eax,%eax$/;"	l
f0106e7c	obj/kern/kernel.asm	/^f0106e7c:	75 93                	jne    f0106e11 <spin_unlock+0x6e>$/;"	l
f0106e7e	obj/kern/kernel.asm	/^f0106e7e:	c7 44 24 08 5d 98 10 	movl   $0xf010985d,0x8(%esp)$/;"	l
f0106e85	obj/kern/kernel.asm	/^f0106e85:	f0 $/;"	l
f0106e86	obj/kern/kernel.asm	/^f0106e86:	c7 44 24 04 67 00 00 	movl   $0x67,0x4(%esp)$/;"	l
f0106e8d	obj/kern/kernel.asm	/^f0106e8d:	00 $/;"	l
f0106e8e	obj/kern/kernel.asm	/^f0106e8e:	c7 04 24 2e 98 10 f0 	movl   $0xf010982e,(%esp)$/;"	l
f0106e95	obj/kern/kernel.asm	/^f0106e95:	e8 a6 91 ff ff       	call   f0100040 <_panic>$/;"	l
f0106e9a	obj/kern/kernel.asm	/^f0106e9a:	c7 46 0c 00 00 00 00 	movl   $0x0,0xc(%esi)$/;"	l
f0106ea1	obj/kern/kernel.asm	/^f0106ea1:	c7 46 08 00 00 00 00 	movl   $0x0,0x8(%esi)$/;"	l
f0106ea8	obj/kern/kernel.asm	/^f0106ea8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106ead	obj/kern/kernel.asm	/^f0106ead:	f0 87 06             	lock xchg %eax,(%esi)$/;"	l
f0106eb0	obj/kern/kernel.asm	/^f0106eb0:	83 c4 6c             	add    $0x6c,%esp$/;"	l
f0106eb3	obj/kern/kernel.asm	/^f0106eb3:	5b                   	pop    %ebx$/;"	l
f0106eb4	obj/kern/kernel.asm	/^f0106eb4:	5e                   	pop    %esi$/;"	l
f0106eb5	obj/kern/kernel.asm	/^f0106eb5:	5f                   	pop    %edi$/;"	l
f0106eb6	obj/kern/kernel.asm	/^f0106eb6:	5d                   	pop    %ebp$/;"	l
f0106eb7	obj/kern/kernel.asm	/^f0106eb7:	c3                   	ret    $/;"	l
f0106eb8	obj/kern/kernel.asm	/^f0106eb8 <init_transmit>:$/;"	l
f0106eb8	obj/kern/kernel.asm	/^f0106eb8:	55                   	push   %ebp$/;"	l
f0106eb9	obj/kern/kernel.asm	/^f0106eb9:	89 e5                	mov    %esp,%ebp$/;"	l
f0106ebb	obj/kern/kernel.asm	/^f0106ebb:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0106ebe	obj/kern/kernel.asm	/^f0106ebe:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0106ec5	obj/kern/kernel.asm	/^f0106ec5:	e8 71 a2 ff ff       	call   f010113b <page_alloc>$/;"	l
f0106eca	obj/kern/kernel.asm	/^f0106eca:	85 c0                	test   %eax,%eax$/;"	l
f0106ecc	obj/kern/kernel.asm	/^f0106ecc:	75 1c                	jne    f0106eea <init_transmit+0x32>$/;"	l
f0106ece	obj/kern/kernel.asm	/^f0106ece:	c7 44 24 08 78 98 10 	movl   $0xf0109878,0x8(%esp)$/;"	l
f0106ed5	obj/kern/kernel.asm	/^f0106ed5:	f0 $/;"	l
f0106ed6	obj/kern/kernel.asm	/^f0106ed6:	c7 44 24 04 2c 00 00 	movl   $0x2c,0x4(%esp)$/;"	l
f0106edd	obj/kern/kernel.asm	/^f0106edd:	00 $/;"	l
f0106ede	obj/kern/kernel.asm	/^f0106ede:	c7 04 24 9a 98 10 f0 	movl   $0xf010989a,(%esp)$/;"	l
f0106ee5	obj/kern/kernel.asm	/^f0106ee5:	e8 56 91 ff ff       	call   f0100040 <_panic>$/;"	l
f0106eea	obj/kern/kernel.asm	/^f0106eea:	2b 05 9c 8e 2b f0    	sub    0xf02b8e9c,%eax$/;"	l
f0106ef0	obj/kern/kernel.asm	/^f0106ef0:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0106ef3	obj/kern/kernel.asm	/^f0106ef3:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0106ef6	obj/kern/kernel.asm	/^f0106ef6:	89 c2                	mov    %eax,%edx$/;"	l
f0106ef8	obj/kern/kernel.asm	/^f0106ef8:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0106efb	obj/kern/kernel.asm	/^f0106efb:	3b 15 94 8e 2b f0    	cmp    0xf02b8e94,%edx$/;"	l
f0106f01	obj/kern/kernel.asm	/^f0106f01:	72 20                	jb     f0106f23 <init_transmit+0x6b>$/;"	l
f0106f03	obj/kern/kernel.asm	/^f0106f03:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0106f07	obj/kern/kernel.asm	/^f0106f07:	c7 44 24 08 44 7a 10 	movl   $0xf0107a44,0x8(%esp)$/;"	l
f0106f0e	obj/kern/kernel.asm	/^f0106f0e:	f0 $/;"	l
f0106f0f	obj/kern/kernel.asm	/^f0106f0f:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0106f16	obj/kern/kernel.asm	/^f0106f16:	00 $/;"	l
f0106f17	obj/kern/kernel.asm	/^f0106f17:	c7 04 24 9d 89 10 f0 	movl   $0xf010899d,(%esp)$/;"	l
f0106f1e	obj/kern/kernel.asm	/^f0106f1e:	e8 1d 91 ff ff       	call   f0100040 <_panic>$/;"	l
f0106f23	obj/kern/kernel.asm	/^f0106f23:	8d 88 00 00 00 f0    	lea    -0x10000000(%eax),%ecx$/;"	l
f0106f29	obj/kern/kernel.asm	/^f0106f29:	89 0d 08 a0 2f f0    	mov    %ecx,0xf02fa008$/;"	l
f0106f2f	obj/kern/kernel.asm	/^f0106f2f:	8b 15 0c a0 2f f0    	mov    0xf02fa00c,%edx$/;"	l
f0106f35	obj/kern/kernel.asm	/^f0106f35:	81 f9 ff ff ff ef    	cmp    $0xefffffff,%ecx$/;"	l
f0106f3b	obj/kern/kernel.asm	/^f0106f3b:	77 20                	ja     f0106f5d <init_transmit+0xa5>$/;"	l
f0106f3d	obj/kern/kernel.asm	/^f0106f3d:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f0106f41	obj/kern/kernel.asm	/^f0106f41:	c7 44 24 08 68 7a 10 	movl   $0xf0107a68,0x8(%esp)$/;"	l
f0106f48	obj/kern/kernel.asm	/^f0106f48:	f0 $/;"	l
f0106f49	obj/kern/kernel.asm	/^f0106f49:	c7 44 24 04 2f 00 00 	movl   $0x2f,0x4(%esp)$/;"	l
f0106f50	obj/kern/kernel.asm	/^f0106f50:	00 $/;"	l
f0106f51	obj/kern/kernel.asm	/^f0106f51:	c7 04 24 9a 98 10 f0 	movl   $0xf010989a,(%esp)$/;"	l
f0106f58	obj/kern/kernel.asm	/^f0106f58:	e8 e3 90 ff ff       	call   f0100040 <_panic>$/;"	l
f0106f5d	obj/kern/kernel.asm	/^f0106f5d:	89 82 00 38 00 00    	mov    %eax,0x3800(%edx)$/;"	l
f0106f63	obj/kern/kernel.asm	/^f0106f63:	c7 82 04 38 00 00 00 	movl   $0x0,0x3804(%edx)$/;"	l
f0106f6a	obj/kern/kernel.asm	/^f0106f6a:	00 00 00 $/;"	l
f0106f6d	obj/kern/kernel.asm	/^f0106f6d:	c7 82 08 38 00 00 00 	movl   $0x1000,0x3808(%edx)$/;"	l
f0106f74	obj/kern/kernel.asm	/^f0106f74:	10 00 00 $/;"	l
f0106f77	obj/kern/kernel.asm	/^f0106f77:	c7 82 10 38 00 00 00 	movl   $0x0,0x3810(%edx)$/;"	l
f0106f7e	obj/kern/kernel.asm	/^f0106f7e:	00 00 00 $/;"	l
f0106f81	obj/kern/kernel.asm	/^f0106f81:	c7 82 18 38 00 00 00 	movl   $0x0,0x3818(%edx)$/;"	l
f0106f88	obj/kern/kernel.asm	/^f0106f88:	00 00 00 $/;"	l
f0106f8b	obj/kern/kernel.asm	/^f0106f8b:	8b 82 00 04 00 00    	mov    0x400(%edx),%eax$/;"	l
f0106f91	obj/kern/kernel.asm	/^f0106f91:	83 c8 0a             	or     $0xa,%eax$/;"	l
f0106f94	obj/kern/kernel.asm	/^f0106f94:	89 82 00 04 00 00    	mov    %eax,0x400(%edx)$/;"	l
f0106f9a	obj/kern/kernel.asm	/^f0106f9a:	8b 82 00 04 00 00    	mov    0x400(%edx),%eax$/;"	l
f0106fa0	obj/kern/kernel.asm	/^f0106fa0:	25 0f f0 ff ff       	and    $0xfffff00f,%eax$/;"	l
f0106fa5	obj/kern/kernel.asm	/^f0106fa5:	89 82 00 04 00 00    	mov    %eax,0x400(%edx)$/;"	l
f0106fab	obj/kern/kernel.asm	/^f0106fab:	8b 82 00 04 00 00    	mov    0x400(%edx),%eax$/;"	l
f0106fb1	obj/kern/kernel.asm	/^f0106fb1:	80 cc 01             	or     $0x1,%ah$/;"	l
f0106fb4	obj/kern/kernel.asm	/^f0106fb4:	89 82 00 04 00 00    	mov    %eax,0x400(%edx)$/;"	l
f0106fba	obj/kern/kernel.asm	/^f0106fba:	8b 82 00 04 00 00    	mov    0x400(%edx),%eax$/;"	l
f0106fc0	obj/kern/kernel.asm	/^f0106fc0:	25 ff 0f c0 ff       	and    $0xffc00fff,%eax$/;"	l
f0106fc5	obj/kern/kernel.asm	/^f0106fc5:	89 82 00 04 00 00    	mov    %eax,0x400(%edx)$/;"	l
f0106fcb	obj/kern/kernel.asm	/^f0106fcb:	8b 82 00 04 00 00    	mov    0x400(%edx),%eax$/;"	l
f0106fd1	obj/kern/kernel.asm	/^f0106fd1:	0d 00 00 04 00       	or     $0x40000,%eax$/;"	l
f0106fd6	obj/kern/kernel.asm	/^f0106fd6:	89 82 00 04 00 00    	mov    %eax,0x400(%edx)$/;"	l
f0106fdc	obj/kern/kernel.asm	/^f0106fdc:	8b 82 10 04 00 00    	mov    0x410(%edx),%eax$/;"	l
f0106fe2	obj/kern/kernel.asm	/^f0106fe2:	25 00 fc ff ff       	and    $0xfffffc00,%eax$/;"	l
f0106fe7	obj/kern/kernel.asm	/^f0106fe7:	89 82 10 04 00 00    	mov    %eax,0x410(%edx)$/;"	l
f0106fed	obj/kern/kernel.asm	/^f0106fed:	8b 82 10 04 00 00    	mov    0x410(%edx),%eax$/;"	l
f0106ff3	obj/kern/kernel.asm	/^f0106ff3:	83 c8 0a             	or     $0xa,%eax$/;"	l
f0106ff6	obj/kern/kernel.asm	/^f0106ff6:	89 82 10 04 00 00    	mov    %eax,0x410(%edx)$/;"	l
f0106ffc	obj/kern/kernel.asm	/^f0106ffc:	8b 82 10 04 00 00    	mov    0x410(%edx),%eax$/;"	l
f0107002	obj/kern/kernel.asm	/^f0107002:	25 ff 03 f0 ff       	and    $0xfff003ff,%eax$/;"	l
f0107007	obj/kern/kernel.asm	/^f0107007:	89 82 10 04 00 00    	mov    %eax,0x410(%edx)$/;"	l
f010700d	obj/kern/kernel.asm	/^f010700d:	8b 82 10 04 00 00    	mov    0x410(%edx),%eax$/;"	l
f0107013	obj/kern/kernel.asm	/^f0107013:	80 cc 20             	or     $0x20,%ah$/;"	l
f0107016	obj/kern/kernel.asm	/^f0107016:	89 82 10 04 00 00    	mov    %eax,0x410(%edx)$/;"	l
f010701c	obj/kern/kernel.asm	/^f010701c:	8b 82 10 04 00 00    	mov    0x410(%edx),%eax$/;"	l
f0107022	obj/kern/kernel.asm	/^f0107022:	25 ff ff 0f c0       	and    $0xc00fffff,%eax$/;"	l
f0107027	obj/kern/kernel.asm	/^f0107027:	89 82 10 04 00 00    	mov    %eax,0x410(%edx)$/;"	l
f010702d	obj/kern/kernel.asm	/^f010702d:	8b 82 10 04 00 00    	mov    0x410(%edx),%eax$/;"	l
f0107033	obj/kern/kernel.asm	/^f0107033:	0d 00 00 60 00       	or     $0x600000,%eax$/;"	l
f0107038	obj/kern/kernel.asm	/^f0107038:	89 82 10 04 00 00    	mov    %eax,0x410(%edx)$/;"	l
f010703e	obj/kern/kernel.asm	/^f010703e:	8b 82 10 04 00 00    	mov    0x410(%edx),%eax$/;"	l
f0107044	obj/kern/kernel.asm	/^f0107044:	25 ff ff ff 3f       	and    $0x3fffffff,%eax$/;"	l
f0107049	obj/kern/kernel.asm	/^f0107049:	89 82 10 04 00 00    	mov    %eax,0x410(%edx)$/;"	l
f010704f	obj/kern/kernel.asm	/^f010704f:	8b 82 10 04 00 00    	mov    0x410(%edx),%eax$/;"	l
f0107055	obj/kern/kernel.asm	/^f0107055:	89 82 10 04 00 00    	mov    %eax,0x410(%edx)$/;"	l
f010705b	obj/kern/kernel.asm	/^f010705b:	c9                   	leave  $/;"	l
f010705c	obj/kern/kernel.asm	/^f010705c:	c3                   	ret    $/;"	l
f010705d	obj/kern/kernel.asm	/^f010705d <pci_e1000_attach>:$/;"	l
f010705d	obj/kern/kernel.asm	/^f010705d:	55                   	push   %ebp$/;"	l
f010705e	obj/kern/kernel.asm	/^f010705e:	89 e5                	mov    %esp,%ebp$/;"	l
f0107060	obj/kern/kernel.asm	/^f0107060:	53                   	push   %ebx$/;"	l
f0107061	obj/kern/kernel.asm	/^f0107061:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0107064	obj/kern/kernel.asm	/^f0107064:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0107067	obj/kern/kernel.asm	/^f0107067:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010706a	obj/kern/kernel.asm	/^f010706a:	e8 3e 05 00 00       	call   f01075ad <pci_func_enable>$/;"	l
f010706f	obj/kern/kernel.asm	/^f010706f:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f0107072	obj/kern/kernel.asm	/^f0107072:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0107076	obj/kern/kernel.asm	/^f0107076:	8b 43 14             	mov    0x14(%ebx),%eax$/;"	l
f0107079	obj/kern/kernel.asm	/^f0107079:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010707c	obj/kern/kernel.asm	/^f010707c:	e8 94 a4 ff ff       	call   f0101515 <mmio_map_region>$/;"	l
f0107081	obj/kern/kernel.asm	/^f0107081:	a3 0c a0 2f f0       	mov    %eax,0xf02fa00c$/;"	l
f0107086	obj/kern/kernel.asm	/^f0107086:	e8 2d fe ff ff       	call   f0106eb8 <init_transmit>$/;"	l
f010708b	obj/kern/kernel.asm	/^f010708b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0107090	obj/kern/kernel.asm	/^f0107090:	83 c4 14             	add    $0x14,%esp$/;"	l
f0107093	obj/kern/kernel.asm	/^f0107093:	5b                   	pop    %ebx$/;"	l
f0107094	obj/kern/kernel.asm	/^f0107094:	5d                   	pop    %ebp$/;"	l
f0107095	obj/kern/kernel.asm	/^f0107095:	c3                   	ret    $/;"	l
f0107096	obj/kern/kernel.asm	/^f0107096 <transmit_packet>:$/;"	l
f0107096	obj/kern/kernel.asm	/^f0107096:	55                   	push   %ebp$/;"	l
f0107097	obj/kern/kernel.asm	/^f0107097:	89 e5                	mov    %esp,%ebp$/;"	l
f0107099	obj/kern/kernel.asm	/^f0107099:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010709c	obj/kern/kernel.asm	/^f010709c:	a1 0c a0 2f f0       	mov    0xf02fa00c,%eax$/;"	l
f01070a1	obj/kern/kernel.asm	/^f01070a1:	8b 80 18 38 00 00    	mov    0x3818(%eax),%eax$/;"	l
f01070a7	obj/kern/kernel.asm	/^f01070a7:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f01070aa	obj/kern/kernel.asm	/^f01070aa:	03 05 08 a0 2f f0    	add    0xf02fa008,%eax$/;"	l
f01070b0	obj/kern/kernel.asm	/^f01070b0:	83 3d f4 43 12 f0 00 	cmpl   $0x0,0xf01243f4$/;"	l
f01070b7	obj/kern/kernel.asm	/^f01070b7:	75 06                	jne    f01070bf <transmit_packet+0x29>$/;"	l
f01070b9	obj/kern/kernel.asm	/^f01070b9:	f6 40 0c 01          	testb  $0x1,0xc(%eax)$/;"	l
f01070bd	obj/kern/kernel.asm	/^f01070bd:	74 6e                	je     f010712d <transmit_packet+0x97>$/;"	l
f01070bf	obj/kern/kernel.asm	/^f01070bf:	8d 4a d0             	lea    -0x30(%edx),%ecx$/;"	l
f01070c2	obj/kern/kernel.asm	/^f01070c2:	81 f9 70 3f 00 00    	cmp    $0x3f70,%ecx$/;"	l
f01070c8	obj/kern/kernel.asm	/^f01070c8:	77 6a                	ja     f0107134 <transmit_packet+0x9e>$/;"	l
f01070ca	obj/kern/kernel.asm	/^f01070ca:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f01070cd	obj/kern/kernel.asm	/^f01070cd:	89 08                	mov    %ecx,(%eax)$/;"	l
f01070cf	obj/kern/kernel.asm	/^f01070cf:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)$/;"	l
f01070d6	obj/kern/kernel.asm	/^f01070d6:	66 89 50 08          	mov    %dx,0x8(%eax)$/;"	l
f01070da	obj/kern/kernel.asm	/^f01070da:	81 48 08 00 00 00 08 	orl    $0x8000000,0x8(%eax)$/;"	l
f01070e1	obj/kern/kernel.asm	/^f01070e1:	a1 0c a0 2f f0       	mov    0xf02fa00c,%eax$/;"	l
f01070e6	obj/kern/kernel.asm	/^f01070e6:	8b 88 18 38 00 00    	mov    0x3818(%eax),%ecx$/;"	l
f01070ec	obj/kern/kernel.asm	/^f01070ec:	8b 90 08 38 00 00    	mov    0x3808(%eax),%edx$/;"	l
f01070f2	obj/kern/kernel.asm	/^f01070f2:	83 c1 01             	add    $0x1,%ecx$/;"	l
f01070f5	obj/kern/kernel.asm	/^f01070f5:	c1 e1 04             	shl    $0x4,%ecx$/;"	l
f01070f8	obj/kern/kernel.asm	/^f01070f8:	39 d1                	cmp    %edx,%ecx$/;"	l
f01070fa	obj/kern/kernel.asm	/^f01070fa:	72 1b                	jb     f0107117 <transmit_packet+0x81>$/;"	l
f01070fc	obj/kern/kernel.asm	/^f01070fc:	c7 05 f4 43 12 f0 00 	movl   $0x0,0xf01243f4$/;"	l
f0107103	obj/kern/kernel.asm	/^f0107103:	00 00 00 $/;"	l
f0107106	obj/kern/kernel.asm	/^f0107106:	c7 80 18 38 00 00 00 	movl   $0x0,0x3818(%eax)$/;"	l
f010710d	obj/kern/kernel.asm	/^f010710d:	00 00 00 $/;"	l
f0107110	obj/kern/kernel.asm	/^f0107110:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0107115	obj/kern/kernel.asm	/^f0107115:	eb 22                	jmp    f0107139 <transmit_packet+0xa3>$/;"	l
f0107117	obj/kern/kernel.asm	/^f0107117:	8b 90 18 38 00 00    	mov    0x3818(%eax),%edx$/;"	l
f010711d	obj/kern/kernel.asm	/^f010711d:	83 c2 01             	add    $0x1,%edx$/;"	l
f0107120	obj/kern/kernel.asm	/^f0107120:	89 90 18 38 00 00    	mov    %edx,0x3818(%eax)$/;"	l
f0107126	obj/kern/kernel.asm	/^f0107126:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010712b	obj/kern/kernel.asm	/^f010712b:	eb 0c                	jmp    f0107139 <transmit_packet+0xa3>$/;"	l
f010712d	obj/kern/kernel.asm	/^f010712d:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax$/;"	l
f0107132	obj/kern/kernel.asm	/^f0107132:	eb 05                	jmp    f0107139 <transmit_packet+0xa3>$/;"	l
f0107134	obj/kern/kernel.asm	/^f0107134:	b8 ef ff ff ff       	mov    $0xffffffef,%eax$/;"	l
f0107139	obj/kern/kernel.asm	/^f0107139:	5d                   	pop    %ebp$/;"	l
f010713a	obj/kern/kernel.asm	/^f010713a:	c3                   	ret    $/;"	l
f010713b	obj/kern/kernel.asm	/^f010713b <pci_attach_match>:$/;"	l
f010713b	obj/kern/kernel.asm	/^f010713b:	55                   	push   %ebp$/;"	l
f010713c	obj/kern/kernel.asm	/^f010713c:	89 e5                	mov    %esp,%ebp$/;"	l
f010713e	obj/kern/kernel.asm	/^f010713e:	57                   	push   %edi$/;"	l
f010713f	obj/kern/kernel.asm	/^f010713f:	56                   	push   %esi$/;"	l
f0107140	obj/kern/kernel.asm	/^f0107140:	53                   	push   %ebx$/;"	l
f0107141	obj/kern/kernel.asm	/^f0107141:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0107144	obj/kern/kernel.asm	/^f0107144:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0107147	obj/kern/kernel.asm	/^f0107147:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f010714a	obj/kern/kernel.asm	/^f010714a:	eb 41                	jmp    f010718d <pci_attach_match+0x52>$/;"	l
f010714c	obj/kern/kernel.asm	/^f010714c:	39 3b                	cmp    %edi,(%ebx)$/;"	l
f010714e	obj/kern/kernel.asm	/^f010714e:	75 3a                	jne    f010718a <pci_attach_match+0x4f>$/;"	l
f0107150	obj/kern/kernel.asm	/^f0107150:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0107153	obj/kern/kernel.asm	/^f0107153:	39 56 04             	cmp    %edx,0x4(%esi)$/;"	l
f0107156	obj/kern/kernel.asm	/^f0107156:	75 32                	jne    f010718a <pci_attach_match+0x4f>$/;"	l
f0107158	obj/kern/kernel.asm	/^f0107158:	8b 4d 14             	mov    0x14(%ebp),%ecx$/;"	l
f010715b	obj/kern/kernel.asm	/^f010715b:	89 0c 24             	mov    %ecx,(%esp)$/;"	l
f010715e	obj/kern/kernel.asm	/^f010715e:	ff d0                	call   *%eax$/;"	l
f0107160	obj/kern/kernel.asm	/^f0107160:	85 c0                	test   %eax,%eax$/;"	l
f0107162	obj/kern/kernel.asm	/^f0107162:	7f 32                	jg     f0107196 <pci_attach_match+0x5b>$/;"	l
f0107164	obj/kern/kernel.asm	/^f0107164:	85 c0                	test   %eax,%eax$/;"	l
f0107166	obj/kern/kernel.asm	/^f0107166:	79 22                	jns    f010718a <pci_attach_match+0x4f>$/;"	l
f0107168	obj/kern/kernel.asm	/^f0107168:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f010716c	obj/kern/kernel.asm	/^f010716c:	8b 46 08             	mov    0x8(%esi),%eax$/;"	l
f010716f	obj/kern/kernel.asm	/^f010716f:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0107173	obj/kern/kernel.asm	/^f0107173:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0107176	obj/kern/kernel.asm	/^f0107176:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010717a	obj/kern/kernel.asm	/^f010717a:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f010717e	obj/kern/kernel.asm	/^f010717e:	c7 04 24 a8 98 10 f0 	movl   $0xf01098a8,(%esp)$/;"	l
f0107185	obj/kern/kernel.asm	/^f0107185:	e8 62 ce ff ff       	call   f0103fec <cprintf>$/;"	l
f010718a	obj/kern/kernel.asm	/^f010718a:	83 c3 0c             	add    $0xc,%ebx$/;"	l
f010718d	obj/kern/kernel.asm	/^f010718d:	89 de                	mov    %ebx,%esi$/;"	l
f010718f	obj/kern/kernel.asm	/^f010718f:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0107192	obj/kern/kernel.asm	/^f0107192:	85 c0                	test   %eax,%eax$/;"	l
f0107194	obj/kern/kernel.asm	/^f0107194:	75 b6                	jne    f010714c <pci_attach_match+0x11>$/;"	l
f0107196	obj/kern/kernel.asm	/^f0107196:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0107199	obj/kern/kernel.asm	/^f0107199:	5b                   	pop    %ebx$/;"	l
f010719a	obj/kern/kernel.asm	/^f010719a:	5e                   	pop    %esi$/;"	l
f010719b	obj/kern/kernel.asm	/^f010719b:	5f                   	pop    %edi$/;"	l
f010719c	obj/kern/kernel.asm	/^f010719c:	5d                   	pop    %ebp$/;"	l
f010719d	obj/kern/kernel.asm	/^f010719d:	c3                   	ret    $/;"	l
f010719e	obj/kern/kernel.asm	/^f010719e <pci_conf1_set_addr>:$/;"	l
f010719e	obj/kern/kernel.asm	/^f010719e:	55                   	push   %ebp$/;"	l
f010719f	obj/kern/kernel.asm	/^f010719f:	89 e5                	mov    %esp,%ebp$/;"	l
f01071a1	obj/kern/kernel.asm	/^f01071a1:	56                   	push   %esi$/;"	l
f01071a2	obj/kern/kernel.asm	/^f01071a2:	53                   	push   %ebx$/;"	l
f01071a3	obj/kern/kernel.asm	/^f01071a3:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01071a6	obj/kern/kernel.asm	/^f01071a6:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01071a9	obj/kern/kernel.asm	/^f01071a9:	3d ff 00 00 00       	cmp    $0xff,%eax$/;"	l
f01071ae	obj/kern/kernel.asm	/^f01071ae:	76 24                	jbe    f01071d4 <pci_conf1_set_addr+0x36>$/;"	l
f01071b0	obj/kern/kernel.asm	/^f01071b0:	c7 44 24 0c 00 9a 10 	movl   $0xf0109a00,0xc(%esp)$/;"	l
f01071b7	obj/kern/kernel.asm	/^f01071b7:	f0 $/;"	l
f01071b8	obj/kern/kernel.asm	/^f01071b8:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f01071bf	obj/kern/kernel.asm	/^f01071bf:	f0 $/;"	l
f01071c0	obj/kern/kernel.asm	/^f01071c0:	c7 44 24 04 2c 00 00 	movl   $0x2c,0x4(%esp)$/;"	l
f01071c7	obj/kern/kernel.asm	/^f01071c7:	00 $/;"	l
f01071c8	obj/kern/kernel.asm	/^f01071c8:	c7 04 24 0a 9a 10 f0 	movl   $0xf0109a0a,(%esp)$/;"	l
f01071cf	obj/kern/kernel.asm	/^f01071cf:	e8 6c 8e ff ff       	call   f0100040 <_panic>$/;"	l
f01071d4	obj/kern/kernel.asm	/^f01071d4:	83 fa 1f             	cmp    $0x1f,%edx$/;"	l
f01071d7	obj/kern/kernel.asm	/^f01071d7:	76 24                	jbe    f01071fd <pci_conf1_set_addr+0x5f>$/;"	l
f01071d9	obj/kern/kernel.asm	/^f01071d9:	c7 44 24 0c 15 9a 10 	movl   $0xf0109a15,0xc(%esp)$/;"	l
f01071e0	obj/kern/kernel.asm	/^f01071e0:	f0 $/;"	l
f01071e1	obj/kern/kernel.asm	/^f01071e1:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f01071e8	obj/kern/kernel.asm	/^f01071e8:	f0 $/;"	l
f01071e9	obj/kern/kernel.asm	/^f01071e9:	c7 44 24 04 2d 00 00 	movl   $0x2d,0x4(%esp)$/;"	l
f01071f0	obj/kern/kernel.asm	/^f01071f0:	00 $/;"	l
f01071f1	obj/kern/kernel.asm	/^f01071f1:	c7 04 24 0a 9a 10 f0 	movl   $0xf0109a0a,(%esp)$/;"	l
f01071f8	obj/kern/kernel.asm	/^f01071f8:	e8 43 8e ff ff       	call   f0100040 <_panic>$/;"	l
f01071fd	obj/kern/kernel.asm	/^f01071fd:	83 f9 07             	cmp    $0x7,%ecx$/;"	l
f0107200	obj/kern/kernel.asm	/^f0107200:	76 24                	jbe    f0107226 <pci_conf1_set_addr+0x88>$/;"	l
f0107202	obj/kern/kernel.asm	/^f0107202:	c7 44 24 0c 1e 9a 10 	movl   $0xf0109a1e,0xc(%esp)$/;"	l
f0107209	obj/kern/kernel.asm	/^f0107209:	f0 $/;"	l
f010720a	obj/kern/kernel.asm	/^f010720a:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f0107211	obj/kern/kernel.asm	/^f0107211:	f0 $/;"	l
f0107212	obj/kern/kernel.asm	/^f0107212:	c7 44 24 04 2e 00 00 	movl   $0x2e,0x4(%esp)$/;"	l
f0107219	obj/kern/kernel.asm	/^f0107219:	00 $/;"	l
f010721a	obj/kern/kernel.asm	/^f010721a:	c7 04 24 0a 9a 10 f0 	movl   $0xf0109a0a,(%esp)$/;"	l
f0107221	obj/kern/kernel.asm	/^f0107221:	e8 1a 8e ff ff       	call   f0100040 <_panic>$/;"	l
f0107226	obj/kern/kernel.asm	/^f0107226:	81 fb ff 00 00 00    	cmp    $0xff,%ebx$/;"	l
f010722c	obj/kern/kernel.asm	/^f010722c:	76 24                	jbe    f0107252 <pci_conf1_set_addr+0xb4>$/;"	l
f010722e	obj/kern/kernel.asm	/^f010722e:	c7 44 24 0c 27 9a 10 	movl   $0xf0109a27,0xc(%esp)$/;"	l
f0107235	obj/kern/kernel.asm	/^f0107235:	f0 $/;"	l
f0107236	obj/kern/kernel.asm	/^f0107236:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f010723d	obj/kern/kernel.asm	/^f010723d:	f0 $/;"	l
f010723e	obj/kern/kernel.asm	/^f010723e:	c7 44 24 04 2f 00 00 	movl   $0x2f,0x4(%esp)$/;"	l
f0107245	obj/kern/kernel.asm	/^f0107245:	00 $/;"	l
f0107246	obj/kern/kernel.asm	/^f0107246:	c7 04 24 0a 9a 10 f0 	movl   $0xf0109a0a,(%esp)$/;"	l
f010724d	obj/kern/kernel.asm	/^f010724d:	e8 ee 8d ff ff       	call   f0100040 <_panic>$/;"	l
f0107252	obj/kern/kernel.asm	/^f0107252:	f6 c3 03             	test   $0x3,%bl$/;"	l
f0107255	obj/kern/kernel.asm	/^f0107255:	74 24                	je     f010727b <pci_conf1_set_addr+0xdd>$/;"	l
f0107257	obj/kern/kernel.asm	/^f0107257:	c7 44 24 0c 34 9a 10 	movl   $0xf0109a34,0xc(%esp)$/;"	l
f010725e	obj/kern/kernel.asm	/^f010725e:	f0 $/;"	l
f010725f	obj/kern/kernel.asm	/^f010725f:	c7 44 24 08 d3 89 10 	movl   $0xf01089d3,0x8(%esp)$/;"	l
f0107266	obj/kern/kernel.asm	/^f0107266:	f0 $/;"	l
f0107267	obj/kern/kernel.asm	/^f0107267:	c7 44 24 04 30 00 00 	movl   $0x30,0x4(%esp)$/;"	l
f010726e	obj/kern/kernel.asm	/^f010726e:	00 $/;"	l
f010726f	obj/kern/kernel.asm	/^f010726f:	c7 04 24 0a 9a 10 f0 	movl   $0xf0109a0a,(%esp)$/;"	l
f0107276	obj/kern/kernel.asm	/^f0107276:	e8 c5 8d ff ff       	call   f0100040 <_panic>$/;"	l
f010727b	obj/kern/kernel.asm	/^f010727b:	81 cb 00 00 00 80    	or     $0x80000000,%ebx$/;"	l
f0107281	obj/kern/kernel.asm	/^f0107281:	c1 e1 08             	shl    $0x8,%ecx$/;"	l
f0107284	obj/kern/kernel.asm	/^f0107284:	09 cb                	or     %ecx,%ebx$/;"	l
f0107286	obj/kern/kernel.asm	/^f0107286:	89 d6                	mov    %edx,%esi$/;"	l
f0107288	obj/kern/kernel.asm	/^f0107288:	c1 e6 0b             	shl    $0xb,%esi$/;"	l
f010728b	obj/kern/kernel.asm	/^f010728b:	09 f3                	or     %esi,%ebx$/;"	l
f010728d	obj/kern/kernel.asm	/^f010728d:	c1 e0 10             	shl    $0x10,%eax$/;"	l
f0107290	obj/kern/kernel.asm	/^f0107290:	89 c6                	mov    %eax,%esi$/;"	l
f0107292	obj/kern/kernel.asm	/^f0107292:	89 d8                	mov    %ebx,%eax$/;"	l
f0107294	obj/kern/kernel.asm	/^f0107294:	09 f0                	or     %esi,%eax$/;"	l
f0107296	obj/kern/kernel.asm	/^f0107296:	ba f8 0c 00 00       	mov    $0xcf8,%edx$/;"	l
f010729b	obj/kern/kernel.asm	/^f010729b:	ef                   	out    %eax,(%dx)$/;"	l
f010729c	obj/kern/kernel.asm	/^f010729c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010729f	obj/kern/kernel.asm	/^f010729f:	5b                   	pop    %ebx$/;"	l
f01072a0	obj/kern/kernel.asm	/^f01072a0:	5e                   	pop    %esi$/;"	l
f01072a1	obj/kern/kernel.asm	/^f01072a1:	5d                   	pop    %ebp$/;"	l
f01072a2	obj/kern/kernel.asm	/^f01072a2:	c3                   	ret    $/;"	l
f01072a3	obj/kern/kernel.asm	/^f01072a3 <pci_conf_read>:$/;"	l
f01072a3	obj/kern/kernel.asm	/^f01072a3:	55                   	push   %ebp$/;"	l
f01072a4	obj/kern/kernel.asm	/^f01072a4:	89 e5                	mov    %esp,%ebp$/;"	l
f01072a6	obj/kern/kernel.asm	/^f01072a6:	53                   	push   %ebx$/;"	l
f01072a7	obj/kern/kernel.asm	/^f01072a7:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01072aa	obj/kern/kernel.asm	/^f01072aa:	8b 48 08             	mov    0x8(%eax),%ecx$/;"	l
f01072ad	obj/kern/kernel.asm	/^f01072ad:	8b 58 04             	mov    0x4(%eax),%ebx$/;"	l
f01072b0	obj/kern/kernel.asm	/^f01072b0:	8b 00                	mov    (%eax),%eax$/;"	l
f01072b2	obj/kern/kernel.asm	/^f01072b2:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f01072b5	obj/kern/kernel.asm	/^f01072b5:	89 14 24             	mov    %edx,(%esp)$/;"	l
f01072b8	obj/kern/kernel.asm	/^f01072b8:	89 da                	mov    %ebx,%edx$/;"	l
f01072ba	obj/kern/kernel.asm	/^f01072ba:	e8 df fe ff ff       	call   f010719e <pci_conf1_set_addr>$/;"	l
f01072bf	obj/kern/kernel.asm	/^f01072bf:	ba fc 0c 00 00       	mov    $0xcfc,%edx$/;"	l
f01072c4	obj/kern/kernel.asm	/^f01072c4:	ed                   	in     (%dx),%eax$/;"	l
f01072c5	obj/kern/kernel.asm	/^f01072c5:	83 c4 14             	add    $0x14,%esp$/;"	l
f01072c8	obj/kern/kernel.asm	/^f01072c8:	5b                   	pop    %ebx$/;"	l
f01072c9	obj/kern/kernel.asm	/^f01072c9:	5d                   	pop    %ebp$/;"	l
f01072ca	obj/kern/kernel.asm	/^f01072ca:	c3                   	ret    $/;"	l
f01072cb	obj/kern/kernel.asm	/^f01072cb <pci_scan_bus>:$/;"	l
f01072cb	obj/kern/kernel.asm	/^f01072cb:	55                   	push   %ebp$/;"	l
f01072cc	obj/kern/kernel.asm	/^f01072cc:	89 e5                	mov    %esp,%ebp$/;"	l
f01072ce	obj/kern/kernel.asm	/^f01072ce:	57                   	push   %edi$/;"	l
f01072cf	obj/kern/kernel.asm	/^f01072cf:	56                   	push   %esi$/;"	l
f01072d0	obj/kern/kernel.asm	/^f01072d0:	53                   	push   %ebx$/;"	l
f01072d1	obj/kern/kernel.asm	/^f01072d1:	81 ec 1c 01 00 00    	sub    $0x11c,%esp$/;"	l
f01072d7	obj/kern/kernel.asm	/^f01072d7:	89 c3                	mov    %eax,%ebx$/;"	l
f01072d9	obj/kern/kernel.asm	/^f01072d9:	c7 44 24 08 48 00 00 	movl   $0x48,0x8(%esp)$/;"	l
f01072e0	obj/kern/kernel.asm	/^f01072e0:	00 $/;"	l
f01072e1	obj/kern/kernel.asm	/^f01072e1:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01072e8	obj/kern/kernel.asm	/^f01072e8:	00 $/;"	l
f01072e9	obj/kern/kernel.asm	/^f01072e9:	8d 45 a0             	lea    -0x60(%ebp),%eax$/;"	l
f01072ec	obj/kern/kernel.asm	/^f01072ec:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01072ef	obj/kern/kernel.asm	/^f01072ef:	e8 33 f1 ff ff       	call   f0106427 <memset>$/;"	l
f01072f4	obj/kern/kernel.asm	/^f01072f4:	89 5d a0             	mov    %ebx,-0x60(%ebp)$/;"	l
f01072f7	obj/kern/kernel.asm	/^f01072f7:	c7 45 a4 00 00 00 00 	movl   $0x0,-0x5c(%ebp)$/;"	l
f01072fe	obj/kern/kernel.asm	/^f01072fe:	c7 85 00 ff ff ff 00 	movl   $0x0,-0x100(%ebp)$/;"	l
f0107305	obj/kern/kernel.asm	/^f0107305:	00 00 00 $/;"	l
f0107308	obj/kern/kernel.asm	/^f0107308:	ba 0c 00 00 00       	mov    $0xc,%edx$/;"	l
f010730d	obj/kern/kernel.asm	/^f010730d:	8d 45 a0             	lea    -0x60(%ebp),%eax$/;"	l
f0107310	obj/kern/kernel.asm	/^f0107310:	e8 8e ff ff ff       	call   f01072a3 <pci_conf_read>$/;"	l
f0107315	obj/kern/kernel.asm	/^f0107315:	89 c2                	mov    %eax,%edx$/;"	l
f0107317	obj/kern/kernel.asm	/^f0107317:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f010731a	obj/kern/kernel.asm	/^f010731a:	83 e2 7f             	and    $0x7f,%edx$/;"	l
f010731d	obj/kern/kernel.asm	/^f010731d:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f0107320	obj/kern/kernel.asm	/^f0107320:	0f 87 6f 01 00 00    	ja     f0107495 <pci_scan_bus+0x1ca>$/;"	l
f0107326	obj/kern/kernel.asm	/^f0107326:	83 85 00 ff ff ff 01 	addl   $0x1,-0x100(%ebp)$/;"	l
f010732d	obj/kern/kernel.asm	/^f010732d:	b9 12 00 00 00       	mov    $0x12,%ecx$/;"	l
f0107332	obj/kern/kernel.asm	/^f0107332:	8d bd 10 ff ff ff    	lea    -0xf0(%ebp),%edi$/;"	l
f0107338	obj/kern/kernel.asm	/^f0107338:	8d 75 a0             	lea    -0x60(%ebp),%esi$/;"	l
f010733b	obj/kern/kernel.asm	/^f010733b:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f010733d	obj/kern/kernel.asm	/^f010733d:	c7 85 18 ff ff ff 00 	movl   $0x0,-0xe8(%ebp)$/;"	l
f0107344	obj/kern/kernel.asm	/^f0107344:	00 00 00 $/;"	l
f0107347	obj/kern/kernel.asm	/^f0107347:	25 00 00 80 00       	and    $0x800000,%eax$/;"	l
f010734c	obj/kern/kernel.asm	/^f010734c:	89 85 04 ff ff ff    	mov    %eax,-0xfc(%ebp)$/;"	l
f0107352	obj/kern/kernel.asm	/^f0107352:	8d 9d 58 ff ff ff    	lea    -0xa8(%ebp),%ebx$/;"	l
f0107358	obj/kern/kernel.asm	/^f0107358:	e9 1d 01 00 00       	jmp    f010747a <pci_scan_bus+0x1af>$/;"	l
f010735d	obj/kern/kernel.asm	/^f010735d:	b9 12 00 00 00       	mov    $0x12,%ecx$/;"	l
f0107362	obj/kern/kernel.asm	/^f0107362:	89 df                	mov    %ebx,%edi$/;"	l
f0107364	obj/kern/kernel.asm	/^f0107364:	8d b5 10 ff ff ff    	lea    -0xf0(%ebp),%esi$/;"	l
f010736a	obj/kern/kernel.asm	/^f010736a:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f010736c	obj/kern/kernel.asm	/^f010736c:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0107371	obj/kern/kernel.asm	/^f0107371:	8d 85 10 ff ff ff    	lea    -0xf0(%ebp),%eax$/;"	l
f0107377	obj/kern/kernel.asm	/^f0107377:	e8 27 ff ff ff       	call   f01072a3 <pci_conf_read>$/;"	l
f010737c	obj/kern/kernel.asm	/^f010737c:	89 85 64 ff ff ff    	mov    %eax,-0x9c(%ebp)$/;"	l
f0107382	obj/kern/kernel.asm	/^f0107382:	66 83 f8 ff          	cmp    $0xffff,%ax$/;"	l
f0107386	obj/kern/kernel.asm	/^f0107386:	0f 84 e7 00 00 00    	je     f0107473 <pci_scan_bus+0x1a8>$/;"	l
f010738c	obj/kern/kernel.asm	/^f010738c:	ba 3c 00 00 00       	mov    $0x3c,%edx$/;"	l
f0107391	obj/kern/kernel.asm	/^f0107391:	89 d8                	mov    %ebx,%eax$/;"	l
f0107393	obj/kern/kernel.asm	/^f0107393:	e8 0b ff ff ff       	call   f01072a3 <pci_conf_read>$/;"	l
f0107398	obj/kern/kernel.asm	/^f0107398:	88 45 9c             	mov    %al,-0x64(%ebp)$/;"	l
f010739b	obj/kern/kernel.asm	/^f010739b:	ba 08 00 00 00       	mov    $0x8,%edx$/;"	l
f01073a0	obj/kern/kernel.asm	/^f01073a0:	89 d8                	mov    %ebx,%eax$/;"	l
f01073a2	obj/kern/kernel.asm	/^f01073a2:	e8 fc fe ff ff       	call   f01072a3 <pci_conf_read>$/;"	l
f01073a7	obj/kern/kernel.asm	/^f01073a7:	89 85 68 ff ff ff    	mov    %eax,-0x98(%ebp)$/;"	l
f01073ad	obj/kern/kernel.asm	/^f01073ad:	89 c2                	mov    %eax,%edx$/;"	l
f01073af	obj/kern/kernel.asm	/^f01073af:	c1 ea 18             	shr    $0x18,%edx$/;"	l
f01073b2	obj/kern/kernel.asm	/^f01073b2:	b9 48 9a 10 f0       	mov    $0xf0109a48,%ecx$/;"	l
f01073b7	obj/kern/kernel.asm	/^f01073b7:	83 fa 06             	cmp    $0x6,%edx$/;"	l
f01073ba	obj/kern/kernel.asm	/^f01073ba:	77 07                	ja     f01073c3 <pci_scan_bus+0xf8>$/;"	l
f01073bc	obj/kern/kernel.asm	/^f01073bc:	8b 0c 95 bc 9a 10 f0 	mov    -0xfef6544(,%edx,4),%ecx$/;"	l
f01073c3	obj/kern/kernel.asm	/^f01073c3:	8b b5 64 ff ff ff    	mov    -0x9c(%ebp),%esi$/;"	l
f01073c9	obj/kern/kernel.asm	/^f01073c9:	0f b6 7d 9c          	movzbl -0x64(%ebp),%edi$/;"	l
f01073cd	obj/kern/kernel.asm	/^f01073cd:	89 7c 24 24          	mov    %edi,0x24(%esp)$/;"	l
f01073d1	obj/kern/kernel.asm	/^f01073d1:	89 4c 24 20          	mov    %ecx,0x20(%esp)$/;"	l
f01073d5	obj/kern/kernel.asm	/^f01073d5:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01073d8	obj/kern/kernel.asm	/^f01073d8:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01073db	obj/kern/kernel.asm	/^f01073db:	89 44 24 1c          	mov    %eax,0x1c(%esp)$/;"	l
f01073df	obj/kern/kernel.asm	/^f01073df:	89 54 24 18          	mov    %edx,0x18(%esp)$/;"	l
f01073e3	obj/kern/kernel.asm	/^f01073e3:	89 f0                	mov    %esi,%eax$/;"	l
f01073e5	obj/kern/kernel.asm	/^f01073e5:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01073e8	obj/kern/kernel.asm	/^f01073e8:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
f01073ec	obj/kern/kernel.asm	/^f01073ec:	0f b7 f6             	movzwl %si,%esi$/;"	l
f01073ef	obj/kern/kernel.asm	/^f01073ef:	89 74 24 10          	mov    %esi,0x10(%esp)$/;"	l
f01073f3	obj/kern/kernel.asm	/^f01073f3:	8b 85 60 ff ff ff    	mov    -0xa0(%ebp),%eax$/;"	l
f01073f9	obj/kern/kernel.asm	/^f01073f9:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01073fd	obj/kern/kernel.asm	/^f01073fd:	8b 85 5c ff ff ff    	mov    -0xa4(%ebp),%eax$/;"	l
f0107403	obj/kern/kernel.asm	/^f0107403:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0107407	obj/kern/kernel.asm	/^f0107407:	8b 85 58 ff ff ff    	mov    -0xa8(%ebp),%eax$/;"	l
f010740d	obj/kern/kernel.asm	/^f010740d:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0107410	obj/kern/kernel.asm	/^f0107410:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0107414	obj/kern/kernel.asm	/^f0107414:	c7 04 24 d4 98 10 f0 	movl   $0xf01098d4,(%esp)$/;"	l
f010741b	obj/kern/kernel.asm	/^f010741b:	e8 cc cb ff ff       	call   f0103fec <cprintf>$/;"	l
f0107420	obj/kern/kernel.asm	/^f0107420:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax$/;"	l
f0107426	obj/kern/kernel.asm	/^f0107426:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f010742a	obj/kern/kernel.asm	/^f010742a:	c7 44 24 08 10 44 12 	movl   $0xf0124410,0x8(%esp)$/;"	l
f0107431	obj/kern/kernel.asm	/^f0107431:	f0 $/;"	l
f0107432	obj/kern/kernel.asm	/^f0107432:	89 c2                	mov    %eax,%edx$/;"	l
f0107434	obj/kern/kernel.asm	/^f0107434:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0107437	obj/kern/kernel.asm	/^f0107437:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f010743a	obj/kern/kernel.asm	/^f010743a:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f010743e	obj/kern/kernel.asm	/^f010743e:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f0107441	obj/kern/kernel.asm	/^f0107441:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0107444	obj/kern/kernel.asm	/^f0107444:	e8 f2 fc ff ff       	call   f010713b <pci_attach_match>$/;"	l
f0107449	obj/kern/kernel.asm	/^f0107449:	85 c0                	test   %eax,%eax$/;"	l
f010744b	obj/kern/kernel.asm	/^f010744b:	75 26                	jne    f0107473 <pci_scan_bus+0x1a8>$/;"	l
f010744d	obj/kern/kernel.asm	/^f010744d:	8b 85 64 ff ff ff    	mov    -0x9c(%ebp),%eax$/;"	l
f0107453	obj/kern/kernel.asm	/^f0107453:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f0107457	obj/kern/kernel.asm	/^f0107457:	c7 44 24 08 f8 43 12 	movl   $0xf01243f8,0x8(%esp)$/;"	l
f010745e	obj/kern/kernel.asm	/^f010745e:	f0 $/;"	l
f010745f	obj/kern/kernel.asm	/^f010745f:	89 c2                	mov    %eax,%edx$/;"	l
f0107461	obj/kern/kernel.asm	/^f0107461:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0107464	obj/kern/kernel.asm	/^f0107464:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0107468	obj/kern/kernel.asm	/^f0107468:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f010746b	obj/kern/kernel.asm	/^f010746b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010746e	obj/kern/kernel.asm	/^f010746e:	e8 c8 fc ff ff       	call   f010713b <pci_attach_match>$/;"	l
f0107473	obj/kern/kernel.asm	/^f0107473:	83 85 18 ff ff ff 01 	addl   $0x1,-0xe8(%ebp)$/;"	l
f010747a	obj/kern/kernel.asm	/^f010747a:	83 bd 04 ff ff ff 01 	cmpl   $0x1,-0xfc(%ebp)$/;"	l
f0107481	obj/kern/kernel.asm	/^f0107481:	19 c0                	sbb    %eax,%eax$/;"	l
f0107483	obj/kern/kernel.asm	/^f0107483:	83 e0 f9             	and    $0xfffffff9,%eax$/;"	l
f0107486	obj/kern/kernel.asm	/^f0107486:	83 c0 08             	add    $0x8,%eax$/;"	l
f0107489	obj/kern/kernel.asm	/^f0107489:	3b 85 18 ff ff ff    	cmp    -0xe8(%ebp),%eax$/;"	l
f010748f	obj/kern/kernel.asm	/^f010748f:	0f 87 c8 fe ff ff    	ja     f010735d <pci_scan_bus+0x92>$/;"	l
f0107495	obj/kern/kernel.asm	/^f0107495:	8b 45 a4             	mov    -0x5c(%ebp),%eax$/;"	l
f0107498	obj/kern/kernel.asm	/^f0107498:	83 c0 01             	add    $0x1,%eax$/;"	l
f010749b	obj/kern/kernel.asm	/^f010749b:	89 45 a4             	mov    %eax,-0x5c(%ebp)$/;"	l
f010749e	obj/kern/kernel.asm	/^f010749e:	83 f8 1f             	cmp    $0x1f,%eax$/;"	l
f01074a1	obj/kern/kernel.asm	/^f01074a1:	0f 86 61 fe ff ff    	jbe    f0107308 <pci_scan_bus+0x3d>$/;"	l
f01074a7	obj/kern/kernel.asm	/^f01074a7:	8b 85 00 ff ff ff    	mov    -0x100(%ebp),%eax$/;"	l
f01074ad	obj/kern/kernel.asm	/^f01074ad:	81 c4 1c 01 00 00    	add    $0x11c,%esp$/;"	l
f01074b3	obj/kern/kernel.asm	/^f01074b3:	5b                   	pop    %ebx$/;"	l
f01074b4	obj/kern/kernel.asm	/^f01074b4:	5e                   	pop    %esi$/;"	l
f01074b5	obj/kern/kernel.asm	/^f01074b5:	5f                   	pop    %edi$/;"	l
f01074b6	obj/kern/kernel.asm	/^f01074b6:	5d                   	pop    %ebp$/;"	l
f01074b7	obj/kern/kernel.asm	/^f01074b7:	c3                   	ret    $/;"	l
f01074b8	obj/kern/kernel.asm	/^f01074b8 <pci_bridge_attach>:$/;"	l
f01074b8	obj/kern/kernel.asm	/^f01074b8:	55                   	push   %ebp$/;"	l
f01074b9	obj/kern/kernel.asm	/^f01074b9:	89 e5                	mov    %esp,%ebp$/;"	l
f01074bb	obj/kern/kernel.asm	/^f01074bb:	57                   	push   %edi$/;"	l
f01074bc	obj/kern/kernel.asm	/^f01074bc:	56                   	push   %esi$/;"	l
f01074bd	obj/kern/kernel.asm	/^f01074bd:	53                   	push   %ebx$/;"	l
f01074be	obj/kern/kernel.asm	/^f01074be:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f01074c1	obj/kern/kernel.asm	/^f01074c1:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01074c4	obj/kern/kernel.asm	/^f01074c4:	ba 1c 00 00 00       	mov    $0x1c,%edx$/;"	l
f01074c9	obj/kern/kernel.asm	/^f01074c9:	89 d8                	mov    %ebx,%eax$/;"	l
f01074cb	obj/kern/kernel.asm	/^f01074cb:	e8 d3 fd ff ff       	call   f01072a3 <pci_conf_read>$/;"	l
f01074d0	obj/kern/kernel.asm	/^f01074d0:	89 c7                	mov    %eax,%edi$/;"	l
f01074d2	obj/kern/kernel.asm	/^f01074d2:	ba 18 00 00 00       	mov    $0x18,%edx$/;"	l
f01074d7	obj/kern/kernel.asm	/^f01074d7:	89 d8                	mov    %ebx,%eax$/;"	l
f01074d9	obj/kern/kernel.asm	/^f01074d9:	e8 c5 fd ff ff       	call   f01072a3 <pci_conf_read>$/;"	l
f01074de	obj/kern/kernel.asm	/^f01074de:	83 e7 0f             	and    $0xf,%edi$/;"	l
f01074e1	obj/kern/kernel.asm	/^f01074e1:	83 ff 01             	cmp    $0x1,%edi$/;"	l
f01074e4	obj/kern/kernel.asm	/^f01074e4:	75 2a                	jne    f0107510 <pci_bridge_attach+0x58>$/;"	l
f01074e6	obj/kern/kernel.asm	/^f01074e6:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f01074e9	obj/kern/kernel.asm	/^f01074e9:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01074ed	obj/kern/kernel.asm	/^f01074ed:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f01074f0	obj/kern/kernel.asm	/^f01074f0:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01074f4	obj/kern/kernel.asm	/^f01074f4:	8b 03                	mov    (%ebx),%eax$/;"	l
f01074f6	obj/kern/kernel.asm	/^f01074f6:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f01074f9	obj/kern/kernel.asm	/^f01074f9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01074fd	obj/kern/kernel.asm	/^f01074fd:	c7 04 24 10 99 10 f0 	movl   $0xf0109910,(%esp)$/;"	l
f0107504	obj/kern/kernel.asm	/^f0107504:	e8 e3 ca ff ff       	call   f0103fec <cprintf>$/;"	l
f0107509	obj/kern/kernel.asm	/^f0107509:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010750e	obj/kern/kernel.asm	/^f010750e:	eb 67                	jmp    f0107577 <pci_bridge_attach+0xbf>$/;"	l
f0107510	obj/kern/kernel.asm	/^f0107510:	89 c6                	mov    %eax,%esi$/;"	l
f0107512	obj/kern/kernel.asm	/^f0107512:	c7 44 24 08 08 00 00 	movl   $0x8,0x8(%esp)$/;"	l
f0107519	obj/kern/kernel.asm	/^f0107519:	00 $/;"	l
f010751a	obj/kern/kernel.asm	/^f010751a:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0107521	obj/kern/kernel.asm	/^f0107521:	00 $/;"	l
f0107522	obj/kern/kernel.asm	/^f0107522:	8d 7d e0             	lea    -0x20(%ebp),%edi$/;"	l
f0107525	obj/kern/kernel.asm	/^f0107525:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0107528	obj/kern/kernel.asm	/^f0107528:	e8 fa ee ff ff       	call   f0106427 <memset>$/;"	l
f010752d	obj/kern/kernel.asm	/^f010752d:	89 5d e0             	mov    %ebx,-0x20(%ebp)$/;"	l
f0107530	obj/kern/kernel.asm	/^f0107530:	89 f0                	mov    %esi,%eax$/;"	l
f0107532	obj/kern/kernel.asm	/^f0107532:	0f b6 c4             	movzbl %ah,%eax$/;"	l
f0107535	obj/kern/kernel.asm	/^f0107535:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0107538	obj/kern/kernel.asm	/^f0107538:	89 f2                	mov    %esi,%edx$/;"	l
f010753a	obj/kern/kernel.asm	/^f010753a:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f010753d	obj/kern/kernel.asm	/^f010753d:	0f b6 f2             	movzbl %dl,%esi$/;"	l
f0107540	obj/kern/kernel.asm	/^f0107540:	89 74 24 14          	mov    %esi,0x14(%esp)$/;"	l
f0107544	obj/kern/kernel.asm	/^f0107544:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f0107548	obj/kern/kernel.asm	/^f0107548:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f010754b	obj/kern/kernel.asm	/^f010754b:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010754f	obj/kern/kernel.asm	/^f010754f:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f0107552	obj/kern/kernel.asm	/^f0107552:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0107556	obj/kern/kernel.asm	/^f0107556:	8b 03                	mov    (%ebx),%eax$/;"	l
f0107558	obj/kern/kernel.asm	/^f0107558:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f010755b	obj/kern/kernel.asm	/^f010755b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010755f	obj/kern/kernel.asm	/^f010755f:	c7 04 24 44 99 10 f0 	movl   $0xf0109944,(%esp)$/;"	l
f0107566	obj/kern/kernel.asm	/^f0107566:	e8 81 ca ff ff       	call   f0103fec <cprintf>$/;"	l
f010756b	obj/kern/kernel.asm	/^f010756b:	89 f8                	mov    %edi,%eax$/;"	l
f010756d	obj/kern/kernel.asm	/^f010756d:	e8 59 fd ff ff       	call   f01072cb <pci_scan_bus>$/;"	l
f0107572	obj/kern/kernel.asm	/^f0107572:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0107577	obj/kern/kernel.asm	/^f0107577:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f010757a	obj/kern/kernel.asm	/^f010757a:	5b                   	pop    %ebx$/;"	l
f010757b	obj/kern/kernel.asm	/^f010757b:	5e                   	pop    %esi$/;"	l
f010757c	obj/kern/kernel.asm	/^f010757c:	5f                   	pop    %edi$/;"	l
f010757d	obj/kern/kernel.asm	/^f010757d:	5d                   	pop    %ebp$/;"	l
f010757e	obj/kern/kernel.asm	/^f010757e:	c3                   	ret    $/;"	l
f010757f	obj/kern/kernel.asm	/^f010757f <pci_conf_write>:$/;"	l
f010757f	obj/kern/kernel.asm	/^f010757f:	55                   	push   %ebp$/;"	l
f0107580	obj/kern/kernel.asm	/^f0107580:	89 e5                	mov    %esp,%ebp$/;"	l
f0107582	obj/kern/kernel.asm	/^f0107582:	56                   	push   %esi$/;"	l
f0107583	obj/kern/kernel.asm	/^f0107583:	53                   	push   %ebx$/;"	l
f0107584	obj/kern/kernel.asm	/^f0107584:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0107587	obj/kern/kernel.asm	/^f0107587:	89 cb                	mov    %ecx,%ebx$/;"	l
f0107589	obj/kern/kernel.asm	/^f0107589:	8b 48 08             	mov    0x8(%eax),%ecx$/;"	l
f010758c	obj/kern/kernel.asm	/^f010758c:	8b 70 04             	mov    0x4(%eax),%esi$/;"	l
f010758f	obj/kern/kernel.asm	/^f010758f:	8b 00                	mov    (%eax),%eax$/;"	l
f0107591	obj/kern/kernel.asm	/^f0107591:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0107594	obj/kern/kernel.asm	/^f0107594:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0107597	obj/kern/kernel.asm	/^f0107597:	89 f2                	mov    %esi,%edx$/;"	l
f0107599	obj/kern/kernel.asm	/^f0107599:	e8 00 fc ff ff       	call   f010719e <pci_conf1_set_addr>$/;"	l
f010759e	obj/kern/kernel.asm	/^f010759e:	ba fc 0c 00 00       	mov    $0xcfc,%edx$/;"	l
f01075a3	obj/kern/kernel.asm	/^f01075a3:	89 d8                	mov    %ebx,%eax$/;"	l
f01075a5	obj/kern/kernel.asm	/^f01075a5:	ef                   	out    %eax,(%dx)$/;"	l
f01075a6	obj/kern/kernel.asm	/^f01075a6:	83 c4 10             	add    $0x10,%esp$/;"	l
f01075a9	obj/kern/kernel.asm	/^f01075a9:	5b                   	pop    %ebx$/;"	l
f01075aa	obj/kern/kernel.asm	/^f01075aa:	5e                   	pop    %esi$/;"	l
f01075ab	obj/kern/kernel.asm	/^f01075ab:	5d                   	pop    %ebp$/;"	l
f01075ac	obj/kern/kernel.asm	/^f01075ac:	c3                   	ret    $/;"	l
f01075ad	obj/kern/kernel.asm	/^f01075ad <pci_func_enable>:$/;"	l
f01075ad	obj/kern/kernel.asm	/^f01075ad:	55                   	push   %ebp$/;"	l
f01075ae	obj/kern/kernel.asm	/^f01075ae:	89 e5                	mov    %esp,%ebp$/;"	l
f01075b0	obj/kern/kernel.asm	/^f01075b0:	57                   	push   %edi$/;"	l
f01075b1	obj/kern/kernel.asm	/^f01075b1:	56                   	push   %esi$/;"	l
f01075b2	obj/kern/kernel.asm	/^f01075b2:	53                   	push   %ebx$/;"	l
f01075b3	obj/kern/kernel.asm	/^f01075b3:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f01075b6	obj/kern/kernel.asm	/^f01075b6:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f01075b9	obj/kern/kernel.asm	/^f01075b9:	b9 07 00 00 00       	mov    $0x7,%ecx$/;"	l
f01075be	obj/kern/kernel.asm	/^f01075be:	ba 04 00 00 00       	mov    $0x4,%edx$/;"	l
f01075c3	obj/kern/kernel.asm	/^f01075c3:	89 f8                	mov    %edi,%eax$/;"	l
f01075c5	obj/kern/kernel.asm	/^f01075c5:	e8 b5 ff ff ff       	call   f010757f <pci_conf_write>$/;"	l
f01075ca	obj/kern/kernel.asm	/^f01075ca:	be 10 00 00 00       	mov    $0x10,%esi$/;"	l
f01075cf	obj/kern/kernel.asm	/^f01075cf:	89 f2                	mov    %esi,%edx$/;"	l
f01075d1	obj/kern/kernel.asm	/^f01075d1:	89 f8                	mov    %edi,%eax$/;"	l
f01075d3	obj/kern/kernel.asm	/^f01075d3:	e8 cb fc ff ff       	call   f01072a3 <pci_conf_read>$/;"	l
f01075d8	obj/kern/kernel.asm	/^f01075d8:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01075db	obj/kern/kernel.asm	/^f01075db:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx$/;"	l
f01075e0	obj/kern/kernel.asm	/^f01075e0:	89 f2                	mov    %esi,%edx$/;"	l
f01075e2	obj/kern/kernel.asm	/^f01075e2:	89 f8                	mov    %edi,%eax$/;"	l
f01075e4	obj/kern/kernel.asm	/^f01075e4:	e8 96 ff ff ff       	call   f010757f <pci_conf_write>$/;"	l
f01075e9	obj/kern/kernel.asm	/^f01075e9:	89 f2                	mov    %esi,%edx$/;"	l
f01075eb	obj/kern/kernel.asm	/^f01075eb:	89 f8                	mov    %edi,%eax$/;"	l
f01075ed	obj/kern/kernel.asm	/^f01075ed:	e8 b1 fc ff ff       	call   f01072a3 <pci_conf_read>$/;"	l
f01075f2	obj/kern/kernel.asm	/^f01075f2:	bb 04 00 00 00       	mov    $0x4,%ebx$/;"	l
f01075f7	obj/kern/kernel.asm	/^f01075f7:	85 c0                	test   %eax,%eax$/;"	l
f01075f9	obj/kern/kernel.asm	/^f01075f9:	0f 84 c1 00 00 00    	je     f01076c0 <pci_func_enable+0x113>$/;"	l
f01075ff	obj/kern/kernel.asm	/^f01075ff:	8d 56 f0             	lea    -0x10(%esi),%edx$/;"	l
f0107602	obj/kern/kernel.asm	/^f0107602:	c1 ea 02             	shr    $0x2,%edx$/;"	l
f0107605	obj/kern/kernel.asm	/^f0107605:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f0107608	obj/kern/kernel.asm	/^f0107608:	a8 01                	test   $0x1,%al$/;"	l
f010760a	obj/kern/kernel.asm	/^f010760a:	75 2c                	jne    f0107638 <pci_func_enable+0x8b>$/;"	l
f010760c	obj/kern/kernel.asm	/^f010760c:	89 c2                	mov    %eax,%edx$/;"	l
f010760e	obj/kern/kernel.asm	/^f010760e:	83 e2 06             	and    $0x6,%edx$/;"	l
f0107611	obj/kern/kernel.asm	/^f0107611:	83 fa 04             	cmp    $0x4,%edx$/;"	l
f0107614	obj/kern/kernel.asm	/^f0107614:	0f 94 c3             	sete   %bl$/;"	l
f0107617	obj/kern/kernel.asm	/^f0107617:	0f b6 db             	movzbl %bl,%ebx$/;"	l
f010761a	obj/kern/kernel.asm	/^f010761a:	8d 1c 9d 04 00 00 00 	lea    0x4(,%ebx,4),%ebx$/;"	l
f0107621	obj/kern/kernel.asm	/^f0107621:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
f0107624	obj/kern/kernel.asm	/^f0107624:	89 c2                	mov    %eax,%edx$/;"	l
f0107626	obj/kern/kernel.asm	/^f0107626:	f7 da                	neg    %edx$/;"	l
f0107628	obj/kern/kernel.asm	/^f0107628:	21 d0                	and    %edx,%eax$/;"	l
f010762a	obj/kern/kernel.asm	/^f010762a:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f010762d	obj/kern/kernel.asm	/^f010762d:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0107630	obj/kern/kernel.asm	/^f0107630:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
f0107633	obj/kern/kernel.asm	/^f0107633:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0107636	obj/kern/kernel.asm	/^f0107636:	eb 1a                	jmp    f0107652 <pci_func_enable+0xa5>$/;"	l
f0107638	obj/kern/kernel.asm	/^f0107638:	83 e0 fc             	and    $0xfffffffc,%eax$/;"	l
f010763b	obj/kern/kernel.asm	/^f010763b:	89 c2                	mov    %eax,%edx$/;"	l
f010763d	obj/kern/kernel.asm	/^f010763d:	f7 da                	neg    %edx$/;"	l
f010763f	obj/kern/kernel.asm	/^f010763f:	21 d0                	and    %edx,%eax$/;"	l
f0107641	obj/kern/kernel.asm	/^f0107641:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0107644	obj/kern/kernel.asm	/^f0107644:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0107647	obj/kern/kernel.asm	/^f0107647:	83 e0 fc             	and    $0xfffffffc,%eax$/;"	l
f010764a	obj/kern/kernel.asm	/^f010764a:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f010764d	obj/kern/kernel.asm	/^f010764d:	bb 04 00 00 00       	mov    $0x4,%ebx$/;"	l
f0107652	obj/kern/kernel.asm	/^f0107652:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f0107655	obj/kern/kernel.asm	/^f0107655:	89 f2                	mov    %esi,%edx$/;"	l
f0107657	obj/kern/kernel.asm	/^f0107657:	89 f8                	mov    %edi,%eax$/;"	l
f0107659	obj/kern/kernel.asm	/^f0107659:	e8 21 ff ff ff       	call   f010757f <pci_conf_write>$/;"	l
f010765e	obj/kern/kernel.asm	/^f010765e:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0107661	obj/kern/kernel.asm	/^f0107661:	8d 04 87             	lea    (%edi,%eax,4),%eax$/;"	l
f0107664	obj/kern/kernel.asm	/^f0107664:	8b 4d d8             	mov    -0x28(%ebp),%ecx$/;"	l
f0107667	obj/kern/kernel.asm	/^f0107667:	89 48 14             	mov    %ecx,0x14(%eax)$/;"	l
f010766a	obj/kern/kernel.asm	/^f010766a:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f010766d	obj/kern/kernel.asm	/^f010766d:	89 50 2c             	mov    %edx,0x2c(%eax)$/;"	l
f0107670	obj/kern/kernel.asm	/^f0107670:	85 c9                	test   %ecx,%ecx$/;"	l
f0107672	obj/kern/kernel.asm	/^f0107672:	75 4c                	jne    f01076c0 <pci_func_enable+0x113>$/;"	l
f0107674	obj/kern/kernel.asm	/^f0107674:	85 d2                	test   %edx,%edx$/;"	l
f0107676	obj/kern/kernel.asm	/^f0107676:	74 48                	je     f01076c0 <pci_func_enable+0x113>$/;"	l
f0107678	obj/kern/kernel.asm	/^f0107678:	8b 47 0c             	mov    0xc(%edi),%eax$/;"	l
f010767b	obj/kern/kernel.asm	/^f010767b:	89 54 24 20          	mov    %edx,0x20(%esp)$/;"	l
f010767f	obj/kern/kernel.asm	/^f010767f:	8b 4d d8             	mov    -0x28(%ebp),%ecx$/;"	l
f0107682	obj/kern/kernel.asm	/^f0107682:	89 4c 24 1c          	mov    %ecx,0x1c(%esp)$/;"	l
f0107686	obj/kern/kernel.asm	/^f0107686:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
f0107689	obj/kern/kernel.asm	/^f0107689:	89 4c 24 18          	mov    %ecx,0x18(%esp)$/;"	l
f010768d	obj/kern/kernel.asm	/^f010768d:	89 c2                	mov    %eax,%edx$/;"	l
f010768f	obj/kern/kernel.asm	/^f010768f:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0107692	obj/kern/kernel.asm	/^f0107692:	89 54 24 14          	mov    %edx,0x14(%esp)$/;"	l
f0107696	obj/kern/kernel.asm	/^f0107696:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0107699	obj/kern/kernel.asm	/^f0107699:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f010769d	obj/kern/kernel.asm	/^f010769d:	8b 47 08             	mov    0x8(%edi),%eax$/;"	l
f01076a0	obj/kern/kernel.asm	/^f01076a0:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01076a4	obj/kern/kernel.asm	/^f01076a4:	8b 47 04             	mov    0x4(%edi),%eax$/;"	l
f01076a7	obj/kern/kernel.asm	/^f01076a7:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01076ab	obj/kern/kernel.asm	/^f01076ab:	8b 07                	mov    (%edi),%eax$/;"	l
f01076ad	obj/kern/kernel.asm	/^f01076ad:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f01076b0	obj/kern/kernel.asm	/^f01076b0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01076b4	obj/kern/kernel.asm	/^f01076b4:	c7 04 24 74 99 10 f0 	movl   $0xf0109974,(%esp)$/;"	l
f01076bb	obj/kern/kernel.asm	/^f01076bb:	e8 2c c9 ff ff       	call   f0103fec <cprintf>$/;"	l
f01076c0	obj/kern/kernel.asm	/^f01076c0:	01 de                	add    %ebx,%esi$/;"	l
f01076c2	obj/kern/kernel.asm	/^f01076c2:	83 fe 27             	cmp    $0x27,%esi$/;"	l
f01076c5	obj/kern/kernel.asm	/^f01076c5:	0f 86 04 ff ff ff    	jbe    f01075cf <pci_func_enable+0x22>$/;"	l
f01076cb	obj/kern/kernel.asm	/^f01076cb:	8b 47 0c             	mov    0xc(%edi),%eax$/;"	l
f01076ce	obj/kern/kernel.asm	/^f01076ce:	89 c2                	mov    %eax,%edx$/;"	l
f01076d0	obj/kern/kernel.asm	/^f01076d0:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f01076d3	obj/kern/kernel.asm	/^f01076d3:	89 54 24 14          	mov    %edx,0x14(%esp)$/;"	l
f01076d7	obj/kern/kernel.asm	/^f01076d7:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f01076da	obj/kern/kernel.asm	/^f01076da:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f01076de	obj/kern/kernel.asm	/^f01076de:	8b 47 08             	mov    0x8(%edi),%eax$/;"	l
f01076e1	obj/kern/kernel.asm	/^f01076e1:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01076e5	obj/kern/kernel.asm	/^f01076e5:	8b 47 04             	mov    0x4(%edi),%eax$/;"	l
f01076e8	obj/kern/kernel.asm	/^f01076e8:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01076ec	obj/kern/kernel.asm	/^f01076ec:	8b 07                	mov    (%edi),%eax$/;"	l
f01076ee	obj/kern/kernel.asm	/^f01076ee:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f01076f1	obj/kern/kernel.asm	/^f01076f1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01076f5	obj/kern/kernel.asm	/^f01076f5:	c7 04 24 d0 99 10 f0 	movl   $0xf01099d0,(%esp)$/;"	l
f01076fc	obj/kern/kernel.asm	/^f01076fc:	e8 eb c8 ff ff       	call   f0103fec <cprintf>$/;"	l
f0107701	obj/kern/kernel.asm	/^f0107701:	83 c4 4c             	add    $0x4c,%esp$/;"	l
f0107704	obj/kern/kernel.asm	/^f0107704:	5b                   	pop    %ebx$/;"	l
f0107705	obj/kern/kernel.asm	/^f0107705:	5e                   	pop    %esi$/;"	l
f0107706	obj/kern/kernel.asm	/^f0107706:	5f                   	pop    %edi$/;"	l
f0107707	obj/kern/kernel.asm	/^f0107707:	5d                   	pop    %ebp$/;"	l
f0107708	obj/kern/kernel.asm	/^f0107708:	c3                   	ret    $/;"	l
f0107709	obj/kern/kernel.asm	/^f0107709 <pci_init>:$/;"	l
f0107709	obj/kern/kernel.asm	/^f0107709:	55                   	push   %ebp$/;"	l
f010770a	obj/kern/kernel.asm	/^f010770a:	89 e5                	mov    %esp,%ebp$/;"	l
f010770c	obj/kern/kernel.asm	/^f010770c:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010770f	obj/kern/kernel.asm	/^f010770f:	c7 44 24 08 08 00 00 	movl   $0x8,0x8(%esp)$/;"	l
f0107716	obj/kern/kernel.asm	/^f0107716:	00 $/;"	l
f0107717	obj/kern/kernel.asm	/^f0107717:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f010771e	obj/kern/kernel.asm	/^f010771e:	00 $/;"	l
f010771f	obj/kern/kernel.asm	/^f010771f:	c7 04 24 80 8e 2b f0 	movl   $0xf02b8e80,(%esp)$/;"	l
f0107726	obj/kern/kernel.asm	/^f0107726:	e8 fc ec ff ff       	call   f0106427 <memset>$/;"	l
f010772b	obj/kern/kernel.asm	/^f010772b:	b8 80 8e 2b f0       	mov    $0xf02b8e80,%eax$/;"	l
f0107730	obj/kern/kernel.asm	/^f0107730:	e8 96 fb ff ff       	call   f01072cb <pci_scan_bus>$/;"	l
f0107735	obj/kern/kernel.asm	/^f0107735:	c9                   	leave  $/;"	l
f0107736	obj/kern/kernel.asm	/^f0107736:	c3                   	ret    $/;"	l
f0107737	obj/kern/kernel.asm	/^f0107737 <time_init>:$/;"	l
f0107737	obj/kern/kernel.asm	/^f0107737:	55                   	push   %ebp$/;"	l
f0107738	obj/kern/kernel.asm	/^f0107738:	89 e5                	mov    %esp,%ebp$/;"	l
f010773a	obj/kern/kernel.asm	/^f010773a:	c7 05 88 8e 2b f0 00 	movl   $0x0,0xf02b8e88$/;"	l
f0107741	obj/kern/kernel.asm	/^f0107741:	00 00 00 $/;"	l
f0107744	obj/kern/kernel.asm	/^f0107744:	5d                   	pop    %ebp$/;"	l
f0107745	obj/kern/kernel.asm	/^f0107745:	c3                   	ret    $/;"	l
f0107746	obj/kern/kernel.asm	/^f0107746 <time_tick>:$/;"	l
f0107746	obj/kern/kernel.asm	/^f0107746:	a1 88 8e 2b f0       	mov    0xf02b8e88,%eax$/;"	l
f010774b	obj/kern/kernel.asm	/^f010774b:	83 c0 01             	add    $0x1,%eax$/;"	l
f010774e	obj/kern/kernel.asm	/^f010774e:	a3 88 8e 2b f0       	mov    %eax,0xf02b8e88$/;"	l
f0107753	obj/kern/kernel.asm	/^f0107753:	8d 14 80             	lea    (%eax,%eax,4),%edx$/;"	l
f0107756	obj/kern/kernel.asm	/^f0107756:	01 d2                	add    %edx,%edx$/;"	l
f0107758	obj/kern/kernel.asm	/^f0107758:	39 d0                	cmp    %edx,%eax$/;"	l
f010775a	obj/kern/kernel.asm	/^f010775a:	76 22                	jbe    f010777e <time_tick+0x38>$/;"	l
f010775c	obj/kern/kernel.asm	/^f010775c:	55                   	push   %ebp$/;"	l
f010775d	obj/kern/kernel.asm	/^f010775d:	89 e5                	mov    %esp,%ebp$/;"	l
f010775f	obj/kern/kernel.asm	/^f010775f:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0107762	obj/kern/kernel.asm	/^f0107762:	c7 44 24 08 d8 9a 10 	movl   $0xf0109ad8,0x8(%esp)$/;"	l
f0107769	obj/kern/kernel.asm	/^f0107769:	f0 $/;"	l
f010776a	obj/kern/kernel.asm	/^f010776a:	c7 44 24 04 13 00 00 	movl   $0x13,0x4(%esp)$/;"	l
f0107771	obj/kern/kernel.asm	/^f0107771:	00 $/;"	l
f0107772	obj/kern/kernel.asm	/^f0107772:	c7 04 24 f3 9a 10 f0 	movl   $0xf0109af3,(%esp)$/;"	l
f0107779	obj/kern/kernel.asm	/^f0107779:	e8 c2 88 ff ff       	call   f0100040 <_panic>$/;"	l
f010777e	obj/kern/kernel.asm	/^f010777e:	f3 c3                	repz ret $/;"	l
f0107780	obj/kern/kernel.asm	/^f0107780 <time_msec>:$/;"	l
f0107780	obj/kern/kernel.asm	/^f0107780:	55                   	push   %ebp$/;"	l
f0107781	obj/kern/kernel.asm	/^f0107781:	89 e5                	mov    %esp,%ebp$/;"	l
f0107783	obj/kern/kernel.asm	/^f0107783:	a1 88 8e 2b f0       	mov    0xf02b8e88,%eax$/;"	l
f0107788	obj/kern/kernel.asm	/^f0107788:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f010778b	obj/kern/kernel.asm	/^f010778b:	01 c0                	add    %eax,%eax$/;"	l
f010778d	obj/kern/kernel.asm	/^f010778d:	5d                   	pop    %ebp$/;"	l
f010778e	obj/kern/kernel.asm	/^f010778e:	c3                   	ret    $/;"	l
f010778f	obj/kern/kernel.asm	/^f010778f:	90                   	nop$/;"	l
f0107790	obj/kern/kernel.asm	/^f0107790 <__udivdi3>:$/;"	l
f0107790	obj/kern/kernel.asm	/^f0107790:	55                   	push   %ebp$/;"	l
f0107791	obj/kern/kernel.asm	/^f0107791:	57                   	push   %edi$/;"	l
f0107792	obj/kern/kernel.asm	/^f0107792:	56                   	push   %esi$/;"	l
f0107793	obj/kern/kernel.asm	/^f0107793:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0107796	obj/kern/kernel.asm	/^f0107796:	8b 44 24 28          	mov    0x28(%esp),%eax$/;"	l
f010779a	obj/kern/kernel.asm	/^f010779a:	8b 7c 24 1c          	mov    0x1c(%esp),%edi$/;"	l
f010779e	obj/kern/kernel.asm	/^f010779e:	8b 6c 24 20          	mov    0x20(%esp),%ebp$/;"	l
f01077a2	obj/kern/kernel.asm	/^f01077a2:	8b 4c 24 24          	mov    0x24(%esp),%ecx$/;"	l
f01077a6	obj/kern/kernel.asm	/^f01077a6:	85 c0                	test   %eax,%eax$/;"	l
f01077a8	obj/kern/kernel.asm	/^f01077a8:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01077ac	obj/kern/kernel.asm	/^f01077ac:	89 ea                	mov    %ebp,%edx$/;"	l
f01077ae	obj/kern/kernel.asm	/^f01077ae:	89 0c 24             	mov    %ecx,(%esp)$/;"	l
f01077b1	obj/kern/kernel.asm	/^f01077b1:	75 2d                	jne    f01077e0 <__udivdi3+0x50>$/;"	l
f01077b3	obj/kern/kernel.asm	/^f01077b3:	39 e9                	cmp    %ebp,%ecx$/;"	l
f01077b5	obj/kern/kernel.asm	/^f01077b5:	77 61                	ja     f0107818 <__udivdi3+0x88>$/;"	l
f01077b7	obj/kern/kernel.asm	/^f01077b7:	85 c9                	test   %ecx,%ecx$/;"	l
f01077b9	obj/kern/kernel.asm	/^f01077b9:	89 ce                	mov    %ecx,%esi$/;"	l
f01077bb	obj/kern/kernel.asm	/^f01077bb:	75 0b                	jne    f01077c8 <__udivdi3+0x38>$/;"	l
f01077bd	obj/kern/kernel.asm	/^f01077bd:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01077c2	obj/kern/kernel.asm	/^f01077c2:	31 d2                	xor    %edx,%edx$/;"	l
f01077c4	obj/kern/kernel.asm	/^f01077c4:	f7 f1                	div    %ecx$/;"	l
f01077c6	obj/kern/kernel.asm	/^f01077c6:	89 c6                	mov    %eax,%esi$/;"	l
f01077c8	obj/kern/kernel.asm	/^f01077c8:	31 d2                	xor    %edx,%edx$/;"	l
f01077ca	obj/kern/kernel.asm	/^f01077ca:	89 e8                	mov    %ebp,%eax$/;"	l
f01077cc	obj/kern/kernel.asm	/^f01077cc:	f7 f6                	div    %esi$/;"	l
f01077ce	obj/kern/kernel.asm	/^f01077ce:	89 c5                	mov    %eax,%ebp$/;"	l
f01077d0	obj/kern/kernel.asm	/^f01077d0:	89 f8                	mov    %edi,%eax$/;"	l
f01077d2	obj/kern/kernel.asm	/^f01077d2:	f7 f6                	div    %esi$/;"	l
f01077d4	obj/kern/kernel.asm	/^f01077d4:	89 ea                	mov    %ebp,%edx$/;"	l
f01077d6	obj/kern/kernel.asm	/^f01077d6:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01077d9	obj/kern/kernel.asm	/^f01077d9:	5e                   	pop    %esi$/;"	l
f01077da	obj/kern/kernel.asm	/^f01077da:	5f                   	pop    %edi$/;"	l
f01077db	obj/kern/kernel.asm	/^f01077db:	5d                   	pop    %ebp$/;"	l
f01077dc	obj/kern/kernel.asm	/^f01077dc:	c3                   	ret    $/;"	l
f01077dd	obj/kern/kernel.asm	/^f01077dd:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f01077e0	obj/kern/kernel.asm	/^f01077e0:	39 e8                	cmp    %ebp,%eax$/;"	l
f01077e2	obj/kern/kernel.asm	/^f01077e2:	77 24                	ja     f0107808 <__udivdi3+0x78>$/;"	l
f01077e4	obj/kern/kernel.asm	/^f01077e4:	0f bd e8             	bsr    %eax,%ebp$/;"	l
f01077e7	obj/kern/kernel.asm	/^f01077e7:	83 f5 1f             	xor    $0x1f,%ebp$/;"	l
f01077ea	obj/kern/kernel.asm	/^f01077ea:	75 3c                	jne    f0107828 <__udivdi3+0x98>$/;"	l
f01077ec	obj/kern/kernel.asm	/^f01077ec:	8b 74 24 04          	mov    0x4(%esp),%esi$/;"	l
f01077f0	obj/kern/kernel.asm	/^f01077f0:	39 34 24             	cmp    %esi,(%esp)$/;"	l
f01077f3	obj/kern/kernel.asm	/^f01077f3:	0f 86 9f 00 00 00    	jbe    f0107898 <__udivdi3+0x108>$/;"	l
f01077f9	obj/kern/kernel.asm	/^f01077f9:	39 d0                	cmp    %edx,%eax$/;"	l
f01077fb	obj/kern/kernel.asm	/^f01077fb:	0f 82 97 00 00 00    	jb     f0107898 <__udivdi3+0x108>$/;"	l
f0107801	obj/kern/kernel.asm	/^f0107801:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0107808	obj/kern/kernel.asm	/^f0107808:	31 d2                	xor    %edx,%edx$/;"	l
f010780a	obj/kern/kernel.asm	/^f010780a:	31 c0                	xor    %eax,%eax$/;"	l
f010780c	obj/kern/kernel.asm	/^f010780c:	83 c4 0c             	add    $0xc,%esp$/;"	l
f010780f	obj/kern/kernel.asm	/^f010780f:	5e                   	pop    %esi$/;"	l
f0107810	obj/kern/kernel.asm	/^f0107810:	5f                   	pop    %edi$/;"	l
f0107811	obj/kern/kernel.asm	/^f0107811:	5d                   	pop    %ebp$/;"	l
f0107812	obj/kern/kernel.asm	/^f0107812:	c3                   	ret    $/;"	l
f0107813	obj/kern/kernel.asm	/^f0107813:	90                   	nop$/;"	l
f0107814	obj/kern/kernel.asm	/^f0107814:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0107818	obj/kern/kernel.asm	/^f0107818:	89 f8                	mov    %edi,%eax$/;"	l
f010781a	obj/kern/kernel.asm	/^f010781a:	f7 f1                	div    %ecx$/;"	l
f010781c	obj/kern/kernel.asm	/^f010781c:	31 d2                	xor    %edx,%edx$/;"	l
f010781e	obj/kern/kernel.asm	/^f010781e:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0107821	obj/kern/kernel.asm	/^f0107821:	5e                   	pop    %esi$/;"	l
f0107822	obj/kern/kernel.asm	/^f0107822:	5f                   	pop    %edi$/;"	l
f0107823	obj/kern/kernel.asm	/^f0107823:	5d                   	pop    %ebp$/;"	l
f0107824	obj/kern/kernel.asm	/^f0107824:	c3                   	ret    $/;"	l
f0107825	obj/kern/kernel.asm	/^f0107825:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0107828	obj/kern/kernel.asm	/^f0107828:	89 e9                	mov    %ebp,%ecx$/;"	l
f010782a	obj/kern/kernel.asm	/^f010782a:	8b 3c 24             	mov    (%esp),%edi$/;"	l
f010782d	obj/kern/kernel.asm	/^f010782d:	d3 e0                	shl    %cl,%eax$/;"	d
f010782f	obj/kern/kernel.asm	/^f010782f:	89 c6                	mov    %eax,%esi$/;"	l
f0107831	obj/kern/kernel.asm	/^f0107831:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0107836	obj/kern/kernel.asm	/^f0107836:	29 e8                	sub    %ebp,%eax$/;"	l
f0107838	obj/kern/kernel.asm	/^f0107838:	89 c1                	mov    %eax,%ecx$/;"	l
f010783a	obj/kern/kernel.asm	/^f010783a:	d3 ef                	shr    %cl,%edi$/;"	d
f010783c	obj/kern/kernel.asm	/^f010783c:	89 e9                	mov    %ebp,%ecx$/;"	l
f010783e	obj/kern/kernel.asm	/^f010783e:	89 7c 24 08          	mov    %edi,0x8(%esp)$/;"	l
f0107842	obj/kern/kernel.asm	/^f0107842:	8b 3c 24             	mov    (%esp),%edi$/;"	l
f0107845	obj/kern/kernel.asm	/^f0107845:	09 74 24 08          	or     %esi,0x8(%esp)$/;"	l
f0107849	obj/kern/kernel.asm	/^f0107849:	89 d6                	mov    %edx,%esi$/;"	l
f010784b	obj/kern/kernel.asm	/^f010784b:	d3 e7                	shl    %cl,%edi$/;"	d
f010784d	obj/kern/kernel.asm	/^f010784d:	89 c1                	mov    %eax,%ecx$/;"	l
f010784f	obj/kern/kernel.asm	/^f010784f:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0107852	obj/kern/kernel.asm	/^f0107852:	8b 7c 24 04          	mov    0x4(%esp),%edi$/;"	l
f0107856	obj/kern/kernel.asm	/^f0107856:	d3 ee                	shr    %cl,%esi$/;"	d
f0107858	obj/kern/kernel.asm	/^f0107858:	89 e9                	mov    %ebp,%ecx$/;"	l
f010785a	obj/kern/kernel.asm	/^f010785a:	d3 e2                	shl    %cl,%edx$/;"	d
f010785c	obj/kern/kernel.asm	/^f010785c:	89 c1                	mov    %eax,%ecx$/;"	l
f010785e	obj/kern/kernel.asm	/^f010785e:	d3 ef                	shr    %cl,%edi$/;"	d
f0107860	obj/kern/kernel.asm	/^f0107860:	09 d7                	or     %edx,%edi$/;"	l
f0107862	obj/kern/kernel.asm	/^f0107862:	89 f2                	mov    %esi,%edx$/;"	l
f0107864	obj/kern/kernel.asm	/^f0107864:	89 f8                	mov    %edi,%eax$/;"	l
f0107866	obj/kern/kernel.asm	/^f0107866:	f7 74 24 08          	divl   0x8(%esp)$/;"	l
f010786a	obj/kern/kernel.asm	/^f010786a:	89 d6                	mov    %edx,%esi$/;"	l
f010786c	obj/kern/kernel.asm	/^f010786c:	89 c7                	mov    %eax,%edi$/;"	l
f010786e	obj/kern/kernel.asm	/^f010786e:	f7 24 24             	mull   (%esp)$/;"	l
f0107871	obj/kern/kernel.asm	/^f0107871:	39 d6                	cmp    %edx,%esi$/;"	l
f0107873	obj/kern/kernel.asm	/^f0107873:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0107876	obj/kern/kernel.asm	/^f0107876:	72 30                	jb     f01078a8 <__udivdi3+0x118>$/;"	l
f0107878	obj/kern/kernel.asm	/^f0107878:	8b 54 24 04          	mov    0x4(%esp),%edx$/;"	l
f010787c	obj/kern/kernel.asm	/^f010787c:	89 e9                	mov    %ebp,%ecx$/;"	l
f010787e	obj/kern/kernel.asm	/^f010787e:	d3 e2                	shl    %cl,%edx$/;"	d
f0107880	obj/kern/kernel.asm	/^f0107880:	39 c2                	cmp    %eax,%edx$/;"	l
f0107882	obj/kern/kernel.asm	/^f0107882:	73 05                	jae    f0107889 <__udivdi3+0xf9>$/;"	l
f0107884	obj/kern/kernel.asm	/^f0107884:	3b 34 24             	cmp    (%esp),%esi$/;"	l
f0107887	obj/kern/kernel.asm	/^f0107887:	74 1f                	je     f01078a8 <__udivdi3+0x118>$/;"	l
f0107889	obj/kern/kernel.asm	/^f0107889:	89 f8                	mov    %edi,%eax$/;"	l
f010788b	obj/kern/kernel.asm	/^f010788b:	31 d2                	xor    %edx,%edx$/;"	l
f010788d	obj/kern/kernel.asm	/^f010788d:	e9 7a ff ff ff       	jmp    f010780c <__udivdi3+0x7c>$/;"	l
f0107892	obj/kern/kernel.asm	/^f0107892:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
f0107898	obj/kern/kernel.asm	/^f0107898:	31 d2                	xor    %edx,%edx$/;"	l
f010789a	obj/kern/kernel.asm	/^f010789a:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f010789f	obj/kern/kernel.asm	/^f010789f:	e9 68 ff ff ff       	jmp    f010780c <__udivdi3+0x7c>$/;"	l
f01078a4	obj/kern/kernel.asm	/^f01078a4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f01078a8	obj/kern/kernel.asm	/^f01078a8:	8d 47 ff             	lea    -0x1(%edi),%eax$/;"	l
f01078ab	obj/kern/kernel.asm	/^f01078ab:	31 d2                	xor    %edx,%edx$/;"	l
f01078ad	obj/kern/kernel.asm	/^f01078ad:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01078b0	obj/kern/kernel.asm	/^f01078b0:	5e                   	pop    %esi$/;"	l
f01078b1	obj/kern/kernel.asm	/^f01078b1:	5f                   	pop    %edi$/;"	l
f01078b2	obj/kern/kernel.asm	/^f01078b2:	5d                   	pop    %ebp$/;"	l
f01078b3	obj/kern/kernel.asm	/^f01078b3:	c3                   	ret    $/;"	l
f01078b4	obj/kern/kernel.asm	/^f01078b4:	66 90                	xchg   %ax,%ax$/;"	l
f01078b6	obj/kern/kernel.asm	/^f01078b6:	66 90                	xchg   %ax,%ax$/;"	l
f01078b8	obj/kern/kernel.asm	/^f01078b8:	66 90                	xchg   %ax,%ax$/;"	l
f01078ba	obj/kern/kernel.asm	/^f01078ba:	66 90                	xchg   %ax,%ax$/;"	l
f01078bc	obj/kern/kernel.asm	/^f01078bc:	66 90                	xchg   %ax,%ax$/;"	l
f01078be	obj/kern/kernel.asm	/^f01078be:	66 90                	xchg   %ax,%ax$/;"	l
f01078c0	obj/kern/kernel.asm	/^f01078c0 <__umoddi3>:$/;"	l
f01078c0	obj/kern/kernel.asm	/^f01078c0:	55                   	push   %ebp$/;"	l
f01078c1	obj/kern/kernel.asm	/^f01078c1:	57                   	push   %edi$/;"	l
f01078c2	obj/kern/kernel.asm	/^f01078c2:	56                   	push   %esi$/;"	l
f01078c3	obj/kern/kernel.asm	/^f01078c3:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01078c6	obj/kern/kernel.asm	/^f01078c6:	8b 44 24 28          	mov    0x28(%esp),%eax$/;"	l
f01078ca	obj/kern/kernel.asm	/^f01078ca:	8b 4c 24 24          	mov    0x24(%esp),%ecx$/;"	l
f01078ce	obj/kern/kernel.asm	/^f01078ce:	8b 74 24 2c          	mov    0x2c(%esp),%esi$/;"	l
f01078d2	obj/kern/kernel.asm	/^f01078d2:	89 c7                	mov    %eax,%edi$/;"	l
f01078d4	obj/kern/kernel.asm	/^f01078d4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01078d8	obj/kern/kernel.asm	/^f01078d8:	8b 44 24 30          	mov    0x30(%esp),%eax$/;"	l
f01078dc	obj/kern/kernel.asm	/^f01078dc:	89 4c 24 10          	mov    %ecx,0x10(%esp)$/;"	l
f01078e0	obj/kern/kernel.asm	/^f01078e0:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01078e3	obj/kern/kernel.asm	/^f01078e3:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f01078e7	obj/kern/kernel.asm	/^f01078e7:	85 c0                	test   %eax,%eax$/;"	l
f01078e9	obj/kern/kernel.asm	/^f01078e9:	89 c2                	mov    %eax,%edx$/;"	l
f01078eb	obj/kern/kernel.asm	/^f01078eb:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f01078ef	obj/kern/kernel.asm	/^f01078ef:	75 17                	jne    f0107908 <__umoddi3+0x48>$/;"	l
f01078f1	obj/kern/kernel.asm	/^f01078f1:	39 fe                	cmp    %edi,%esi$/;"	l
f01078f3	obj/kern/kernel.asm	/^f01078f3:	76 4b                	jbe    f0107940 <__umoddi3+0x80>$/;"	l
f01078f5	obj/kern/kernel.asm	/^f01078f5:	89 c8                	mov    %ecx,%eax$/;"	l
f01078f7	obj/kern/kernel.asm	/^f01078f7:	89 fa                	mov    %edi,%edx$/;"	l
f01078f9	obj/kern/kernel.asm	/^f01078f9:	f7 f6                	div    %esi$/;"	l
f01078fb	obj/kern/kernel.asm	/^f01078fb:	89 d0                	mov    %edx,%eax$/;"	l
f01078fd	obj/kern/kernel.asm	/^f01078fd:	31 d2                	xor    %edx,%edx$/;"	l
f01078ff	obj/kern/kernel.asm	/^f01078ff:	83 c4 14             	add    $0x14,%esp$/;"	l
f0107902	obj/kern/kernel.asm	/^f0107902:	5e                   	pop    %esi$/;"	l
f0107903	obj/kern/kernel.asm	/^f0107903:	5f                   	pop    %edi$/;"	l
f0107904	obj/kern/kernel.asm	/^f0107904:	5d                   	pop    %ebp$/;"	l
f0107905	obj/kern/kernel.asm	/^f0107905:	c3                   	ret    $/;"	l
f0107906	obj/kern/kernel.asm	/^f0107906:	66 90                	xchg   %ax,%ax$/;"	l
f0107908	obj/kern/kernel.asm	/^f0107908:	39 f8                	cmp    %edi,%eax$/;"	l
f010790a	obj/kern/kernel.asm	/^f010790a:	77 54                	ja     f0107960 <__umoddi3+0xa0>$/;"	l
f010790c	obj/kern/kernel.asm	/^f010790c:	0f bd e8             	bsr    %eax,%ebp$/;"	l
f010790f	obj/kern/kernel.asm	/^f010790f:	83 f5 1f             	xor    $0x1f,%ebp$/;"	l
f0107912	obj/kern/kernel.asm	/^f0107912:	75 5c                	jne    f0107970 <__umoddi3+0xb0>$/;"	l
f0107914	obj/kern/kernel.asm	/^f0107914:	8b 7c 24 08          	mov    0x8(%esp),%edi$/;"	l
f0107918	obj/kern/kernel.asm	/^f0107918:	39 3c 24             	cmp    %edi,(%esp)$/;"	l
f010791b	obj/kern/kernel.asm	/^f010791b:	0f 87 e7 00 00 00    	ja     f0107a08 <__umoddi3+0x148>$/;"	l
f0107921	obj/kern/kernel.asm	/^f0107921:	8b 7c 24 04          	mov    0x4(%esp),%edi$/;"	l
f0107925	obj/kern/kernel.asm	/^f0107925:	29 f1                	sub    %esi,%ecx$/;"	l
f0107927	obj/kern/kernel.asm	/^f0107927:	19 c7                	sbb    %eax,%edi$/;"	l
f0107929	obj/kern/kernel.asm	/^f0107929:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f010792d	obj/kern/kernel.asm	/^f010792d:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f0107931	obj/kern/kernel.asm	/^f0107931:	8b 44 24 08          	mov    0x8(%esp),%eax$/;"	l
f0107935	obj/kern/kernel.asm	/^f0107935:	8b 54 24 0c          	mov    0xc(%esp),%edx$/;"	l
f0107939	obj/kern/kernel.asm	/^f0107939:	83 c4 14             	add    $0x14,%esp$/;"	l
f010793c	obj/kern/kernel.asm	/^f010793c:	5e                   	pop    %esi$/;"	l
f010793d	obj/kern/kernel.asm	/^f010793d:	5f                   	pop    %edi$/;"	l
f010793e	obj/kern/kernel.asm	/^f010793e:	5d                   	pop    %ebp$/;"	l
f010793f	obj/kern/kernel.asm	/^f010793f:	c3                   	ret    $/;"	l
f0107940	obj/kern/kernel.asm	/^f0107940:	85 f6                	test   %esi,%esi$/;"	l
f0107942	obj/kern/kernel.asm	/^f0107942:	89 f5                	mov    %esi,%ebp$/;"	l
f0107944	obj/kern/kernel.asm	/^f0107944:	75 0b                	jne    f0107951 <__umoddi3+0x91>$/;"	l
f0107946	obj/kern/kernel.asm	/^f0107946:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f010794b	obj/kern/kernel.asm	/^f010794b:	31 d2                	xor    %edx,%edx$/;"	l
f010794d	obj/kern/kernel.asm	/^f010794d:	f7 f6                	div    %esi$/;"	l
f010794f	obj/kern/kernel.asm	/^f010794f:	89 c5                	mov    %eax,%ebp$/;"	l
f0107951	obj/kern/kernel.asm	/^f0107951:	8b 44 24 04          	mov    0x4(%esp),%eax$/;"	l
f0107955	obj/kern/kernel.asm	/^f0107955:	31 d2                	xor    %edx,%edx$/;"	l
f0107957	obj/kern/kernel.asm	/^f0107957:	f7 f5                	div    %ebp$/;"	l
f0107959	obj/kern/kernel.asm	/^f0107959:	89 c8                	mov    %ecx,%eax$/;"	l
f010795b	obj/kern/kernel.asm	/^f010795b:	f7 f5                	div    %ebp$/;"	l
f010795d	obj/kern/kernel.asm	/^f010795d:	eb 9c                	jmp    f01078fb <__umoddi3+0x3b>$/;"	l
f010795f	obj/kern/kernel.asm	/^f010795f:	90                   	nop$/;"	l
f0107960	obj/kern/kernel.asm	/^f0107960:	89 c8                	mov    %ecx,%eax$/;"	l
f0107962	obj/kern/kernel.asm	/^f0107962:	89 fa                	mov    %edi,%edx$/;"	l
f0107964	obj/kern/kernel.asm	/^f0107964:	83 c4 14             	add    $0x14,%esp$/;"	l
f0107967	obj/kern/kernel.asm	/^f0107967:	5e                   	pop    %esi$/;"	l
f0107968	obj/kern/kernel.asm	/^f0107968:	5f                   	pop    %edi$/;"	l
f0107969	obj/kern/kernel.asm	/^f0107969:	5d                   	pop    %ebp$/;"	l
f010796a	obj/kern/kernel.asm	/^f010796a:	c3                   	ret    $/;"	l
f010796b	obj/kern/kernel.asm	/^f010796b:	90                   	nop$/;"	l
f010796c	obj/kern/kernel.asm	/^f010796c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0107970	obj/kern/kernel.asm	/^f0107970:	8b 04 24             	mov    (%esp),%eax$/;"	l
f0107973	obj/kern/kernel.asm	/^f0107973:	be 20 00 00 00       	mov    $0x20,%esi$/;"	l
f0107978	obj/kern/kernel.asm	/^f0107978:	89 e9                	mov    %ebp,%ecx$/;"	l
f010797a	obj/kern/kernel.asm	/^f010797a:	29 ee                	sub    %ebp,%esi$/;"	l
f010797c	obj/kern/kernel.asm	/^f010797c:	d3 e2                	shl    %cl,%edx$/;"	d
f010797e	obj/kern/kernel.asm	/^f010797e:	89 f1                	mov    %esi,%ecx$/;"	l
f0107980	obj/kern/kernel.asm	/^f0107980:	d3 e8                	shr    %cl,%eax$/;"	d
f0107982	obj/kern/kernel.asm	/^f0107982:	89 e9                	mov    %ebp,%ecx$/;"	l
f0107984	obj/kern/kernel.asm	/^f0107984:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0107988	obj/kern/kernel.asm	/^f0107988:	8b 04 24             	mov    (%esp),%eax$/;"	l
f010798b	obj/kern/kernel.asm	/^f010798b:	09 54 24 04          	or     %edx,0x4(%esp)$/;"	l
f010798f	obj/kern/kernel.asm	/^f010798f:	89 fa                	mov    %edi,%edx$/;"	l
f0107991	obj/kern/kernel.asm	/^f0107991:	d3 e0                	shl    %cl,%eax$/;"	d
f0107993	obj/kern/kernel.asm	/^f0107993:	89 f1                	mov    %esi,%ecx$/;"	l
f0107995	obj/kern/kernel.asm	/^f0107995:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0107999	obj/kern/kernel.asm	/^f0107999:	8b 44 24 10          	mov    0x10(%esp),%eax$/;"	l
f010799d	obj/kern/kernel.asm	/^f010799d:	d3 ea                	shr    %cl,%edx$/;"	d
f010799f	obj/kern/kernel.asm	/^f010799f:	89 e9                	mov    %ebp,%ecx$/;"	l
f01079a1	obj/kern/kernel.asm	/^f01079a1:	d3 e7                	shl    %cl,%edi$/;"	d
f01079a3	obj/kern/kernel.asm	/^f01079a3:	89 f1                	mov    %esi,%ecx$/;"	l
f01079a5	obj/kern/kernel.asm	/^f01079a5:	d3 e8                	shr    %cl,%eax$/;"	d
f01079a7	obj/kern/kernel.asm	/^f01079a7:	89 e9                	mov    %ebp,%ecx$/;"	l
f01079a9	obj/kern/kernel.asm	/^f01079a9:	09 f8                	or     %edi,%eax$/;"	l
f01079ab	obj/kern/kernel.asm	/^f01079ab:	8b 7c 24 10          	mov    0x10(%esp),%edi$/;"	l
f01079af	obj/kern/kernel.asm	/^f01079af:	f7 74 24 04          	divl   0x4(%esp)$/;"	l
f01079b3	obj/kern/kernel.asm	/^f01079b3:	d3 e7                	shl    %cl,%edi$/;"	d
f01079b5	obj/kern/kernel.asm	/^f01079b5:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f01079b9	obj/kern/kernel.asm	/^f01079b9:	89 d7                	mov    %edx,%edi$/;"	l
f01079bb	obj/kern/kernel.asm	/^f01079bb:	f7 64 24 08          	mull   0x8(%esp)$/;"	l
f01079bf	obj/kern/kernel.asm	/^f01079bf:	39 d7                	cmp    %edx,%edi$/;"	l
f01079c1	obj/kern/kernel.asm	/^f01079c1:	89 c1                	mov    %eax,%ecx$/;"	l
f01079c3	obj/kern/kernel.asm	/^f01079c3:	89 14 24             	mov    %edx,(%esp)$/;"	l
f01079c6	obj/kern/kernel.asm	/^f01079c6:	72 2c                	jb     f01079f4 <__umoddi3+0x134>$/;"	l
f01079c8	obj/kern/kernel.asm	/^f01079c8:	39 44 24 0c          	cmp    %eax,0xc(%esp)$/;"	l
f01079cc	obj/kern/kernel.asm	/^f01079cc:	72 22                	jb     f01079f0 <__umoddi3+0x130>$/;"	l
f01079ce	obj/kern/kernel.asm	/^f01079ce:	8b 44 24 0c          	mov    0xc(%esp),%eax$/;"	l
f01079d2	obj/kern/kernel.asm	/^f01079d2:	29 c8                	sub    %ecx,%eax$/;"	l
f01079d4	obj/kern/kernel.asm	/^f01079d4:	19 d7                	sbb    %edx,%edi$/;"	l
f01079d6	obj/kern/kernel.asm	/^f01079d6:	89 e9                	mov    %ebp,%ecx$/;"	l
f01079d8	obj/kern/kernel.asm	/^f01079d8:	89 fa                	mov    %edi,%edx$/;"	l
f01079da	obj/kern/kernel.asm	/^f01079da:	d3 e8                	shr    %cl,%eax$/;"	d
f01079dc	obj/kern/kernel.asm	/^f01079dc:	89 f1                	mov    %esi,%ecx$/;"	l
f01079de	obj/kern/kernel.asm	/^f01079de:	d3 e2                	shl    %cl,%edx$/;"	d
f01079e0	obj/kern/kernel.asm	/^f01079e0:	89 e9                	mov    %ebp,%ecx$/;"	l
f01079e2	obj/kern/kernel.asm	/^f01079e2:	d3 ef                	shr    %cl,%edi$/;"	d
f01079e4	obj/kern/kernel.asm	/^f01079e4:	09 d0                	or     %edx,%eax$/;"	l
f01079e6	obj/kern/kernel.asm	/^f01079e6:	89 fa                	mov    %edi,%edx$/;"	l
f01079e8	obj/kern/kernel.asm	/^f01079e8:	83 c4 14             	add    $0x14,%esp$/;"	l
f01079eb	obj/kern/kernel.asm	/^f01079eb:	5e                   	pop    %esi$/;"	l
f01079ec	obj/kern/kernel.asm	/^f01079ec:	5f                   	pop    %edi$/;"	l
f01079ed	obj/kern/kernel.asm	/^f01079ed:	5d                   	pop    %ebp$/;"	l
f01079ee	obj/kern/kernel.asm	/^f01079ee:	c3                   	ret    $/;"	l
f01079ef	obj/kern/kernel.asm	/^f01079ef:	90                   	nop$/;"	l
f01079f0	obj/kern/kernel.asm	/^f01079f0:	39 d7                	cmp    %edx,%edi$/;"	l
f01079f2	obj/kern/kernel.asm	/^f01079f2:	75 da                	jne    f01079ce <__umoddi3+0x10e>$/;"	l
f01079f4	obj/kern/kernel.asm	/^f01079f4:	8b 14 24             	mov    (%esp),%edx$/;"	l
f01079f7	obj/kern/kernel.asm	/^f01079f7:	89 c1                	mov    %eax,%ecx$/;"	l
f01079f9	obj/kern/kernel.asm	/^f01079f9:	2b 4c 24 08          	sub    0x8(%esp),%ecx$/;"	l
f01079fd	obj/kern/kernel.asm	/^f01079fd:	1b 54 24 04          	sbb    0x4(%esp),%edx$/;"	l
f0107a01	obj/kern/kernel.asm	/^f0107a01:	eb cb                	jmp    f01079ce <__umoddi3+0x10e>$/;"	l
f0107a03	obj/kern/kernel.asm	/^f0107a03:	90                   	nop$/;"	l
f0107a04	obj/kern/kernel.asm	/^f0107a04:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0107a08	obj/kern/kernel.asm	/^f0107a08:	3b 44 24 0c          	cmp    0xc(%esp),%eax$/;"	l
f0107a0c	obj/kern/kernel.asm	/^f0107a0c:	0f 82 0f ff ff ff    	jb     f0107921 <__umoddi3+0x61>$/;"	l
f0107a12	obj/kern/kernel.asm	/^f0107a12:	e9 1a ff ff ff       	jmp    f0107931 <__umoddi3+0x71>$/;"	l
fault_va	obj/kern/kernel.asm	/^	fault_va = rcr2();$/;"	d
first_free_page	obj/kern/kernel.asm	/^	first_free_page = (char *) boot_alloc(0);$/;"	d
firstround	obj/kern/kernel.asm	/^		firstround = 0;$/;"	d
fl	obj/kern/kernel.asm	/^	fl = page_free_list;$/;"	d
generation	obj/kern/kernel.asm	/^		generation = 1 << ENVGENSHIFT;$/;"	d
generation	obj/kern/kernel.asm	/^	generation = (e->env_id + (1 << ENVGENSHIFT)) & ~(NENV - 1);$/;"	d
i	obj/kern/kernel.asm	/^			i = conf->entry;$/;"	d
i	obj/kern/kernel.asm	/^	i = 0;$/;"	d
int	obj/kern/kernel.asm	/^int $/;"	l
int	obj/kern/kernel.asm	/^int color;$/;"	l
int	obj/kern/kernel.asm	/^int x = 1, y = 3, z = 4;$/;"	l
int	obj/kern/kernel.asm	/^int$/;"	l
int32_t	obj/kern/kernel.asm	/^int32_t$/;"	l
irq_mask_8259A	obj/kern/kernel.asm	/^	irq_mask_8259A = mask;$/;"	d
ismp	obj/kern/kernel.asm	/^			ismp = 0;$/;"	d
ismp	obj/kern/kernel.asm	/^	ismp = 1;$/;"	d
kern_pgdir	obj/kern/kernel.asm	/^	kern_pgdir = (pde_t *) boot_alloc(PGSIZE);$/;"	d
l	obj/kern/kernel.asm	/^			l = m;$/;"	d
l	obj/kern/kernel.asm	/^			l = true_m + 1;$/;"	d
lapic	obj/kern/kernel.asm	/^	lapic = mmio_map_region(lapicaddr, 4096);$/;"	d
lapicaddr	obj/kern/kernel.asm	/^		lapicaddr = 0;$/;"	d
lapicaddr	obj/kern/kernel.asm	/^	lapicaddr = conf->lapicaddr;$/;"	d
last_tf	obj/kern/kernel.asm	/^	last_tf = tf;$/;"	d
lfile	obj/kern/kernel.asm	/^	lfile = 0;$/;"	d
lflag	obj/kern/kernel.asm	/^		lflag = 0;$/;"	d
lfun	obj/kern/kernel.asm	/^	lfun = lfile;$/;"	d
lline	obj/kern/kernel.asm	/^		lline = lfile;$/;"	d
lline	obj/kern/kernel.asm	/^		lline = lfun;$/;"	d
long	obj/kern/kernel.asm	/^long$/;"	l
mm1	obj/kern/kernel.asm	/^	mm1 = (uintptr_t) mmio_map_region(0, 4097);$/;"	d
mm2	obj/kern/kernel.asm	/^	mm2 = (uintptr_t) mmio_map_region(0, 4096);$/;"	d
mpentry_end	obj/kern/kernel.asm	/^mpentry_end:$/;"	l
mpentry_kstack	obj/kern/kernel.asm	/^		mpentry_kstack = percpu_kstacks[c - cpus] + KSTKSIZE;$/;"	d
mpentry_start	obj/kern/kernel.asm	/^mpentry_start:$/;"	l
n	obj/kern/kernel.asm	/^	n = PGNUM(ROUNDUP(len, PGSIZE));$/;"	d
n	obj/kern/kernel.asm	/^	n = ROUNDUP(NENV*sizeof(struct Env), PGSIZE);$/;"	d
n	obj/kern/kernel.asm	/^	n = ROUNDUP(npages*sizeof(struct PageInfo), PGSIZE);$/;"	d
ncpu	obj/kern/kernel.asm	/^		ncpu = 1;$/;"	d
newPage	obj/kern/kernel.asm	/^		newPage = page_alloc(0);$/;"	d
nextfree	obj/kern/kernel.asm	/^		nextfree = ROUNDUP((char *) end, PGSIZE);$/;"	d
nextfree	obj/kern/kernel.asm	/^	nextfree = ROUNDUP((char *) nextfree, PGSIZE);$/;"	d
nextfree	obj/kern/kernel.asm	/^	nextfree = nextfree + n;$/;"	d
npages	obj/kern/kernel.asm	/^		npages = (EXTPHYSMEM \/ PGSIZE) + npages_extmem;$/;"	d
npages	obj/kern/kernel.asm	/^		npages = npages_basemem;$/;"	d
npages_basemem	obj/kern/kernel.asm	/^	npages_basemem = (nvram_read(NVRAM_BASELO) * 1024) \/ PGSIZE;$/;"	d
npages_extmem	obj/kern/kernel.asm	/^	npages_extmem = (nvram_read(NVRAM_EXTLO) * 1024) \/ PGSIZE;$/;"	d
num	obj/kern/kernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/kern/kernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/kern/kernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/kern/kernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/kern/kernel.asm	/^		number:$/;"	l
p	obj/kern/kernel.asm	/^				p = "(null)";$/;"	d
p	obj/kern/kernel.asm	/^		p = *(uint16_t *) (bda + 0x13) * 1024;$/;"	d
p	obj/kern/kernel.asm	/^		p = envs;$/;"	d
p	obj/kern/kernel.asm	/^	p = (pte_t*) KADDR(PTE_ADDR(*pgdir));$/;"	d
pa	obj/kern/kernel.asm	/^		pa = PTE_ADDR(e->env_pgdir[pdeno]);$/;"	d
pa	obj/kern/kernel.asm	/^	pa = PADDR(e->env_pgdir);$/;"	d
pa	obj/kern/kernel.asm	/^	pa = PTE_ADDR(*pte) | PGOFF(va);$/;"	d
padc	obj/kern/kernel.asm	/^			padc = '-';$/;"	d
padc	obj/kern/kernel.asm	/^			padc = '0';$/;"	d
page_free_list	obj/kern/kernel.asm	/^		page_free_list = &pages[i];$/;"	d
page_free_list	obj/kern/kernel.asm	/^		page_free_list = pp1;$/;"	d
page_free_list	obj/kern/kernel.asm	/^		page_free_list = pp;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = 0;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = fl;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = page_free_list->pp_link; $/;"	d
pages	obj/kern/kernel.asm	/^	pages = (struct PageInfo *)boot_alloc(sizeof(struct PageInfo) * npages);$/;"	d
panicstr	obj/kern/kernel.asm	/^	panicstr = fmt;$/;"	d
pgdir	obj/kern/kernel.asm	/^	pgdir = &pgdir[PDX(va)];$/;"	d
pgdir	obj/kern/kernel.asm	/^	pgdir = kern_pgdir;$/;"	d
ph	obj/kern/kernel.asm	/^	ph = (struct Proghdr *) ((char *)elfhdr + elfhdr->e_phoff);$/;"	d
physaddr_t	obj/kern/kernel.asm	/^physaddr_t lapicaddr;        \/\/ Initialized in mpconfig.c$/;"	l
pos	obj/kern/kernel.asm	/^	pos = inb(addr_6845 + 1) << 8;$/;"	d
pp0	obj/kern/kernel.asm	/^	pp0 = pp1 = pp2 = 0;$/;"	d
pp1	obj/kern/kernel.asm	/^	pp1 = pp2 = 0;$/;"	d
precision	obj/kern/kernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/kern/kernel.asm	/^			precision = va_arg(ap, int);$/;"	d
proc	obj/kern/kernel.asm	/^			proc = (struct mpproc *)p;$/;"	d
process_precision	obj/kern/kernel.asm	/^		process_precision:$/;"	l
pt	obj/kern/kernel.asm	/^		pt = (pte_t*) KADDR(pa);$/;"	d
pte	obj/kern/kernel.asm	/^		pte = (pte_t *)(physaddr_t)pgdir_walk(pgdir, va + PGADDR(0, i, 0), true);$/;"	d
pte_t	obj/kern/kernel.asm	/^pte_t *$/;"	l
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(PGSIZE)]));$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) page2kva(pp0);$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = pgdir_walk(kern_pgdir, va, 1);$/;"	d
ptep1	obj/kern/kernel.asm	/^	ptep1 = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(va)]));$/;"	d
r	obj/kern/kernel.asm	/^			r = m - 1;$/;"	d
rc	obj/kern/kernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
relocated	obj/kern/kernel.asm	/^relocated:$/;"	l
result	obj/kern/kernel.asm	/^	result = nextfree;$/;"	d
result	obj/kern/kernel.asm	/^	result = page_free_list;$/;"	d
reswitch	obj/kern/kernel.asm	/^	reswitch:$/;"	l
ret	obj/kern/kernel.asm	/^			ret = syscall(	$/;"	d
ret	obj/kern/kernel.asm	/^	ret = dst;$/;"	d
rfile	obj/kern/kernel.asm	/^	rfile = (stab_end - stabs) - 1;$/;"	d
rfun	obj/kern/kernel.asm	/^	rfun = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfun;$/;"	d
s	obj/kern/kernel.asm	/^	s = src;$/;"	d
serial_exists	obj/kern/kernel.asm	/^	serial_exists = (inb(COM1+COM_LSR) != 0xFF);$/;"	d
size	obj/kern/kernel.asm	/^			size = PCI_MAPREG_IO_SIZE(rv);$/;"	d
size	obj/kern/kernel.asm	/^			size = PCI_MAPREG_MEM_SIZE(rv);$/;"	d
size	obj/kern/kernel.asm	/^	size = ROUNDUP(size, PGSIZE);$/;"	d
size_t	obj/kern/kernel.asm	/^size_t$/;"	l
spin	obj/kern/kernel.asm	/^spin:	jmp	spin$/;"	l
spin	obj/kern/kernel.asm	/^spin:$/;"	l
stab_end	obj/kern/kernel.asm	/^		stab_end = __STAB_END__;$/;"	d
stab_end	obj/kern/kernel.asm	/^		stab_end = usd->stab_end;$/;"	d
stabs	obj/kern/kernel.asm	/^		stabs = __STAB_BEGIN__;$/;"	d
stabs	obj/kern/kernel.asm	/^		stabs = usd->stabs;$/;"	d
stabstr	obj/kern/kernel.asm	/^		stabstr = __STABSTR_BEGIN__;$/;"	d
stabstr	obj/kern/kernel.asm	/^		stabstr = usd->stabstr;$/;"	d
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = __STABSTR_END__;$/;"	d
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = usd->stabstr_end;$/;"	d
start	obj/kern/kernel.asm	/^	start = PGNUM(ROUNDDOWN(IOPHYSMEM, PGSIZE));$/;"	d
start32	obj/kern/kernel.asm	/^start32:$/;"	l
static	obj/kern/kernel.asm	/^	static struct pci_bus root_bus;$/;"	t
static	obj/kern/kernel.asm	/^static __inline uint32_t$/;"	l
static	obj/kern/kernel.asm	/^static __inline uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static __inline void$/;"	l
static	obj/kern/kernel.asm	/^static bool didinit;$/;"	l
static	obj/kern/kernel.asm	/^static bool serial_exists;$/;"	l
static	obj/kern/kernel.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/kern/kernel.asm	/^static envid_t$/;"	l
static	obj/kern/kernel.asm	/^static inline physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static inline struct PageInfo*$/;"	l
static	obj/kern/kernel.asm	/^static inline void$/;"	l
static	obj/kern/kernel.asm	/^static inline void*$/;"	l
static	obj/kern/kernel.asm	/^static int __attribute__((warn_unused_result))$/;"	l
static	obj/kern/kernel.asm	/^static int$/;"	l
static	obj/kern/kernel.asm	/^static long long$/;"	l
static	obj/kern/kernel.asm	/^static physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static struct mp *$/;"	t
static	obj/kern/kernel.asm	/^static uint32_t$/;"	l
static	obj/kern/kernel.asm	/^static uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static unsigned int ticks;$/;"	l
static	obj/kern/kernel.asm	/^static unsigned long long$/;"	l
static	obj/kern/kernel.asm	/^static void *$/;"	l
static	obj/kern/kernel.asm	/^static void boot_aps(void);$/;"	l
static	obj/kern/kernel.asm	/^static void$/;"	l
sum	obj/kern/kernel.asm	/^	sum = 0;$/;"	d
tf	obj/kern/kernel.asm	/^		tf = &curenv->env_tf;$/;"	d
ticks	obj/kern/kernel.asm	/^	ticks = 0;$/;"	d
tsmitqueue	obj/kern/kernel.asm	/^	tsmitqueue = (struct e1000_tx_desc *)page2kva(pp);$/;"	d
unsigned	obj/kern/kernel.asm	/^unsigned int$/;"	l
unsigned	obj/kern/kernel.asm	/^unsigned$/;"	l
user_mem_check_addr	obj/kern/kernel.asm	/^	user_mem_check_addr = (start == ROUNDDOWN((uint32_t)va, PGSIZE)) ? (uint32_t)va : start;$/;"	d
utf	obj/kern/kernel.asm	/^			utf = (struct UTrapframe *)((uint32_t)(tf->tf_esp) - 4 - sizeof(struct UTrapframe));$/;"	d
utf	obj/kern/kernel.asm	/^			utf = (struct UTrapframe *)(UXSTACKTOP - sizeof(struct UTrapframe));$/;"	d
va	obj/kern/kernel.asm	/^	va = (void*)(PGSIZE * NPDENTRIES + PGSIZE);$/;"	d
void	obj/kern/kernel.asm	/^void	user_mem_assert(struct Env *env, const void *va, size_t len, int perm);$/;"	l
void	obj/kern/kernel.asm	/^void $/;"	l
void	obj/kern/kernel.asm	/^void *$/;"	l
void	obj/kern/kernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/kern/kernel.asm	/^void sched_halt(void);$/;"	l
void	obj/kern/kernel.asm	/^void$/;"	l
volatile	obj/kern/kernel.asm	/^volatile uint32_t *e1000;$/;"	l
volatile	obj/kern/kernel.asm	/^volatile uint32_t *lapic;$/;"	l
was	obj/kern/kernel.asm	/^	was = *cp;$/;"	d
width	obj/kern/kernel.asm	/^				width = 0;$/;"	d
width	obj/kern/kernel.asm	/^				width = precision, precision = -1;$/;"	d
wrv	obj/kern/kernel.asm	/^	wrv = (uint16_t *)KADDR((0x40 << 4 | 0x67));  \/\/ Warm reset vector$/;"	d
ASM	obj/net/ns.asm	/^#define ASM 1$/;"	d
Disassembly	obj/net/ns.asm	/^Disassembly of section .text:$/;"	l
ENTRY	obj/net/ns.asm	/^#define ENTRY(x) \\$/;"	d
TCP_LOCAL_PORT_RANGE_END	obj/net/ns.asm	/^#define TCP_LOCAL_PORT_RANGE_END   0x7fff$/;"	d
UDP_LOCAL_PORT_RANGE_END	obj/net/ns.asm	/^#define UDP_LOCAL_PORT_RANGE_END   0x7fff$/;"	d
UDP_LOCAL_PORT_RANGE_START	obj/net/ns.asm	/^#define UDP_LOCAL_PORT_RANGE_START 4096$/;"	d
_pgfault_handler	obj/net/ns.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	obj/net/ns.asm	/^_pgfault_upcall:$/;"	l
_start	obj/net/ns.asm	/^_start:$/;"	l
acc	obj/net/ns.asm	/^      acc = SWAP_BYTES_IN_WORD(acc);$/;"	d
acc	obj/net/ns.asm	/^    acc = (acc >> 16) + (acc & 0x0000ffffUL);$/;"	d
acc	obj/net/ns.asm	/^    acc = FOLD_U32T(acc);$/;"	d
acc	obj/net/ns.asm	/^    acc = SWAP_BYTES_IN_WORD(acc);$/;"	d
acc	obj/net/ns.asm	/^  acc = (acc >> 16) + (acc & 0x0000ffffUL);$/;"	d
acc	obj/net/ns.asm	/^  acc = 0;$/;"	d
acc	obj/net/ns.asm	/^  acc = FOLD_U32T(acc);$/;"	d
acceptable	obj/net/ns.asm	/^        acceptable = 1;$/;"	d
accepted_inseq	obj/net/ns.asm	/^        accepted_inseq = 1; $/;"	d
accepted_inseq	obj/net/ns.asm	/^        accepted_inseq = tcp_receive(pcb);$/;"	d
accepted_inseq	obj/net/ns.asm	/^    accepted_inseq = tcp_receive(pcb);$/;"	d
ackno	obj/net/ns.asm	/^    ackno = pcb->rcv_nxt;$/;"	d
ackno	obj/net/ns.asm	/^  ackno = tcphdr->ackno = ntohl(tcphdr->ackno);$/;"	d
addr	obj/net/ns.asm	/^	addr = (void *)ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/net/ns.asm	/^      addr = (struct ip_addr*)&(sin.sin_addr.s_addr);$/;"	d
addr	obj/net/ns.asm	/^      addr = netbuf_fromaddr(buf);$/;"	d
addr2test	obj/net/ns.asm	/^  addr2test = addr->addr;$/;"	d
again	obj/net/ns.asm	/^ again:$/;"	l
age_pending	obj/net/ns.asm	/^          age_pending = arp_table[i].ctime;$/;"	d
age_queue	obj/net/ns.asm	/^          age_queue = arp_table[i].ctime;$/;"	d
age_stable	obj/net/ns.asm	/^        age_stable = arp_table[i].ctime;$/;"	d
altflag	obj/net/ns.asm	/^			altflag = 1;$/;"	d
altflag	obj/net/ns.asm	/^		altflag = 0;$/;"	d
ap	obj/net/ns.asm	/^  ap = (u8_t *)&s_addr;$/;"	d
arg	obj/net/ns.asm	/^      arg = tmptimeout->arg;$/;"	d
arg	obj/net/ns.asm	/^  arg = arg;$/;"	d
args_exist	obj/net/ns.asm	/^args_exist:$/;"	l
available	obj/net/ns.asm	/^  available = tcp_sndbuf(conn->pcb.tcp);$/;"	d
backlog	obj/net/ns.asm	/^    backlog = 0xff;$/;"	d
base	obj/net/ns.asm	/^			base = 10;$/;"	d
base	obj/net/ns.asm	/^			base = 16;$/;"	d
base	obj/net/ns.asm	/^			base = 8;$/;"	d
base	obj/net/ns.asm	/^		base = 10;$/;"	d
base	obj/net/ns.asm	/^        base = 16;$/;"	d
base	obj/net/ns.asm	/^        base = 8;$/;"	d
base	obj/net/ns.asm	/^    base = 10;$/;"	d
binaryname	obj/net/ns.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/net/ns.asm	/^	binaryname = "ns";$/;"	d
binaryname	obj/net/ns.asm	/^	binaryname = "ns_input";$/;"	d
binaryname	obj/net/ns.asm	/^	binaryname = "ns_output";$/;"	d
binaryname	obj/net/ns.asm	/^	binaryname = "ns_timer";$/;"	d
buf	obj/net/ns.asm	/^	buf = vbuf;$/;"	d
buf	obj/net/ns.asm	/^      buf = NULL;$/;"	d
buf	obj/net/ns.asm	/^      buf = memp_malloc(MEMP_NETBUF);$/;"	d
buf	obj/net/ns.asm	/^      buf = sock->lastdata;$/;"	d
buf	obj/net/ns.asm	/^    buf = memp_malloc(MEMP_NETBUF);$/;"	d
buf	obj/net/ns.asm	/^  buf = memp_malloc(MEMP_NETBUF);$/;"	d
buf_copy_len	obj/net/ns.asm	/^          buf_copy_len = len;$/;"	d
buf_copy_len	obj/net/ns.asm	/^      buf_copy_len = p->len - offset;$/;"	d
buflen	obj/net/ns.asm	/^      buflen = netbuf_len(sock->lastdata);$/;"	d
buflen	obj/net/ns.asm	/^    buflen = netbuf_len(buf);$/;"	d
bytes	obj/net/ns.asm	/^	    bytes = len - copied;$/;"	d
c	obj/net/ns.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/net/ns.asm	/^	c = ROUNDDOWN(v, PGSIZE);$/;"	d
c	obj/net/ns.asm	/^        c = *++cp;$/;"	d
c	obj/net/ns.asm	/^      c = *++cp;$/;"	d
c	obj/net/ns.asm	/^  c = *cp;$/;"	d
ch	obj/net/ns.asm	/^				ch = *fmt;$/;"	d
char	obj/net/ns.asm	/^char *$/;"	l
chklen	obj/net/ns.asm	/^      chklen = chksum_len;$/;"	d
chklen	obj/net/ns.asm	/^    chklen = q->len;$/;"	d
clen	obj/net/ns.asm	/^  clen = pbuf_clen(p);$/;"	d
clrflag	obj/net/ns.asm	/^		clrflag = 0;$/;"	d
cnt	obj/net/ns.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
code	obj/net/ns.asm	/^  code = *(((u8_t *)p->payload)+1);$/;"	d
color	obj/net/ns.asm	/^				color = 0;$/;"	d
color	obj/net/ns.asm	/^			color = 0;$/;"	d
colorswitch	obj/net/ns.asm	/^	colorswitch:$/;"	l
conn	obj/net/ns.asm	/^    conn = netconn_new_with_callback( (protocol == IPPROTO_UDPLITE) ?$/;"	d
conn	obj/net/ns.asm	/^    conn = netconn_new_with_callback(NETCONN_TCP, event_callback);$/;"	d
conn	obj/net/ns.asm	/^    conn = netconn_new_with_proto_and_callback(NETCONN_RAW, (u8_t)protocol, event_callback);$/;"	d
conn	obj/net/ns.asm	/^  conn = (struct netconn *)arg;$/;"	d
conn	obj/net/ns.asm	/^  conn = arg;$/;"	d
conn	obj/net/ns.asm	/^  conn = memp_malloc(MEMP_NETCONN);$/;"	d
conn	obj/net/ns.asm	/^  conn = netconn_alloc(t, callback);$/;"	d
const	obj/net/ns.asm	/^const char *$/;"	l
const	obj/net/ns.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/net/ns.asm	/^const volatile struct Env *thisenv;$/;"	l
cont	obj/net/ns.asm	/^		cont = (i + PGSIZE < n + 4) ? PTE_CONTINUED : 0;$/;"	d
cop	obj/net/ns.asm	/^    cop = last ? left : nfb * 8;$/;"	d
copy_needed	obj/net/ns.asm	/^          copy_needed = 1;$/;"	d
copylen	obj/net/ns.asm	/^      copylen = buflen;$/;"	d
copylen	obj/net/ns.asm	/^      copylen = len;$/;"	d
count	obj/net/ns.asm	/^      count = pbuf_free(seg->p);$/;"	d
count	obj/net/ns.asm	/^  count = 0;$/;"	d
cseg	obj/net/ns.asm	/^                  cseg = tcp_seg_copy(&inseg);$/;"	d
cseg	obj/net/ns.asm	/^                cseg = tcp_seg_copy(&inseg);$/;"	d
cseg	obj/net/ns.asm	/^          cseg = pcb->ooseq;$/;"	d
cseg	obj/net/ns.asm	/^  cseg = memp_malloc(MEMP_TCP_SEG);$/;"	d
cur_tc	obj/net/ns.asm	/^    cur_tc = NULL;$/;"	d
cur_tc	obj/net/ns.asm	/^    cur_tc = next_tc;$/;"	d
d	obj/net/ns.asm	/^	d = dst;$/;"	d
data	obj/net/ns.asm	/^  data = (struct lwip_setgetsockopt_data*)arg;$/;"	d
dataptr	obj/net/ns.asm	/^  dataptr = (u8_t*)conn->write_msg->msg.w.dataptr + conn->write_offset;$/;"	d
default	obj/net/ns.asm	/^		default:$/;"	l
default	obj/net/ns.asm	/^	default:$/;"	l
default	obj/net/ns.asm	/^      default: \/* unrecognized socket type *\/$/;"	l
default	obj/net/ns.asm	/^      default:$/;"	l
default	obj/net/ns.asm	/^    default:$/;"	l
default	obj/net/ns.asm	/^   default:$/;"	l
default	obj/net/ns.asm	/^  default:$/;"	l
dest	obj/net/ns.asm	/^    dest = &(iphdr->dest);$/;"	d
dest	obj/net/ns.asm	/^    dest = &mcastaddr;$/;"	d
dest	obj/net/ns.asm	/^    dest = (struct eth_addr *)&ethbroadcast;$/;"	d
dest	obj/net/ns.asm	/^  dest = NULL;$/;"	d
dest	obj/net/ns.asm	/^  dest = ntohs(udphdr->dest);$/;"	d
dhcp	obj/net/ns.asm	/^    dhcp = mem_malloc(sizeof(struct dhcp));$/;"	d
dhcp	obj/net/ns.asm	/^  dhcp = mem_malloc(sizeof(struct dhcp));$/;"	d
dhcp	obj/net/ns.asm	/^  dhcp = netif->dhcp;$/;"	d
dig	obj/net/ns.asm	/^			dig = *s - '0';$/;"	d
dig	obj/net/ns.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/net/ns.asm	/^			dig = *s - 'a' + 10;$/;"	d
done	obj/net/ns.asm	/^        done = 1;$/;"	d
done	obj/net/ns.asm	/^      done = 1;$/;"	d
done	obj/net/ns.asm	/^ done:$/;"	l
dst_in	obj/net/ns.asm	/^	dst_in = dst;$/;"	d
eaten	obj/net/ns.asm	/^          eaten = 1;$/;"	d
eff_wnd	obj/net/ns.asm	/^          eff_wnd = LWIP_MIN(pcb->cwnd, pcb->snd_wnd);$/;"	d
empty	obj/net/ns.asm	/^      empty = i;$/;"	d
enum	obj/net/ns.asm	/^enum netconn_type$/;"	l
enum	obj/net/ns.asm	/^enum { thread_hash_size = 257 };$/;"	l
envid_t	obj/net/ns.asm	/^envid_t$/;"	l
err	obj/net/ns.asm	/^				err = -err;$/;"	d
err	obj/net/ns.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/net/ns.asm	/^        err = EAFNOSUPPORT;$/;"	d
err	obj/net/ns.asm	/^        err = EINVAL;$/;"	d
err	obj/net/ns.asm	/^        err = ENOPROTOOPT;$/;"	d
err	obj/net/ns.asm	/^        err = ERR_OK;$/;"	d
err	obj/net/ns.asm	/^      err = EINVAL;$/;"	d
err	obj/net/ns.asm	/^      err = ENOPROTOOPT;$/;"	d
err	obj/net/ns.asm	/^    err = ENOPROTOOPT;$/;"	d
err	obj/net/ns.asm	/^    err = ERR_OK;$/;"	d
err	obj/net/ns.asm	/^    err = ip_output_if(q, src_ip, dst_ip, pcb->ttl, pcb->tos, IP_PROTO_UDP, netif);    $/;"	d
err	obj/net/ns.asm	/^    err = netconn_connect(sock->conn, &remote_addr, ntohs(remote_port));$/;"	d
err	obj/net/ns.asm	/^    err = netconn_disconnect(sock->conn);$/;"	d
err	obj/net/ns.asm	/^    err = netconn_send(sock->conn, &buf);$/;"	d
err	obj/net/ns.asm	/^    err = tcp_output(conn->pcb.tcp);$/;"	d
err	obj/net/ns.asm	/^    err = tcp_output_nagle(conn->pcb.tcp);$/;"	d
err	obj/net/ns.asm	/^    err = tcp_process(pcb);$/;"	d
err	obj/net/ns.asm	/^    err = tcp_send_ctrl(pcb, TCP_FIN);$/;"	d
err	obj/net/ns.asm	/^    err = udp_bind(pcb, &pcb->local_ip, pcb->local_port);$/;"	d
err	obj/net/ns.asm	/^    err:$/;"	l
err	obj/net/ns.asm	/^  err = ERR_OK;$/;"	d
err	obj/net/ns.asm	/^  err = data.err;$/;"	d
err	obj/net/ns.asm	/^  err = ip_output_if (q, src_ip, ipaddr, pcb->ttl, pcb->tos, pcb->protocol, netif);$/;"	d
err	obj/net/ns.asm	/^  err = netconn_bind(sock->conn, &local_addr, ntohs(local_port));$/;"	d
err	obj/net/ns.asm	/^  err = netconn_listen_with_backlog(sock->conn, backlog);$/;"	d
err	obj/net/ns.asm	/^  err = netconn_peer(newconn, &naddr, &port);$/;"	d
err	obj/net/ns.asm	/^  err = netconn_write(sock->conn, data, size, NETCONN_COPY | ((flags & MSG_MORE)?NETCONN_MORE:0));$/;"	d
err	obj/net/ns.asm	/^  err = tcp_close(conn->pcb.tcp);$/;"	d
err	obj/net/ns.asm	/^  err = tcp_write(conn->pcb.tcp, dataptr, len, conn->write_msg->msg.w.apiflags);$/;"	d
err	obj/net/ns.asm	/^err:$/;"	l
err1	obj/net/ns.asm	/^    err1:$/;"	l
err2	obj/net/ns.asm	/^    err2:$/;"	l
err3	obj/net/ns.asm	/^    err3:$/;"	l
err_t	obj/net/ns.asm	/^err_t $/;"	l
err_t	obj/net/ns.asm	/^err_t$/;"	l
errf	obj/net/ns.asm	/^    errf = pcb->errf;$/;"	d
errf_arg	obj/net/ns.asm	/^    errf_arg = pcb->callback_arg;$/;"	d
etharp_cached_entry	obj/net/ns.asm	/^        etharp_cached_entry = i;$/;"	d
etharp_cached_entry	obj/net/ns.asm	/^  etharp_cached_entry = i;$/;"	d
ethdst_hwaddr	obj/net/ns.asm	/^      ethdst_hwaddr = ((netif->autoip != NULL) && (netif->autoip->state != AUTOIP_STATE_OFF)) ? (u8_t*)(ethbroadcast.addr) : hdr->shwaddr.addr;$/;"	d
ethdst_hwaddr	obj/net/ns.asm	/^  ethdst_hwaddr = ((netif->autoip != NULL) && (netif->autoip->state != AUTOIP_STATE_OFF)) ? (u8_t*)(ethbroadcast.addr) : ethdst_addr->addr;$/;"	d
ethhdr	obj/net/ns.asm	/^    ethhdr = p->payload;$/;"	d
extern	obj/net/ns.asm	/^extern union Nsipc nsipcbuf;$/;"	l
fd	obj/net/ns.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/net/ns.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
field_len	obj/net/ns.asm	/^        field_len = DHCP_FILE_LEN + DHCP_SNAME_LEN;$/;"	d
field_len	obj/net/ns.asm	/^        field_len = DHCP_FILE_LEN;$/;"	d
field_len	obj/net/ns.asm	/^        field_len = DHCP_SNAME_LEN;$/;"	d
first	obj/net/ns.asm	/^        first = 0;$/;"	d
flags	obj/net/ns.asm	/^  flags = TCPH_FLAGS(tcphdr) & TCP_FLAGS;$/;"	d
for_us	obj/net/ns.asm	/^    for_us = 0;$/;"	d
for_us	obj/net/ns.asm	/^    for_us = ip_addr_cmp(&dipaddr, &(netif->ip_addr));$/;"	d
fraghdr	obj/net/ns.asm	/^    fraghdr = (struct ip_hdr*)(ipr->p->payload);$/;"	d
fraghdr	obj/net/ns.asm	/^  fraghdr = (struct ip_hdr*)new_p->payload; $/;"	d
fraghdr	obj/net/ns.asm	/^  fraghdr = (struct ip_hdr*)p->payload;$/;"	d
free_pbuf_and_return	obj/net/ns.asm	/^free_pbuf_and_return:$/;"	l
freepbuf	obj/net/ns.asm	/^freepbuf:$/;"	l
fsenv	obj/net/ns.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
grow	obj/net/ns.asm	/^  grow = new_len - p->tot_len;$/;"	d
h	obj/net/ns.asm	/^      h   = tmptimeout->h;$/;"	d
h	obj/net/ns.asm	/^      h = tmptimeout->h;$/;"	d
hdr	obj/net/ns.asm	/^  hdr = p->payload;$/;"	d
hdrlen	obj/net/ns.asm	/^  hdrlen = TCPH_HDRLEN(tcphdr);$/;"	d
header	obj/net/ns.asm	/^    header = pbuf_alloc(PBUF_LINK, 0, PBUF_RAM);$/;"	d
hlen	obj/net/ns.asm	/^  hlen = IPH_HL(iphdr) * 4;$/;"	d
i	obj/net/ns.asm	/^    i = 0;$/;"	d
i	obj/net/ns.asm	/^    i = empty;$/;"	d
i	obj/net/ns.asm	/^    i = old_pending;$/;"	d
i	obj/net/ns.asm	/^    i = old_queue;$/;"	d
i	obj/net/ns.asm	/^    i = old_stable;$/;"	d
i	obj/net/ns.asm	/^    i = sys_sem_wait_timeout(select_cb.sem, msectimeout);$/;"	d
i	obj/net/ns.asm	/^  i = alloc_socket(conn);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, ETHARP_FIND_ONLY);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, ETHARP_FIND_ONLY, NULL);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, ETHARP_TRY_HARD);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, ETHARP_TRY_HARD, netif);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, flags);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, flags, netif);$/;"	d
idur	obj/net/ns.asm	/^  idur = q->payload;$/;"	d
iecho	obj/net/ns.asm	/^    iecho = p->payload;$/;"	d
inactive	obj/net/ns.asm	/^      inactive = pcb;$/;"	d
inactive	obj/net/ns.asm	/^  inactive = NULL;$/;"	d
inactivity	obj/net/ns.asm	/^      inactivity = tcp_ticks - pcb->tmr;$/;"	d
inactivity	obj/net/ns.asm	/^  inactivity = 0;$/;"	d
increment_magnitude	obj/net/ns.asm	/^    increment_magnitude = -header_size_increment;$/;"	d
increment_magnitude	obj/net/ns.asm	/^    increment_magnitude = header_size_increment;$/;"	d
input_envid	obj/net/ns.asm	/^	input_envid = fork();$/;"	d
int	obj/net/ns.asm	/^int $/;"	l
int	obj/net/ns.asm	/^int color;$/;"	l
int	obj/net/ns.asm	/^int$/;"	l
int32_t	obj/net/ns.asm	/^int32_t$/;"	l
ipaddr	obj/net/ns.asm	/^        ipaddr = &(netif->gw);$/;"	d
ipcb	obj/net/ns.asm	/^        ipcb = ipcb->next;$/;"	d
ipcb	obj/net/ns.asm	/^        ipcb = udp_pcbs;$/;"	d
ipcb	obj/net/ns.asm	/^    ipcb = udp_pcbs;$/;"	d
iphdr	obj/net/ns.asm	/^      iphdr = r->payload;$/;"	d
iphdr	obj/net/ns.asm	/^    iphdr = p->payload;$/;"	d
iphdr	obj/net/ns.asm	/^  iphdr = original_iphdr;$/;"	d
iphdr	obj/net/ns.asm	/^  iphdr = p->payload;$/;"	d
iphdr	obj/net/ns.asm	/^  iphdr = rambuf->payload;$/;"	d
iphdr_hlen	obj/net/ns.asm	/^  iphdr_hlen = IPH_HL(iphdr);$/;"	d
iphdr_len	obj/net/ns.asm	/^  iphdr_len = ntohs(IPH_LEN(iphdr));$/;"	d
ipr	obj/net/ns.asm	/^      ipr = memp_malloc(MEMP_REASSDATA);$/;"	d
ipr	obj/net/ns.asm	/^  ipr = memp_malloc(MEMP_REASSDATA);$/;"	d
iprh	obj/net/ns.asm	/^          iprh = (struct ip_reass_helper*)q->payload;$/;"	d
iprh	obj/net/ns.asm	/^      iprh = (struct ip_reass_helper*)r->payload;$/;"	d
iprh	obj/net/ns.asm	/^    iprh = (struct ip_reass_helper *)p->payload;$/;"	d
iprh	obj/net/ns.asm	/^  iprh = (struct ip_reass_helper *)ipr->p->payload;$/;"	d
iprh	obj/net/ns.asm	/^  iprh = (struct ip_reass_helper*)new_p->payload;$/;"	d
iprh_prev	obj/net/ns.asm	/^          iprh_prev = iprh;$/;"	d
iprh_prev	obj/net/ns.asm	/^        iprh_prev = iprh;$/;"	d
iprh_prev	obj/net/ns.asm	/^    iprh_prev = iprh_tmp;$/;"	d
iprh_tmp	obj/net/ns.asm	/^    iprh_tmp = (struct ip_reass_helper*)q->payload;$/;"	d
iss	obj/net/ns.asm	/^    iss = tcp_next_iss();$/;"	d
iss	obj/net/ns.asm	/^  iss = tcp_next_iss();$/;"	d
jif	obj/net/ns.asm	/^    jif = mem_malloc(sizeof(struct jif));$/;"	d
jif	obj/net/ns.asm	/^    jif = netif->state;$/;"	d
k	obj/net/ns.asm	/^  k = ETHARP_HWADDR_LEN;$/;"	d
last	obj/net/ns.asm	/^    last = (left <= mtu - IP_HLEN);$/;"	d
left	obj/net/ns.asm	/^  left = len;$/;"	d
left	obj/net/ns.asm	/^  left = p->tot_len - IP_HLEN;$/;"	d
len	obj/net/ns.asm	/^      len = 0;$/;"	d
len	obj/net/ns.asm	/^      len = p->tot_len;$/;"	d
len	obj/net/ns.asm	/^      len = p_from->len - offset_from;$/;"	d
len	obj/net/ns.asm	/^      len = p_to->len - offset_to;$/;"	d
len	obj/net/ns.asm	/^    len = 0;$/;"	d
len	obj/net/ns.asm	/^    len = 0xffff;$/;"	d
len	obj/net/ns.asm	/^    len = conn->write_msg->msg.w.len - conn->write_offset;$/;"	d
len	obj/net/ns.asm	/^    len = p->tot_len;$/;"	d
len	obj/net/ns.asm	/^  len = (u16_t)((u8_t *)seg->tcphdr - (u8_t *)seg->p->payload);$/;"	d
len	obj/net/ns.asm	/^  len = 0;$/;"	d
len	obj/net/ns.asm	/^  len = ntohs(IPH_LEN(fraghdr)) - IPH_HL(fraghdr) * 4;$/;"	d
lenerr	obj/net/ns.asm	/^lenerr:$/;"	l
level	obj/net/ns.asm	/^  level = data->level;$/;"	d
lexceptset	obj/net/ns.asm	/^      lexceptset = *exceptset;$/;"	d
lexceptset	obj/net/ns.asm	/^    lexceptset = *exceptset;$/;"	d
lflag	obj/net/ns.asm	/^		lflag = 0;$/;"	d
lfree	obj/net/ns.asm	/^            lfree = (struct mem *)&ram[lfree->next];$/;"	d
lfree	obj/net/ns.asm	/^      lfree = (struct mem *)&ram[ptr2];$/;"	d
lfree	obj/net/ns.asm	/^      lfree = mem2;$/;"	d
lfree	obj/net/ns.asm	/^      lfree = mem;$/;"	d
lfree	obj/net/ns.asm	/^      lfree = pmem;$/;"	d
lfree	obj/net/ns.asm	/^    lfree = mem;$/;"	d
lfree	obj/net/ns.asm	/^  lfree = (struct mem *)ram;$/;"	d
local_match	obj/net/ns.asm	/^        local_match = 1;$/;"	d
local_match	obj/net/ns.asm	/^    local_match = 0;$/;"	d
local_mem_free_count	obj/net/ns.asm	/^        local_mem_free_count = mem_free_count;$/;"	d
local_port	obj/net/ns.asm	/^    local_port = pcb->local_port;$/;"	d
lock_tcpip_core	obj/net/ns.asm	/^  lock_tcpip_core = sys_sem_new(1);$/;"	d
long	obj/net/ns.asm	/^long$/;"	l
lpcb	obj/net/ns.asm	/^  lpcb = memp_malloc(MEMP_TCP_PCB_LISTEN);$/;"	d
lreadset	obj/net/ns.asm	/^      lreadset = *readset;$/;"	d
lreadset	obj/net/ns.asm	/^    lreadset = *readset;$/;"	d
lwriteset	obj/net/ns.asm	/^      lwriteset = *writeset;$/;"	d
lwriteset	obj/net/ns.asm	/^    lwriteset = *writeset;$/;"	d
m	obj/net/ns.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/net/ns.asm	/^		m = n - tot;$/;"	d
m	obj/net/ns.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/net/ns.asm	/^        m = -m;$/;"	d
m	obj/net/ns.asm	/^      m = (s16_t)(tcp_ticks - pcb->rttest);$/;"	d
m	obj/net/ns.asm	/^      m = m - (pcb->sa >> 3);$/;"	d
m	obj/net/ns.asm	/^      m = m - (pcb->sv >> 2);$/;"	d
max_tid	obj/net/ns.asm	/^    max_tid = 0;$/;"	d
mbox	obj/net/ns.asm	/^  mbox = sys_mbox_new(TCPIP_MBOX_SIZE);$/;"	d
mem	obj/net/ns.asm	/^      mem = (struct mem *)&ram[ptr];$/;"	d
mem	obj/net/ns.asm	/^  mem = (struct mem *)((u8_t *)rmem - SIZEOF_STRUCT_MEM);$/;"	d
mem	obj/net/ns.asm	/^  mem = (struct mem *)ram;$/;"	d
mem2	obj/net/ns.asm	/^          mem2 = (struct mem *)&ram[ptr2];$/;"	d
mem2	obj/net/ns.asm	/^    mem2 = (struct mem *)&ram[ptr2];$/;"	d
mem2	obj/net/ns.asm	/^  mem2 = (struct mem *)&ram[mem->next];$/;"	d
mem_free_count	obj/net/ns.asm	/^      mem_free_count = 0;$/;"	d
mem_free_count	obj/net/ns.asm	/^  mem_free_count = 1;$/;"	d
mem_sem	obj/net/ns.asm	/^  mem_sem = sys_sem_new(1);$/;"	d
memerr	obj/net/ns.asm	/^memerr:$/;"	l
memp	obj/net/ns.asm	/^      memp = (struct memp *)((u8_t *)memp + MEMP_SIZE + memp_sizes[i]);$/;"	d
memp	obj/net/ns.asm	/^  memp = LWIP_MEM_ALIGN(memp_memory);$/;"	d
memp	obj/net/ns.asm	/^  memp = memp_tab[type];$/;"	d
mprio	obj/net/ns.asm	/^      mprio = pcb->prio;$/;"	d
mprio	obj/net/ns.asm	/^  mprio = TCP_PRIO_MAX;$/;"	d
mptr	obj/net/ns.asm	/^			mptr = mbegin;$/;"	d
mptr	obj/net/ns.asm	/^		mptr = ROUNDDOWN(mptr + PGSIZE, PGSIZE);$/;"	d
mptr	obj/net/ns.asm	/^		mptr = mbegin;$/;"	d
msecs	obj/net/ns.asm	/^  msecs = 10*1000;$/;"	d
msecs	obj/net/ns.asm	/^  msecs = 500;$/;"	d
msecs	obj/net/ns.asm	/^  msecs = dhcp->tries < 10 ? dhcp->tries * 1000 : 10 * 1000;$/;"	d
msecs	obj/net/ns.asm	/^  msecs = dhcp->tries < 10 ? dhcp->tries * 2000 : 20 * 1000;$/;"	d
msecs	obj/net/ns.asm	/^  msecs = dhcp->tries < 4 ? (dhcp->tries + 1) * 1000 : 10 * 1000;$/;"	d
msecs	obj/net/ns.asm	/^  msecs = dhcp->tries < 4 ? dhcp->tries * 1000 : 4 * 1000;$/;"	d
msectimeout	obj/net/ns.asm	/^        msectimeout = 1;$/;"	d
msectimeout	obj/net/ns.asm	/^      msectimeout =  ((timeout->tv_sec * 1000) + ((timeout->tv_usec + 500)\/1000));$/;"	d
msectimeout	obj/net/ns.asm	/^      msectimeout = 0;$/;"	d
msg	obj/net/ns.asm	/^    msg = memp_malloc(MEMP_TCPIP_MSG_API);$/;"	d
msg	obj/net/ns.asm	/^    msg = memp_malloc(MEMP_TCPIP_MSG_INPKT);$/;"	d
msg_type	obj/net/ns.asm	/^  msg_type = dhcp_get_option_byte(options_ptr + 2);$/;"	d
mss	obj/net/ns.asm	/^        mss = (opts[c + 2] << 8) | opts[c + 3];$/;"	d
mss_s	obj/net/ns.asm	/^    mss_s = outif->mtu - IP_HLEN - TCP_HLEN;$/;"	d
n	obj/net/ns.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/net/ns.asm	/^	n = ROUNDUP(n, 4);$/;"	d
n	obj/net/ns.asm	/^  n = pp - parts + 1;$/;"	d
netbuf	obj/net/ns.asm	/^netbuf *netbuf_new(void)$/;"	l
netif	obj/net/ns.asm	/^        netif = inp;$/;"	d
netif	obj/net/ns.asm	/^        netif = netif->next;$/;"	d
netif	obj/net/ns.asm	/^        netif = netif_list;$/;"	d
netif	obj/net/ns.asm	/^    netif = inp;$/;"	d
netif	obj/net/ns.asm	/^    netif = ip_route(&(pcb->remote_ip));$/;"	d
netif	obj/net/ns.asm	/^    netif = netif->next;$/;"	d
netif	obj/net/ns.asm	/^  netif = ip_route((ip_addr_ismulticast(dst_ip))?(&(pcb->multicast_ip)):(dst_ip));$/;"	d
netif	obj/net/ns.asm	/^  netif = ip_route(dst_ip);$/;"	d
netif_default	obj/net/ns.asm	/^  netif_default = netif;$/;"	d
netif_list	obj/net/ns.asm	/^    netif_list = netif->next;$/;"	d
netif_list	obj/net/ns.asm	/^  netif_list = netif;$/;"	d
new_entry	obj/net/ns.asm	/^        new_entry = memp_malloc(MEMP_ARP_QUEUE);$/;"	d
new_tot_len	obj/net/ns.asm	/^        new_tot_len = (u16_t)(inseg.p->tot_len - off);$/;"	d
newconn	obj/net/ns.asm	/^    newconn = NULL;$/;"	d
newconn	obj/net/ns.asm	/^  newconn = netconn_accept(sock->conn);$/;"	d
newconn	obj/net/ns.asm	/^  newconn = netconn_alloc(conn->type, conn->callback);$/;"	d
newfd	obj/net/ns.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newsize	obj/net/ns.asm	/^    newsize = MIN_SIZE_ALIGNED;$/;"	d
newsize	obj/net/ns.asm	/^  newsize = LWIP_MEM_ALIGN_SIZE(newsize);$/;"	d
newsock	obj/net/ns.asm	/^  newsock = alloc_socket(newconn);$/;"	d
next	obj/net/ns.asm	/^                    next = cseg->next;$/;"	d
next	obj/net/ns.asm	/^        next = pcb->unacked;$/;"	d
next	obj/net/ns.asm	/^      next = pcb->unsent;$/;"	d
next	obj/net/ns.asm	/^    next = mem2->next;$/;"	d
next	obj/net/ns.asm	/^    next = seg->next;$/;"	d
nfb	obj/net/ns.asm	/^  nfb = (mtu - IP_HLEN) \/ 8;$/;"	d
nmem	obj/net/ns.asm	/^  nmem = (struct mem *)&ram[mem->next];$/;"	d
nn	obj/net/ns.asm	/^		nn = thisenv->env_runs;$/;"	d
now	obj/net/ns.asm	/^	now = sys_time_msec();$/;"	d
npcb	obj/net/ns.asm	/^    npcb = tcp_alloc(pcb->prio);$/;"	d
nready	obj/net/ns.asm	/^    nready = lwip_selscan(maxfdp1, &lreadset, &lwriteset, &lexceptset);$/;"	d
nready	obj/net/ns.asm	/^  nready = lwip_selscan(maxfdp1, &lreadset, &lwriteset, &lexceptset);$/;"	d
nsenv	obj/net/ns.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsock	obj/net/ns.asm	/^  nsock = &sockets[newsock];$/;"	d
nullreturn	obj/net/ns.asm	/^nullreturn:$/;"	l
num	obj/net/ns.asm	/^				num = -(long long) num;$/;"	d
num	obj/net/ns.asm	/^			num = (unsigned long long)$/;"	d
num	obj/net/ns.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/net/ns.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/net/ns.asm	/^  num = name[2] - '0';$/;"	d
number	obj/net/ns.asm	/^		number:$/;"	l
nva	obj/net/ns.asm	/^	nva = fd2data(newfd);$/;"	d
nwrap	obj/net/ns.asm	/^	nwrap = 0;$/;"	d
octetptr	obj/net/ns.asm	/^  octetptr = (u8_t*)dataptr;$/;"	d
off	obj/net/ns.asm	/^      off = pcb->rcv_nxt - seqno;$/;"	d
offset	obj/net/ns.asm	/^      offset = 0;$/;"	d
offset	obj/net/ns.asm	/^  offset = (ntohs(IPH_OFFSET(fraghdr)) & IP_OFFMASK) * 8;$/;"	d
offset	obj/net/ns.asm	/^  offset = 0;$/;"	d
offset_from	obj/net/ns.asm	/^      offset_from = 0;$/;"	d
offset_to	obj/net/ns.asm	/^      offset_to = 0;$/;"	d
ofo	obj/net/ns.asm	/^  ofo = tmp & IP_OFFMASK;$/;"	d
old_cwnd	obj/net/ns.asm	/^        old_cwnd = pcb->cwnd;$/;"	d
old_pending	obj/net/ns.asm	/^          old_pending = i;$/;"	d
old_queue	obj/net/ns.asm	/^          old_queue = i;$/;"	d
old_stable	obj/net/ns.asm	/^        old_stable = i;$/;"	d
oldest	obj/net/ns.asm	/^          oldest = r;$/;"	d
oldest	obj/net/ns.asm	/^    oldest = NULL;$/;"	d
omf	obj/net/ns.asm	/^  omf = tmp & IP_MF;$/;"	d
opt	obj/net/ns.asm	/^      opt = opts[c];$/;"	d
optdata	obj/net/ns.asm	/^    optdata = TCP_BUILD_MSS_OPTION();$/;"	d
optdata	obj/net/ns.asm	/^  optdata = TCP_BUILD_MSS_OPTION();$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_BROADCAST);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_DNS_SERVER);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_LEASE_TIME);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_ROUTER);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_SUBNET_MASK);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_T1);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_T2);$/;"	d
options	obj/net/ns.asm	/^        options = (u8_t *)&dhcp->msg_in->file;$/;"	d
options	obj/net/ns.asm	/^        options = (u8_t *)&dhcp->msg_in->sname;$/;"	d
options_ptr	obj/net/ns.asm	/^  options_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_MESSAGE_TYPE);$/;"	d
optname	obj/net/ns.asm	/^  optname = data->optname;$/;"	d
opts	obj/net/ns.asm	/^  opts = (u8_t *)tcphdr + TCP_HLEN;$/;"	d
optval	obj/net/ns.asm	/^  optval = data->optval;$/;"	d
original_iphdr	obj/net/ns.asm	/^  original_iphdr = p->payload;$/;"	d
other_datagrams	obj/net/ns.asm	/^    other_datagrams = 0;$/;"	d
out	obj/net/ns.asm	/^out:$/;"	l
outif	obj/net/ns.asm	/^  outif = ip_route(addr);$/;"	d
output_envid	obj/net/ns.asm	/^	output_envid = fork();$/;"	d
output_envid	obj/net/ns.asm	/^    output_envid = (envid_t *)netif->state;$/;"	d
ova	obj/net/ns.asm	/^	ova = fd2data(oldfd);$/;"	d
overload	obj/net/ns.asm	/^        overload = options[offset++];$/;"	d
p	obj/net/ns.asm	/^				p = "(null)";$/;"	d
p	obj/net/ns.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/net/ns.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/net/ns.asm	/^	p = sys_time_msec();$/;"	d
p	obj/net/ns.asm	/^          p = NULL;$/;"	d
p	obj/net/ns.asm	/^          p = p->next;$/;"	d
p	obj/net/ns.asm	/^        p = NULL;$/;"	d
p	obj/net/ns.asm	/^        p = p->next;$/;"	d
p	obj/net/ns.asm	/^        p = pbuf_alloc(PBUF_RAW, p->tot_len, PBUF_RAM);$/;"	d
p	obj/net/ns.asm	/^        p = q;$/;"	d
p	obj/net/ns.asm	/^      p = NULL;$/;"	d
p	obj/net/ns.asm	/^      p = inseg.p;$/;"	d
p	obj/net/ns.asm	/^      p = memp_malloc(MEMP_PBUF_POOL);$/;"	d
p	obj/net/ns.asm	/^      p = q;$/;"	d
p	obj/net/ns.asm	/^      p = r;$/;"	d
p	obj/net/ns.asm	/^    p = (struct pbuf*)mem_malloc(LWIP_MEM_ALIGN_SIZE(SIZEOF_STRUCT_PBUF + offset) + LWIP_MEM_ALIGN_SIZE(length));$/;"	d
p	obj/net/ns.asm	/^    p = ip_reass(p);$/;"	d
p	obj/net/ns.asm	/^    p = ipr->p;$/;"	d
p	obj/net/ns.asm	/^    p = iprh->next_pbuf;$/;"	d
p	obj/net/ns.asm	/^    p = memp_malloc(MEMP_PBUF);$/;"	d
p	obj/net/ns.asm	/^    p = p->next;$/;"	d
p	obj/net/ns.asm	/^    p = pbuf_alloc(PBUF_IP, TCP_HLEN, PBUF_RAM);$/;"	d
p	obj/net/ns.asm	/^    p = q->p;$/;"	d
p	obj/net/ns.asm	/^  p = NULL;$/;"	d
p	obj/net/ns.asm	/^  p = ipr->p;$/;"	d
p	obj/net/ns.asm	/^  p = mem_malloc(count * size);$/;"	d
p	obj/net/ns.asm	/^  p = pbuf_alloc(PBUF_IP, TCP_HLEN + 1, PBUF_RAM);$/;"	d
p	obj/net/ns.asm	/^  p = pbuf_alloc(PBUF_IP, TCP_HLEN, PBUF_RAM);$/;"	d
p	obj/net/ns.asm	/^  p = pbuf_alloc(PBUF_LINK, sizeof(struct etharp_hdr), PBUF_RAM);$/;"	d
p_from	obj/net/ns.asm	/^      p_from = p_from->next;$/;"	d
p_sock	obj/net/ns.asm	/^      p_sock = get_socket(i);$/;"	d
p_to	obj/net/ns.asm	/^      p_to = p_to->next;$/;"	d
padc	obj/net/ns.asm	/^			padc = '-';$/;"	d
padc	obj/net/ns.asm	/^			padc = '0';$/;"	d
payload	obj/net/ns.asm	/^  payload = p->payload;$/;"	d
pbufs_freed_current	obj/net/ns.asm	/^      pbufs_freed_current = ip_reass_free_complete_datagram(oldest, prev);$/;"	d
pcb	obj/net/ns.asm	/^        pcb = next;$/;"	d
pcb	obj/net/ns.asm	/^        pcb = pcb->next;$/;"	d
pcb	obj/net/ns.asm	/^      pcb = memp_malloc(MEMP_TCP_PCB);$/;"	d
pcb	obj/net/ns.asm	/^      pcb = pcb->next;$/;"	d
pcb	obj/net/ns.asm	/^      pcb = pcb2;$/;"	d
pcb	obj/net/ns.asm	/^      pcb = uncon_pcb;$/;"	d
pcb	obj/net/ns.asm	/^    pcb = NULL;$/;"	d
pcb	obj/net/ns.asm	/^    pcb = memp_malloc(MEMP_TCP_PCB);$/;"	d
pcb	obj/net/ns.asm	/^    pcb = pcb->next;$/;"	d
pcb	obj/net/ns.asm	/^    pcb = tcp_active_pcbs;$/;"	d
pcb	obj/net/ns.asm	/^  pcb = NULL;$/;"	d
pcb	obj/net/ns.asm	/^  pcb = conn->pcb.tcp;$/;"	d
pcb	obj/net/ns.asm	/^  pcb = memp_malloc(MEMP_RAW_PCB);$/;"	d
pcb	obj/net/ns.asm	/^  pcb = memp_malloc(MEMP_TCP_PCB);$/;"	d
pcb	obj/net/ns.asm	/^  pcb = memp_malloc(MEMP_UDP_PCB);$/;"	d
pcb	obj/net/ns.asm	/^  pcb = raw_pcbs;$/;"	d
pcb	obj/net/ns.asm	/^  pcb = tcp_active_pcbs;$/;"	d
pcb	obj/net/ns.asm	/^  pcb = tcp_tw_pcbs;$/;"	d
pcb2	obj/net/ns.asm	/^      pcb2 = pcb->next;$/;"	d
pcb_remove	obj/net/ns.asm	/^    pcb_remove = 0;$/;"	d
pcur	obj/net/ns.asm	/^    pcur = p;$/;"	d
perm	obj/net/ns.asm	/^		perm = 0;$/;"	d
pg	obj/net/ns.asm	/^		pg = NULL;$/;"	d
pmem	obj/net/ns.asm	/^  pmem = (struct mem *)&ram[mem->prev];$/;"	d
poff	obj/net/ns.asm	/^    poff = newpbuflen;$/;"	d
port	obj/net/ns.asm	/^      port = netbuf_fromport(buf);$/;"	d
port	obj/net/ns.asm	/^    port = TCP_LOCAL_PORT_RANGE_START;$/;"	d
port	obj/net/ns.asm	/^    port = UDP_LOCAL_PORT_RANGE_START;$/;"	d
port	obj/net/ns.asm	/^    port = tcp_new_port();$/;"	d
precision	obj/net/ns.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/net/ns.asm	/^			precision = va_arg(ap, int);$/;"	d
prev	obj/net/ns.asm	/^          prev = NULL;$/;"	d
prev	obj/net/ns.asm	/^        prev = r;$/;"	d
prev	obj/net/ns.asm	/^      prev = pcb;$/;"	d
prev	obj/net/ns.asm	/^      prev = r;$/;"	d
prev	obj/net/ns.asm	/^    prev = NULL;$/;"	d
prev	obj/net/ns.asm	/^    prev = pcb;$/;"	d
prev	obj/net/ns.asm	/^  prev = NULL;    $/;"	d
prev	obj/net/ns.asm	/^  prev = NULL;$/;"	d
process_precision	obj/net/ns.asm	/^		process_precision:$/;"	l
proto	obj/net/ns.asm	/^  proto = IPH_PROTO(iphdr);$/;"	d
pte	obj/net/ns.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
ptr	obj/net/ns.asm	/^         ptr = ((struct mem *)&ram[ptr])->next) {$/;"	d
ptr	obj/net/ns.asm	/^    ptr = (void *)((u8_t *)ptr + seglen);$/;"	d
ptr	obj/net/ns.asm	/^  ptr = (u8_t *)mem - ram;$/;"	d
ptr	obj/net/ns.asm	/^  ptr = arg;$/;"	d
ptr2	obj/net/ns.asm	/^          ptr2 = ptr + SIZEOF_STRUCT_MEM + size;$/;"	d
ptr2	obj/net/ns.asm	/^    ptr2 = ptr + SIZEOF_STRUCT_MEM + newsize;$/;"	d
q	obj/net/ns.asm	/^          q = iprh->next_pbuf;$/;"	d
q	obj/net/ns.asm	/^        q = NULL;$/;"	d
q	obj/net/ns.asm	/^        q = iprh->next_pbuf;$/;"	d
q	obj/net/ns.asm	/^      q = memp_malloc(MEMP_PBUF_POOL);$/;"	d
q	obj/net/ns.asm	/^      q = p->next;$/;"	d
q	obj/net/ns.asm	/^    q = NULL;$/;"	d
q	obj/net/ns.asm	/^    q = iprh_tmp->next_pbuf;$/;"	d
q	obj/net/ns.asm	/^    q = mem_realloc(q, (u8_t *)q->payload - (u8_t *)q + rem_len);$/;"	d
q	obj/net/ns.asm	/^    q = p;$/;"	d
q	obj/net/ns.asm	/^    q = pbuf_alloc(PBUF_IP, 0, PBUF_RAM);$/;"	d
q	obj/net/ns.asm	/^    q = pbuf_alloc(PBUF_IP, UDP_HLEN, PBUF_RAM);$/;"	d
q	obj/net/ns.asm	/^    q = pbuf_alloc(PBUF_RAW, p->tot_len, PBUF_RAM);$/;"	d
q	obj/net/ns.asm	/^    q = q->next;$/;"	d
q	obj/net/ns.asm	/^  q = p->next;$/;"	d
q	obj/net/ns.asm	/^  q = p;$/;"	d
q	obj/net/ns.asm	/^  q = pbuf_alloc(PBUF_IP, sizeof(struct icmp_dur_hdr) + IP_HLEN + ICMP_DEST_UNREACH_DATASIZE,$/;"	d
queue	obj/net/ns.asm	/^      queue = seg;$/;"	d
queuelen	obj/net/ns.asm	/^  queuelen = pcb->snd_queuelen;$/;"	d
r	obj/net/ns.asm	/^				r = -E_TX_BAD_LEN;$/;"	d
r	obj/net/ns.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/net/ns.asm	/^			r = -E_INVAL;$/;"	d
r	obj/net/ns.asm	/^			r = 0;$/;"	d
r	obj/net/ns.asm	/^		r = -E_INVAL;$/;"	d
r	obj/net/ns.asm	/^		r = 0;$/;"	d
r	obj/net/ns.asm	/^		r = lwip_accept(req->accept.req_s, &ret.ret_addr,$/;"	d
r	obj/net/ns.asm	/^		r = lwip_bind(req->bind.req_s, &req->bind.req_name,$/;"	d
r	obj/net/ns.asm	/^		r = lwip_close(req->close.req_s);$/;"	d
r	obj/net/ns.asm	/^		r = lwip_connect(req->connect.req_s, &req->connect.req_name,$/;"	d
r	obj/net/ns.asm	/^		r = lwip_listen(req->listen.req_s, req->listen.req_backlog);$/;"	d
r	obj/net/ns.asm	/^		r = lwip_recv(req->recv.req_s, req->recvRet.ret_buf,$/;"	d
r	obj/net/ns.asm	/^		r = lwip_send(req->send.req_s, &req->send.req_buf,$/;"	d
r	obj/net/ns.asm	/^		r = lwip_shutdown(req->shutdown.req_s, req->shutdown.req_how);$/;"	d
r	obj/net/ns.asm	/^		r = lwip_socket(req->socket.req_domain, req->socket.req_type,$/;"	d
r	obj/net/ns.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/net/ns.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/net/ns.asm	/^              r = r->next;$/;"	d
r	obj/net/ns.asm	/^            r = arp_table[i].q;$/;"	d
r	obj/net/ns.asm	/^      r = iprh->next_pbuf;$/;"	d
r	obj/net/ns.asm	/^      r = pbuf_alloc(PBUF_LINK, p->tot_len, PBUF_RAM);$/;"	d
r	obj/net/ns.asm	/^      r = q;$/;"	d
r	obj/net/ns.asm	/^      r = r->next;$/;"	d
r	obj/net/ns.asm	/^    r = ((struct ip_reass_helper*)ipr->p->payload)->next_pbuf;$/;"	d
r	obj/net/ns.asm	/^    r = p;$/;"	d
r	obj/net/ns.asm	/^    r = q;$/;"	d
r	obj/net/ns.asm	/^    r = reassdatagrams;$/;"	d
r	obj/net/ns.asm	/^  r = reassdatagrams;$/;"	d
ram	obj/net/ns.asm	/^  ram = LWIP_MEM_ALIGN(ram_heap);$/;"	d
ram_end	obj/net/ns.asm	/^  ram_end = (struct mem *)&ram[MEM_SIZE_ALIGNED];$/;"	d
rambuf	obj/net/ns.asm	/^  rambuf = pbuf_alloc(PBUF_LINK, 0, PBUF_REF);$/;"	d
raw_pcbs	obj/net/ns.asm	/^            raw_pcbs = pcb;$/;"	d
raw_pcbs	obj/net/ns.asm	/^    raw_pcbs = pcb;$/;"	d
raw_pcbs	obj/net/ns.asm	/^    raw_pcbs = raw_pcbs->next;$/;"	d
rc	obj/net/ns.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reassdatagrams	obj/net/ns.asm	/^    reassdatagrams = ipr->next;$/;"	d
reassdatagrams	obj/net/ns.asm	/^  reassdatagrams = ipr;$/;"	d
rebind	obj/net/ns.asm	/^      rebind = 1;$/;"	d
rebind	obj/net/ns.asm	/^  rebind = 0;$/;"	d
recv_data	obj/net/ns.asm	/^              recv_data = cseg->p;$/;"	d
recv_data	obj/net/ns.asm	/^          recv_data = inseg.p;$/;"	d
recv_data	obj/net/ns.asm	/^    recv_data = NULL;$/;"	d
recv_flags	obj/net/ns.asm	/^            recv_flags = TF_GOT_FIN;$/;"	d
recv_flags	obj/net/ns.asm	/^          recv_flags = TF_GOT_FIN;$/;"	d
recv_flags	obj/net/ns.asm	/^      recv_flags = TF_CLOSED;$/;"	d
recv_flags	obj/net/ns.asm	/^      recv_flags = TF_RESET;$/;"	d
recv_flags	obj/net/ns.asm	/^    recv_flags = 0;$/;"	d
ref	obj/net/ns.asm	/^		ref = (uint32_t*) (ROUNDUP(mptr, PGSIZE) - 4);$/;"	d
ref	obj/net/ns.asm	/^	ref = (uint32_t*) (c + PGSIZE - 4);$/;"	d
ref	obj/net/ns.asm	/^	ref = (uint32_t*) (mptr + i - 4);$/;"	d
ref	obj/net/ns.asm	/^    ref = --(p->ref);$/;"	d
rem	obj/net/ns.asm	/^      rem = *ap % (u8_t)10;$/;"	d
rem_len	obj/net/ns.asm	/^    rem_len = length - p->len;$/;"	d
rem_len	obj/net/ns.asm	/^  rem_len = new_len;$/;"	d
remote_port	obj/net/ns.asm	/^    remote_port      = 0;$/;"	d
remote_port	obj/net/ns.asm	/^    remote_port      = ntohs(((struct sockaddr_in *)to)->sin_port);$/;"	d
remote_port	obj/net/ns.asm	/^    remote_port = pcb->remote_port;$/;"	d
req	obj/net/ns.asm	/^		req = ipc_recv((int32_t *) &whom, nsoutreq, &perm);$/;"	d
reqno	obj/net/ns.asm	/^		reqno = ipc_recv((int32_t *) &whom, (void *) va, &perm);$/;"	d
result	obj/net/ns.asm	/^          result = ERR_OK;$/;"	d
result	obj/net/ns.asm	/^      result = etharp_send_ip(netif, q, srcaddr, &(arp_table[i].ethaddr));$/;"	d
result	obj/net/ns.asm	/^    result = etharp_request(netif, ipaddr);$/;"	d
result	obj/net/ns.asm	/^  result = dhcp_create_request(netif);$/;"	d
result	obj/net/ns.asm	/^  result = dhcp_discover(netif);$/;"	d
result	obj/net/ns.asm	/^  result = etharp_query(netif, &dhcp->offered_ip_addr, NULL);$/;"	d
result	obj/net/ns.asm	/^  result = netif->linkoutput(netif, p);$/;"	d
reswitch	obj/net/ns.asm	/^	reswitch:$/;"	l
ret	obj/net/ns.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/net/ns.asm	/^	ret = dst;$/;"	d
ret	obj/net/ns.asm	/^      ret = ip_output_if(p, &(iphdr->src), IP_HDRINCL,$/;"	d
ret	obj/net/ns.asm	/^    ret = pbuf_copy_partial(dhcp->p, dhcp->options_in, dhcp->options_in_len, sizeof(struct dhcp_msg) - DHCP_OPTIONS_LEN);$/;"	d
ret	obj/net/ns.asm	/^  ret = pbuf_copy_partial(dhcp->p, dhcp->msg_in, sizeof(struct dhcp_msg) - DHCP_OPTIONS_LEN, 0);$/;"	d
ret	obj/net/ns.asm	/^  ret = tcp_enqueue(pcb, NULL, 0, TCP_SYN, 0, (u8_t *)&optdata, 4);$/;"	d
right_wnd_edge	obj/net/ns.asm	/^    right_wnd_edge = pcb->snd_wnd + pcb->snd_wl1;$/;"	d
rp	obj/net/ns.asm	/^  rp = str;$/;"	d
rseg	obj/net/ns.asm	/^      rseg = pcb->unacked;$/;"	d
s	obj/net/ns.asm	/^	s = src;$/;"	d
s	obj/net/ns.asm	/^    s = conn->socket;$/;"	d
s	obj/net/ns.asm	/^  s = data->s;$/;"	d
s8_t	obj/net/ns.asm	/^s8_t$/;"	l
seg	obj/net/ns.asm	/^      seg = NULL;$/;"	d
seg	obj/net/ns.asm	/^    seg = memp_malloc(MEMP_TCP_SEG);$/;"	d
seg	obj/net/ns.asm	/^    seg = next;$/;"	d
seg	obj/net/ns.asm	/^    seg = pcb->unsent;$/;"	d
seg	obj/net/ns.asm	/^  seg = pcb->unacked->next;$/;"	d
seg	obj/net/ns.asm	/^  seg = pcb->unacked;$/;"	d
seg	obj/net/ns.asm	/^  seg = pcb->unsent;$/;"	d
seglen	obj/net/ns.asm	/^    seglen = left > pcb->mss? pcb->mss: left;$/;"	d
seglen	obj/net/ns.asm	/^  seglen = 0;$/;"	d
select_cb_list	obj/net/ns.asm	/^      select_cb_list = select_cb.next;$/;"	d
select_cb_list	obj/net/ns.asm	/^    select_cb_list = &select_cb;$/;"	d
selectsem	obj/net/ns.asm	/^  selectsem = sys_sem_new(1);$/;"	d
sendmss	obj/net/ns.asm	/^    sendmss = LWIP_MIN(sendmss, mss_s);$/;"	d
seqno	obj/net/ns.asm	/^          seqno = pcb->ooseq->tcphdr->seqno;$/;"	d
seqno	obj/net/ns.asm	/^    seqno = pcb->snd_nxt;$/;"	d
seqno	obj/net/ns.asm	/^  seqno = pcb->snd_lbb;$/;"	d
seqno	obj/net/ns.asm	/^  seqno = tcphdr->seqno = ntohl(tcphdr->seqno);$/;"	d
size	obj/net/ns.asm	/^    size = MIN_SIZE_ALIGNED;$/;"	d
size	obj/net/ns.asm	/^  size = LWIP_MEM_ALIGN_SIZE(size);$/;"	d
size	obj/net/ns.asm	/^  size = mem->next - ptr - SIZEOF_STRUCT_MEM;$/;"	d
size_t	obj/net/ns.asm	/^size_t$/;"	l
so	obj/net/ns.asm	/^       so do nothing here! *\/$/;"	d
sock	obj/net/ns.asm	/^    sock = get_socket(s);$/;"	d
sock	obj/net/ns.asm	/^  sock = &sockets[s];$/;"	d
sock	obj/net/ns.asm	/^  sock = data->sock;$/;"	d
sock	obj/net/ns.asm	/^  sock = get_socket(s);$/;"	d
socksem	obj/net/ns.asm	/^  socksem   = sys_sem_new(1);$/;"	d
src	obj/net/ns.asm	/^    src = (*octetptr) << 8;$/;"	d
src	obj/net/ns.asm	/^  src = ntohs(udphdr->src);$/;"	d
src_ip	obj/net/ns.asm	/^    src_ip = &(netif->ip_addr);$/;"	d
ssize_t	obj/net/ns.asm	/^ssize_t$/;"	l
stacktop	obj/net/ns.asm	/^    stacktop = stacktop - 4;$/;"	d
start	obj/net/ns.asm	/^	start = sys_time_msec();$/;"	d
static	obj/net/ns.asm	/^static LIST_HEAD(thread_list, sys_thread) threads[thread_hash_size];$/;"	l
static	obj/net/ns.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/net/ns.asm	/^static err_t$/;"	l
static	obj/net/ns.asm	/^static inline struct thread_context *$/;"	l
static	obj/net/ns.asm	/^static inline void $/;"	l
static	obj/net/ns.asm	/^static inline void$/;"	l
static	obj/net/ns.asm	/^static int$/;"	l
static	obj/net/ns.asm	/^static long long$/;"	l
static	obj/net/ns.asm	/^static ssize_t$/;"	l
static	obj/net/ns.asm	/^static struct ip_reassdata*$/;"	t
static	obj/net/ns.asm	/^static struct lwip_socket *$/;"	t
static	obj/net/ns.asm	/^static struct pbuf *$/;"	t
static	obj/net/ns.asm	/^static struct thread_queue kill_queue;$/;"	t
static	obj/net/ns.asm	/^static struct thread_queue thread_queue;$/;"	t
static	obj/net/ns.asm	/^static thread_id_t$/;"	l
static	obj/net/ns.asm	/^static u16_t$/;"	l
static	obj/net/ns.asm	/^static u32_t dhcp_get_option_long(u8_t *ptr)$/;"	l
static	obj/net/ns.asm	/^static u8_t *dhcp_get_option_ptr(struct dhcp *dhcp, u8_t option_type)$/;"	l
static	obj/net/ns.asm	/^static u8_t$/;"	l
static	obj/net/ns.asm	/^static unsigned long long$/;"	l
static	obj/net/ns.asm	/^static void *$/;"	l
static	obj/net/ns.asm	/^static void __attribute__((noreturn))$/;"	l
static	obj/net/ns.asm	/^static void dhcp_free_reply(struct dhcp *dhcp)$/;"	l
static	obj/net/ns.asm	/^static void dhcp_recv(void *arg, struct udp_pcb *pcb, struct pbuf *p, struct ip_addr *addr, u16_t port)$/;"	l
static	obj/net/ns.asm	/^static void$/;"	l
stop	obj/net/ns.asm	/^			stop = sys_time_msec() + to;$/;"	d
swapped	obj/net/ns.asm	/^      swapped = 1 - swapped;$/;"	d
swapped	obj/net/ns.asm	/^  swapped = 0;$/;"	d
sys_mbox_t	obj/net/ns.asm	/^sys_mbox_t$/;"	l
sys_sem_t	obj/net/ns.asm	/^sys_sem_t$/;"	l
sys_thread_t	obj/net/ns.asm	/^sys_thread_t$/;"	l
t	obj/net/ns.asm	/^    t = malloc(sizeof(*t));$/;"	d
tail_gone	obj/net/ns.asm	/^    tail_gone = pbuf_free(q);$/;"	d
tc	obj/net/ns.asm	/^	tc = tc->tc_queue_link;$/;"	d
tcp_active_pcbs	obj/net/ns.asm	/^        tcp_active_pcbs = pcb->next;$/;"	d
tcp_active_pcbs	obj/net/ns.asm	/^        tcp_active_pcbs = pcb;$/;"	d
tcp_input_pcb	obj/net/ns.asm	/^    tcp_input_pcb = NULL;$/;"	d
tcp_input_pcb	obj/net/ns.asm	/^    tcp_input_pcb = pcb;$/;"	d
tcp_tw_pcbs	obj/net/ns.asm	/^        tcp_tw_pcbs = pcb->next;$/;"	d
tcphdr	obj/net/ns.asm	/^    tcphdr = p->payload;$/;"	d
tcphdr	obj/net/ns.asm	/^  tcphdr = (struct tcp_hdr *)((u8_t *)p->payload + IPH_HL(iphdr) * 4);$/;"	d
tcphdr	obj/net/ns.asm	/^  tcphdr = p->payload;$/;"	d
tcpip_init_done	obj/net/ns.asm	/^  tcpip_init_done = initfunc;$/;"	d
tcpip_init_done_arg	obj/net/ns.asm	/^  tcpip_init_done_arg = arg;$/;"	d
tcpip_tcp_timer_active	obj/net/ns.asm	/^    tcpip_tcp_timer_active = 0;$/;"	d
tcpip_tcp_timer_active	obj/net/ns.asm	/^    tcpip_tcp_timer_active = 1;$/;"	d
tcplen	obj/net/ns.asm	/^        tcplen = TCP_TCPLEN(&inseg);$/;"	d
tcplen	obj/net/ns.asm	/^  tcplen = p->tot_len + ((flags & TCP_FIN || flags & TCP_SYN)? 1: 0);$/;"	d
tehdr	obj/net/ns.asm	/^  tehdr = q->payload;$/;"	d
thisenv	obj/net/ns.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/net/ns.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
time_needed	obj/net/ns.asm	/^      time_needed = SYS_ARCH_TIMEOUT;$/;"	d
time_needed	obj/net/ns.asm	/^      time_needed = sys_arch_mbox_fetch(mbox, msg, timeouts->next->time);$/;"	d
time_needed	obj/net/ns.asm	/^      time_needed = sys_arch_sem_wait(sem, timeouts->next->time);$/;"	d
time_needed	obj/net/ns.asm	/^    time_needed = sys_arch_mbox_fetch(mbox, msg, 0);$/;"	d
timeout	obj/net/ns.asm	/^      timeout = 0xffff;$/;"	d
timeout	obj/net/ns.asm	/^    timeout = (dhcp->offered_t1_renew + DHCP_COARSE_TIMER_SECS \/ 2) \/ DHCP_COARSE_TIMER_SECS;$/;"	d
timeout	obj/net/ns.asm	/^    timeout = (dhcp->offered_t2_rebind + DHCP_COARSE_TIMER_SECS \/ 2) \/ DHCP_COARSE_TIMER_SECS;$/;"	d
timeout	obj/net/ns.asm	/^  timeout = memp_malloc(MEMP_SYS_TIMEOUT);$/;"	d
timeouts	obj/net/ns.asm	/^  timeouts = sys_arch_timeouts();$/;"	d
timer_envid	obj/net/ns.asm	/^	timer_envid = fork();$/;"	d
tmp	obj/net/ns.asm	/^      tmp = r;$/;"	d
tmp	obj/net/ns.asm	/^      tmp = tmp | IP_MF;$/;"	d
tmp	obj/net/ns.asm	/^    tmp = omf | (IP_OFFMASK & (ofo));$/;"	d
tmp	obj/net/ns.asm	/^  tmp = ntohs(IPH_OFFSET(iphdr));$/;"	d
tmptimeout	obj/net/ns.asm	/^      tmptimeout = timeouts->next;$/;"	d
to	obj/net/ns.asm	/^			to = ipc_recv((int32_t *) &whom, 0, 0);$/;"	d
to	obj/net/ns.asm	/^	to = TIMER_INTERVAL - (now - start);$/;"	d
type	obj/net/ns.asm	/^      type = p->type;$/;"	d
type	obj/net/ns.asm	/^  type = *((u8_t *)p->payload);$/;"	d
type	obj/net/ns.asm	/^  type = p->type;$/;"	d
u16_t	obj/net/ns.asm	/^u16_t$/;"	l
u32_t	obj/net/ns.asm	/^u32_t $/;"	l
u32_t	obj/net/ns.asm	/^u32_t$/;"	l
u8_t	obj/net/ns.asm	/^u8_t ip_addr_isbroadcast(struct ip_addr *addr, struct netif *netif)$/;"	l
u8_t	obj/net/ns.asm	/^u8_t netif_is_up(struct netif *netif)$/;"	l
u8_t	obj/net/ns.asm	/^u8_t$/;"	l
udp_pcbs	obj/net/ns.asm	/^          udp_pcbs = pcb;$/;"	d
udp_pcbs	obj/net/ns.asm	/^    udp_pcbs = pcb;$/;"	d
udp_pcbs	obj/net/ns.asm	/^    udp_pcbs = udp_pcbs->next;$/;"	d
udp_pcbs	obj/net/ns.asm	/^  udp_pcbs = pcb;$/;"	d
udphdr	obj/net/ns.asm	/^  udphdr = (struct udp_hdr *)p->payload;$/;"	d
udphdr	obj/net/ns.asm	/^  udphdr = q->payload;$/;"	d
uint32_t	obj/net/ns.asm	/^uint32_t$/;"	l
uncon_pcb	obj/net/ns.asm	/^          uncon_pcb = pcb;$/;"	d
uncon_pcb	obj/net/ns.asm	/^    uncon_pcb = NULL;$/;"	d
union	obj/net/ns.asm	/^union Nsipc *nsoutreq = (union Nsipc *)0x0fffe000;$/;"	l
unsigned	obj/net/ns.asm	/^unsigned int$/;"	l
useg	obj/net/ns.asm	/^          useg = useg->next;$/;"	d
useg	obj/net/ns.asm	/^    useg = NULL;$/;"	d
useg	obj/net/ns.asm	/^  useg = pcb->unacked;$/;"	d
useg	obj/net/ns.asm	/^  useg = queue = seg = NULL;$/;"	d
v	obj/net/ns.asm	/^			v = mptr;$/;"	d
v	obj/net/ns.asm	/^	v = mptr;$/;"	d
va	obj/net/ns.asm	/^				va = nsoutreq->pkt.jp_data;$/;"	d
va	obj/net/ns.asm	/^		va = get_buffer();$/;"	d
va	obj/net/ns.asm	/^	va = (void *)(REQVA + i * PGSIZE);$/;"	d
va	obj/net/ns.asm	/^	va = fd2data(fd0);$/;"	d
val	obj/net/ns.asm	/^        val = (val * base) + (int)(c - '0');$/;"	d
val	obj/net/ns.asm	/^        val = (val << 4) | (int)(c + 10 - (islower(c) ? 'a' : 'A'));$/;"	d
val	obj/net/ns.asm	/^    val = 0;$/;"	d
valid	obj/net/ns.asm	/^            valid = 0;$/;"	d
valid	obj/net/ns.asm	/^          valid = 0;$/;"	d
valid	obj/net/ns.asm	/^        valid = 0;$/;"	d
value	obj/net/ns.asm	/^  value = (u32_t)(*ptr++) << 24;$/;"	d
void	obj/net/ns.asm	/^void *$/;"	l
void	obj/net/ns.asm	/^void *mem_calloc(mem_size_t count, mem_size_t size)$/;"	l
void	obj/net/ns.asm	/^void dhcp_arp_reply(struct netif *netif, struct ip_addr *addr)$/;"	l
void	obj/net/ns.asm	/^void netif_remove(struct netif * netif)$/;"	l
void	obj/net/ns.asm	/^void netif_set_down(struct netif *netif)$/;"	l
void	obj/net/ns.asm	/^void netif_set_up(struct netif *netif)$/;"	l
void	obj/net/ns.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/net/ns.asm	/^void$/;"	l
we	obj/net/ns.asm	/^       we do NOT return to the application thread, since ERR_MEM is$/;"	d
width	obj/net/ns.asm	/^				width = 0;$/;"	d
width	obj/net/ns.asm	/^				width = precision, precision = -1;$/;"	d
wnd	obj/net/ns.asm	/^  wnd = LWIP_MIN(pcb->snd_wnd, pcb->cwnd);$/;"	d
write_finished	obj/net/ns.asm	/^      write_finished = 1;$/;"	d
write_finished	obj/net/ns.asm	/^    write_finished = 1;$/;"	d
ASM	obj/net/testinput.asm	/^#define ASM 1$/;"	d
Disassembly	obj/net/testinput.asm	/^Disassembly of section .text:$/;"	l
_pgfault_handler	obj/net/testinput.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	obj/net/testinput.asm	/^_pgfault_upcall:$/;"	l
_start	obj/net/testinput.asm	/^_start:$/;"	l
addr	obj/net/testinput.asm	/^	addr = (void *)ROUNDDOWN(addr, PGSIZE);$/;"	d
altflag	obj/net/testinput.asm	/^			altflag = 1;$/;"	d
altflag	obj/net/testinput.asm	/^		altflag = 0;$/;"	d
ap	obj/net/testinput.asm	/^  ap = (u8_t *)&s_addr;$/;"	d
args_exist	obj/net/testinput.asm	/^args_exist:$/;"	l
base	obj/net/testinput.asm	/^			base = 10;$/;"	d
base	obj/net/testinput.asm	/^			base = 16;$/;"	d
base	obj/net/testinput.asm	/^			base = 8;$/;"	d
base	obj/net/testinput.asm	/^		base = 10;$/;"	d
base	obj/net/testinput.asm	/^        base = 16;$/;"	d
base	obj/net/testinput.asm	/^        base = 8;$/;"	d
base	obj/net/testinput.asm	/^    base = 10;$/;"	d
binaryname	obj/net/testinput.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/net/testinput.asm	/^	binaryname = "ns_input";$/;"	d
binaryname	obj/net/testinput.asm	/^	binaryname = "ns_output";$/;"	d
binaryname	obj/net/testinput.asm	/^	binaryname = "ns_timer";$/;"	d
binaryname	obj/net/testinput.asm	/^	binaryname = "testinput";$/;"	d
buf	obj/net/testinput.asm	/^	buf = vbuf;$/;"	d
c	obj/net/testinput.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/net/testinput.asm	/^        c = *++cp;$/;"	d
c	obj/net/testinput.asm	/^      c = *++cp;$/;"	d
c	obj/net/testinput.asm	/^  c = *cp;$/;"	d
ch	obj/net/testinput.asm	/^				ch = *fmt;$/;"	d
char	obj/net/testinput.asm	/^char *$/;"	l
clrflag	obj/net/testinput.asm	/^		clrflag = 0;$/;"	d
cnt	obj/net/testinput.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/net/testinput.asm	/^				color = 0;$/;"	d
color	obj/net/testinput.asm	/^			color = 0;$/;"	d
colorswitch	obj/net/testinput.asm	/^	colorswitch:$/;"	l
const	obj/net/testinput.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/net/testinput.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/net/testinput.asm	/^	d = dst;$/;"	d
default	obj/net/testinput.asm	/^		default:$/;"	l
dig	obj/net/testinput.asm	/^			dig = *s - '0';$/;"	d
dig	obj/net/testinput.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/net/testinput.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/net/testinput.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/net/testinput.asm	/^envid_t$/;"	l
err	obj/net/testinput.asm	/^				err = -err;$/;"	d
err	obj/net/testinput.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/net/testinput.asm	/^    err:$/;"	l
err	obj/net/testinput.asm	/^err:$/;"	l
err1	obj/net/testinput.asm	/^    err1:$/;"	l
err2	obj/net/testinput.asm	/^    err2:$/;"	l
err3	obj/net/testinput.asm	/^    err3:$/;"	l
extern	obj/net/testinput.asm	/^extern union Nsipc nsipcbuf;$/;"	l
fd	obj/net/testinput.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/net/testinput.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
first	obj/net/testinput.asm	/^		first = 0;$/;"	d
fsenv	obj/net/testinput.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
i	obj/net/testinput.asm	/^    i = 0;$/;"	d
input_envid	obj/net/testinput.asm	/^	input_envid = fork();$/;"	d
int	obj/net/testinput.asm	/^int $/;"	l
int	obj/net/testinput.asm	/^int color;$/;"	l
int	obj/net/testinput.asm	/^int$/;"	l
int32_t	obj/net/testinput.asm	/^int32_t$/;"	l
lflag	obj/net/testinput.asm	/^		lflag = 0;$/;"	d
long	obj/net/testinput.asm	/^long$/;"	l
m	obj/net/testinput.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/net/testinput.asm	/^		m = n - tot;$/;"	d
m	obj/net/testinput.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/net/testinput.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/net/testinput.asm	/^  n = pp - parts + 1;$/;"	d
newfd	obj/net/testinput.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/net/testinput.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/net/testinput.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/net/testinput.asm	/^				num = -(long long) num;$/;"	d
num	obj/net/testinput.asm	/^			num = (unsigned long long)$/;"	d
num	obj/net/testinput.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/net/testinput.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/net/testinput.asm	/^		number:$/;"	l
nva	obj/net/testinput.asm	/^	nva = fd2data(newfd);$/;"	d
out	obj/net/testinput.asm	/^			out = buf + snprintf(buf, end - buf,$/;"	d
output_envid	obj/net/testinput.asm	/^	output_envid = fork();$/;"	d
ova	obj/net/testinput.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/net/testinput.asm	/^				p = "(null)";$/;"	d
p	obj/net/testinput.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/net/testinput.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/net/testinput.asm	/^			padc = '-';$/;"	d
padc	obj/net/testinput.asm	/^			padc = '0';$/;"	d
perm	obj/net/testinput.asm	/^		perm = 0;$/;"	d
pg	obj/net/testinput.asm	/^		pg = NULL;$/;"	d
precision	obj/net/testinput.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/net/testinput.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/net/testinput.asm	/^		process_precision:$/;"	l
pte	obj/net/testinput.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/net/testinput.asm	/^				r = -E_TX_BAD_LEN;$/;"	d
r	obj/net/testinput.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/net/testinput.asm	/^			r = -E_INVAL;$/;"	d
r	obj/net/testinput.asm	/^			r = 0;$/;"	d
r	obj/net/testinput.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/net/testinput.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/net/testinput.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rem	obj/net/testinput.asm	/^      rem = *ap % (u8_t)10;$/;"	d
req	obj/net/testinput.asm	/^		req = ipc_recv((int32_t *) &whom, nsoutreq, &perm);$/;"	d
reswitch	obj/net/testinput.asm	/^	reswitch:$/;"	l
ret	obj/net/testinput.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/net/testinput.asm	/^	ret = dst;$/;"	d
rp	obj/net/testinput.asm	/^  rp = str;$/;"	d
s	obj/net/testinput.asm	/^	s = src;$/;"	d
size_t	obj/net/testinput.asm	/^size_t$/;"	l
ssize_t	obj/net/testinput.asm	/^ssize_t$/;"	l
static	obj/net/testinput.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/net/testinput.asm	/^static int$/;"	l
static	obj/net/testinput.asm	/^static long long$/;"	l
static	obj/net/testinput.asm	/^static ssize_t$/;"	l
static	obj/net/testinput.asm	/^static unsigned long long$/;"	l
static	obj/net/testinput.asm	/^static void$/;"	l
stop	obj/net/testinput.asm	/^			stop = sys_time_msec() + to;$/;"	d
thisenv	obj/net/testinput.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/net/testinput.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
to	obj/net/testinput.asm	/^			to = ipc_recv((int32_t *) &whom, 0, 0);$/;"	d
u16_t	obj/net/testinput.asm	/^u16_t$/;"	l
u32_t	obj/net/testinput.asm	/^u32_t$/;"	l
union	obj/net/testinput.asm	/^union Nsipc *nsoutreq = (union Nsipc *)0x0fffe000;$/;"	l
unsigned	obj/net/testinput.asm	/^unsigned int$/;"	l
va	obj/net/testinput.asm	/^				va = nsoutreq->pkt.jp_data;$/;"	d
va	obj/net/testinput.asm	/^	va = fd2data(fd0);$/;"	d
val	obj/net/testinput.asm	/^        val = (val * base) + (int)(c - '0');$/;"	d
val	obj/net/testinput.asm	/^        val = (val << 4) | (int)(c + 10 - (islower(c) ? 'a' : 'A'));$/;"	d
val	obj/net/testinput.asm	/^    val = 0;$/;"	d
void	obj/net/testinput.asm	/^void *$/;"	l
void	obj/net/testinput.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/net/testinput.asm	/^void$/;"	l
width	obj/net/testinput.asm	/^				width = 0;$/;"	d
width	obj/net/testinput.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/net/testoutput.asm	/^#define ASM 1$/;"	d
Disassembly	obj/net/testoutput.asm	/^Disassembly of section .text:$/;"	l
_pgfault_handler	obj/net/testoutput.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	obj/net/testoutput.asm	/^_pgfault_upcall:$/;"	l
_start	obj/net/testoutput.asm	/^_start:$/;"	l
addr	obj/net/testoutput.asm	/^	addr = (void *)ROUNDDOWN(addr, PGSIZE);$/;"	d
altflag	obj/net/testoutput.asm	/^			altflag = 1;$/;"	d
altflag	obj/net/testoutput.asm	/^		altflag = 0;$/;"	d
args_exist	obj/net/testoutput.asm	/^args_exist:$/;"	l
base	obj/net/testoutput.asm	/^			base = 10;$/;"	d
base	obj/net/testoutput.asm	/^			base = 16;$/;"	d
base	obj/net/testoutput.asm	/^			base = 8;$/;"	d
base	obj/net/testoutput.asm	/^		base = 10;$/;"	d
binaryname	obj/net/testoutput.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/net/testoutput.asm	/^	binaryname = "ns_input";$/;"	d
binaryname	obj/net/testoutput.asm	/^	binaryname = "ns_output";$/;"	d
binaryname	obj/net/testoutput.asm	/^	binaryname = "ns_timer";$/;"	d
binaryname	obj/net/testoutput.asm	/^	binaryname = "testoutput";$/;"	d
buf	obj/net/testoutput.asm	/^	buf = vbuf;$/;"	d
c	obj/net/testoutput.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/net/testoutput.asm	/^				ch = *fmt;$/;"	d
char	obj/net/testoutput.asm	/^char *$/;"	l
clrflag	obj/net/testoutput.asm	/^		clrflag = 0;$/;"	d
cnt	obj/net/testoutput.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/net/testoutput.asm	/^				color = 0;$/;"	d
color	obj/net/testoutput.asm	/^			color = 0;$/;"	d
colorswitch	obj/net/testoutput.asm	/^	colorswitch:$/;"	l
const	obj/net/testoutput.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/net/testoutput.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/net/testoutput.asm	/^	d = dst;$/;"	d
default	obj/net/testoutput.asm	/^		default:$/;"	l
dig	obj/net/testoutput.asm	/^			dig = *s - '0';$/;"	d
dig	obj/net/testoutput.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/net/testoutput.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/net/testoutput.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/net/testoutput.asm	/^envid_t$/;"	l
err	obj/net/testoutput.asm	/^				err = -err;$/;"	d
err	obj/net/testoutput.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/net/testoutput.asm	/^    err:$/;"	l
err	obj/net/testoutput.asm	/^err:$/;"	l
err1	obj/net/testoutput.asm	/^    err1:$/;"	l
err2	obj/net/testoutput.asm	/^    err2:$/;"	l
err3	obj/net/testoutput.asm	/^    err3:$/;"	l
extern	obj/net/testoutput.asm	/^extern union Nsipc nsipcbuf;$/;"	l
fd	obj/net/testoutput.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/net/testoutput.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/net/testoutput.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/net/testoutput.asm	/^int $/;"	l
int	obj/net/testoutput.asm	/^int color;$/;"	l
int	obj/net/testoutput.asm	/^int$/;"	l
int32_t	obj/net/testoutput.asm	/^int32_t$/;"	l
lflag	obj/net/testoutput.asm	/^		lflag = 0;$/;"	d
long	obj/net/testoutput.asm	/^long$/;"	l
m	obj/net/testoutput.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/net/testoutput.asm	/^		m = n - tot;$/;"	d
m	obj/net/testoutput.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/net/testoutput.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/net/testoutput.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/net/testoutput.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/net/testoutput.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/net/testoutput.asm	/^				num = -(long long) num;$/;"	d
num	obj/net/testoutput.asm	/^			num = (unsigned long long)$/;"	d
num	obj/net/testoutput.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/net/testoutput.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/net/testoutput.asm	/^		number:$/;"	l
nva	obj/net/testoutput.asm	/^	nva = fd2data(newfd);$/;"	d
output_envid	obj/net/testoutput.asm	/^	output_envid = fork();$/;"	d
ova	obj/net/testoutput.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/net/testoutput.asm	/^				p = "(null)";$/;"	d
p	obj/net/testoutput.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/net/testoutput.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/net/testoutput.asm	/^			padc = '-';$/;"	d
padc	obj/net/testoutput.asm	/^			padc = '0';$/;"	d
perm	obj/net/testoutput.asm	/^		perm = 0;$/;"	d
pg	obj/net/testoutput.asm	/^		pg = NULL;$/;"	d
precision	obj/net/testoutput.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/net/testoutput.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/net/testoutput.asm	/^		process_precision:$/;"	l
pte	obj/net/testoutput.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/net/testoutput.asm	/^				r = -E_TX_BAD_LEN;$/;"	d
r	obj/net/testoutput.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/net/testoutput.asm	/^			r = -E_INVAL;$/;"	d
r	obj/net/testoutput.asm	/^			r = 0;$/;"	d
r	obj/net/testoutput.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/net/testoutput.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/net/testoutput.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
req	obj/net/testoutput.asm	/^		req = ipc_recv((int32_t *) &whom, nsoutreq, &perm);$/;"	d
reswitch	obj/net/testoutput.asm	/^	reswitch:$/;"	l
ret	obj/net/testoutput.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/net/testoutput.asm	/^	ret = dst;$/;"	d
s	obj/net/testoutput.asm	/^	s = src;$/;"	d
size_t	obj/net/testoutput.asm	/^size_t$/;"	l
ssize_t	obj/net/testoutput.asm	/^ssize_t$/;"	l
static	obj/net/testoutput.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/net/testoutput.asm	/^static int$/;"	l
static	obj/net/testoutput.asm	/^static long long$/;"	l
static	obj/net/testoutput.asm	/^static ssize_t$/;"	l
static	obj/net/testoutput.asm	/^static struct jif_pkt *pkt = (struct jif_pkt*)REQVA;$/;"	t
static	obj/net/testoutput.asm	/^static unsigned long long$/;"	l
static	obj/net/testoutput.asm	/^static void$/;"	l
stop	obj/net/testoutput.asm	/^			stop = sys_time_msec() + to;$/;"	d
thisenv	obj/net/testoutput.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/net/testoutput.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
to	obj/net/testoutput.asm	/^			to = ipc_recv((int32_t *) &whom, 0, 0);$/;"	d
union	obj/net/testoutput.asm	/^union Nsipc *nsoutreq = (union Nsipc *)0x0fffe000;$/;"	l
unsigned	obj/net/testoutput.asm	/^unsigned int$/;"	l
va	obj/net/testoutput.asm	/^				va = nsoutreq->pkt.jp_data;$/;"	d
va	obj/net/testoutput.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/net/testoutput.asm	/^void *$/;"	l
void	obj/net/testoutput.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/net/testoutput.asm	/^void$/;"	l
width	obj/net/testoutput.asm	/^				width = 0;$/;"	d
width	obj/net/testoutput.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/badsegment.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/badsegment.asm	/^Disassembly of section .text:$/;"	l
_start	obj/user/badsegment.asm	/^_start:$/;"	l
altflag	obj/user/badsegment.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/badsegment.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/badsegment.asm	/^args_exist:$/;"	l
base	obj/user/badsegment.asm	/^			base = 10;$/;"	d
base	obj/user/badsegment.asm	/^			base = 16;$/;"	d
base	obj/user/badsegment.asm	/^			base = 8;$/;"	d
base	obj/user/badsegment.asm	/^		base = 10;$/;"	d
binaryname	obj/user/badsegment.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/badsegment.asm	/^	buf = vbuf;$/;"	d
c	obj/user/badsegment.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/badsegment.asm	/^				ch = *fmt;$/;"	d
char	obj/user/badsegment.asm	/^char *$/;"	l
clrflag	obj/user/badsegment.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/badsegment.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/badsegment.asm	/^				color = 0;$/;"	d
color	obj/user/badsegment.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/badsegment.asm	/^	colorswitch:$/;"	l
const	obj/user/badsegment.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/badsegment.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/badsegment.asm	/^	d = dst;$/;"	d
default	obj/user/badsegment.asm	/^		default:$/;"	l
dig	obj/user/badsegment.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/badsegment.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/badsegment.asm	/^envid_t$/;"	l
err	obj/user/badsegment.asm	/^				err = -err;$/;"	d
err	obj/user/badsegment.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/badsegment.asm	/^    err:$/;"	l
err	obj/user/badsegment.asm	/^err:$/;"	l
err1	obj/user/badsegment.asm	/^    err1:$/;"	l
err2	obj/user/badsegment.asm	/^    err2:$/;"	l
err3	obj/user/badsegment.asm	/^    err3:$/;"	l
fd	obj/user/badsegment.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/badsegment.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/badsegment.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/badsegment.asm	/^int $/;"	l
int	obj/user/badsegment.asm	/^int color;$/;"	l
int	obj/user/badsegment.asm	/^int$/;"	l
int32_t	obj/user/badsegment.asm	/^int32_t$/;"	l
lflag	obj/user/badsegment.asm	/^		lflag = 0;$/;"	d
long	obj/user/badsegment.asm	/^long$/;"	l
m	obj/user/badsegment.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/badsegment.asm	/^		m = n - tot;$/;"	d
m	obj/user/badsegment.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/badsegment.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/badsegment.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/badsegment.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/badsegment.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/badsegment.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/badsegment.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/badsegment.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/badsegment.asm	/^		number:$/;"	l
nva	obj/user/badsegment.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/badsegment.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/badsegment.asm	/^				p = "(null)";$/;"	d
p	obj/user/badsegment.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/badsegment.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/badsegment.asm	/^			padc = '-';$/;"	d
padc	obj/user/badsegment.asm	/^			padc = '0';$/;"	d
precision	obj/user/badsegment.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/badsegment.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/badsegment.asm	/^		process_precision:$/;"	l
pte	obj/user/badsegment.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/badsegment.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/badsegment.asm	/^			r = 0;$/;"	d
r	obj/user/badsegment.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/badsegment.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/badsegment.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/badsegment.asm	/^	reswitch:$/;"	l
ret	obj/user/badsegment.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/badsegment.asm	/^	ret = dst;$/;"	d
s	obj/user/badsegment.asm	/^	s = src;$/;"	d
size_t	obj/user/badsegment.asm	/^size_t$/;"	l
ssize_t	obj/user/badsegment.asm	/^ssize_t$/;"	l
static	obj/user/badsegment.asm	/^static int$/;"	l
static	obj/user/badsegment.asm	/^static long long$/;"	l
static	obj/user/badsegment.asm	/^static ssize_t$/;"	l
static	obj/user/badsegment.asm	/^static unsigned long long$/;"	l
static	obj/user/badsegment.asm	/^static void$/;"	l
thisenv	obj/user/badsegment.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/badsegment.asm	/^unsigned int$/;"	l
va	obj/user/badsegment.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/badsegment.asm	/^void *$/;"	l
void	obj/user/badsegment.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/badsegment.asm	/^void$/;"	l
width	obj/user/badsegment.asm	/^				width = 0;$/;"	d
width	obj/user/badsegment.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/breakpoint.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/breakpoint.asm	/^Disassembly of section .text:$/;"	l
_start	obj/user/breakpoint.asm	/^_start:$/;"	l
altflag	obj/user/breakpoint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/breakpoint.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/breakpoint.asm	/^args_exist:$/;"	l
base	obj/user/breakpoint.asm	/^			base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 16;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 8;$/;"	d
base	obj/user/breakpoint.asm	/^		base = 10;$/;"	d
binaryname	obj/user/breakpoint.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/breakpoint.asm	/^	buf = vbuf;$/;"	d
c	obj/user/breakpoint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/breakpoint.asm	/^				ch = *fmt;$/;"	d
char	obj/user/breakpoint.asm	/^char *$/;"	l
clrflag	obj/user/breakpoint.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/breakpoint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/breakpoint.asm	/^				color = 0;$/;"	d
color	obj/user/breakpoint.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/breakpoint.asm	/^	colorswitch:$/;"	l
const	obj/user/breakpoint.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/breakpoint.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/breakpoint.asm	/^	d = dst;$/;"	d
default	obj/user/breakpoint.asm	/^		default:$/;"	l
dig	obj/user/breakpoint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/breakpoint.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/breakpoint.asm	/^envid_t$/;"	l
err	obj/user/breakpoint.asm	/^				err = -err;$/;"	d
err	obj/user/breakpoint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/breakpoint.asm	/^    err:$/;"	l
err	obj/user/breakpoint.asm	/^err:$/;"	l
err1	obj/user/breakpoint.asm	/^    err1:$/;"	l
err2	obj/user/breakpoint.asm	/^    err2:$/;"	l
err3	obj/user/breakpoint.asm	/^    err3:$/;"	l
fd	obj/user/breakpoint.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/breakpoint.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/breakpoint.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/breakpoint.asm	/^int $/;"	l
int	obj/user/breakpoint.asm	/^int color;$/;"	l
int	obj/user/breakpoint.asm	/^int$/;"	l
int32_t	obj/user/breakpoint.asm	/^int32_t$/;"	l
lflag	obj/user/breakpoint.asm	/^		lflag = 0;$/;"	d
long	obj/user/breakpoint.asm	/^long$/;"	l
m	obj/user/breakpoint.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/breakpoint.asm	/^		m = n - tot;$/;"	d
m	obj/user/breakpoint.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/breakpoint.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/breakpoint.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/breakpoint.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/breakpoint.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/breakpoint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/breakpoint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/breakpoint.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/breakpoint.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/breakpoint.asm	/^		number:$/;"	l
nva	obj/user/breakpoint.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/breakpoint.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/breakpoint.asm	/^				p = "(null)";$/;"	d
p	obj/user/breakpoint.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/breakpoint.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/breakpoint.asm	/^			padc = '-';$/;"	d
padc	obj/user/breakpoint.asm	/^			padc = '0';$/;"	d
precision	obj/user/breakpoint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/breakpoint.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/breakpoint.asm	/^		process_precision:$/;"	l
pte	obj/user/breakpoint.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/breakpoint.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/breakpoint.asm	/^			r = 0;$/;"	d
r	obj/user/breakpoint.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/breakpoint.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/breakpoint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/breakpoint.asm	/^	reswitch:$/;"	l
ret	obj/user/breakpoint.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/breakpoint.asm	/^	ret = dst;$/;"	d
s	obj/user/breakpoint.asm	/^	s = src;$/;"	d
size_t	obj/user/breakpoint.asm	/^size_t$/;"	l
ssize_t	obj/user/breakpoint.asm	/^ssize_t$/;"	l
static	obj/user/breakpoint.asm	/^static int$/;"	l
static	obj/user/breakpoint.asm	/^static long long$/;"	l
static	obj/user/breakpoint.asm	/^static ssize_t$/;"	l
static	obj/user/breakpoint.asm	/^static unsigned long long$/;"	l
static	obj/user/breakpoint.asm	/^static void$/;"	l
thisenv	obj/user/breakpoint.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/breakpoint.asm	/^unsigned int$/;"	l
va	obj/user/breakpoint.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/breakpoint.asm	/^void *$/;"	l
void	obj/user/breakpoint.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/breakpoint.asm	/^void$/;"	l
width	obj/user/breakpoint.asm	/^				width = 0;$/;"	d
width	obj/user/breakpoint.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/buggyhello.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/buggyhello.asm	/^Disassembly of section .text:$/;"	l
_start	obj/user/buggyhello.asm	/^_start:$/;"	l
altflag	obj/user/buggyhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/buggyhello.asm	/^args_exist:$/;"	l
base	obj/user/buggyhello.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 8;$/;"	d
base	obj/user/buggyhello.asm	/^		base = 10;$/;"	d
binaryname	obj/user/buggyhello.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/buggyhello.asm	/^	buf = vbuf;$/;"	d
c	obj/user/buggyhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/buggyhello.asm	/^				ch = *fmt;$/;"	d
char	obj/user/buggyhello.asm	/^char *$/;"	l
clrflag	obj/user/buggyhello.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/buggyhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/buggyhello.asm	/^				color = 0;$/;"	d
color	obj/user/buggyhello.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/buggyhello.asm	/^	colorswitch:$/;"	l
const	obj/user/buggyhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/buggyhello.asm	/^	d = dst;$/;"	d
default	obj/user/buggyhello.asm	/^		default:$/;"	l
dig	obj/user/buggyhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/buggyhello.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/buggyhello.asm	/^envid_t$/;"	l
err	obj/user/buggyhello.asm	/^				err = -err;$/;"	d
err	obj/user/buggyhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello.asm	/^    err:$/;"	l
err	obj/user/buggyhello.asm	/^err:$/;"	l
err1	obj/user/buggyhello.asm	/^    err1:$/;"	l
err2	obj/user/buggyhello.asm	/^    err2:$/;"	l
err3	obj/user/buggyhello.asm	/^    err3:$/;"	l
fd	obj/user/buggyhello.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/buggyhello.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/buggyhello.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/buggyhello.asm	/^int $/;"	l
int	obj/user/buggyhello.asm	/^int color;$/;"	l
int	obj/user/buggyhello.asm	/^int$/;"	l
int32_t	obj/user/buggyhello.asm	/^int32_t$/;"	l
lflag	obj/user/buggyhello.asm	/^		lflag = 0;$/;"	d
long	obj/user/buggyhello.asm	/^long$/;"	l
m	obj/user/buggyhello.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/buggyhello.asm	/^		m = n - tot;$/;"	d
m	obj/user/buggyhello.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/buggyhello.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/buggyhello.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/buggyhello.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/buggyhello.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/buggyhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/buggyhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/buggyhello.asm	/^		number:$/;"	l
nva	obj/user/buggyhello.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/buggyhello.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/buggyhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/buggyhello.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/buggyhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/buggyhello.asm	/^			padc = '0';$/;"	d
precision	obj/user/buggyhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/buggyhello.asm	/^		process_precision:$/;"	l
pte	obj/user/buggyhello.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/buggyhello.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/buggyhello.asm	/^			r = 0;$/;"	d
r	obj/user/buggyhello.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/buggyhello.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/buggyhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/buggyhello.asm	/^	reswitch:$/;"	l
ret	obj/user/buggyhello.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/buggyhello.asm	/^	ret = dst;$/;"	d
s	obj/user/buggyhello.asm	/^	s = src;$/;"	d
size_t	obj/user/buggyhello.asm	/^size_t$/;"	l
ssize_t	obj/user/buggyhello.asm	/^ssize_t$/;"	l
static	obj/user/buggyhello.asm	/^static int$/;"	l
static	obj/user/buggyhello.asm	/^static long long$/;"	l
static	obj/user/buggyhello.asm	/^static ssize_t$/;"	l
static	obj/user/buggyhello.asm	/^static unsigned long long$/;"	l
static	obj/user/buggyhello.asm	/^static void$/;"	l
thisenv	obj/user/buggyhello.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/buggyhello.asm	/^unsigned int$/;"	l
va	obj/user/buggyhello.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/buggyhello.asm	/^void *$/;"	l
void	obj/user/buggyhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/buggyhello.asm	/^void$/;"	l
width	obj/user/buggyhello.asm	/^				width = 0;$/;"	d
width	obj/user/buggyhello.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/buggyhello2.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/buggyhello2.asm	/^Disassembly of section .text:$/;"	l
_start	obj/user/buggyhello2.asm	/^_start:$/;"	l
altflag	obj/user/buggyhello2.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello2.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/buggyhello2.asm	/^args_exist:$/;"	l
base	obj/user/buggyhello2.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 8;$/;"	d
base	obj/user/buggyhello2.asm	/^		base = 10;$/;"	d
binaryname	obj/user/buggyhello2.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/buggyhello2.asm	/^	buf = vbuf;$/;"	d
c	obj/user/buggyhello2.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/buggyhello2.asm	/^				ch = *fmt;$/;"	d
char	obj/user/buggyhello2.asm	/^char *$/;"	l
clrflag	obj/user/buggyhello2.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/buggyhello2.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/buggyhello2.asm	/^				color = 0;$/;"	d
color	obj/user/buggyhello2.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/buggyhello2.asm	/^	colorswitch:$/;"	l
const	obj/user/buggyhello2.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello2.asm	/^const char *hello = "hello, world\\n";$/;"	l
const	obj/user/buggyhello2.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/buggyhello2.asm	/^	d = dst;$/;"	d
default	obj/user/buggyhello2.asm	/^		default:$/;"	l
dig	obj/user/buggyhello2.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/buggyhello2.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/buggyhello2.asm	/^envid_t$/;"	l
err	obj/user/buggyhello2.asm	/^				err = -err;$/;"	d
err	obj/user/buggyhello2.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello2.asm	/^    err:$/;"	l
err	obj/user/buggyhello2.asm	/^err:$/;"	l
err1	obj/user/buggyhello2.asm	/^    err1:$/;"	l
err2	obj/user/buggyhello2.asm	/^    err2:$/;"	l
err3	obj/user/buggyhello2.asm	/^    err3:$/;"	l
fd	obj/user/buggyhello2.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/buggyhello2.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/buggyhello2.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/buggyhello2.asm	/^int $/;"	l
int	obj/user/buggyhello2.asm	/^int color;$/;"	l
int	obj/user/buggyhello2.asm	/^int$/;"	l
int32_t	obj/user/buggyhello2.asm	/^int32_t$/;"	l
lflag	obj/user/buggyhello2.asm	/^		lflag = 0;$/;"	d
long	obj/user/buggyhello2.asm	/^long$/;"	l
m	obj/user/buggyhello2.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/buggyhello2.asm	/^		m = n - tot;$/;"	d
m	obj/user/buggyhello2.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/buggyhello2.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/buggyhello2.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/buggyhello2.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/buggyhello2.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/buggyhello2.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello2.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello2.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/buggyhello2.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/buggyhello2.asm	/^		number:$/;"	l
nva	obj/user/buggyhello2.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/buggyhello2.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/buggyhello2.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello2.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/buggyhello2.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/buggyhello2.asm	/^			padc = '-';$/;"	d
padc	obj/user/buggyhello2.asm	/^			padc = '0';$/;"	d
precision	obj/user/buggyhello2.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello2.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/buggyhello2.asm	/^		process_precision:$/;"	l
pte	obj/user/buggyhello2.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/buggyhello2.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/buggyhello2.asm	/^			r = 0;$/;"	d
r	obj/user/buggyhello2.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/buggyhello2.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/buggyhello2.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/buggyhello2.asm	/^	reswitch:$/;"	l
ret	obj/user/buggyhello2.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/buggyhello2.asm	/^	ret = dst;$/;"	d
s	obj/user/buggyhello2.asm	/^	s = src;$/;"	d
size_t	obj/user/buggyhello2.asm	/^size_t$/;"	l
ssize_t	obj/user/buggyhello2.asm	/^ssize_t$/;"	l
static	obj/user/buggyhello2.asm	/^static int$/;"	l
static	obj/user/buggyhello2.asm	/^static long long$/;"	l
static	obj/user/buggyhello2.asm	/^static ssize_t$/;"	l
static	obj/user/buggyhello2.asm	/^static unsigned long long$/;"	l
static	obj/user/buggyhello2.asm	/^static void$/;"	l
thisenv	obj/user/buggyhello2.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/buggyhello2.asm	/^unsigned int$/;"	l
va	obj/user/buggyhello2.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/buggyhello2.asm	/^void *$/;"	l
void	obj/user/buggyhello2.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/buggyhello2.asm	/^void$/;"	l
width	obj/user/buggyhello2.asm	/^				width = 0;$/;"	d
width	obj/user/buggyhello2.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/cat.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/cat.asm	/^Disassembly of section .text:$/;"	l
_start	obj/user/cat.asm	/^_start:$/;"	l
altflag	obj/user/cat.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/cat.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/cat.asm	/^args_exist:$/;"	l
base	obj/user/cat.asm	/^			base = 10;$/;"	d
base	obj/user/cat.asm	/^			base = 16;$/;"	d
base	obj/user/cat.asm	/^			base = 8;$/;"	d
base	obj/user/cat.asm	/^		base = 10;$/;"	d
binaryname	obj/user/cat.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/cat.asm	/^	binaryname = "cat";$/;"	d
buf	obj/user/cat.asm	/^	buf = vbuf;$/;"	d
c	obj/user/cat.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/cat.asm	/^				ch = *fmt;$/;"	d
char	obj/user/cat.asm	/^char *$/;"	l
char	obj/user/cat.asm	/^char buf[8192];$/;"	l
clrflag	obj/user/cat.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/cat.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/cat.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/cat.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
color	obj/user/cat.asm	/^				color = 0;$/;"	d
color	obj/user/cat.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/cat.asm	/^	colorswitch:$/;"	l
const	obj/user/cat.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/cat.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/cat.asm	/^	d = dst;$/;"	d
default	obj/user/cat.asm	/^		default:$/;"	l
dig	obj/user/cat.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/cat.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/cat.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/cat.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/cat.asm	/^envid_t$/;"	l
err	obj/user/cat.asm	/^				err = -err;$/;"	d
err	obj/user/cat.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/cat.asm	/^    err:$/;"	l
err	obj/user/cat.asm	/^err:$/;"	l
err1	obj/user/cat.asm	/^    err1:$/;"	l
err2	obj/user/cat.asm	/^    err2:$/;"	l
err3	obj/user/cat.asm	/^    err3:$/;"	l
f	obj/user/cat.asm	/^			f = open(argv[i], O_RDONLY);$/;"	d
fd	obj/user/cat.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/cat.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/cat.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/cat.asm	/^int $/;"	l
int	obj/user/cat.asm	/^int color;$/;"	l
int	obj/user/cat.asm	/^int$/;"	l
int32_t	obj/user/cat.asm	/^int32_t$/;"	l
lflag	obj/user/cat.asm	/^		lflag = 0;$/;"	d
long	obj/user/cat.asm	/^long$/;"	l
m	obj/user/cat.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/cat.asm	/^		m = n - tot;$/;"	d
m	obj/user/cat.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/cat.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/cat.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/cat.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/cat.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/cat.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/cat.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/cat.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/cat.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/cat.asm	/^		number:$/;"	l
nva	obj/user/cat.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/cat.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/cat.asm	/^				p = "(null)";$/;"	d
p	obj/user/cat.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/cat.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/cat.asm	/^			padc = '-';$/;"	d
padc	obj/user/cat.asm	/^			padc = '0';$/;"	d
precision	obj/user/cat.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/cat.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/cat.asm	/^		process_precision:$/;"	l
pte	obj/user/cat.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/cat.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/cat.asm	/^			r = 0;$/;"	d
r	obj/user/cat.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/cat.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/cat.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/cat.asm	/^	reswitch:$/;"	l
ret	obj/user/cat.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/cat.asm	/^	ret = dst;$/;"	d
s	obj/user/cat.asm	/^	s = src;$/;"	d
size_t	obj/user/cat.asm	/^size_t$/;"	l
ssize_t	obj/user/cat.asm	/^ssize_t$/;"	l
static	obj/user/cat.asm	/^static int$/;"	l
static	obj/user/cat.asm	/^static long long$/;"	l
static	obj/user/cat.asm	/^static ssize_t$/;"	l
static	obj/user/cat.asm	/^static unsigned long long$/;"	l
static	obj/user/cat.asm	/^static void$/;"	l
thisenv	obj/user/cat.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/cat.asm	/^unsigned int$/;"	l
va	obj/user/cat.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/cat.asm	/^void *$/;"	l
void	obj/user/cat.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/cat.asm	/^void$/;"	l
width	obj/user/cat.asm	/^				width = 0;$/;"	d
width	obj/user/cat.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/divzero.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/divzero.asm	/^Disassembly of section .text:$/;"	l
_start	obj/user/divzero.asm	/^_start:$/;"	l
altflag	obj/user/divzero.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/divzero.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/divzero.asm	/^args_exist:$/;"	l
base	obj/user/divzero.asm	/^			base = 10;$/;"	d
base	obj/user/divzero.asm	/^			base = 16;$/;"	d
base	obj/user/divzero.asm	/^			base = 8;$/;"	d
base	obj/user/divzero.asm	/^		base = 10;$/;"	d
binaryname	obj/user/divzero.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/divzero.asm	/^	buf = vbuf;$/;"	d
c	obj/user/divzero.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/divzero.asm	/^				ch = *fmt;$/;"	d
char	obj/user/divzero.asm	/^char *$/;"	l
clrflag	obj/user/divzero.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/divzero.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/divzero.asm	/^				color = 0;$/;"	d
color	obj/user/divzero.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/divzero.asm	/^	colorswitch:$/;"	l
const	obj/user/divzero.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/divzero.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/divzero.asm	/^	d = dst;$/;"	d
default	obj/user/divzero.asm	/^		default:$/;"	l
dig	obj/user/divzero.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/divzero.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/divzero.asm	/^envid_t$/;"	l
err	obj/user/divzero.asm	/^				err = -err;$/;"	d
err	obj/user/divzero.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/divzero.asm	/^    err:$/;"	l
err	obj/user/divzero.asm	/^err:$/;"	l
err1	obj/user/divzero.asm	/^    err1:$/;"	l
err2	obj/user/divzero.asm	/^    err2:$/;"	l
err3	obj/user/divzero.asm	/^    err3:$/;"	l
fd	obj/user/divzero.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/divzero.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/divzero.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/divzero.asm	/^int $/;"	l
int	obj/user/divzero.asm	/^int color;$/;"	l
int	obj/user/divzero.asm	/^int zero;$/;"	l
int	obj/user/divzero.asm	/^int$/;"	l
int32_t	obj/user/divzero.asm	/^int32_t$/;"	l
lflag	obj/user/divzero.asm	/^		lflag = 0;$/;"	d
long	obj/user/divzero.asm	/^long$/;"	l
m	obj/user/divzero.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/divzero.asm	/^		m = n - tot;$/;"	d
m	obj/user/divzero.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/divzero.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/divzero.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/divzero.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/divzero.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/divzero.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/divzero.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/divzero.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/divzero.asm	/^		number:$/;"	l
nva	obj/user/divzero.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/divzero.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/divzero.asm	/^				p = "(null)";$/;"	d
p	obj/user/divzero.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/divzero.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/divzero.asm	/^			padc = '-';$/;"	d
padc	obj/user/divzero.asm	/^			padc = '0';$/;"	d
precision	obj/user/divzero.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/divzero.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/divzero.asm	/^		process_precision:$/;"	l
pte	obj/user/divzero.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/divzero.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/divzero.asm	/^			r = 0;$/;"	d
r	obj/user/divzero.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/divzero.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/divzero.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/divzero.asm	/^	reswitch:$/;"	l
ret	obj/user/divzero.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/divzero.asm	/^	ret = dst;$/;"	d
s	obj/user/divzero.asm	/^	s = src;$/;"	d
size_t	obj/user/divzero.asm	/^size_t$/;"	l
ssize_t	obj/user/divzero.asm	/^ssize_t$/;"	l
static	obj/user/divzero.asm	/^static int$/;"	l
static	obj/user/divzero.asm	/^static long long$/;"	l
static	obj/user/divzero.asm	/^static ssize_t$/;"	l
static	obj/user/divzero.asm	/^static unsigned long long$/;"	l
static	obj/user/divzero.asm	/^static void$/;"	l
thisenv	obj/user/divzero.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/divzero.asm	/^unsigned int$/;"	l
va	obj/user/divzero.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/divzero.asm	/^void *$/;"	l
void	obj/user/divzero.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/divzero.asm	/^void$/;"	l
width	obj/user/divzero.asm	/^				width = 0;$/;"	d
width	obj/user/divzero.asm	/^				width = precision, precision = -1;$/;"	d
zero	obj/user/divzero.asm	/^	zero = 0;$/;"	d
ASM	obj/user/dumbfork.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/dumbfork.asm	/^Disassembly of section .text:$/;"	l
_start	obj/user/dumbfork.asm	/^_start:$/;"	l
altflag	obj/user/dumbfork.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/dumbfork.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/dumbfork.asm	/^args_exist:$/;"	l
base	obj/user/dumbfork.asm	/^			base = 10;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 16;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 8;$/;"	d
base	obj/user/dumbfork.asm	/^		base = 10;$/;"	d
binaryname	obj/user/dumbfork.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/dumbfork.asm	/^	buf = vbuf;$/;"	d
c	obj/user/dumbfork.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/dumbfork.asm	/^				ch = *fmt;$/;"	d
char	obj/user/dumbfork.asm	/^char *$/;"	l
clrflag	obj/user/dumbfork.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/dumbfork.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/dumbfork.asm	/^				color = 0;$/;"	d
color	obj/user/dumbfork.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/dumbfork.asm	/^	colorswitch:$/;"	l
const	obj/user/dumbfork.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/dumbfork.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/dumbfork.asm	/^	d = dst;$/;"	d
default	obj/user/dumbfork.asm	/^		default:$/;"	l
dig	obj/user/dumbfork.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/dumbfork.asm	/^	dst_in = dst;$/;"	d
envid	obj/user/dumbfork.asm	/^	envid = sys_exofork();$/;"	d
envid_t	obj/user/dumbfork.asm	/^envid_t dumbfork(void);$/;"	l
envid_t	obj/user/dumbfork.asm	/^envid_t$/;"	l
err	obj/user/dumbfork.asm	/^				err = -err;$/;"	d
err	obj/user/dumbfork.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/dumbfork.asm	/^    err:$/;"	l
err	obj/user/dumbfork.asm	/^err:$/;"	l
err1	obj/user/dumbfork.asm	/^    err1:$/;"	l
err2	obj/user/dumbfork.asm	/^    err2:$/;"	l
err3	obj/user/dumbfork.asm	/^    err3:$/;"	l
fd	obj/user/dumbfork.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/dumbfork.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/dumbfork.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/dumbfork.asm	/^int $/;"	l
int	obj/user/dumbfork.asm	/^int color;$/;"	l
int	obj/user/dumbfork.asm	/^int$/;"	l
int32_t	obj/user/dumbfork.asm	/^int32_t$/;"	l
lflag	obj/user/dumbfork.asm	/^		lflag = 0;$/;"	d
long	obj/user/dumbfork.asm	/^long$/;"	l
m	obj/user/dumbfork.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/dumbfork.asm	/^		m = n - tot;$/;"	d
m	obj/user/dumbfork.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/dumbfork.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/dumbfork.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/dumbfork.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/dumbfork.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/dumbfork.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/dumbfork.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/dumbfork.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/dumbfork.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/dumbfork.asm	/^		number:$/;"	l
nva	obj/user/dumbfork.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/dumbfork.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/dumbfork.asm	/^				p = "(null)";$/;"	d
p	obj/user/dumbfork.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/dumbfork.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/dumbfork.asm	/^			padc = '-';$/;"	d
padc	obj/user/dumbfork.asm	/^			padc = '0';$/;"	d
precision	obj/user/dumbfork.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/dumbfork.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/dumbfork.asm	/^		process_precision:$/;"	l
pte	obj/user/dumbfork.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/dumbfork.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/dumbfork.asm	/^			r = 0;$/;"	d
r	obj/user/dumbfork.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/dumbfork.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/dumbfork.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/dumbfork.asm	/^	reswitch:$/;"	l
ret	obj/user/dumbfork.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/dumbfork.asm	/^	ret = dst;$/;"	d
s	obj/user/dumbfork.asm	/^	s = src;$/;"	d
size_t	obj/user/dumbfork.asm	/^size_t$/;"	l
ssize_t	obj/user/dumbfork.asm	/^ssize_t$/;"	l
static	obj/user/dumbfork.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/dumbfork.asm	/^static int$/;"	l
static	obj/user/dumbfork.asm	/^static long long$/;"	l
static	obj/user/dumbfork.asm	/^static ssize_t$/;"	l
static	obj/user/dumbfork.asm	/^static unsigned long long$/;"	l
static	obj/user/dumbfork.asm	/^static void$/;"	l
thisenv	obj/user/dumbfork.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/dumbfork.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/dumbfork.asm	/^unsigned int$/;"	l
va	obj/user/dumbfork.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/dumbfork.asm	/^void *$/;"	l
void	obj/user/dumbfork.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/dumbfork.asm	/^void$/;"	l
who	obj/user/dumbfork.asm	/^	who = dumbfork();$/;"	d
width	obj/user/dumbfork.asm	/^				width = 0;$/;"	d
width	obj/user/dumbfork.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/echo.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/echo.asm	/^Disassembly of section .text:$/;"	l
_start	obj/user/echo.asm	/^_start:$/;"	l
altflag	obj/user/echo.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/echo.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/echo.asm	/^args_exist:$/;"	l
base	obj/user/echo.asm	/^			base = 10;$/;"	d
base	obj/user/echo.asm	/^			base = 16;$/;"	d
base	obj/user/echo.asm	/^			base = 8;$/;"	d
base	obj/user/echo.asm	/^		base = 10;$/;"	d
binaryname	obj/user/echo.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/echo.asm	/^	buf = vbuf;$/;"	d
c	obj/user/echo.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/echo.asm	/^				ch = *fmt;$/;"	d
char	obj/user/echo.asm	/^char *$/;"	l
clrflag	obj/user/echo.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/echo.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/echo.asm	/^				color = 0;$/;"	d
color	obj/user/echo.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/echo.asm	/^	colorswitch:$/;"	l
const	obj/user/echo.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/echo.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/echo.asm	/^	d = dst;$/;"	d
default	obj/user/echo.asm	/^		default:$/;"	l
dig	obj/user/echo.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/echo.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/echo.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/echo.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/echo.asm	/^envid_t$/;"	l
err	obj/user/echo.asm	/^				err = -err;$/;"	d
err	obj/user/echo.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/echo.asm	/^    err:$/;"	l
err	obj/user/echo.asm	/^err:$/;"	l
err1	obj/user/echo.asm	/^    err1:$/;"	l
err2	obj/user/echo.asm	/^    err2:$/;"	l
err3	obj/user/echo.asm	/^    err3:$/;"	l
fd	obj/user/echo.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/echo.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/echo.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/echo.asm	/^int $/;"	l
int	obj/user/echo.asm	/^int color;$/;"	l
int	obj/user/echo.asm	/^int$/;"	l
int32_t	obj/user/echo.asm	/^int32_t$/;"	l
lflag	obj/user/echo.asm	/^		lflag = 0;$/;"	d
long	obj/user/echo.asm	/^long$/;"	l
m	obj/user/echo.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/echo.asm	/^		m = n - tot;$/;"	d
m	obj/user/echo.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/echo.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/echo.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nflag	obj/user/echo.asm	/^		nflag = 1;$/;"	d
nflag	obj/user/echo.asm	/^	nflag = 0;$/;"	d
nn	obj/user/echo.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/echo.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/echo.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/echo.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/echo.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/echo.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/echo.asm	/^		number:$/;"	l
nva	obj/user/echo.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/echo.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/echo.asm	/^				p = "(null)";$/;"	d
p	obj/user/echo.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/echo.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/echo.asm	/^			padc = '-';$/;"	d
padc	obj/user/echo.asm	/^			padc = '0';$/;"	d
precision	obj/user/echo.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/echo.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/echo.asm	/^		process_precision:$/;"	l
pte	obj/user/echo.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/echo.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/echo.asm	/^			r = 0;$/;"	d
r	obj/user/echo.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/echo.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/echo.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/echo.asm	/^	reswitch:$/;"	l
ret	obj/user/echo.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/echo.asm	/^	ret = dst;$/;"	d
s	obj/user/echo.asm	/^	s = src;$/;"	d
size_t	obj/user/echo.asm	/^size_t$/;"	l
ssize_t	obj/user/echo.asm	/^ssize_t$/;"	l
static	obj/user/echo.asm	/^static int$/;"	l
static	obj/user/echo.asm	/^static long long$/;"	l
static	obj/user/echo.asm	/^static ssize_t$/;"	l
static	obj/user/echo.asm	/^static unsigned long long$/;"	l
static	obj/user/echo.asm	/^static void$/;"	l
thisenv	obj/user/echo.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/echo.asm	/^unsigned int$/;"	l
va	obj/user/echo.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/echo.asm	/^void *$/;"	l
void	obj/user/echo.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/echo.asm	/^void$/;"	l
width	obj/user/echo.asm	/^				width = 0;$/;"	d
width	obj/user/echo.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/echosrv.asm	/^#define ASM 1$/;"	d
BUFFSIZE	obj/user/echosrv.asm	/^#define BUFFSIZE 32$/;"	d
Disassembly	obj/user/echosrv.asm	/^Disassembly of section .text:$/;"	l
MAXPENDING	obj/user/echosrv.asm	/^#define MAXPENDING 5    \/\/ Max connection requests$/;"	d
_start	obj/user/echosrv.asm	/^_start:$/;"	l
altflag	obj/user/echosrv.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/echosrv.asm	/^		altflag = 0;$/;"	d
ap	obj/user/echosrv.asm	/^  ap = (u8_t *)&s_addr;$/;"	d
args_exist	obj/user/echosrv.asm	/^args_exist:$/;"	l
base	obj/user/echosrv.asm	/^			base = 10;$/;"	d
base	obj/user/echosrv.asm	/^			base = 16;$/;"	d
base	obj/user/echosrv.asm	/^			base = 8;$/;"	d
base	obj/user/echosrv.asm	/^		base = 10;$/;"	d
base	obj/user/echosrv.asm	/^        base = 16;$/;"	d
base	obj/user/echosrv.asm	/^        base = 8;$/;"	d
base	obj/user/echosrv.asm	/^    base = 10;$/;"	d
binaryname	obj/user/echosrv.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/echosrv.asm	/^	buf = vbuf;$/;"	d
c	obj/user/echosrv.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/echosrv.asm	/^        c = *++cp;$/;"	d
c	obj/user/echosrv.asm	/^      c = *++cp;$/;"	d
c	obj/user/echosrv.asm	/^  c = *cp;$/;"	d
ch	obj/user/echosrv.asm	/^				ch = *fmt;$/;"	d
char	obj/user/echosrv.asm	/^char *$/;"	l
clrflag	obj/user/echosrv.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/echosrv.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/echosrv.asm	/^				color = 0;$/;"	d
color	obj/user/echosrv.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/echosrv.asm	/^	colorswitch:$/;"	l
const	obj/user/echosrv.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/echosrv.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/echosrv.asm	/^	d = dst;$/;"	d
default	obj/user/echosrv.asm	/^		default:$/;"	l
dig	obj/user/echosrv.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/echosrv.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/echosrv.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/echosrv.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/echosrv.asm	/^envid_t$/;"	l
err	obj/user/echosrv.asm	/^				err = -err;$/;"	d
err	obj/user/echosrv.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/echosrv.asm	/^    err:$/;"	l
err	obj/user/echosrv.asm	/^err:$/;"	l
err1	obj/user/echosrv.asm	/^    err1:$/;"	l
err2	obj/user/echosrv.asm	/^    err2:$/;"	l
err3	obj/user/echosrv.asm	/^    err3:$/;"	l
fd	obj/user/echosrv.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/echosrv.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/echosrv.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
i	obj/user/echosrv.asm	/^    i = 0;$/;"	d
int	obj/user/echosrv.asm	/^int $/;"	l
int	obj/user/echosrv.asm	/^int color;$/;"	l
int	obj/user/echosrv.asm	/^int$/;"	l
int32_t	obj/user/echosrv.asm	/^int32_t$/;"	l
lflag	obj/user/echosrv.asm	/^		lflag = 0;$/;"	d
long	obj/user/echosrv.asm	/^long$/;"	l
m	obj/user/echosrv.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/echosrv.asm	/^		m = n - tot;$/;"	d
m	obj/user/echosrv.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/echosrv.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/echosrv.asm	/^  n = pp - parts + 1;$/;"	d
newfd	obj/user/echosrv.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/echosrv.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/echosrv.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/echosrv.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/echosrv.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/echosrv.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/echosrv.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/echosrv.asm	/^		number:$/;"	l
nva	obj/user/echosrv.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/echosrv.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/echosrv.asm	/^				p = "(null)";$/;"	d
p	obj/user/echosrv.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/echosrv.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/echosrv.asm	/^			padc = '-';$/;"	d
padc	obj/user/echosrv.asm	/^			padc = '0';$/;"	d
precision	obj/user/echosrv.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/echosrv.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/echosrv.asm	/^		process_precision:$/;"	l
pte	obj/user/echosrv.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/echosrv.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/echosrv.asm	/^			r = 0;$/;"	d
r	obj/user/echosrv.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/echosrv.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/echosrv.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rem	obj/user/echosrv.asm	/^      rem = *ap % (u8_t)10;$/;"	d
reswitch	obj/user/echosrv.asm	/^	reswitch:$/;"	l
ret	obj/user/echosrv.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/echosrv.asm	/^	ret = dst;$/;"	d
rp	obj/user/echosrv.asm	/^  rp = str;$/;"	d
s	obj/user/echosrv.asm	/^	s = src;$/;"	d
size_t	obj/user/echosrv.asm	/^size_t$/;"	l
ssize_t	obj/user/echosrv.asm	/^ssize_t$/;"	l
static	obj/user/echosrv.asm	/^static int$/;"	l
static	obj/user/echosrv.asm	/^static long long$/;"	l
static	obj/user/echosrv.asm	/^static ssize_t$/;"	l
static	obj/user/echosrv.asm	/^static unsigned long long$/;"	l
static	obj/user/echosrv.asm	/^static void$/;"	l
thisenv	obj/user/echosrv.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
u16_t	obj/user/echosrv.asm	/^u16_t$/;"	l
u32_t	obj/user/echosrv.asm	/^u32_t$/;"	l
unsigned	obj/user/echosrv.asm	/^unsigned int$/;"	l
va	obj/user/echosrv.asm	/^	va = fd2data(fd0);$/;"	d
val	obj/user/echosrv.asm	/^        val = (val * base) + (int)(c - '0');$/;"	d
val	obj/user/echosrv.asm	/^        val = (val << 4) | (int)(c + 10 - (islower(c) ? 'a' : 'A'));$/;"	d
val	obj/user/echosrv.asm	/^    val = 0;$/;"	d
void	obj/user/echosrv.asm	/^void *$/;"	l
void	obj/user/echosrv.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/echosrv.asm	/^void$/;"	l
width	obj/user/echosrv.asm	/^				width = 0;$/;"	d
width	obj/user/echosrv.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/echotest.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/echotest.asm	/^Disassembly of section .text:$/;"	l
_start	obj/user/echotest.asm	/^_start:$/;"	l
altflag	obj/user/echotest.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/echotest.asm	/^		altflag = 0;$/;"	d
ap	obj/user/echotest.asm	/^  ap = (u8_t *)&s_addr;$/;"	d
args_exist	obj/user/echotest.asm	/^args_exist:$/;"	l
base	obj/user/echotest.asm	/^			base = 10;$/;"	d
base	obj/user/echotest.asm	/^			base = 16;$/;"	d
base	obj/user/echotest.asm	/^			base = 8;$/;"	d
base	obj/user/echotest.asm	/^		base = 10;$/;"	d
base	obj/user/echotest.asm	/^        base = 16;$/;"	d
base	obj/user/echotest.asm	/^        base = 8;$/;"	d
base	obj/user/echotest.asm	/^    base = 10;$/;"	d
binaryname	obj/user/echotest.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/echotest.asm	/^	buf = vbuf;$/;"	d
c	obj/user/echotest.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/echotest.asm	/^        c = *++cp;$/;"	d
c	obj/user/echotest.asm	/^      c = *++cp;$/;"	d
c	obj/user/echotest.asm	/^  c = *cp;$/;"	d
ch	obj/user/echotest.asm	/^				ch = *fmt;$/;"	d
char	obj/user/echotest.asm	/^char *$/;"	l
clrflag	obj/user/echotest.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/echotest.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/echotest.asm	/^				color = 0;$/;"	d
color	obj/user/echotest.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/echotest.asm	/^	colorswitch:$/;"	l
const	obj/user/echotest.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/echotest.asm	/^const char *msg = "Hello world!\\n";$/;"	l
const	obj/user/echotest.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/echotest.asm	/^	d = dst;$/;"	d
default	obj/user/echotest.asm	/^		default:$/;"	l
dig	obj/user/echotest.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/echotest.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/echotest.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/echotest.asm	/^	dst_in = dst;$/;"	d
echolen	obj/user/echotest.asm	/^	echolen = strlen(msg);$/;"	d
envid_t	obj/user/echotest.asm	/^envid_t$/;"	l
err	obj/user/echotest.asm	/^				err = -err;$/;"	d
err	obj/user/echotest.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/echotest.asm	/^    err:$/;"	l
err	obj/user/echotest.asm	/^err:$/;"	l
err1	obj/user/echotest.asm	/^    err1:$/;"	l
err2	obj/user/echotest.asm	/^    err2:$/;"	l
err3	obj/user/echotest.asm	/^    err3:$/;"	l
fd	obj/user/echotest.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/echotest.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/echotest.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
i	obj/user/echotest.asm	/^    i = 0;$/;"	d
int	obj/user/echotest.asm	/^int $/;"	l
int	obj/user/echotest.asm	/^int color;$/;"	l
int	obj/user/echotest.asm	/^int$/;"	l
int32_t	obj/user/echotest.asm	/^int32_t$/;"	l
lflag	obj/user/echotest.asm	/^		lflag = 0;$/;"	d
long	obj/user/echotest.asm	/^long$/;"	l
m	obj/user/echotest.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/echotest.asm	/^		m = n - tot;$/;"	d
m	obj/user/echotest.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/echotest.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/echotest.asm	/^  n = pp - parts + 1;$/;"	d
newfd	obj/user/echotest.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/echotest.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/echotest.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/echotest.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/echotest.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/echotest.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/echotest.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/echotest.asm	/^		number:$/;"	l
nva	obj/user/echotest.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/echotest.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/echotest.asm	/^				p = "(null)";$/;"	d
p	obj/user/echotest.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/echotest.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/echotest.asm	/^			padc = '-';$/;"	d
padc	obj/user/echotest.asm	/^			padc = '0';$/;"	d
precision	obj/user/echotest.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/echotest.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/echotest.asm	/^		process_precision:$/;"	l
pte	obj/user/echotest.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/echotest.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/echotest.asm	/^			r = 0;$/;"	d
r	obj/user/echotest.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/echotest.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/echotest.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rem	obj/user/echotest.asm	/^      rem = *ap % (u8_t)10;$/;"	d
reswitch	obj/user/echotest.asm	/^	reswitch:$/;"	l
ret	obj/user/echotest.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/echotest.asm	/^	ret = dst;$/;"	d
rp	obj/user/echotest.asm	/^  rp = str;$/;"	d
s	obj/user/echotest.asm	/^	s = src;$/;"	d
size_t	obj/user/echotest.asm	/^size_t$/;"	l
ssize_t	obj/user/echotest.asm	/^ssize_t$/;"	l
static	obj/user/echotest.asm	/^static int$/;"	l
static	obj/user/echotest.asm	/^static long long$/;"	l
static	obj/user/echotest.asm	/^static ssize_t$/;"	l
static	obj/user/echotest.asm	/^static unsigned long long$/;"	l
static	obj/user/echotest.asm	/^static void$/;"	l
thisenv	obj/user/echotest.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
u16_t	obj/user/echotest.asm	/^u16_t$/;"	l
u32_t	obj/user/echotest.asm	/^u32_t$/;"	l
unsigned	obj/user/echotest.asm	/^unsigned int$/;"	l
va	obj/user/echotest.asm	/^	va = fd2data(fd0);$/;"	d
val	obj/user/echotest.asm	/^        val = (val * base) + (int)(c - '0');$/;"	d
val	obj/user/echotest.asm	/^        val = (val << 4) | (int)(c + 10 - (islower(c) ? 'a' : 'A'));$/;"	d
val	obj/user/echotest.asm	/^    val = 0;$/;"	d
void	obj/user/echotest.asm	/^void *$/;"	l
void	obj/user/echotest.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/echotest.asm	/^void umain(int argc, char **argv)$/;"	l
void	obj/user/echotest.asm	/^void$/;"	l
width	obj/user/echotest.asm	/^				width = 0;$/;"	d
width	obj/user/echotest.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/evilhello.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/evilhello.asm	/^Disassembly of section .text:$/;"	l
_start	obj/user/evilhello.asm	/^_start:$/;"	l
altflag	obj/user/evilhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/evilhello.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/evilhello.asm	/^args_exist:$/;"	l
base	obj/user/evilhello.asm	/^			base = 10;$/;"	d
base	obj/user/evilhello.asm	/^			base = 16;$/;"	d
base	obj/user/evilhello.asm	/^			base = 8;$/;"	d
base	obj/user/evilhello.asm	/^		base = 10;$/;"	d
binaryname	obj/user/evilhello.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/evilhello.asm	/^	buf = vbuf;$/;"	d
c	obj/user/evilhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/evilhello.asm	/^				ch = *fmt;$/;"	d
char	obj/user/evilhello.asm	/^char *$/;"	l
clrflag	obj/user/evilhello.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/evilhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/evilhello.asm	/^				color = 0;$/;"	d
color	obj/user/evilhello.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/evilhello.asm	/^	colorswitch:$/;"	l
const	obj/user/evilhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/evilhello.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/evilhello.asm	/^	d = dst;$/;"	d
default	obj/user/evilhello.asm	/^		default:$/;"	l
dig	obj/user/evilhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/evilhello.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/evilhello.asm	/^envid_t$/;"	l
err	obj/user/evilhello.asm	/^				err = -err;$/;"	d
err	obj/user/evilhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/evilhello.asm	/^    err:$/;"	l
err	obj/user/evilhello.asm	/^err:$/;"	l
err1	obj/user/evilhello.asm	/^    err1:$/;"	l
err2	obj/user/evilhello.asm	/^    err2:$/;"	l
err3	obj/user/evilhello.asm	/^    err3:$/;"	l
fd	obj/user/evilhello.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/evilhello.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/evilhello.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/evilhello.asm	/^int $/;"	l
int	obj/user/evilhello.asm	/^int color;$/;"	l
int	obj/user/evilhello.asm	/^int$/;"	l
int32_t	obj/user/evilhello.asm	/^int32_t$/;"	l
lflag	obj/user/evilhello.asm	/^		lflag = 0;$/;"	d
long	obj/user/evilhello.asm	/^long$/;"	l
m	obj/user/evilhello.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/evilhello.asm	/^		m = n - tot;$/;"	d
m	obj/user/evilhello.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/evilhello.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/evilhello.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/evilhello.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/evilhello.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/evilhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/evilhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/evilhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/evilhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/evilhello.asm	/^		number:$/;"	l
nva	obj/user/evilhello.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/evilhello.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/evilhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/evilhello.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/evilhello.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/evilhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/evilhello.asm	/^			padc = '0';$/;"	d
precision	obj/user/evilhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/evilhello.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/evilhello.asm	/^		process_precision:$/;"	l
pte	obj/user/evilhello.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/evilhello.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/evilhello.asm	/^			r = 0;$/;"	d
r	obj/user/evilhello.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/evilhello.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/evilhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/evilhello.asm	/^	reswitch:$/;"	l
ret	obj/user/evilhello.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/evilhello.asm	/^	ret = dst;$/;"	d
s	obj/user/evilhello.asm	/^	s = src;$/;"	d
size_t	obj/user/evilhello.asm	/^size_t$/;"	l
ssize_t	obj/user/evilhello.asm	/^ssize_t$/;"	l
static	obj/user/evilhello.asm	/^static int$/;"	l
static	obj/user/evilhello.asm	/^static long long$/;"	l
static	obj/user/evilhello.asm	/^static ssize_t$/;"	l
static	obj/user/evilhello.asm	/^static unsigned long long$/;"	l
static	obj/user/evilhello.asm	/^static void$/;"	l
thisenv	obj/user/evilhello.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/evilhello.asm	/^unsigned int$/;"	l
va	obj/user/evilhello.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/evilhello.asm	/^void *$/;"	l
void	obj/user/evilhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/evilhello.asm	/^void$/;"	l
width	obj/user/evilhello.asm	/^				width = 0;$/;"	d
width	obj/user/evilhello.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/fairness.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/fairness.asm	/^Disassembly of section .text:$/;"	l
_start	obj/user/fairness.asm	/^_start:$/;"	l
altflag	obj/user/fairness.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/fairness.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/fairness.asm	/^args_exist:$/;"	l
base	obj/user/fairness.asm	/^			base = 10;$/;"	d
base	obj/user/fairness.asm	/^			base = 16;$/;"	d
base	obj/user/fairness.asm	/^			base = 8;$/;"	d
base	obj/user/fairness.asm	/^		base = 10;$/;"	d
binaryname	obj/user/fairness.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/fairness.asm	/^	buf = vbuf;$/;"	d
c	obj/user/fairness.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/fairness.asm	/^				ch = *fmt;$/;"	d
char	obj/user/fairness.asm	/^char *$/;"	l
clrflag	obj/user/fairness.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/fairness.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/fairness.asm	/^				color = 0;$/;"	d
color	obj/user/fairness.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/fairness.asm	/^	colorswitch:$/;"	l
const	obj/user/fairness.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/fairness.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/fairness.asm	/^	d = dst;$/;"	d
default	obj/user/fairness.asm	/^		default:$/;"	l
dig	obj/user/fairness.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/fairness.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/fairness.asm	/^envid_t$/;"	l
err	obj/user/fairness.asm	/^				err = -err;$/;"	d
err	obj/user/fairness.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/fairness.asm	/^    err:$/;"	l
err	obj/user/fairness.asm	/^err:$/;"	l
err1	obj/user/fairness.asm	/^    err1:$/;"	l
err2	obj/user/fairness.asm	/^    err2:$/;"	l
err3	obj/user/fairness.asm	/^    err3:$/;"	l
fd	obj/user/fairness.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/fairness.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/fairness.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
id	obj/user/fairness.asm	/^	id = sys_getenvid();$/;"	d
int	obj/user/fairness.asm	/^int $/;"	l
int	obj/user/fairness.asm	/^int color;$/;"	l
int	obj/user/fairness.asm	/^int$/;"	l
int32_t	obj/user/fairness.asm	/^int32_t$/;"	l
lflag	obj/user/fairness.asm	/^		lflag = 0;$/;"	d
long	obj/user/fairness.asm	/^long$/;"	l
m	obj/user/fairness.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/fairness.asm	/^		m = n - tot;$/;"	d
m	obj/user/fairness.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/fairness.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/fairness.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/fairness.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/fairness.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/fairness.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/fairness.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/fairness.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/fairness.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/fairness.asm	/^		number:$/;"	l
nva	obj/user/fairness.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/fairness.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/fairness.asm	/^				p = "(null)";$/;"	d
p	obj/user/fairness.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/fairness.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/fairness.asm	/^			padc = '-';$/;"	d
padc	obj/user/fairness.asm	/^			padc = '0';$/;"	d
precision	obj/user/fairness.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/fairness.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/fairness.asm	/^		process_precision:$/;"	l
pte	obj/user/fairness.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/fairness.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/fairness.asm	/^			r = 0;$/;"	d
r	obj/user/fairness.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/fairness.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/fairness.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/fairness.asm	/^	reswitch:$/;"	l
ret	obj/user/fairness.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/fairness.asm	/^	ret = dst;$/;"	d
s	obj/user/fairness.asm	/^	s = src;$/;"	d
size_t	obj/user/fairness.asm	/^size_t$/;"	l
ssize_t	obj/user/fairness.asm	/^ssize_t$/;"	l
static	obj/user/fairness.asm	/^static int$/;"	l
static	obj/user/fairness.asm	/^static long long$/;"	l
static	obj/user/fairness.asm	/^static ssize_t$/;"	l
static	obj/user/fairness.asm	/^static unsigned long long$/;"	l
static	obj/user/fairness.asm	/^static void$/;"	l
thisenv	obj/user/fairness.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/fairness.asm	/^unsigned int$/;"	l
va	obj/user/fairness.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/fairness.asm	/^void *$/;"	l
void	obj/user/fairness.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/fairness.asm	/^void$/;"	l
width	obj/user/fairness.asm	/^				width = 0;$/;"	d
width	obj/user/fairness.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/faultalloc.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/faultalloc.asm	/^Disassembly of section .text:$/;"	l
_pgfault_handler	obj/user/faultalloc.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	obj/user/faultalloc.asm	/^_pgfault_upcall:$/;"	l
_start	obj/user/faultalloc.asm	/^_start:$/;"	l
altflag	obj/user/faultalloc.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultalloc.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/faultalloc.asm	/^args_exist:$/;"	l
base	obj/user/faultalloc.asm	/^			base = 10;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 16;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 8;$/;"	d
base	obj/user/faultalloc.asm	/^		base = 10;$/;"	d
binaryname	obj/user/faultalloc.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/faultalloc.asm	/^	buf = vbuf;$/;"	d
c	obj/user/faultalloc.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/faultalloc.asm	/^				ch = *fmt;$/;"	d
char	obj/user/faultalloc.asm	/^char *$/;"	l
clrflag	obj/user/faultalloc.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/faultalloc.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/faultalloc.asm	/^				color = 0;$/;"	d
color	obj/user/faultalloc.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/faultalloc.asm	/^	colorswitch:$/;"	l
const	obj/user/faultalloc.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultalloc.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/faultalloc.asm	/^	d = dst;$/;"	d
default	obj/user/faultalloc.asm	/^		default:$/;"	l
dig	obj/user/faultalloc.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/faultalloc.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/faultalloc.asm	/^envid_t$/;"	l
err	obj/user/faultalloc.asm	/^				err = -err;$/;"	d
err	obj/user/faultalloc.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultalloc.asm	/^    err:$/;"	l
err	obj/user/faultalloc.asm	/^err:$/;"	l
err1	obj/user/faultalloc.asm	/^    err1:$/;"	l
err2	obj/user/faultalloc.asm	/^    err2:$/;"	l
err3	obj/user/faultalloc.asm	/^    err3:$/;"	l
fd	obj/user/faultalloc.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultalloc.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/faultalloc.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/faultalloc.asm	/^int $/;"	l
int	obj/user/faultalloc.asm	/^int color;$/;"	l
int	obj/user/faultalloc.asm	/^int$/;"	l
int32_t	obj/user/faultalloc.asm	/^int32_t$/;"	l
lflag	obj/user/faultalloc.asm	/^		lflag = 0;$/;"	d
long	obj/user/faultalloc.asm	/^long$/;"	l
m	obj/user/faultalloc.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultalloc.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultalloc.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/faultalloc.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/faultalloc.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/faultalloc.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/faultalloc.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/faultalloc.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultalloc.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultalloc.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultalloc.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/faultalloc.asm	/^		number:$/;"	l
nva	obj/user/faultalloc.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/faultalloc.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/faultalloc.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultalloc.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultalloc.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/faultalloc.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultalloc.asm	/^			padc = '0';$/;"	d
precision	obj/user/faultalloc.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultalloc.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/faultalloc.asm	/^		process_precision:$/;"	l
pte	obj/user/faultalloc.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/faultalloc.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultalloc.asm	/^			r = 0;$/;"	d
r	obj/user/faultalloc.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultalloc.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/faultalloc.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/faultalloc.asm	/^	reswitch:$/;"	l
ret	obj/user/faultalloc.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultalloc.asm	/^	ret = dst;$/;"	d
s	obj/user/faultalloc.asm	/^	s = src;$/;"	d
size_t	obj/user/faultalloc.asm	/^size_t$/;"	l
ssize_t	obj/user/faultalloc.asm	/^ssize_t$/;"	l
static	obj/user/faultalloc.asm	/^static int$/;"	l
static	obj/user/faultalloc.asm	/^static long long$/;"	l
static	obj/user/faultalloc.asm	/^static ssize_t$/;"	l
static	obj/user/faultalloc.asm	/^static unsigned long long$/;"	l
static	obj/user/faultalloc.asm	/^static void$/;"	l
thisenv	obj/user/faultalloc.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/faultalloc.asm	/^unsigned int$/;"	l
va	obj/user/faultalloc.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/faultalloc.asm	/^void *$/;"	l
void	obj/user/faultalloc.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultalloc.asm	/^void$/;"	l
width	obj/user/faultalloc.asm	/^				width = 0;$/;"	d
width	obj/user/faultalloc.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/faultallocbad.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/faultallocbad.asm	/^Disassembly of section .text:$/;"	l
_pgfault_handler	obj/user/faultallocbad.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	obj/user/faultallocbad.asm	/^_pgfault_upcall:$/;"	l
_start	obj/user/faultallocbad.asm	/^_start:$/;"	l
altflag	obj/user/faultallocbad.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultallocbad.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/faultallocbad.asm	/^args_exist:$/;"	l
base	obj/user/faultallocbad.asm	/^			base = 10;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 16;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 8;$/;"	d
base	obj/user/faultallocbad.asm	/^		base = 10;$/;"	d
binaryname	obj/user/faultallocbad.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/faultallocbad.asm	/^	buf = vbuf;$/;"	d
c	obj/user/faultallocbad.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/faultallocbad.asm	/^				ch = *fmt;$/;"	d
char	obj/user/faultallocbad.asm	/^char *$/;"	l
clrflag	obj/user/faultallocbad.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/faultallocbad.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/faultallocbad.asm	/^				color = 0;$/;"	d
color	obj/user/faultallocbad.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/faultallocbad.asm	/^	colorswitch:$/;"	l
const	obj/user/faultallocbad.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultallocbad.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/faultallocbad.asm	/^	d = dst;$/;"	d
default	obj/user/faultallocbad.asm	/^		default:$/;"	l
dig	obj/user/faultallocbad.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/faultallocbad.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/faultallocbad.asm	/^envid_t$/;"	l
err	obj/user/faultallocbad.asm	/^				err = -err;$/;"	d
err	obj/user/faultallocbad.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultallocbad.asm	/^    err:$/;"	l
err	obj/user/faultallocbad.asm	/^err:$/;"	l
err1	obj/user/faultallocbad.asm	/^    err1:$/;"	l
err2	obj/user/faultallocbad.asm	/^    err2:$/;"	l
err3	obj/user/faultallocbad.asm	/^    err3:$/;"	l
fd	obj/user/faultallocbad.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultallocbad.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/faultallocbad.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/faultallocbad.asm	/^int $/;"	l
int	obj/user/faultallocbad.asm	/^int color;$/;"	l
int	obj/user/faultallocbad.asm	/^int$/;"	l
int32_t	obj/user/faultallocbad.asm	/^int32_t$/;"	l
lflag	obj/user/faultallocbad.asm	/^		lflag = 0;$/;"	d
long	obj/user/faultallocbad.asm	/^long$/;"	l
m	obj/user/faultallocbad.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultallocbad.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultallocbad.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/faultallocbad.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/faultallocbad.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/faultallocbad.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/faultallocbad.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/faultallocbad.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultallocbad.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultallocbad.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultallocbad.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/faultallocbad.asm	/^		number:$/;"	l
nva	obj/user/faultallocbad.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/faultallocbad.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/faultallocbad.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultallocbad.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultallocbad.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/faultallocbad.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultallocbad.asm	/^			padc = '0';$/;"	d
precision	obj/user/faultallocbad.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultallocbad.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/faultallocbad.asm	/^		process_precision:$/;"	l
pte	obj/user/faultallocbad.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/faultallocbad.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultallocbad.asm	/^			r = 0;$/;"	d
r	obj/user/faultallocbad.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultallocbad.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/faultallocbad.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/faultallocbad.asm	/^	reswitch:$/;"	l
ret	obj/user/faultallocbad.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultallocbad.asm	/^	ret = dst;$/;"	d
s	obj/user/faultallocbad.asm	/^	s = src;$/;"	d
size_t	obj/user/faultallocbad.asm	/^size_t$/;"	l
ssize_t	obj/user/faultallocbad.asm	/^ssize_t$/;"	l
static	obj/user/faultallocbad.asm	/^static int$/;"	l
static	obj/user/faultallocbad.asm	/^static long long$/;"	l
static	obj/user/faultallocbad.asm	/^static ssize_t$/;"	l
static	obj/user/faultallocbad.asm	/^static unsigned long long$/;"	l
static	obj/user/faultallocbad.asm	/^static void$/;"	l
thisenv	obj/user/faultallocbad.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/faultallocbad.asm	/^unsigned int$/;"	l
va	obj/user/faultallocbad.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/faultallocbad.asm	/^void *$/;"	l
void	obj/user/faultallocbad.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultallocbad.asm	/^void$/;"	l
width	obj/user/faultallocbad.asm	/^				width = 0;$/;"	d
width	obj/user/faultallocbad.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/faultbadhandler.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/faultbadhandler.asm	/^Disassembly of section .text:$/;"	l
_start	obj/user/faultbadhandler.asm	/^_start:$/;"	l
altflag	obj/user/faultbadhandler.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultbadhandler.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/faultbadhandler.asm	/^args_exist:$/;"	l
base	obj/user/faultbadhandler.asm	/^			base = 10;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 16;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 8;$/;"	d
base	obj/user/faultbadhandler.asm	/^		base = 10;$/;"	d
binaryname	obj/user/faultbadhandler.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/faultbadhandler.asm	/^	buf = vbuf;$/;"	d
c	obj/user/faultbadhandler.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/faultbadhandler.asm	/^				ch = *fmt;$/;"	d
char	obj/user/faultbadhandler.asm	/^char *$/;"	l
clrflag	obj/user/faultbadhandler.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/faultbadhandler.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/faultbadhandler.asm	/^				color = 0;$/;"	d
color	obj/user/faultbadhandler.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/faultbadhandler.asm	/^	colorswitch:$/;"	l
const	obj/user/faultbadhandler.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultbadhandler.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/faultbadhandler.asm	/^	d = dst;$/;"	d
default	obj/user/faultbadhandler.asm	/^		default:$/;"	l
dig	obj/user/faultbadhandler.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/faultbadhandler.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/faultbadhandler.asm	/^envid_t$/;"	l
err	obj/user/faultbadhandler.asm	/^				err = -err;$/;"	d
err	obj/user/faultbadhandler.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultbadhandler.asm	/^    err:$/;"	l
err	obj/user/faultbadhandler.asm	/^err:$/;"	l
err1	obj/user/faultbadhandler.asm	/^    err1:$/;"	l
err2	obj/user/faultbadhandler.asm	/^    err2:$/;"	l
err3	obj/user/faultbadhandler.asm	/^    err3:$/;"	l
fd	obj/user/faultbadhandler.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultbadhandler.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/faultbadhandler.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/faultbadhandler.asm	/^int $/;"	l
int	obj/user/faultbadhandler.asm	/^int color;$/;"	l
int	obj/user/faultbadhandler.asm	/^int$/;"	l
int32_t	obj/user/faultbadhandler.asm	/^int32_t$/;"	l
lflag	obj/user/faultbadhandler.asm	/^		lflag = 0;$/;"	d
long	obj/user/faultbadhandler.asm	/^long$/;"	l
m	obj/user/faultbadhandler.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultbadhandler.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultbadhandler.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/faultbadhandler.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/faultbadhandler.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/faultbadhandler.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/faultbadhandler.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/faultbadhandler.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/faultbadhandler.asm	/^		number:$/;"	l
nva	obj/user/faultbadhandler.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/faultbadhandler.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/faultbadhandler.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultbadhandler.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultbadhandler.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/faultbadhandler.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultbadhandler.asm	/^			padc = '0';$/;"	d
precision	obj/user/faultbadhandler.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultbadhandler.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/faultbadhandler.asm	/^		process_precision:$/;"	l
pte	obj/user/faultbadhandler.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/faultbadhandler.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultbadhandler.asm	/^			r = 0;$/;"	d
r	obj/user/faultbadhandler.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultbadhandler.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/faultbadhandler.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/faultbadhandler.asm	/^	reswitch:$/;"	l
ret	obj/user/faultbadhandler.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultbadhandler.asm	/^	ret = dst;$/;"	d
s	obj/user/faultbadhandler.asm	/^	s = src;$/;"	d
size_t	obj/user/faultbadhandler.asm	/^size_t$/;"	l
ssize_t	obj/user/faultbadhandler.asm	/^ssize_t$/;"	l
static	obj/user/faultbadhandler.asm	/^static int$/;"	l
static	obj/user/faultbadhandler.asm	/^static long long$/;"	l
static	obj/user/faultbadhandler.asm	/^static ssize_t$/;"	l
static	obj/user/faultbadhandler.asm	/^static unsigned long long$/;"	l
static	obj/user/faultbadhandler.asm	/^static void$/;"	l
thisenv	obj/user/faultbadhandler.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/faultbadhandler.asm	/^unsigned int$/;"	l
va	obj/user/faultbadhandler.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/faultbadhandler.asm	/^void *$/;"	l
void	obj/user/faultbadhandler.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultbadhandler.asm	/^void$/;"	l
width	obj/user/faultbadhandler.asm	/^				width = 0;$/;"	d
width	obj/user/faultbadhandler.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/faultdie.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/faultdie.asm	/^Disassembly of section .text:$/;"	l
_pgfault_handler	obj/user/faultdie.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	obj/user/faultdie.asm	/^_pgfault_upcall:$/;"	l
_start	obj/user/faultdie.asm	/^_start:$/;"	l
altflag	obj/user/faultdie.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultdie.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/faultdie.asm	/^args_exist:$/;"	l
base	obj/user/faultdie.asm	/^			base = 10;$/;"	d
base	obj/user/faultdie.asm	/^			base = 16;$/;"	d
base	obj/user/faultdie.asm	/^			base = 8;$/;"	d
base	obj/user/faultdie.asm	/^		base = 10;$/;"	d
binaryname	obj/user/faultdie.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/faultdie.asm	/^	buf = vbuf;$/;"	d
c	obj/user/faultdie.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/faultdie.asm	/^				ch = *fmt;$/;"	d
char	obj/user/faultdie.asm	/^char *$/;"	l
clrflag	obj/user/faultdie.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/faultdie.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/faultdie.asm	/^				color = 0;$/;"	d
color	obj/user/faultdie.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/faultdie.asm	/^	colorswitch:$/;"	l
const	obj/user/faultdie.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultdie.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/faultdie.asm	/^	d = dst;$/;"	d
default	obj/user/faultdie.asm	/^		default:$/;"	l
dig	obj/user/faultdie.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/faultdie.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/faultdie.asm	/^envid_t$/;"	l
err	obj/user/faultdie.asm	/^				err = -err;$/;"	d
err	obj/user/faultdie.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultdie.asm	/^    err:$/;"	l
err	obj/user/faultdie.asm	/^err:$/;"	l
err1	obj/user/faultdie.asm	/^    err1:$/;"	l
err2	obj/user/faultdie.asm	/^    err2:$/;"	l
err3	obj/user/faultdie.asm	/^    err3:$/;"	l
fd	obj/user/faultdie.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultdie.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/faultdie.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/faultdie.asm	/^int $/;"	l
int	obj/user/faultdie.asm	/^int color;$/;"	l
int	obj/user/faultdie.asm	/^int$/;"	l
int32_t	obj/user/faultdie.asm	/^int32_t$/;"	l
lflag	obj/user/faultdie.asm	/^		lflag = 0;$/;"	d
long	obj/user/faultdie.asm	/^long$/;"	l
m	obj/user/faultdie.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultdie.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultdie.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/faultdie.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/faultdie.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/faultdie.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/faultdie.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/faultdie.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultdie.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultdie.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultdie.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/faultdie.asm	/^		number:$/;"	l
nva	obj/user/faultdie.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/faultdie.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/faultdie.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultdie.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultdie.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/faultdie.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultdie.asm	/^			padc = '0';$/;"	d
precision	obj/user/faultdie.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultdie.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/faultdie.asm	/^		process_precision:$/;"	l
pte	obj/user/faultdie.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/faultdie.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultdie.asm	/^			r = 0;$/;"	d
r	obj/user/faultdie.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultdie.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/faultdie.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/faultdie.asm	/^	reswitch:$/;"	l
ret	obj/user/faultdie.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultdie.asm	/^	ret = dst;$/;"	d
s	obj/user/faultdie.asm	/^	s = src;$/;"	d
size_t	obj/user/faultdie.asm	/^size_t$/;"	l
ssize_t	obj/user/faultdie.asm	/^ssize_t$/;"	l
static	obj/user/faultdie.asm	/^static int$/;"	l
static	obj/user/faultdie.asm	/^static long long$/;"	l
static	obj/user/faultdie.asm	/^static ssize_t$/;"	l
static	obj/user/faultdie.asm	/^static unsigned long long$/;"	l
static	obj/user/faultdie.asm	/^static void$/;"	l
thisenv	obj/user/faultdie.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/faultdie.asm	/^unsigned int$/;"	l
va	obj/user/faultdie.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/faultdie.asm	/^void *$/;"	l
void	obj/user/faultdie.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultdie.asm	/^void$/;"	l
width	obj/user/faultdie.asm	/^				width = 0;$/;"	d
width	obj/user/faultdie.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/faultevilhandler.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/faultevilhandler.asm	/^Disassembly of section .text:$/;"	l
_start	obj/user/faultevilhandler.asm	/^_start:$/;"	l
altflag	obj/user/faultevilhandler.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultevilhandler.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/faultevilhandler.asm	/^args_exist:$/;"	l
base	obj/user/faultevilhandler.asm	/^			base = 10;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 16;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 8;$/;"	d
base	obj/user/faultevilhandler.asm	/^		base = 10;$/;"	d
binaryname	obj/user/faultevilhandler.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/faultevilhandler.asm	/^	buf = vbuf;$/;"	d
c	obj/user/faultevilhandler.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/faultevilhandler.asm	/^				ch = *fmt;$/;"	d
char	obj/user/faultevilhandler.asm	/^char *$/;"	l
clrflag	obj/user/faultevilhandler.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/faultevilhandler.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/faultevilhandler.asm	/^				color = 0;$/;"	d
color	obj/user/faultevilhandler.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/faultevilhandler.asm	/^	colorswitch:$/;"	l
const	obj/user/faultevilhandler.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultevilhandler.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/faultevilhandler.asm	/^	d = dst;$/;"	d
default	obj/user/faultevilhandler.asm	/^		default:$/;"	l
dig	obj/user/faultevilhandler.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/faultevilhandler.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/faultevilhandler.asm	/^envid_t$/;"	l
err	obj/user/faultevilhandler.asm	/^				err = -err;$/;"	d
err	obj/user/faultevilhandler.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultevilhandler.asm	/^    err:$/;"	l
err	obj/user/faultevilhandler.asm	/^err:$/;"	l
err1	obj/user/faultevilhandler.asm	/^    err1:$/;"	l
err2	obj/user/faultevilhandler.asm	/^    err2:$/;"	l
err3	obj/user/faultevilhandler.asm	/^    err3:$/;"	l
fd	obj/user/faultevilhandler.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultevilhandler.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/faultevilhandler.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/faultevilhandler.asm	/^int $/;"	l
int	obj/user/faultevilhandler.asm	/^int color;$/;"	l
int	obj/user/faultevilhandler.asm	/^int$/;"	l
int32_t	obj/user/faultevilhandler.asm	/^int32_t$/;"	l
lflag	obj/user/faultevilhandler.asm	/^		lflag = 0;$/;"	d
long	obj/user/faultevilhandler.asm	/^long$/;"	l
m	obj/user/faultevilhandler.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultevilhandler.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultevilhandler.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/faultevilhandler.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/faultevilhandler.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/faultevilhandler.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/faultevilhandler.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/faultevilhandler.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/faultevilhandler.asm	/^		number:$/;"	l
nva	obj/user/faultevilhandler.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/faultevilhandler.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/faultevilhandler.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultevilhandler.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultevilhandler.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/faultevilhandler.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultevilhandler.asm	/^			padc = '0';$/;"	d
precision	obj/user/faultevilhandler.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultevilhandler.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/faultevilhandler.asm	/^		process_precision:$/;"	l
pte	obj/user/faultevilhandler.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/faultevilhandler.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultevilhandler.asm	/^			r = 0;$/;"	d
r	obj/user/faultevilhandler.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultevilhandler.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/faultevilhandler.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/faultevilhandler.asm	/^	reswitch:$/;"	l
ret	obj/user/faultevilhandler.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultevilhandler.asm	/^	ret = dst;$/;"	d
s	obj/user/faultevilhandler.asm	/^	s = src;$/;"	d
size_t	obj/user/faultevilhandler.asm	/^size_t$/;"	l
ssize_t	obj/user/faultevilhandler.asm	/^ssize_t$/;"	l
static	obj/user/faultevilhandler.asm	/^static int$/;"	l
static	obj/user/faultevilhandler.asm	/^static long long$/;"	l
static	obj/user/faultevilhandler.asm	/^static ssize_t$/;"	l
static	obj/user/faultevilhandler.asm	/^static unsigned long long$/;"	l
static	obj/user/faultevilhandler.asm	/^static void$/;"	l
thisenv	obj/user/faultevilhandler.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/faultevilhandler.asm	/^unsigned int$/;"	l
va	obj/user/faultevilhandler.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/faultevilhandler.asm	/^void *$/;"	l
void	obj/user/faultevilhandler.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultevilhandler.asm	/^void$/;"	l
width	obj/user/faultevilhandler.asm	/^				width = 0;$/;"	d
width	obj/user/faultevilhandler.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/faultnostack.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/faultnostack.asm	/^Disassembly of section .text:$/;"	l
_pgfault_handler	obj/user/faultnostack.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	obj/user/faultnostack.asm	/^_pgfault_upcall:$/;"	l
_start	obj/user/faultnostack.asm	/^_start:$/;"	l
altflag	obj/user/faultnostack.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultnostack.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/faultnostack.asm	/^args_exist:$/;"	l
base	obj/user/faultnostack.asm	/^			base = 10;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 16;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 8;$/;"	d
base	obj/user/faultnostack.asm	/^		base = 10;$/;"	d
binaryname	obj/user/faultnostack.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/faultnostack.asm	/^	buf = vbuf;$/;"	d
c	obj/user/faultnostack.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/faultnostack.asm	/^				ch = *fmt;$/;"	d
char	obj/user/faultnostack.asm	/^char *$/;"	l
clrflag	obj/user/faultnostack.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/faultnostack.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/faultnostack.asm	/^				color = 0;$/;"	d
color	obj/user/faultnostack.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/faultnostack.asm	/^	colorswitch:$/;"	l
const	obj/user/faultnostack.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultnostack.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/faultnostack.asm	/^	d = dst;$/;"	d
default	obj/user/faultnostack.asm	/^		default:$/;"	l
dig	obj/user/faultnostack.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/faultnostack.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/faultnostack.asm	/^envid_t$/;"	l
err	obj/user/faultnostack.asm	/^				err = -err;$/;"	d
err	obj/user/faultnostack.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultnostack.asm	/^    err:$/;"	l
err	obj/user/faultnostack.asm	/^err:$/;"	l
err1	obj/user/faultnostack.asm	/^    err1:$/;"	l
err2	obj/user/faultnostack.asm	/^    err2:$/;"	l
err3	obj/user/faultnostack.asm	/^    err3:$/;"	l
fd	obj/user/faultnostack.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultnostack.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/faultnostack.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/faultnostack.asm	/^int $/;"	l
int	obj/user/faultnostack.asm	/^int color;$/;"	l
int	obj/user/faultnostack.asm	/^int$/;"	l
int32_t	obj/user/faultnostack.asm	/^int32_t$/;"	l
lflag	obj/user/faultnostack.asm	/^		lflag = 0;$/;"	d
long	obj/user/faultnostack.asm	/^long$/;"	l
m	obj/user/faultnostack.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultnostack.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultnostack.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/faultnostack.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/faultnostack.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/faultnostack.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/faultnostack.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/faultnostack.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultnostack.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultnostack.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultnostack.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/faultnostack.asm	/^		number:$/;"	l
nva	obj/user/faultnostack.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/faultnostack.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/faultnostack.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultnostack.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultnostack.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/faultnostack.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultnostack.asm	/^			padc = '0';$/;"	d
precision	obj/user/faultnostack.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultnostack.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/faultnostack.asm	/^		process_precision:$/;"	l
pte	obj/user/faultnostack.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/faultnostack.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultnostack.asm	/^			r = 0;$/;"	d
r	obj/user/faultnostack.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultnostack.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/faultnostack.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/faultnostack.asm	/^	reswitch:$/;"	l
ret	obj/user/faultnostack.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultnostack.asm	/^	ret = dst;$/;"	d
s	obj/user/faultnostack.asm	/^	s = src;$/;"	d
size_t	obj/user/faultnostack.asm	/^size_t$/;"	l
ssize_t	obj/user/faultnostack.asm	/^ssize_t$/;"	l
static	obj/user/faultnostack.asm	/^static int$/;"	l
static	obj/user/faultnostack.asm	/^static long long$/;"	l
static	obj/user/faultnostack.asm	/^static ssize_t$/;"	l
static	obj/user/faultnostack.asm	/^static unsigned long long$/;"	l
static	obj/user/faultnostack.asm	/^static void$/;"	l
thisenv	obj/user/faultnostack.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/faultnostack.asm	/^unsigned int$/;"	l
va	obj/user/faultnostack.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/faultnostack.asm	/^void *$/;"	l
void	obj/user/faultnostack.asm	/^void _pgfault_upcall();$/;"	l
void	obj/user/faultnostack.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultnostack.asm	/^void$/;"	l
width	obj/user/faultnostack.asm	/^				width = 0;$/;"	d
width	obj/user/faultnostack.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/faultread.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/faultread.asm	/^Disassembly of section .text:$/;"	l
_start	obj/user/faultread.asm	/^_start:$/;"	l
altflag	obj/user/faultread.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultread.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/faultread.asm	/^args_exist:$/;"	l
base	obj/user/faultread.asm	/^			base = 10;$/;"	d
base	obj/user/faultread.asm	/^			base = 16;$/;"	d
base	obj/user/faultread.asm	/^			base = 8;$/;"	d
base	obj/user/faultread.asm	/^		base = 10;$/;"	d
binaryname	obj/user/faultread.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/faultread.asm	/^	buf = vbuf;$/;"	d
c	obj/user/faultread.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/faultread.asm	/^				ch = *fmt;$/;"	d
char	obj/user/faultread.asm	/^char *$/;"	l
clrflag	obj/user/faultread.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/faultread.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/faultread.asm	/^				color = 0;$/;"	d
color	obj/user/faultread.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/faultread.asm	/^	colorswitch:$/;"	l
const	obj/user/faultread.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultread.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/faultread.asm	/^	d = dst;$/;"	d
default	obj/user/faultread.asm	/^		default:$/;"	l
dig	obj/user/faultread.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/faultread.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/faultread.asm	/^envid_t$/;"	l
err	obj/user/faultread.asm	/^				err = -err;$/;"	d
err	obj/user/faultread.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultread.asm	/^    err:$/;"	l
err	obj/user/faultread.asm	/^err:$/;"	l
err1	obj/user/faultread.asm	/^    err1:$/;"	l
err2	obj/user/faultread.asm	/^    err2:$/;"	l
err3	obj/user/faultread.asm	/^    err3:$/;"	l
fd	obj/user/faultread.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultread.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/faultread.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/faultread.asm	/^int $/;"	l
int	obj/user/faultread.asm	/^int color;$/;"	l
int	obj/user/faultread.asm	/^int$/;"	l
int32_t	obj/user/faultread.asm	/^int32_t$/;"	l
lflag	obj/user/faultread.asm	/^		lflag = 0;$/;"	d
long	obj/user/faultread.asm	/^long$/;"	l
m	obj/user/faultread.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultread.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultread.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/faultread.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/faultread.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/faultread.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/faultread.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/faultread.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultread.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultread.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/faultread.asm	/^		number:$/;"	l
nva	obj/user/faultread.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/faultread.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/faultread.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultread.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultread.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/faultread.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultread.asm	/^			padc = '0';$/;"	d
precision	obj/user/faultread.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultread.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/faultread.asm	/^		process_precision:$/;"	l
pte	obj/user/faultread.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/faultread.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultread.asm	/^			r = 0;$/;"	d
r	obj/user/faultread.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultread.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/faultread.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/faultread.asm	/^	reswitch:$/;"	l
ret	obj/user/faultread.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultread.asm	/^	ret = dst;$/;"	d
s	obj/user/faultread.asm	/^	s = src;$/;"	d
size_t	obj/user/faultread.asm	/^size_t$/;"	l
ssize_t	obj/user/faultread.asm	/^ssize_t$/;"	l
static	obj/user/faultread.asm	/^static int$/;"	l
static	obj/user/faultread.asm	/^static long long$/;"	l
static	obj/user/faultread.asm	/^static ssize_t$/;"	l
static	obj/user/faultread.asm	/^static unsigned long long$/;"	l
static	obj/user/faultread.asm	/^static void$/;"	l
thisenv	obj/user/faultread.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/faultread.asm	/^unsigned int$/;"	l
va	obj/user/faultread.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/faultread.asm	/^void *$/;"	l
void	obj/user/faultread.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultread.asm	/^void$/;"	l
width	obj/user/faultread.asm	/^				width = 0;$/;"	d
width	obj/user/faultread.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/faultreadkernel.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/faultreadkernel.asm	/^Disassembly of section .text:$/;"	l
_start	obj/user/faultreadkernel.asm	/^_start:$/;"	l
altflag	obj/user/faultreadkernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/faultreadkernel.asm	/^args_exist:$/;"	l
base	obj/user/faultreadkernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 8;$/;"	d
base	obj/user/faultreadkernel.asm	/^		base = 10;$/;"	d
binaryname	obj/user/faultreadkernel.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/faultreadkernel.asm	/^	buf = vbuf;$/;"	d
c	obj/user/faultreadkernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/faultreadkernel.asm	/^				ch = *fmt;$/;"	d
char	obj/user/faultreadkernel.asm	/^char *$/;"	l
clrflag	obj/user/faultreadkernel.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/faultreadkernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/faultreadkernel.asm	/^				color = 0;$/;"	d
color	obj/user/faultreadkernel.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/faultreadkernel.asm	/^	colorswitch:$/;"	l
const	obj/user/faultreadkernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultreadkernel.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/faultreadkernel.asm	/^	d = dst;$/;"	d
default	obj/user/faultreadkernel.asm	/^		default:$/;"	l
dig	obj/user/faultreadkernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/faultreadkernel.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/faultreadkernel.asm	/^envid_t$/;"	l
err	obj/user/faultreadkernel.asm	/^				err = -err;$/;"	d
err	obj/user/faultreadkernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultreadkernel.asm	/^    err:$/;"	l
err	obj/user/faultreadkernel.asm	/^err:$/;"	l
err1	obj/user/faultreadkernel.asm	/^    err1:$/;"	l
err2	obj/user/faultreadkernel.asm	/^    err2:$/;"	l
err3	obj/user/faultreadkernel.asm	/^    err3:$/;"	l
fd	obj/user/faultreadkernel.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultreadkernel.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/faultreadkernel.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/faultreadkernel.asm	/^int $/;"	l
int	obj/user/faultreadkernel.asm	/^int color;$/;"	l
int	obj/user/faultreadkernel.asm	/^int$/;"	l
int32_t	obj/user/faultreadkernel.asm	/^int32_t$/;"	l
lflag	obj/user/faultreadkernel.asm	/^		lflag = 0;$/;"	d
long	obj/user/faultreadkernel.asm	/^long$/;"	l
m	obj/user/faultreadkernel.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultreadkernel.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultreadkernel.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/faultreadkernel.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/faultreadkernel.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/faultreadkernel.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/faultreadkernel.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/faultreadkernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/faultreadkernel.asm	/^		number:$/;"	l
nva	obj/user/faultreadkernel.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/faultreadkernel.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/faultreadkernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultreadkernel.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultreadkernel.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/faultreadkernel.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultreadkernel.asm	/^			padc = '0';$/;"	d
precision	obj/user/faultreadkernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultreadkernel.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/faultreadkernel.asm	/^		process_precision:$/;"	l
pte	obj/user/faultreadkernel.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/faultreadkernel.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultreadkernel.asm	/^			r = 0;$/;"	d
r	obj/user/faultreadkernel.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultreadkernel.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/faultreadkernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/faultreadkernel.asm	/^	reswitch:$/;"	l
ret	obj/user/faultreadkernel.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultreadkernel.asm	/^	ret = dst;$/;"	d
s	obj/user/faultreadkernel.asm	/^	s = src;$/;"	d
size_t	obj/user/faultreadkernel.asm	/^size_t$/;"	l
ssize_t	obj/user/faultreadkernel.asm	/^ssize_t$/;"	l
static	obj/user/faultreadkernel.asm	/^static int$/;"	l
static	obj/user/faultreadkernel.asm	/^static long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static ssize_t$/;"	l
static	obj/user/faultreadkernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static void$/;"	l
thisenv	obj/user/faultreadkernel.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/faultreadkernel.asm	/^unsigned int$/;"	l
va	obj/user/faultreadkernel.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/faultreadkernel.asm	/^void *$/;"	l
void	obj/user/faultreadkernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultreadkernel.asm	/^void$/;"	l
width	obj/user/faultreadkernel.asm	/^				width = 0;$/;"	d
width	obj/user/faultreadkernel.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/faultregs.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/faultregs.asm	/^Disassembly of section .text:$/;"	l
_pgfault_handler	obj/user/faultregs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	obj/user/faultregs.asm	/^_pgfault_upcall:$/;"	l
_start	obj/user/faultregs.asm	/^_start:$/;"	l
altflag	obj/user/faultregs.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultregs.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/faultregs.asm	/^args_exist:$/;"	l
base	obj/user/faultregs.asm	/^			base = 10;$/;"	d
base	obj/user/faultregs.asm	/^			base = 16;$/;"	d
base	obj/user/faultregs.asm	/^			base = 8;$/;"	d
base	obj/user/faultregs.asm	/^		base = 10;$/;"	d
binaryname	obj/user/faultregs.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/faultregs.asm	/^	buf = vbuf;$/;"	d
c	obj/user/faultregs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/faultregs.asm	/^				ch = *fmt;$/;"	d
char	obj/user/faultregs.asm	/^char *$/;"	l
clrflag	obj/user/faultregs.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/faultregs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/faultregs.asm	/^				color = 0;$/;"	d
color	obj/user/faultregs.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/faultregs.asm	/^	colorswitch:$/;"	l
const	obj/user/faultregs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultregs.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/faultregs.asm	/^	d = dst;$/;"	d
default	obj/user/faultregs.asm	/^		default:$/;"	l
dig	obj/user/faultregs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/faultregs.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/faultregs.asm	/^envid_t$/;"	l
err	obj/user/faultregs.asm	/^				err = -err;$/;"	d
err	obj/user/faultregs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultregs.asm	/^    err:$/;"	l
err	obj/user/faultregs.asm	/^err:$/;"	l
err1	obj/user/faultregs.asm	/^    err1:$/;"	l
err2	obj/user/faultregs.asm	/^    err2:$/;"	l
err3	obj/user/faultregs.asm	/^    err3:$/;"	l
fd	obj/user/faultregs.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultregs.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/faultregs.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/faultregs.asm	/^int $/;"	l
int	obj/user/faultregs.asm	/^int color;$/;"	l
int	obj/user/faultregs.asm	/^int$/;"	l
int32_t	obj/user/faultregs.asm	/^int32_t$/;"	l
lflag	obj/user/faultregs.asm	/^		lflag = 0;$/;"	d
long	obj/user/faultregs.asm	/^long$/;"	l
m	obj/user/faultregs.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultregs.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultregs.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
mismatch	obj/user/faultregs.asm	/^			mismatch = 1;					\\$/;"	d
n	obj/user/faultregs.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/faultregs.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/faultregs.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/faultregs.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/faultregs.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultregs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultregs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultregs.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/faultregs.asm	/^		number:$/;"	l
nva	obj/user/faultregs.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/faultregs.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/faultregs.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultregs.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultregs.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/faultregs.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultregs.asm	/^			padc = '0';$/;"	d
precision	obj/user/faultregs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultregs.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/faultregs.asm	/^		process_precision:$/;"	l
pte	obj/user/faultregs.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/faultregs.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultregs.asm	/^			r = 0;$/;"	d
r	obj/user/faultregs.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultregs.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/faultregs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/faultregs.asm	/^	reswitch:$/;"	l
ret	obj/user/faultregs.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultregs.asm	/^	ret = dst;$/;"	d
s	obj/user/faultregs.asm	/^	s = src;$/;"	d
size_t	obj/user/faultregs.asm	/^size_t$/;"	l
ssize_t	obj/user/faultregs.asm	/^ssize_t$/;"	l
static	obj/user/faultregs.asm	/^static int$/;"	l
static	obj/user/faultregs.asm	/^static long long$/;"	l
static	obj/user/faultregs.asm	/^static ssize_t$/;"	l
static	obj/user/faultregs.asm	/^static struct regs before, during, after;$/;"	t
static	obj/user/faultregs.asm	/^static unsigned long long$/;"	l
static	obj/user/faultregs.asm	/^static void$/;"	l
thisenv	obj/user/faultregs.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/faultregs.asm	/^unsigned int$/;"	l
va	obj/user/faultregs.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/faultregs.asm	/^void *$/;"	l
void	obj/user/faultregs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultregs.asm	/^void$/;"	l
width	obj/user/faultregs.asm	/^				width = 0;$/;"	d
width	obj/user/faultregs.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/faultwrite.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/faultwrite.asm	/^Disassembly of section .text:$/;"	l
_start	obj/user/faultwrite.asm	/^_start:$/;"	l
altflag	obj/user/faultwrite.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwrite.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/faultwrite.asm	/^args_exist:$/;"	l
base	obj/user/faultwrite.asm	/^			base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 16;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 8;$/;"	d
base	obj/user/faultwrite.asm	/^		base = 10;$/;"	d
binaryname	obj/user/faultwrite.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/faultwrite.asm	/^	buf = vbuf;$/;"	d
c	obj/user/faultwrite.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/faultwrite.asm	/^				ch = *fmt;$/;"	d
char	obj/user/faultwrite.asm	/^char *$/;"	l
clrflag	obj/user/faultwrite.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/faultwrite.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/faultwrite.asm	/^				color = 0;$/;"	d
color	obj/user/faultwrite.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/faultwrite.asm	/^	colorswitch:$/;"	l
const	obj/user/faultwrite.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultwrite.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/faultwrite.asm	/^	d = dst;$/;"	d
default	obj/user/faultwrite.asm	/^		default:$/;"	l
dig	obj/user/faultwrite.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/faultwrite.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/faultwrite.asm	/^envid_t$/;"	l
err	obj/user/faultwrite.asm	/^				err = -err;$/;"	d
err	obj/user/faultwrite.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwrite.asm	/^    err:$/;"	l
err	obj/user/faultwrite.asm	/^err:$/;"	l
err1	obj/user/faultwrite.asm	/^    err1:$/;"	l
err2	obj/user/faultwrite.asm	/^    err2:$/;"	l
err3	obj/user/faultwrite.asm	/^    err3:$/;"	l
fd	obj/user/faultwrite.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultwrite.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/faultwrite.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/faultwrite.asm	/^int $/;"	l
int	obj/user/faultwrite.asm	/^int color;$/;"	l
int	obj/user/faultwrite.asm	/^int$/;"	l
int32_t	obj/user/faultwrite.asm	/^int32_t$/;"	l
lflag	obj/user/faultwrite.asm	/^		lflag = 0;$/;"	d
long	obj/user/faultwrite.asm	/^long$/;"	l
m	obj/user/faultwrite.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultwrite.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultwrite.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/faultwrite.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/faultwrite.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/faultwrite.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/faultwrite.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/faultwrite.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwrite.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwrite.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultwrite.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/faultwrite.asm	/^		number:$/;"	l
nva	obj/user/faultwrite.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/faultwrite.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/faultwrite.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwrite.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultwrite.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/faultwrite.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultwrite.asm	/^			padc = '0';$/;"	d
precision	obj/user/faultwrite.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwrite.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/faultwrite.asm	/^		process_precision:$/;"	l
pte	obj/user/faultwrite.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/faultwrite.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultwrite.asm	/^			r = 0;$/;"	d
r	obj/user/faultwrite.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultwrite.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/faultwrite.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/faultwrite.asm	/^	reswitch:$/;"	l
ret	obj/user/faultwrite.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultwrite.asm	/^	ret = dst;$/;"	d
s	obj/user/faultwrite.asm	/^	s = src;$/;"	d
size_t	obj/user/faultwrite.asm	/^size_t$/;"	l
ssize_t	obj/user/faultwrite.asm	/^ssize_t$/;"	l
static	obj/user/faultwrite.asm	/^static int$/;"	l
static	obj/user/faultwrite.asm	/^static long long$/;"	l
static	obj/user/faultwrite.asm	/^static ssize_t$/;"	l
static	obj/user/faultwrite.asm	/^static unsigned long long$/;"	l
static	obj/user/faultwrite.asm	/^static void$/;"	l
thisenv	obj/user/faultwrite.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/faultwrite.asm	/^unsigned int$/;"	l
va	obj/user/faultwrite.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/faultwrite.asm	/^void *$/;"	l
void	obj/user/faultwrite.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultwrite.asm	/^void$/;"	l
width	obj/user/faultwrite.asm	/^				width = 0;$/;"	d
width	obj/user/faultwrite.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/faultwritekernel.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/faultwritekernel.asm	/^Disassembly of section .text:$/;"	l
_start	obj/user/faultwritekernel.asm	/^_start:$/;"	l
altflag	obj/user/faultwritekernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/faultwritekernel.asm	/^args_exist:$/;"	l
base	obj/user/faultwritekernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 8;$/;"	d
base	obj/user/faultwritekernel.asm	/^		base = 10;$/;"	d
binaryname	obj/user/faultwritekernel.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/faultwritekernel.asm	/^	buf = vbuf;$/;"	d
c	obj/user/faultwritekernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/faultwritekernel.asm	/^				ch = *fmt;$/;"	d
char	obj/user/faultwritekernel.asm	/^char *$/;"	l
clrflag	obj/user/faultwritekernel.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/faultwritekernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/faultwritekernel.asm	/^				color = 0;$/;"	d
color	obj/user/faultwritekernel.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/faultwritekernel.asm	/^	colorswitch:$/;"	l
const	obj/user/faultwritekernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultwritekernel.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/faultwritekernel.asm	/^	d = dst;$/;"	d
default	obj/user/faultwritekernel.asm	/^		default:$/;"	l
dig	obj/user/faultwritekernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/faultwritekernel.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/faultwritekernel.asm	/^envid_t$/;"	l
err	obj/user/faultwritekernel.asm	/^				err = -err;$/;"	d
err	obj/user/faultwritekernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwritekernel.asm	/^    err:$/;"	l
err	obj/user/faultwritekernel.asm	/^err:$/;"	l
err1	obj/user/faultwritekernel.asm	/^    err1:$/;"	l
err2	obj/user/faultwritekernel.asm	/^    err2:$/;"	l
err3	obj/user/faultwritekernel.asm	/^    err3:$/;"	l
fd	obj/user/faultwritekernel.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultwritekernel.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/faultwritekernel.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/faultwritekernel.asm	/^int $/;"	l
int	obj/user/faultwritekernel.asm	/^int color;$/;"	l
int	obj/user/faultwritekernel.asm	/^int$/;"	l
int32_t	obj/user/faultwritekernel.asm	/^int32_t$/;"	l
lflag	obj/user/faultwritekernel.asm	/^		lflag = 0;$/;"	d
long	obj/user/faultwritekernel.asm	/^long$/;"	l
m	obj/user/faultwritekernel.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultwritekernel.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultwritekernel.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/faultwritekernel.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/faultwritekernel.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/faultwritekernel.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/faultwritekernel.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/faultwritekernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/faultwritekernel.asm	/^		number:$/;"	l
nva	obj/user/faultwritekernel.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/faultwritekernel.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/faultwritekernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwritekernel.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultwritekernel.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/faultwritekernel.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultwritekernel.asm	/^			padc = '0';$/;"	d
precision	obj/user/faultwritekernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwritekernel.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/faultwritekernel.asm	/^		process_precision:$/;"	l
pte	obj/user/faultwritekernel.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/faultwritekernel.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultwritekernel.asm	/^			r = 0;$/;"	d
r	obj/user/faultwritekernel.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultwritekernel.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/faultwritekernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/faultwritekernel.asm	/^	reswitch:$/;"	l
ret	obj/user/faultwritekernel.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultwritekernel.asm	/^	ret = dst;$/;"	d
s	obj/user/faultwritekernel.asm	/^	s = src;$/;"	d
size_t	obj/user/faultwritekernel.asm	/^size_t$/;"	l
ssize_t	obj/user/faultwritekernel.asm	/^ssize_t$/;"	l
static	obj/user/faultwritekernel.asm	/^static int$/;"	l
static	obj/user/faultwritekernel.asm	/^static long long$/;"	l
static	obj/user/faultwritekernel.asm	/^static ssize_t$/;"	l
static	obj/user/faultwritekernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultwritekernel.asm	/^static void$/;"	l
thisenv	obj/user/faultwritekernel.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/faultwritekernel.asm	/^unsigned int$/;"	l
va	obj/user/faultwritekernel.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/faultwritekernel.asm	/^void *$/;"	l
void	obj/user/faultwritekernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultwritekernel.asm	/^void$/;"	l
width	obj/user/faultwritekernel.asm	/^				width = 0;$/;"	d
width	obj/user/faultwritekernel.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/forktree.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/forktree.asm	/^Disassembly of section .text:$/;"	l
_pgfault_handler	obj/user/forktree.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	obj/user/forktree.asm	/^_pgfault_upcall:$/;"	l
_start	obj/user/forktree.asm	/^_start:$/;"	l
addr	obj/user/forktree.asm	/^	addr = (void *)ROUNDDOWN(addr, PGSIZE);$/;"	d
altflag	obj/user/forktree.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/forktree.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/forktree.asm	/^args_exist:$/;"	l
base	obj/user/forktree.asm	/^			base = 10;$/;"	d
base	obj/user/forktree.asm	/^			base = 16;$/;"	d
base	obj/user/forktree.asm	/^			base = 8;$/;"	d
base	obj/user/forktree.asm	/^		base = 10;$/;"	d
binaryname	obj/user/forktree.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/forktree.asm	/^	buf = vbuf;$/;"	d
c	obj/user/forktree.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/forktree.asm	/^				ch = *fmt;$/;"	d
char	obj/user/forktree.asm	/^char *$/;"	l
clrflag	obj/user/forktree.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/forktree.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/forktree.asm	/^				color = 0;$/;"	d
color	obj/user/forktree.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/forktree.asm	/^	colorswitch:$/;"	l
const	obj/user/forktree.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/forktree.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/forktree.asm	/^	d = dst;$/;"	d
default	obj/user/forktree.asm	/^		default:$/;"	l
dig	obj/user/forktree.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/forktree.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/forktree.asm	/^envid_t$/;"	l
err	obj/user/forktree.asm	/^				err = -err;$/;"	d
err	obj/user/forktree.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/forktree.asm	/^    err:$/;"	l
err	obj/user/forktree.asm	/^err:$/;"	l
err1	obj/user/forktree.asm	/^    err1:$/;"	l
err2	obj/user/forktree.asm	/^    err2:$/;"	l
err3	obj/user/forktree.asm	/^    err3:$/;"	l
fd	obj/user/forktree.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/forktree.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/forktree.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/forktree.asm	/^int $/;"	l
int	obj/user/forktree.asm	/^int color;$/;"	l
int	obj/user/forktree.asm	/^int$/;"	l
int32_t	obj/user/forktree.asm	/^int32_t$/;"	l
lflag	obj/user/forktree.asm	/^		lflag = 0;$/;"	d
long	obj/user/forktree.asm	/^long$/;"	l
m	obj/user/forktree.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/forktree.asm	/^		m = n - tot;$/;"	d
m	obj/user/forktree.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/forktree.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/forktree.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/forktree.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/forktree.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/forktree.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/forktree.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/forktree.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/forktree.asm	/^		number:$/;"	l
nva	obj/user/forktree.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/forktree.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/forktree.asm	/^				p = "(null)";$/;"	d
p	obj/user/forktree.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/forktree.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/forktree.asm	/^			padc = '-';$/;"	d
padc	obj/user/forktree.asm	/^			padc = '0';$/;"	d
precision	obj/user/forktree.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/forktree.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/forktree.asm	/^		process_precision:$/;"	l
pte	obj/user/forktree.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/forktree.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/forktree.asm	/^			r = 0;$/;"	d
r	obj/user/forktree.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/forktree.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/forktree.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/forktree.asm	/^	reswitch:$/;"	l
ret	obj/user/forktree.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/forktree.asm	/^	ret = dst;$/;"	d
s	obj/user/forktree.asm	/^	s = src;$/;"	d
size_t	obj/user/forktree.asm	/^size_t$/;"	l
ssize_t	obj/user/forktree.asm	/^ssize_t$/;"	l
static	obj/user/forktree.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/forktree.asm	/^static int$/;"	l
static	obj/user/forktree.asm	/^static long long$/;"	l
static	obj/user/forktree.asm	/^static ssize_t$/;"	l
static	obj/user/forktree.asm	/^static unsigned long long$/;"	l
static	obj/user/forktree.asm	/^static void$/;"	l
thisenv	obj/user/forktree.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/forktree.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/forktree.asm	/^unsigned int$/;"	l
va	obj/user/forktree.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/forktree.asm	/^void *$/;"	l
void	obj/user/forktree.asm	/^void forktree(const char *cur);$/;"	l
void	obj/user/forktree.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/forktree.asm	/^void$/;"	l
width	obj/user/forktree.asm	/^				width = 0;$/;"	d
width	obj/user/forktree.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/hello.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/hello.asm	/^Disassembly of section .text:$/;"	l
_start	obj/user/hello.asm	/^_start:$/;"	l
altflag	obj/user/hello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/hello.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/hello.asm	/^args_exist:$/;"	l
base	obj/user/hello.asm	/^			base = 10;$/;"	d
base	obj/user/hello.asm	/^			base = 16;$/;"	d
base	obj/user/hello.asm	/^			base = 8;$/;"	d
base	obj/user/hello.asm	/^		base = 10;$/;"	d
binaryname	obj/user/hello.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/hello.asm	/^	buf = vbuf;$/;"	d
c	obj/user/hello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/hello.asm	/^				ch = *fmt;$/;"	d
char	obj/user/hello.asm	/^char *$/;"	l
clrflag	obj/user/hello.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/hello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/hello.asm	/^				color = 0;$/;"	d
color	obj/user/hello.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/hello.asm	/^	colorswitch:$/;"	l
const	obj/user/hello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/hello.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/hello.asm	/^	d = dst;$/;"	d
default	obj/user/hello.asm	/^		default:$/;"	l
dig	obj/user/hello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/hello.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/hello.asm	/^envid_t$/;"	l
err	obj/user/hello.asm	/^				err = -err;$/;"	d
err	obj/user/hello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/hello.asm	/^    err:$/;"	l
err	obj/user/hello.asm	/^err:$/;"	l
err1	obj/user/hello.asm	/^    err1:$/;"	l
err2	obj/user/hello.asm	/^    err2:$/;"	l
err3	obj/user/hello.asm	/^    err3:$/;"	l
fd	obj/user/hello.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/hello.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/hello.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/hello.asm	/^int $/;"	l
int	obj/user/hello.asm	/^int color;$/;"	l
int	obj/user/hello.asm	/^int$/;"	l
int32_t	obj/user/hello.asm	/^int32_t$/;"	l
lflag	obj/user/hello.asm	/^		lflag = 0;$/;"	d
long	obj/user/hello.asm	/^long$/;"	l
m	obj/user/hello.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/hello.asm	/^		m = n - tot;$/;"	d
m	obj/user/hello.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/hello.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/hello.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/hello.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/hello.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/hello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/hello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/hello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/hello.asm	/^		number:$/;"	l
nva	obj/user/hello.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/hello.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/hello.asm	/^				p = "(null)";$/;"	d
p	obj/user/hello.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/hello.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/hello.asm	/^			padc = '-';$/;"	d
padc	obj/user/hello.asm	/^			padc = '0';$/;"	d
precision	obj/user/hello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/hello.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/hello.asm	/^		process_precision:$/;"	l
pte	obj/user/hello.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/hello.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/hello.asm	/^			r = 0;$/;"	d
r	obj/user/hello.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/hello.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/hello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/hello.asm	/^	reswitch:$/;"	l
ret	obj/user/hello.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/hello.asm	/^	ret = dst;$/;"	d
s	obj/user/hello.asm	/^	s = src;$/;"	d
size_t	obj/user/hello.asm	/^size_t$/;"	l
ssize_t	obj/user/hello.asm	/^ssize_t$/;"	l
static	obj/user/hello.asm	/^static int$/;"	l
static	obj/user/hello.asm	/^static long long$/;"	l
static	obj/user/hello.asm	/^static ssize_t$/;"	l
static	obj/user/hello.asm	/^static unsigned long long$/;"	l
static	obj/user/hello.asm	/^static void$/;"	l
thisenv	obj/user/hello.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/hello.asm	/^unsigned int$/;"	l
va	obj/user/hello.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/hello.asm	/^void *$/;"	l
void	obj/user/hello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/hello.asm	/^void$/;"	l
width	obj/user/hello.asm	/^				width = 0;$/;"	d
width	obj/user/hello.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/httpd.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/httpd.asm	/^Disassembly of section .text:$/;"	l
_start	obj/user/httpd.asm	/^_start:$/;"	l
altflag	obj/user/httpd.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/httpd.asm	/^		altflag = 0;$/;"	d
ap	obj/user/httpd.asm	/^  ap = (u8_t *)&s_addr;$/;"	d
args_exist	obj/user/httpd.asm	/^args_exist:$/;"	l
base	obj/user/httpd.asm	/^			base = 10;$/;"	d
base	obj/user/httpd.asm	/^			base = 16;$/;"	d
base	obj/user/httpd.asm	/^			base = 8;$/;"	d
base	obj/user/httpd.asm	/^		base = 10;$/;"	d
base	obj/user/httpd.asm	/^        base = 16;$/;"	d
base	obj/user/httpd.asm	/^        base = 8;$/;"	d
base	obj/user/httpd.asm	/^    base = 10;$/;"	d
binaryname	obj/user/httpd.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/httpd.asm	/^	binaryname = "jhttpd";$/;"	d
buf	obj/user/httpd.asm	/^	buf = vbuf;$/;"	d
c	obj/user/httpd.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/httpd.asm	/^	c = ROUNDDOWN(v, PGSIZE);$/;"	d
c	obj/user/httpd.asm	/^        c = *++cp;$/;"	d
c	obj/user/httpd.asm	/^      c = *++cp;$/;"	d
c	obj/user/httpd.asm	/^  c = *cp;$/;"	d
ch	obj/user/httpd.asm	/^				ch = *fmt;$/;"	d
char	obj/user/httpd.asm	/^char *$/;"	l
clrflag	obj/user/httpd.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/httpd.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/httpd.asm	/^				color = 0;$/;"	d
color	obj/user/httpd.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/httpd.asm	/^	colorswitch:$/;"	l
const	obj/user/httpd.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/httpd.asm	/^const volatile struct Env *thisenv;$/;"	l
cont	obj/user/httpd.asm	/^		cont = (i + PGSIZE < n + 4) ? PTE_CONTINUED : 0;$/;"	d
d	obj/user/httpd.asm	/^	d = dst;$/;"	d
default	obj/user/httpd.asm	/^		default:$/;"	l
dig	obj/user/httpd.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/httpd.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/httpd.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/httpd.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/httpd.asm	/^envid_t$/;"	l
err	obj/user/httpd.asm	/^				err = -err;$/;"	d
err	obj/user/httpd.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/httpd.asm	/^    err:$/;"	l
err	obj/user/httpd.asm	/^err:$/;"	l
err1	obj/user/httpd.asm	/^    err1:$/;"	l
err2	obj/user/httpd.asm	/^    err2:$/;"	l
err3	obj/user/httpd.asm	/^    err3:$/;"	l
fd	obj/user/httpd.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/httpd.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/httpd.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
i	obj/user/httpd.asm	/^    i = 0;$/;"	d
int	obj/user/httpd.asm	/^int $/;"	l
int	obj/user/httpd.asm	/^int color;$/;"	l
int	obj/user/httpd.asm	/^int$/;"	l
int32_t	obj/user/httpd.asm	/^int32_t$/;"	l
lflag	obj/user/httpd.asm	/^		lflag = 0;$/;"	d
long	obj/user/httpd.asm	/^long$/;"	l
m	obj/user/httpd.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/httpd.asm	/^		m = n - tot;$/;"	d
m	obj/user/httpd.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
mptr	obj/user/httpd.asm	/^			mptr = mbegin;$/;"	d
mptr	obj/user/httpd.asm	/^		mptr = ROUNDDOWN(mptr + PGSIZE, PGSIZE);$/;"	d
mptr	obj/user/httpd.asm	/^		mptr = mbegin;$/;"	d
n	obj/user/httpd.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/httpd.asm	/^	n = ROUNDUP(n, 4);$/;"	d
n	obj/user/httpd.asm	/^  n = pp - parts + 1;$/;"	d
newfd	obj/user/httpd.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/httpd.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/httpd.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/httpd.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/httpd.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/httpd.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/httpd.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/httpd.asm	/^		number:$/;"	l
nva	obj/user/httpd.asm	/^	nva = fd2data(newfd);$/;"	d
nwrap	obj/user/httpd.asm	/^	nwrap = 0;$/;"	d
ova	obj/user/httpd.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/httpd.asm	/^				p = "(null)";$/;"	d
p	obj/user/httpd.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/httpd.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/httpd.asm	/^			padc = '-';$/;"	d
padc	obj/user/httpd.asm	/^			padc = '0';$/;"	d
precision	obj/user/httpd.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/httpd.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/httpd.asm	/^		process_precision:$/;"	l
pte	obj/user/httpd.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/httpd.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/httpd.asm	/^			r = 0;$/;"	d
r	obj/user/httpd.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/httpd.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/httpd.asm	/^	r = snprintf(buf, 512, "HTTP\/" HTTP_VERSION" %d %s\\r\\n"$/;"	d
rc	obj/user/httpd.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
ref	obj/user/httpd.asm	/^		ref = (uint32_t*) (ROUNDUP(mptr, PGSIZE) - 4);$/;"	d
ref	obj/user/httpd.asm	/^	ref = (uint32_t*) (c + PGSIZE - 4);$/;"	d
ref	obj/user/httpd.asm	/^	ref = (uint32_t*) (mptr + i - 4);$/;"	d
rem	obj/user/httpd.asm	/^      rem = *ap % (u8_t)10;$/;"	d
reswitch	obj/user/httpd.asm	/^	reswitch:$/;"	l
ret	obj/user/httpd.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/httpd.asm	/^	ret = dst;$/;"	d
rp	obj/user/httpd.asm	/^  rp = str;$/;"	d
s	obj/user/httpd.asm	/^	s = src;$/;"	d
size_t	obj/user/httpd.asm	/^size_t$/;"	l
ssize_t	obj/user/httpd.asm	/^ssize_t$/;"	l
static	obj/user/httpd.asm	/^static int$/;"	l
static	obj/user/httpd.asm	/^static long long$/;"	l
static	obj/user/httpd.asm	/^static ssize_t$/;"	l
static	obj/user/httpd.asm	/^static unsigned long long$/;"	l
static	obj/user/httpd.asm	/^static void$/;"	l
thisenv	obj/user/httpd.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
u16_t	obj/user/httpd.asm	/^u16_t$/;"	l
u32_t	obj/user/httpd.asm	/^u32_t$/;"	l
unsigned	obj/user/httpd.asm	/^unsigned int$/;"	l
url	obj/user/httpd.asm	/^	url = request;$/;"	d
url_len	obj/user/httpd.asm	/^	url_len = request - url;$/;"	d
v	obj/user/httpd.asm	/^			v = mptr;$/;"	d
v	obj/user/httpd.asm	/^	v = mptr;$/;"	d
va	obj/user/httpd.asm	/^	va = fd2data(fd0);$/;"	d
val	obj/user/httpd.asm	/^        val = (val * base) + (int)(c - '0');$/;"	d
val	obj/user/httpd.asm	/^        val = (val << 4) | (int)(c + 10 - (islower(c) ? 'a' : 'A'));$/;"	d
val	obj/user/httpd.asm	/^    val = 0;$/;"	d
version	obj/user/httpd.asm	/^	version = request;$/;"	d
version_len	obj/user/httpd.asm	/^	version_len = request - version;$/;"	d
void	obj/user/httpd.asm	/^void *$/;"	l
void	obj/user/httpd.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/httpd.asm	/^void$/;"	l
width	obj/user/httpd.asm	/^				width = 0;$/;"	d
width	obj/user/httpd.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/icode.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/icode.asm	/^Disassembly of section .text:$/;"	l
_start	obj/user/icode.asm	/^_start:$/;"	l
altflag	obj/user/icode.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/icode.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/icode.asm	/^args_exist:$/;"	l
argv_store	obj/user/icode.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
base	obj/user/icode.asm	/^			base = 10;$/;"	d
base	obj/user/icode.asm	/^			base = 16;$/;"	d
base	obj/user/icode.asm	/^			base = 8;$/;"	d
base	obj/user/icode.asm	/^		base = 10;$/;"	d
binaryname	obj/user/icode.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/icode.asm	/^	binaryname = "icode";$/;"	d
buf	obj/user/icode.asm	/^	buf = vbuf;$/;"	d
c	obj/user/icode.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/icode.asm	/^				ch = *fmt;$/;"	d
char	obj/user/icode.asm	/^char *$/;"	l
child	obj/user/icode.asm	/^	child = r;$/;"	d
child_tf	obj/user/icode.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
clrflag	obj/user/icode.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/icode.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/icode.asm	/^				color = 0;$/;"	d
color	obj/user/icode.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/icode.asm	/^	colorswitch:$/;"	l
const	obj/user/icode.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/icode.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/icode.asm	/^	d = dst;$/;"	d
default	obj/user/icode.asm	/^		default:$/;"	l
dig	obj/user/icode.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/icode.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/icode.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/icode.asm	/^	dst_in = dst;$/;"	d
elf	obj/user/icode.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
envid_t	obj/user/icode.asm	/^envid_t$/;"	l
err	obj/user/icode.asm	/^				err = -err;$/;"	d
err	obj/user/icode.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/icode.asm	/^    err:$/;"	l
err	obj/user/icode.asm	/^err:$/;"	l
err1	obj/user/icode.asm	/^    err1:$/;"	l
err2	obj/user/icode.asm	/^    err2:$/;"	l
err3	obj/user/icode.asm	/^    err3:$/;"	l
error	obj/user/icode.asm	/^error:$/;"	l
fd	obj/user/icode.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/icode.asm	/^	fd = -1;$/;"	d
fd	obj/user/icode.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/icode.asm	/^	fd = r;$/;"	d
fsenv	obj/user/icode.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/icode.asm	/^int $/;"	l
int	obj/user/icode.asm	/^int color;$/;"	l
int	obj/user/icode.asm	/^int$/;"	l
int32_t	obj/user/icode.asm	/^int32_t$/;"	l
lflag	obj/user/icode.asm	/^		lflag = 0;$/;"	d
long	obj/user/icode.asm	/^long$/;"	l
m	obj/user/icode.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/icode.asm	/^		m = n - tot;$/;"	d
m	obj/user/icode.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/icode.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/icode.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/icode.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/icode.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/icode.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/icode.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/icode.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/icode.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/icode.asm	/^		number:$/;"	l
nva	obj/user/icode.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/icode.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/icode.asm	/^				p = "(null)";$/;"	d
p	obj/user/icode.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/icode.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/icode.asm	/^			padc = '-';$/;"	d
padc	obj/user/icode.asm	/^			padc = '0';$/;"	d
perm	obj/user/icode.asm	/^		perm = PTE_P | PTE_U;$/;"	d
ph	obj/user/icode.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
precision	obj/user/icode.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/icode.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/icode.asm	/^		process_precision:$/;"	l
pte	obj/user/icode.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/icode.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/icode.asm	/^			r = 0;$/;"	d
r	obj/user/icode.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/icode.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/icode.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/icode.asm	/^	reswitch:$/;"	l
ret	obj/user/icode.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/icode.asm	/^	ret = dst;$/;"	d
s	obj/user/icode.asm	/^	s = src;$/;"	d
size_t	obj/user/icode.asm	/^size_t$/;"	l
ssize_t	obj/user/icode.asm	/^ssize_t$/;"	l
static	obj/user/icode.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/icode.asm	/^static int$/;"	l
static	obj/user/icode.asm	/^static long long$/;"	l
static	obj/user/icode.asm	/^static ssize_t$/;"	l
static	obj/user/icode.asm	/^static unsigned long long$/;"	l
static	obj/user/icode.asm	/^static void$/;"	l
string_size	obj/user/icode.asm	/^	string_size = 0;$/;"	d
string_store	obj/user/icode.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
thisenv	obj/user/icode.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/icode.asm	/^unsigned int$/;"	l
va	obj/user/icode.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/icode.asm	/^void *$/;"	l
void	obj/user/icode.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/icode.asm	/^void$/;"	l
width	obj/user/icode.asm	/^				width = 0;$/;"	d
width	obj/user/icode.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/idle.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/idle.asm	/^Disassembly of section .text:$/;"	l
_start	obj/user/idle.asm	/^_start:$/;"	l
altflag	obj/user/idle.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/idle.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/idle.asm	/^args_exist:$/;"	l
base	obj/user/idle.asm	/^			base = 10;$/;"	d
base	obj/user/idle.asm	/^			base = 16;$/;"	d
base	obj/user/idle.asm	/^			base = 8;$/;"	d
base	obj/user/idle.asm	/^		base = 10;$/;"	d
binaryname	obj/user/idle.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/idle.asm	/^	binaryname = "idle";$/;"	d
buf	obj/user/idle.asm	/^	buf = vbuf;$/;"	d
c	obj/user/idle.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/idle.asm	/^				ch = *fmt;$/;"	d
char	obj/user/idle.asm	/^char *$/;"	l
clrflag	obj/user/idle.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/idle.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/idle.asm	/^				color = 0;$/;"	d
color	obj/user/idle.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/idle.asm	/^	colorswitch:$/;"	l
const	obj/user/idle.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/idle.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/idle.asm	/^	d = dst;$/;"	d
default	obj/user/idle.asm	/^		default:$/;"	l
dig	obj/user/idle.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/idle.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/idle.asm	/^envid_t$/;"	l
err	obj/user/idle.asm	/^				err = -err;$/;"	d
err	obj/user/idle.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/idle.asm	/^    err:$/;"	l
err	obj/user/idle.asm	/^err:$/;"	l
err1	obj/user/idle.asm	/^    err1:$/;"	l
err2	obj/user/idle.asm	/^    err2:$/;"	l
err3	obj/user/idle.asm	/^    err3:$/;"	l
fd	obj/user/idle.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/idle.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/idle.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/idle.asm	/^int $/;"	l
int	obj/user/idle.asm	/^int color;$/;"	l
int	obj/user/idle.asm	/^int$/;"	l
int32_t	obj/user/idle.asm	/^int32_t$/;"	l
lflag	obj/user/idle.asm	/^		lflag = 0;$/;"	d
long	obj/user/idle.asm	/^long$/;"	l
m	obj/user/idle.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/idle.asm	/^		m = n - tot;$/;"	d
m	obj/user/idle.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/idle.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/idle.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/idle.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/idle.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/idle.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/idle.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/idle.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/idle.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/idle.asm	/^		number:$/;"	l
nva	obj/user/idle.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/idle.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/idle.asm	/^				p = "(null)";$/;"	d
p	obj/user/idle.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/idle.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/idle.asm	/^			padc = '-';$/;"	d
padc	obj/user/idle.asm	/^			padc = '0';$/;"	d
precision	obj/user/idle.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/idle.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/idle.asm	/^		process_precision:$/;"	l
pte	obj/user/idle.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/idle.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/idle.asm	/^			r = 0;$/;"	d
r	obj/user/idle.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/idle.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/idle.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/idle.asm	/^	reswitch:$/;"	l
ret	obj/user/idle.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/idle.asm	/^	ret = dst;$/;"	d
s	obj/user/idle.asm	/^	s = src;$/;"	d
size_t	obj/user/idle.asm	/^size_t$/;"	l
ssize_t	obj/user/idle.asm	/^ssize_t$/;"	l
static	obj/user/idle.asm	/^static int$/;"	l
static	obj/user/idle.asm	/^static long long$/;"	l
static	obj/user/idle.asm	/^static ssize_t$/;"	l
static	obj/user/idle.asm	/^static unsigned long long$/;"	l
static	obj/user/idle.asm	/^static void$/;"	l
thisenv	obj/user/idle.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/idle.asm	/^unsigned int$/;"	l
va	obj/user/idle.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/idle.asm	/^void *$/;"	l
void	obj/user/idle.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/idle.asm	/^void$/;"	l
width	obj/user/idle.asm	/^				width = 0;$/;"	d
width	obj/user/idle.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/init.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/init.asm	/^Disassembly of section .text:$/;"	l
_start	obj/user/init.asm	/^_start:$/;"	l
altflag	obj/user/init.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/init.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/init.asm	/^args_exist:$/;"	l
argv_store	obj/user/init.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
base	obj/user/init.asm	/^			base = 10;$/;"	d
base	obj/user/init.asm	/^			base = 16;$/;"	d
base	obj/user/init.asm	/^			base = 8;$/;"	d
base	obj/user/init.asm	/^		base = 10;$/;"	d
binaryname	obj/user/init.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/init.asm	/^	buf = vbuf;$/;"	d
c	obj/user/init.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/init.asm	/^				ch = *fmt;$/;"	d
char	obj/user/init.asm	/^char *$/;"	l
char	obj/user/init.asm	/^char bss[6000];$/;"	l
child	obj/user/init.asm	/^	child = r;$/;"	d
child_tf	obj/user/init.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
clrflag	obj/user/init.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/init.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/init.asm	/^				color = 0;$/;"	d
color	obj/user/init.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/init.asm	/^	colorswitch:$/;"	l
const	obj/user/init.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/init.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/init.asm	/^	d = dst;$/;"	d
default	obj/user/init.asm	/^		default:$/;"	l
dig	obj/user/init.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/init.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/init.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/init.asm	/^	dst_in = dst;$/;"	d
e	obj/user/init.asm	/^	e = &envs[ENVX(envid)];$/;"	d
elf	obj/user/init.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
envid_t	obj/user/init.asm	/^envid_t$/;"	l
err	obj/user/init.asm	/^				err = -err;$/;"	d
err	obj/user/init.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/init.asm	/^    err:$/;"	l
err	obj/user/init.asm	/^err:$/;"	l
err1	obj/user/init.asm	/^    err1:$/;"	l
err2	obj/user/init.asm	/^    err2:$/;"	l
err3	obj/user/init.asm	/^    err3:$/;"	l
error	obj/user/init.asm	/^error:$/;"	l
fd	obj/user/init.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/init.asm	/^	fd = -1;$/;"	d
fd	obj/user/init.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/init.asm	/^	fd = r;$/;"	d
fsenv	obj/user/init.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/init.asm	/^int $/;"	l
int	obj/user/init.asm	/^int color;$/;"	l
int	obj/user/init.asm	/^int$/;"	l
int32_t	obj/user/init.asm	/^int32_t$/;"	l
lflag	obj/user/init.asm	/^		lflag = 0;$/;"	d
long	obj/user/init.asm	/^long$/;"	l
m	obj/user/init.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/init.asm	/^		m = n - tot;$/;"	d
m	obj/user/init.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/init.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/init.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/init.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/init.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/init.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/init.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/init.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/init.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/init.asm	/^		number:$/;"	l
nva	obj/user/init.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/init.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/init.asm	/^				p = "(null)";$/;"	d
p	obj/user/init.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/init.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/init.asm	/^			padc = '-';$/;"	d
padc	obj/user/init.asm	/^			padc = '0';$/;"	d
perm	obj/user/init.asm	/^		perm = PTE_P | PTE_U;$/;"	d
ph	obj/user/init.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
precision	obj/user/init.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/init.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/init.asm	/^		process_precision:$/;"	l
pte	obj/user/init.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/init.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/init.asm	/^			r = 0;$/;"	d
r	obj/user/init.asm	/^		r = spawnl("\/sh", "sh", (char*)0);$/;"	d
r	obj/user/init.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/init.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/init.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/init.asm	/^	reswitch:$/;"	l
ret	obj/user/init.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/init.asm	/^	ret = dst;$/;"	d
s	obj/user/init.asm	/^	s = src;$/;"	d
size_t	obj/user/init.asm	/^size_t$/;"	l
ssize_t	obj/user/init.asm	/^ssize_t$/;"	l
static	obj/user/init.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/init.asm	/^static int$/;"	l
static	obj/user/init.asm	/^static long long$/;"	l
static	obj/user/init.asm	/^static ssize_t$/;"	l
static	obj/user/init.asm	/^static unsigned long long$/;"	l
static	obj/user/init.asm	/^static void$/;"	l
string_size	obj/user/init.asm	/^	string_size = 0;$/;"	d
string_store	obj/user/init.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
thisenv	obj/user/init.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/init.asm	/^unsigned int$/;"	l
va	obj/user/init.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/init.asm	/^void *$/;"	l
void	obj/user/init.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/init.asm	/^void$/;"	l
want	obj/user/init.asm	/^	want = 0xf989e;$/;"	d
width	obj/user/init.asm	/^				width = 0;$/;"	d
width	obj/user/init.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/ls.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/ls.asm	/^Disassembly of section .text:$/;"	l
_start	obj/user/ls.asm	/^_start:$/;"	l
altflag	obj/user/ls.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/ls.asm	/^		altflag = 0;$/;"	d
arg	obj/user/ls.asm	/^	arg = (unsigned char) *args->curarg;$/;"	d
args_exist	obj/user/ls.asm	/^args_exist:$/;"	l
base	obj/user/ls.asm	/^			base = 10;$/;"	d
base	obj/user/ls.asm	/^			base = 16;$/;"	d
base	obj/user/ls.asm	/^			base = 8;$/;"	d
base	obj/user/ls.asm	/^		base = 10;$/;"	d
binaryname	obj/user/ls.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/ls.asm	/^	buf = vbuf;$/;"	d
c	obj/user/ls.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/ls.asm	/^				ch = *fmt;$/;"	d
char	obj/user/ls.asm	/^char *$/;"	l
clrflag	obj/user/ls.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/ls.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/ls.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/ls.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
color	obj/user/ls.asm	/^				color = 0;$/;"	d
color	obj/user/ls.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/ls.asm	/^	colorswitch:$/;"	l
const	obj/user/ls.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/ls.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/ls.asm	/^	d = dst;$/;"	d
default	obj/user/ls.asm	/^		default:$/;"	l
dig	obj/user/ls.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/ls.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/ls.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/ls.asm	/^	dst_in = dst;$/;"	d
endofargs	obj/user/ls.asm	/^    endofargs:$/;"	l
envid_t	obj/user/ls.asm	/^envid_t$/;"	l
err	obj/user/ls.asm	/^				err = -err;$/;"	d
err	obj/user/ls.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/ls.asm	/^    err:$/;"	l
err	obj/user/ls.asm	/^err:$/;"	l
err1	obj/user/ls.asm	/^    err1:$/;"	l
err2	obj/user/ls.asm	/^    err2:$/;"	l
err3	obj/user/ls.asm	/^    err3:$/;"	l
fd	obj/user/ls.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/ls.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/ls.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/ls.asm	/^int $/;"	l
int	obj/user/ls.asm	/^int color;$/;"	l
int	obj/user/ls.asm	/^int$/;"	l
int32_t	obj/user/ls.asm	/^int32_t$/;"	l
lflag	obj/user/ls.asm	/^		lflag = 0;$/;"	d
long	obj/user/ls.asm	/^long$/;"	l
m	obj/user/ls.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/ls.asm	/^		m = n - tot;$/;"	d
m	obj/user/ls.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/ls.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/ls.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/ls.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/ls.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/ls.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/ls.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/ls.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/ls.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/ls.asm	/^		number:$/;"	l
nva	obj/user/ls.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/ls.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/ls.asm	/^				p = "(null)";$/;"	d
p	obj/user/ls.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/ls.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/ls.asm	/^			padc = '-';$/;"	d
padc	obj/user/ls.asm	/^			padc = '0';$/;"	d
precision	obj/user/ls.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/ls.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/ls.asm	/^		process_precision:$/;"	l
pte	obj/user/ls.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/ls.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/ls.asm	/^			r = 0;$/;"	d
r	obj/user/ls.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/ls.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/ls.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/ls.asm	/^	reswitch:$/;"	l
ret	obj/user/ls.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/ls.asm	/^	ret = dst;$/;"	d
s	obj/user/ls.asm	/^	s = src;$/;"	d
sep	obj/user/ls.asm	/^			sep = "";$/;"	d
sep	obj/user/ls.asm	/^			sep = "\/";$/;"	d
size_t	obj/user/ls.asm	/^size_t$/;"	l
ssize_t	obj/user/ls.asm	/^ssize_t$/;"	l
static	obj/user/ls.asm	/^static int$/;"	l
static	obj/user/ls.asm	/^static long long$/;"	l
static	obj/user/ls.asm	/^static ssize_t$/;"	l
static	obj/user/ls.asm	/^static unsigned long long$/;"	l
static	obj/user/ls.asm	/^static void$/;"	l
thisenv	obj/user/ls.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/ls.asm	/^unsigned int$/;"	l
va	obj/user/ls.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/ls.asm	/^void *$/;"	l
void	obj/user/ls.asm	/^void ls1(const char*, bool, off_t, const char*);$/;"	l
void	obj/user/ls.asm	/^void lsdir(const char*, const char*);$/;"	l
void	obj/user/ls.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/ls.asm	/^void$/;"	l
width	obj/user/ls.asm	/^				width = 0;$/;"	d
width	obj/user/ls.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/lsfd.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/lsfd.asm	/^Disassembly of section .text:$/;"	l
_start	obj/user/lsfd.asm	/^_start:$/;"	l
altflag	obj/user/lsfd.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/lsfd.asm	/^		altflag = 0;$/;"	d
arg	obj/user/lsfd.asm	/^	arg = (unsigned char) *args->curarg;$/;"	d
args_exist	obj/user/lsfd.asm	/^args_exist:$/;"	l
base	obj/user/lsfd.asm	/^			base = 10;$/;"	d
base	obj/user/lsfd.asm	/^			base = 16;$/;"	d
base	obj/user/lsfd.asm	/^			base = 8;$/;"	d
base	obj/user/lsfd.asm	/^		base = 10;$/;"	d
binaryname	obj/user/lsfd.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/lsfd.asm	/^	buf = vbuf;$/;"	d
c	obj/user/lsfd.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/lsfd.asm	/^				ch = *fmt;$/;"	d
char	obj/user/lsfd.asm	/^char *$/;"	l
clrflag	obj/user/lsfd.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/lsfd.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/lsfd.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/lsfd.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
color	obj/user/lsfd.asm	/^				color = 0;$/;"	d
color	obj/user/lsfd.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/lsfd.asm	/^	colorswitch:$/;"	l
const	obj/user/lsfd.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/lsfd.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/lsfd.asm	/^	d = dst;$/;"	d
default	obj/user/lsfd.asm	/^		default:$/;"	l
dig	obj/user/lsfd.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/lsfd.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/lsfd.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/lsfd.asm	/^	dst_in = dst;$/;"	d
endofargs	obj/user/lsfd.asm	/^    endofargs:$/;"	l
envid_t	obj/user/lsfd.asm	/^envid_t$/;"	l
err	obj/user/lsfd.asm	/^				err = -err;$/;"	d
err	obj/user/lsfd.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/lsfd.asm	/^    err:$/;"	l
err	obj/user/lsfd.asm	/^err:$/;"	l
err1	obj/user/lsfd.asm	/^    err1:$/;"	l
err2	obj/user/lsfd.asm	/^    err2:$/;"	l
err3	obj/user/lsfd.asm	/^    err3:$/;"	l
fd	obj/user/lsfd.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/lsfd.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/lsfd.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/lsfd.asm	/^int $/;"	l
int	obj/user/lsfd.asm	/^int color;$/;"	l
int	obj/user/lsfd.asm	/^int$/;"	l
int32_t	obj/user/lsfd.asm	/^int32_t$/;"	l
lflag	obj/user/lsfd.asm	/^		lflag = 0;$/;"	d
long	obj/user/lsfd.asm	/^long$/;"	l
m	obj/user/lsfd.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/lsfd.asm	/^		m = n - tot;$/;"	d
m	obj/user/lsfd.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/lsfd.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/lsfd.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/lsfd.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/lsfd.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/lsfd.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/lsfd.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/lsfd.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/lsfd.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/lsfd.asm	/^		number:$/;"	l
nva	obj/user/lsfd.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/lsfd.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/lsfd.asm	/^				p = "(null)";$/;"	d
p	obj/user/lsfd.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/lsfd.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/lsfd.asm	/^			padc = '-';$/;"	d
padc	obj/user/lsfd.asm	/^			padc = '0';$/;"	d
precision	obj/user/lsfd.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/lsfd.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/lsfd.asm	/^		process_precision:$/;"	l
pte	obj/user/lsfd.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/lsfd.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/lsfd.asm	/^			r = 0;$/;"	d
r	obj/user/lsfd.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/lsfd.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/lsfd.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/lsfd.asm	/^	reswitch:$/;"	l
ret	obj/user/lsfd.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/lsfd.asm	/^	ret = dst;$/;"	d
s	obj/user/lsfd.asm	/^	s = src;$/;"	d
size_t	obj/user/lsfd.asm	/^size_t$/;"	l
ssize_t	obj/user/lsfd.asm	/^ssize_t$/;"	l
static	obj/user/lsfd.asm	/^static int$/;"	l
static	obj/user/lsfd.asm	/^static long long$/;"	l
static	obj/user/lsfd.asm	/^static ssize_t$/;"	l
static	obj/user/lsfd.asm	/^static unsigned long long$/;"	l
static	obj/user/lsfd.asm	/^static void$/;"	l
thisenv	obj/user/lsfd.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/lsfd.asm	/^unsigned int$/;"	l
usefprint	obj/user/lsfd.asm	/^			usefprint = 1;$/;"	d
va	obj/user/lsfd.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/lsfd.asm	/^void *$/;"	l
void	obj/user/lsfd.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/lsfd.asm	/^void$/;"	l
width	obj/user/lsfd.asm	/^				width = 0;$/;"	d
width	obj/user/lsfd.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/num.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/num.asm	/^Disassembly of section .text:$/;"	l
_start	obj/user/num.asm	/^_start:$/;"	l
altflag	obj/user/num.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/num.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/num.asm	/^args_exist:$/;"	l
base	obj/user/num.asm	/^			base = 10;$/;"	d
base	obj/user/num.asm	/^			base = 16;$/;"	d
base	obj/user/num.asm	/^			base = 8;$/;"	d
base	obj/user/num.asm	/^		base = 10;$/;"	d
binaryname	obj/user/num.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/num.asm	/^	binaryname = "num";$/;"	d
bol	obj/user/num.asm	/^			bol = 0;$/;"	d
bol	obj/user/num.asm	/^			bol = 1;$/;"	d
buf	obj/user/num.asm	/^	buf = vbuf;$/;"	d
c	obj/user/num.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/num.asm	/^				ch = *fmt;$/;"	d
char	obj/user/num.asm	/^char *$/;"	l
clrflag	obj/user/num.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/num.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/num.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/num.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
color	obj/user/num.asm	/^				color = 0;$/;"	d
color	obj/user/num.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/num.asm	/^	colorswitch:$/;"	l
const	obj/user/num.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/num.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/num.asm	/^	d = dst;$/;"	d
default	obj/user/num.asm	/^		default:$/;"	l
dig	obj/user/num.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/num.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/num.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/num.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/num.asm	/^envid_t$/;"	l
err	obj/user/num.asm	/^				err = -err;$/;"	d
err	obj/user/num.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/num.asm	/^    err:$/;"	l
err	obj/user/num.asm	/^err:$/;"	l
err1	obj/user/num.asm	/^    err1:$/;"	l
err2	obj/user/num.asm	/^    err2:$/;"	l
err3	obj/user/num.asm	/^    err3:$/;"	l
f	obj/user/num.asm	/^			f = open(argv[i], O_RDONLY);$/;"	d
fd	obj/user/num.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/num.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/num.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/num.asm	/^int $/;"	l
int	obj/user/num.asm	/^int bol = 1;$/;"	l
int	obj/user/num.asm	/^int color;$/;"	l
int	obj/user/num.asm	/^int line = 0;$/;"	l
int	obj/user/num.asm	/^int$/;"	l
int32_t	obj/user/num.asm	/^int32_t$/;"	l
lflag	obj/user/num.asm	/^		lflag = 0;$/;"	d
long	obj/user/num.asm	/^long$/;"	l
m	obj/user/num.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/num.asm	/^		m = n - tot;$/;"	d
m	obj/user/num.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/num.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/num.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/num.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/num.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/num.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/num.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/num.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/num.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/num.asm	/^		number:$/;"	l
nva	obj/user/num.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/num.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/num.asm	/^				p = "(null)";$/;"	d
p	obj/user/num.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/num.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/num.asm	/^			padc = '-';$/;"	d
padc	obj/user/num.asm	/^			padc = '0';$/;"	d
precision	obj/user/num.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/num.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/num.asm	/^		process_precision:$/;"	l
pte	obj/user/num.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/num.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/num.asm	/^			r = 0;$/;"	d
r	obj/user/num.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/num.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/num.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/num.asm	/^	reswitch:$/;"	l
ret	obj/user/num.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/num.asm	/^	ret = dst;$/;"	d
s	obj/user/num.asm	/^	s = src;$/;"	d
size_t	obj/user/num.asm	/^size_t$/;"	l
ssize_t	obj/user/num.asm	/^ssize_t$/;"	l
static	obj/user/num.asm	/^static int$/;"	l
static	obj/user/num.asm	/^static long long$/;"	l
static	obj/user/num.asm	/^static ssize_t$/;"	l
static	obj/user/num.asm	/^static unsigned long long$/;"	l
static	obj/user/num.asm	/^static void$/;"	l
thisenv	obj/user/num.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/num.asm	/^unsigned int$/;"	l
va	obj/user/num.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/num.asm	/^void *$/;"	l
void	obj/user/num.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/num.asm	/^void$/;"	l
width	obj/user/num.asm	/^				width = 0;$/;"	d
width	obj/user/num.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/pingpong.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/pingpong.asm	/^Disassembly of section .text:$/;"	l
_pgfault_handler	obj/user/pingpong.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	obj/user/pingpong.asm	/^_pgfault_upcall:$/;"	l
_start	obj/user/pingpong.asm	/^_start:$/;"	l
addr	obj/user/pingpong.asm	/^	addr = (void *)ROUNDDOWN(addr, PGSIZE);$/;"	d
altflag	obj/user/pingpong.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/pingpong.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/pingpong.asm	/^args_exist:$/;"	l
base	obj/user/pingpong.asm	/^			base = 10;$/;"	d
base	obj/user/pingpong.asm	/^			base = 16;$/;"	d
base	obj/user/pingpong.asm	/^			base = 8;$/;"	d
base	obj/user/pingpong.asm	/^		base = 10;$/;"	d
binaryname	obj/user/pingpong.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/pingpong.asm	/^	buf = vbuf;$/;"	d
c	obj/user/pingpong.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/pingpong.asm	/^				ch = *fmt;$/;"	d
char	obj/user/pingpong.asm	/^char *$/;"	l
clrflag	obj/user/pingpong.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/pingpong.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/pingpong.asm	/^				color = 0;$/;"	d
color	obj/user/pingpong.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/pingpong.asm	/^	colorswitch:$/;"	l
const	obj/user/pingpong.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/pingpong.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/pingpong.asm	/^	d = dst;$/;"	d
default	obj/user/pingpong.asm	/^		default:$/;"	l
dig	obj/user/pingpong.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/pingpong.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/pingpong.asm	/^envid_t$/;"	l
err	obj/user/pingpong.asm	/^				err = -err;$/;"	d
err	obj/user/pingpong.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/pingpong.asm	/^    err:$/;"	l
err	obj/user/pingpong.asm	/^err:$/;"	l
err1	obj/user/pingpong.asm	/^    err1:$/;"	l
err2	obj/user/pingpong.asm	/^    err2:$/;"	l
err3	obj/user/pingpong.asm	/^    err3:$/;"	l
fd	obj/user/pingpong.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/pingpong.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/pingpong.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/pingpong.asm	/^int $/;"	l
int	obj/user/pingpong.asm	/^int color;$/;"	l
int	obj/user/pingpong.asm	/^int$/;"	l
int32_t	obj/user/pingpong.asm	/^int32_t$/;"	l
lflag	obj/user/pingpong.asm	/^		lflag = 0;$/;"	d
long	obj/user/pingpong.asm	/^long$/;"	l
m	obj/user/pingpong.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/pingpong.asm	/^		m = n - tot;$/;"	d
m	obj/user/pingpong.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/pingpong.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/pingpong.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/pingpong.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/pingpong.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/pingpong.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/pingpong.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/pingpong.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/pingpong.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/pingpong.asm	/^		number:$/;"	l
nva	obj/user/pingpong.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/pingpong.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/pingpong.asm	/^				p = "(null)";$/;"	d
p	obj/user/pingpong.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/pingpong.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/pingpong.asm	/^			padc = '-';$/;"	d
padc	obj/user/pingpong.asm	/^			padc = '0';$/;"	d
precision	obj/user/pingpong.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pingpong.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/pingpong.asm	/^		process_precision:$/;"	l
pte	obj/user/pingpong.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/pingpong.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/pingpong.asm	/^			r = 0;$/;"	d
r	obj/user/pingpong.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/pingpong.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/pingpong.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/pingpong.asm	/^	reswitch:$/;"	l
ret	obj/user/pingpong.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/pingpong.asm	/^	ret = dst;$/;"	d
s	obj/user/pingpong.asm	/^	s = src;$/;"	d
size_t	obj/user/pingpong.asm	/^size_t$/;"	l
ssize_t	obj/user/pingpong.asm	/^ssize_t$/;"	l
static	obj/user/pingpong.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/pingpong.asm	/^static int$/;"	l
static	obj/user/pingpong.asm	/^static long long$/;"	l
static	obj/user/pingpong.asm	/^static ssize_t$/;"	l
static	obj/user/pingpong.asm	/^static unsigned long long$/;"	l
static	obj/user/pingpong.asm	/^static void$/;"	l
thisenv	obj/user/pingpong.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpong.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/pingpong.asm	/^unsigned int$/;"	l
va	obj/user/pingpong.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/pingpong.asm	/^void *$/;"	l
void	obj/user/pingpong.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/pingpong.asm	/^void$/;"	l
width	obj/user/pingpong.asm	/^				width = 0;$/;"	d
width	obj/user/pingpong.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/pingpongs.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/pingpongs.asm	/^Disassembly of section .text:$/;"	l
_pgfault_handler	obj/user/pingpongs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	obj/user/pingpongs.asm	/^_pgfault_upcall:$/;"	l
_start	obj/user/pingpongs.asm	/^_start:$/;"	l
addr	obj/user/pingpongs.asm	/^	addr = (void *)ROUNDDOWN(addr, PGSIZE);$/;"	d
altflag	obj/user/pingpongs.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/pingpongs.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/pingpongs.asm	/^args_exist:$/;"	l
base	obj/user/pingpongs.asm	/^			base = 10;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 16;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 8;$/;"	d
base	obj/user/pingpongs.asm	/^		base = 10;$/;"	d
binaryname	obj/user/pingpongs.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/pingpongs.asm	/^	buf = vbuf;$/;"	d
c	obj/user/pingpongs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/pingpongs.asm	/^				ch = *fmt;$/;"	d
char	obj/user/pingpongs.asm	/^char *$/;"	l
clrflag	obj/user/pingpongs.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/pingpongs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/pingpongs.asm	/^				color = 0;$/;"	d
color	obj/user/pingpongs.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/pingpongs.asm	/^	colorswitch:$/;"	l
const	obj/user/pingpongs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/pingpongs.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/pingpongs.asm	/^	d = dst;$/;"	d
default	obj/user/pingpongs.asm	/^		default:$/;"	l
dig	obj/user/pingpongs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/pingpongs.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/pingpongs.asm	/^envid_t$/;"	l
err	obj/user/pingpongs.asm	/^				err = -err;$/;"	d
err	obj/user/pingpongs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/pingpongs.asm	/^    err:$/;"	l
err	obj/user/pingpongs.asm	/^err:$/;"	l
err1	obj/user/pingpongs.asm	/^    err1:$/;"	l
err2	obj/user/pingpongs.asm	/^    err2:$/;"	l
err3	obj/user/pingpongs.asm	/^    err3:$/;"	l
fd	obj/user/pingpongs.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/pingpongs.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/pingpongs.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
i	obj/user/pingpongs.asm	/^	i = 0;$/;"	d
int	obj/user/pingpongs.asm	/^int $/;"	l
int	obj/user/pingpongs.asm	/^int color;$/;"	l
int	obj/user/pingpongs.asm	/^int$/;"	l
int32_t	obj/user/pingpongs.asm	/^int32_t$/;"	l
lflag	obj/user/pingpongs.asm	/^		lflag = 0;$/;"	d
long	obj/user/pingpongs.asm	/^long$/;"	l
m	obj/user/pingpongs.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/pingpongs.asm	/^		m = n - tot;$/;"	d
m	obj/user/pingpongs.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/pingpongs.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/pingpongs.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/pingpongs.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/pingpongs.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/pingpongs.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/pingpongs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/pingpongs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/pingpongs.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/pingpongs.asm	/^		number:$/;"	l
nva	obj/user/pingpongs.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/pingpongs.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/pingpongs.asm	/^				p = "(null)";$/;"	d
p	obj/user/pingpongs.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/pingpongs.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/pingpongs.asm	/^			padc = '-';$/;"	d
padc	obj/user/pingpongs.asm	/^			padc = '0';$/;"	d
precision	obj/user/pingpongs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pingpongs.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/pingpongs.asm	/^		process_precision:$/;"	l
pte	obj/user/pingpongs.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/pingpongs.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/pingpongs.asm	/^			r = 0;$/;"	d
r	obj/user/pingpongs.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/pingpongs.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/pingpongs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/pingpongs.asm	/^	reswitch:$/;"	l
ret	obj/user/pingpongs.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/pingpongs.asm	/^	ret = dst;$/;"	d
s	obj/user/pingpongs.asm	/^	s = src;$/;"	d
size_t	obj/user/pingpongs.asm	/^size_t$/;"	l
ssize_t	obj/user/pingpongs.asm	/^ssize_t$/;"	l
static	obj/user/pingpongs.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/pingpongs.asm	/^static int$/;"	l
static	obj/user/pingpongs.asm	/^static long long$/;"	l
static	obj/user/pingpongs.asm	/^static ssize_t$/;"	l
static	obj/user/pingpongs.asm	/^static unsigned long long$/;"	l
static	obj/user/pingpongs.asm	/^static void$/;"	l
thisenv	obj/user/pingpongs.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpongs.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
uint32_t	obj/user/pingpongs.asm	/^uint32_t val;$/;"	l
unsigned	obj/user/pingpongs.asm	/^unsigned int$/;"	l
va	obj/user/pingpongs.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/pingpongs.asm	/^void *$/;"	l
void	obj/user/pingpongs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/pingpongs.asm	/^void$/;"	l
width	obj/user/pingpongs.asm	/^				width = 0;$/;"	d
width	obj/user/pingpongs.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/primes.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/primes.asm	/^Disassembly of section .text:$/;"	l
_pgfault_handler	obj/user/primes.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	obj/user/primes.asm	/^_pgfault_upcall:$/;"	l
_start	obj/user/primes.asm	/^_start:$/;"	l
addr	obj/user/primes.asm	/^	addr = (void *)ROUNDDOWN(addr, PGSIZE);$/;"	d
altflag	obj/user/primes.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/primes.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/primes.asm	/^args_exist:$/;"	l
base	obj/user/primes.asm	/^			base = 10;$/;"	d
base	obj/user/primes.asm	/^			base = 16;$/;"	d
base	obj/user/primes.asm	/^			base = 8;$/;"	d
base	obj/user/primes.asm	/^		base = 10;$/;"	d
binaryname	obj/user/primes.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/primes.asm	/^	buf = vbuf;$/;"	d
c	obj/user/primes.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/primes.asm	/^				ch = *fmt;$/;"	d
char	obj/user/primes.asm	/^char *$/;"	l
clrflag	obj/user/primes.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/primes.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/primes.asm	/^				color = 0;$/;"	d
color	obj/user/primes.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/primes.asm	/^	colorswitch:$/;"	l
const	obj/user/primes.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/primes.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/primes.asm	/^	d = dst;$/;"	d
default	obj/user/primes.asm	/^		default:$/;"	l
dig	obj/user/primes.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/primes.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/primes.asm	/^envid_t$/;"	l
err	obj/user/primes.asm	/^				err = -err;$/;"	d
err	obj/user/primes.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/primes.asm	/^    err:$/;"	l
err	obj/user/primes.asm	/^err:$/;"	l
err1	obj/user/primes.asm	/^    err1:$/;"	l
err2	obj/user/primes.asm	/^    err2:$/;"	l
err3	obj/user/primes.asm	/^    err3:$/;"	l
fd	obj/user/primes.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/primes.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/primes.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
i	obj/user/primes.asm	/^		i = ipc_recv(&envid, 0, 0);$/;"	d
int	obj/user/primes.asm	/^int $/;"	l
int	obj/user/primes.asm	/^int color;$/;"	l
int	obj/user/primes.asm	/^int$/;"	l
int32_t	obj/user/primes.asm	/^int32_t$/;"	l
lflag	obj/user/primes.asm	/^		lflag = 0;$/;"	d
long	obj/user/primes.asm	/^long$/;"	l
m	obj/user/primes.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/primes.asm	/^		m = n - tot;$/;"	d
m	obj/user/primes.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/primes.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/primes.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/primes.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/primes.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/primes.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/primes.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/primes.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/primes.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/primes.asm	/^		number:$/;"	l
nva	obj/user/primes.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/primes.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/primes.asm	/^				p = "(null)";$/;"	d
p	obj/user/primes.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/primes.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/primes.asm	/^	p = ipc_recv(&envid, 0, 0);$/;"	d
padc	obj/user/primes.asm	/^			padc = '-';$/;"	d
padc	obj/user/primes.asm	/^			padc = '0';$/;"	d
precision	obj/user/primes.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/primes.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/primes.asm	/^		process_precision:$/;"	l
pte	obj/user/primes.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/primes.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/primes.asm	/^			r = 0;$/;"	d
r	obj/user/primes.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/primes.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/primes.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/primes.asm	/^	reswitch:$/;"	l
ret	obj/user/primes.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/primes.asm	/^	ret = dst;$/;"	d
s	obj/user/primes.asm	/^	s = src;$/;"	d
size_t	obj/user/primes.asm	/^size_t$/;"	l
ssize_t	obj/user/primes.asm	/^ssize_t$/;"	l
static	obj/user/primes.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/primes.asm	/^static int$/;"	l
static	obj/user/primes.asm	/^static long long$/;"	l
static	obj/user/primes.asm	/^static ssize_t$/;"	l
static	obj/user/primes.asm	/^static unsigned long long$/;"	l
static	obj/user/primes.asm	/^static void$/;"	l
thisenv	obj/user/primes.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/primes.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
top	obj/user/primes.asm	/^top:$/;"	l
unsigned	obj/user/primes.asm	/^unsigned int$/;"	l
unsigned	obj/user/primes.asm	/^unsigned$/;"	l
va	obj/user/primes.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/primes.asm	/^void *$/;"	l
void	obj/user/primes.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/primes.asm	/^void$/;"	l
width	obj/user/primes.asm	/^				width = 0;$/;"	d
width	obj/user/primes.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/primespipe.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/primespipe.asm	/^Disassembly of section .text:$/;"	l
_pgfault_handler	obj/user/primespipe.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	obj/user/primespipe.asm	/^_pgfault_upcall:$/;"	l
_start	obj/user/primespipe.asm	/^_start:$/;"	l
addr	obj/user/primespipe.asm	/^	addr = (void *)ROUNDDOWN(addr, PGSIZE);$/;"	d
altflag	obj/user/primespipe.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/primespipe.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/primespipe.asm	/^args_exist:$/;"	l
base	obj/user/primespipe.asm	/^			base = 10;$/;"	d
base	obj/user/primespipe.asm	/^			base = 16;$/;"	d
base	obj/user/primespipe.asm	/^			base = 8;$/;"	d
base	obj/user/primespipe.asm	/^		base = 10;$/;"	d
binaryname	obj/user/primespipe.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/primespipe.asm	/^	binaryname = "primespipe";$/;"	d
buf	obj/user/primespipe.asm	/^	buf = vbuf;$/;"	d
c	obj/user/primespipe.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/primespipe.asm	/^				ch = *fmt;$/;"	d
char	obj/user/primespipe.asm	/^char *$/;"	l
clrflag	obj/user/primespipe.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/primespipe.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/primespipe.asm	/^				color = 0;$/;"	d
color	obj/user/primespipe.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/primespipe.asm	/^	colorswitch:$/;"	l
const	obj/user/primespipe.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/primespipe.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/primespipe.asm	/^	d = dst;$/;"	d
default	obj/user/primespipe.asm	/^		default:$/;"	l
dig	obj/user/primespipe.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/primespipe.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/primespipe.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/primespipe.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/primespipe.asm	/^envid_t$/;"	l
err	obj/user/primespipe.asm	/^				err = -err;$/;"	d
err	obj/user/primespipe.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/primespipe.asm	/^    err:$/;"	l
err	obj/user/primespipe.asm	/^err:$/;"	l
err1	obj/user/primespipe.asm	/^    err1:$/;"	l
err2	obj/user/primespipe.asm	/^    err2:$/;"	l
err3	obj/user/primespipe.asm	/^    err3:$/;"	l
fd	obj/user/primespipe.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/primespipe.asm	/^		fd = pfd[0];$/;"	d
fd	obj/user/primespipe.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/primespipe.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/primespipe.asm	/^int $/;"	l
int	obj/user/primespipe.asm	/^int color;$/;"	l
int	obj/user/primespipe.asm	/^int$/;"	l
int32_t	obj/user/primespipe.asm	/^int32_t$/;"	l
lflag	obj/user/primespipe.asm	/^		lflag = 0;$/;"	d
long	obj/user/primespipe.asm	/^long$/;"	l
m	obj/user/primespipe.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/primespipe.asm	/^		m = n - tot;$/;"	d
m	obj/user/primespipe.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/primespipe.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/primespipe.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/primespipe.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/primespipe.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/primespipe.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/primespipe.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/primespipe.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/primespipe.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/primespipe.asm	/^		number:$/;"	l
nva	obj/user/primespipe.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/primespipe.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/primespipe.asm	/^				p = "(null)";$/;"	d
p	obj/user/primespipe.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/primespipe.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/primespipe.asm	/^			padc = '-';$/;"	d
padc	obj/user/primespipe.asm	/^			padc = '0';$/;"	d
precision	obj/user/primespipe.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/primespipe.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/primespipe.asm	/^		process_precision:$/;"	l
pte	obj/user/primespipe.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/primespipe.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/primespipe.asm	/^			r = 0;$/;"	d
r	obj/user/primespipe.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/primespipe.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/primespipe.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/primespipe.asm	/^	reswitch:$/;"	l
ret	obj/user/primespipe.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/primespipe.asm	/^	ret = dst;$/;"	d
s	obj/user/primespipe.asm	/^	s = src;$/;"	d
size_t	obj/user/primespipe.asm	/^size_t$/;"	l
ssize_t	obj/user/primespipe.asm	/^ssize_t$/;"	l
static	obj/user/primespipe.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/primespipe.asm	/^static int$/;"	l
static	obj/user/primespipe.asm	/^static long long$/;"	l
static	obj/user/primespipe.asm	/^static ssize_t$/;"	l
static	obj/user/primespipe.asm	/^static unsigned long long$/;"	l
static	obj/user/primespipe.asm	/^static void$/;"	l
thisenv	obj/user/primespipe.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/primespipe.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
top	obj/user/primespipe.asm	/^top:$/;"	l
unsigned	obj/user/primespipe.asm	/^unsigned int$/;"	l
unsigned	obj/user/primespipe.asm	/^unsigned$/;"	l
va	obj/user/primespipe.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/primespipe.asm	/^void *$/;"	l
void	obj/user/primespipe.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/primespipe.asm	/^void$/;"	l
wfd	obj/user/primespipe.asm	/^	wfd = pfd[1];$/;"	d
width	obj/user/primespipe.asm	/^				width = 0;$/;"	d
width	obj/user/primespipe.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/sendpage.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/sendpage.asm	/^Disassembly of section .text:$/;"	l
TEMP_ADDR	obj/user/sendpage.asm	/^#define TEMP_ADDR	((char*)0xa00000)$/;"	d
TEMP_ADDR_CHILD	obj/user/sendpage.asm	/^#define TEMP_ADDR_CHILD	((char*)0xb00000)$/;"	d
_pgfault_handler	obj/user/sendpage.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	obj/user/sendpage.asm	/^_pgfault_upcall:$/;"	l
_start	obj/user/sendpage.asm	/^_start:$/;"	l
addr	obj/user/sendpage.asm	/^	addr = (void *)ROUNDDOWN(addr, PGSIZE);$/;"	d
altflag	obj/user/sendpage.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/sendpage.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/sendpage.asm	/^args_exist:$/;"	l
base	obj/user/sendpage.asm	/^			base = 10;$/;"	d
base	obj/user/sendpage.asm	/^			base = 16;$/;"	d
base	obj/user/sendpage.asm	/^			base = 8;$/;"	d
base	obj/user/sendpage.asm	/^		base = 10;$/;"	d
binaryname	obj/user/sendpage.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/sendpage.asm	/^	buf = vbuf;$/;"	d
c	obj/user/sendpage.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/sendpage.asm	/^				ch = *fmt;$/;"	d
char	obj/user/sendpage.asm	/^char *$/;"	l
clrflag	obj/user/sendpage.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/sendpage.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/sendpage.asm	/^				color = 0;$/;"	d
color	obj/user/sendpage.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/sendpage.asm	/^	colorswitch:$/;"	l
const	obj/user/sendpage.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/sendpage.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/sendpage.asm	/^	d = dst;$/;"	d
default	obj/user/sendpage.asm	/^		default:$/;"	l
dig	obj/user/sendpage.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/sendpage.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/sendpage.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/sendpage.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/sendpage.asm	/^envid_t$/;"	l
err	obj/user/sendpage.asm	/^				err = -err;$/;"	d
err	obj/user/sendpage.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/sendpage.asm	/^    err:$/;"	l
err	obj/user/sendpage.asm	/^err:$/;"	l
err1	obj/user/sendpage.asm	/^    err1:$/;"	l
err2	obj/user/sendpage.asm	/^    err2:$/;"	l
err3	obj/user/sendpage.asm	/^    err3:$/;"	l
fd	obj/user/sendpage.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/sendpage.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/sendpage.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/sendpage.asm	/^int $/;"	l
int	obj/user/sendpage.asm	/^int color;$/;"	l
int	obj/user/sendpage.asm	/^int$/;"	l
int32_t	obj/user/sendpage.asm	/^int32_t$/;"	l
lflag	obj/user/sendpage.asm	/^		lflag = 0;$/;"	d
long	obj/user/sendpage.asm	/^long$/;"	l
m	obj/user/sendpage.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/sendpage.asm	/^		m = n - tot;$/;"	d
m	obj/user/sendpage.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/sendpage.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/sendpage.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/sendpage.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/sendpage.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/sendpage.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/sendpage.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/sendpage.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/sendpage.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/sendpage.asm	/^		number:$/;"	l
nva	obj/user/sendpage.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/sendpage.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/sendpage.asm	/^				p = "(null)";$/;"	d
p	obj/user/sendpage.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/sendpage.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/sendpage.asm	/^			padc = '-';$/;"	d
padc	obj/user/sendpage.asm	/^			padc = '0';$/;"	d
precision	obj/user/sendpage.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/sendpage.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/sendpage.asm	/^		process_precision:$/;"	l
pte	obj/user/sendpage.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/sendpage.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/sendpage.asm	/^			r = 0;$/;"	d
r	obj/user/sendpage.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/sendpage.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/sendpage.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/sendpage.asm	/^	reswitch:$/;"	l
ret	obj/user/sendpage.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/sendpage.asm	/^	ret = dst;$/;"	d
s	obj/user/sendpage.asm	/^	s = src;$/;"	d
size_t	obj/user/sendpage.asm	/^size_t$/;"	l
ssize_t	obj/user/sendpage.asm	/^ssize_t$/;"	l
static	obj/user/sendpage.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/sendpage.asm	/^static int$/;"	l
static	obj/user/sendpage.asm	/^static long long$/;"	l
static	obj/user/sendpage.asm	/^static ssize_t$/;"	l
static	obj/user/sendpage.asm	/^static unsigned long long$/;"	l
static	obj/user/sendpage.asm	/^static void$/;"	l
thisenv	obj/user/sendpage.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/sendpage.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/sendpage.asm	/^unsigned int$/;"	l
va	obj/user/sendpage.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/sendpage.asm	/^void *$/;"	l
void	obj/user/sendpage.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/sendpage.asm	/^void$/;"	l
width	obj/user/sendpage.asm	/^				width = 0;$/;"	d
width	obj/user/sendpage.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/sh.asm	/^#define ASM 1$/;"	d
BUFLEN	obj/user/sh.asm	/^#define BUFLEN 1024$/;"	d
Disassembly	obj/user/sh.asm	/^Disassembly of section .text:$/;"	l
MAXARGS	obj/user/sh.asm	/^#define MAXARGS 16$/;"	d
SYMBOLS	obj/user/sh.asm	/^#define SYMBOLS "<|>&;()"$/;"	d
WHITESPACE	obj/user/sh.asm	/^#define WHITESPACE " \\t\\r\\n"$/;"	d
_pgfault_handler	obj/user/sh.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	obj/user/sh.asm	/^_pgfault_upcall:$/;"	l
_start	obj/user/sh.asm	/^_start:$/;"	l
addr	obj/user/sh.asm	/^	addr = (void *)ROUNDDOWN(addr, PGSIZE);$/;"	d
again	obj/user/sh.asm	/^again:$/;"	l
altflag	obj/user/sh.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/sh.asm	/^		altflag = 0;$/;"	d
arg	obj/user/sh.asm	/^	arg = (unsigned char) *args->curarg;$/;"	d
argc	obj/user/sh.asm	/^	argc = 0;$/;"	d
args_exist	obj/user/sh.asm	/^args_exist:$/;"	l
argv_store	obj/user/sh.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
base	obj/user/sh.asm	/^			base = 10;$/;"	d
base	obj/user/sh.asm	/^			base = 16;$/;"	d
base	obj/user/sh.asm	/^			base = 8;$/;"	d
base	obj/user/sh.asm	/^		base = 10;$/;"	d
binaryname	obj/user/sh.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/sh.asm	/^		buf = readline(interactive ? "$ " : NULL);$/;"	d
buf	obj/user/sh.asm	/^	buf = vbuf;$/;"	d
c	obj/user/sh.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/sh.asm	/^		c = getchar();$/;"	d
c	obj/user/sh.asm	/^	c = nc;$/;"	d
ch	obj/user/sh.asm	/^				ch = *fmt;$/;"	d
char	obj/user/sh.asm	/^char *$/;"	l
child	obj/user/sh.asm	/^	child = r;$/;"	d
child_tf	obj/user/sh.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
clrflag	obj/user/sh.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/sh.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/sh.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/sh.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
color	obj/user/sh.asm	/^				color = 0;$/;"	d
color	obj/user/sh.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/sh.asm	/^	colorswitch:$/;"	l
const	obj/user/sh.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/sh.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/sh.asm	/^	d = dst;$/;"	d
default	obj/user/sh.asm	/^		default:$/;"	l
dig	obj/user/sh.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/sh.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/sh.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/sh.asm	/^	dst_in = dst;$/;"	d
e	obj/user/sh.asm	/^	e = &envs[ENVX(envid)];$/;"	d
echocmds	obj/user/sh.asm	/^			echocmds = 1;$/;"	d
echocmds	obj/user/sh.asm	/^	echocmds = 0;$/;"	d
echoing	obj/user/sh.asm	/^	echoing = iscons(0);$/;"	d
elf	obj/user/sh.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
endofargs	obj/user/sh.asm	/^    endofargs:$/;"	l
envid_t	obj/user/sh.asm	/^envid_t$/;"	l
err	obj/user/sh.asm	/^				err = -err;$/;"	d
err	obj/user/sh.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/sh.asm	/^    err:$/;"	l
err	obj/user/sh.asm	/^err:$/;"	l
err1	obj/user/sh.asm	/^    err1:$/;"	l
err2	obj/user/sh.asm	/^    err2:$/;"	l
err3	obj/user/sh.asm	/^    err3:$/;"	l
error	obj/user/sh.asm	/^error:$/;"	l
fd	obj/user/sh.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/sh.asm	/^	fd = -1;$/;"	d
fd	obj/user/sh.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/sh.asm	/^	fd = r;$/;"	d
fsenv	obj/user/sh.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
i	obj/user/sh.asm	/^	i = 0;$/;"	d
int	obj/user/sh.asm	/^int $/;"	l
int	obj/user/sh.asm	/^int color;$/;"	l
int	obj/user/sh.asm	/^int$/;"	l
int32_t	obj/user/sh.asm	/^int32_t$/;"	l
interactive	obj/user/sh.asm	/^			interactive = 1;$/;"	d
interactive	obj/user/sh.asm	/^		interactive = iscons(0);$/;"	d
interactive	obj/user/sh.asm	/^	interactive = '?';$/;"	d
lflag	obj/user/sh.asm	/^		lflag = 0;$/;"	d
long	obj/user/sh.asm	/^long$/;"	l
m	obj/user/sh.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/sh.asm	/^		m = n - tot;$/;"	d
m	obj/user/sh.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/sh.asm	/^		n = thisenv->env_runs;$/;"	d
nc	obj/user/sh.asm	/^		nc = _gettoken(s, &np1, &np2);$/;"	d
nc	obj/user/sh.asm	/^	nc = _gettoken(np2, &np1, &np2);$/;"	d
newfd	obj/user/sh.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/sh.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/sh.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/sh.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/sh.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/sh.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/sh.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/sh.asm	/^		number:$/;"	l
nva	obj/user/sh.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/sh.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/sh.asm	/^				p = "(null)";$/;"	d
p	obj/user/sh.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/sh.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/sh.asm	/^			padc = '-';$/;"	d
padc	obj/user/sh.asm	/^			padc = '0';$/;"	d
perm	obj/user/sh.asm	/^		perm = PTE_P | PTE_U;$/;"	d
ph	obj/user/sh.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
pipe_child	obj/user/sh.asm	/^				pipe_child = r;$/;"	d
pipe_child	obj/user/sh.asm	/^	pipe_child = 0;$/;"	d
precision	obj/user/sh.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/sh.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/sh.asm	/^		process_precision:$/;"	l
pte	obj/user/sh.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/sh.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/sh.asm	/^			r = 0;$/;"	d
r	obj/user/sh.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/sh.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/sh.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/sh.asm	/^	reswitch:$/;"	l
ret	obj/user/sh.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/sh.asm	/^	ret = dst;$/;"	d
runit	obj/user/sh.asm	/^runit:$/;"	l
s	obj/user/sh.asm	/^	s = src;$/;"	d
size_t	obj/user/sh.asm	/^size_t$/;"	l
ssize_t	obj/user/sh.asm	/^ssize_t$/;"	l
static	obj/user/sh.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/sh.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/user/sh.asm	/^static int$/;"	l
static	obj/user/sh.asm	/^static long long$/;"	l
static	obj/user/sh.asm	/^static ssize_t$/;"	l
static	obj/user/sh.asm	/^static unsigned long long$/;"	l
static	obj/user/sh.asm	/^static void$/;"	l
string_size	obj/user/sh.asm	/^	string_size = 0;$/;"	d
string_store	obj/user/sh.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
t	obj/user/sh.asm	/^		t = **p2;$/;"	d
t	obj/user/sh.asm	/^		t = *s;$/;"	d
thisenv	obj/user/sh.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/sh.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/sh.asm	/^unsigned int$/;"	l
va	obj/user/sh.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/sh.asm	/^void *$/;"	l
void	obj/user/sh.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/sh.asm	/^void$/;"	l
width	obj/user/sh.asm	/^				width = 0;$/;"	d
width	obj/user/sh.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/softint.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/softint.asm	/^Disassembly of section .text:$/;"	l
_start	obj/user/softint.asm	/^_start:$/;"	l
altflag	obj/user/softint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/softint.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/softint.asm	/^args_exist:$/;"	l
base	obj/user/softint.asm	/^			base = 10;$/;"	d
base	obj/user/softint.asm	/^			base = 16;$/;"	d
base	obj/user/softint.asm	/^			base = 8;$/;"	d
base	obj/user/softint.asm	/^		base = 10;$/;"	d
binaryname	obj/user/softint.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/softint.asm	/^	buf = vbuf;$/;"	d
c	obj/user/softint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/softint.asm	/^				ch = *fmt;$/;"	d
char	obj/user/softint.asm	/^char *$/;"	l
clrflag	obj/user/softint.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/softint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/softint.asm	/^				color = 0;$/;"	d
color	obj/user/softint.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/softint.asm	/^	colorswitch:$/;"	l
const	obj/user/softint.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/softint.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/softint.asm	/^	d = dst;$/;"	d
default	obj/user/softint.asm	/^		default:$/;"	l
dig	obj/user/softint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/softint.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/softint.asm	/^envid_t$/;"	l
err	obj/user/softint.asm	/^				err = -err;$/;"	d
err	obj/user/softint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/softint.asm	/^    err:$/;"	l
err	obj/user/softint.asm	/^err:$/;"	l
err1	obj/user/softint.asm	/^    err1:$/;"	l
err2	obj/user/softint.asm	/^    err2:$/;"	l
err3	obj/user/softint.asm	/^    err3:$/;"	l
fd	obj/user/softint.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/softint.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/softint.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/softint.asm	/^int $/;"	l
int	obj/user/softint.asm	/^int color;$/;"	l
int	obj/user/softint.asm	/^int$/;"	l
int32_t	obj/user/softint.asm	/^int32_t$/;"	l
lflag	obj/user/softint.asm	/^		lflag = 0;$/;"	d
long	obj/user/softint.asm	/^long$/;"	l
m	obj/user/softint.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/softint.asm	/^		m = n - tot;$/;"	d
m	obj/user/softint.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/softint.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/softint.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/softint.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/softint.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/softint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/softint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/softint.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/softint.asm	/^		number:$/;"	l
nva	obj/user/softint.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/softint.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/softint.asm	/^				p = "(null)";$/;"	d
p	obj/user/softint.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/softint.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/softint.asm	/^			padc = '-';$/;"	d
padc	obj/user/softint.asm	/^			padc = '0';$/;"	d
precision	obj/user/softint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/softint.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/softint.asm	/^		process_precision:$/;"	l
pte	obj/user/softint.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/softint.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/softint.asm	/^			r = 0;$/;"	d
r	obj/user/softint.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/softint.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/softint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/softint.asm	/^	reswitch:$/;"	l
ret	obj/user/softint.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/softint.asm	/^	ret = dst;$/;"	d
s	obj/user/softint.asm	/^	s = src;$/;"	d
size_t	obj/user/softint.asm	/^size_t$/;"	l
ssize_t	obj/user/softint.asm	/^ssize_t$/;"	l
static	obj/user/softint.asm	/^static int$/;"	l
static	obj/user/softint.asm	/^static long long$/;"	l
static	obj/user/softint.asm	/^static ssize_t$/;"	l
static	obj/user/softint.asm	/^static unsigned long long$/;"	l
static	obj/user/softint.asm	/^static void$/;"	l
thisenv	obj/user/softint.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/softint.asm	/^unsigned int$/;"	l
va	obj/user/softint.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/softint.asm	/^void *$/;"	l
void	obj/user/softint.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/softint.asm	/^void$/;"	l
width	obj/user/softint.asm	/^				width = 0;$/;"	d
width	obj/user/softint.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/spawnhello.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/spawnhello.asm	/^Disassembly of section .text:$/;"	l
_start	obj/user/spawnhello.asm	/^_start:$/;"	l
altflag	obj/user/spawnhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/spawnhello.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/spawnhello.asm	/^args_exist:$/;"	l
argv_store	obj/user/spawnhello.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
base	obj/user/spawnhello.asm	/^			base = 10;$/;"	d
base	obj/user/spawnhello.asm	/^			base = 16;$/;"	d
base	obj/user/spawnhello.asm	/^			base = 8;$/;"	d
base	obj/user/spawnhello.asm	/^		base = 10;$/;"	d
binaryname	obj/user/spawnhello.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/spawnhello.asm	/^	buf = vbuf;$/;"	d
c	obj/user/spawnhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/spawnhello.asm	/^				ch = *fmt;$/;"	d
char	obj/user/spawnhello.asm	/^char *$/;"	l
child	obj/user/spawnhello.asm	/^	child = r;$/;"	d
child_tf	obj/user/spawnhello.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
clrflag	obj/user/spawnhello.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/spawnhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/spawnhello.asm	/^				color = 0;$/;"	d
color	obj/user/spawnhello.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/spawnhello.asm	/^	colorswitch:$/;"	l
const	obj/user/spawnhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/spawnhello.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/spawnhello.asm	/^	d = dst;$/;"	d
default	obj/user/spawnhello.asm	/^		default:$/;"	l
dig	obj/user/spawnhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/spawnhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/spawnhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/spawnhello.asm	/^	dst_in = dst;$/;"	d
elf	obj/user/spawnhello.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
envid_t	obj/user/spawnhello.asm	/^envid_t$/;"	l
err	obj/user/spawnhello.asm	/^				err = -err;$/;"	d
err	obj/user/spawnhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/spawnhello.asm	/^    err:$/;"	l
err	obj/user/spawnhello.asm	/^err:$/;"	l
err1	obj/user/spawnhello.asm	/^    err1:$/;"	l
err2	obj/user/spawnhello.asm	/^    err2:$/;"	l
err3	obj/user/spawnhello.asm	/^    err3:$/;"	l
error	obj/user/spawnhello.asm	/^error:$/;"	l
fd	obj/user/spawnhello.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/spawnhello.asm	/^	fd = -1;$/;"	d
fd	obj/user/spawnhello.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/spawnhello.asm	/^	fd = r;$/;"	d
fsenv	obj/user/spawnhello.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/spawnhello.asm	/^int $/;"	l
int	obj/user/spawnhello.asm	/^int color;$/;"	l
int	obj/user/spawnhello.asm	/^int$/;"	l
int32_t	obj/user/spawnhello.asm	/^int32_t$/;"	l
lflag	obj/user/spawnhello.asm	/^		lflag = 0;$/;"	d
long	obj/user/spawnhello.asm	/^long$/;"	l
m	obj/user/spawnhello.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/spawnhello.asm	/^		m = n - tot;$/;"	d
m	obj/user/spawnhello.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/spawnhello.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/spawnhello.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/spawnhello.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/spawnhello.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/spawnhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/spawnhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/spawnhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/spawnhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/spawnhello.asm	/^		number:$/;"	l
nva	obj/user/spawnhello.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/spawnhello.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/spawnhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/spawnhello.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/spawnhello.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/spawnhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/spawnhello.asm	/^			padc = '0';$/;"	d
perm	obj/user/spawnhello.asm	/^		perm = PTE_P | PTE_U;$/;"	d
ph	obj/user/spawnhello.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
precision	obj/user/spawnhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/spawnhello.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/spawnhello.asm	/^		process_precision:$/;"	l
pte	obj/user/spawnhello.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/spawnhello.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/spawnhello.asm	/^			r = 0;$/;"	d
r	obj/user/spawnhello.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/spawnhello.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/spawnhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/spawnhello.asm	/^	reswitch:$/;"	l
ret	obj/user/spawnhello.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/spawnhello.asm	/^	ret = dst;$/;"	d
s	obj/user/spawnhello.asm	/^	s = src;$/;"	d
size_t	obj/user/spawnhello.asm	/^size_t$/;"	l
ssize_t	obj/user/spawnhello.asm	/^ssize_t$/;"	l
static	obj/user/spawnhello.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/spawnhello.asm	/^static int$/;"	l
static	obj/user/spawnhello.asm	/^static long long$/;"	l
static	obj/user/spawnhello.asm	/^static ssize_t$/;"	l
static	obj/user/spawnhello.asm	/^static unsigned long long$/;"	l
static	obj/user/spawnhello.asm	/^static void$/;"	l
string_size	obj/user/spawnhello.asm	/^	string_size = 0;$/;"	d
string_store	obj/user/spawnhello.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
thisenv	obj/user/spawnhello.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/spawnhello.asm	/^unsigned int$/;"	l
va	obj/user/spawnhello.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/spawnhello.asm	/^void *$/;"	l
void	obj/user/spawnhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/spawnhello.asm	/^void$/;"	l
width	obj/user/spawnhello.asm	/^				width = 0;$/;"	d
width	obj/user/spawnhello.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/spin.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/spin.asm	/^Disassembly of section .text:$/;"	l
_pgfault_handler	obj/user/spin.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	obj/user/spin.asm	/^_pgfault_upcall:$/;"	l
_start	obj/user/spin.asm	/^_start:$/;"	l
addr	obj/user/spin.asm	/^	addr = (void *)ROUNDDOWN(addr, PGSIZE);$/;"	d
altflag	obj/user/spin.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/spin.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/spin.asm	/^args_exist:$/;"	l
base	obj/user/spin.asm	/^			base = 10;$/;"	d
base	obj/user/spin.asm	/^			base = 16;$/;"	d
base	obj/user/spin.asm	/^			base = 8;$/;"	d
base	obj/user/spin.asm	/^		base = 10;$/;"	d
binaryname	obj/user/spin.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/spin.asm	/^	buf = vbuf;$/;"	d
c	obj/user/spin.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/spin.asm	/^				ch = *fmt;$/;"	d
char	obj/user/spin.asm	/^char *$/;"	l
clrflag	obj/user/spin.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/spin.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/spin.asm	/^				color = 0;$/;"	d
color	obj/user/spin.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/spin.asm	/^	colorswitch:$/;"	l
const	obj/user/spin.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/spin.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/spin.asm	/^	d = dst;$/;"	d
default	obj/user/spin.asm	/^		default:$/;"	l
dig	obj/user/spin.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/spin.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/spin.asm	/^envid_t$/;"	l
err	obj/user/spin.asm	/^				err = -err;$/;"	d
err	obj/user/spin.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/spin.asm	/^    err:$/;"	l
err	obj/user/spin.asm	/^err:$/;"	l
err1	obj/user/spin.asm	/^    err1:$/;"	l
err2	obj/user/spin.asm	/^    err2:$/;"	l
err3	obj/user/spin.asm	/^    err3:$/;"	l
fd	obj/user/spin.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/spin.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/spin.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/spin.asm	/^int $/;"	l
int	obj/user/spin.asm	/^int color;$/;"	l
int	obj/user/spin.asm	/^int$/;"	l
int32_t	obj/user/spin.asm	/^int32_t$/;"	l
lflag	obj/user/spin.asm	/^		lflag = 0;$/;"	d
long	obj/user/spin.asm	/^long$/;"	l
m	obj/user/spin.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/spin.asm	/^		m = n - tot;$/;"	d
m	obj/user/spin.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/spin.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/spin.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/spin.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/spin.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/spin.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/spin.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/spin.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/spin.asm	/^		number:$/;"	l
nva	obj/user/spin.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/spin.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/spin.asm	/^				p = "(null)";$/;"	d
p	obj/user/spin.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/spin.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/spin.asm	/^			padc = '-';$/;"	d
padc	obj/user/spin.asm	/^			padc = '0';$/;"	d
precision	obj/user/spin.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/spin.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/spin.asm	/^		process_precision:$/;"	l
pte	obj/user/spin.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/spin.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/spin.asm	/^			r = 0;$/;"	d
r	obj/user/spin.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/spin.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/spin.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/spin.asm	/^	reswitch:$/;"	l
ret	obj/user/spin.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/spin.asm	/^	ret = dst;$/;"	d
s	obj/user/spin.asm	/^	s = src;$/;"	d
size_t	obj/user/spin.asm	/^size_t$/;"	l
ssize_t	obj/user/spin.asm	/^ssize_t$/;"	l
static	obj/user/spin.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/spin.asm	/^static int$/;"	l
static	obj/user/spin.asm	/^static long long$/;"	l
static	obj/user/spin.asm	/^static ssize_t$/;"	l
static	obj/user/spin.asm	/^static unsigned long long$/;"	l
static	obj/user/spin.asm	/^static void$/;"	l
thisenv	obj/user/spin.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/spin.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/spin.asm	/^unsigned int$/;"	l
va	obj/user/spin.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/spin.asm	/^void *$/;"	l
void	obj/user/spin.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/spin.asm	/^void$/;"	l
width	obj/user/spin.asm	/^				width = 0;$/;"	d
width	obj/user/spin.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/stresssched.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/stresssched.asm	/^Disassembly of section .text:$/;"	l
_pgfault_handler	obj/user/stresssched.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	obj/user/stresssched.asm	/^_pgfault_upcall:$/;"	l
_start	obj/user/stresssched.asm	/^_start:$/;"	l
addr	obj/user/stresssched.asm	/^	addr = (void *)ROUNDDOWN(addr, PGSIZE);$/;"	d
altflag	obj/user/stresssched.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/stresssched.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/stresssched.asm	/^args_exist:$/;"	l
base	obj/user/stresssched.asm	/^			base = 10;$/;"	d
base	obj/user/stresssched.asm	/^			base = 16;$/;"	d
base	obj/user/stresssched.asm	/^			base = 8;$/;"	d
base	obj/user/stresssched.asm	/^		base = 10;$/;"	d
binaryname	obj/user/stresssched.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/stresssched.asm	/^	buf = vbuf;$/;"	d
c	obj/user/stresssched.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/stresssched.asm	/^				ch = *fmt;$/;"	d
char	obj/user/stresssched.asm	/^char *$/;"	l
clrflag	obj/user/stresssched.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/stresssched.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/stresssched.asm	/^				color = 0;$/;"	d
color	obj/user/stresssched.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/stresssched.asm	/^	colorswitch:$/;"	l
const	obj/user/stresssched.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/stresssched.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/stresssched.asm	/^	d = dst;$/;"	d
default	obj/user/stresssched.asm	/^		default:$/;"	l
dig	obj/user/stresssched.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/stresssched.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/stresssched.asm	/^envid_t$/;"	l
err	obj/user/stresssched.asm	/^				err = -err;$/;"	d
err	obj/user/stresssched.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/stresssched.asm	/^    err:$/;"	l
err	obj/user/stresssched.asm	/^err:$/;"	l
err1	obj/user/stresssched.asm	/^    err1:$/;"	l
err2	obj/user/stresssched.asm	/^    err2:$/;"	l
err3	obj/user/stresssched.asm	/^    err3:$/;"	l
fd	obj/user/stresssched.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/stresssched.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/stresssched.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/stresssched.asm	/^int $/;"	l
int	obj/user/stresssched.asm	/^int color;$/;"	l
int	obj/user/stresssched.asm	/^int$/;"	l
int32_t	obj/user/stresssched.asm	/^int32_t$/;"	l
lflag	obj/user/stresssched.asm	/^		lflag = 0;$/;"	d
long	obj/user/stresssched.asm	/^long$/;"	l
m	obj/user/stresssched.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/stresssched.asm	/^		m = n - tot;$/;"	d
m	obj/user/stresssched.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/stresssched.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/stresssched.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/stresssched.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/stresssched.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/stresssched.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/stresssched.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/stresssched.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/stresssched.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/stresssched.asm	/^		number:$/;"	l
nva	obj/user/stresssched.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/stresssched.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/stresssched.asm	/^				p = "(null)";$/;"	d
p	obj/user/stresssched.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/stresssched.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/stresssched.asm	/^			padc = '-';$/;"	d
padc	obj/user/stresssched.asm	/^			padc = '0';$/;"	d
precision	obj/user/stresssched.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/stresssched.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/stresssched.asm	/^		process_precision:$/;"	l
pte	obj/user/stresssched.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/stresssched.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/stresssched.asm	/^			r = 0;$/;"	d
r	obj/user/stresssched.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/stresssched.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/stresssched.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/stresssched.asm	/^	reswitch:$/;"	l
ret	obj/user/stresssched.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/stresssched.asm	/^	ret = dst;$/;"	d
s	obj/user/stresssched.asm	/^	s = src;$/;"	d
size_t	obj/user/stresssched.asm	/^size_t$/;"	l
ssize_t	obj/user/stresssched.asm	/^ssize_t$/;"	l
static	obj/user/stresssched.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/stresssched.asm	/^static int$/;"	l
static	obj/user/stresssched.asm	/^static long long$/;"	l
static	obj/user/stresssched.asm	/^static ssize_t$/;"	l
static	obj/user/stresssched.asm	/^static unsigned long long$/;"	l
static	obj/user/stresssched.asm	/^static void$/;"	l
thisenv	obj/user/stresssched.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/stresssched.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/stresssched.asm	/^unsigned int$/;"	l
va	obj/user/stresssched.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/stresssched.asm	/^void *$/;"	l
void	obj/user/stresssched.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/stresssched.asm	/^void$/;"	l
volatile	obj/user/stresssched.asm	/^volatile int counter;$/;"	l
width	obj/user/stresssched.asm	/^				width = 0;$/;"	d
width	obj/user/stresssched.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/testbss.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/testbss.asm	/^Disassembly of section .text:$/;"	l
_start	obj/user/testbss.asm	/^_start:$/;"	l
altflag	obj/user/testbss.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testbss.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/testbss.asm	/^args_exist:$/;"	l
base	obj/user/testbss.asm	/^			base = 10;$/;"	d
base	obj/user/testbss.asm	/^			base = 16;$/;"	d
base	obj/user/testbss.asm	/^			base = 8;$/;"	d
base	obj/user/testbss.asm	/^		base = 10;$/;"	d
binaryname	obj/user/testbss.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/testbss.asm	/^	buf = vbuf;$/;"	d
c	obj/user/testbss.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/testbss.asm	/^				ch = *fmt;$/;"	d
char	obj/user/testbss.asm	/^char *$/;"	l
clrflag	obj/user/testbss.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/testbss.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/testbss.asm	/^				color = 0;$/;"	d
color	obj/user/testbss.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/testbss.asm	/^	colorswitch:$/;"	l
const	obj/user/testbss.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testbss.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/testbss.asm	/^	d = dst;$/;"	d
default	obj/user/testbss.asm	/^		default:$/;"	l
dig	obj/user/testbss.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/testbss.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/testbss.asm	/^envid_t$/;"	l
err	obj/user/testbss.asm	/^				err = -err;$/;"	d
err	obj/user/testbss.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testbss.asm	/^    err:$/;"	l
err	obj/user/testbss.asm	/^err:$/;"	l
err1	obj/user/testbss.asm	/^    err1:$/;"	l
err2	obj/user/testbss.asm	/^    err2:$/;"	l
err3	obj/user/testbss.asm	/^    err3:$/;"	l
fd	obj/user/testbss.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testbss.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/testbss.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/testbss.asm	/^int $/;"	l
int	obj/user/testbss.asm	/^int color;$/;"	l
int	obj/user/testbss.asm	/^int$/;"	l
int32_t	obj/user/testbss.asm	/^int32_t$/;"	l
lflag	obj/user/testbss.asm	/^		lflag = 0;$/;"	d
long	obj/user/testbss.asm	/^long$/;"	l
m	obj/user/testbss.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testbss.asm	/^		m = n - tot;$/;"	d
m	obj/user/testbss.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/testbss.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/testbss.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/testbss.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/testbss.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/testbss.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testbss.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testbss.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/testbss.asm	/^		number:$/;"	l
nva	obj/user/testbss.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/testbss.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/testbss.asm	/^				p = "(null)";$/;"	d
p	obj/user/testbss.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testbss.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/testbss.asm	/^			padc = '-';$/;"	d
padc	obj/user/testbss.asm	/^			padc = '0';$/;"	d
precision	obj/user/testbss.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testbss.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/testbss.asm	/^		process_precision:$/;"	l
pte	obj/user/testbss.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/testbss.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testbss.asm	/^			r = 0;$/;"	d
r	obj/user/testbss.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testbss.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/testbss.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/testbss.asm	/^	reswitch:$/;"	l
ret	obj/user/testbss.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testbss.asm	/^	ret = dst;$/;"	d
s	obj/user/testbss.asm	/^	s = src;$/;"	d
size_t	obj/user/testbss.asm	/^size_t$/;"	l
ssize_t	obj/user/testbss.asm	/^ssize_t$/;"	l
static	obj/user/testbss.asm	/^static int$/;"	l
static	obj/user/testbss.asm	/^static long long$/;"	l
static	obj/user/testbss.asm	/^static ssize_t$/;"	l
static	obj/user/testbss.asm	/^static unsigned long long$/;"	l
static	obj/user/testbss.asm	/^static void$/;"	l
thisenv	obj/user/testbss.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
uint32_t	obj/user/testbss.asm	/^uint32_t bigarray[ARRAYSIZE];$/;"	l
unsigned	obj/user/testbss.asm	/^unsigned int$/;"	l
va	obj/user/testbss.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/testbss.asm	/^void *$/;"	l
void	obj/user/testbss.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testbss.asm	/^void$/;"	l
width	obj/user/testbss.asm	/^				width = 0;$/;"	d
width	obj/user/testbss.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/testfdsharing.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/testfdsharing.asm	/^Disassembly of section .text:$/;"	l
_pgfault_handler	obj/user/testfdsharing.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	obj/user/testfdsharing.asm	/^_pgfault_upcall:$/;"	l
_start	obj/user/testfdsharing.asm	/^_start:$/;"	l
addr	obj/user/testfdsharing.asm	/^	addr = (void *)ROUNDDOWN(addr, PGSIZE);$/;"	d
altflag	obj/user/testfdsharing.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testfdsharing.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/testfdsharing.asm	/^args_exist:$/;"	l
base	obj/user/testfdsharing.asm	/^			base = 10;$/;"	d
base	obj/user/testfdsharing.asm	/^			base = 16;$/;"	d
base	obj/user/testfdsharing.asm	/^			base = 8;$/;"	d
base	obj/user/testfdsharing.asm	/^		base = 10;$/;"	d
binaryname	obj/user/testfdsharing.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/testfdsharing.asm	/^	buf = vbuf;$/;"	d
c	obj/user/testfdsharing.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/testfdsharing.asm	/^				ch = *fmt;$/;"	d
char	obj/user/testfdsharing.asm	/^char *$/;"	l
char	obj/user/testfdsharing.asm	/^char buf[512], buf2[512];$/;"	l
clrflag	obj/user/testfdsharing.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/testfdsharing.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/testfdsharing.asm	/^				color = 0;$/;"	d
color	obj/user/testfdsharing.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/testfdsharing.asm	/^	colorswitch:$/;"	l
const	obj/user/testfdsharing.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testfdsharing.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/testfdsharing.asm	/^	d = dst;$/;"	d
default	obj/user/testfdsharing.asm	/^		default:$/;"	l
dig	obj/user/testfdsharing.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testfdsharing.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testfdsharing.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/testfdsharing.asm	/^	dst_in = dst;$/;"	d
e	obj/user/testfdsharing.asm	/^	e = &envs[ENVX(envid)];$/;"	d
envid_t	obj/user/testfdsharing.asm	/^envid_t$/;"	l
err	obj/user/testfdsharing.asm	/^				err = -err;$/;"	d
err	obj/user/testfdsharing.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testfdsharing.asm	/^    err:$/;"	l
err	obj/user/testfdsharing.asm	/^err:$/;"	l
err1	obj/user/testfdsharing.asm	/^    err1:$/;"	l
err2	obj/user/testfdsharing.asm	/^    err2:$/;"	l
err3	obj/user/testfdsharing.asm	/^    err3:$/;"	l
fd	obj/user/testfdsharing.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testfdsharing.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/testfdsharing.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/testfdsharing.asm	/^int $/;"	l
int	obj/user/testfdsharing.asm	/^int color;$/;"	l
int	obj/user/testfdsharing.asm	/^int$/;"	l
int32_t	obj/user/testfdsharing.asm	/^int32_t$/;"	l
lflag	obj/user/testfdsharing.asm	/^		lflag = 0;$/;"	d
long	obj/user/testfdsharing.asm	/^long$/;"	l
m	obj/user/testfdsharing.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testfdsharing.asm	/^		m = n - tot;$/;"	d
m	obj/user/testfdsharing.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/testfdsharing.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/testfdsharing.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/testfdsharing.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/testfdsharing.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/testfdsharing.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testfdsharing.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testfdsharing.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testfdsharing.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/testfdsharing.asm	/^		number:$/;"	l
nva	obj/user/testfdsharing.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/testfdsharing.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/testfdsharing.asm	/^				p = "(null)";$/;"	d
p	obj/user/testfdsharing.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testfdsharing.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/testfdsharing.asm	/^			padc = '-';$/;"	d
padc	obj/user/testfdsharing.asm	/^			padc = '0';$/;"	d
precision	obj/user/testfdsharing.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testfdsharing.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/testfdsharing.asm	/^		process_precision:$/;"	l
pte	obj/user/testfdsharing.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/testfdsharing.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testfdsharing.asm	/^			r = 0;$/;"	d
r	obj/user/testfdsharing.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testfdsharing.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/testfdsharing.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/testfdsharing.asm	/^	reswitch:$/;"	l
ret	obj/user/testfdsharing.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testfdsharing.asm	/^	ret = dst;$/;"	d
s	obj/user/testfdsharing.asm	/^	s = src;$/;"	d
size_t	obj/user/testfdsharing.asm	/^size_t$/;"	l
ssize_t	obj/user/testfdsharing.asm	/^ssize_t$/;"	l
static	obj/user/testfdsharing.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testfdsharing.asm	/^static __inline uint64_t read_tsc(void) __attribute__((always_inline));$/;"	l
static	obj/user/testfdsharing.asm	/^static __inline void$/;"	l
static	obj/user/testfdsharing.asm	/^static int$/;"	l
static	obj/user/testfdsharing.asm	/^static long long$/;"	l
static	obj/user/testfdsharing.asm	/^static ssize_t$/;"	l
static	obj/user/testfdsharing.asm	/^static unsigned long long$/;"	l
static	obj/user/testfdsharing.asm	/^static void$/;"	l
thisenv	obj/user/testfdsharing.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testfdsharing.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/testfdsharing.asm	/^unsigned int$/;"	l
va	obj/user/testfdsharing.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/testfdsharing.asm	/^void *$/;"	l
void	obj/user/testfdsharing.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testfdsharing.asm	/^void$/;"	l
width	obj/user/testfdsharing.asm	/^				width = 0;$/;"	d
width	obj/user/testfdsharing.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/testfile.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/testfile.asm	/^Disassembly of section .text:$/;"	l
FVA	obj/user/testfile.asm	/^#define FVA ((struct Fd*)0xCCCCC000)$/;"	d
_start	obj/user/testfile.asm	/^_start:$/;"	l
altflag	obj/user/testfile.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testfile.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/testfile.asm	/^args_exist:$/;"	l
base	obj/user/testfile.asm	/^			base = 10;$/;"	d
base	obj/user/testfile.asm	/^			base = 16;$/;"	d
base	obj/user/testfile.asm	/^			base = 8;$/;"	d
base	obj/user/testfile.asm	/^		base = 10;$/;"	d
binaryname	obj/user/testfile.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/testfile.asm	/^	buf = vbuf;$/;"	d
c	obj/user/testfile.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/testfile.asm	/^				ch = *fmt;$/;"	d
char	obj/user/testfile.asm	/^char *$/;"	l
clrflag	obj/user/testfile.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/testfile.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/testfile.asm	/^				color = 0;$/;"	d
color	obj/user/testfile.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/testfile.asm	/^	colorswitch:$/;"	l
const	obj/user/testfile.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testfile.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/testfile.asm	/^	d = dst;$/;"	d
default	obj/user/testfile.asm	/^		default:$/;"	l
dig	obj/user/testfile.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testfile.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testfile.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/testfile.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/testfile.asm	/^envid_t$/;"	l
err	obj/user/testfile.asm	/^				err = -err;$/;"	d
err	obj/user/testfile.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testfile.asm	/^    err:$/;"	l
err	obj/user/testfile.asm	/^err:$/;"	l
err1	obj/user/testfile.asm	/^    err1:$/;"	l
err2	obj/user/testfile.asm	/^    err2:$/;"	l
err3	obj/user/testfile.asm	/^    err3:$/;"	l
fd	obj/user/testfile.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testfile.asm	/^	fd = (struct Fd*) (0xD0000000 + r*PGSIZE);$/;"	d
fd	obj/user/testfile.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fdcopy	obj/user/testfile.asm	/^	fdcopy = *FVA;$/;"	d
fsenv	obj/user/testfile.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testfile.asm	/^	fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/testfile.asm	/^int $/;"	l
int	obj/user/testfile.asm	/^int color;$/;"	l
int	obj/user/testfile.asm	/^int$/;"	l
int32_t	obj/user/testfile.asm	/^int32_t$/;"	l
lflag	obj/user/testfile.asm	/^		lflag = 0;$/;"	d
long	obj/user/testfile.asm	/^long$/;"	l
m	obj/user/testfile.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testfile.asm	/^		m = n - tot;$/;"	d
m	obj/user/testfile.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/testfile.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/testfile.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/testfile.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/testfile.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/testfile.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testfile.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testfile.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testfile.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/testfile.asm	/^		number:$/;"	l
nva	obj/user/testfile.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/testfile.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/testfile.asm	/^				p = "(null)";$/;"	d
p	obj/user/testfile.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testfile.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/testfile.asm	/^			padc = '-';$/;"	d
padc	obj/user/testfile.asm	/^			padc = '0';$/;"	d
precision	obj/user/testfile.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testfile.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/testfile.asm	/^		process_precision:$/;"	l
pte	obj/user/testfile.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/testfile.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testfile.asm	/^			r = 0;$/;"	d
r	obj/user/testfile.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testfile.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/testfile.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/testfile.asm	/^	reswitch:$/;"	l
ret	obj/user/testfile.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testfile.asm	/^	ret = dst;$/;"	d
s	obj/user/testfile.asm	/^	s = src;$/;"	d
size_t	obj/user/testfile.asm	/^size_t$/;"	l
ssize_t	obj/user/testfile.asm	/^ssize_t$/;"	l
static	obj/user/testfile.asm	/^static int$/;"	l
static	obj/user/testfile.asm	/^static long long$/;"	l
static	obj/user/testfile.asm	/^static ssize_t$/;"	l
static	obj/user/testfile.asm	/^static unsigned long long$/;"	l
static	obj/user/testfile.asm	/^static void$/;"	l
thisenv	obj/user/testfile.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/testfile.asm	/^unsigned int$/;"	l
va	obj/user/testfile.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/testfile.asm	/^void *$/;"	l
void	obj/user/testfile.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testfile.asm	/^void$/;"	l
width	obj/user/testfile.asm	/^				width = 0;$/;"	d
width	obj/user/testfile.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/testkbd.asm	/^#define ASM 1$/;"	d
BUFLEN	obj/user/testkbd.asm	/^#define BUFLEN 1024$/;"	d
Disassembly	obj/user/testkbd.asm	/^Disassembly of section .text:$/;"	l
_start	obj/user/testkbd.asm	/^_start:$/;"	l
altflag	obj/user/testkbd.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testkbd.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/testkbd.asm	/^args_exist:$/;"	l
base	obj/user/testkbd.asm	/^			base = 10;$/;"	d
base	obj/user/testkbd.asm	/^			base = 16;$/;"	d
base	obj/user/testkbd.asm	/^			base = 8;$/;"	d
base	obj/user/testkbd.asm	/^		base = 10;$/;"	d
binaryname	obj/user/testkbd.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/testkbd.asm	/^		buf = readline("Type a line: ");$/;"	d
buf	obj/user/testkbd.asm	/^	buf = vbuf;$/;"	d
c	obj/user/testkbd.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testkbd.asm	/^		c = getchar();$/;"	d
ch	obj/user/testkbd.asm	/^				ch = *fmt;$/;"	d
char	obj/user/testkbd.asm	/^char *$/;"	l
clrflag	obj/user/testkbd.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/testkbd.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testkbd.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/testkbd.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
color	obj/user/testkbd.asm	/^				color = 0;$/;"	d
color	obj/user/testkbd.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/testkbd.asm	/^	colorswitch:$/;"	l
const	obj/user/testkbd.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testkbd.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/testkbd.asm	/^	d = dst;$/;"	d
default	obj/user/testkbd.asm	/^		default:$/;"	l
dig	obj/user/testkbd.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testkbd.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testkbd.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/testkbd.asm	/^	dst_in = dst;$/;"	d
echoing	obj/user/testkbd.asm	/^	echoing = iscons(0);$/;"	d
envid_t	obj/user/testkbd.asm	/^envid_t$/;"	l
err	obj/user/testkbd.asm	/^				err = -err;$/;"	d
err	obj/user/testkbd.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testkbd.asm	/^    err:$/;"	l
err	obj/user/testkbd.asm	/^err:$/;"	l
err1	obj/user/testkbd.asm	/^    err1:$/;"	l
err2	obj/user/testkbd.asm	/^    err2:$/;"	l
err3	obj/user/testkbd.asm	/^    err3:$/;"	l
fd	obj/user/testkbd.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testkbd.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/testkbd.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
i	obj/user/testkbd.asm	/^	i = 0;$/;"	d
int	obj/user/testkbd.asm	/^int $/;"	l
int	obj/user/testkbd.asm	/^int color;$/;"	l
int	obj/user/testkbd.asm	/^int$/;"	l
int32_t	obj/user/testkbd.asm	/^int32_t$/;"	l
lflag	obj/user/testkbd.asm	/^		lflag = 0;$/;"	d
long	obj/user/testkbd.asm	/^long$/;"	l
m	obj/user/testkbd.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testkbd.asm	/^		m = n - tot;$/;"	d
m	obj/user/testkbd.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/testkbd.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/testkbd.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/testkbd.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/testkbd.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/testkbd.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testkbd.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testkbd.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testkbd.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/testkbd.asm	/^		number:$/;"	l
nva	obj/user/testkbd.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/testkbd.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/testkbd.asm	/^				p = "(null)";$/;"	d
p	obj/user/testkbd.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testkbd.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/testkbd.asm	/^			padc = '-';$/;"	d
padc	obj/user/testkbd.asm	/^			padc = '0';$/;"	d
precision	obj/user/testkbd.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testkbd.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/testkbd.asm	/^		process_precision:$/;"	l
pte	obj/user/testkbd.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/testkbd.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testkbd.asm	/^			r = 0;$/;"	d
r	obj/user/testkbd.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testkbd.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/testkbd.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/testkbd.asm	/^	reswitch:$/;"	l
ret	obj/user/testkbd.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testkbd.asm	/^	ret = dst;$/;"	d
s	obj/user/testkbd.asm	/^	s = src;$/;"	d
size_t	obj/user/testkbd.asm	/^size_t$/;"	l
ssize_t	obj/user/testkbd.asm	/^ssize_t$/;"	l
static	obj/user/testkbd.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/user/testkbd.asm	/^static int$/;"	l
static	obj/user/testkbd.asm	/^static long long$/;"	l
static	obj/user/testkbd.asm	/^static ssize_t$/;"	l
static	obj/user/testkbd.asm	/^static unsigned long long$/;"	l
static	obj/user/testkbd.asm	/^static void$/;"	l
thisenv	obj/user/testkbd.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/testkbd.asm	/^unsigned int$/;"	l
va	obj/user/testkbd.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/testkbd.asm	/^void *$/;"	l
void	obj/user/testkbd.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testkbd.asm	/^void$/;"	l
width	obj/user/testkbd.asm	/^				width = 0;$/;"	d
width	obj/user/testkbd.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/testpipe.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/testpipe.asm	/^Disassembly of section .text:$/;"	l
_pgfault_handler	obj/user/testpipe.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	obj/user/testpipe.asm	/^_pgfault_upcall:$/;"	l
_start	obj/user/testpipe.asm	/^_start:$/;"	l
addr	obj/user/testpipe.asm	/^	addr = (void *)ROUNDDOWN(addr, PGSIZE);$/;"	d
altflag	obj/user/testpipe.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testpipe.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/testpipe.asm	/^args_exist:$/;"	l
base	obj/user/testpipe.asm	/^			base = 10;$/;"	d
base	obj/user/testpipe.asm	/^			base = 16;$/;"	d
base	obj/user/testpipe.asm	/^			base = 8;$/;"	d
base	obj/user/testpipe.asm	/^		base = 10;$/;"	d
binaryname	obj/user/testpipe.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testpipe.asm	/^	binaryname = "pipereadeof";$/;"	d
binaryname	obj/user/testpipe.asm	/^	binaryname = "pipewriteeof";$/;"	d
buf	obj/user/testpipe.asm	/^	buf = vbuf;$/;"	d
c	obj/user/testpipe.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/testpipe.asm	/^				ch = *fmt;$/;"	d
char	obj/user/testpipe.asm	/^char *$/;"	l
char	obj/user/testpipe.asm	/^char *msg = "Now is the time for all good men to come to the aid of their party.";$/;"	l
clrflag	obj/user/testpipe.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/testpipe.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/testpipe.asm	/^				color = 0;$/;"	d
color	obj/user/testpipe.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/testpipe.asm	/^	colorswitch:$/;"	l
const	obj/user/testpipe.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testpipe.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/testpipe.asm	/^	d = dst;$/;"	d
default	obj/user/testpipe.asm	/^		default:$/;"	l
dig	obj/user/testpipe.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testpipe.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testpipe.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/testpipe.asm	/^	dst_in = dst;$/;"	d
e	obj/user/testpipe.asm	/^	e = &envs[ENVX(envid)];$/;"	d
envid_t	obj/user/testpipe.asm	/^envid_t$/;"	l
err	obj/user/testpipe.asm	/^				err = -err;$/;"	d
err	obj/user/testpipe.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testpipe.asm	/^    err:$/;"	l
err	obj/user/testpipe.asm	/^err:$/;"	l
err1	obj/user/testpipe.asm	/^    err1:$/;"	l
err2	obj/user/testpipe.asm	/^    err2:$/;"	l
err3	obj/user/testpipe.asm	/^    err3:$/;"	l
fd	obj/user/testpipe.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testpipe.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/testpipe.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
i	obj/user/testpipe.asm	/^		i = readn(p[0], buf, sizeof buf-1);$/;"	d
int	obj/user/testpipe.asm	/^int $/;"	l
int	obj/user/testpipe.asm	/^int color;$/;"	l
int	obj/user/testpipe.asm	/^int$/;"	l
int32_t	obj/user/testpipe.asm	/^int32_t$/;"	l
lflag	obj/user/testpipe.asm	/^		lflag = 0;$/;"	d
long	obj/user/testpipe.asm	/^long$/;"	l
m	obj/user/testpipe.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testpipe.asm	/^		m = n - tot;$/;"	d
m	obj/user/testpipe.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/testpipe.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/testpipe.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/testpipe.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/testpipe.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/testpipe.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testpipe.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testpipe.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testpipe.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/testpipe.asm	/^		number:$/;"	l
nva	obj/user/testpipe.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/testpipe.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/testpipe.asm	/^				p = "(null)";$/;"	d
p	obj/user/testpipe.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testpipe.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/testpipe.asm	/^			padc = '-';$/;"	d
padc	obj/user/testpipe.asm	/^			padc = '0';$/;"	d
precision	obj/user/testpipe.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testpipe.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/testpipe.asm	/^		process_precision:$/;"	l
pte	obj/user/testpipe.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/testpipe.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testpipe.asm	/^			r = 0;$/;"	d
r	obj/user/testpipe.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testpipe.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/testpipe.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/testpipe.asm	/^	reswitch:$/;"	l
ret	obj/user/testpipe.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testpipe.asm	/^	ret = dst;$/;"	d
s	obj/user/testpipe.asm	/^	s = src;$/;"	d
size_t	obj/user/testpipe.asm	/^size_t$/;"	l
ssize_t	obj/user/testpipe.asm	/^ssize_t$/;"	l
static	obj/user/testpipe.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testpipe.asm	/^static int$/;"	l
static	obj/user/testpipe.asm	/^static long long$/;"	l
static	obj/user/testpipe.asm	/^static ssize_t$/;"	l
static	obj/user/testpipe.asm	/^static unsigned long long$/;"	l
static	obj/user/testpipe.asm	/^static void$/;"	l
thisenv	obj/user/testpipe.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpipe.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/testpipe.asm	/^unsigned int$/;"	l
va	obj/user/testpipe.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/testpipe.asm	/^void *$/;"	l
void	obj/user/testpipe.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testpipe.asm	/^void$/;"	l
width	obj/user/testpipe.asm	/^				width = 0;$/;"	d
width	obj/user/testpipe.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/testpiperace.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/testpiperace.asm	/^Disassembly of section .text:$/;"	l
_pgfault_handler	obj/user/testpiperace.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	obj/user/testpiperace.asm	/^_pgfault_upcall:$/;"	l
_start	obj/user/testpiperace.asm	/^_start:$/;"	l
addr	obj/user/testpiperace.asm	/^	addr = (void *)ROUNDDOWN(addr, PGSIZE);$/;"	d
altflag	obj/user/testpiperace.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testpiperace.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/testpiperace.asm	/^args_exist:$/;"	l
base	obj/user/testpiperace.asm	/^			base = 10;$/;"	d
base	obj/user/testpiperace.asm	/^			base = 16;$/;"	d
base	obj/user/testpiperace.asm	/^			base = 8;$/;"	d
base	obj/user/testpiperace.asm	/^		base = 10;$/;"	d
binaryname	obj/user/testpiperace.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/testpiperace.asm	/^	buf = vbuf;$/;"	d
c	obj/user/testpiperace.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/testpiperace.asm	/^				ch = *fmt;$/;"	d
char	obj/user/testpiperace.asm	/^char *$/;"	l
clrflag	obj/user/testpiperace.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/testpiperace.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/testpiperace.asm	/^				color = 0;$/;"	d
color	obj/user/testpiperace.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/testpiperace.asm	/^	colorswitch:$/;"	l
const	obj/user/testpiperace.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testpiperace.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/testpiperace.asm	/^	d = dst;$/;"	d
default	obj/user/testpiperace.asm	/^		default:$/;"	l
dig	obj/user/testpiperace.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testpiperace.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testpiperace.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/testpiperace.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/testpiperace.asm	/^envid_t$/;"	l
err	obj/user/testpiperace.asm	/^				err = -err;$/;"	d
err	obj/user/testpiperace.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testpiperace.asm	/^    err:$/;"	l
err	obj/user/testpiperace.asm	/^err:$/;"	l
err1	obj/user/testpiperace.asm	/^    err1:$/;"	l
err2	obj/user/testpiperace.asm	/^    err2:$/;"	l
err3	obj/user/testpiperace.asm	/^    err3:$/;"	l
fd	obj/user/testpiperace.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testpiperace.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/testpiperace.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/testpiperace.asm	/^int $/;"	l
int	obj/user/testpiperace.asm	/^int color;$/;"	l
int	obj/user/testpiperace.asm	/^int$/;"	l
int32_t	obj/user/testpiperace.asm	/^int32_t$/;"	l
kid	obj/user/testpiperace.asm	/^	kid = &envs[ENVX(pid)];$/;"	d
lflag	obj/user/testpiperace.asm	/^		lflag = 0;$/;"	d
long	obj/user/testpiperace.asm	/^long$/;"	l
m	obj/user/testpiperace.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testpiperace.asm	/^		m = n - tot;$/;"	d
m	obj/user/testpiperace.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
max	obj/user/testpiperace.asm	/^	max = 200;$/;"	d
n	obj/user/testpiperace.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/testpiperace.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/testpiperace.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/testpiperace.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/testpiperace.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testpiperace.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testpiperace.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testpiperace.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/testpiperace.asm	/^		number:$/;"	l
nva	obj/user/testpiperace.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/testpiperace.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/testpiperace.asm	/^				p = "(null)";$/;"	d
p	obj/user/testpiperace.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testpiperace.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/testpiperace.asm	/^			padc = '-';$/;"	d
padc	obj/user/testpiperace.asm	/^			padc = '0';$/;"	d
pid	obj/user/testpiperace.asm	/^	pid = r;$/;"	d
precision	obj/user/testpiperace.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testpiperace.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/testpiperace.asm	/^		process_precision:$/;"	l
pte	obj/user/testpiperace.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/testpiperace.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testpiperace.asm	/^			r = 0;$/;"	d
r	obj/user/testpiperace.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testpiperace.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/testpiperace.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/testpiperace.asm	/^	reswitch:$/;"	l
ret	obj/user/testpiperace.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testpiperace.asm	/^	ret = dst;$/;"	d
s	obj/user/testpiperace.asm	/^	s = src;$/;"	d
size_t	obj/user/testpiperace.asm	/^size_t$/;"	l
ssize_t	obj/user/testpiperace.asm	/^ssize_t$/;"	l
static	obj/user/testpiperace.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testpiperace.asm	/^static int$/;"	l
static	obj/user/testpiperace.asm	/^static long long$/;"	l
static	obj/user/testpiperace.asm	/^static ssize_t$/;"	l
static	obj/user/testpiperace.asm	/^static unsigned long long$/;"	l
static	obj/user/testpiperace.asm	/^static void$/;"	l
thisenv	obj/user/testpiperace.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpiperace.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/testpiperace.asm	/^unsigned int$/;"	l
va	obj/user/testpiperace.asm	/^	va = 0;$/;"	d
va	obj/user/testpiperace.asm	/^	va = fd2data(fd);$/;"	d
va	obj/user/testpiperace.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/testpiperace.asm	/^void *$/;"	l
void	obj/user/testpiperace.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testpiperace.asm	/^void$/;"	l
width	obj/user/testpiperace.asm	/^				width = 0;$/;"	d
width	obj/user/testpiperace.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/testpiperace2.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/testpiperace2.asm	/^Disassembly of section .text:$/;"	l
_pgfault_handler	obj/user/testpiperace2.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	obj/user/testpiperace2.asm	/^_pgfault_upcall:$/;"	l
_start	obj/user/testpiperace2.asm	/^_start:$/;"	l
addr	obj/user/testpiperace2.asm	/^	addr = (void *)ROUNDDOWN(addr, PGSIZE);$/;"	d
altflag	obj/user/testpiperace2.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testpiperace2.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/testpiperace2.asm	/^args_exist:$/;"	l
base	obj/user/testpiperace2.asm	/^			base = 10;$/;"	d
base	obj/user/testpiperace2.asm	/^			base = 16;$/;"	d
base	obj/user/testpiperace2.asm	/^			base = 8;$/;"	d
base	obj/user/testpiperace2.asm	/^		base = 10;$/;"	d
binaryname	obj/user/testpiperace2.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/testpiperace2.asm	/^	buf = vbuf;$/;"	d
c	obj/user/testpiperace2.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/testpiperace2.asm	/^				ch = *fmt;$/;"	d
char	obj/user/testpiperace2.asm	/^char *$/;"	l
clrflag	obj/user/testpiperace2.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/testpiperace2.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/testpiperace2.asm	/^				color = 0;$/;"	d
color	obj/user/testpiperace2.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/testpiperace2.asm	/^	colorswitch:$/;"	l
const	obj/user/testpiperace2.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testpiperace2.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/testpiperace2.asm	/^	d = dst;$/;"	d
default	obj/user/testpiperace2.asm	/^		default:$/;"	l
dig	obj/user/testpiperace2.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testpiperace2.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testpiperace2.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/testpiperace2.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/testpiperace2.asm	/^envid_t$/;"	l
err	obj/user/testpiperace2.asm	/^				err = -err;$/;"	d
err	obj/user/testpiperace2.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testpiperace2.asm	/^    err:$/;"	l
err	obj/user/testpiperace2.asm	/^err:$/;"	l
err1	obj/user/testpiperace2.asm	/^    err1:$/;"	l
err2	obj/user/testpiperace2.asm	/^    err2:$/;"	l
err3	obj/user/testpiperace2.asm	/^    err3:$/;"	l
fd	obj/user/testpiperace2.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testpiperace2.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/testpiperace2.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/testpiperace2.asm	/^int $/;"	l
int	obj/user/testpiperace2.asm	/^int color;$/;"	l
int	obj/user/testpiperace2.asm	/^int$/;"	l
int32_t	obj/user/testpiperace2.asm	/^int32_t$/;"	l
kid	obj/user/testpiperace2.asm	/^	kid = &envs[ENVX(r)];$/;"	d
lflag	obj/user/testpiperace2.asm	/^		lflag = 0;$/;"	d
long	obj/user/testpiperace2.asm	/^long$/;"	l
m	obj/user/testpiperace2.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testpiperace2.asm	/^		m = n - tot;$/;"	d
m	obj/user/testpiperace2.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/testpiperace2.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/testpiperace2.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/testpiperace2.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/testpiperace2.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/testpiperace2.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testpiperace2.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testpiperace2.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testpiperace2.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/testpiperace2.asm	/^		number:$/;"	l
nva	obj/user/testpiperace2.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/testpiperace2.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/testpiperace2.asm	/^				p = "(null)";$/;"	d
p	obj/user/testpiperace2.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testpiperace2.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/testpiperace2.asm	/^			padc = '-';$/;"	d
padc	obj/user/testpiperace2.asm	/^			padc = '0';$/;"	d
precision	obj/user/testpiperace2.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testpiperace2.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/testpiperace2.asm	/^		process_precision:$/;"	l
pte	obj/user/testpiperace2.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/testpiperace2.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testpiperace2.asm	/^			r = 0;$/;"	d
r	obj/user/testpiperace2.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testpiperace2.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/testpiperace2.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/testpiperace2.asm	/^	reswitch:$/;"	l
ret	obj/user/testpiperace2.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testpiperace2.asm	/^	ret = dst;$/;"	d
s	obj/user/testpiperace2.asm	/^	s = src;$/;"	d
size_t	obj/user/testpiperace2.asm	/^size_t$/;"	l
ssize_t	obj/user/testpiperace2.asm	/^ssize_t$/;"	l
static	obj/user/testpiperace2.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testpiperace2.asm	/^static int$/;"	l
static	obj/user/testpiperace2.asm	/^static long long$/;"	l
static	obj/user/testpiperace2.asm	/^static ssize_t$/;"	l
static	obj/user/testpiperace2.asm	/^static unsigned long long$/;"	l
static	obj/user/testpiperace2.asm	/^static void$/;"	l
thisenv	obj/user/testpiperace2.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpiperace2.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/testpiperace2.asm	/^unsigned int$/;"	l
va	obj/user/testpiperace2.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/testpiperace2.asm	/^void *$/;"	l
void	obj/user/testpiperace2.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testpiperace2.asm	/^void$/;"	l
width	obj/user/testpiperace2.asm	/^				width = 0;$/;"	d
width	obj/user/testpiperace2.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/testpteshare.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/testpteshare.asm	/^Disassembly of section .text:$/;"	l
_pgfault_handler	obj/user/testpteshare.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	obj/user/testpteshare.asm	/^_pgfault_upcall:$/;"	l
_start	obj/user/testpteshare.asm	/^_start:$/;"	l
addr	obj/user/testpteshare.asm	/^	addr = (void *)ROUNDDOWN(addr, PGSIZE);$/;"	d
altflag	obj/user/testpteshare.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testpteshare.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/testpteshare.asm	/^args_exist:$/;"	l
argv_store	obj/user/testpteshare.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
base	obj/user/testpteshare.asm	/^			base = 10;$/;"	d
base	obj/user/testpteshare.asm	/^			base = 16;$/;"	d
base	obj/user/testpteshare.asm	/^			base = 8;$/;"	d
base	obj/user/testpteshare.asm	/^		base = 10;$/;"	d
binaryname	obj/user/testpteshare.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/testpteshare.asm	/^	buf = vbuf;$/;"	d
c	obj/user/testpteshare.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/testpteshare.asm	/^				ch = *fmt;$/;"	d
char	obj/user/testpteshare.asm	/^char *$/;"	l
child	obj/user/testpteshare.asm	/^	child = r;$/;"	d
child_tf	obj/user/testpteshare.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
clrflag	obj/user/testpteshare.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/testpteshare.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/testpteshare.asm	/^				color = 0;$/;"	d
color	obj/user/testpteshare.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/testpteshare.asm	/^	colorswitch:$/;"	l
const	obj/user/testpteshare.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testpteshare.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/testpteshare.asm	/^	d = dst;$/;"	d
default	obj/user/testpteshare.asm	/^		default:$/;"	l
dig	obj/user/testpteshare.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testpteshare.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testpteshare.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/testpteshare.asm	/^	dst_in = dst;$/;"	d
e	obj/user/testpteshare.asm	/^	e = &envs[ENVX(envid)];$/;"	d
elf	obj/user/testpteshare.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
envid_t	obj/user/testpteshare.asm	/^envid_t$/;"	l
err	obj/user/testpteshare.asm	/^				err = -err;$/;"	d
err	obj/user/testpteshare.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testpteshare.asm	/^    err:$/;"	l
err	obj/user/testpteshare.asm	/^err:$/;"	l
err1	obj/user/testpteshare.asm	/^    err1:$/;"	l
err2	obj/user/testpteshare.asm	/^    err2:$/;"	l
err3	obj/user/testpteshare.asm	/^    err3:$/;"	l
error	obj/user/testpteshare.asm	/^error:$/;"	l
fd	obj/user/testpteshare.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testpteshare.asm	/^	fd = -1;$/;"	d
fd	obj/user/testpteshare.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpteshare.asm	/^	fd = r;$/;"	d
fsenv	obj/user/testpteshare.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/testpteshare.asm	/^int $/;"	l
int	obj/user/testpteshare.asm	/^int color;$/;"	l
int	obj/user/testpteshare.asm	/^int$/;"	l
int32_t	obj/user/testpteshare.asm	/^int32_t$/;"	l
lflag	obj/user/testpteshare.asm	/^		lflag = 0;$/;"	d
long	obj/user/testpteshare.asm	/^long$/;"	l
m	obj/user/testpteshare.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testpteshare.asm	/^		m = n - tot;$/;"	d
m	obj/user/testpteshare.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/testpteshare.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/testpteshare.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/testpteshare.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/testpteshare.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/testpteshare.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testpteshare.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testpteshare.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testpteshare.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/testpteshare.asm	/^		number:$/;"	l
nva	obj/user/testpteshare.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/testpteshare.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/testpteshare.asm	/^				p = "(null)";$/;"	d
p	obj/user/testpteshare.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testpteshare.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/testpteshare.asm	/^			padc = '-';$/;"	d
padc	obj/user/testpteshare.asm	/^			padc = '0';$/;"	d
perm	obj/user/testpteshare.asm	/^		perm = PTE_P | PTE_U;$/;"	d
ph	obj/user/testpteshare.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
precision	obj/user/testpteshare.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testpteshare.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/testpteshare.asm	/^		process_precision:$/;"	l
pte	obj/user/testpteshare.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/testpteshare.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testpteshare.asm	/^			r = 0;$/;"	d
r	obj/user/testpteshare.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testpteshare.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/testpteshare.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/testpteshare.asm	/^	reswitch:$/;"	l
ret	obj/user/testpteshare.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testpteshare.asm	/^	ret = dst;$/;"	d
s	obj/user/testpteshare.asm	/^	s = src;$/;"	d
size_t	obj/user/testpteshare.asm	/^size_t$/;"	l
ssize_t	obj/user/testpteshare.asm	/^ssize_t$/;"	l
static	obj/user/testpteshare.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testpteshare.asm	/^static __inline uint64_t read_tsc(void) __attribute__((always_inline));$/;"	l
static	obj/user/testpteshare.asm	/^static __inline void$/;"	l
static	obj/user/testpteshare.asm	/^static int$/;"	l
static	obj/user/testpteshare.asm	/^static long long$/;"	l
static	obj/user/testpteshare.asm	/^static ssize_t$/;"	l
static	obj/user/testpteshare.asm	/^static unsigned long long$/;"	l
static	obj/user/testpteshare.asm	/^static void$/;"	l
string_size	obj/user/testpteshare.asm	/^	string_size = 0;$/;"	d
string_store	obj/user/testpteshare.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
thisenv	obj/user/testpteshare.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpteshare.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/testpteshare.asm	/^unsigned int$/;"	l
va	obj/user/testpteshare.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/testpteshare.asm	/^void *$/;"	l
void	obj/user/testpteshare.asm	/^void childofspawn(void);$/;"	l
void	obj/user/testpteshare.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testpteshare.asm	/^void$/;"	l
width	obj/user/testpteshare.asm	/^				width = 0;$/;"	d
width	obj/user/testpteshare.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/testshell.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/testshell.asm	/^Disassembly of section .text:$/;"	l
_pgfault_handler	obj/user/testshell.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	obj/user/testshell.asm	/^_pgfault_upcall:$/;"	l
_start	obj/user/testshell.asm	/^_start:$/;"	l
addr	obj/user/testshell.asm	/^	addr = (void *)ROUNDDOWN(addr, PGSIZE);$/;"	d
altflag	obj/user/testshell.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testshell.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/testshell.asm	/^args_exist:$/;"	l
argv_store	obj/user/testshell.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
base	obj/user/testshell.asm	/^			base = 10;$/;"	d
base	obj/user/testshell.asm	/^			base = 16;$/;"	d
base	obj/user/testshell.asm	/^			base = 8;$/;"	d
base	obj/user/testshell.asm	/^		base = 10;$/;"	d
binaryname	obj/user/testshell.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/testshell.asm	/^	buf = vbuf;$/;"	d
c	obj/user/testshell.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/testshell.asm	/^				ch = *fmt;$/;"	d
char	obj/user/testshell.asm	/^char *$/;"	l
child	obj/user/testshell.asm	/^	child = r;$/;"	d
child_tf	obj/user/testshell.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
clrflag	obj/user/testshell.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/testshell.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/testshell.asm	/^				color = 0;$/;"	d
color	obj/user/testshell.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/testshell.asm	/^	colorswitch:$/;"	l
const	obj/user/testshell.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testshell.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/testshell.asm	/^	d = dst;$/;"	d
default	obj/user/testshell.asm	/^		default:$/;"	l
dig	obj/user/testshell.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testshell.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testshell.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/testshell.asm	/^	dst_in = dst;$/;"	d
e	obj/user/testshell.asm	/^	e = &envs[ENVX(envid)];$/;"	d
elf	obj/user/testshell.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
envid_t	obj/user/testshell.asm	/^envid_t$/;"	l
err	obj/user/testshell.asm	/^				err = -err;$/;"	d
err	obj/user/testshell.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testshell.asm	/^    err:$/;"	l
err	obj/user/testshell.asm	/^err:$/;"	l
err1	obj/user/testshell.asm	/^    err1:$/;"	l
err2	obj/user/testshell.asm	/^    err2:$/;"	l
err3	obj/user/testshell.asm	/^    err3:$/;"	l
error	obj/user/testshell.asm	/^error:$/;"	l
fd	obj/user/testshell.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testshell.asm	/^	fd = -1;$/;"	d
fd	obj/user/testshell.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testshell.asm	/^	fd = r;$/;"	d
fsenv	obj/user/testshell.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/testshell.asm	/^int $/;"	l
int	obj/user/testshell.asm	/^int color;$/;"	l
int	obj/user/testshell.asm	/^int$/;"	l
int32_t	obj/user/testshell.asm	/^int32_t$/;"	l
lflag	obj/user/testshell.asm	/^		lflag = 0;$/;"	d
long	obj/user/testshell.asm	/^long$/;"	l
m	obj/user/testshell.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testshell.asm	/^		m = n - tot;$/;"	d
m	obj/user/testshell.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/testshell.asm	/^		n = thisenv->env_runs;$/;"	d
n1	obj/user/testshell.asm	/^		n1 = read(rfd, &c1, 1);$/;"	d
n2	obj/user/testshell.asm	/^		n2 = read(kfd, &c2, 1);$/;"	d
newfd	obj/user/testshell.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nloff	obj/user/testshell.asm	/^			nloff = off+1;$/;"	d
nloff	obj/user/testshell.asm	/^	nloff = 0;$/;"	d
nn	obj/user/testshell.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/testshell.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/testshell.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testshell.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testshell.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testshell.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/testshell.asm	/^		number:$/;"	l
nva	obj/user/testshell.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/testshell.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/testshell.asm	/^				p = "(null)";$/;"	d
p	obj/user/testshell.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testshell.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/testshell.asm	/^			padc = '-';$/;"	d
padc	obj/user/testshell.asm	/^			padc = '0';$/;"	d
perm	obj/user/testshell.asm	/^		perm = PTE_P | PTE_U;$/;"	d
ph	obj/user/testshell.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
precision	obj/user/testshell.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testshell.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/testshell.asm	/^		process_precision:$/;"	l
pte	obj/user/testshell.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/testshell.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testshell.asm	/^			r = 0;$/;"	d
r	obj/user/testshell.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testshell.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/testshell.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/testshell.asm	/^	reswitch:$/;"	l
ret	obj/user/testshell.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testshell.asm	/^	ret = dst;$/;"	d
rfd	obj/user/testshell.asm	/^	rfd = pfds[0];$/;"	d
s	obj/user/testshell.asm	/^	s = src;$/;"	d
size_t	obj/user/testshell.asm	/^size_t$/;"	l
ssize_t	obj/user/testshell.asm	/^ssize_t$/;"	l
static	obj/user/testshell.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testshell.asm	/^static __inline uint64_t read_tsc(void) __attribute__((always_inline));$/;"	l
static	obj/user/testshell.asm	/^static __inline void$/;"	l
static	obj/user/testshell.asm	/^static int$/;"	l
static	obj/user/testshell.asm	/^static long long$/;"	l
static	obj/user/testshell.asm	/^static ssize_t$/;"	l
static	obj/user/testshell.asm	/^static unsigned long long$/;"	l
static	obj/user/testshell.asm	/^static void$/;"	l
string_size	obj/user/testshell.asm	/^	string_size = 0;$/;"	d
string_store	obj/user/testshell.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
thisenv	obj/user/testshell.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testshell.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/testshell.asm	/^unsigned int$/;"	l
va	obj/user/testshell.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/testshell.asm	/^void *$/;"	l
void	obj/user/testshell.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testshell.asm	/^void wrong(int, int, int);$/;"	l
void	obj/user/testshell.asm	/^void$/;"	l
wfd	obj/user/testshell.asm	/^	wfd = pfds[1];$/;"	d
width	obj/user/testshell.asm	/^				width = 0;$/;"	d
width	obj/user/testshell.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/testtime.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/testtime.asm	/^Disassembly of section .text:$/;"	l
_start	obj/user/testtime.asm	/^_start:$/;"	l
altflag	obj/user/testtime.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testtime.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/testtime.asm	/^args_exist:$/;"	l
base	obj/user/testtime.asm	/^			base = 10;$/;"	d
base	obj/user/testtime.asm	/^			base = 16;$/;"	d
base	obj/user/testtime.asm	/^			base = 8;$/;"	d
base	obj/user/testtime.asm	/^		base = 10;$/;"	d
binaryname	obj/user/testtime.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/testtime.asm	/^	buf = vbuf;$/;"	d
c	obj/user/testtime.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/testtime.asm	/^				ch = *fmt;$/;"	d
char	obj/user/testtime.asm	/^char *$/;"	l
clrflag	obj/user/testtime.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/testtime.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/testtime.asm	/^				color = 0;$/;"	d
color	obj/user/testtime.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/testtime.asm	/^	colorswitch:$/;"	l
const	obj/user/testtime.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testtime.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/testtime.asm	/^	d = dst;$/;"	d
default	obj/user/testtime.asm	/^		default:$/;"	l
dig	obj/user/testtime.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testtime.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testtime.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/testtime.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/testtime.asm	/^envid_t$/;"	l
err	obj/user/testtime.asm	/^				err = -err;$/;"	d
err	obj/user/testtime.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testtime.asm	/^    err:$/;"	l
err	obj/user/testtime.asm	/^err:$/;"	l
err1	obj/user/testtime.asm	/^    err1:$/;"	l
err2	obj/user/testtime.asm	/^    err2:$/;"	l
err3	obj/user/testtime.asm	/^    err3:$/;"	l
fd	obj/user/testtime.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testtime.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/testtime.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/testtime.asm	/^int $/;"	l
int	obj/user/testtime.asm	/^int color;$/;"	l
int	obj/user/testtime.asm	/^int$/;"	l
int32_t	obj/user/testtime.asm	/^int32_t$/;"	l
lflag	obj/user/testtime.asm	/^		lflag = 0;$/;"	d
long	obj/user/testtime.asm	/^long$/;"	l
m	obj/user/testtime.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testtime.asm	/^		m = n - tot;$/;"	d
m	obj/user/testtime.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/testtime.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/testtime.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/testtime.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/testtime.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/testtime.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testtime.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testtime.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testtime.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/testtime.asm	/^		number:$/;"	l
nva	obj/user/testtime.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/testtime.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/testtime.asm	/^				p = "(null)";$/;"	d
p	obj/user/testtime.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testtime.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/testtime.asm	/^			padc = '-';$/;"	d
padc	obj/user/testtime.asm	/^			padc = '0';$/;"	d
precision	obj/user/testtime.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testtime.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/testtime.asm	/^		process_precision:$/;"	l
pte	obj/user/testtime.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/testtime.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testtime.asm	/^			r = 0;$/;"	d
r	obj/user/testtime.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testtime.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/testtime.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/testtime.asm	/^	reswitch:$/;"	l
ret	obj/user/testtime.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testtime.asm	/^	ret = dst;$/;"	d
s	obj/user/testtime.asm	/^	s = src;$/;"	d
size_t	obj/user/testtime.asm	/^size_t$/;"	l
ssize_t	obj/user/testtime.asm	/^ssize_t$/;"	l
static	obj/user/testtime.asm	/^static __inline uint64_t read_tsc(void) __attribute__((always_inline));$/;"	l
static	obj/user/testtime.asm	/^static __inline void$/;"	l
static	obj/user/testtime.asm	/^static int$/;"	l
static	obj/user/testtime.asm	/^static long long$/;"	l
static	obj/user/testtime.asm	/^static ssize_t$/;"	l
static	obj/user/testtime.asm	/^static unsigned long long$/;"	l
static	obj/user/testtime.asm	/^static void$/;"	l
thisenv	obj/user/testtime.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/testtime.asm	/^unsigned int$/;"	l
va	obj/user/testtime.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/testtime.asm	/^void *$/;"	l
void	obj/user/testtime.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testtime.asm	/^void$/;"	l
width	obj/user/testtime.asm	/^				width = 0;$/;"	d
width	obj/user/testtime.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/yield.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/yield.asm	/^Disassembly of section .text:$/;"	l
_start	obj/user/yield.asm	/^_start:$/;"	l
altflag	obj/user/yield.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/yield.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/yield.asm	/^args_exist:$/;"	l
base	obj/user/yield.asm	/^			base = 10;$/;"	d
base	obj/user/yield.asm	/^			base = 16;$/;"	d
base	obj/user/yield.asm	/^			base = 8;$/;"	d
base	obj/user/yield.asm	/^		base = 10;$/;"	d
binaryname	obj/user/yield.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/yield.asm	/^	buf = vbuf;$/;"	d
c	obj/user/yield.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/yield.asm	/^				ch = *fmt;$/;"	d
char	obj/user/yield.asm	/^char *$/;"	l
clrflag	obj/user/yield.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/yield.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/yield.asm	/^				color = 0;$/;"	d
color	obj/user/yield.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/yield.asm	/^	colorswitch:$/;"	l
const	obj/user/yield.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/yield.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/yield.asm	/^	d = dst;$/;"	d
default	obj/user/yield.asm	/^		default:$/;"	l
dig	obj/user/yield.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/yield.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/yield.asm	/^envid_t$/;"	l
err	obj/user/yield.asm	/^				err = -err;$/;"	d
err	obj/user/yield.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/yield.asm	/^    err:$/;"	l
err	obj/user/yield.asm	/^err:$/;"	l
err1	obj/user/yield.asm	/^    err1:$/;"	l
err2	obj/user/yield.asm	/^    err2:$/;"	l
err3	obj/user/yield.asm	/^    err3:$/;"	l
fd	obj/user/yield.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/yield.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/yield.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/yield.asm	/^int $/;"	l
int	obj/user/yield.asm	/^int color;$/;"	l
int	obj/user/yield.asm	/^int$/;"	l
int32_t	obj/user/yield.asm	/^int32_t$/;"	l
lflag	obj/user/yield.asm	/^		lflag = 0;$/;"	d
long	obj/user/yield.asm	/^long$/;"	l
m	obj/user/yield.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/yield.asm	/^		m = n - tot;$/;"	d
m	obj/user/yield.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/yield.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/yield.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/yield.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/yield.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/yield.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/yield.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/yield.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/yield.asm	/^		number:$/;"	l
nva	obj/user/yield.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/yield.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/yield.asm	/^				p = "(null)";$/;"	d
p	obj/user/yield.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/yield.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/yield.asm	/^			padc = '-';$/;"	d
padc	obj/user/yield.asm	/^			padc = '0';$/;"	d
precision	obj/user/yield.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/yield.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/yield.asm	/^		process_precision:$/;"	l
pte	obj/user/yield.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/yield.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/yield.asm	/^			r = 0;$/;"	d
r	obj/user/yield.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/yield.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/yield.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/yield.asm	/^	reswitch:$/;"	l
ret	obj/user/yield.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/yield.asm	/^	ret = dst;$/;"	d
s	obj/user/yield.asm	/^	s = src;$/;"	d
size_t	obj/user/yield.asm	/^size_t$/;"	l
ssize_t	obj/user/yield.asm	/^ssize_t$/;"	l
static	obj/user/yield.asm	/^static int$/;"	l
static	obj/user/yield.asm	/^static long long$/;"	l
static	obj/user/yield.asm	/^static ssize_t$/;"	l
static	obj/user/yield.asm	/^static unsigned long long$/;"	l
static	obj/user/yield.asm	/^static void$/;"	l
thisenv	obj/user/yield.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/yield.asm	/^unsigned int$/;"	l
va	obj/user/yield.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/yield.asm	/^void *$/;"	l
void	obj/user/yield.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/yield.asm	/^void$/;"	l
width	obj/user/yield.asm	/^				width = 0;$/;"	d
width	obj/user/yield.asm	/^				width = precision, precision = -1;$/;"	d
umain	user/badsegment.c	/^umain(int argc, char **argv)$/;"	f
umain	user/breakpoint.c	/^umain(int argc, char **argv)$/;"	f
umain	user/buggyhello.c	/^umain(int argc, char **argv)$/;"	f
hello	user/buggyhello2.c	/^const char *hello = "hello, world\\n";$/;"	v
umain	user/buggyhello2.c	/^umain(int argc, char **argv)$/;"	f
buf	user/cat.c	/^char buf[8192];$/;"	v
cat	user/cat.c	/^cat(int f, char *s)$/;"	f
umain	user/cat.c	/^umain(int argc, char **argv)$/;"	f
umain	user/divzero.c	/^umain(int argc, char **argv)$/;"	f
zero	user/divzero.c	/^int zero;$/;"	v
dumbfork	user/dumbfork.c	/^dumbfork(void)$/;"	f
duppage	user/dumbfork.c	/^duppage(envid_t dstenv, void *addr)$/;"	f
umain	user/dumbfork.c	/^umain(int argc, char **argv)$/;"	f
umain	user/echo.c	/^umain(int argc, char **argv)$/;"	f
BUFFSIZE	user/echosrv.c	7;"	d	file:
MAXPENDING	user/echosrv.c	8;"	d	file:
PORT	user/echosrv.c	5;"	d	file:
die	user/echosrv.c	/^die(char *m)$/;"	f	file:
handle_client	user/echosrv.c	/^handle_client(int sock)$/;"	f
umain	user/echosrv.c	/^umain(int argc, char **argv)$/;"	f
BUFFSIZE	user/echotest.c	5;"	d	file:
IPADDR	user/echotest.c	6;"	d	file:
PORT	user/echotest.c	7;"	d	file:
die	user/echotest.c	/^die(char *m)$/;"	f	file:
msg	user/echotest.c	/^const char *msg = "Hello world!\\n";$/;"	v
umain	user/echotest.c	/^void umain(int argc, char **argv)$/;"	f
umain	user/evilhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/fairness.c	/^umain(int argc, char **argv)$/;"	f
handler	user/faultalloc.c	/^handler(struct UTrapframe *utf)$/;"	f
umain	user/faultalloc.c	/^umain(int argc, char **argv)$/;"	f
handler	user/faultallocbad.c	/^handler(struct UTrapframe *utf)$/;"	f
umain	user/faultallocbad.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultbadhandler.c	/^umain(int argc, char **argv)$/;"	f
handler	user/faultdie.c	/^handler(struct UTrapframe *utf)$/;"	f
umain	user/faultdie.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultevilhandler.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultnostack.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultread.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultreadkernel.c	/^umain(int argc, char **argv)$/;"	f
CHECK	user/faultregs.c	43;"	d	file:
CHECK	user/faultregs.c	65;"	d	file:
LOAD_REGS	user/faultregs.c	23;"	d	file:
SAVE_REGS	user/faultregs.c	13;"	d	file:
after	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:	file:
before	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:regs	file:
check_regs	user/faultregs.c	/^check_regs(struct regs* a, const char *an, struct regs* b, const char *bn,$/;"	f	file:
during	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:	file:
eflags	user/faultregs.c	/^	uint32_t eflags;$/;"	m	struct:regs	file:
eip	user/faultregs.c	/^	uintptr_t eip;$/;"	m	struct:regs	file:
esp	user/faultregs.c	/^	uintptr_t esp;$/;"	m	struct:regs	file:
pgfault	user/faultregs.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:
regs	user/faultregs.c	/^	struct PushRegs regs;$/;"	m	struct:regs	typeref:struct:regs::PushRegs	file:
regs	user/faultregs.c	/^struct regs$/;"	s	file:
umain	user/faultregs.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultwrite.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultwritekernel.c	/^umain(int argc, char **argv)$/;"	f
DEPTH	user/forktree.c	5;"	d	file:
forkchild	user/forktree.c	/^forkchild(const char *cur, char branch)$/;"	f
forktree	user/forktree.c	/^forktree(const char *cur)$/;"	f
umain	user/forktree.c	/^umain(int argc, char **argv)$/;"	f
umain	user/hello.c	/^umain(int argc, char **argv)$/;"	f
BUFFSIZE	user/httpd.c	11;"	d	file:
E_BAD_REQ	user/httpd.c	9;"	d	file:
HTTP_VERSION	user/httpd.c	7;"	d	file:
MAXPENDING	user/httpd.c	12;"	d	file:
PORT	user/httpd.c	5;"	d	file:
VERSION	user/httpd.c	6;"	d	file:
code	user/httpd.c	/^	int code;$/;"	m	struct:error_messages	file:
code	user/httpd.c	/^	int code;$/;"	m	struct:responce_header	file:
die	user/httpd.c	/^die(char *m)$/;"	f	file:
error_messages	user/httpd.c	/^struct error_messages {$/;"	s	file:
errors	user/httpd.c	/^struct error_messages errors[] = {$/;"	v	typeref:struct:error_messages
handle_client	user/httpd.c	/^handle_client(int sock)$/;"	f	file:
header	user/httpd.c	/^	char *header;$/;"	m	struct:responce_header	file:
headers	user/httpd.c	/^struct responce_header headers[] = {$/;"	v	typeref:struct:responce_header
http_request	user/httpd.c	/^struct http_request {$/;"	s	file:
http_request_parse	user/httpd.c	/^http_request_parse(struct http_request *req, char *request)$/;"	f	file:
mime_type	user/httpd.c	/^mime_type(const char *file)$/;"	f	file:
msg	user/httpd.c	/^	char *msg;$/;"	m	struct:error_messages	file:
req_free	user/httpd.c	/^req_free(struct http_request *req)$/;"	f	file:
responce_header	user/httpd.c	/^struct responce_header {$/;"	s	file:
send_content_type	user/httpd.c	/^send_content_type(struct http_request *req)$/;"	f	file:
send_data	user/httpd.c	/^send_data(struct http_request *req, int fd)$/;"	f	file:
send_error	user/httpd.c	/^send_error(struct http_request *req, int code)$/;"	f	file:
send_file	user/httpd.c	/^send_file(struct http_request *req)$/;"	f	file:
send_header	user/httpd.c	/^send_header(struct http_request *req, int code)$/;"	f	file:
send_header_fin	user/httpd.c	/^send_header_fin(struct http_request *req)$/;"	f	file:
send_size	user/httpd.c	/^send_size(struct http_request *req, off_t size)$/;"	f	file:
sock	user/httpd.c	/^	int sock;$/;"	m	struct:http_request	file:
umain	user/httpd.c	/^umain(int argc, char **argv)$/;"	f
url	user/httpd.c	/^	char *url;$/;"	m	struct:http_request	file:
version	user/httpd.c	/^	char *version;$/;"	m	struct:http_request	file:
umain	user/icode.c	/^umain(int argc, char **argv)$/;"	f
umain	user/idle.c	/^umain(int argc, char **argv)$/;"	f
bss	user/init.c	/^char bss[6000];$/;"	v
data	user/init.c	/^} data = {$/;"	v	typeref:struct:__anon41
msg1	user/init.c	/^	char msg1[5000];$/;"	m	struct:__anon41	file:
msg2	user/init.c	/^	char msg2[1000];$/;"	m	struct:__anon41	file:
sum	user/init.c	/^sum(const char *s, int n)$/;"	f
umain	user/init.c	/^umain(int argc, char **argv)$/;"	f
umain	user/initsh.c	/^umain(int argc, char **argv)$/;"	f
flag	user/ls.c	/^int flag[256];$/;"	v
ls	user/ls.c	/^ls(const char *path, const char *prefix)$/;"	f
ls1	user/ls.c	/^ls1(const char *prefix, bool isdir, off_t size, const char *name)$/;"	f
lsdir	user/ls.c	/^lsdir(const char *path, const char *prefix)$/;"	f
umain	user/ls.c	/^umain(int argc, char **argv)$/;"	f
usage	user/ls.c	/^usage(void)$/;"	f
umain	user/lsfd.c	/^umain(int argc, char **argv)$/;"	f
usage	user/lsfd.c	/^usage(void)$/;"	f
bol	user/num.c	/^int bol = 1;$/;"	v
line	user/num.c	/^int line = 0;$/;"	v
num	user/num.c	/^num(int f, const char *s)$/;"	f
umain	user/num.c	/^umain(int argc, char **argv)$/;"	f
umain	user/pingpong.c	/^umain(int argc, char **argv)$/;"	f
umain	user/pingpongs.c	/^umain(int argc, char **argv)$/;"	f
val	user/pingpongs.c	/^uint32_t val;$/;"	v
primeproc	user/primes.c	/^primeproc(void)$/;"	f
umain	user/primes.c	/^umain(int argc, char **argv)$/;"	f
primeproc	user/primespipe.c	/^primeproc(int fd)$/;"	f
umain	user/primespipe.c	/^umain(int argc, char **argv)$/;"	f
TEMP_ADDR	user/sendpage.c	9;"	d	file:
TEMP_ADDR_CHILD	user/sendpage.c	10;"	d	file:
str1	user/sendpage.c	/^const char *str1 = "hello child environment! how are you?";$/;"	v
str2	user/sendpage.c	/^const char *str2 = "hello parent environment! I'm good.";$/;"	v
umain	user/sendpage.c	/^umain(int argc, char **argv)$/;"	f
BUFSIZ	user/sh.c	3;"	d	file:
MAXARGS	user/sh.c	20;"	d	file:
SYMBOLS	user/sh.c	194;"	d	file:
WHITESPACE	user/sh.c	193;"	d	file:
_gettoken	user/sh.c	/^_gettoken(char *s, char **p1, char **p2)$/;"	f
debug	user/sh.c	/^int debug = 0;$/;"	v
gettoken	user/sh.c	/^gettoken(char *s, char **p1)$/;"	f
runcmd	user/sh.c	/^runcmd(char* s)$/;"	f
umain	user/sh.c	/^umain(int argc, char **argv)$/;"	f
usage	user/sh.c	/^usage(void)$/;"	f
umain	user/softint.c	/^umain(int argc, char **argv)$/;"	f
umain	user/spawnhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/spawninit.c	/^umain(int argc, char **argv)$/;"	f
umain	user/spin.c	/^umain(int argc, char **argv)$/;"	f
counter	user/stresssched.c	/^volatile int counter;$/;"	v
umain	user/stresssched.c	/^umain(int argc, char **argv)$/;"	f
ARRAYSIZE	user/testbss.c	5;"	d	file:
bigarray	user/testbss.c	/^uint32_t bigarray[ARRAYSIZE];$/;"	v
umain	user/testbss.c	/^umain(int argc, char **argv)$/;"	f
buf	user/testfdsharing.c	/^char buf[512], buf2[512];$/;"	v
buf2	user/testfdsharing.c	/^char buf[512], buf2[512];$/;"	v
umain	user/testfdsharing.c	/^umain(int argc, char **argv)$/;"	f
FVA	user/testfile.c	5;"	d	file:
msg	user/testfile.c	/^const char *msg = "This is the NEW message of the day!\\n\\n";$/;"	v
umain	user/testfile.c	/^umain(int argc, char **argv)$/;"	f
xopen	user/testfile.c	/^xopen(const char *path, int mode)$/;"	f	file:
umain	user/testkbd.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testmalloc.c	/^umain(int argc, char **argv)$/;"	f
msg	user/testpipe.c	/^char *msg = "Now is the time for all good men to come to the aid of their party.";$/;"	v
umain	user/testpipe.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testpiperace.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testpiperace2.c	/^umain(int argc, char **argv)$/;"	f
VA	user/testptelibrary.c	3;"	d	file:
childofspawn	user/testptelibrary.c	/^childofspawn(void)$/;"	f
msg	user/testptelibrary.c	/^const char *msg = "hello, world\\n";$/;"	v
msg2	user/testptelibrary.c	/^const char *msg2 = "goodbye, world\\n";$/;"	v
umain	user/testptelibrary.c	/^umain(int argc, char **argv)$/;"	f
VA	user/testpteshare.c	4;"	d	file:
childofspawn	user/testpteshare.c	/^childofspawn(void)$/;"	f
msg	user/testpteshare.c	/^const char *msg = "hello, world\\n";$/;"	v
msg2	user/testpteshare.c	/^const char *msg2 = "goodbye, world\\n";$/;"	v
umain	user/testpteshare.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testshell.c	/^umain(int argc, char **argv)$/;"	f
wrong	user/testshell.c	/^wrong(int rfd, int kfd, int off)$/;"	f
sleep	user/testtime.c	/^sleep(int sec)$/;"	f
umain	user/testtime.c	/^umain(int argc, char **argv)$/;"	f
umain	user/writemotd.c	/^umain(int argc, char **argv)$/;"	f
umain	user/yield.c	/^umain(int argc, char **argv)$/;"	f
