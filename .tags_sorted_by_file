!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
-format	GNUmakefile	/^	git archive --format=tar HEAD | gzip > lab$(LAB)-handin.tar.gz$/;"	m
-prefix	GNUmakefile	/^	git archive --prefix=lab$(LAB)\/ --format=tar HEAD | gzip > lab$(LAB)-handin.tar.gz$/;"	m
AR	GNUmakefile	/^AR	:= $(GCCPREFIX)ar$/;"	m
AS	GNUmakefile	/^AS	:= $(GCCPREFIX)as$/;"	m
CC	GNUmakefile	/^CC	:= $(GCCPREFIX)gcc -pipe$/;"	m
CFLAGS	GNUmakefile	/^CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -O1 -fno-builtin -I$(TOP) -MD$/;"	m
GCCPREFIX	GNUmakefile	/^GCCPREFIX := $(shell if i386-jos-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >\/dev\/null 2>&1; \\$/;"	m
GCC_LIB	GNUmakefile	/^GCC_LIB := $(shell $(CC) $(CFLAGS) -print-libgcc-file-name)$/;"	m
GDBPORT	GNUmakefile	/^GDBPORT	:= $(shell expr `id -u` % 5000 + 25000)$/;"	m
IMAGES	GNUmakefile	/^IMAGES = $(OBJDIR)\/kern\/kernel.img$/;"	m
KERN_CFLAGS	GNUmakefile	/^KERN_CFLAGS := $(CFLAGS) -DJOS_KERNEL -gstabs$/;"	m
LABSETUP	GNUmakefile	/^LABSETUP ?= .\/$/;"	m
LD	GNUmakefile	/^LD	:= $(GCCPREFIX)ld$/;"	m
LDFLAGS	GNUmakefile	/^LDFLAGS := -m elf_i386$/;"	m
NATIVE_CFLAGS	GNUmakefile	/^NATIVE_CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -I$(TOP) -MD -Wall$/;"	m
NCC	GNUmakefile	/^NCC	:= gcc $(CC_VER) -pipe$/;"	m
NM	GNUmakefile	/^NM	:= $(GCCPREFIX)nm$/;"	m
OBJCOPY	GNUmakefile	/^OBJCOPY	:= $(GCCPREFIX)objcopy$/;"	m
OBJDIR	GNUmakefile	/^OBJDIR := obj$/;"	m
OBJDIRS	GNUmakefile	/^OBJDIRS :=$/;"	m
OBJDUMP	GNUmakefile	/^OBJDUMP	:= $(GCCPREFIX)objdump$/;"	m
PERL	GNUmakefile	/^PERL	:= perl$/;"	m
QEMU	GNUmakefile	/^QEMU := $(shell if which qemu > \/dev\/null; \\$/;"	m
QEMUOPTS	GNUmakefile	/^QEMUOPTS = -hda $(OBJDIR)\/kern\/kernel.img -serial mon:stdio -gdb tcp::$(GDBPORT)$/;"	m
TAR	GNUmakefile	/^TAR	:= gtar$/;"	m
TOP	GNUmakefile	/^TOP = .$/;"	m
ULDFLAGS	GNUmakefile	/^ULDFLAGS := -T user\/user.ld$/;"	m
USER_CFLAGS	GNUmakefile	/^USER_CFLAGS := $(CFLAGS) -DJOS_USER -gstabs$/;"	m
WEBSUB	GNUmakefile	/^WEBSUB = https:\/\/ccutler.scripts.mit.edu\/6.828\/handin.py$/;"	m
gdt	boot/boot.S	/^gdt:$/;"	l
gdtdesc	boot/boot.S	/^gdtdesc:$/;"	l
protcseg	boot/boot.S	/^protcseg:$/;"	l
spin	boot/boot.S	/^spin:$/;"	l
start	boot/boot.S	/^start:$/;"	l
ELFHDR	boot/main.c	33;"	d	file:
SECTSIZE	boot/main.c	32;"	d	file:
bootmain	boot/main.c	/^bootmain(void)$/;"	f
readsect	boot/main.c	/^readsect(void *dst, uint32_t offset)$/;"	f
readseg	boot/main.c	/^readseg(uint32_t pa, uint32_t count, uint32_t offset)$/;"	f
waitdisk	boot/main.c	/^waitdisk(void)$/;"	f
V	conf/env.mk	/^V = @$/;"	m
LAB	conf/lab.mk	/^LAB=1$/;"	m
PACKAGEDATE	conf/lab.mk	/^PACKAGEDATE=Wed Sep 3 09:38:35 EDT 2014$/;"	m
BACKTRACE_RE	grade-lab1	/^BACKTRACE_RE = r"^ *ebp +f01[0-9a-z]{5} +eip +f0100[0-9a-z]{3} +args +([0-9a-z]+)"$/;"	v
r	grade-lab1	/^r = Runner(save("jos.out"),$/;"	v
test_backtrace_arguments	grade-lab1	/^def test_backtrace_arguments():$/;"	f
test_backtrace_count	grade-lab1	/^def test_backtrace_count():$/;"	f
test_backtrace_lines	grade-lab1	/^def test_backtrace_lines():$/;"	f
test_backtrace_symbols	grade-lab1	/^def test_backtrace_symbols():$/;"	f
test_jos	grade-lab1	/^def test_jos():$/;"	f
test_printf	grade-lab1	/^def test_printf():$/;"	f
COLORS	gradelib.py	/^COLORS = {"default": "\\033[0m", "red": "\\033[31m", "green": "\\033[32m"}$/;"	v
CURRENT_TEST	gradelib.py	/^CURRENT_TEST = None$/;"	v
GDBClient	gradelib.py	/^class GDBClient(object):$/;"	c
MAKE_TIMESTAMP	gradelib.py	/^MAKE_TIMESTAMP = 0$/;"	v
QEMU	gradelib.py	/^class QEMU(object):$/;"	c
Runner	gradelib.py	/^class Runner():$/;"	c
TESTS	gradelib.py	/^TESTS = []$/;"	v
TerminateTest	gradelib.py	/^class TerminateTest(Exception):$/;"	c
_GDBPORT	gradelib.py	/^    _GDBPORT = None$/;"	v	class:QEMU
__all__	gradelib.py	/^__all__ = []$/;"	v
__init__	gradelib.py	/^    def __init__(self, *default_monitors):$/;"	m	class:Runner
__init__	gradelib.py	/^    def __init__(self, *make_args):$/;"	m	class:QEMU
__init__	gradelib.py	/^    def __init__(self, port, timeout=15):$/;"	m	class:GDBClient
__monitor_start	gradelib.py	/^    def __monitor_start(self, output):$/;"	m	class:Runner	file:
__react	gradelib.py	/^    def __react(self, reactors, timeout):$/;"	m	class:Runner	file:
__send	gradelib.py	/^    def __send(self, cmd):$/;"	m	class:GDBClient	file:
__send_break	gradelib.py	/^    def __send_break(self):$/;"	m	class:GDBClient	file:
assert_equal	gradelib.py	/^def assert_equal(got, expect, msg=""):$/;"	f
assert_lines_match	gradelib.py	/^def assert_lines_match(text, *regexps, **kw):$/;"	f
assert_lines_match_kw	gradelib.py	/^    def assert_lines_match_kw(no=[]):$/;"	f	function:assert_lines_match
breakpoint	gradelib.py	/^    def breakpoint(self, addr):$/;"	m	class:GDBClient
call_on_line	gradelib.py	/^def call_on_line(regexp, callback):$/;"	f
close	gradelib.py	/^    def close(self):$/;"	m	class:GDBClient
color	gradelib.py	/^def color(name, text):$/;"	f
cont	gradelib.py	/^    def cont(self):$/;"	m	class:GDBClient
end_part	gradelib.py	/^def end_part(name):$/;"	f
fileno	gradelib.py	/^    def fileno(self):$/;"	f
fileno	gradelib.py	/^    def fileno(self):$/;"	m	class:GDBClient
get_current_test	gradelib.py	/^def get_current_test():$/;"	f
get_gdb_port	gradelib.py	/^    def get_gdb_port():$/;"	f
handle_output	gradelib.py	/^        def handle_output(output):$/;"	f	function:call_on_line.setup_call_on_line
handle_read	gradelib.py	/^    def handle_read(self):$/;"	f
handle_read	gradelib.py	/^    def handle_read(self):$/;"	m	class:GDBClient
kill	gradelib.py	/^    def kill(self):$/;"	f
make	gradelib.py	/^def make(*target):$/;"	f
match	gradelib.py	/^    def match(self, *args, **kwargs):$/;"	m	class:Runner
maybe_unlink	gradelib.py	/^def maybe_unlink(*paths):$/;"	f
post_make	gradelib.py	/^def post_make():$/;"	f
pre_make	gradelib.py	/^def pre_make():$/;"	f
register_test	gradelib.py	/^    def register_test(fn, title=title):$/;"	f	function:test
reset_fs	gradelib.py	/^def reset_fs():$/;"	f
run_qemu	gradelib.py	/^    def run_qemu(self, *monitors, **kw):$/;"	m	class:Runner
run_qemu_kw	gradelib.py	/^        def run_qemu_kw(target_base="qemu", make_args=[], timeout=30):$/;"	f	function:Runner.run_qemu
run_test	gradelib.py	/^        def run_test():$/;"	f	function:test.register_test
run_tests	gradelib.py	/^def run_tests():$/;"	f
save	gradelib.py	/^def save(path):$/;"	f
save_on_finish	gradelib.py	/^    def save_on_finish(fail):$/;"	f	function:save
setup_breakpoint	gradelib.py	/^    def setup_breakpoint(runner):$/;"	f	function:stop_breakpoint
setup_call_on_line	gradelib.py	/^    def setup_call_on_line(runner):$/;"	f	function:call_on_line
setup_save	gradelib.py	/^    def setup_save(runner):$/;"	f	function:save
show_command	gradelib.py	/^def show_command(cmd):$/;"	f
show_part	gradelib.py	/^    def show_part():$/;"	f	function:end_part
stop	gradelib.py	/^    def stop(line):$/;"	f	function:stop_on_line
stop_breakpoint	gradelib.py	/^def stop_breakpoint(addr):$/;"	f
stop_on_line	gradelib.py	/^def stop_on_line(regexp):$/;"	f
test	gradelib.py	/^def test(points, title=None, parent=None):$/;"	f
user_test	gradelib.py	/^    def user_test(self, binary, *monitors, **kw):$/;"	m	class:Runner
wait	gradelib.py	/^    def wait(self):$/;"	f
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
JOS_INC_ASSERT_H	inc/assert.h	4;"	d
assert	inc/assert.h	14;"	d
panic	inc/assert.h	12;"	d
static_assert	inc/assert.h	18;"	d
warn	inc/assert.h	11;"	d
ELF_MAGIC	inc/elf.h	4;"	d
ELF_PROG_FLAG_EXEC	inc/elf.h	52;"	d
ELF_PROG_FLAG_READ	inc/elf.h	54;"	d
ELF_PROG_FLAG_WRITE	inc/elf.h	53;"	d
ELF_PROG_LOAD	inc/elf.h	49;"	d
ELF_SHN_UNDEF	inc/elf.h	63;"	d
ELF_SHT_NULL	inc/elf.h	57;"	d
ELF_SHT_PROGBITS	inc/elf.h	58;"	d
ELF_SHT_STRTAB	inc/elf.h	60;"	d
ELF_SHT_SYMTAB	inc/elf.h	59;"	d
Elf	inc/elf.h	/^struct Elf {$/;"	s
JOS_INC_ELF_H	inc/elf.h	2;"	d
Proghdr	inc/elf.h	/^struct Proghdr {$/;"	s
Secthdr	inc/elf.h	/^struct Secthdr {$/;"	s
e_ehsize	inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:Elf
e_elf	inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	struct:Elf
e_entry	inc/elf.h	/^	uint32_t e_entry;$/;"	m	struct:Elf
e_flags	inc/elf.h	/^	uint32_t e_flags;$/;"	m	struct:Elf
e_machine	inc/elf.h	/^	uint16_t e_machine;$/;"	m	struct:Elf
e_magic	inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	struct:Elf
e_phentsize	inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:Elf
e_phnum	inc/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:Elf
e_phoff	inc/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:Elf
e_shentsize	inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:Elf
e_shnum	inc/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:Elf
e_shoff	inc/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:Elf
e_shstrndx	inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	struct:Elf
e_type	inc/elf.h	/^	uint16_t e_type;$/;"	m	struct:Elf
e_version	inc/elf.h	/^	uint32_t e_version;$/;"	m	struct:Elf
p_align	inc/elf.h	/^	uint32_t p_align;$/;"	m	struct:Proghdr
p_filesz	inc/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:Proghdr
p_flags	inc/elf.h	/^	uint32_t p_flags;$/;"	m	struct:Proghdr
p_memsz	inc/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:Proghdr
p_offset	inc/elf.h	/^	uint32_t p_offset;$/;"	m	struct:Proghdr
p_pa	inc/elf.h	/^	uint32_t p_pa;$/;"	m	struct:Proghdr
p_type	inc/elf.h	/^	uint32_t p_type;$/;"	m	struct:Proghdr
p_va	inc/elf.h	/^	uint32_t p_va;$/;"	m	struct:Proghdr
sh_addr	inc/elf.h	/^	uint32_t sh_addr;$/;"	m	struct:Secthdr
sh_addralign	inc/elf.h	/^	uint32_t sh_addralign;$/;"	m	struct:Secthdr
sh_entsize	inc/elf.h	/^	uint32_t sh_entsize;$/;"	m	struct:Secthdr
sh_flags	inc/elf.h	/^	uint32_t sh_flags;$/;"	m	struct:Secthdr
sh_info	inc/elf.h	/^	uint32_t sh_info;$/;"	m	struct:Secthdr
sh_link	inc/elf.h	/^	uint32_t sh_link;$/;"	m	struct:Secthdr
sh_name	inc/elf.h	/^	uint32_t sh_name;$/;"	m	struct:Secthdr
sh_offset	inc/elf.h	/^	uint32_t sh_offset;$/;"	m	struct:Secthdr
sh_size	inc/elf.h	/^	uint32_t sh_size;$/;"	m	struct:Secthdr
sh_type	inc/elf.h	/^	uint32_t sh_type;$/;"	m	struct:Secthdr
E_BAD_ENV	inc/error.h	/^	E_BAD_ENV	= 2,	\/\/ Environment doesn't exist or otherwise$/;"	e	enum:__anon2
E_FAULT	inc/error.h	/^	E_FAULT		= 6,	\/\/ Memory fault$/;"	e	enum:__anon2
E_INVAL	inc/error.h	/^	E_INVAL		= 3,	\/\/ Invalid parameter$/;"	e	enum:__anon2
E_NO_FREE_ENV	inc/error.h	/^	E_NO_FREE_ENV	= 5,	\/\/ Attempt to create a new environment beyond$/;"	e	enum:__anon2
E_NO_MEM	inc/error.h	/^	E_NO_MEM	= 4,	\/\/ Request failed due to memory shortage$/;"	e	enum:__anon2
E_NO_SYS	inc/error.h	/^	E_NO_SYS	= 7,	\/\/ Unimplemented system call$/;"	e	enum:__anon2
E_UNSPECIFIED	inc/error.h	/^	E_UNSPECIFIED	= 1,	\/\/ Unspecified or unknown problem$/;"	e	enum:__anon2
JOS_INC_ERROR_H	inc/error.h	4;"	d
MAXERROR	inc/error.h	/^	MAXERROR$/;"	e	enum:__anon2
CMDBYTE	inc/kbdreg.h	60;"	d
JOS_KBDREG_H	inc/kbdreg.h	2;"	d
KBCMDP	inc/kbdreg.h	29;"	d
KBC_AUXDISABLE	inc/kbdreg.h	32;"	d
KBC_AUXECHO	inc/kbdreg.h	36;"	d
KBC_AUXENABLE	inc/kbdreg.h	33;"	d
KBC_AUXTEST	inc/kbdreg.h	34;"	d
KBC_AUXWRITE	inc/kbdreg.h	37;"	d
KBC_DISABLE	inc/kbdreg.h	66;"	d
KBC_ECHO	inc/kbdreg.h	71;"	d
KBC_ENABLE	inc/kbdreg.h	67;"	d
KBC_KBDDISABLE	inc/kbdreg.h	40;"	d
KBC_KBDECHO	inc/kbdreg.h	35;"	d
KBC_KBDENABLE	inc/kbdreg.h	41;"	d
KBC_KBDTEST	inc/kbdreg.h	39;"	d
KBC_MODEIND	inc/kbdreg.h	70;"	d
KBC_PULSE0	inc/kbdreg.h	42;"	d
KBC_PULSE1	inc/kbdreg.h	43;"	d
KBC_PULSE2	inc/kbdreg.h	44;"	d
KBC_PULSE3	inc/kbdreg.h	45;"	d
KBC_RAMREAD	inc/kbdreg.h	30;"	d
KBC_RAMWRITE	inc/kbdreg.h	31;"	d
KBC_RESEND	inc/kbdreg.h	64;"	d
KBC_RESET	inc/kbdreg.h	63;"	d
KBC_SELFTEST	inc/kbdreg.h	38;"	d
KBC_SETDEFAULT	inc/kbdreg.h	65;"	d
KBC_SETTABLE	inc/kbdreg.h	69;"	d
KBC_TYPEMATIC	inc/kbdreg.h	68;"	d
KBDATAP	inc/kbdreg.h	47;"	d
KBOUTP	inc/kbdreg.h	48;"	d
KBR_ACK	inc/kbdreg.h	76;"	d
KBR_BREAK	inc/kbdreg.h	79;"	d
KBR_ECHO	inc/kbdreg.h	81;"	d
KBR_EXTENDED	inc/kbdreg.h	74;"	d
KBR_FAILURE	inc/kbdreg.h	78;"	d
KBR_OVERRUN	inc/kbdreg.h	77;"	d
KBR_RESEND	inc/kbdreg.h	75;"	d
KBR_RSTDONE	inc/kbdreg.h	80;"	d
KBSTATP	inc/kbdreg.h	19;"	d
KBS_DIB	inc/kbdreg.h	20;"	d
KBS_IBF	inc/kbdreg.h	21;"	d
KBS_NOSEC	inc/kbdreg.h	24;"	d
KBS_OCMD	inc/kbdreg.h	23;"	d
KBS_PERR	inc/kbdreg.h	27;"	d
KBS_RERR	inc/kbdreg.h	26;"	d
KBS_TERR	inc/kbdreg.h	25;"	d
KBS_WARM	inc/kbdreg.h	22;"	d
KC8_CPU	inc/kbdreg.h	57;"	d
KC8_IGNSEC	inc/kbdreg.h	56;"	d
KC8_KDISABLE	inc/kbdreg.h	55;"	d
KC8_KENABLE	inc/kbdreg.h	59;"	d
KC8_MDISABLE	inc/kbdreg.h	54;"	d
KC8_MENABLE	inc/kbdreg.h	58;"	d
KC8_TRANS	inc/kbdreg.h	53;"	d
KEY_DEL	inc/kbdreg.h	14;"	d
KEY_DN	inc/kbdreg.h	8;"	d
KEY_END	inc/kbdreg.h	6;"	d
KEY_HOME	inc/kbdreg.h	5;"	d
KEY_INS	inc/kbdreg.h	13;"	d
KEY_LF	inc/kbdreg.h	9;"	d
KEY_PGDN	inc/kbdreg.h	12;"	d
KEY_PGUP	inc/kbdreg.h	11;"	d
KEY_RT	inc/kbdreg.h	10;"	d
KEY_UP	inc/kbdreg.h	7;"	d
K_LDCMDBYTE	inc/kbdreg.h	51;"	d
K_RDCMDBYTE	inc/kbdreg.h	50;"	d
EXTPHYSMEM	inc/memlayout.h	93;"	d
GD_KD	inc/memlayout.h	16;"	d
GD_KT	inc/memlayout.h	15;"	d
GD_TSS0	inc/memlayout.h	19;"	d
GD_UD	inc/memlayout.h	18;"	d
GD_UT	inc/memlayout.h	17;"	d
IOPHYSMEM	inc/memlayout.h	92;"	d
JOS_INC_MEMLAYOUT_H	inc/memlayout.h	2;"	d
KERNBASE	inc/memlayout.h	87;"	d
KSTACKTOP	inc/memlayout.h	96;"	d
KSTKGAP	inc/memlayout.h	98;"	d
KSTKSIZE	inc/memlayout.h	97;"	d
MMIOBASE	inc/memlayout.h	102;"	d
MMIOLIM	inc/memlayout.h	101;"	d
PFTEMP	inc/memlayout.h	137;"	d
UENVS	inc/memlayout.h	116;"	d
ULIM	inc/memlayout.h	104;"	d
UPAGES	inc/memlayout.h	114;"	d
USTABDATA	inc/memlayout.h	139;"	d
USTACKTOP	inc/memlayout.h	128;"	d
UTEMP	inc/memlayout.h	134;"	d
UTEXT	inc/memlayout.h	131;"	d
UTOP	inc/memlayout.h	123;"	d
UVPT	inc/memlayout.h	112;"	d
UXSTACKTOP	inc/memlayout.h	125;"	d
pde_t	inc/memlayout.h	/^typedef uint32_t pde_t;$/;"	t
pte_t	inc/memlayout.h	/^typedef uint32_t pte_t;$/;"	t
CR0_AM	inc/mmu.h	86;"	d
CR0_CD	inc/mmu.h	88;"	d
CR0_EM	inc/mmu.h	81;"	d
CR0_ET	inc/mmu.h	83;"	d
CR0_MP	inc/mmu.h	80;"	d
CR0_NE	inc/mmu.h	84;"	d
CR0_NW	inc/mmu.h	87;"	d
CR0_PE	inc/mmu.h	79;"	d
CR0_PG	inc/mmu.h	89;"	d
CR0_TS	inc/mmu.h	82;"	d
CR0_WP	inc/mmu.h	85;"	d
CR4_DE	inc/mmu.h	94;"	d
CR4_MCE	inc/mmu.h	92;"	d
CR4_PCE	inc/mmu.h	91;"	d
CR4_PSE	inc/mmu.h	93;"	d
CR4_PVI	inc/mmu.h	96;"	d
CR4_TSD	inc/mmu.h	95;"	d
CR4_VME	inc/mmu.h	97;"	d
FEC_PR	inc/mmu.h	123;"	d
FEC_U	inc/mmu.h	125;"	d
FEC_WR	inc/mmu.h	124;"	d
FL_AC	inc/mmu.h	117;"	d
FL_AF	inc/mmu.h	102;"	d
FL_CF	inc/mmu.h	100;"	d
FL_DF	inc/mmu.h	107;"	d
FL_ID	inc/mmu.h	120;"	d
FL_IF	inc/mmu.h	106;"	d
FL_IOPL_0	inc/mmu.h	110;"	d
FL_IOPL_1	inc/mmu.h	111;"	d
FL_IOPL_2	inc/mmu.h	112;"	d
FL_IOPL_3	inc/mmu.h	113;"	d
FL_IOPL_MASK	inc/mmu.h	109;"	d
FL_NT	inc/mmu.h	114;"	d
FL_OF	inc/mmu.h	108;"	d
FL_PF	inc/mmu.h	101;"	d
FL_RF	inc/mmu.h	115;"	d
FL_SF	inc/mmu.h	104;"	d
FL_TF	inc/mmu.h	105;"	d
FL_VIF	inc/mmu.h	118;"	d
FL_VIP	inc/mmu.h	119;"	d
FL_VM	inc/mmu.h	116;"	d
FL_ZF	inc/mmu.h	103;"	d
Gatedesc	inc/mmu.h	/^struct Gatedesc {$/;"	s
JOS_INC_MMU_H	inc/mmu.h	2;"	d
NPDENTRIES	inc/mmu.h	45;"	d
NPTENTRIES	inc/mmu.h	46;"	d
PDX	inc/mmu.h	33;"	d
PDXSHIFT	inc/mmu.h	55;"	d
PGADDR	inc/mmu.h	42;"	d
PGNUM	inc/mmu.h	30;"	d
PGOFF	inc/mmu.h	39;"	d
PGSHIFT	inc/mmu.h	49;"	d
PGSIZE	inc/mmu.h	48;"	d
PTE_A	inc/mmu.h	63;"	d
PTE_ADDR	inc/mmu.h	76;"	d
PTE_AVAIL	inc/mmu.h	70;"	d
PTE_D	inc/mmu.h	64;"	d
PTE_G	inc/mmu.h	66;"	d
PTE_P	inc/mmu.h	58;"	d
PTE_PCD	inc/mmu.h	62;"	d
PTE_PS	inc/mmu.h	65;"	d
PTE_PWT	inc/mmu.h	61;"	d
PTE_SYSCALL	inc/mmu.h	73;"	d
PTE_U	inc/mmu.h	60;"	d
PTE_W	inc/mmu.h	59;"	d
PTSHIFT	inc/mmu.h	52;"	d
PTSIZE	inc/mmu.h	51;"	d
PTX	inc/mmu.h	36;"	d
PTXSHIFT	inc/mmu.h	54;"	d
Pseudodesc	inc/mmu.h	/^struct Pseudodesc {$/;"	s
SEG	inc/mmu.h	142;"	d
SEG	inc/mmu.h	172;"	d
SEG16	inc/mmu.h	176;"	d
SEG_FAULT	inc/mmu.h	170;"	d
SEG_NULL	inc/mmu.h	139;"	d
SEG_NULL	inc/mmu.h	168;"	d
SETCALLGATE	inc/mmu.h	296;"	d
SETGATE	inc/mmu.h	282;"	d
STA_A	inc/mmu.h	189;"	d
STA_C	inc/mmu.h	186;"	d
STA_E	inc/mmu.h	185;"	d
STA_R	inc/mmu.h	188;"	d
STA_W	inc/mmu.h	187;"	d
STA_X	inc/mmu.h	184;"	d
STS_CG16	inc/mmu.h	195;"	d
STS_CG32	inc/mmu.h	201;"	d
STS_IG16	inc/mmu.h	197;"	d
STS_IG32	inc/mmu.h	202;"	d
STS_LDT	inc/mmu.h	193;"	d
STS_T16A	inc/mmu.h	192;"	d
STS_T16B	inc/mmu.h	194;"	d
STS_T32A	inc/mmu.h	199;"	d
STS_T32B	inc/mmu.h	200;"	d
STS_TG	inc/mmu.h	196;"	d
STS_TG16	inc/mmu.h	198;"	d
STS_TG32	inc/mmu.h	203;"	d
Segdesc	inc/mmu.h	/^struct Segdesc {$/;"	s
Taskstate	inc/mmu.h	/^struct Taskstate {$/;"	s
gd_args	inc/mmu.h	/^	unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:Gatedesc
gd_dpl	inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:Gatedesc
gd_off_15_0	inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:Gatedesc
gd_off_31_16	inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:Gatedesc
gd_p	inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:Gatedesc
gd_rsv1	inc/mmu.h	/^	unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:Gatedesc
gd_s	inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:Gatedesc
gd_sel	inc/mmu.h	/^	unsigned gd_sel : 16;        \/\/ segment selector$/;"	m	struct:Gatedesc
gd_type	inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:Gatedesc
pd_base	inc/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc
pd_lim	inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc
sd_avl	inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:Segdesc
sd_base_15_0	inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:Segdesc
sd_base_23_16	inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:Segdesc
sd_base_31_24	inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:Segdesc
sd_db	inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:Segdesc
sd_dpl	inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:Segdesc
sd_g	inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:Segdesc
sd_lim_15_0	inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:Segdesc
sd_lim_19_16	inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:Segdesc
sd_p	inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:Segdesc
sd_rsv1	inc/mmu.h	/^	unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	struct:Segdesc
sd_s	inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:Segdesc
sd_type	inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:Segdesc
ts_cr3	inc/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:Taskstate
ts_cs	inc/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:Taskstate
ts_ds	inc/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:Taskstate
ts_eax	inc/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:Taskstate
ts_ebp	inc/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:Taskstate
ts_ebx	inc/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:Taskstate
ts_ecx	inc/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:Taskstate
ts_edi	inc/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:Taskstate
ts_edx	inc/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:Taskstate
ts_eflags	inc/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:Taskstate
ts_eip	inc/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:Taskstate
ts_es	inc/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:Taskstate
ts_esi	inc/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:Taskstate
ts_esp	inc/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:Taskstate
ts_esp0	inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:Taskstate
ts_esp1	inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:Taskstate
ts_esp2	inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:Taskstate
ts_fs	inc/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:Taskstate
ts_gs	inc/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:Taskstate
ts_iomb	inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:Taskstate
ts_ldt	inc/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:Taskstate
ts_link	inc/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:Taskstate
ts_padding1	inc/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:Taskstate
ts_padding10	inc/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:Taskstate
ts_padding2	inc/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:Taskstate
ts_padding3	inc/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:Taskstate
ts_padding4	inc/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:Taskstate
ts_padding5	inc/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:Taskstate
ts_padding6	inc/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:Taskstate
ts_padding7	inc/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:Taskstate
ts_padding8	inc/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:Taskstate
ts_padding9	inc/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:Taskstate
ts_ss	inc/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:Taskstate
ts_ss0	inc/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:Taskstate
ts_ss1	inc/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:Taskstate
ts_ss2	inc/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:Taskstate
ts_t	inc/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:Taskstate
JOS_STAB_H	inc/stab.h	2;"	d
N_BCOMM	inc/stab.h	37;"	d
N_BINCL	inc/stab.h	29;"	d
N_BSLINE	inc/stab.h	25;"	d
N_DSLINE	inc/stab.h	24;"	d
N_ECOML	inc/stab.h	39;"	d
N_ECOMM	inc/stab.h	38;"	d
N_EINCL	inc/stab.h	32;"	d
N_ENTRY	inc/stab.h	33;"	d
N_EXCL	inc/stab.h	35;"	d
N_FNAME	inc/stab.h	16;"	d
N_FUN	inc/stab.h	17;"	d
N_GSYM	inc/stab.h	15;"	d
N_LBRAC	inc/stab.h	34;"	d
N_LCSYM	inc/stab.h	19;"	d
N_LENG	inc/stab.h	40;"	d
N_LSYM	inc/stab.h	28;"	d
N_MAIN	inc/stab.h	20;"	d
N_PC	inc/stab.h	21;"	d
N_PSYM	inc/stab.h	31;"	d
N_RBRAC	inc/stab.h	36;"	d
N_RSYM	inc/stab.h	22;"	d
N_SLINE	inc/stab.h	23;"	d
N_SO	inc/stab.h	27;"	d
N_SOL	inc/stab.h	30;"	d
N_SSYM	inc/stab.h	26;"	d
N_STSYM	inc/stab.h	18;"	d
Stab	inc/stab.h	/^struct Stab {$/;"	s
n_desc	inc/stab.h	/^	uint16_t n_desc;        \/\/ description field$/;"	m	struct:Stab
n_other	inc/stab.h	/^	uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:Stab
n_strx	inc/stab.h	/^	uint32_t n_strx;	\/\/ index into string table of name$/;"	m	struct:Stab
n_type	inc/stab.h	/^	uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:Stab
n_value	inc/stab.h	/^	uintptr_t n_value;	\/\/ value of symbol$/;"	m	struct:Stab
JOS_INC_STDARG_H	inc/stdarg.h	4;"	d
va_arg	inc/stdarg.h	10;"	d
va_end	inc/stdarg.h	12;"	d
va_list	inc/stdarg.h	/^typedef __builtin_va_list va_list;$/;"	t
va_start	inc/stdarg.h	8;"	d
JOS_INC_STDIO_H	inc/stdio.h	2;"	d
NULL	inc/stdio.h	7;"	d
JOS_INC_STRING_H	inc/string.h	2;"	d
JOS_INC_TYPES_H	inc/types.h	2;"	d
MAX	inc/types.h	49;"	d
MIN	inc/types.h	43;"	d
NULL	inc/types.h	5;"	d
ROUNDDOWN	inc/types.h	58;"	d
ROUNDUP	inc/types.h	64;"	d
bool	inc/types.h	/^typedef _Bool bool;$/;"	t
false	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon3
int16_t	inc/types.h	/^typedef short int16_t;$/;"	t
int32_t	inc/types.h	/^typedef int int32_t;$/;"	t
int64_t	inc/types.h	/^typedef long long int64_t;$/;"	t
int8_t	inc/types.h	/^typedef __signed char int8_t;$/;"	t
intptr_t	inc/types.h	/^typedef int32_t intptr_t;$/;"	t
off_t	inc/types.h	/^typedef int32_t off_t;$/;"	t
offsetof	inc/types.h	71;"	d
physaddr_t	inc/types.h	/^typedef uint32_t physaddr_t;$/;"	t
ppn_t	inc/types.h	/^typedef uint32_t ppn_t;$/;"	t
size_t	inc/types.h	/^typedef uint32_t size_t;$/;"	t
ssize_t	inc/types.h	/^typedef int32_t ssize_t;$/;"	t
true	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon3
uint16_t	inc/types.h	/^typedef unsigned short uint16_t;$/;"	t
uint32_t	inc/types.h	/^typedef unsigned int uint32_t;$/;"	t
uint64_t	inc/types.h	/^typedef unsigned long long uint64_t;$/;"	t
uint8_t	inc/types.h	/^typedef unsigned char uint8_t;$/;"	t
uintptr_t	inc/types.h	/^typedef uint32_t uintptr_t;$/;"	t
JOS_INC_X86_H	inc/x86.h	2;"	d
breakpoint	inc/x86.h	/^breakpoint(void)$/;"	f
cpuid	inc/x86.h	/^cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)$/;"	f
inb	inc/x86.h	/^inb(int port)$/;"	f
inl	inc/x86.h	/^inl(int port)$/;"	f
insb	inc/x86.h	/^insb(int port, void *addr, int cnt)$/;"	f
insl	inc/x86.h	/^insl(int port, void *addr, int cnt)$/;"	f
insw	inc/x86.h	/^insw(int port, void *addr, int cnt)$/;"	f
invlpg	inc/x86.h	/^invlpg(void *addr)$/;"	f
inw	inc/x86.h	/^inw(int port)$/;"	f
lcr0	inc/x86.h	/^lcr0(uint32_t val)$/;"	f
lcr3	inc/x86.h	/^lcr3(uint32_t val)$/;"	f
lcr4	inc/x86.h	/^lcr4(uint32_t val)$/;"	f
lgdt	inc/x86.h	/^lgdt(void *p)$/;"	f
lidt	inc/x86.h	/^lidt(void *p)$/;"	f
lldt	inc/x86.h	/^lldt(uint16_t sel)$/;"	f
ltr	inc/x86.h	/^ltr(uint16_t sel)$/;"	f
outb	inc/x86.h	/^outb(int port, uint8_t data)$/;"	f
outl	inc/x86.h	/^outl(int port, uint32_t data)$/;"	f
outsb	inc/x86.h	/^outsb(int port, const void *addr, int cnt)$/;"	f
outsl	inc/x86.h	/^outsl(int port, const void *addr, int cnt)$/;"	f
outsw	inc/x86.h	/^outsw(int port, const void *addr, int cnt)$/;"	f
outw	inc/x86.h	/^outw(int port, uint16_t data)$/;"	f
rcr0	inc/x86.h	/^rcr0(void)$/;"	f
rcr2	inc/x86.h	/^rcr2(void)$/;"	f
rcr3	inc/x86.h	/^rcr3(void)$/;"	f
rcr4	inc/x86.h	/^rcr4(void)$/;"	f
read_ebp	inc/x86.h	/^read_ebp(void)$/;"	f
read_eflags	inc/x86.h	/^read_eflags(void)$/;"	f
read_esp	inc/x86.h	/^read_esp(void)$/;"	f
read_tsc	inc/x86.h	/^read_tsc(void)$/;"	f
tlbflush	inc/x86.h	/^tlbflush(void)$/;"	f
write_eflags	inc/x86.h	/^write_eflags(uint32_t eflags)$/;"	f
xchg	inc/x86.h	/^xchg(volatile uint32_t *addr, uint32_t newval)$/;"	f
_panic	init.s	/^_panic:$/;"	l
_warn	init.s	/^_warn:$/;"	l
i386_init	init.s	/^i386_init:$/;"	l
test_backtrace	init.s	/^test_backtrace:$/;"	l
ALT	kern/console.c	218;"	d	file:
C	kern/console.c	285;"	d	file:
CAPSLOCK	kern/console.c	220;"	d	file:
COM1	kern/console.c	26;"	d	file:
COM_DLL	kern/console.c	30;"	d	file:
COM_DLM	kern/console.c	31;"	d	file:
COM_FCR	kern/console.c	35;"	d	file:
COM_IER	kern/console.c	32;"	d	file:
COM_IER_RDI	kern/console.c	33;"	d	file:
COM_IIR	kern/console.c	34;"	d	file:
COM_LCR	kern/console.c	36;"	d	file:
COM_LCR_DLAB	kern/console.c	37;"	d	file:
COM_LCR_WLEN8	kern/console.c	38;"	d	file:
COM_LSR	kern/console.c	43;"	d	file:
COM_LSR_DATA	kern/console.c	44;"	d	file:
COM_LSR_TSRE	kern/console.c	46;"	d	file:
COM_LSR_TXRDY	kern/console.c	45;"	d	file:
COM_MCR	kern/console.c	39;"	d	file:
COM_MCR_DTR	kern/console.c	41;"	d	file:
COM_MCR_OUT2	kern/console.c	42;"	d	file:
COM_MCR_RTS	kern/console.c	40;"	d	file:
COM_RX	kern/console.c	28;"	d	file:
COM_TX	kern/console.c	29;"	d	file:
CONSBUFSIZE	kern/console.c	381;"	d	file:
CTL	kern/console.c	217;"	d	file:
E0ESC	kern/console.c	224;"	d	file:
NO	kern/console.c	214;"	d	file:
NUMLOCK	kern/console.c	221;"	d	file:
SCROLLLOCK	kern/console.c	222;"	d	file:
SHIFT	kern/console.c	216;"	d	file:
addr_6845	kern/console.c	/^static unsigned addr_6845;$/;"	v	file:
buf	kern/console.c	/^	uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon1	file:
cga_init	kern/console.c	/^cga_init(void)$/;"	f	file:
cga_putc	kern/console.c	/^cga_putc(int c)$/;"	f	file:
charcode	kern/console.c	/^static uint8_t *charcode[4] = {$/;"	v	file:
cons	kern/console.c	/^} cons;$/;"	v	typeref:struct:__anon1	file:
cons_getc	kern/console.c	/^cons_getc(void)$/;"	f
cons_init	kern/console.c	/^cons_init(void)$/;"	f
cons_intr	kern/console.c	/^cons_intr(int (*proc)(void))$/;"	f	file:
cons_putc	kern/console.c	/^cons_putc(int c)$/;"	f	file:
cputchar	kern/console.c	/^cputchar(int c)$/;"	f
crt_buf	kern/console.c	/^static uint16_t *crt_buf;$/;"	v	file:
crt_pos	kern/console.c	/^static uint16_t crt_pos;$/;"	v	file:
ctlmap	kern/console.c	/^static uint8_t ctlmap[256] =$/;"	v	file:
delay	kern/console.c	/^delay(void)$/;"	f	file:
getchar	kern/console.c	/^getchar(void)$/;"	f
iscons	kern/console.c	/^iscons(int fdnum)$/;"	f
kbd_init	kern/console.c	/^kbd_init(void)$/;"	f	file:
kbd_intr	kern/console.c	/^kbd_intr(void)$/;"	f
kbd_proc_data	kern/console.c	/^kbd_proc_data(void)$/;"	f	file:
lpt_putc	kern/console.c	/^lpt_putc(int c)$/;"	f	file:
normalmap	kern/console.c	/^static uint8_t normalmap[256] =$/;"	v	file:
rpos	kern/console.c	/^	uint32_t rpos;$/;"	m	struct:__anon1	file:
serial_exists	kern/console.c	/^static bool serial_exists;$/;"	v	file:
serial_init	kern/console.c	/^serial_init(void)$/;"	f	file:
serial_intr	kern/console.c	/^serial_intr(void)$/;"	f
serial_proc_data	kern/console.c	/^serial_proc_data(void)$/;"	f	file:
serial_putc	kern/console.c	/^serial_putc(int c)$/;"	f	file:
shiftcode	kern/console.c	/^static uint8_t shiftcode[256] =$/;"	v	file:
shiftmap	kern/console.c	/^static uint8_t shiftmap[256] =$/;"	v	file:
togglecode	kern/console.c	/^static uint8_t togglecode[256] =$/;"	v	file:
wpos	kern/console.c	/^	uint32_t wpos;$/;"	m	struct:__anon1	file:
CGA_BASE	kern/console.h	13;"	d
CGA_BUF	kern/console.h	14;"	d
CRT_COLS	kern/console.h	17;"	d
CRT_ROWS	kern/console.h	16;"	d
CRT_SIZE	kern/console.h	18;"	d
MONO_BASE	kern/console.h	11;"	d
MONO_BUF	kern/console.h	12;"	d
_CONSOLE_H_	kern/console.h	4;"	d
CHECKSUM	kern/entry.S	/^#define CHECKSUM (-(MULTIBOOT_HEADER_MAGIC + MULTIBOOT_HEADER_FLAGS))$/;"	d
MULTIBOOT_HEADER_FLAGS	kern/entry.S	/^#define MULTIBOOT_HEADER_FLAGS (0)$/;"	d
MULTIBOOT_HEADER_MAGIC	kern/entry.S	/^#define MULTIBOOT_HEADER_MAGIC (0x1BADB002)$/;"	d
RELOC	kern/entry.S	/^#define	RELOC(x) ((x) - KERNBASE)$/;"	d
SRL	kern/entry.S	/^#define SRL(val, shamt)		(((val) >> (shamt)) & ~(-1 << (32 - (shamt))))$/;"	d
_start	kern/entry.S	/^_start = RELOC(entry)$/;"	d
bootstack	kern/entry.S	/^bootstack:$/;"	l
bootstacktop	kern/entry.S	/^bootstacktop:$/;"	l
entry	kern/entry.S	/^entry:$/;"	l
relocated	kern/entry.S	/^relocated:$/;"	l
spin	kern/entry.S	/^spin:	jmp	spin$/;"	l
entry_pgdir	kern/entrypgdir.c	/^pde_t entry_pgdir[NPDENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES];$/;"	v
_panic	kern/init.c	/^_panic(const char *file, int line, const char *fmt,...)$/;"	f
_warn	kern/init.c	/^_warn(const char *file, int line, const char *fmt,...)$/;"	f
i386_init	kern/init.c	/^i386_init(void)$/;"	f
panicstr	kern/init.c	/^const char *panicstr;$/;"	v
test_backtrace	kern/init.c	/^test_backtrace(int x)$/;"	f
debuginfo_eip	kern/kdebug.c	/^debuginfo_eip(uintptr_t addr, struct Eipdebuginfo *info)$/;"	f
stab_binsearch	kern/kdebug.c	/^stab_binsearch(const struct Stab *stabs, int *region_left, int *region_right,$/;"	f	file:
Eipdebuginfo	kern/kdebug.h	/^struct Eipdebuginfo {$/;"	s
JOS_KERN_KDEBUG_H	kern/kdebug.h	2;"	d
eip_file	kern/kdebug.h	/^	const char *eip_file;		\/\/ Source code filename for EIP$/;"	m	struct:Eipdebuginfo
eip_fn_addr	kern/kdebug.h	/^	uintptr_t eip_fn_addr;		\/\/ Address of start of function$/;"	m	struct:Eipdebuginfo
eip_fn_name	kern/kdebug.h	/^	const char *eip_fn_name;	\/\/ Name of function containing EIP$/;"	m	struct:Eipdebuginfo
eip_fn_namelen	kern/kdebug.h	/^	int eip_fn_namelen;		\/\/ Length of function name$/;"	m	struct:Eipdebuginfo
eip_fn_narg	kern/kdebug.h	/^	int eip_fn_narg;		\/\/ Number of function arguments$/;"	m	struct:Eipdebuginfo
eip_line	kern/kdebug.h	/^	int eip_line;			\/\/ Source code linenumber for EIP$/;"	m	struct:Eipdebuginfo
CMDBUF_SIZE	kern/monitor.c	14;"	d	file:
Command	kern/monitor.c	/^struct Command {$/;"	s	file:
MAXARGS	kern/monitor.c	91;"	d	file:
NCOMMANDS	kern/monitor.c	29;"	d	file:
WHITESPACE	kern/monitor.c	90;"	d	file:
commands	kern/monitor.c	/^static struct Command commands[] = {$/;"	v	typeref:struct:Command	file:
desc	kern/monitor.c	/^	const char *desc;$/;"	m	struct:Command	file:
func	kern/monitor.c	/^	int (*func)(int argc, char** argv, struct Trapframe* tf);$/;"	m	struct:Command	file:
mon_backtrace	kern/monitor.c	/^mon_backtrace(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_help	kern/monitor.c	/^mon_help(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_kerninfo	kern/monitor.c	/^mon_kerninfo(int argc, char **argv, struct Trapframe *tf)$/;"	f
monitor	kern/monitor.c	/^monitor(struct Trapframe *tf)$/;"	f
name	kern/monitor.c	/^	const char *name;$/;"	m	struct:Command	file:
runcmd	kern/monitor.c	/^runcmd(char *buf, struct Trapframe *tf)$/;"	f	file:
JOS_KERN_MONITOR_H	kern/monitor.h	2;"	d
cprintf	kern/printf.c	/^cprintf(const char *fmt, ...)$/;"	f
putch	kern/printf.c	/^putch(int ch, int *cnt)$/;"	f	file:
vcprintf	kern/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f
buf	lib/printfmt.c	/^	char *buf;$/;"	m	struct:sprintbuf	file:
cnt	lib/printfmt.c	/^	int cnt;$/;"	m	struct:sprintbuf	file:
ebuf	lib/printfmt.c	/^	char *ebuf;$/;"	m	struct:sprintbuf	file:
error_string	lib/printfmt.c	/^static const char * const error_string[MAXERROR] =$/;"	v	file:
getint	lib/printfmt.c	/^getint(va_list *ap, int lflag)$/;"	f	file:
getuint	lib/printfmt.c	/^getuint(va_list *ap, int lflag)$/;"	f	file:
printfmt	lib/printfmt.c	/^printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...)$/;"	f
printnum	lib/printfmt.c	/^printnum(void (*putch)(int, void*), void *putdat,$/;"	f	file:
snprintf	lib/printfmt.c	/^snprintf(char *buf, int n, const char *fmt, ...)$/;"	f
sprintbuf	lib/printfmt.c	/^struct sprintbuf {$/;"	s	file:
sprintputch	lib/printfmt.c	/^sprintputch(int ch, struct sprintbuf *b)$/;"	f	file:
vprintfmt	lib/printfmt.c	/^vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)$/;"	f
vsnprintf	lib/printfmt.c	/^vsnprintf(char *buf, int n, const char *fmt, va_list ap)$/;"	f
BUFLEN	lib/readline.c	4;"	d	file:
buf	lib/readline.c	/^static char buf[BUFLEN];$/;"	v	file:
readline	lib/readline.c	/^readline(const char *prompt)$/;"	f
ASM	lib/string.c	9;"	d	file:
memcmp	lib/string.c	/^memcmp(const void *v1, const void *v2, size_t n)$/;"	f
memcpy	lib/string.c	/^memcpy(void *dst, const void *src, size_t n)$/;"	f
memfind	lib/string.c	/^memfind(const void *s, int c, size_t n)$/;"	f
memmove	lib/string.c	/^memmove(void *dst, const void *src, size_t n)$/;"	f
memset	lib/string.c	/^memset(void *v, int c, size_t n)$/;"	f
strcat	lib/string.c	/^strcat(char *dst, const char *src)$/;"	f
strchr	lib/string.c	/^strchr(const char *s, char c)$/;"	f
strcmp	lib/string.c	/^strcmp(const char *p, const char *q)$/;"	f
strcpy	lib/string.c	/^strcpy(char *dst, const char *src)$/;"	f
strfind	lib/string.c	/^strfind(const char *s, char c)$/;"	f
strlcpy	lib/string.c	/^strlcpy(char *dst, const char *src, size_t size)$/;"	f
strlen	lib/string.c	/^strlen(const char *s)$/;"	f
strncmp	lib/string.c	/^strncmp(const char *p, const char *q, size_t n)$/;"	f
strncpy	lib/string.c	/^strncpy(char *dst, const char *src, size_t size) {$/;"	f
strnlen	lib/string.c	/^strnlen(const char *s, size_t size)$/;"	f
strtol	lib/string.c	/^strtol(const char *s, char **endptr, int base)$/;"	f
readdeps	mergedep.pl	/^sub readdeps {$/;"	s
Disassembly	obj/boot/boot.asm	/^Disassembly of section .text:$/;"	l
end_pa	obj/boot/boot.asm	/^	end_pa = pa + count;$/;"	d
eph	obj/boot/boot.asm	/^	eph = ph + ELFHDR->e_phnum;$/;"	d
offset	obj/boot/boot.asm	/^	offset = (offset \/ SECTSIZE) + 1;$/;"	d
ph	obj/boot/boot.asm	/^	ph = (struct Proghdr *) ((uint8_t *) ELFHDR + ELFHDR->e_phoff);$/;"	d
protcseg	obj/boot/boot.asm	/^protcseg:$/;"	l
spin	obj/boot/boot.asm	/^spin:$/;"	l
start	obj/boot/boot.asm	/^start:$/;"	l
static	obj/boot/boot.asm	/^static __inline uint8_t$/;"	l
static	obj/boot/boot.asm	/^static __inline void$/;"	l
void	obj/boot/boot.asm	/^void readsect(void*, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void readseg(uint32_t, uint32_t, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void$/;"	l
ASM	obj/fs/fs.asm	/^#define ASM 1$/;"	d
Disassembly	obj/fs/fs.asm	/^Disassembly of section .text:$/;"	l
NHANDLERS	obj/fs/fs.asm	/^#define NHANDLERS (sizeof(handlers)\/sizeof(handlers[0]))$/;"	d
_pgfault_handler	obj/fs/fs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	obj/fs/fs.asm	/^_pgfault_upcall:$/;"	l
_start	obj/fs/fs.asm	/^_start:$/;"	l
addr	obj/fs/fs.asm	/^	addr = (void *)ROUNDDOWN(addr, PGSIZE);$/;"	d
altflag	obj/fs/fs.asm	/^			altflag = 1;$/;"	d
altflag	obj/fs/fs.asm	/^		altflag = 0;$/;"	d
args_exist	obj/fs/fs.asm	/^args_exist:$/;"	l
base	obj/fs/fs.asm	/^			base = 10;$/;"	d
base	obj/fs/fs.asm	/^			base = 16;$/;"	d
base	obj/fs/fs.asm	/^			base = 8;$/;"	d
base	obj/fs/fs.asm	/^		base = 10;$/;"	d
binaryname	obj/fs/fs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/fs/fs.asm	/^	binaryname = "fs";$/;"	d
bitmap	obj/fs/fs.asm	/^	bitmap = diskaddr(2);$/;"	d
bits	obj/fs/fs.asm	/^	bits = (uint32_t*) PGSIZE;$/;"	d
bn	obj/fs/fs.asm	/^		bn = MIN(BLKSIZE - pos % BLKSIZE, offset + count - pos);$/;"	d
bool	obj/fs/fs.asm	/^bool$/;"	l
buf	obj/fs/fs.asm	/^	buf = vbuf;$/;"	d
c	obj/fs/fs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/fs/fs.asm	/^				ch = *fmt;$/;"	d
char	obj/fs/fs.asm	/^char *$/;"	l
clrflag	obj/fs/fs.asm	/^		clrflag = 0;$/;"	d
cnt	obj/fs/fs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/fs/fs.asm	/^				color = 0;$/;"	d
color	obj/fs/fs.asm	/^			color = 0;$/;"	d
colorswitch	obj/fs/fs.asm	/^	colorswitch:$/;"	l
const	obj/fs/fs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/fs/fs.asm	/^const volatile struct Env *thisenv;$/;"	l
count	obj/fs/fs.asm	/^	count = MIN(count, f->f_size - offset);$/;"	d
d	obj/fs/fs.asm	/^	d = dst;$/;"	d
default	obj/fs/fs.asm	/^		default:$/;"	l
dig	obj/fs/fs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/fs/fs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/fs/fs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dir	obj/fs/fs.asm	/^		dir = f;$/;"	d
dir	obj/fs/fs.asm	/^	dir = 0;$/;"	d
diskno	obj/fs/fs.asm	/^	diskno = d;$/;"	d
dst_in	obj/fs/fs.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/fs/fs.asm	/^envid_t$/;"	l
err	obj/fs/fs.asm	/^				err = -err;$/;"	d
err	obj/fs/fs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/fs/fs.asm	/^    err:$/;"	l
err	obj/fs/fs.asm	/^err:$/;"	l
err1	obj/fs/fs.asm	/^    err1:$/;"	l
err2	obj/fs/fs.asm	/^    err2:$/;"	l
err3	obj/fs/fs.asm	/^    err3:$/;"	l
f	obj/fs/fs.asm	/^		f = (struct File*) blk;$/;"	d
f	obj/fs/fs.asm	/^	f = &super->s_root;$/;"	d
f	obj/fs/fs.asm	/^	f = (struct File*) blk;$/;"	d
fd	obj/fs/fs.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/fs/fs.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fileid	obj/fs/fs.asm	/^	fileid = r;$/;"	d
fsenv	obj/fs/fs.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/fs/fs.asm	/^int $/;"	l
int	obj/fs/fs.asm	/^int color;$/;"	l
int	obj/fs/fs.asm	/^int$/;"	l
int32_t	obj/fs/fs.asm	/^int32_t$/;"	l
lflag	obj/fs/fs.asm	/^		lflag = 0;$/;"	d
long	obj/fs/fs.asm	/^long$/;"	l
m	obj/fs/fs.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/fs/fs.asm	/^		m = n - tot;$/;"	d
m	obj/fs/fs.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/fs/fs.asm	/^		n = thisenv->env_runs;$/;"	d
nblock	obj/fs/fs.asm	/^	nblock = dir->f_size \/ BLKSIZE;$/;"	d
new_nblocks	obj/fs/fs.asm	/^	new_nblocks = (newsize + BLKSIZE - 1) \/ BLKSIZE;$/;"	d
newfd	obj/fs/fs.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/fs/fs.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/fs/fs.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/fs/fs.asm	/^				num = -(long long) num;$/;"	d
num	obj/fs/fs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/fs/fs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/fs/fs.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/fs/fs.asm	/^		number:$/;"	l
nva	obj/fs/fs.asm	/^	nva = fd2data(newfd);$/;"	d
o	obj/fs/fs.asm	/^	o = &opentab[fileid % MAXOPEN];$/;"	d
old_nblocks	obj/fs/fs.asm	/^	old_nblocks = (f->f_size + BLKSIZE - 1) \/ BLKSIZE;$/;"	d
ova	obj/fs/fs.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/fs/fs.asm	/^				p = "(null)";$/;"	d
p	obj/fs/fs.asm	/^		p = path;$/;"	d
p	obj/fs/fs.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/fs/fs.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/fs/fs.asm	/^			padc = '-';$/;"	d
padc	obj/fs/fs.asm	/^			padc = '0';$/;"	d
path	obj/fs/fs.asm	/^		path = skip_slash(path);$/;"	d
path	obj/fs/fs.asm	/^	path = skip_slash(path);$/;"	d
perm	obj/fs/fs.asm	/^		perm = 0;$/;"	d
pg	obj/fs/fs.asm	/^		pg = NULL;$/;"	d
precision	obj/fs/fs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/fs/fs.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/fs/fs.asm	/^		process_precision:$/;"	l
pte	obj/fs/fs.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/fs/fs.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/fs/fs.asm	/^			r = -E_INVAL;$/;"	d
r	obj/fs/fs.asm	/^			r = 0;$/;"	d
r	obj/fs/fs.asm	/^			r = handlers[req](whom, fsreq);$/;"	d
r	obj/fs/fs.asm	/^			r = serve_open(whom, (struct Fsreq_open*)fsreq, &pg, &perm);$/;"	d
r	obj/fs/fs.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/fs/fs.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/fs/fs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
req	obj/fs/fs.asm	/^		req = ipc_recv((int32_t *) &whom, fsreq, &perm);$/;"	d
reswitch	obj/fs/fs.asm	/^	reswitch:$/;"	l
ret	obj/fs/fs.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/fs/fs.asm	/^	ret = dst;$/;"	d
s	obj/fs/fs.asm	/^	s = src;$/;"	d
size_t	obj/fs/fs.asm	/^size_t$/;"	l
ssize_t	obj/fs/fs.asm	/^ssize_t$/;"	l
static	obj/fs/fs.asm	/^static __inline uint8_t$/;"	l
static	obj/fs/fs.asm	/^static __inline void$/;"	l
static	obj/fs/fs.asm	/^static char *msg = "This is the NEW message of the day!\\n\\n";$/;"	l
static	obj/fs/fs.asm	/^static const char*$/;"	l
static	obj/fs/fs.asm	/^static int diskno = 1;$/;"	l
static	obj/fs/fs.asm	/^static int$/;"	l
static	obj/fs/fs.asm	/^static long long$/;"	l
static	obj/fs/fs.asm	/^static ssize_t$/;"	l
static	obj/fs/fs.asm	/^static unsigned long long$/;"	l
static	obj/fs/fs.asm	/^static void$/;"	l
super	obj/fs/fs.asm	/^	super = diskaddr(1);$/;"	d
thisenv	obj/fs/fs.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
try_open	obj/fs/fs.asm	/^try_open:$/;"	l
union	obj/fs/fs.asm	/^union Fsipc *fsreq = (union Fsipc *)0x0ffff000;$/;"	l
unsigned	obj/fs/fs.asm	/^unsigned int$/;"	l
va	obj/fs/fs.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/fs/fs.asm	/^void *$/;"	l
void	obj/fs/fs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/fs/fs.asm	/^void$/;"	l
width	obj/fs/fs.asm	/^				width = 0;$/;"	d
width	obj/fs/fs.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/kern/kernel.asm	/^#define ASM 1$/;"	d
BUFLEN	obj/kern/kernel.asm	/^#define BUFLEN 1024$/;"	d
Disassembly	obj/kern/kernel.asm	/^Disassembly of section .text:$/;"	l
KADDR	obj/kern/kernel.asm	/^#define KADDR(pa) _kaddr(__FILE__, __LINE__, pa)$/;"	d
PADDR	obj/kern/kernel.asm	/^#define PADDR(kva) _paddr(__FILE__, __LINE__, kva)$/;"	d
_alltraps	obj/kern/kernel.asm	/^ _alltraps:$/;"	l
_start	obj/kern/kernel.asm	/^_start = RELOC(entry)$/;"	d
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = CGA_BASE;$/;"	d
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = MONO_BASE;$/;"	d
altflag	obj/kern/kernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/kern/kernel.asm	/^		altflag = 0;$/;"	d
any_matches	obj/kern/kernel.asm	/^		any_matches = 1;$/;"	d
argc	obj/kern/kernel.asm	/^	argc = 0;$/;"	d
bad	obj/kern/kernel.asm	/^bad:$/;"	l
bar_width	obj/kern/kernel.asm	/^				bar_width = 8;$/;"	d
bar_width	obj/kern/kernel.asm	/^		bar_width = 4;$/;"	d
base	obj/kern/kernel.asm	/^			base = 10;$/;"	d
base	obj/kern/kernel.asm	/^			base = 16;$/;"	d
base	obj/kern/kernel.asm	/^			base = 8;$/;"	d
base	obj/kern/kernel.asm	/^			base = PCI_MAPREG_IO_ADDR(oldv);$/;"	d
base	obj/kern/kernel.asm	/^			base = PCI_MAPREG_MEM_ADDR(oldv);$/;"	d
base	obj/kern/kernel.asm	/^		base = 10;$/;"	d
base	obj/kern/kernel.asm	/^	base = (char *)ROUNDDOWN(va, PGSIZE);$/;"	d
bda	obj/kern/kernel.asm	/^	bda = (uint8_t *) KADDR(0x40 << 4);$/;"	d
bootcpu	obj/kern/kernel.asm	/^				bootcpu = &cpus[ncpu];$/;"	d
bootcpu	obj/kern/kernel.asm	/^	bootcpu = &cpus[0];$/;"	d
buf	obj/kern/kernel.asm	/^		buf = readline("K> ");$/;"	d
c	obj/kern/kernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/kern/kernel.asm	/^		c = cons.buf[cons.rpos++];$/;"	d
c	obj/kern/kernel.asm	/^		c = getchar();$/;"	d
c	obj/kern/kernel.asm	/^	c = charcode[shift & (CTL | SHIFT)][data];$/;"	d
c	obj/kern/kernel.asm	/^	c = page2kva(pp);$/;"	d
ch	obj/kern/kernel.asm	/^				ch = *fmt;$/;"	d
char	obj/kern/kernel.asm	/^char *$/;"	l
class	obj/kern/kernel.asm	/^		class = pci_class[PCI_CLASS(f->dev_class)];$/;"	d
clrflag	obj/kern/kernel.asm	/^		clrflag = 0;$/;"	d
cnt	obj/kern/kernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
code	obj/kern/kernel.asm	/^	code = KADDR(MPENTRY_PADDR);$/;"	d
color	obj/kern/kernel.asm	/^				color = 0;$/;"	d
color	obj/kern/kernel.asm	/^			color = 0;$/;"	d
colorswitch	obj/kern/kernel.asm	/^	colorswitch:$/;"	l
conf	obj/kern/kernel.asm	/^	conf = (struct mpconf *) KADDR(mp->physaddr);$/;"	d
const	obj/kern/kernel.asm	/^		const struct UserStabData *usd = (const struct UserStabData *) USTABDATA;$/;"	t
const	obj/kern/kernel.asm	/^	const struct Stab *stabs, *stab_end;$/;"	t
cp	obj/kern/kernel.asm	/^		cp = (uint16_t*) (KERNBASE + MONO_BUF);$/;"	d
cp	obj/kern/kernel.asm	/^	cp = (uint16_t*) (KERNBASE + CGA_BUF);$/;"	d
cr0	obj/kern/kernel.asm	/^	cr0 = rcr0();$/;"	d
crt_buf	obj/kern/kernel.asm	/^	crt_buf = (uint16_t*) cp;$/;"	d
crt_pos	obj/kern/kernel.asm	/^	crt_pos = pos;$/;"	d
curenv	obj/kern/kernel.asm	/^			curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^		curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^	curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^	curenv = e;$/;"	d
d	obj/kern/kernel.asm	/^	d = dst;$/;"	d
data	obj/kern/kernel.asm	/^		data = (shift & E0ESC ? data : data & 0x7F);$/;"	d
data	obj/kern/kernel.asm	/^	data = inb(KBDATAP);$/;"	d
dead	obj/kern/kernel.asm	/^dead:$/;"	l
default	obj/kern/kernel.asm	/^		default:$/;"	l
default	obj/kern/kernel.asm	/^	default:$/;"	l
didinit	obj/kern/kernel.asm	/^	didinit = 1;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/kern/kernel.asm	/^	dst_in = dst;$/;"	d
e	obj/kern/kernel.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e1000	obj/kern/kernel.asm	/^	e1000 = (uint32_t *)mmio_map_region(pcif->reg_base[0], pcif->reg_size[0]);$/;"	d
ebp	obj/kern/kernel.asm	/^		ebp = (uint32_t *)ebp[0]; \/\/ saved %ebp$/;"	d
ebp	obj/kern/kernel.asm	/^		ebp = (uint32_t *)ebp[0];$/;"	d
ebp	obj/kern/kernel.asm	/^	ebp = (uint32_t *)read_ebp();$/;"	d
echoing	obj/kern/kernel.asm	/^	echoing = iscons(0);$/;"	d
eip	obj/kern/kernel.asm	/^		eip = ebp[1];$/;"	d
end	obj/kern/kernel.asm	/^	end = PGNUM(PADDR(boot_alloc(0)));$/;"	d
entry	obj/kern/kernel.asm	/^entry:$/;"	l
env_free_list	obj/kern/kernel.asm	/^		env_free_list = envs + i;$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e->env_link;$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e;$/;"	d
envs	obj/kern/kernel.asm	/^	envs = (struct Env *)boot_alloc(sizeof(struct Env) * NENV);$/;"	d
eph	obj/kern/kernel.asm	/^	eph = ph + elfhdr->e_phnum;$/;"	d
err	obj/kern/kernel.asm	/^				err = -err;$/;"	d
err	obj/kern/kernel.asm	/^			err = va_arg(ap, int);$/;"	d
extern	obj/kern/kernel.asm	/^extern int color;$/;"	l
extern	obj/kern/kernel.asm	/^extern struct spinlock kernel_lock;$/;"	t
f0100000	obj/kern/kernel.asm	/^f0100000 <_start+0xeffffff4>:$/;"	l
f0100000	obj/kern/kernel.asm	/^f0100000:	02 b0 ad 1b 00 00    	add    0x1bad(%eax),%dh$/;"	l
f0100006	obj/kern/kernel.asm	/^f0100006:	00 00                	add    %al,(%eax)$/;"	l
f0100008	obj/kern/kernel.asm	/^f0100008:	fe 4f 52             	decb   0x52(%edi)$/;"	l
f010000b	obj/kern/kernel.asm	/^f010000b:	e4 66                	in     $0x66,%al$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c <entry>:$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c:	66 c7 05 72 04 00 00 	movw   $0x1234,0x472$/;"	l
f0100013	obj/kern/kernel.asm	/^f0100013:	34 12 $/;"	l
f0100015	obj/kern/kernel.asm	/^f0100015:	b8 00 30 12 00       	mov    $0x123000,%eax$/;"	l
f010001a	obj/kern/kernel.asm	/^f010001a:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010001d	obj/kern/kernel.asm	/^f010001d:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0100020	obj/kern/kernel.asm	/^f0100020:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f0100025	obj/kern/kernel.asm	/^f0100025:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0100028	obj/kern/kernel.asm	/^f0100028:	b8 2f 00 10 f0       	mov    $0xf010002f,%eax$/;"	l
f010002d	obj/kern/kernel.asm	/^f010002d:	ff e0                	jmp    *%eax$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f <relocated>:$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0100034	obj/kern/kernel.asm	/^f0100034:	bc 00 30 12 f0       	mov    $0xf0123000,%esp$/;"	l
f0100039	obj/kern/kernel.asm	/^f0100039:	e8 6a 00 00 00       	call   f01000a8 <i386_init>$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e <spin>:$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e:	eb fe                	jmp    f010003e <spin>$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040 <_panic>:$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040:	55                   	push   %ebp$/;"	l
f0100041	obj/kern/kernel.asm	/^f0100041:	89 e5                	mov    %esp,%ebp$/;"	l
f0100043	obj/kern/kernel.asm	/^f0100043:	56                   	push   %esi$/;"	l
f0100044	obj/kern/kernel.asm	/^f0100044:	53                   	push   %ebx$/;"	l
f0100045	obj/kern/kernel.asm	/^f0100045:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0100048	obj/kern/kernel.asm	/^f0100048:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f010004b	obj/kern/kernel.asm	/^f010004b:	83 3d 8c 9e 2b f0 00 	cmpl   $0x0,0xf02b9e8c$/;"	l
f0100052	obj/kern/kernel.asm	/^f0100052:	75 46                	jne    f010009a <_panic+0x5a>$/;"	l
f0100054	obj/kern/kernel.asm	/^f0100054:	89 35 8c 9e 2b f0    	mov    %esi,0xf02b9e8c$/;"	l
f010005a	obj/kern/kernel.asm	/^f010005a:	fa                   	cli    $/;"	l
f010005b	obj/kern/kernel.asm	/^f010005b:	fc                   	cld    $/;"	l
f010005c	obj/kern/kernel.asm	/^f010005c:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f010005f	obj/kern/kernel.asm	/^f010005f:	e8 f5 6a 00 00       	call   f0106b59 <cpunum>$/;"	l
f0100064	obj/kern/kernel.asm	/^f0100064:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0100067	obj/kern/kernel.asm	/^f0100067:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f010006b	obj/kern/kernel.asm	/^f010006b:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f010006e	obj/kern/kernel.asm	/^f010006e:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0100072	obj/kern/kernel.asm	/^f0100072:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100076	obj/kern/kernel.asm	/^f0100076:	c7 04 24 a0 7f 10 f0 	movl   $0xf0107fa0,(%esp)$/;"	l
f010007d	obj/kern/kernel.asm	/^f010007d:	e8 6a 3f 00 00       	call   f0103fec <cprintf>$/;"	l
f0100082	obj/kern/kernel.asm	/^f0100082:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0100086	obj/kern/kernel.asm	/^f0100086:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0100089	obj/kern/kernel.asm	/^f0100089:	e8 2b 3f 00 00       	call   f0103fb9 <vcprintf>$/;"	l
f010008e	obj/kern/kernel.asm	/^f010008e:	c7 04 24 1b 92 10 f0 	movl   $0xf010921b,(%esp)$/;"	l
f0100095	obj/kern/kernel.asm	/^f0100095:	e8 52 3f 00 00       	call   f0103fec <cprintf>$/;"	l
f010009a	obj/kern/kernel.asm	/^f010009a:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01000a1	obj/kern/kernel.asm	/^f01000a1:	e8 94 09 00 00       	call   f0100a3a <monitor>$/;"	l
f01000a6	obj/kern/kernel.asm	/^f01000a6:	eb f2                	jmp    f010009a <_panic+0x5a>$/;"	l
f01000a8	obj/kern/kernel.asm	/^f01000a8 <i386_init>:$/;"	l
f01000a8	obj/kern/kernel.asm	/^f01000a8:	55                   	push   %ebp$/;"	l
f01000a9	obj/kern/kernel.asm	/^f01000a9:	89 e5                	mov    %esp,%ebp$/;"	l
f01000ab	obj/kern/kernel.asm	/^f01000ab:	53                   	push   %ebx$/;"	l
f01000ac	obj/kern/kernel.asm	/^f01000ac:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01000af	obj/kern/kernel.asm	/^f01000af:	b8 40 b4 2f f0       	mov    $0xf02fb440,%eax$/;"	l
f01000b4	obj/kern/kernel.asm	/^f01000b4:	2d 05 8b 2b f0       	sub    $0xf02b8b05,%eax$/;"	l
f01000b9	obj/kern/kernel.asm	/^f01000b9:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01000bd	obj/kern/kernel.asm	/^f01000bd:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01000c4	obj/kern/kernel.asm	/^f01000c4:	00 $/;"	l
f01000c5	obj/kern/kernel.asm	/^f01000c5:	c7 04 24 05 8b 2b f0 	movl   $0xf02b8b05,(%esp)$/;"	l
f01000cc	obj/kern/kernel.asm	/^f01000cc:	e8 36 64 00 00       	call   f0106507 <memset>$/;"	l
f01000d1	obj/kern/kernel.asm	/^f01000d1:	e8 f2 05 00 00       	call   f01006c8 <cons_init>$/;"	l
f01000d6	obj/kern/kernel.asm	/^f01000d6:	c7 04 24 0c 80 10 f0 	movl   $0xf010800c,(%esp)$/;"	l
f01000dd	obj/kern/kernel.asm	/^f01000dd:	e8 0a 3f 00 00       	call   f0103fec <cprintf>$/;"	l
f01000e2	obj/kern/kernel.asm	/^f01000e2:	c7 44 24 04 ac 1a 00 	movl   $0x1aac,0x4(%esp)$/;"	l
f01000e9	obj/kern/kernel.asm	/^f01000e9:	00 $/;"	l
f01000ea	obj/kern/kernel.asm	/^f01000ea:	c7 04 24 21 80 10 f0 	movl   $0xf0108021,(%esp)$/;"	l
f01000f1	obj/kern/kernel.asm	/^f01000f1:	e8 f6 3e 00 00       	call   f0103fec <cprintf>$/;"	l
f01000f6	obj/kern/kernel.asm	/^f01000f6:	e8 88 14 00 00       	call   f0101583 <mem_init>$/;"	l
f01000fb	obj/kern/kernel.asm	/^f01000fb:	e8 0a 37 00 00       	call   f010380a <env_init>$/;"	l
f0100100	obj/kern/kernel.asm	/^f0100100:	e8 db 3f 00 00       	call   f01040e0 <trap_init>$/;"	l
f0100105	obj/kern/kernel.asm	/^f0100105:	e8 40 67 00 00       	call   f010684a <mp_init>$/;"	l
f010010a	obj/kern/kernel.asm	/^f010010a:	e8 65 6a 00 00       	call   f0106b74 <lapic_init>$/;"	l
f010010f	obj/kern/kernel.asm	/^f010010f:	90                   	nop$/;"	l
f0100110	obj/kern/kernel.asm	/^f0100110:	e8 f4 3d 00 00       	call   f0103f09 <pic_init>$/;"	l
f0100115	obj/kern/kernel.asm	/^f0100115:	e8 97 7b 00 00       	call   f0107cb1 <time_init>$/;"	l
f010011a	obj/kern/kernel.asm	/^f010011a:	e8 64 7b 00 00       	call   f0107c83 <pci_init>$/;"	l
f010011f	obj/kern/kernel.asm	/^f010011f:	c7 04 24 c0 53 12 f0 	movl   $0xf01253c0,(%esp)$/;"	l
f0100126	obj/kern/kernel.asm	/^f0100126:	e8 ac 6c 00 00       	call   f0106dd7 <spin_lock>$/;"	l
f010012b	obj/kern/kernel.asm	/^f010012b:	83 3d 94 9e 2b f0 07 	cmpl   $0x7,0xf02b9e94$/;"	l
f0100132	obj/kern/kernel.asm	/^f0100132:	77 24                	ja     f0100158 <i386_init+0xb0>$/;"	l
f0100134	obj/kern/kernel.asm	/^f0100134:	c7 44 24 0c 00 70 00 	movl   $0x7000,0xc(%esp)$/;"	l
f010013b	obj/kern/kernel.asm	/^f010013b:	00 $/;"	l
f010013c	obj/kern/kernel.asm	/^f010013c:	c7 44 24 08 c4 7f 10 	movl   $0xf0107fc4,0x8(%esp)$/;"	l
f0100143	obj/kern/kernel.asm	/^f0100143:	f0 $/;"	l
f0100144	obj/kern/kernel.asm	/^f0100144:	c7 44 24 04 65 00 00 	movl   $0x65,0x4(%esp)$/;"	l
f010014b	obj/kern/kernel.asm	/^f010014b:	00 $/;"	l
f010014c	obj/kern/kernel.asm	/^f010014c:	c7 04 24 3c 80 10 f0 	movl   $0xf010803c,(%esp)$/;"	l
f0100153	obj/kern/kernel.asm	/^f0100153:	e8 e8 fe ff ff       	call   f0100040 <_panic>$/;"	l
f0100158	obj/kern/kernel.asm	/^f0100158:	b8 82 67 10 f0       	mov    $0xf0106782,%eax$/;"	l
f010015d	obj/kern/kernel.asm	/^f010015d:	2d 08 67 10 f0       	sub    $0xf0106708,%eax$/;"	l
f0100162	obj/kern/kernel.asm	/^f0100162:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100166	obj/kern/kernel.asm	/^f0100166:	c7 44 24 04 08 67 10 	movl   $0xf0106708,0x4(%esp)$/;"	l
f010016d	obj/kern/kernel.asm	/^f010016d:	f0 $/;"	l
f010016e	obj/kern/kernel.asm	/^f010016e:	c7 04 24 00 70 00 f0 	movl   $0xf0007000,(%esp)$/;"	l
f0100175	obj/kern/kernel.asm	/^f0100175:	e8 da 63 00 00       	call   f0106554 <memmove>$/;"	l
f010017a	obj/kern/kernel.asm	/^f010017a:	bb 20 a0 2b f0       	mov    $0xf02ba020,%ebx$/;"	l
f010017f	obj/kern/kernel.asm	/^f010017f:	eb 4d                	jmp    f01001ce <i386_init+0x126>$/;"	l
f0100181	obj/kern/kernel.asm	/^f0100181:	e8 d3 69 00 00       	call   f0106b59 <cpunum>$/;"	l
f0100186	obj/kern/kernel.asm	/^f0100186:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0100189	obj/kern/kernel.asm	/^f0100189:	05 20 a0 2b f0       	add    $0xf02ba020,%eax$/;"	l
f010018e	obj/kern/kernel.asm	/^f010018e:	39 c3                	cmp    %eax,%ebx$/;"	l
f0100190	obj/kern/kernel.asm	/^f0100190:	74 39                	je     f01001cb <i386_init+0x123>$/;"	l
f0100192	obj/kern/kernel.asm	/^f0100192:	89 d8                	mov    %ebx,%eax$/;"	l
f0100194	obj/kern/kernel.asm	/^f0100194:	2d 20 a0 2b f0       	sub    $0xf02ba020,%eax$/;"	l
f0100199	obj/kern/kernel.asm	/^f0100199:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f010019c	obj/kern/kernel.asm	/^f010019c:	69 c0 35 c2 72 4f    	imul   $0x4f72c235,%eax,%eax$/;"	l
f01001a2	obj/kern/kernel.asm	/^f01001a2:	c1 e0 0f             	shl    $0xf,%eax$/;"	l
f01001a5	obj/kern/kernel.asm	/^f01001a5:	8d 80 00 30 2c f0    	lea    -0xfd3d000(%eax),%eax$/;"	l
f01001ab	obj/kern/kernel.asm	/^f01001ab:	a3 90 9e 2b f0       	mov    %eax,0xf02b9e90$/;"	l
f01001b0	obj/kern/kernel.asm	/^f01001b0:	c7 44 24 04 00 70 00 	movl   $0x7000,0x4(%esp)$/;"	l
f01001b7	obj/kern/kernel.asm	/^f01001b7:	00 $/;"	l
f01001b8	obj/kern/kernel.asm	/^f01001b8:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f01001bb	obj/kern/kernel.asm	/^f01001bb:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01001be	obj/kern/kernel.asm	/^f01001be:	e8 01 6b 00 00       	call   f0106cc4 <lapic_startap>$/;"	l
f01001c3	obj/kern/kernel.asm	/^f01001c3:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f01001c6	obj/kern/kernel.asm	/^f01001c6:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f01001c9	obj/kern/kernel.asm	/^f01001c9:	75 f8                	jne    f01001c3 <i386_init+0x11b>$/;"	l
f01001cb	obj/kern/kernel.asm	/^f01001cb:	83 c3 74             	add    $0x74,%ebx$/;"	l
f01001ce	obj/kern/kernel.asm	/^f01001ce:	6b 05 c4 a3 2b f0 74 	imul   $0x74,0xf02ba3c4,%eax$/;"	l
f01001d5	obj/kern/kernel.asm	/^f01001d5:	05 20 a0 2b f0       	add    $0xf02ba020,%eax$/;"	l
f01001da	obj/kern/kernel.asm	/^f01001da:	39 c3                	cmp    %eax,%ebx$/;"	l
f01001dc	obj/kern/kernel.asm	/^f01001dc:	72 a3                	jb     f0100181 <i386_init+0xd9>$/;"	l
f01001de	obj/kern/kernel.asm	/^f01001de:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
f01001e5	obj/kern/kernel.asm	/^f01001e5:	00 $/;"	l
f01001e6	obj/kern/kernel.asm	/^f01001e6:	c7 04 24 aa f1 1d f0 	movl   $0xf01df1aa,(%esp)$/;"	l
f01001ed	obj/kern/kernel.asm	/^f01001ed:	e8 f8 37 00 00       	call   f01039ea <env_create>$/;"	l
f01001f2	obj/kern/kernel.asm	/^f01001f2:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
f01001f9	obj/kern/kernel.asm	/^f01001f9:	00 $/;"	l
f01001fa	obj/kern/kernel.asm	/^f01001fa:	c7 04 24 a3 af 23 f0 	movl   $0xf023afa3,(%esp)$/;"	l
f0100201	obj/kern/kernel.asm	/^f0100201:	e8 e4 37 00 00       	call   f01039ea <env_create>$/;"	l
f0100206	obj/kern/kernel.asm	/^f0100206:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f010020d	obj/kern/kernel.asm	/^f010020d:	00 $/;"	l
f010020e	obj/kern/kernel.asm	/^f010020e:	c7 04 24 3f fc 1f f0 	movl   $0xf01ffc3f,(%esp)$/;"	l
f0100215	obj/kern/kernel.asm	/^f0100215:	e8 d0 37 00 00       	call   f01039ea <env_create>$/;"	l
f010021a	obj/kern/kernel.asm	/^f010021a:	e8 4d 04 00 00       	call   f010066c <kbd_intr>$/;"	l
f010021f	obj/kern/kernel.asm	/^f010021f:	e8 d7 4c 00 00       	call   f0104efb <sched_yield>$/;"	l
f0100224	obj/kern/kernel.asm	/^f0100224 <mp_main>:$/;"	l
f0100224	obj/kern/kernel.asm	/^f0100224:	55                   	push   %ebp$/;"	l
f0100225	obj/kern/kernel.asm	/^f0100225:	89 e5                	mov    %esp,%ebp$/;"	l
f0100227	obj/kern/kernel.asm	/^f0100227:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010022a	obj/kern/kernel.asm	/^f010022a:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f010022f	obj/kern/kernel.asm	/^f010022f:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0100234	obj/kern/kernel.asm	/^f0100234:	77 20                	ja     f0100256 <mp_main+0x32>$/;"	l
f0100236	obj/kern/kernel.asm	/^f0100236:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010023a	obj/kern/kernel.asm	/^f010023a:	c7 44 24 08 e8 7f 10 	movl   $0xf0107fe8,0x8(%esp)$/;"	l
f0100241	obj/kern/kernel.asm	/^f0100241:	f0 $/;"	l
f0100242	obj/kern/kernel.asm	/^f0100242:	c7 44 24 04 7c 00 00 	movl   $0x7c,0x4(%esp)$/;"	l
f0100249	obj/kern/kernel.asm	/^f0100249:	00 $/;"	l
f010024a	obj/kern/kernel.asm	/^f010024a:	c7 04 24 3c 80 10 f0 	movl   $0xf010803c,(%esp)$/;"	l
f0100251	obj/kern/kernel.asm	/^f0100251:	e8 ea fd ff ff       	call   f0100040 <_panic>$/;"	l
f0100256	obj/kern/kernel.asm	/^f0100256:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f010025b	obj/kern/kernel.asm	/^f010025b:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010025e	obj/kern/kernel.asm	/^f010025e:	e8 f6 68 00 00       	call   f0106b59 <cpunum>$/;"	l
f0100263	obj/kern/kernel.asm	/^f0100263:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100267	obj/kern/kernel.asm	/^f0100267:	c7 04 24 48 80 10 f0 	movl   $0xf0108048,(%esp)$/;"	l
f010026e	obj/kern/kernel.asm	/^f010026e:	e8 79 3d 00 00       	call   f0103fec <cprintf>$/;"	l
f0100273	obj/kern/kernel.asm	/^f0100273:	e8 fc 68 00 00       	call   f0106b74 <lapic_init>$/;"	l
f0100278	obj/kern/kernel.asm	/^f0100278:	e8 63 35 00 00       	call   f01037e0 <env_init_percpu>$/;"	l
f010027d	obj/kern/kernel.asm	/^f010027d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0100280	obj/kern/kernel.asm	/^f0100280:	e8 8b 3d 00 00       	call   f0104010 <trap_init_percpu>$/;"	l
f0100285	obj/kern/kernel.asm	/^f0100285:	e8 cf 68 00 00       	call   f0106b59 <cpunum>$/;"	l
f010028a	obj/kern/kernel.asm	/^f010028a:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f010028d	obj/kern/kernel.asm	/^f010028d:	81 c2 20 a0 2b f0    	add    $0xf02ba020,%edx$/;"	l
f0100293	obj/kern/kernel.asm	/^f0100293:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100298	obj/kern/kernel.asm	/^f0100298:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f010029c	obj/kern/kernel.asm	/^f010029c:	c7 04 24 c0 53 12 f0 	movl   $0xf01253c0,(%esp)$/;"	l
f01002a3	obj/kern/kernel.asm	/^f01002a3:	e8 2f 6b 00 00       	call   f0106dd7 <spin_lock>$/;"	l
f01002a8	obj/kern/kernel.asm	/^f01002a8:	e8 4e 4c 00 00       	call   f0104efb <sched_yield>$/;"	l
f01002ad	obj/kern/kernel.asm	/^f01002ad <_warn>:$/;"	l
f01002ad	obj/kern/kernel.asm	/^f01002ad:	55                   	push   %ebp$/;"	l
f01002ae	obj/kern/kernel.asm	/^f01002ae:	89 e5                	mov    %esp,%ebp$/;"	l
f01002b0	obj/kern/kernel.asm	/^f01002b0:	53                   	push   %ebx$/;"	l
f01002b1	obj/kern/kernel.asm	/^f01002b1:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01002b4	obj/kern/kernel.asm	/^f01002b4:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f01002b7	obj/kern/kernel.asm	/^f01002b7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01002ba	obj/kern/kernel.asm	/^f01002ba:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01002be	obj/kern/kernel.asm	/^f01002be:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01002c1	obj/kern/kernel.asm	/^f01002c1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01002c5	obj/kern/kernel.asm	/^f01002c5:	c7 04 24 5e 80 10 f0 	movl   $0xf010805e,(%esp)$/;"	l
f01002cc	obj/kern/kernel.asm	/^f01002cc:	e8 1b 3d 00 00       	call   f0103fec <cprintf>$/;"	l
f01002d1	obj/kern/kernel.asm	/^f01002d1:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01002d5	obj/kern/kernel.asm	/^f01002d5:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01002d8	obj/kern/kernel.asm	/^f01002d8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01002db	obj/kern/kernel.asm	/^f01002db:	e8 d9 3c 00 00       	call   f0103fb9 <vcprintf>$/;"	l
f01002e0	obj/kern/kernel.asm	/^f01002e0:	c7 04 24 1b 92 10 f0 	movl   $0xf010921b,(%esp)$/;"	l
f01002e7	obj/kern/kernel.asm	/^f01002e7:	e8 00 3d 00 00       	call   f0103fec <cprintf>$/;"	l
f01002ec	obj/kern/kernel.asm	/^f01002ec:	83 c4 14             	add    $0x14,%esp$/;"	l
f01002ef	obj/kern/kernel.asm	/^f01002ef:	5b                   	pop    %ebx$/;"	l
f01002f0	obj/kern/kernel.asm	/^f01002f0:	5d                   	pop    %ebp$/;"	l
f01002f1	obj/kern/kernel.asm	/^f01002f1:	c3                   	ret    $/;"	l
f01002f2	obj/kern/kernel.asm	/^f01002f2:	66 90                	xchg   %ax,%ax$/;"	l
f01002f4	obj/kern/kernel.asm	/^f01002f4:	66 90                	xchg   %ax,%ax$/;"	l
f01002f6	obj/kern/kernel.asm	/^f01002f6:	66 90                	xchg   %ax,%ax$/;"	l
f01002f8	obj/kern/kernel.asm	/^f01002f8:	66 90                	xchg   %ax,%ax$/;"	l
f01002fa	obj/kern/kernel.asm	/^f01002fa:	66 90                	xchg   %ax,%ax$/;"	l
f01002fc	obj/kern/kernel.asm	/^f01002fc:	66 90                	xchg   %ax,%ax$/;"	l
f01002fe	obj/kern/kernel.asm	/^f01002fe:	66 90                	xchg   %ax,%ax$/;"	l
f0100300	obj/kern/kernel.asm	/^f0100300 <serial_proc_data>:$/;"	l
f0100300	obj/kern/kernel.asm	/^f0100300:	55                   	push   %ebp$/;"	l
f0100301	obj/kern/kernel.asm	/^f0100301:	89 e5                	mov    %esp,%ebp$/;"	l
f0100303	obj/kern/kernel.asm	/^f0100303:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f0100308	obj/kern/kernel.asm	/^f0100308:	ec                   	in     (%dx),%al$/;"	l
f0100309	obj/kern/kernel.asm	/^f0100309:	a8 01                	test   $0x1,%al$/;"	l
f010030b	obj/kern/kernel.asm	/^f010030b:	74 08                	je     f0100315 <serial_proc_data+0x15>$/;"	l
f010030d	obj/kern/kernel.asm	/^f010030d:	b2 f8                	mov    $0xf8,%dl$/;"	l
f010030f	obj/kern/kernel.asm	/^f010030f:	ec                   	in     (%dx),%al$/;"	l
f0100310	obj/kern/kernel.asm	/^f0100310:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100313	obj/kern/kernel.asm	/^f0100313:	eb 05                	jmp    f010031a <serial_proc_data+0x1a>$/;"	l
f0100315	obj/kern/kernel.asm	/^f0100315:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f010031a	obj/kern/kernel.asm	/^f010031a:	5d                   	pop    %ebp$/;"	l
f010031b	obj/kern/kernel.asm	/^f010031b:	c3                   	ret    $/;"	l
f010031c	obj/kern/kernel.asm	/^f010031c <cons_intr>:$/;"	l
f010031c	obj/kern/kernel.asm	/^f010031c:	55                   	push   %ebp$/;"	l
f010031d	obj/kern/kernel.asm	/^f010031d:	89 e5                	mov    %esp,%ebp$/;"	l
f010031f	obj/kern/kernel.asm	/^f010031f:	53                   	push   %ebx$/;"	l
f0100320	obj/kern/kernel.asm	/^f0100320:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100323	obj/kern/kernel.asm	/^f0100323:	89 c3                	mov    %eax,%ebx$/;"	l
f0100325	obj/kern/kernel.asm	/^f0100325:	eb 2a                	jmp    f0100351 <cons_intr+0x35>$/;"	l
f0100327	obj/kern/kernel.asm	/^f0100327:	85 d2                	test   %edx,%edx$/;"	l
f0100329	obj/kern/kernel.asm	/^f0100329:	74 26                	je     f0100351 <cons_intr+0x35>$/;"	l
f010032b	obj/kern/kernel.asm	/^f010032b:	a1 24 92 2b f0       	mov    0xf02b9224,%eax$/;"	l
f0100330	obj/kern/kernel.asm	/^f0100330:	8d 48 01             	lea    0x1(%eax),%ecx$/;"	l
f0100333	obj/kern/kernel.asm	/^f0100333:	89 0d 24 92 2b f0    	mov    %ecx,0xf02b9224$/;"	l
f0100339	obj/kern/kernel.asm	/^f0100339:	88 90 20 90 2b f0    	mov    %dl,-0xfd46fe0(%eax)$/;"	l
f010033f	obj/kern/kernel.asm	/^f010033f:	81 f9 00 02 00 00    	cmp    $0x200,%ecx$/;"	l
f0100345	obj/kern/kernel.asm	/^f0100345:	75 0a                	jne    f0100351 <cons_intr+0x35>$/;"	l
f0100347	obj/kern/kernel.asm	/^f0100347:	c7 05 24 92 2b f0 00 	movl   $0x0,0xf02b9224$/;"	l
f010034e	obj/kern/kernel.asm	/^f010034e:	00 00 00 $/;"	l
f0100351	obj/kern/kernel.asm	/^f0100351:	ff d3                	call   *%ebx$/;"	l
f0100353	obj/kern/kernel.asm	/^f0100353:	89 c2                	mov    %eax,%edx$/;"	l
f0100355	obj/kern/kernel.asm	/^f0100355:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0100358	obj/kern/kernel.asm	/^f0100358:	75 cd                	jne    f0100327 <cons_intr+0xb>$/;"	l
f010035a	obj/kern/kernel.asm	/^f010035a:	83 c4 04             	add    $0x4,%esp$/;"	l
f010035d	obj/kern/kernel.asm	/^f010035d:	5b                   	pop    %ebx$/;"	l
f010035e	obj/kern/kernel.asm	/^f010035e:	5d                   	pop    %ebp$/;"	l
f010035f	obj/kern/kernel.asm	/^f010035f:	c3                   	ret    $/;"	l
f0100360	obj/kern/kernel.asm	/^f0100360 <kbd_proc_data>:$/;"	l
f0100360	obj/kern/kernel.asm	/^f0100360:	ba 64 00 00 00       	mov    $0x64,%edx$/;"	l
f0100365	obj/kern/kernel.asm	/^f0100365:	ec                   	in     (%dx),%al$/;"	l
f0100366	obj/kern/kernel.asm	/^f0100366:	a8 01                	test   $0x1,%al$/;"	l
f0100368	obj/kern/kernel.asm	/^f0100368:	0f 84 ef 00 00 00    	je     f010045d <kbd_proc_data+0xfd>$/;"	l
f010036e	obj/kern/kernel.asm	/^f010036e:	b2 60                	mov    $0x60,%dl$/;"	l
f0100370	obj/kern/kernel.asm	/^f0100370:	ec                   	in     (%dx),%al$/;"	l
f0100371	obj/kern/kernel.asm	/^f0100371:	89 c2                	mov    %eax,%edx$/;"	l
f0100373	obj/kern/kernel.asm	/^f0100373:	3c e0                	cmp    $0xe0,%al$/;"	l
f0100375	obj/kern/kernel.asm	/^f0100375:	75 0d                	jne    f0100384 <kbd_proc_data+0x24>$/;"	l
f0100377	obj/kern/kernel.asm	/^f0100377:	83 0d 00 90 2b f0 40 	orl    $0x40,0xf02b9000$/;"	l
f010037e	obj/kern/kernel.asm	/^f010037e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100383	obj/kern/kernel.asm	/^f0100383:	c3                   	ret    $/;"	l
f0100384	obj/kern/kernel.asm	/^f0100384:	55                   	push   %ebp$/;"	l
f0100385	obj/kern/kernel.asm	/^f0100385:	89 e5                	mov    %esp,%ebp$/;"	l
f0100387	obj/kern/kernel.asm	/^f0100387:	53                   	push   %ebx$/;"	l
f0100388	obj/kern/kernel.asm	/^f0100388:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010038b	obj/kern/kernel.asm	/^f010038b:	84 c0                	test   %al,%al$/;"	l
f010038d	obj/kern/kernel.asm	/^f010038d:	79 37                	jns    f01003c6 <kbd_proc_data+0x66>$/;"	l
f010038f	obj/kern/kernel.asm	/^f010038f:	8b 0d 00 90 2b f0    	mov    0xf02b9000,%ecx$/;"	l
f0100395	obj/kern/kernel.asm	/^f0100395:	89 cb                	mov    %ecx,%ebx$/;"	l
f0100397	obj/kern/kernel.asm	/^f0100397:	83 e3 40             	and    $0x40,%ebx$/;"	l
f010039a	obj/kern/kernel.asm	/^f010039a:	83 e0 7f             	and    $0x7f,%eax$/;"	l
f010039d	obj/kern/kernel.asm	/^f010039d:	85 db                	test   %ebx,%ebx$/;"	l
f010039f	obj/kern/kernel.asm	/^f010039f:	0f 44 d0             	cmove  %eax,%edx$/;"	l
f01003a2	obj/kern/kernel.asm	/^f01003a2:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f01003a5	obj/kern/kernel.asm	/^f01003a5:	0f b6 82 e0 81 10 f0 	movzbl -0xfef7e20(%edx),%eax$/;"	l
f01003ac	obj/kern/kernel.asm	/^f01003ac:	83 c8 40             	or     $0x40,%eax$/;"	l
f01003af	obj/kern/kernel.asm	/^f01003af:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01003b2	obj/kern/kernel.asm	/^f01003b2:	f7 d0                	not    %eax$/;"	l
f01003b4	obj/kern/kernel.asm	/^f01003b4:	21 c1                	and    %eax,%ecx$/;"	l
f01003b6	obj/kern/kernel.asm	/^f01003b6:	89 0d 00 90 2b f0    	mov    %ecx,0xf02b9000$/;"	l
f01003bc	obj/kern/kernel.asm	/^f01003bc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01003c1	obj/kern/kernel.asm	/^f01003c1:	e9 9d 00 00 00       	jmp    f0100463 <kbd_proc_data+0x103>$/;"	l
f01003c6	obj/kern/kernel.asm	/^f01003c6:	8b 0d 00 90 2b f0    	mov    0xf02b9000,%ecx$/;"	l
f01003cc	obj/kern/kernel.asm	/^f01003cc:	f6 c1 40             	test   $0x40,%cl$/;"	l
f01003cf	obj/kern/kernel.asm	/^f01003cf:	74 0e                	je     f01003df <kbd_proc_data+0x7f>$/;"	l
f01003d1	obj/kern/kernel.asm	/^f01003d1:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f01003d4	obj/kern/kernel.asm	/^f01003d4:	89 c2                	mov    %eax,%edx$/;"	l
f01003d6	obj/kern/kernel.asm	/^f01003d6:	83 e1 bf             	and    $0xffffffbf,%ecx$/;"	l
f01003d9	obj/kern/kernel.asm	/^f01003d9:	89 0d 00 90 2b f0    	mov    %ecx,0xf02b9000$/;"	l
f01003df	obj/kern/kernel.asm	/^f01003df:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f01003e2	obj/kern/kernel.asm	/^f01003e2:	0f b6 82 e0 81 10 f0 	movzbl -0xfef7e20(%edx),%eax$/;"	l
f01003e9	obj/kern/kernel.asm	/^f01003e9:	0b 05 00 90 2b f0    	or     0xf02b9000,%eax$/;"	l
f01003ef	obj/kern/kernel.asm	/^f01003ef:	0f b6 8a e0 80 10 f0 	movzbl -0xfef7f20(%edx),%ecx$/;"	l
f01003f6	obj/kern/kernel.asm	/^f01003f6:	31 c8                	xor    %ecx,%eax$/;"	l
f01003f8	obj/kern/kernel.asm	/^f01003f8:	a3 00 90 2b f0       	mov    %eax,0xf02b9000$/;"	l
f01003fd	obj/kern/kernel.asm	/^f01003fd:	89 c1                	mov    %eax,%ecx$/;"	l
f01003ff	obj/kern/kernel.asm	/^f01003ff:	83 e1 03             	and    $0x3,%ecx$/;"	l
f0100402	obj/kern/kernel.asm	/^f0100402:	8b 0c 8d c0 80 10 f0 	mov    -0xfef7f40(,%ecx,4),%ecx$/;"	l
f0100409	obj/kern/kernel.asm	/^f0100409:	0f b6 14 11          	movzbl (%ecx,%edx,1),%edx$/;"	l
f010040d	obj/kern/kernel.asm	/^f010040d:	0f b6 da             	movzbl %dl,%ebx$/;"	l
f0100410	obj/kern/kernel.asm	/^f0100410:	a8 08                	test   $0x8,%al$/;"	l
f0100412	obj/kern/kernel.asm	/^f0100412:	74 1b                	je     f010042f <kbd_proc_data+0xcf>$/;"	l
f0100414	obj/kern/kernel.asm	/^f0100414:	89 da                	mov    %ebx,%edx$/;"	l
f0100416	obj/kern/kernel.asm	/^f0100416:	8d 4b 9f             	lea    -0x61(%ebx),%ecx$/;"	l
f0100419	obj/kern/kernel.asm	/^f0100419:	83 f9 19             	cmp    $0x19,%ecx$/;"	l
f010041c	obj/kern/kernel.asm	/^f010041c:	77 05                	ja     f0100423 <kbd_proc_data+0xc3>$/;"	l
f010041e	obj/kern/kernel.asm	/^f010041e:	83 eb 20             	sub    $0x20,%ebx$/;"	l
f0100421	obj/kern/kernel.asm	/^f0100421:	eb 0c                	jmp    f010042f <kbd_proc_data+0xcf>$/;"	l
f0100423	obj/kern/kernel.asm	/^f0100423:	83 ea 41             	sub    $0x41,%edx$/;"	l
f0100426	obj/kern/kernel.asm	/^f0100426:	8d 4b 20             	lea    0x20(%ebx),%ecx$/;"	l
f0100429	obj/kern/kernel.asm	/^f0100429:	83 fa 19             	cmp    $0x19,%edx$/;"	l
f010042c	obj/kern/kernel.asm	/^f010042c:	0f 46 d9             	cmovbe %ecx,%ebx$/;"	l
f010042f	obj/kern/kernel.asm	/^f010042f:	f7 d0                	not    %eax$/;"	l
f0100431	obj/kern/kernel.asm	/^f0100431:	89 c2                	mov    %eax,%edx$/;"	l
f0100433	obj/kern/kernel.asm	/^f0100433:	89 d8                	mov    %ebx,%eax$/;"	l
f0100435	obj/kern/kernel.asm	/^f0100435:	f6 c2 06             	test   $0x6,%dl$/;"	l
f0100438	obj/kern/kernel.asm	/^f0100438:	75 29                	jne    f0100463 <kbd_proc_data+0x103>$/;"	l
f010043a	obj/kern/kernel.asm	/^f010043a:	81 fb e9 00 00 00    	cmp    $0xe9,%ebx$/;"	l
f0100440	obj/kern/kernel.asm	/^f0100440:	75 21                	jne    f0100463 <kbd_proc_data+0x103>$/;"	l
f0100442	obj/kern/kernel.asm	/^f0100442:	c7 04 24 78 80 10 f0 	movl   $0xf0108078,(%esp)$/;"	l
f0100449	obj/kern/kernel.asm	/^f0100449:	e8 9e 3b 00 00       	call   f0103fec <cprintf>$/;"	l
f010044e	obj/kern/kernel.asm	/^f010044e:	ba 92 00 00 00       	mov    $0x92,%edx$/;"	l
f0100453	obj/kern/kernel.asm	/^f0100453:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f0100458	obj/kern/kernel.asm	/^f0100458:	ee                   	out    %al,(%dx)$/;"	l
f0100459	obj/kern/kernel.asm	/^f0100459:	89 d8                	mov    %ebx,%eax$/;"	l
f010045b	obj/kern/kernel.asm	/^f010045b:	eb 06                	jmp    f0100463 <kbd_proc_data+0x103>$/;"	l
f010045d	obj/kern/kernel.asm	/^f010045d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100462	obj/kern/kernel.asm	/^f0100462:	c3                   	ret    $/;"	l
f0100463	obj/kern/kernel.asm	/^f0100463:	83 c4 14             	add    $0x14,%esp$/;"	l
f0100466	obj/kern/kernel.asm	/^f0100466:	5b                   	pop    %ebx$/;"	l
f0100467	obj/kern/kernel.asm	/^f0100467:	5d                   	pop    %ebp$/;"	l
f0100468	obj/kern/kernel.asm	/^f0100468:	c3                   	ret    $/;"	l
f0100469	obj/kern/kernel.asm	/^f0100469 <cons_putc>:$/;"	l
f0100469	obj/kern/kernel.asm	/^f0100469:	55                   	push   %ebp$/;"	l
f010046a	obj/kern/kernel.asm	/^f010046a:	89 e5                	mov    %esp,%ebp$/;"	l
f010046c	obj/kern/kernel.asm	/^f010046c:	57                   	push   %edi$/;"	l
f010046d	obj/kern/kernel.asm	/^f010046d:	56                   	push   %esi$/;"	l
f010046e	obj/kern/kernel.asm	/^f010046e:	53                   	push   %ebx$/;"	l
f010046f	obj/kern/kernel.asm	/^f010046f:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0100472	obj/kern/kernel.asm	/^f0100472:	89 c7                	mov    %eax,%edi$/;"	l
f0100474	obj/kern/kernel.asm	/^f0100474:	bb 01 32 00 00       	mov    $0x3201,%ebx$/;"	l
f0100479	obj/kern/kernel.asm	/^f0100479:	be fd 03 00 00       	mov    $0x3fd,%esi$/;"	l
f010047e	obj/kern/kernel.asm	/^f010047e:	b9 84 00 00 00       	mov    $0x84,%ecx$/;"	l
f0100483	obj/kern/kernel.asm	/^f0100483:	eb 06                	jmp    f010048b <cons_putc+0x22>$/;"	l
f0100485	obj/kern/kernel.asm	/^f0100485:	89 ca                	mov    %ecx,%edx$/;"	l
f0100487	obj/kern/kernel.asm	/^f0100487:	ec                   	in     (%dx),%al$/;"	l
f0100488	obj/kern/kernel.asm	/^f0100488:	ec                   	in     (%dx),%al$/;"	l
f0100489	obj/kern/kernel.asm	/^f0100489:	ec                   	in     (%dx),%al$/;"	l
f010048a	obj/kern/kernel.asm	/^f010048a:	ec                   	in     (%dx),%al$/;"	l
f010048b	obj/kern/kernel.asm	/^f010048b:	89 f2                	mov    %esi,%edx$/;"	l
f010048d	obj/kern/kernel.asm	/^f010048d:	ec                   	in     (%dx),%al$/;"	l
f010048e	obj/kern/kernel.asm	/^f010048e:	a8 20                	test   $0x20,%al$/;"	l
f0100490	obj/kern/kernel.asm	/^f0100490:	75 05                	jne    f0100497 <cons_putc+0x2e>$/;"	l
f0100492	obj/kern/kernel.asm	/^f0100492:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0100495	obj/kern/kernel.asm	/^f0100495:	75 ee                	jne    f0100485 <cons_putc+0x1c>$/;"	l
f0100497	obj/kern/kernel.asm	/^f0100497:	89 f8                	mov    %edi,%eax$/;"	l
f0100499	obj/kern/kernel.asm	/^f0100499:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010049c	obj/kern/kernel.asm	/^f010049c:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f010049f	obj/kern/kernel.asm	/^f010049f:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f01004a4	obj/kern/kernel.asm	/^f01004a4:	ee                   	out    %al,(%dx)$/;"	l
f01004a5	obj/kern/kernel.asm	/^f01004a5:	bb 01 32 00 00       	mov    $0x3201,%ebx$/;"	l
f01004aa	obj/kern/kernel.asm	/^f01004aa:	be 79 03 00 00       	mov    $0x379,%esi$/;"	l
f01004af	obj/kern/kernel.asm	/^f01004af:	b9 84 00 00 00       	mov    $0x84,%ecx$/;"	l
f01004b4	obj/kern/kernel.asm	/^f01004b4:	eb 06                	jmp    f01004bc <cons_putc+0x53>$/;"	l
f01004b6	obj/kern/kernel.asm	/^f01004b6:	89 ca                	mov    %ecx,%edx$/;"	l
f01004b8	obj/kern/kernel.asm	/^f01004b8:	ec                   	in     (%dx),%al$/;"	l
f01004b9	obj/kern/kernel.asm	/^f01004b9:	ec                   	in     (%dx),%al$/;"	l
f01004ba	obj/kern/kernel.asm	/^f01004ba:	ec                   	in     (%dx),%al$/;"	l
f01004bb	obj/kern/kernel.asm	/^f01004bb:	ec                   	in     (%dx),%al$/;"	l
f01004bc	obj/kern/kernel.asm	/^f01004bc:	89 f2                	mov    %esi,%edx$/;"	l
f01004be	obj/kern/kernel.asm	/^f01004be:	ec                   	in     (%dx),%al$/;"	l
f01004bf	obj/kern/kernel.asm	/^f01004bf:	84 c0                	test   %al,%al$/;"	l
f01004c1	obj/kern/kernel.asm	/^f01004c1:	78 05                	js     f01004c8 <cons_putc+0x5f>$/;"	l
f01004c3	obj/kern/kernel.asm	/^f01004c3:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f01004c6	obj/kern/kernel.asm	/^f01004c6:	75 ee                	jne    f01004b6 <cons_putc+0x4d>$/;"	l
f01004c8	obj/kern/kernel.asm	/^f01004c8:	ba 78 03 00 00       	mov    $0x378,%edx$/;"	l
f01004cd	obj/kern/kernel.asm	/^f01004cd:	0f b6 45 e4          	movzbl -0x1c(%ebp),%eax$/;"	l
f01004d1	obj/kern/kernel.asm	/^f01004d1:	ee                   	out    %al,(%dx)$/;"	l
f01004d2	obj/kern/kernel.asm	/^f01004d2:	b2 7a                	mov    $0x7a,%dl$/;"	l
f01004d4	obj/kern/kernel.asm	/^f01004d4:	b8 0d 00 00 00       	mov    $0xd,%eax$/;"	l
f01004d9	obj/kern/kernel.asm	/^f01004d9:	ee                   	out    %al,(%dx)$/;"	l
f01004da	obj/kern/kernel.asm	/^f01004da:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f01004df	obj/kern/kernel.asm	/^f01004df:	ee                   	out    %al,(%dx)$/;"	l
f01004e0	obj/kern/kernel.asm	/^f01004e0:	89 f8                	mov    %edi,%eax$/;"	l
f01004e2	obj/kern/kernel.asm	/^f01004e2:	0b 05 a0 9e 2b f0    	or     0xf02b9ea0,%eax$/;"	l
f01004e8	obj/kern/kernel.asm	/^f01004e8:	89 c1                	mov    %eax,%ecx$/;"	l
f01004ea	obj/kern/kernel.asm	/^f01004ea:	81 e1 00 ff ff ff    	and    $0xffffff00,%ecx$/;"	l
f01004f0	obj/kern/kernel.asm	/^f01004f0:	89 c2                	mov    %eax,%edx$/;"	l
f01004f2	obj/kern/kernel.asm	/^f01004f2:	80 ce 07             	or     $0x7,%dh$/;"	l
f01004f5	obj/kern/kernel.asm	/^f01004f5:	85 c9                	test   %ecx,%ecx$/;"	l
f01004f7	obj/kern/kernel.asm	/^f01004f7:	0f 44 c2             	cmove  %edx,%eax$/;"	l
f01004fa	obj/kern/kernel.asm	/^f01004fa:	0f b6 d0             	movzbl %al,%edx$/;"	l
f01004fd	obj/kern/kernel.asm	/^f01004fd:	83 fa 09             	cmp    $0x9,%edx$/;"	l
f0100500	obj/kern/kernel.asm	/^f0100500:	74 79                	je     f010057b <cons_putc+0x112>$/;"	l
f0100502	obj/kern/kernel.asm	/^f0100502:	83 fa 09             	cmp    $0x9,%edx$/;"	l
f0100505	obj/kern/kernel.asm	/^f0100505:	7f 0e                	jg     f0100515 <cons_putc+0xac>$/;"	l
f0100507	obj/kern/kernel.asm	/^f0100507:	83 fa 08             	cmp    $0x8,%edx$/;"	l
f010050a	obj/kern/kernel.asm	/^f010050a:	74 1b                	je     f0100527 <cons_putc+0xbe>$/;"	l
f010050c	obj/kern/kernel.asm	/^f010050c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0100510	obj/kern/kernel.asm	/^f0100510:	e9 9a 00 00 00       	jmp    f01005af <cons_putc+0x146>$/;"	l
f0100515	obj/kern/kernel.asm	/^f0100515:	83 fa 0a             	cmp    $0xa,%edx$/;"	l
f0100518	obj/kern/kernel.asm	/^f0100518:	74 3b                	je     f0100555 <cons_putc+0xec>$/;"	l
f010051a	obj/kern/kernel.asm	/^f010051a:	83 fa 0d             	cmp    $0xd,%edx$/;"	l
f010051d	obj/kern/kernel.asm	/^f010051d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0100520	obj/kern/kernel.asm	/^f0100520:	74 3b                	je     f010055d <cons_putc+0xf4>$/;"	l
f0100522	obj/kern/kernel.asm	/^f0100522:	e9 88 00 00 00       	jmp    f01005af <cons_putc+0x146>$/;"	l
f0100527	obj/kern/kernel.asm	/^f0100527:	0f b7 15 28 92 2b f0 	movzwl 0xf02b9228,%edx$/;"	l
f010052e	obj/kern/kernel.asm	/^f010052e:	66 85 d2             	test   %dx,%dx$/;"	l
f0100531	obj/kern/kernel.asm	/^f0100531:	0f 84 e3 00 00 00    	je     f010061a <cons_putc+0x1b1>$/;"	l
f0100537	obj/kern/kernel.asm	/^f0100537:	83 ea 01             	sub    $0x1,%edx$/;"	l
f010053a	obj/kern/kernel.asm	/^f010053a:	66 89 15 28 92 2b f0 	mov    %dx,0xf02b9228$/;"	l
f0100541	obj/kern/kernel.asm	/^f0100541:	0f b7 d2             	movzwl %dx,%edx$/;"	l
f0100544	obj/kern/kernel.asm	/^f0100544:	b0 00                	mov    $0x0,%al$/;"	l
f0100546	obj/kern/kernel.asm	/^f0100546:	83 c8 20             	or     $0x20,%eax$/;"	l
f0100549	obj/kern/kernel.asm	/^f0100549:	8b 0d 2c 92 2b f0    	mov    0xf02b922c,%ecx$/;"	l
f010054f	obj/kern/kernel.asm	/^f010054f:	66 89 04 51          	mov    %ax,(%ecx,%edx,2)$/;"	l
f0100553	obj/kern/kernel.asm	/^f0100553:	eb 78                	jmp    f01005cd <cons_putc+0x164>$/;"	l
f0100555	obj/kern/kernel.asm	/^f0100555:	66 83 05 28 92 2b f0 	addw   $0x50,0xf02b9228$/;"	l
f010055c	obj/kern/kernel.asm	/^f010055c:	50 $/;"	l
f010055d	obj/kern/kernel.asm	/^f010055d:	0f b7 05 28 92 2b f0 	movzwl 0xf02b9228,%eax$/;"	l
f0100564	obj/kern/kernel.asm	/^f0100564:	69 c0 cd cc 00 00    	imul   $0xcccd,%eax,%eax$/;"	l
f010056a	obj/kern/kernel.asm	/^f010056a:	c1 e8 16             	shr    $0x16,%eax$/;"	l
f010056d	obj/kern/kernel.asm	/^f010056d:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f0100570	obj/kern/kernel.asm	/^f0100570:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f0100573	obj/kern/kernel.asm	/^f0100573:	66 a3 28 92 2b f0    	mov    %ax,0xf02b9228$/;"	l
f0100579	obj/kern/kernel.asm	/^f0100579:	eb 52                	jmp    f01005cd <cons_putc+0x164>$/;"	l
f010057b	obj/kern/kernel.asm	/^f010057b:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100580	obj/kern/kernel.asm	/^f0100580:	e8 e4 fe ff ff       	call   f0100469 <cons_putc>$/;"	l
f0100585	obj/kern/kernel.asm	/^f0100585:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f010058a	obj/kern/kernel.asm	/^f010058a:	e8 da fe ff ff       	call   f0100469 <cons_putc>$/;"	l
f010058f	obj/kern/kernel.asm	/^f010058f:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100594	obj/kern/kernel.asm	/^f0100594:	e8 d0 fe ff ff       	call   f0100469 <cons_putc>$/;"	l
f0100599	obj/kern/kernel.asm	/^f0100599:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f010059e	obj/kern/kernel.asm	/^f010059e:	e8 c6 fe ff ff       	call   f0100469 <cons_putc>$/;"	l
f01005a3	obj/kern/kernel.asm	/^f01005a3:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01005a8	obj/kern/kernel.asm	/^f01005a8:	e8 bc fe ff ff       	call   f0100469 <cons_putc>$/;"	l
f01005ad	obj/kern/kernel.asm	/^f01005ad:	eb 1e                	jmp    f01005cd <cons_putc+0x164>$/;"	l
f01005af	obj/kern/kernel.asm	/^f01005af:	0f b7 15 28 92 2b f0 	movzwl 0xf02b9228,%edx$/;"	l
f01005b6	obj/kern/kernel.asm	/^f01005b6:	8d 4a 01             	lea    0x1(%edx),%ecx$/;"	l
f01005b9	obj/kern/kernel.asm	/^f01005b9:	66 89 0d 28 92 2b f0 	mov    %cx,0xf02b9228$/;"	l
f01005c0	obj/kern/kernel.asm	/^f01005c0:	0f b7 d2             	movzwl %dx,%edx$/;"	l
f01005c3	obj/kern/kernel.asm	/^f01005c3:	8b 0d 2c 92 2b f0    	mov    0xf02b922c,%ecx$/;"	l
f01005c9	obj/kern/kernel.asm	/^f01005c9:	66 89 04 51          	mov    %ax,(%ecx,%edx,2)$/;"	l
f01005cd	obj/kern/kernel.asm	/^f01005cd:	66 81 3d 28 92 2b f0 	cmpw   $0x7cf,0xf02b9228$/;"	l
f01005d4	obj/kern/kernel.asm	/^f01005d4:	cf 07 $/;"	l
f01005d6	obj/kern/kernel.asm	/^f01005d6:	76 42                	jbe    f010061a <cons_putc+0x1b1>$/;"	l
f01005d8	obj/kern/kernel.asm	/^f01005d8:	a1 2c 92 2b f0       	mov    0xf02b922c,%eax$/;"	l
f01005dd	obj/kern/kernel.asm	/^f01005dd:	c7 44 24 08 00 0f 00 	movl   $0xf00,0x8(%esp)$/;"	l
f01005e4	obj/kern/kernel.asm	/^f01005e4:	00 $/;"	l
f01005e5	obj/kern/kernel.asm	/^f01005e5:	8d 90 a0 00 00 00    	lea    0xa0(%eax),%edx$/;"	l
f01005eb	obj/kern/kernel.asm	/^f01005eb:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01005ef	obj/kern/kernel.asm	/^f01005ef:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01005f2	obj/kern/kernel.asm	/^f01005f2:	e8 5d 5f 00 00       	call   f0106554 <memmove>$/;"	l
f01005f7	obj/kern/kernel.asm	/^f01005f7:	8b 15 2c 92 2b f0    	mov    0xf02b922c,%edx$/;"	l
f01005fd	obj/kern/kernel.asm	/^f01005fd:	b8 80 07 00 00       	mov    $0x780,%eax$/;"	l
f0100602	obj/kern/kernel.asm	/^f0100602:	66 c7 04 42 20 07    	movw   $0x720,(%edx,%eax,2)$/;"	l
f0100608	obj/kern/kernel.asm	/^f0100608:	83 c0 01             	add    $0x1,%eax$/;"	l
f010060b	obj/kern/kernel.asm	/^f010060b:	3d d0 07 00 00       	cmp    $0x7d0,%eax$/;"	l
f0100610	obj/kern/kernel.asm	/^f0100610:	75 f0                	jne    f0100602 <cons_putc+0x199>$/;"	l
f0100612	obj/kern/kernel.asm	/^f0100612:	66 83 2d 28 92 2b f0 	subw   $0x50,0xf02b9228$/;"	l
f0100619	obj/kern/kernel.asm	/^f0100619:	50 $/;"	l
f010061a	obj/kern/kernel.asm	/^f010061a:	8b 0d 30 92 2b f0    	mov    0xf02b9230,%ecx$/;"	l
f0100620	obj/kern/kernel.asm	/^f0100620:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f0100625	obj/kern/kernel.asm	/^f0100625:	89 ca                	mov    %ecx,%edx$/;"	l
f0100627	obj/kern/kernel.asm	/^f0100627:	ee                   	out    %al,(%dx)$/;"	l
f0100628	obj/kern/kernel.asm	/^f0100628:	0f b7 1d 28 92 2b f0 	movzwl 0xf02b9228,%ebx$/;"	l
f010062f	obj/kern/kernel.asm	/^f010062f:	8d 71 01             	lea    0x1(%ecx),%esi$/;"	l
f0100632	obj/kern/kernel.asm	/^f0100632:	89 d8                	mov    %ebx,%eax$/;"	l
f0100634	obj/kern/kernel.asm	/^f0100634:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f0100638	obj/kern/kernel.asm	/^f0100638:	89 f2                	mov    %esi,%edx$/;"	l
f010063a	obj/kern/kernel.asm	/^f010063a:	ee                   	out    %al,(%dx)$/;"	l
f010063b	obj/kern/kernel.asm	/^f010063b:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f0100640	obj/kern/kernel.asm	/^f0100640:	89 ca                	mov    %ecx,%edx$/;"	l
f0100642	obj/kern/kernel.asm	/^f0100642:	ee                   	out    %al,(%dx)$/;"	l
f0100643	obj/kern/kernel.asm	/^f0100643:	89 d8                	mov    %ebx,%eax$/;"	l
f0100645	obj/kern/kernel.asm	/^f0100645:	89 f2                	mov    %esi,%edx$/;"	l
f0100647	obj/kern/kernel.asm	/^f0100647:	ee                   	out    %al,(%dx)$/;"	l
f0100648	obj/kern/kernel.asm	/^f0100648:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f010064b	obj/kern/kernel.asm	/^f010064b:	5b                   	pop    %ebx$/;"	l
f010064c	obj/kern/kernel.asm	/^f010064c:	5e                   	pop    %esi$/;"	l
f010064d	obj/kern/kernel.asm	/^f010064d:	5f                   	pop    %edi$/;"	l
f010064e	obj/kern/kernel.asm	/^f010064e:	5d                   	pop    %ebp$/;"	l
f010064f	obj/kern/kernel.asm	/^f010064f:	c3                   	ret    $/;"	l
f0100650	obj/kern/kernel.asm	/^f0100650 <serial_intr>:$/;"	l
f0100650	obj/kern/kernel.asm	/^f0100650:	80 3d 34 92 2b f0 00 	cmpb   $0x0,0xf02b9234$/;"	l
f0100657	obj/kern/kernel.asm	/^f0100657:	74 11                	je     f010066a <serial_intr+0x1a>$/;"	l
f0100659	obj/kern/kernel.asm	/^f0100659:	55                   	push   %ebp$/;"	l
f010065a	obj/kern/kernel.asm	/^f010065a:	89 e5                	mov    %esp,%ebp$/;"	l
f010065c	obj/kern/kernel.asm	/^f010065c:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010065f	obj/kern/kernel.asm	/^f010065f:	b8 00 03 10 f0       	mov    $0xf0100300,%eax$/;"	l
f0100664	obj/kern/kernel.asm	/^f0100664:	e8 b3 fc ff ff       	call   f010031c <cons_intr>$/;"	l
f0100669	obj/kern/kernel.asm	/^f0100669:	c9                   	leave  $/;"	l
f010066a	obj/kern/kernel.asm	/^f010066a:	f3 c3                	repz ret $/;"	l
f010066c	obj/kern/kernel.asm	/^f010066c <kbd_intr>:$/;"	l
f010066c	obj/kern/kernel.asm	/^f010066c:	55                   	push   %ebp$/;"	l
f010066d	obj/kern/kernel.asm	/^f010066d:	89 e5                	mov    %esp,%ebp$/;"	l
f010066f	obj/kern/kernel.asm	/^f010066f:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100672	obj/kern/kernel.asm	/^f0100672:	b8 60 03 10 f0       	mov    $0xf0100360,%eax$/;"	l
f0100677	obj/kern/kernel.asm	/^f0100677:	e8 a0 fc ff ff       	call   f010031c <cons_intr>$/;"	l
f010067c	obj/kern/kernel.asm	/^f010067c:	c9                   	leave  $/;"	l
f010067d	obj/kern/kernel.asm	/^f010067d:	c3                   	ret    $/;"	l
f010067e	obj/kern/kernel.asm	/^f010067e <cons_getc>:$/;"	l
f010067e	obj/kern/kernel.asm	/^f010067e:	55                   	push   %ebp$/;"	l
f010067f	obj/kern/kernel.asm	/^f010067f:	89 e5                	mov    %esp,%ebp$/;"	l
f0100681	obj/kern/kernel.asm	/^f0100681:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100684	obj/kern/kernel.asm	/^f0100684:	e8 c7 ff ff ff       	call   f0100650 <serial_intr>$/;"	l
f0100689	obj/kern/kernel.asm	/^f0100689:	e8 de ff ff ff       	call   f010066c <kbd_intr>$/;"	l
f010068e	obj/kern/kernel.asm	/^f010068e:	a1 20 92 2b f0       	mov    0xf02b9220,%eax$/;"	l
f0100693	obj/kern/kernel.asm	/^f0100693:	3b 05 24 92 2b f0    	cmp    0xf02b9224,%eax$/;"	l
f0100699	obj/kern/kernel.asm	/^f0100699:	74 26                	je     f01006c1 <cons_getc+0x43>$/;"	l
f010069b	obj/kern/kernel.asm	/^f010069b:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f010069e	obj/kern/kernel.asm	/^f010069e:	89 15 20 92 2b f0    	mov    %edx,0xf02b9220$/;"	l
f01006a4	obj/kern/kernel.asm	/^f01006a4:	0f b6 88 20 90 2b f0 	movzbl -0xfd46fe0(%eax),%ecx$/;"	l
f01006ab	obj/kern/kernel.asm	/^f01006ab:	89 c8                	mov    %ecx,%eax$/;"	l
f01006ad	obj/kern/kernel.asm	/^f01006ad:	81 fa 00 02 00 00    	cmp    $0x200,%edx$/;"	l
f01006b3	obj/kern/kernel.asm	/^f01006b3:	75 11                	jne    f01006c6 <cons_getc+0x48>$/;"	l
f01006b5	obj/kern/kernel.asm	/^f01006b5:	c7 05 20 92 2b f0 00 	movl   $0x0,0xf02b9220$/;"	l
f01006bc	obj/kern/kernel.asm	/^f01006bc:	00 00 00 $/;"	l
f01006bf	obj/kern/kernel.asm	/^f01006bf:	eb 05                	jmp    f01006c6 <cons_getc+0x48>$/;"	l
f01006c1	obj/kern/kernel.asm	/^f01006c1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01006c6	obj/kern/kernel.asm	/^f01006c6:	c9                   	leave  $/;"	l
f01006c7	obj/kern/kernel.asm	/^f01006c7:	c3                   	ret    $/;"	l
f01006c8	obj/kern/kernel.asm	/^f01006c8 <cons_init>:$/;"	l
f01006c8	obj/kern/kernel.asm	/^f01006c8:	55                   	push   %ebp$/;"	l
f01006c9	obj/kern/kernel.asm	/^f01006c9:	89 e5                	mov    %esp,%ebp$/;"	l
f01006cb	obj/kern/kernel.asm	/^f01006cb:	57                   	push   %edi$/;"	l
f01006cc	obj/kern/kernel.asm	/^f01006cc:	56                   	push   %esi$/;"	l
f01006cd	obj/kern/kernel.asm	/^f01006cd:	53                   	push   %ebx$/;"	l
f01006ce	obj/kern/kernel.asm	/^f01006ce:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01006d1	obj/kern/kernel.asm	/^f01006d1:	0f b7 15 00 80 0b f0 	movzwl 0xf00b8000,%edx$/;"	l
f01006d8	obj/kern/kernel.asm	/^f01006d8:	66 c7 05 00 80 0b f0 	movw   $0xa55a,0xf00b8000$/;"	l
f01006df	obj/kern/kernel.asm	/^f01006df:	5a a5 $/;"	l
f01006e1	obj/kern/kernel.asm	/^f01006e1:	0f b7 05 00 80 0b f0 	movzwl 0xf00b8000,%eax$/;"	l
f01006e8	obj/kern/kernel.asm	/^f01006e8:	66 3d 5a a5          	cmp    $0xa55a,%ax$/;"	l
f01006ec	obj/kern/kernel.asm	/^f01006ec:	74 11                	je     f01006ff <cons_init+0x37>$/;"	l
f01006ee	obj/kern/kernel.asm	/^f01006ee:	c7 05 30 92 2b f0 b4 	movl   $0x3b4,0xf02b9230$/;"	l
f01006f5	obj/kern/kernel.asm	/^f01006f5:	03 00 00 $/;"	l
f01006f8	obj/kern/kernel.asm	/^f01006f8:	bf 00 00 0b f0       	mov    $0xf00b0000,%edi$/;"	l
f01006fd	obj/kern/kernel.asm	/^f01006fd:	eb 16                	jmp    f0100715 <cons_init+0x4d>$/;"	l
f01006ff	obj/kern/kernel.asm	/^f01006ff:	66 89 15 00 80 0b f0 	mov    %dx,0xf00b8000$/;"	l
f0100706	obj/kern/kernel.asm	/^f0100706:	c7 05 30 92 2b f0 d4 	movl   $0x3d4,0xf02b9230$/;"	l
f010070d	obj/kern/kernel.asm	/^f010070d:	03 00 00 $/;"	l
f0100710	obj/kern/kernel.asm	/^f0100710:	bf 00 80 0b f0       	mov    $0xf00b8000,%edi$/;"	l
f0100715	obj/kern/kernel.asm	/^f0100715:	8b 0d 30 92 2b f0    	mov    0xf02b9230,%ecx$/;"	l
f010071b	obj/kern/kernel.asm	/^f010071b:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f0100720	obj/kern/kernel.asm	/^f0100720:	89 ca                	mov    %ecx,%edx$/;"	l
f0100722	obj/kern/kernel.asm	/^f0100722:	ee                   	out    %al,(%dx)$/;"	l
f0100723	obj/kern/kernel.asm	/^f0100723:	8d 59 01             	lea    0x1(%ecx),%ebx$/;"	l
f0100726	obj/kern/kernel.asm	/^f0100726:	89 da                	mov    %ebx,%edx$/;"	l
f0100728	obj/kern/kernel.asm	/^f0100728:	ec                   	in     (%dx),%al$/;"	l
f0100729	obj/kern/kernel.asm	/^f0100729:	0f b6 f0             	movzbl %al,%esi$/;"	l
f010072c	obj/kern/kernel.asm	/^f010072c:	c1 e6 08             	shl    $0x8,%esi$/;"	l
f010072f	obj/kern/kernel.asm	/^f010072f:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f0100734	obj/kern/kernel.asm	/^f0100734:	89 ca                	mov    %ecx,%edx$/;"	l
f0100736	obj/kern/kernel.asm	/^f0100736:	ee                   	out    %al,(%dx)$/;"	l
f0100737	obj/kern/kernel.asm	/^f0100737:	89 da                	mov    %ebx,%edx$/;"	l
f0100739	obj/kern/kernel.asm	/^f0100739:	ec                   	in     (%dx),%al$/;"	l
f010073a	obj/kern/kernel.asm	/^f010073a:	89 3d 2c 92 2b f0    	mov    %edi,0xf02b922c$/;"	l
f0100740	obj/kern/kernel.asm	/^f0100740:	0f b6 d8             	movzbl %al,%ebx$/;"	l
f0100743	obj/kern/kernel.asm	/^f0100743:	09 de                	or     %ebx,%esi$/;"	l
f0100745	obj/kern/kernel.asm	/^f0100745:	66 89 35 28 92 2b f0 	mov    %si,0xf02b9228$/;"	l
f010074c	obj/kern/kernel.asm	/^f010074c:	e8 1b ff ff ff       	call   f010066c <kbd_intr>$/;"	l
f0100751	obj/kern/kernel.asm	/^f0100751:	0f b7 05 a8 53 12 f0 	movzwl 0xf01253a8,%eax$/;"	l
f0100758	obj/kern/kernel.asm	/^f0100758:	25 fd ff 00 00       	and    $0xfffd,%eax$/;"	l
f010075d	obj/kern/kernel.asm	/^f010075d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100760	obj/kern/kernel.asm	/^f0100760:	e8 35 37 00 00       	call   f0103e9a <irq_setmask_8259A>$/;"	l
f0100765	obj/kern/kernel.asm	/^f0100765:	be fa 03 00 00       	mov    $0x3fa,%esi$/;"	l
f010076a	obj/kern/kernel.asm	/^f010076a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010076f	obj/kern/kernel.asm	/^f010076f:	89 f2                	mov    %esi,%edx$/;"	l
f0100771	obj/kern/kernel.asm	/^f0100771:	ee                   	out    %al,(%dx)$/;"	l
f0100772	obj/kern/kernel.asm	/^f0100772:	b2 fb                	mov    $0xfb,%dl$/;"	l
f0100774	obj/kern/kernel.asm	/^f0100774:	b8 80 ff ff ff       	mov    $0xffffff80,%eax$/;"	l
f0100779	obj/kern/kernel.asm	/^f0100779:	ee                   	out    %al,(%dx)$/;"	l
f010077a	obj/kern/kernel.asm	/^f010077a:	bb f8 03 00 00       	mov    $0x3f8,%ebx$/;"	l
f010077f	obj/kern/kernel.asm	/^f010077f:	b8 0c 00 00 00       	mov    $0xc,%eax$/;"	l
f0100784	obj/kern/kernel.asm	/^f0100784:	89 da                	mov    %ebx,%edx$/;"	l
f0100786	obj/kern/kernel.asm	/^f0100786:	ee                   	out    %al,(%dx)$/;"	l
f0100787	obj/kern/kernel.asm	/^f0100787:	b2 f9                	mov    $0xf9,%dl$/;"	l
f0100789	obj/kern/kernel.asm	/^f0100789:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010078e	obj/kern/kernel.asm	/^f010078e:	ee                   	out    %al,(%dx)$/;"	l
f010078f	obj/kern/kernel.asm	/^f010078f:	b2 fb                	mov    $0xfb,%dl$/;"	l
f0100791	obj/kern/kernel.asm	/^f0100791:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f0100796	obj/kern/kernel.asm	/^f0100796:	ee                   	out    %al,(%dx)$/;"	l
f0100797	obj/kern/kernel.asm	/^f0100797:	b2 fc                	mov    $0xfc,%dl$/;"	l
f0100799	obj/kern/kernel.asm	/^f0100799:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010079e	obj/kern/kernel.asm	/^f010079e:	ee                   	out    %al,(%dx)$/;"	l
f010079f	obj/kern/kernel.asm	/^f010079f:	b2 f9                	mov    $0xf9,%dl$/;"	l
f01007a1	obj/kern/kernel.asm	/^f01007a1:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01007a6	obj/kern/kernel.asm	/^f01007a6:	ee                   	out    %al,(%dx)$/;"	l
f01007a7	obj/kern/kernel.asm	/^f01007a7:	b2 fd                	mov    $0xfd,%dl$/;"	l
f01007a9	obj/kern/kernel.asm	/^f01007a9:	ec                   	in     (%dx),%al$/;"	l
f01007aa	obj/kern/kernel.asm	/^f01007aa:	3c ff                	cmp    $0xff,%al$/;"	l
f01007ac	obj/kern/kernel.asm	/^f01007ac:	0f 95 c1             	setne  %cl$/;"	l
f01007af	obj/kern/kernel.asm	/^f01007af:	88 0d 34 92 2b f0    	mov    %cl,0xf02b9234$/;"	l
f01007b5	obj/kern/kernel.asm	/^f01007b5:	89 f2                	mov    %esi,%edx$/;"	l
f01007b7	obj/kern/kernel.asm	/^f01007b7:	ec                   	in     (%dx),%al$/;"	l
f01007b8	obj/kern/kernel.asm	/^f01007b8:	89 da                	mov    %ebx,%edx$/;"	l
f01007ba	obj/kern/kernel.asm	/^f01007ba:	ec                   	in     (%dx),%al$/;"	l
f01007bb	obj/kern/kernel.asm	/^f01007bb:	84 c9                	test   %cl,%cl$/;"	l
f01007bd	obj/kern/kernel.asm	/^f01007bd:	74 1d                	je     f01007dc <cons_init+0x114>$/;"	l
f01007bf	obj/kern/kernel.asm	/^f01007bf:	0f b7 05 a8 53 12 f0 	movzwl 0xf01253a8,%eax$/;"	l
f01007c6	obj/kern/kernel.asm	/^f01007c6:	25 ef ff 00 00       	and    $0xffef,%eax$/;"	l
f01007cb	obj/kern/kernel.asm	/^f01007cb:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01007ce	obj/kern/kernel.asm	/^f01007ce:	e8 c7 36 00 00       	call   f0103e9a <irq_setmask_8259A>$/;"	l
f01007d3	obj/kern/kernel.asm	/^f01007d3:	80 3d 34 92 2b f0 00 	cmpb   $0x0,0xf02b9234$/;"	l
f01007da	obj/kern/kernel.asm	/^f01007da:	75 0c                	jne    f01007e8 <cons_init+0x120>$/;"	l
f01007dc	obj/kern/kernel.asm	/^f01007dc:	c7 04 24 84 80 10 f0 	movl   $0xf0108084,(%esp)$/;"	l
f01007e3	obj/kern/kernel.asm	/^f01007e3:	e8 04 38 00 00       	call   f0103fec <cprintf>$/;"	l
f01007e8	obj/kern/kernel.asm	/^f01007e8:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01007eb	obj/kern/kernel.asm	/^f01007eb:	5b                   	pop    %ebx$/;"	l
f01007ec	obj/kern/kernel.asm	/^f01007ec:	5e                   	pop    %esi$/;"	l
f01007ed	obj/kern/kernel.asm	/^f01007ed:	5f                   	pop    %edi$/;"	l
f01007ee	obj/kern/kernel.asm	/^f01007ee:	5d                   	pop    %ebp$/;"	l
f01007ef	obj/kern/kernel.asm	/^f01007ef:	c3                   	ret    $/;"	l
f01007f0	obj/kern/kernel.asm	/^f01007f0 <cputchar>:$/;"	l
f01007f0	obj/kern/kernel.asm	/^f01007f0:	55                   	push   %ebp$/;"	l
f01007f1	obj/kern/kernel.asm	/^f01007f1:	89 e5                	mov    %esp,%ebp$/;"	l
f01007f3	obj/kern/kernel.asm	/^f01007f3:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01007f6	obj/kern/kernel.asm	/^f01007f6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01007f9	obj/kern/kernel.asm	/^f01007f9:	e8 6b fc ff ff       	call   f0100469 <cons_putc>$/;"	l
f01007fe	obj/kern/kernel.asm	/^f01007fe:	c9                   	leave  $/;"	l
f01007ff	obj/kern/kernel.asm	/^f01007ff:	c3                   	ret    $/;"	l
f0100800	obj/kern/kernel.asm	/^f0100800 <getchar>:$/;"	l
f0100800	obj/kern/kernel.asm	/^f0100800:	55                   	push   %ebp$/;"	l
f0100801	obj/kern/kernel.asm	/^f0100801:	89 e5                	mov    %esp,%ebp$/;"	l
f0100803	obj/kern/kernel.asm	/^f0100803:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100806	obj/kern/kernel.asm	/^f0100806:	e8 73 fe ff ff       	call   f010067e <cons_getc>$/;"	l
f010080b	obj/kern/kernel.asm	/^f010080b:	85 c0                	test   %eax,%eax$/;"	l
f010080d	obj/kern/kernel.asm	/^f010080d:	74 f7                	je     f0100806 <getchar+0x6>$/;"	l
f010080f	obj/kern/kernel.asm	/^f010080f:	c9                   	leave  $/;"	l
f0100810	obj/kern/kernel.asm	/^f0100810:	c3                   	ret    $/;"	l
f0100811	obj/kern/kernel.asm	/^f0100811 <iscons>:$/;"	l
f0100811	obj/kern/kernel.asm	/^f0100811:	55                   	push   %ebp$/;"	l
f0100812	obj/kern/kernel.asm	/^f0100812:	89 e5                	mov    %esp,%ebp$/;"	l
f0100814	obj/kern/kernel.asm	/^f0100814:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100819	obj/kern/kernel.asm	/^f0100819:	5d                   	pop    %ebp$/;"	l
f010081a	obj/kern/kernel.asm	/^f010081a:	c3                   	ret    $/;"	l
f010081b	obj/kern/kernel.asm	/^f010081b:	66 90                	xchg   %ax,%ax$/;"	l
f010081d	obj/kern/kernel.asm	/^f010081d:	66 90                	xchg   %ax,%ax$/;"	l
f010081f	obj/kern/kernel.asm	/^f010081f:	90                   	nop$/;"	l
f0100820	obj/kern/kernel.asm	/^f0100820 <mon_help>:$/;"	l
f0100820	obj/kern/kernel.asm	/^f0100820:	55                   	push   %ebp$/;"	l
f0100821	obj/kern/kernel.asm	/^f0100821:	89 e5                	mov    %esp,%ebp$/;"	l
f0100823	obj/kern/kernel.asm	/^f0100823:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100826	obj/kern/kernel.asm	/^f0100826:	c7 44 24 08 e0 82 10 	movl   $0xf01082e0,0x8(%esp)$/;"	l
f010082d	obj/kern/kernel.asm	/^f010082d:	f0 $/;"	l
f010082e	obj/kern/kernel.asm	/^f010082e:	c7 44 24 04 fe 82 10 	movl   $0xf01082fe,0x4(%esp)$/;"	l
f0100835	obj/kern/kernel.asm	/^f0100835:	f0 $/;"	l
f0100836	obj/kern/kernel.asm	/^f0100836:	c7 04 24 03 83 10 f0 	movl   $0xf0108303,(%esp)$/;"	l
f010083d	obj/kern/kernel.asm	/^f010083d:	e8 aa 37 00 00       	call   f0103fec <cprintf>$/;"	l
f0100842	obj/kern/kernel.asm	/^f0100842:	c7 44 24 08 d0 83 10 	movl   $0xf01083d0,0x8(%esp)$/;"	l
f0100849	obj/kern/kernel.asm	/^f0100849:	f0 $/;"	l
f010084a	obj/kern/kernel.asm	/^f010084a:	c7 44 24 04 0c 83 10 	movl   $0xf010830c,0x4(%esp)$/;"	l
f0100851	obj/kern/kernel.asm	/^f0100851:	f0 $/;"	l
f0100852	obj/kern/kernel.asm	/^f0100852:	c7 04 24 03 83 10 f0 	movl   $0xf0108303,(%esp)$/;"	l
f0100859	obj/kern/kernel.asm	/^f0100859:	e8 8e 37 00 00       	call   f0103fec <cprintf>$/;"	l
f010085e	obj/kern/kernel.asm	/^f010085e:	c7 44 24 08 f8 83 10 	movl   $0xf01083f8,0x8(%esp)$/;"	l
f0100865	obj/kern/kernel.asm	/^f0100865:	f0 $/;"	l
f0100866	obj/kern/kernel.asm	/^f0100866:	c7 44 24 04 15 83 10 	movl   $0xf0108315,0x4(%esp)$/;"	l
f010086d	obj/kern/kernel.asm	/^f010086d:	f0 $/;"	l
f010086e	obj/kern/kernel.asm	/^f010086e:	c7 04 24 03 83 10 f0 	movl   $0xf0108303,(%esp)$/;"	l
f0100875	obj/kern/kernel.asm	/^f0100875:	e8 72 37 00 00       	call   f0103fec <cprintf>$/;"	l
f010087a	obj/kern/kernel.asm	/^f010087a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010087f	obj/kern/kernel.asm	/^f010087f:	c9                   	leave  $/;"	l
f0100880	obj/kern/kernel.asm	/^f0100880:	c3                   	ret    $/;"	l
f0100881	obj/kern/kernel.asm	/^f0100881 <mon_kerninfo>:$/;"	l
f0100881	obj/kern/kernel.asm	/^f0100881:	55                   	push   %ebp$/;"	l
f0100882	obj/kern/kernel.asm	/^f0100882:	89 e5                	mov    %esp,%ebp$/;"	l
f0100884	obj/kern/kernel.asm	/^f0100884:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100887	obj/kern/kernel.asm	/^f0100887:	c7 04 24 1f 83 10 f0 	movl   $0xf010831f,(%esp)$/;"	l
f010088e	obj/kern/kernel.asm	/^f010088e:	e8 59 37 00 00       	call   f0103fec <cprintf>$/;"	l
f0100893	obj/kern/kernel.asm	/^f0100893:	c7 44 24 04 0c 00 10 	movl   $0x10000c,0x4(%esp)$/;"	l
f010089a	obj/kern/kernel.asm	/^f010089a:	00 $/;"	l
f010089b	obj/kern/kernel.asm	/^f010089b:	c7 04 24 24 84 10 f0 	movl   $0xf0108424,(%esp)$/;"	l
f01008a2	obj/kern/kernel.asm	/^f01008a2:	e8 45 37 00 00       	call   f0103fec <cprintf>$/;"	l
f01008a7	obj/kern/kernel.asm	/^f01008a7:	c7 44 24 08 0c 00 10 	movl   $0x10000c,0x8(%esp)$/;"	l
f01008ae	obj/kern/kernel.asm	/^f01008ae:	00 $/;"	l
f01008af	obj/kern/kernel.asm	/^f01008af:	c7 44 24 04 0c 00 10 	movl   $0xf010000c,0x4(%esp)$/;"	l
f01008b6	obj/kern/kernel.asm	/^f01008b6:	f0 $/;"	l
f01008b7	obj/kern/kernel.asm	/^f01008b7:	c7 04 24 4c 84 10 f0 	movl   $0xf010844c,(%esp)$/;"	l
f01008be	obj/kern/kernel.asm	/^f01008be:	e8 29 37 00 00       	call   f0103fec <cprintf>$/;"	l
f01008c3	obj/kern/kernel.asm	/^f01008c3:	c7 44 24 08 97 7f 10 	movl   $0x107f97,0x8(%esp)$/;"	l
f01008ca	obj/kern/kernel.asm	/^f01008ca:	00 $/;"	l
f01008cb	obj/kern/kernel.asm	/^f01008cb:	c7 44 24 04 97 7f 10 	movl   $0xf0107f97,0x4(%esp)$/;"	l
f01008d2	obj/kern/kernel.asm	/^f01008d2:	f0 $/;"	l
f01008d3	obj/kern/kernel.asm	/^f01008d3:	c7 04 24 70 84 10 f0 	movl   $0xf0108470,(%esp)$/;"	l
f01008da	obj/kern/kernel.asm	/^f01008da:	e8 0d 37 00 00       	call   f0103fec <cprintf>$/;"	l
f01008df	obj/kern/kernel.asm	/^f01008df:	c7 44 24 08 05 8b 2b 	movl   $0x2b8b05,0x8(%esp)$/;"	l
f01008e6	obj/kern/kernel.asm	/^f01008e6:	00 $/;"	l
f01008e7	obj/kern/kernel.asm	/^f01008e7:	c7 44 24 04 05 8b 2b 	movl   $0xf02b8b05,0x4(%esp)$/;"	l
f01008ee	obj/kern/kernel.asm	/^f01008ee:	f0 $/;"	l
f01008ef	obj/kern/kernel.asm	/^f01008ef:	c7 04 24 94 84 10 f0 	movl   $0xf0108494,(%esp)$/;"	l
f01008f6	obj/kern/kernel.asm	/^f01008f6:	e8 f1 36 00 00       	call   f0103fec <cprintf>$/;"	l
f01008fb	obj/kern/kernel.asm	/^f01008fb:	c7 44 24 08 40 b4 2f 	movl   $0x2fb440,0x8(%esp)$/;"	l
f0100902	obj/kern/kernel.asm	/^f0100902:	00 $/;"	l
f0100903	obj/kern/kernel.asm	/^f0100903:	c7 44 24 04 40 b4 2f 	movl   $0xf02fb440,0x4(%esp)$/;"	l
f010090a	obj/kern/kernel.asm	/^f010090a:	f0 $/;"	l
f010090b	obj/kern/kernel.asm	/^f010090b:	c7 04 24 b8 84 10 f0 	movl   $0xf01084b8,(%esp)$/;"	l
f0100912	obj/kern/kernel.asm	/^f0100912:	e8 d5 36 00 00       	call   f0103fec <cprintf>$/;"	l
f0100917	obj/kern/kernel.asm	/^f0100917:	b8 3f b8 2f f0       	mov    $0xf02fb83f,%eax$/;"	l
f010091c	obj/kern/kernel.asm	/^f010091c:	2d 0c 00 10 f0       	sub    $0xf010000c,%eax$/;"	l
f0100921	obj/kern/kernel.asm	/^f0100921:	25 00 fc ff ff       	and    $0xfffffc00,%eax$/;"	l
f0100926	obj/kern/kernel.asm	/^f0100926:	8d 90 ff 03 00 00    	lea    0x3ff(%eax),%edx$/;"	l
f010092c	obj/kern/kernel.asm	/^f010092c:	85 c0                	test   %eax,%eax$/;"	l
f010092e	obj/kern/kernel.asm	/^f010092e:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
f0100931	obj/kern/kernel.asm	/^f0100931:	c1 f8 0a             	sar    $0xa,%eax$/;"	l
f0100934	obj/kern/kernel.asm	/^f0100934:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100938	obj/kern/kernel.asm	/^f0100938:	c7 04 24 dc 84 10 f0 	movl   $0xf01084dc,(%esp)$/;"	l
f010093f	obj/kern/kernel.asm	/^f010093f:	e8 a8 36 00 00       	call   f0103fec <cprintf>$/;"	l
f0100944	obj/kern/kernel.asm	/^f0100944:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100949	obj/kern/kernel.asm	/^f0100949:	c9                   	leave  $/;"	l
f010094a	obj/kern/kernel.asm	/^f010094a:	c3                   	ret    $/;"	l
f010094b	obj/kern/kernel.asm	/^f010094b <mon_backtrace>:$/;"	l
f010094b	obj/kern/kernel.asm	/^f010094b:	55                   	push   %ebp$/;"	l
f010094c	obj/kern/kernel.asm	/^f010094c:	89 e5                	mov    %esp,%ebp$/;"	l
f010094e	obj/kern/kernel.asm	/^f010094e:	57                   	push   %edi$/;"	l
f010094f	obj/kern/kernel.asm	/^f010094f:	56                   	push   %esi$/;"	l
f0100950	obj/kern/kernel.asm	/^f0100950:	53                   	push   %ebx$/;"	l
f0100951	obj/kern/kernel.asm	/^f0100951:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f0100954	obj/kern/kernel.asm	/^f0100954:	89 eb                	mov    %ebp,%ebx$/;"	l
f0100956	obj/kern/kernel.asm	/^f0100956:	c7 04 24 38 83 10 f0 	movl   $0xf0108338,(%esp)$/;"	l
f010095d	obj/kern/kernel.asm	/^f010095d:	e8 8a 36 00 00       	call   f0103fec <cprintf>$/;"	l
f0100962	obj/kern/kernel.asm	/^f0100962:	8d 7d d0             	lea    -0x30(%ebp),%edi$/;"	l
f0100965	obj/kern/kernel.asm	/^f0100965:	8b 73 04             	mov    0x4(%ebx),%esi$/;"	l
f0100968	obj/kern/kernel.asm	/^f0100968:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f010096c	obj/kern/kernel.asm	/^f010096c:	89 34 24             	mov    %esi,(%esp)$/;"	l
f010096f	obj/kern/kernel.asm	/^f010096f:	e8 8c 4f 00 00       	call   f0105900 <debuginfo_eip>$/;"	l
f0100974	obj/kern/kernel.asm	/^f0100974:	85 c0                	test   %eax,%eax$/;"	l
f0100976	obj/kern/kernel.asm	/^f0100976:	75 68                	jne    f01009e0 <mon_backtrace+0x95>$/;"	l
f0100978	obj/kern/kernel.asm	/^f0100978:	8b 43 18             	mov    0x18(%ebx),%eax$/;"	l
f010097b	obj/kern/kernel.asm	/^f010097b:	89 44 24 1c          	mov    %eax,0x1c(%esp)$/;"	l
f010097f	obj/kern/kernel.asm	/^f010097f:	8b 43 14             	mov    0x14(%ebx),%eax$/;"	l
f0100982	obj/kern/kernel.asm	/^f0100982:	89 44 24 18          	mov    %eax,0x18(%esp)$/;"	l
f0100986	obj/kern/kernel.asm	/^f0100986:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f0100989	obj/kern/kernel.asm	/^f0100989:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
f010098d	obj/kern/kernel.asm	/^f010098d:	8b 43 0c             	mov    0xc(%ebx),%eax$/;"	l
f0100990	obj/kern/kernel.asm	/^f0100990:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f0100994	obj/kern/kernel.asm	/^f0100994:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0100997	obj/kern/kernel.asm	/^f0100997:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010099b	obj/kern/kernel.asm	/^f010099b:	89 74 24 08          	mov    %esi,0x8(%esp)$/;"	l
f010099f	obj/kern/kernel.asm	/^f010099f:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01009a3	obj/kern/kernel.asm	/^f01009a3:	c7 04 24 08 85 10 f0 	movl   $0xf0108508,(%esp)$/;"	l
f01009aa	obj/kern/kernel.asm	/^f01009aa:	e8 3d 36 00 00       	call   f0103fec <cprintf>$/;"	l
f01009af	obj/kern/kernel.asm	/^f01009af:	2b 75 e0             	sub    -0x20(%ebp),%esi$/;"	l
f01009b2	obj/kern/kernel.asm	/^f01009b2:	89 74 24 14          	mov    %esi,0x14(%esp)$/;"	l
f01009b6	obj/kern/kernel.asm	/^f01009b6:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f01009b9	obj/kern/kernel.asm	/^f01009b9:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f01009bd	obj/kern/kernel.asm	/^f01009bd:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f01009c0	obj/kern/kernel.asm	/^f01009c0:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01009c4	obj/kern/kernel.asm	/^f01009c4:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01009c7	obj/kern/kernel.asm	/^f01009c7:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01009cb	obj/kern/kernel.asm	/^f01009cb:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f01009ce	obj/kern/kernel.asm	/^f01009ce:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01009d2	obj/kern/kernel.asm	/^f01009d2:	c7 04 24 4a 83 10 f0 	movl   $0xf010834a,(%esp)$/;"	l
f01009d9	obj/kern/kernel.asm	/^f01009d9:	e8 0e 36 00 00       	call   f0103fec <cprintf>$/;"	l
f01009de	obj/kern/kernel.asm	/^f01009de:	eb 43                	jmp    f0100a23 <mon_backtrace+0xd8>$/;"	l
f01009e0	obj/kern/kernel.asm	/^f01009e0:	8b 43 18             	mov    0x18(%ebx),%eax$/;"	l
f01009e3	obj/kern/kernel.asm	/^f01009e3:	89 44 24 1c          	mov    %eax,0x1c(%esp)$/;"	l
f01009e7	obj/kern/kernel.asm	/^f01009e7:	8b 43 14             	mov    0x14(%ebx),%eax$/;"	l
f01009ea	obj/kern/kernel.asm	/^f01009ea:	89 44 24 18          	mov    %eax,0x18(%esp)$/;"	l
f01009ee	obj/kern/kernel.asm	/^f01009ee:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f01009f1	obj/kern/kernel.asm	/^f01009f1:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
f01009f5	obj/kern/kernel.asm	/^f01009f5:	8b 43 0c             	mov    0xc(%ebx),%eax$/;"	l
f01009f8	obj/kern/kernel.asm	/^f01009f8:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f01009fc	obj/kern/kernel.asm	/^f01009fc:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f01009ff	obj/kern/kernel.asm	/^f01009ff:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100a03	obj/kern/kernel.asm	/^f0100a03:	89 74 24 08          	mov    %esi,0x8(%esp)$/;"	l
f0100a07	obj/kern/kernel.asm	/^f0100a07:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0100a0b	obj/kern/kernel.asm	/^f0100a0b:	c7 04 24 08 85 10 f0 	movl   $0xf0108508,(%esp)$/;"	l
f0100a12	obj/kern/kernel.asm	/^f0100a12:	e8 d5 35 00 00       	call   f0103fec <cprintf>$/;"	l
f0100a17	obj/kern/kernel.asm	/^f0100a17:	c7 04 24 63 83 10 f0 	movl   $0xf0108363,(%esp)$/;"	l
f0100a1e	obj/kern/kernel.asm	/^f0100a1e:	e8 c9 35 00 00       	call   f0103fec <cprintf>$/;"	l
f0100a23	obj/kern/kernel.asm	/^f0100a23:	8b 1b                	mov    (%ebx),%ebx$/;"	l
f0100a25	obj/kern/kernel.asm	/^f0100a25:	85 db                	test   %ebx,%ebx$/;"	l
f0100a27	obj/kern/kernel.asm	/^f0100a27:	0f 85 38 ff ff ff    	jne    f0100965 <mon_backtrace+0x1a>$/;"	l
f0100a2d	obj/kern/kernel.asm	/^f0100a2d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100a32	obj/kern/kernel.asm	/^f0100a32:	83 c4 4c             	add    $0x4c,%esp$/;"	l
f0100a35	obj/kern/kernel.asm	/^f0100a35:	5b                   	pop    %ebx$/;"	l
f0100a36	obj/kern/kernel.asm	/^f0100a36:	5e                   	pop    %esi$/;"	l
f0100a37	obj/kern/kernel.asm	/^f0100a37:	5f                   	pop    %edi$/;"	l
f0100a38	obj/kern/kernel.asm	/^f0100a38:	5d                   	pop    %ebp$/;"	l
f0100a39	obj/kern/kernel.asm	/^f0100a39:	c3                   	ret    $/;"	l
f0100a3a	obj/kern/kernel.asm	/^f0100a3a <monitor>:$/;"	l
f0100a3a	obj/kern/kernel.asm	/^f0100a3a:	55                   	push   %ebp$/;"	l
f0100a3b	obj/kern/kernel.asm	/^f0100a3b:	89 e5                	mov    %esp,%ebp$/;"	l
f0100a3d	obj/kern/kernel.asm	/^f0100a3d:	57                   	push   %edi$/;"	l
f0100a3e	obj/kern/kernel.asm	/^f0100a3e:	56                   	push   %esi$/;"	l
f0100a3f	obj/kern/kernel.asm	/^f0100a3f:	53                   	push   %ebx$/;"	l
f0100a40	obj/kern/kernel.asm	/^f0100a40:	83 ec 5c             	sub    $0x5c,%esp$/;"	l
f0100a43	obj/kern/kernel.asm	/^f0100a43:	c7 44 24 0c 04 00 00 	movl   $0x4,0xc(%esp)$/;"	l
f0100a4a	obj/kern/kernel.asm	/^f0100a4a:	00 $/;"	l
f0100a4b	obj/kern/kernel.asm	/^f0100a4b:	c7 44 24 08 03 00 00 	movl   $0x3,0x8(%esp)$/;"	l
f0100a52	obj/kern/kernel.asm	/^f0100a52:	00 $/;"	l
f0100a53	obj/kern/kernel.asm	/^f0100a53:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
f0100a5a	obj/kern/kernel.asm	/^f0100a5a:	00 $/;"	l
f0100a5b	obj/kern/kernel.asm	/^f0100a5b:	c7 04 24 80 83 10 f0 	movl   $0xf0108380,(%esp)$/;"	l
f0100a62	obj/kern/kernel.asm	/^f0100a62:	e8 85 35 00 00       	call   f0103fec <cprintf>$/;"	l
f0100a67	obj/kern/kernel.asm	/^f0100a67:	c7 04 24 40 85 10 f0 	movl   $0xf0108540,(%esp)$/;"	l
f0100a6e	obj/kern/kernel.asm	/^f0100a6e:	e8 79 35 00 00       	call   f0103fec <cprintf>$/;"	l
f0100a73	obj/kern/kernel.asm	/^f0100a73:	c7 04 24 64 85 10 f0 	movl   $0xf0108564,(%esp)$/;"	l
f0100a7a	obj/kern/kernel.asm	/^f0100a7a:	e8 6d 35 00 00       	call   f0103fec <cprintf>$/;"	l
f0100a7f	obj/kern/kernel.asm	/^f0100a7f:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
f0100a83	obj/kern/kernel.asm	/^f0100a83:	74 0b                	je     f0100a90 <monitor+0x56>$/;"	l
f0100a85	obj/kern/kernel.asm	/^f0100a85:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100a88	obj/kern/kernel.asm	/^f0100a88:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100a8b	obj/kern/kernel.asm	/^f0100a8b:	e8 e5 3c 00 00       	call   f0104775 <print_trapframe>$/;"	l
f0100a90	obj/kern/kernel.asm	/^f0100a90:	c7 04 24 92 83 10 f0 	movl   $0xf0108392,(%esp)$/;"	l
f0100a97	obj/kern/kernel.asm	/^f0100a97:	e8 04 58 00 00       	call   f01062a0 <readline>$/;"	l
f0100a9c	obj/kern/kernel.asm	/^f0100a9c:	89 c3                	mov    %eax,%ebx$/;"	l
f0100a9e	obj/kern/kernel.asm	/^f0100a9e:	85 c0                	test   %eax,%eax$/;"	l
f0100aa0	obj/kern/kernel.asm	/^f0100aa0:	74 ee                	je     f0100a90 <monitor+0x56>$/;"	l
f0100aa2	obj/kern/kernel.asm	/^f0100aa2:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%ebp)$/;"	l
f0100aa9	obj/kern/kernel.asm	/^f0100aa9:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0100aae	obj/kern/kernel.asm	/^f0100aae:	eb 0a                	jmp    f0100aba <monitor+0x80>$/;"	l
f0100ab0	obj/kern/kernel.asm	/^f0100ab0:	c6 03 00             	movb   $0x0,(%ebx)$/;"	l
f0100ab3	obj/kern/kernel.asm	/^f0100ab3:	89 f7                	mov    %esi,%edi$/;"	l
f0100ab5	obj/kern/kernel.asm	/^f0100ab5:	8d 5b 01             	lea    0x1(%ebx),%ebx$/;"	l
f0100ab8	obj/kern/kernel.asm	/^f0100ab8:	89 fe                	mov    %edi,%esi$/;"	l
f0100aba	obj/kern/kernel.asm	/^f0100aba:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0100abd	obj/kern/kernel.asm	/^f0100abd:	84 c0                	test   %al,%al$/;"	l
f0100abf	obj/kern/kernel.asm	/^f0100abf:	74 63                	je     f0100b24 <monitor+0xea>$/;"	l
f0100ac1	obj/kern/kernel.asm	/^f0100ac1:	0f be c0             	movsbl %al,%eax$/;"	l
f0100ac4	obj/kern/kernel.asm	/^f0100ac4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100ac8	obj/kern/kernel.asm	/^f0100ac8:	c7 04 24 96 83 10 f0 	movl   $0xf0108396,(%esp)$/;"	l
f0100acf	obj/kern/kernel.asm	/^f0100acf:	e8 f6 59 00 00       	call   f01064ca <strchr>$/;"	l
f0100ad4	obj/kern/kernel.asm	/^f0100ad4:	85 c0                	test   %eax,%eax$/;"	l
f0100ad6	obj/kern/kernel.asm	/^f0100ad6:	75 d8                	jne    f0100ab0 <monitor+0x76>$/;"	l
f0100ad8	obj/kern/kernel.asm	/^f0100ad8:	80 3b 00             	cmpb   $0x0,(%ebx)$/;"	l
f0100adb	obj/kern/kernel.asm	/^f0100adb:	74 47                	je     f0100b24 <monitor+0xea>$/;"	l
f0100add	obj/kern/kernel.asm	/^f0100add:	83 fe 0f             	cmp    $0xf,%esi$/;"	l
f0100ae0	obj/kern/kernel.asm	/^f0100ae0:	75 16                	jne    f0100af8 <monitor+0xbe>$/;"	l
f0100ae2	obj/kern/kernel.asm	/^f0100ae2:	c7 44 24 04 10 00 00 	movl   $0x10,0x4(%esp)$/;"	l
f0100ae9	obj/kern/kernel.asm	/^f0100ae9:	00 $/;"	l
f0100aea	obj/kern/kernel.asm	/^f0100aea:	c7 04 24 9b 83 10 f0 	movl   $0xf010839b,(%esp)$/;"	l
f0100af1	obj/kern/kernel.asm	/^f0100af1:	e8 f6 34 00 00       	call   f0103fec <cprintf>$/;"	l
f0100af6	obj/kern/kernel.asm	/^f0100af6:	eb 98                	jmp    f0100a90 <monitor+0x56>$/;"	l
f0100af8	obj/kern/kernel.asm	/^f0100af8:	8d 7e 01             	lea    0x1(%esi),%edi$/;"	l
f0100afb	obj/kern/kernel.asm	/^f0100afb:	89 5c b5 a8          	mov    %ebx,-0x58(%ebp,%esi,4)$/;"	l
f0100aff	obj/kern/kernel.asm	/^f0100aff:	eb 03                	jmp    f0100b04 <monitor+0xca>$/;"	l
f0100b01	obj/kern/kernel.asm	/^f0100b01:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100b04	obj/kern/kernel.asm	/^f0100b04:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0100b07	obj/kern/kernel.asm	/^f0100b07:	84 c0                	test   %al,%al$/;"	l
f0100b09	obj/kern/kernel.asm	/^f0100b09:	74 ad                	je     f0100ab8 <monitor+0x7e>$/;"	l
f0100b0b	obj/kern/kernel.asm	/^f0100b0b:	0f be c0             	movsbl %al,%eax$/;"	l
f0100b0e	obj/kern/kernel.asm	/^f0100b0e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100b12	obj/kern/kernel.asm	/^f0100b12:	c7 04 24 96 83 10 f0 	movl   $0xf0108396,(%esp)$/;"	l
f0100b19	obj/kern/kernel.asm	/^f0100b19:	e8 ac 59 00 00       	call   f01064ca <strchr>$/;"	l
f0100b1e	obj/kern/kernel.asm	/^f0100b1e:	85 c0                	test   %eax,%eax$/;"	l
f0100b20	obj/kern/kernel.asm	/^f0100b20:	74 df                	je     f0100b01 <monitor+0xc7>$/;"	l
f0100b22	obj/kern/kernel.asm	/^f0100b22:	eb 94                	jmp    f0100ab8 <monitor+0x7e>$/;"	l
f0100b24	obj/kern/kernel.asm	/^f0100b24:	c7 44 b5 a8 00 00 00 	movl   $0x0,-0x58(%ebp,%esi,4)$/;"	l
f0100b2b	obj/kern/kernel.asm	/^f0100b2b:	00 $/;"	l
f0100b2c	obj/kern/kernel.asm	/^f0100b2c:	85 f6                	test   %esi,%esi$/;"	l
f0100b2e	obj/kern/kernel.asm	/^f0100b2e:	0f 84 5c ff ff ff    	je     f0100a90 <monitor+0x56>$/;"	l
f0100b34	obj/kern/kernel.asm	/^f0100b34:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0100b39	obj/kern/kernel.asm	/^f0100b39:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f0100b3c	obj/kern/kernel.asm	/^f0100b3c:	8b 04 85 a0 85 10 f0 	mov    -0xfef7a60(,%eax,4),%eax$/;"	l
f0100b43	obj/kern/kernel.asm	/^f0100b43:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100b47	obj/kern/kernel.asm	/^f0100b47:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
f0100b4a	obj/kern/kernel.asm	/^f0100b4a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100b4d	obj/kern/kernel.asm	/^f0100b4d:	e8 1a 59 00 00       	call   f010646c <strcmp>$/;"	l
f0100b52	obj/kern/kernel.asm	/^f0100b52:	85 c0                	test   %eax,%eax$/;"	l
f0100b54	obj/kern/kernel.asm	/^f0100b54:	75 24                	jne    f0100b7a <monitor+0x140>$/;"	l
f0100b56	obj/kern/kernel.asm	/^f0100b56:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f0100b59	obj/kern/kernel.asm	/^f0100b59:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0100b5c	obj/kern/kernel.asm	/^f0100b5c:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0100b60	obj/kern/kernel.asm	/^f0100b60:	8d 4d a8             	lea    -0x58(%ebp),%ecx$/;"	l
f0100b63	obj/kern/kernel.asm	/^f0100b63:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0100b67	obj/kern/kernel.asm	/^f0100b67:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0100b6a	obj/kern/kernel.asm	/^f0100b6a:	ff 14 85 a8 85 10 f0 	call   *-0xfef7a58(,%eax,4)$/;"	l
f0100b71	obj/kern/kernel.asm	/^f0100b71:	85 c0                	test   %eax,%eax$/;"	l
f0100b73	obj/kern/kernel.asm	/^f0100b73:	78 25                	js     f0100b9a <monitor+0x160>$/;"	l
f0100b75	obj/kern/kernel.asm	/^f0100b75:	e9 16 ff ff ff       	jmp    f0100a90 <monitor+0x56>$/;"	l
f0100b7a	obj/kern/kernel.asm	/^f0100b7a:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100b7d	obj/kern/kernel.asm	/^f0100b7d:	83 fb 03             	cmp    $0x3,%ebx$/;"	l
f0100b80	obj/kern/kernel.asm	/^f0100b80:	75 b7                	jne    f0100b39 <monitor+0xff>$/;"	l
f0100b82	obj/kern/kernel.asm	/^f0100b82:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
f0100b85	obj/kern/kernel.asm	/^f0100b85:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100b89	obj/kern/kernel.asm	/^f0100b89:	c7 04 24 b8 83 10 f0 	movl   $0xf01083b8,(%esp)$/;"	l
f0100b90	obj/kern/kernel.asm	/^f0100b90:	e8 57 34 00 00       	call   f0103fec <cprintf>$/;"	l
f0100b95	obj/kern/kernel.asm	/^f0100b95:	e9 f6 fe ff ff       	jmp    f0100a90 <monitor+0x56>$/;"	l
f0100b9a	obj/kern/kernel.asm	/^f0100b9a:	83 c4 5c             	add    $0x5c,%esp$/;"	l
f0100b9d	obj/kern/kernel.asm	/^f0100b9d:	5b                   	pop    %ebx$/;"	l
f0100b9e	obj/kern/kernel.asm	/^f0100b9e:	5e                   	pop    %esi$/;"	l
f0100b9f	obj/kern/kernel.asm	/^f0100b9f:	5f                   	pop    %edi$/;"	l
f0100ba0	obj/kern/kernel.asm	/^f0100ba0:	5d                   	pop    %ebp$/;"	l
f0100ba1	obj/kern/kernel.asm	/^f0100ba1:	c3                   	ret    $/;"	l
f0100ba2	obj/kern/kernel.asm	/^f0100ba2:	66 90                	xchg   %ax,%ax$/;"	l
f0100ba4	obj/kern/kernel.asm	/^f0100ba4:	66 90                	xchg   %ax,%ax$/;"	l
f0100ba6	obj/kern/kernel.asm	/^f0100ba6:	66 90                	xchg   %ax,%ax$/;"	l
f0100ba8	obj/kern/kernel.asm	/^f0100ba8:	66 90                	xchg   %ax,%ax$/;"	l
f0100baa	obj/kern/kernel.asm	/^f0100baa:	66 90                	xchg   %ax,%ax$/;"	l
f0100bac	obj/kern/kernel.asm	/^f0100bac:	66 90                	xchg   %ax,%ax$/;"	l
f0100bae	obj/kern/kernel.asm	/^f0100bae:	66 90                	xchg   %ax,%ax$/;"	l
f0100bb0	obj/kern/kernel.asm	/^f0100bb0 <page2kva>:$/;"	l
f0100bb0	obj/kern/kernel.asm	/^f0100bb0:	2b 05 9c 9e 2b f0    	sub    0xf02b9e9c,%eax$/;"	l
f0100bb6	obj/kern/kernel.asm	/^f0100bb6:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100bb9	obj/kern/kernel.asm	/^f0100bb9:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100bbc	obj/kern/kernel.asm	/^f0100bbc:	89 c2                	mov    %eax,%edx$/;"	l
f0100bbe	obj/kern/kernel.asm	/^f0100bbe:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100bc1	obj/kern/kernel.asm	/^f0100bc1:	3b 15 94 9e 2b f0    	cmp    0xf02b9e94,%edx$/;"	l
f0100bc7	obj/kern/kernel.asm	/^f0100bc7:	72 26                	jb     f0100bef <page2kva+0x3f>$/;"	l
f0100bc9	obj/kern/kernel.asm	/^f0100bc9:	55                   	push   %ebp$/;"	l
f0100bca	obj/kern/kernel.asm	/^f0100bca:	89 e5                	mov    %esp,%ebp$/;"	l
f0100bcc	obj/kern/kernel.asm	/^f0100bcc:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100bcf	obj/kern/kernel.asm	/^f0100bcf:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100bd3	obj/kern/kernel.asm	/^f0100bd3:	c7 44 24 08 c4 7f 10 	movl   $0xf0107fc4,0x8(%esp)$/;"	l
f0100bda	obj/kern/kernel.asm	/^f0100bda:	f0 $/;"	l
f0100bdb	obj/kern/kernel.asm	/^f0100bdb:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0100be2	obj/kern/kernel.asm	/^f0100be2:	00 $/;"	l
f0100be3	obj/kern/kernel.asm	/^f0100be3:	c7 04 24 1d 8f 10 f0 	movl   $0xf0108f1d,(%esp)$/;"	l
f0100bea	obj/kern/kernel.asm	/^f0100bea:	e8 51 f4 ff ff       	call   f0100040 <_panic>$/;"	l
f0100bef	obj/kern/kernel.asm	/^f0100bef:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0100bf4	obj/kern/kernel.asm	/^f0100bf4:	c3                   	ret    $/;"	l
f0100bf5	obj/kern/kernel.asm	/^f0100bf5 <check_va2pa>:$/;"	l
f0100bf5	obj/kern/kernel.asm	/^f0100bf5:	89 d1                	mov    %edx,%ecx$/;"	l
f0100bf7	obj/kern/kernel.asm	/^f0100bf7:	c1 e9 16             	shr    $0x16,%ecx$/;"	l
f0100bfa	obj/kern/kernel.asm	/^f0100bfa:	8b 04 88             	mov    (%eax,%ecx,4),%eax$/;"	l
f0100bfd	obj/kern/kernel.asm	/^f0100bfd:	a8 01                	test   $0x1,%al$/;"	l
f0100bff	obj/kern/kernel.asm	/^f0100bff:	74 5d                	je     f0100c5e <check_va2pa+0x69>$/;"	l
f0100c01	obj/kern/kernel.asm	/^f0100c01:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100c06	obj/kern/kernel.asm	/^f0100c06:	89 c1                	mov    %eax,%ecx$/;"	l
f0100c08	obj/kern/kernel.asm	/^f0100c08:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0100c0b	obj/kern/kernel.asm	/^f0100c0b:	3b 0d 94 9e 2b f0    	cmp    0xf02b9e94,%ecx$/;"	l
f0100c11	obj/kern/kernel.asm	/^f0100c11:	72 26                	jb     f0100c39 <check_va2pa+0x44>$/;"	l
f0100c13	obj/kern/kernel.asm	/^f0100c13:	55                   	push   %ebp$/;"	l
f0100c14	obj/kern/kernel.asm	/^f0100c14:	89 e5                	mov    %esp,%ebp$/;"	l
f0100c16	obj/kern/kernel.asm	/^f0100c16:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100c19	obj/kern/kernel.asm	/^f0100c19:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100c1d	obj/kern/kernel.asm	/^f0100c1d:	c7 44 24 08 c4 7f 10 	movl   $0xf0107fc4,0x8(%esp)$/;"	l
f0100c24	obj/kern/kernel.asm	/^f0100c24:	f0 $/;"	l
f0100c25	obj/kern/kernel.asm	/^f0100c25:	c7 44 24 04 7c 03 00 	movl   $0x37c,0x4(%esp)$/;"	l
f0100c2c	obj/kern/kernel.asm	/^f0100c2c:	00 $/;"	l
f0100c2d	obj/kern/kernel.asm	/^f0100c2d:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0100c34	obj/kern/kernel.asm	/^f0100c34:	e8 07 f4 ff ff       	call   f0100040 <_panic>$/;"	l
f0100c39	obj/kern/kernel.asm	/^f0100c39:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100c3c	obj/kern/kernel.asm	/^f0100c3c:	81 e2 ff 03 00 00    	and    $0x3ff,%edx$/;"	l
f0100c42	obj/kern/kernel.asm	/^f0100c42:	8b 84 90 00 00 00 f0 	mov    -0x10000000(%eax,%edx,4),%eax$/;"	l
f0100c49	obj/kern/kernel.asm	/^f0100c49:	89 c2                	mov    %eax,%edx$/;"	l
f0100c4b	obj/kern/kernel.asm	/^f0100c4b:	83 e2 01             	and    $0x1,%edx$/;"	l
f0100c4e	obj/kern/kernel.asm	/^f0100c4e:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100c53	obj/kern/kernel.asm	/^f0100c53:	85 d2                	test   %edx,%edx$/;"	l
f0100c55	obj/kern/kernel.asm	/^f0100c55:	ba ff ff ff ff       	mov    $0xffffffff,%edx$/;"	l
f0100c5a	obj/kern/kernel.asm	/^f0100c5a:	0f 44 c2             	cmove  %edx,%eax$/;"	l
f0100c5d	obj/kern/kernel.asm	/^f0100c5d:	c3                   	ret    $/;"	l
f0100c5e	obj/kern/kernel.asm	/^f0100c5e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100c63	obj/kern/kernel.asm	/^f0100c63:	c3                   	ret    $/;"	l
f0100c64	obj/kern/kernel.asm	/^f0100c64 <boot_alloc>:$/;"	l
f0100c64	obj/kern/kernel.asm	/^f0100c64:	55                   	push   %ebp$/;"	l
f0100c65	obj/kern/kernel.asm	/^f0100c65:	89 e5                	mov    %esp,%ebp$/;"	l
f0100c67	obj/kern/kernel.asm	/^f0100c67:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100c6a	obj/kern/kernel.asm	/^f0100c6a:	83 3d 38 92 2b f0 00 	cmpl   $0x0,0xf02b9238$/;"	l
f0100c71	obj/kern/kernel.asm	/^f0100c71:	75 11                	jne    f0100c84 <boot_alloc+0x20>$/;"	l
f0100c73	obj/kern/kernel.asm	/^f0100c73:	ba 3f c4 2f f0       	mov    $0xf02fc43f,%edx$/;"	l
f0100c78	obj/kern/kernel.asm	/^f0100c78:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0100c7e	obj/kern/kernel.asm	/^f0100c7e:	89 15 38 92 2b f0    	mov    %edx,0xf02b9238$/;"	l
f0100c84	obj/kern/kernel.asm	/^f0100c84:	85 c0                	test   %eax,%eax$/;"	l
f0100c86	obj/kern/kernel.asm	/^f0100c86:	75 07                	jne    f0100c8f <boot_alloc+0x2b>$/;"	l
f0100c88	obj/kern/kernel.asm	/^f0100c88:	a1 38 92 2b f0       	mov    0xf02b9238,%eax$/;"	l
f0100c8d	obj/kern/kernel.asm	/^f0100c8d:	eb 72                	jmp    f0100d01 <boot_alloc+0x9d>$/;"	l
f0100c8f	obj/kern/kernel.asm	/^f0100c8f:	8b 0d 38 92 2b f0    	mov    0xf02b9238,%ecx$/;"	l
f0100c95	obj/kern/kernel.asm	/^f0100c95:	8d 14 01             	lea    (%ecx,%eax,1),%edx$/;"	l
f0100c98	obj/kern/kernel.asm	/^f0100c98:	81 fa ff ff ff ef    	cmp    $0xefffffff,%edx$/;"	l
f0100c9e	obj/kern/kernel.asm	/^f0100c9e:	77 20                	ja     f0100cc0 <boot_alloc+0x5c>$/;"	l
f0100ca0	obj/kern/kernel.asm	/^f0100ca0:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0100ca4	obj/kern/kernel.asm	/^f0100ca4:	c7 44 24 08 e8 7f 10 	movl   $0xf0107fe8,0x8(%esp)$/;"	l
f0100cab	obj/kern/kernel.asm	/^f0100cab:	f0 $/;"	l
f0100cac	obj/kern/kernel.asm	/^f0100cac:	c7 44 24 04 69 00 00 	movl   $0x69,0x4(%esp)$/;"	l
f0100cb3	obj/kern/kernel.asm	/^f0100cb3:	00 $/;"	l
f0100cb4	obj/kern/kernel.asm	/^f0100cb4:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0100cbb	obj/kern/kernel.asm	/^f0100cbb:	e8 80 f3 ff ff       	call   f0100040 <_panic>$/;"	l
f0100cc0	obj/kern/kernel.asm	/^f0100cc0:	8d 82 00 00 00 10    	lea    0x10000000(%edx),%eax$/;"	l
f0100cc6	obj/kern/kernel.asm	/^f0100cc6:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0100cc9	obj/kern/kernel.asm	/^f0100cc9:	3b 05 94 9e 2b f0    	cmp    0xf02b9e94,%eax$/;"	l
f0100ccf	obj/kern/kernel.asm	/^f0100ccf:	76 1c                	jbe    f0100ced <boot_alloc+0x89>$/;"	l
f0100cd1	obj/kern/kernel.asm	/^f0100cd1:	c7 44 24 08 37 8f 10 	movl   $0xf0108f37,0x8(%esp)$/;"	l
f0100cd8	obj/kern/kernel.asm	/^f0100cd8:	f0 $/;"	l
f0100cd9	obj/kern/kernel.asm	/^f0100cd9:	c7 44 24 04 6a 00 00 	movl   $0x6a,0x4(%esp)$/;"	l
f0100ce0	obj/kern/kernel.asm	/^f0100ce0:	00 $/;"	l
f0100ce1	obj/kern/kernel.asm	/^f0100ce1:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0100ce8	obj/kern/kernel.asm	/^f0100ce8:	e8 53 f3 ff ff       	call   f0100040 <_panic>$/;"	l
f0100ced	obj/kern/kernel.asm	/^f0100ced:	81 c2 ff 0f 00 00    	add    $0xfff,%edx$/;"	l
f0100cf3	obj/kern/kernel.asm	/^f0100cf3:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0100cf9	obj/kern/kernel.asm	/^f0100cf9:	89 15 38 92 2b f0    	mov    %edx,0xf02b9238$/;"	l
f0100cff	obj/kern/kernel.asm	/^f0100cff:	89 c8                	mov    %ecx,%eax$/;"	l
f0100d01	obj/kern/kernel.asm	/^f0100d01:	c9                   	leave  $/;"	l
f0100d02	obj/kern/kernel.asm	/^f0100d02:	c3                   	ret    $/;"	l
f0100d03	obj/kern/kernel.asm	/^f0100d03 <check_page_free_list>:$/;"	l
f0100d03	obj/kern/kernel.asm	/^f0100d03:	55                   	push   %ebp$/;"	l
f0100d04	obj/kern/kernel.asm	/^f0100d04:	89 e5                	mov    %esp,%ebp$/;"	l
f0100d06	obj/kern/kernel.asm	/^f0100d06:	57                   	push   %edi$/;"	l
f0100d07	obj/kern/kernel.asm	/^f0100d07:	56                   	push   %esi$/;"	l
f0100d08	obj/kern/kernel.asm	/^f0100d08:	53                   	push   %ebx$/;"	l
f0100d09	obj/kern/kernel.asm	/^f0100d09:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f0100d0c	obj/kern/kernel.asm	/^f0100d0c:	84 c0                	test   %al,%al$/;"	l
f0100d0e	obj/kern/kernel.asm	/^f0100d0e:	0f 85 31 03 00 00    	jne    f0101045 <check_page_free_list+0x342>$/;"	l
f0100d14	obj/kern/kernel.asm	/^f0100d14:	e9 3e 03 00 00       	jmp    f0101057 <check_page_free_list+0x354>$/;"	l
f0100d19	obj/kern/kernel.asm	/^f0100d19:	c7 44 24 08 c4 85 10 	movl   $0xf01085c4,0x8(%esp)$/;"	l
f0100d20	obj/kern/kernel.asm	/^f0100d20:	f0 $/;"	l
f0100d21	obj/kern/kernel.asm	/^f0100d21:	c7 44 24 04 b1 02 00 	movl   $0x2b1,0x4(%esp)$/;"	l
f0100d28	obj/kern/kernel.asm	/^f0100d28:	00 $/;"	l
f0100d29	obj/kern/kernel.asm	/^f0100d29:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0100d30	obj/kern/kernel.asm	/^f0100d30:	e8 0b f3 ff ff       	call   f0100040 <_panic>$/;"	l
f0100d35	obj/kern/kernel.asm	/^f0100d35:	8d 55 d8             	lea    -0x28(%ebp),%edx$/;"	l
f0100d38	obj/kern/kernel.asm	/^f0100d38:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f0100d3b	obj/kern/kernel.asm	/^f0100d3b:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f0100d3e	obj/kern/kernel.asm	/^f0100d3e:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0100d41	obj/kern/kernel.asm	/^f0100d41:	89 c2                	mov    %eax,%edx$/;"	l
f0100d43	obj/kern/kernel.asm	/^f0100d43:	2b 15 9c 9e 2b f0    	sub    0xf02b9e9c,%edx$/;"	l
f0100d49	obj/kern/kernel.asm	/^f0100d49:	f7 c2 00 e0 7f 00    	test   $0x7fe000,%edx$/;"	l
f0100d4f	obj/kern/kernel.asm	/^f0100d4f:	0f 95 c2             	setne  %dl$/;"	l
f0100d52	obj/kern/kernel.asm	/^f0100d52:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0100d55	obj/kern/kernel.asm	/^f0100d55:	8b 4c 95 e0          	mov    -0x20(%ebp,%edx,4),%ecx$/;"	l
f0100d59	obj/kern/kernel.asm	/^f0100d59:	89 01                	mov    %eax,(%ecx)$/;"	l
f0100d5b	obj/kern/kernel.asm	/^f0100d5b:	89 44 95 e0          	mov    %eax,-0x20(%ebp,%edx,4)$/;"	l
f0100d5f	obj/kern/kernel.asm	/^f0100d5f:	8b 00                	mov    (%eax),%eax$/;"	l
f0100d61	obj/kern/kernel.asm	/^f0100d61:	85 c0                	test   %eax,%eax$/;"	l
f0100d63	obj/kern/kernel.asm	/^f0100d63:	75 dc                	jne    f0100d41 <check_page_free_list+0x3e>$/;"	l
f0100d65	obj/kern/kernel.asm	/^f0100d65:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0100d68	obj/kern/kernel.asm	/^f0100d68:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0100d6e	obj/kern/kernel.asm	/^f0100d6e:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0100d71	obj/kern/kernel.asm	/^f0100d71:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0100d74	obj/kern/kernel.asm	/^f0100d74:	89 10                	mov    %edx,(%eax)$/;"	l
f0100d76	obj/kern/kernel.asm	/^f0100d76:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0100d79	obj/kern/kernel.asm	/^f0100d79:	a3 40 92 2b f0       	mov    %eax,0xf02b9240$/;"	l
f0100d7e	obj/kern/kernel.asm	/^f0100d7e:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
f0100d83	obj/kern/kernel.asm	/^f0100d83:	8b 1d 40 92 2b f0    	mov    0xf02b9240,%ebx$/;"	l
f0100d89	obj/kern/kernel.asm	/^f0100d89:	eb 63                	jmp    f0100dee <check_page_free_list+0xeb>$/;"	l
f0100d8b	obj/kern/kernel.asm	/^f0100d8b:	89 d8                	mov    %ebx,%eax$/;"	l
f0100d8d	obj/kern/kernel.asm	/^f0100d8d:	2b 05 9c 9e 2b f0    	sub    0xf02b9e9c,%eax$/;"	l
f0100d93	obj/kern/kernel.asm	/^f0100d93:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100d96	obj/kern/kernel.asm	/^f0100d96:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100d99	obj/kern/kernel.asm	/^f0100d99:	89 c2                	mov    %eax,%edx$/;"	l
f0100d9b	obj/kern/kernel.asm	/^f0100d9b:	c1 ea 16             	shr    $0x16,%edx$/;"	l
f0100d9e	obj/kern/kernel.asm	/^f0100d9e:	39 f2                	cmp    %esi,%edx$/;"	l
f0100da0	obj/kern/kernel.asm	/^f0100da0:	73 4a                	jae    f0100dec <check_page_free_list+0xe9>$/;"	l
f0100da2	obj/kern/kernel.asm	/^f0100da2:	89 c2                	mov    %eax,%edx$/;"	l
f0100da4	obj/kern/kernel.asm	/^f0100da4:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100da7	obj/kern/kernel.asm	/^f0100da7:	3b 15 94 9e 2b f0    	cmp    0xf02b9e94,%edx$/;"	l
f0100dad	obj/kern/kernel.asm	/^f0100dad:	72 20                	jb     f0100dcf <check_page_free_list+0xcc>$/;"	l
f0100daf	obj/kern/kernel.asm	/^f0100daf:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100db3	obj/kern/kernel.asm	/^f0100db3:	c7 44 24 08 c4 7f 10 	movl   $0xf0107fc4,0x8(%esp)$/;"	l
f0100dba	obj/kern/kernel.asm	/^f0100dba:	f0 $/;"	l
f0100dbb	obj/kern/kernel.asm	/^f0100dbb:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0100dc2	obj/kern/kernel.asm	/^f0100dc2:	00 $/;"	l
f0100dc3	obj/kern/kernel.asm	/^f0100dc3:	c7 04 24 1d 8f 10 f0 	movl   $0xf0108f1d,(%esp)$/;"	l
f0100dca	obj/kern/kernel.asm	/^f0100dca:	e8 71 f2 ff ff       	call   f0100040 <_panic>$/;"	l
f0100dcf	obj/kern/kernel.asm	/^f0100dcf:	c7 44 24 08 80 00 00 	movl   $0x80,0x8(%esp)$/;"	l
f0100dd6	obj/kern/kernel.asm	/^f0100dd6:	00 $/;"	l
f0100dd7	obj/kern/kernel.asm	/^f0100dd7:	c7 44 24 04 97 00 00 	movl   $0x97,0x4(%esp)$/;"	l
f0100dde	obj/kern/kernel.asm	/^f0100dde:	00 $/;"	l
f0100ddf	obj/kern/kernel.asm	/^f0100ddf:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0100de4	obj/kern/kernel.asm	/^f0100de4:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100de7	obj/kern/kernel.asm	/^f0100de7:	e8 1b 57 00 00       	call   f0106507 <memset>$/;"	l
f0100dec	obj/kern/kernel.asm	/^f0100dec:	8b 1b                	mov    (%ebx),%ebx$/;"	l
f0100dee	obj/kern/kernel.asm	/^f0100dee:	85 db                	test   %ebx,%ebx$/;"	l
f0100df0	obj/kern/kernel.asm	/^f0100df0:	75 99                	jne    f0100d8b <check_page_free_list+0x88>$/;"	l
f0100df2	obj/kern/kernel.asm	/^f0100df2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100df7	obj/kern/kernel.asm	/^f0100df7:	e8 68 fe ff ff       	call   f0100c64 <boot_alloc>$/;"	l
f0100dfc	obj/kern/kernel.asm	/^f0100dfc:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f0100dff	obj/kern/kernel.asm	/^f0100dff:	8b 15 40 92 2b f0    	mov    0xf02b9240,%edx$/;"	l
f0100e05	obj/kern/kernel.asm	/^f0100e05:	8b 0d 9c 9e 2b f0    	mov    0xf02b9e9c,%ecx$/;"	l
f0100e0b	obj/kern/kernel.asm	/^f0100e0b:	a1 94 9e 2b f0       	mov    0xf02b9e94,%eax$/;"	l
f0100e10	obj/kern/kernel.asm	/^f0100e10:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f0100e13	obj/kern/kernel.asm	/^f0100e13:	8d 04 c1             	lea    (%ecx,%eax,8),%eax$/;"	l
f0100e16	obj/kern/kernel.asm	/^f0100e16:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0100e19	obj/kern/kernel.asm	/^f0100e19:	89 4d cc             	mov    %ecx,-0x34(%ebp)$/;"	l
f0100e1c	obj/kern/kernel.asm	/^f0100e1c:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0100e21	obj/kern/kernel.asm	/^f0100e21:	89 4d d4             	mov    %ecx,-0x2c(%ebp)$/;"	l
f0100e24	obj/kern/kernel.asm	/^f0100e24:	e9 c4 01 00 00       	jmp    f0100fed <check_page_free_list+0x2ea>$/;"	l
f0100e29	obj/kern/kernel.asm	/^f0100e29:	3b 55 d4             	cmp    -0x2c(%ebp),%edx$/;"	l
f0100e2c	obj/kern/kernel.asm	/^f0100e2c:	73 24                	jae    f0100e52 <check_page_free_list+0x14f>$/;"	l
f0100e2e	obj/kern/kernel.asm	/^f0100e2e:	c7 44 24 0c 47 8f 10 	movl   $0xf0108f47,0xc(%esp)$/;"	l
f0100e35	obj/kern/kernel.asm	/^f0100e35:	f0 $/;"	l
f0100e36	obj/kern/kernel.asm	/^f0100e36:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f0100e3d	obj/kern/kernel.asm	/^f0100e3d:	f0 $/;"	l
f0100e3e	obj/kern/kernel.asm	/^f0100e3e:	c7 44 24 04 cb 02 00 	movl   $0x2cb,0x4(%esp)$/;"	l
f0100e45	obj/kern/kernel.asm	/^f0100e45:	00 $/;"	l
f0100e46	obj/kern/kernel.asm	/^f0100e46:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0100e4d	obj/kern/kernel.asm	/^f0100e4d:	e8 ee f1 ff ff       	call   f0100040 <_panic>$/;"	l
f0100e52	obj/kern/kernel.asm	/^f0100e52:	3b 55 d0             	cmp    -0x30(%ebp),%edx$/;"	l
f0100e55	obj/kern/kernel.asm	/^f0100e55:	72 24                	jb     f0100e7b <check_page_free_list+0x178>$/;"	l
f0100e57	obj/kern/kernel.asm	/^f0100e57:	c7 44 24 0c 68 8f 10 	movl   $0xf0108f68,0xc(%esp)$/;"	l
f0100e5e	obj/kern/kernel.asm	/^f0100e5e:	f0 $/;"	l
f0100e5f	obj/kern/kernel.asm	/^f0100e5f:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f0100e66	obj/kern/kernel.asm	/^f0100e66:	f0 $/;"	l
f0100e67	obj/kern/kernel.asm	/^f0100e67:	c7 44 24 04 cc 02 00 	movl   $0x2cc,0x4(%esp)$/;"	l
f0100e6e	obj/kern/kernel.asm	/^f0100e6e:	00 $/;"	l
f0100e6f	obj/kern/kernel.asm	/^f0100e6f:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0100e76	obj/kern/kernel.asm	/^f0100e76:	e8 c5 f1 ff ff       	call   f0100040 <_panic>$/;"	l
f0100e7b	obj/kern/kernel.asm	/^f0100e7b:	89 d0                	mov    %edx,%eax$/;"	l
f0100e7d	obj/kern/kernel.asm	/^f0100e7d:	2b 45 cc             	sub    -0x34(%ebp),%eax$/;"	l
f0100e80	obj/kern/kernel.asm	/^f0100e80:	a8 07                	test   $0x7,%al$/;"	l
f0100e82	obj/kern/kernel.asm	/^f0100e82:	74 24                	je     f0100ea8 <check_page_free_list+0x1a5>$/;"	l
f0100e84	obj/kern/kernel.asm	/^f0100e84:	c7 44 24 0c e8 85 10 	movl   $0xf01085e8,0xc(%esp)$/;"	l
f0100e8b	obj/kern/kernel.asm	/^f0100e8b:	f0 $/;"	l
f0100e8c	obj/kern/kernel.asm	/^f0100e8c:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f0100e93	obj/kern/kernel.asm	/^f0100e93:	f0 $/;"	l
f0100e94	obj/kern/kernel.asm	/^f0100e94:	c7 44 24 04 cd 02 00 	movl   $0x2cd,0x4(%esp)$/;"	l
f0100e9b	obj/kern/kernel.asm	/^f0100e9b:	00 $/;"	l
f0100e9c	obj/kern/kernel.asm	/^f0100e9c:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0100ea3	obj/kern/kernel.asm	/^f0100ea3:	e8 98 f1 ff ff       	call   f0100040 <_panic>$/;"	l
f0100ea8	obj/kern/kernel.asm	/^f0100ea8:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100eab	obj/kern/kernel.asm	/^f0100eab:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100eae	obj/kern/kernel.asm	/^f0100eae:	85 c0                	test   %eax,%eax$/;"	l
f0100eb0	obj/kern/kernel.asm	/^f0100eb0:	75 24                	jne    f0100ed6 <check_page_free_list+0x1d3>$/;"	l
f0100eb2	obj/kern/kernel.asm	/^f0100eb2:	c7 44 24 0c 7c 8f 10 	movl   $0xf0108f7c,0xc(%esp)$/;"	l
f0100eb9	obj/kern/kernel.asm	/^f0100eb9:	f0 $/;"	l
f0100eba	obj/kern/kernel.asm	/^f0100eba:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f0100ec1	obj/kern/kernel.asm	/^f0100ec1:	f0 $/;"	l
f0100ec2	obj/kern/kernel.asm	/^f0100ec2:	c7 44 24 04 d0 02 00 	movl   $0x2d0,0x4(%esp)$/;"	l
f0100ec9	obj/kern/kernel.asm	/^f0100ec9:	00 $/;"	l
f0100eca	obj/kern/kernel.asm	/^f0100eca:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0100ed1	obj/kern/kernel.asm	/^f0100ed1:	e8 6a f1 ff ff       	call   f0100040 <_panic>$/;"	l
f0100ed6	obj/kern/kernel.asm	/^f0100ed6:	3d 00 00 0a 00       	cmp    $0xa0000,%eax$/;"	l
f0100edb	obj/kern/kernel.asm	/^f0100edb:	75 24                	jne    f0100f01 <check_page_free_list+0x1fe>$/;"	l
f0100edd	obj/kern/kernel.asm	/^f0100edd:	c7 44 24 0c 8d 8f 10 	movl   $0xf0108f8d,0xc(%esp)$/;"	l
f0100ee4	obj/kern/kernel.asm	/^f0100ee4:	f0 $/;"	l
f0100ee5	obj/kern/kernel.asm	/^f0100ee5:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f0100eec	obj/kern/kernel.asm	/^f0100eec:	f0 $/;"	l
f0100eed	obj/kern/kernel.asm	/^f0100eed:	c7 44 24 04 d1 02 00 	movl   $0x2d1,0x4(%esp)$/;"	l
f0100ef4	obj/kern/kernel.asm	/^f0100ef4:	00 $/;"	l
f0100ef5	obj/kern/kernel.asm	/^f0100ef5:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0100efc	obj/kern/kernel.asm	/^f0100efc:	e8 3f f1 ff ff       	call   f0100040 <_panic>$/;"	l
f0100f01	obj/kern/kernel.asm	/^f0100f01:	3d 00 f0 0f 00       	cmp    $0xff000,%eax$/;"	l
f0100f06	obj/kern/kernel.asm	/^f0100f06:	75 24                	jne    f0100f2c <check_page_free_list+0x229>$/;"	l
f0100f08	obj/kern/kernel.asm	/^f0100f08:	c7 44 24 0c 1c 86 10 	movl   $0xf010861c,0xc(%esp)$/;"	l
f0100f0f	obj/kern/kernel.asm	/^f0100f0f:	f0 $/;"	l
f0100f10	obj/kern/kernel.asm	/^f0100f10:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f0100f17	obj/kern/kernel.asm	/^f0100f17:	f0 $/;"	l
f0100f18	obj/kern/kernel.asm	/^f0100f18:	c7 44 24 04 d2 02 00 	movl   $0x2d2,0x4(%esp)$/;"	l
f0100f1f	obj/kern/kernel.asm	/^f0100f1f:	00 $/;"	l
f0100f20	obj/kern/kernel.asm	/^f0100f20:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0100f27	obj/kern/kernel.asm	/^f0100f27:	e8 14 f1 ff ff       	call   f0100040 <_panic>$/;"	l
f0100f2c	obj/kern/kernel.asm	/^f0100f2c:	3d 00 00 10 00       	cmp    $0x100000,%eax$/;"	l
f0100f31	obj/kern/kernel.asm	/^f0100f31:	75 24                	jne    f0100f57 <check_page_free_list+0x254>$/;"	l
f0100f33	obj/kern/kernel.asm	/^f0100f33:	c7 44 24 0c a6 8f 10 	movl   $0xf0108fa6,0xc(%esp)$/;"	l
f0100f3a	obj/kern/kernel.asm	/^f0100f3a:	f0 $/;"	l
f0100f3b	obj/kern/kernel.asm	/^f0100f3b:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f0100f42	obj/kern/kernel.asm	/^f0100f42:	f0 $/;"	l
f0100f43	obj/kern/kernel.asm	/^f0100f43:	c7 44 24 04 d3 02 00 	movl   $0x2d3,0x4(%esp)$/;"	l
f0100f4a	obj/kern/kernel.asm	/^f0100f4a:	00 $/;"	l
f0100f4b	obj/kern/kernel.asm	/^f0100f4b:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0100f52	obj/kern/kernel.asm	/^f0100f52:	e8 e9 f0 ff ff       	call   f0100040 <_panic>$/;"	l
f0100f57	obj/kern/kernel.asm	/^f0100f57:	3d ff ff 0f 00       	cmp    $0xfffff,%eax$/;"	l
f0100f5c	obj/kern/kernel.asm	/^f0100f5c:	0f 86 1c 01 00 00    	jbe    f010107e <check_page_free_list+0x37b>$/;"	l
f0100f62	obj/kern/kernel.asm	/^f0100f62:	89 c1                	mov    %eax,%ecx$/;"	l
f0100f64	obj/kern/kernel.asm	/^f0100f64:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0100f67	obj/kern/kernel.asm	/^f0100f67:	39 4d c4             	cmp    %ecx,-0x3c(%ebp)$/;"	l
f0100f6a	obj/kern/kernel.asm	/^f0100f6a:	77 20                	ja     f0100f8c <check_page_free_list+0x289>$/;"	l
f0100f6c	obj/kern/kernel.asm	/^f0100f6c:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100f70	obj/kern/kernel.asm	/^f0100f70:	c7 44 24 08 c4 7f 10 	movl   $0xf0107fc4,0x8(%esp)$/;"	l
f0100f77	obj/kern/kernel.asm	/^f0100f77:	f0 $/;"	l
f0100f78	obj/kern/kernel.asm	/^f0100f78:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0100f7f	obj/kern/kernel.asm	/^f0100f7f:	00 $/;"	l
f0100f80	obj/kern/kernel.asm	/^f0100f80:	c7 04 24 1d 8f 10 f0 	movl   $0xf0108f1d,(%esp)$/;"	l
f0100f87	obj/kern/kernel.asm	/^f0100f87:	e8 b4 f0 ff ff       	call   f0100040 <_panic>$/;"	l
f0100f8c	obj/kern/kernel.asm	/^f0100f8c:	8d 88 00 00 00 f0    	lea    -0x10000000(%eax),%ecx$/;"	l
f0100f92	obj/kern/kernel.asm	/^f0100f92:	39 4d c8             	cmp    %ecx,-0x38(%ebp)$/;"	l
f0100f95	obj/kern/kernel.asm	/^f0100f95:	0f 86 d3 00 00 00    	jbe    f010106e <check_page_free_list+0x36b>$/;"	l
f0100f9b	obj/kern/kernel.asm	/^f0100f9b:	c7 44 24 0c 40 86 10 	movl   $0xf0108640,0xc(%esp)$/;"	l
f0100fa2	obj/kern/kernel.asm	/^f0100fa2:	f0 $/;"	l
f0100fa3	obj/kern/kernel.asm	/^f0100fa3:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f0100faa	obj/kern/kernel.asm	/^f0100faa:	f0 $/;"	l
f0100fab	obj/kern/kernel.asm	/^f0100fab:	c7 44 24 04 d4 02 00 	movl   $0x2d4,0x4(%esp)$/;"	l
f0100fb2	obj/kern/kernel.asm	/^f0100fb2:	00 $/;"	l
f0100fb3	obj/kern/kernel.asm	/^f0100fb3:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0100fba	obj/kern/kernel.asm	/^f0100fba:	e8 81 f0 ff ff       	call   f0100040 <_panic>$/;"	l
f0100fbf	obj/kern/kernel.asm	/^f0100fbf:	c7 44 24 0c c0 8f 10 	movl   $0xf0108fc0,0xc(%esp)$/;"	l
f0100fc6	obj/kern/kernel.asm	/^f0100fc6:	f0 $/;"	l
f0100fc7	obj/kern/kernel.asm	/^f0100fc7:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f0100fce	obj/kern/kernel.asm	/^f0100fce:	f0 $/;"	l
f0100fcf	obj/kern/kernel.asm	/^f0100fcf:	c7 44 24 04 d6 02 00 	movl   $0x2d6,0x4(%esp)$/;"	l
f0100fd6	obj/kern/kernel.asm	/^f0100fd6:	00 $/;"	l
f0100fd7	obj/kern/kernel.asm	/^f0100fd7:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0100fde	obj/kern/kernel.asm	/^f0100fde:	e8 5d f0 ff ff       	call   f0100040 <_panic>$/;"	l
f0100fe3	obj/kern/kernel.asm	/^f0100fe3:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100fe6	obj/kern/kernel.asm	/^f0100fe6:	eb 03                	jmp    f0100feb <check_page_free_list+0x2e8>$/;"	l
f0100fe8	obj/kern/kernel.asm	/^f0100fe8:	83 c7 01             	add    $0x1,%edi$/;"	l
f0100feb	obj/kern/kernel.asm	/^f0100feb:	8b 12                	mov    (%edx),%edx$/;"	l
f0100fed	obj/kern/kernel.asm	/^f0100fed:	85 d2                	test   %edx,%edx$/;"	l
f0100fef	obj/kern/kernel.asm	/^f0100fef:	0f 85 34 fe ff ff    	jne    f0100e29 <check_page_free_list+0x126>$/;"	l
f0100ff5	obj/kern/kernel.asm	/^f0100ff5:	85 db                	test   %ebx,%ebx$/;"	l
f0100ff7	obj/kern/kernel.asm	/^f0100ff7:	7f 24                	jg     f010101d <check_page_free_list+0x31a>$/;"	l
f0100ff9	obj/kern/kernel.asm	/^f0100ff9:	c7 44 24 0c dd 8f 10 	movl   $0xf0108fdd,0xc(%esp)$/;"	l
f0101000	obj/kern/kernel.asm	/^f0101000:	f0 $/;"	l
f0101001	obj/kern/kernel.asm	/^f0101001:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f0101008	obj/kern/kernel.asm	/^f0101008:	f0 $/;"	l
f0101009	obj/kern/kernel.asm	/^f0101009:	c7 44 24 04 de 02 00 	movl   $0x2de,0x4(%esp)$/;"	l
f0101010	obj/kern/kernel.asm	/^f0101010:	00 $/;"	l
f0101011	obj/kern/kernel.asm	/^f0101011:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0101018	obj/kern/kernel.asm	/^f0101018:	e8 23 f0 ff ff       	call   f0100040 <_panic>$/;"	l
f010101d	obj/kern/kernel.asm	/^f010101d:	85 ff                	test   %edi,%edi$/;"	l
f010101f	obj/kern/kernel.asm	/^f010101f:	7f 6d                	jg     f010108e <check_page_free_list+0x38b>$/;"	l
f0101021	obj/kern/kernel.asm	/^f0101021:	c7 44 24 0c ef 8f 10 	movl   $0xf0108fef,0xc(%esp)$/;"	l
f0101028	obj/kern/kernel.asm	/^f0101028:	f0 $/;"	l
f0101029	obj/kern/kernel.asm	/^f0101029:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f0101030	obj/kern/kernel.asm	/^f0101030:	f0 $/;"	l
f0101031	obj/kern/kernel.asm	/^f0101031:	c7 44 24 04 df 02 00 	movl   $0x2df,0x4(%esp)$/;"	l
f0101038	obj/kern/kernel.asm	/^f0101038:	00 $/;"	l
f0101039	obj/kern/kernel.asm	/^f0101039:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0101040	obj/kern/kernel.asm	/^f0101040:	e8 fb ef ff ff       	call   f0100040 <_panic>$/;"	l
f0101045	obj/kern/kernel.asm	/^f0101045:	a1 40 92 2b f0       	mov    0xf02b9240,%eax$/;"	l
f010104a	obj/kern/kernel.asm	/^f010104a:	85 c0                	test   %eax,%eax$/;"	l
f010104c	obj/kern/kernel.asm	/^f010104c:	0f 85 e3 fc ff ff    	jne    f0100d35 <check_page_free_list+0x32>$/;"	l
f0101052	obj/kern/kernel.asm	/^f0101052:	e9 c2 fc ff ff       	jmp    f0100d19 <check_page_free_list+0x16>$/;"	l
f0101057	obj/kern/kernel.asm	/^f0101057:	83 3d 40 92 2b f0 00 	cmpl   $0x0,0xf02b9240$/;"	l
f010105e	obj/kern/kernel.asm	/^f010105e:	0f 84 b5 fc ff ff    	je     f0100d19 <check_page_free_list+0x16>$/;"	l
f0101064	obj/kern/kernel.asm	/^f0101064:	be 00 04 00 00       	mov    $0x400,%esi$/;"	l
f0101069	obj/kern/kernel.asm	/^f0101069:	e9 15 fd ff ff       	jmp    f0100d83 <check_page_free_list+0x80>$/;"	l
f010106e	obj/kern/kernel.asm	/^f010106e:	3d 00 70 00 00       	cmp    $0x7000,%eax$/;"	l
f0101073	obj/kern/kernel.asm	/^f0101073:	0f 85 6f ff ff ff    	jne    f0100fe8 <check_page_free_list+0x2e5>$/;"	l
f0101079	obj/kern/kernel.asm	/^f0101079:	e9 41 ff ff ff       	jmp    f0100fbf <check_page_free_list+0x2bc>$/;"	l
f010107e	obj/kern/kernel.asm	/^f010107e:	3d 00 70 00 00       	cmp    $0x7000,%eax$/;"	l
f0101083	obj/kern/kernel.asm	/^f0101083:	0f 85 5a ff ff ff    	jne    f0100fe3 <check_page_free_list+0x2e0>$/;"	l
f0101089	obj/kern/kernel.asm	/^f0101089:	e9 31 ff ff ff       	jmp    f0100fbf <check_page_free_list+0x2bc>$/;"	l
f010108e	obj/kern/kernel.asm	/^f010108e:	83 c4 4c             	add    $0x4c,%esp$/;"	l
f0101091	obj/kern/kernel.asm	/^f0101091:	5b                   	pop    %ebx$/;"	l
f0101092	obj/kern/kernel.asm	/^f0101092:	5e                   	pop    %esi$/;"	l
f0101093	obj/kern/kernel.asm	/^f0101093:	5f                   	pop    %edi$/;"	l
f0101094	obj/kern/kernel.asm	/^f0101094:	5d                   	pop    %ebp$/;"	l
f0101095	obj/kern/kernel.asm	/^f0101095:	c3                   	ret    $/;"	l
f0101096	obj/kern/kernel.asm	/^f0101096 <page_init>:$/;"	l
f0101096	obj/kern/kernel.asm	/^f0101096:	55                   	push   %ebp$/;"	l
f0101097	obj/kern/kernel.asm	/^f0101097:	89 e5                	mov    %esp,%ebp$/;"	l
f0101099	obj/kern/kernel.asm	/^f0101099:	56                   	push   %esi$/;"	l
f010109a	obj/kern/kernel.asm	/^f010109a:	53                   	push   %ebx$/;"	l
f010109b	obj/kern/kernel.asm	/^f010109b:	83 ec 10             	sub    $0x10,%esp$/;"	l
f010109e	obj/kern/kernel.asm	/^f010109e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01010a3	obj/kern/kernel.asm	/^f01010a3:	e8 bc fb ff ff       	call   f0100c64 <boot_alloc>$/;"	l
f01010a8	obj/kern/kernel.asm	/^f01010a8:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01010ad	obj/kern/kernel.asm	/^f01010ad:	77 20                	ja     f01010cf <page_init+0x39>$/;"	l
f01010af	obj/kern/kernel.asm	/^f01010af:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01010b3	obj/kern/kernel.asm	/^f01010b3:	c7 44 24 08 e8 7f 10 	movl   $0xf0107fe8,0x8(%esp)$/;"	l
f01010ba	obj/kern/kernel.asm	/^f01010ba:	f0 $/;"	l
f01010bb	obj/kern/kernel.asm	/^f01010bb:	c7 44 24 04 44 01 00 	movl   $0x144,0x4(%esp)$/;"	l
f01010c2	obj/kern/kernel.asm	/^f01010c2:	00 $/;"	l
f01010c3	obj/kern/kernel.asm	/^f01010c3:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f01010ca	obj/kern/kernel.asm	/^f01010ca:	e8 71 ef ff ff       	call   f0100040 <_panic>$/;"	l
f01010cf	obj/kern/kernel.asm	/^f01010cf:	8d 98 00 00 00 10    	lea    0x10000000(%eax),%ebx$/;"	l
f01010d5	obj/kern/kernel.asm	/^f01010d5:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f01010d8	obj/kern/kernel.asm	/^f01010d8:	a1 94 9e 2b f0       	mov    0xf02b9e94,%eax$/;"	l
f01010dd	obj/kern/kernel.asm	/^f01010dd:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
f01010e0	obj/kern/kernel.asm	/^f01010e0:	8b 35 40 92 2b f0    	mov    0xf02b9240,%esi$/;"	l
f01010e6	obj/kern/kernel.asm	/^f01010e6:	8d 0c c5 f8 ff ff ff 	lea    -0x8(,%eax,8),%ecx$/;"	l
f01010ed	obj/kern/kernel.asm	/^f01010ed:	eb 3b                	jmp    f010112a <page_init+0x94>$/;"	l
f01010ef	obj/kern/kernel.asm	/^f01010ef:	89 c8                	mov    %ecx,%eax$/;"	l
f01010f1	obj/kern/kernel.asm	/^f01010f1:	03 05 9c 9e 2b f0    	add    0xf02b9e9c,%eax$/;"	l
f01010f7	obj/kern/kernel.asm	/^f01010f7:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f01010fd	obj/kern/kernel.asm	/^f01010fd:	85 d2                	test   %edx,%edx$/;"	l
f01010ff	obj/kern/kernel.asm	/^f01010ff:	74 11                	je     f0101112 <page_init+0x7c>$/;"	l
f0101101	obj/kern/kernel.asm	/^f0101101:	39 da                	cmp    %ebx,%edx$/;"	l
f0101103	obj/kern/kernel.asm	/^f0101103:	7d 08                	jge    f010110d <page_init+0x77>$/;"	l
f0101105	obj/kern/kernel.asm	/^f0101105:	81 fa 9f 00 00 00    	cmp    $0x9f,%edx$/;"	l
f010110b	obj/kern/kernel.asm	/^f010110b:	7f 05                	jg     f0101112 <page_init+0x7c>$/;"	l
f010110d	obj/kern/kernel.asm	/^f010110d:	83 fa 07             	cmp    $0x7,%edx$/;"	l
f0101110	obj/kern/kernel.asm	/^f0101110:	75 08                	jne    f010111a <page_init+0x84>$/;"	l
f0101112	obj/kern/kernel.asm	/^f0101112:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0101118	obj/kern/kernel.asm	/^f0101118:	eb 0a                	jmp    f0101124 <page_init+0x8e>$/;"	l
f010111a	obj/kern/kernel.asm	/^f010111a:	89 30                	mov    %esi,(%eax)$/;"	l
f010111c	obj/kern/kernel.asm	/^f010111c:	89 ce                	mov    %ecx,%esi$/;"	l
f010111e	obj/kern/kernel.asm	/^f010111e:	03 35 9c 9e 2b f0    	add    0xf02b9e9c,%esi$/;"	l
f0101124	obj/kern/kernel.asm	/^f0101124:	83 ea 01             	sub    $0x1,%edx$/;"	l
f0101127	obj/kern/kernel.asm	/^f0101127:	83 e9 08             	sub    $0x8,%ecx$/;"	l
f010112a	obj/kern/kernel.asm	/^f010112a:	85 d2                	test   %edx,%edx$/;"	l
f010112c	obj/kern/kernel.asm	/^f010112c:	79 c1                	jns    f01010ef <page_init+0x59>$/;"	l
f010112e	obj/kern/kernel.asm	/^f010112e:	89 35 40 92 2b f0    	mov    %esi,0xf02b9240$/;"	l
f0101134	obj/kern/kernel.asm	/^f0101134:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101137	obj/kern/kernel.asm	/^f0101137:	5b                   	pop    %ebx$/;"	l
f0101138	obj/kern/kernel.asm	/^f0101138:	5e                   	pop    %esi$/;"	l
f0101139	obj/kern/kernel.asm	/^f0101139:	5d                   	pop    %ebp$/;"	l
f010113a	obj/kern/kernel.asm	/^f010113a:	c3                   	ret    $/;"	l
f010113b	obj/kern/kernel.asm	/^f010113b <page_alloc>:$/;"	l
f010113b	obj/kern/kernel.asm	/^f010113b:	55                   	push   %ebp$/;"	l
f010113c	obj/kern/kernel.asm	/^f010113c:	89 e5                	mov    %esp,%ebp$/;"	l
f010113e	obj/kern/kernel.asm	/^f010113e:	53                   	push   %ebx$/;"	l
f010113f	obj/kern/kernel.asm	/^f010113f:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0101142	obj/kern/kernel.asm	/^f0101142:	8b 1d 40 92 2b f0    	mov    0xf02b9240,%ebx$/;"	l
f0101148	obj/kern/kernel.asm	/^f0101148:	85 db                	test   %ebx,%ebx$/;"	l
f010114a	obj/kern/kernel.asm	/^f010114a:	74 74                	je     f01011c0 <page_alloc+0x85>$/;"	l
f010114c	obj/kern/kernel.asm	/^f010114c:	89 d8                	mov    %ebx,%eax$/;"	l
f010114e	obj/kern/kernel.asm	/^f010114e:	2b 05 9c 9e 2b f0    	sub    0xf02b9e9c,%eax$/;"	l
f0101154	obj/kern/kernel.asm	/^f0101154:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101157	obj/kern/kernel.asm	/^f0101157:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010115a	obj/kern/kernel.asm	/^f010115a:	89 c2                	mov    %eax,%edx$/;"	l
f010115c	obj/kern/kernel.asm	/^f010115c:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f010115f	obj/kern/kernel.asm	/^f010115f:	3b 15 94 9e 2b f0    	cmp    0xf02b9e94,%edx$/;"	l
f0101165	obj/kern/kernel.asm	/^f0101165:	72 20                	jb     f0101187 <page_alloc+0x4c>$/;"	l
f0101167	obj/kern/kernel.asm	/^f0101167:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010116b	obj/kern/kernel.asm	/^f010116b:	c7 44 24 08 c4 7f 10 	movl   $0xf0107fc4,0x8(%esp)$/;"	l
f0101172	obj/kern/kernel.asm	/^f0101172:	f0 $/;"	l
f0101173	obj/kern/kernel.asm	/^f0101173:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f010117a	obj/kern/kernel.asm	/^f010117a:	00 $/;"	l
f010117b	obj/kern/kernel.asm	/^f010117b:	c7 04 24 1d 8f 10 f0 	movl   $0xf0108f1d,(%esp)$/;"	l
f0101182	obj/kern/kernel.asm	/^f0101182:	e8 b9 ee ff ff       	call   f0100040 <_panic>$/;"	l
f0101187	obj/kern/kernel.asm	/^f0101187:	f6 45 08 01          	testb  $0x1,0x8(%ebp)$/;"	l
f010118b	obj/kern/kernel.asm	/^f010118b:	74 1d                	je     f01011aa <page_alloc+0x6f>$/;"	l
f010118d	obj/kern/kernel.asm	/^f010118d:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0101194	obj/kern/kernel.asm	/^f0101194:	00 $/;"	l
f0101195	obj/kern/kernel.asm	/^f0101195:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f010119c	obj/kern/kernel.asm	/^f010119c:	00 $/;"	l
f010119d	obj/kern/kernel.asm	/^f010119d:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f01011a2	obj/kern/kernel.asm	/^f01011a2:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01011a5	obj/kern/kernel.asm	/^f01011a5:	e8 5d 53 00 00       	call   f0106507 <memset>$/;"	l
f01011aa	obj/kern/kernel.asm	/^f01011aa:	a1 40 92 2b f0       	mov    0xf02b9240,%eax$/;"	l
f01011af	obj/kern/kernel.asm	/^f01011af:	8b 00                	mov    (%eax),%eax$/;"	l
f01011b1	obj/kern/kernel.asm	/^f01011b1:	a3 40 92 2b f0       	mov    %eax,0xf02b9240$/;"	l
f01011b6	obj/kern/kernel.asm	/^f01011b6:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)$/;"	l
f01011bc	obj/kern/kernel.asm	/^f01011bc:	89 d8                	mov    %ebx,%eax$/;"	l
f01011be	obj/kern/kernel.asm	/^f01011be:	eb 05                	jmp    f01011c5 <page_alloc+0x8a>$/;"	l
f01011c0	obj/kern/kernel.asm	/^f01011c0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01011c5	obj/kern/kernel.asm	/^f01011c5:	83 c4 14             	add    $0x14,%esp$/;"	l
f01011c8	obj/kern/kernel.asm	/^f01011c8:	5b                   	pop    %ebx$/;"	l
f01011c9	obj/kern/kernel.asm	/^f01011c9:	5d                   	pop    %ebp$/;"	l
f01011ca	obj/kern/kernel.asm	/^f01011ca:	c3                   	ret    $/;"	l
f01011cb	obj/kern/kernel.asm	/^f01011cb <page_free>:$/;"	l
f01011cb	obj/kern/kernel.asm	/^f01011cb:	55                   	push   %ebp$/;"	l
f01011cc	obj/kern/kernel.asm	/^f01011cc:	89 e5                	mov    %esp,%ebp$/;"	l
f01011ce	obj/kern/kernel.asm	/^f01011ce:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01011d1	obj/kern/kernel.asm	/^f01011d1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01011d4	obj/kern/kernel.asm	/^f01011d4:	66 83 78 04 00       	cmpw   $0x0,0x4(%eax)$/;"	l
f01011d9	obj/kern/kernel.asm	/^f01011d9:	74 1c                	je     f01011f7 <page_free+0x2c>$/;"	l
f01011db	obj/kern/kernel.asm	/^f01011db:	c7 44 24 08 88 86 10 	movl   $0xf0108688,0x8(%esp)$/;"	l
f01011e2	obj/kern/kernel.asm	/^f01011e2:	f0 $/;"	l
f01011e3	obj/kern/kernel.asm	/^f01011e3:	c7 44 24 04 7b 01 00 	movl   $0x17b,0x4(%esp)$/;"	l
f01011ea	obj/kern/kernel.asm	/^f01011ea:	00 $/;"	l
f01011eb	obj/kern/kernel.asm	/^f01011eb:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f01011f2	obj/kern/kernel.asm	/^f01011f2:	e8 49 ee ff ff       	call   f0100040 <_panic>$/;"	l
f01011f7	obj/kern/kernel.asm	/^f01011f7:	83 38 00             	cmpl   $0x0,(%eax)$/;"	l
f01011fa	obj/kern/kernel.asm	/^f01011fa:	74 1c                	je     f0101218 <page_free+0x4d>$/;"	l
f01011fc	obj/kern/kernel.asm	/^f01011fc:	c7 44 24 08 00 90 10 	movl   $0xf0109000,0x8(%esp)$/;"	l
f0101203	obj/kern/kernel.asm	/^f0101203:	f0 $/;"	l
f0101204	obj/kern/kernel.asm	/^f0101204:	c7 44 24 04 7c 01 00 	movl   $0x17c,0x4(%esp)$/;"	l
f010120b	obj/kern/kernel.asm	/^f010120b:	00 $/;"	l
f010120c	obj/kern/kernel.asm	/^f010120c:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0101213	obj/kern/kernel.asm	/^f0101213:	e8 28 ee ff ff       	call   f0100040 <_panic>$/;"	l
f0101218	obj/kern/kernel.asm	/^f0101218:	8b 15 40 92 2b f0    	mov    0xf02b9240,%edx$/;"	l
f010121e	obj/kern/kernel.asm	/^f010121e:	89 10                	mov    %edx,(%eax)$/;"	l
f0101220	obj/kern/kernel.asm	/^f0101220:	a3 40 92 2b f0       	mov    %eax,0xf02b9240$/;"	l
f0101225	obj/kern/kernel.asm	/^f0101225:	c9                   	leave  $/;"	l
f0101226	obj/kern/kernel.asm	/^f0101226:	c3                   	ret    $/;"	l
f0101227	obj/kern/kernel.asm	/^f0101227 <page_decref>:$/;"	l
f0101227	obj/kern/kernel.asm	/^f0101227:	55                   	push   %ebp$/;"	l
f0101228	obj/kern/kernel.asm	/^f0101228:	89 e5                	mov    %esp,%ebp$/;"	l
f010122a	obj/kern/kernel.asm	/^f010122a:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010122d	obj/kern/kernel.asm	/^f010122d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101230	obj/kern/kernel.asm	/^f0101230:	0f b7 48 04          	movzwl 0x4(%eax),%ecx$/;"	l
f0101234	obj/kern/kernel.asm	/^f0101234:	8d 51 ff             	lea    -0x1(%ecx),%edx$/;"	l
f0101237	obj/kern/kernel.asm	/^f0101237:	66 89 50 04          	mov    %dx,0x4(%eax)$/;"	l
f010123b	obj/kern/kernel.asm	/^f010123b:	66 85 d2             	test   %dx,%dx$/;"	l
f010123e	obj/kern/kernel.asm	/^f010123e:	75 08                	jne    f0101248 <page_decref+0x21>$/;"	l
f0101240	obj/kern/kernel.asm	/^f0101240:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101243	obj/kern/kernel.asm	/^f0101243:	e8 83 ff ff ff       	call   f01011cb <page_free>$/;"	l
f0101248	obj/kern/kernel.asm	/^f0101248:	c9                   	leave  $/;"	l
f0101249	obj/kern/kernel.asm	/^f0101249:	c3                   	ret    $/;"	l
f010124a	obj/kern/kernel.asm	/^f010124a <pgdir_walk>:$/;"	l
f010124a	obj/kern/kernel.asm	/^f010124a:	55                   	push   %ebp$/;"	l
f010124b	obj/kern/kernel.asm	/^f010124b:	89 e5                	mov    %esp,%ebp$/;"	l
f010124d	obj/kern/kernel.asm	/^f010124d:	56                   	push   %esi$/;"	l
f010124e	obj/kern/kernel.asm	/^f010124e:	53                   	push   %ebx$/;"	l
f010124f	obj/kern/kernel.asm	/^f010124f:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0101252	obj/kern/kernel.asm	/^f0101252:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0101255	obj/kern/kernel.asm	/^f0101255:	89 de                	mov    %ebx,%esi$/;"	l
f0101257	obj/kern/kernel.asm	/^f0101257:	c1 ee 16             	shr    $0x16,%esi$/;"	l
f010125a	obj/kern/kernel.asm	/^f010125a:	c1 e6 02             	shl    $0x2,%esi$/;"	l
f010125d	obj/kern/kernel.asm	/^f010125d:	03 75 08             	add    0x8(%ebp),%esi$/;"	l
f0101260	obj/kern/kernel.asm	/^f0101260:	8b 06                	mov    (%esi),%eax$/;"	l
f0101262	obj/kern/kernel.asm	/^f0101262:	a8 01                	test   $0x1,%al$/;"	l
f0101264	obj/kern/kernel.asm	/^f0101264:	74 44                	je     f01012aa <pgdir_walk+0x60>$/;"	l
f0101266	obj/kern/kernel.asm	/^f0101266:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f010126b	obj/kern/kernel.asm	/^f010126b:	c1 eb 0a             	shr    $0xa,%ebx$/;"	l
f010126e	obj/kern/kernel.asm	/^f010126e:	81 e3 fc 0f 00 00    	and    $0xffc,%ebx$/;"	l
f0101274	obj/kern/kernel.asm	/^f0101274:	01 d8                	add    %ebx,%eax$/;"	l
f0101276	obj/kern/kernel.asm	/^f0101276:	89 c2                	mov    %eax,%edx$/;"	l
f0101278	obj/kern/kernel.asm	/^f0101278:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f010127b	obj/kern/kernel.asm	/^f010127b:	3b 15 94 9e 2b f0    	cmp    0xf02b9e94,%edx$/;"	l
f0101281	obj/kern/kernel.asm	/^f0101281:	72 20                	jb     f01012a3 <pgdir_walk+0x59>$/;"	l
f0101283	obj/kern/kernel.asm	/^f0101283:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101287	obj/kern/kernel.asm	/^f0101287:	c7 44 24 08 c4 7f 10 	movl   $0xf0107fc4,0x8(%esp)$/;"	l
f010128e	obj/kern/kernel.asm	/^f010128e:	f0 $/;"	l
f010128f	obj/kern/kernel.asm	/^f010128f:	c7 44 24 04 a9 01 00 	movl   $0x1a9,0x4(%esp)$/;"	l
f0101296	obj/kern/kernel.asm	/^f0101296:	00 $/;"	l
f0101297	obj/kern/kernel.asm	/^f0101297:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f010129e	obj/kern/kernel.asm	/^f010129e:	e8 9d ed ff ff       	call   f0100040 <_panic>$/;"	l
f01012a3	obj/kern/kernel.asm	/^f01012a3:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f01012a8	obj/kern/kernel.asm	/^f01012a8:	eb 79                	jmp    f0101323 <pgdir_walk+0xd9>$/;"	l
f01012aa	obj/kern/kernel.asm	/^f01012aa:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
f01012ae	obj/kern/kernel.asm	/^f01012ae:	74 67                	je     f0101317 <pgdir_walk+0xcd>$/;"	l
f01012b0	obj/kern/kernel.asm	/^f01012b0:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f01012b7	obj/kern/kernel.asm	/^f01012b7:	e8 7f fe ff ff       	call   f010113b <page_alloc>$/;"	l
f01012bc	obj/kern/kernel.asm	/^f01012bc:	85 c0                	test   %eax,%eax$/;"	l
f01012be	obj/kern/kernel.asm	/^f01012be:	74 5e                	je     f010131e <pgdir_walk+0xd4>$/;"	l
f01012c0	obj/kern/kernel.asm	/^f01012c0:	66 83 40 04 01       	addw   $0x1,0x4(%eax)$/;"	l
f01012c5	obj/kern/kernel.asm	/^f01012c5:	2b 05 9c 9e 2b f0    	sub    0xf02b9e9c,%eax$/;"	l
f01012cb	obj/kern/kernel.asm	/^f01012cb:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01012ce	obj/kern/kernel.asm	/^f01012ce:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01012d1	obj/kern/kernel.asm	/^f01012d1:	89 c2                	mov    %eax,%edx$/;"	l
f01012d3	obj/kern/kernel.asm	/^f01012d3:	83 ca 07             	or     $0x7,%edx$/;"	l
f01012d6	obj/kern/kernel.asm	/^f01012d6:	89 16                	mov    %edx,(%esi)$/;"	l
f01012d8	obj/kern/kernel.asm	/^f01012d8:	c1 eb 0a             	shr    $0xa,%ebx$/;"	l
f01012db	obj/kern/kernel.asm	/^f01012db:	81 e3 fc 0f 00 00    	and    $0xffc,%ebx$/;"	l
f01012e1	obj/kern/kernel.asm	/^f01012e1:	01 d8                	add    %ebx,%eax$/;"	l
f01012e3	obj/kern/kernel.asm	/^f01012e3:	89 c2                	mov    %eax,%edx$/;"	l
f01012e5	obj/kern/kernel.asm	/^f01012e5:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01012e8	obj/kern/kernel.asm	/^f01012e8:	3b 15 94 9e 2b f0    	cmp    0xf02b9e94,%edx$/;"	l
f01012ee	obj/kern/kernel.asm	/^f01012ee:	72 20                	jb     f0101310 <pgdir_walk+0xc6>$/;"	l
f01012f0	obj/kern/kernel.asm	/^f01012f0:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01012f4	obj/kern/kernel.asm	/^f01012f4:	c7 44 24 08 c4 7f 10 	movl   $0xf0107fc4,0x8(%esp)$/;"	l
f01012fb	obj/kern/kernel.asm	/^f01012fb:	f0 $/;"	l
f01012fc	obj/kern/kernel.asm	/^f01012fc:	c7 44 24 04 b0 01 00 	movl   $0x1b0,0x4(%esp)$/;"	l
f0101303	obj/kern/kernel.asm	/^f0101303:	00 $/;"	l
f0101304	obj/kern/kernel.asm	/^f0101304:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f010130b	obj/kern/kernel.asm	/^f010130b:	e8 30 ed ff ff       	call   f0100040 <_panic>$/;"	l
f0101310	obj/kern/kernel.asm	/^f0101310:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0101315	obj/kern/kernel.asm	/^f0101315:	eb 0c                	jmp    f0101323 <pgdir_walk+0xd9>$/;"	l
f0101317	obj/kern/kernel.asm	/^f0101317:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010131c	obj/kern/kernel.asm	/^f010131c:	eb 05                	jmp    f0101323 <pgdir_walk+0xd9>$/;"	l
f010131e	obj/kern/kernel.asm	/^f010131e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101323	obj/kern/kernel.asm	/^f0101323:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101326	obj/kern/kernel.asm	/^f0101326:	5b                   	pop    %ebx$/;"	l
f0101327	obj/kern/kernel.asm	/^f0101327:	5e                   	pop    %esi$/;"	l
f0101328	obj/kern/kernel.asm	/^f0101328:	5d                   	pop    %ebp$/;"	l
f0101329	obj/kern/kernel.asm	/^f0101329:	c3                   	ret    $/;"	l
f010132a	obj/kern/kernel.asm	/^f010132a <boot_map_region>:$/;"	l
f010132a	obj/kern/kernel.asm	/^f010132a:	55                   	push   %ebp$/;"	l
f010132b	obj/kern/kernel.asm	/^f010132b:	89 e5                	mov    %esp,%ebp$/;"	l
f010132d	obj/kern/kernel.asm	/^f010132d:	57                   	push   %edi$/;"	l
f010132e	obj/kern/kernel.asm	/^f010132e:	56                   	push   %esi$/;"	l
f010132f	obj/kern/kernel.asm	/^f010132f:	53                   	push   %ebx$/;"	l
f0101330	obj/kern/kernel.asm	/^f0101330:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0101333	obj/kern/kernel.asm	/^f0101333:	89 c7                	mov    %eax,%edi$/;"	l
f0101335	obj/kern/kernel.asm	/^f0101335:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f0101338	obj/kern/kernel.asm	/^f0101338:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f010133b	obj/kern/kernel.asm	/^f010133b:	89 4d e4             	mov    %ecx,-0x1c(%ebp)$/;"	l
f010133e	obj/kern/kernel.asm	/^f010133e:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0101343	obj/kern/kernel.asm	/^f0101343:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101346	obj/kern/kernel.asm	/^f0101346:	83 c8 01             	or     $0x1,%eax$/;"	l
f0101349	obj/kern/kernel.asm	/^f0101349:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f010134c	obj/kern/kernel.asm	/^f010134c:	eb 29                	jmp    f0101377 <boot_map_region+0x4d>$/;"	l
f010134e	obj/kern/kernel.asm	/^f010134e:	89 de                	mov    %ebx,%esi$/;"	l
f0101350	obj/kern/kernel.asm	/^f0101350:	c1 e6 0c             	shl    $0xc,%esi$/;"	l
f0101353	obj/kern/kernel.asm	/^f0101353:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f010135a	obj/kern/kernel.asm	/^f010135a:	00 $/;"	l
f010135b	obj/kern/kernel.asm	/^f010135b:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f010135e	obj/kern/kernel.asm	/^f010135e:	01 f0                	add    %esi,%eax$/;"	l
f0101360	obj/kern/kernel.asm	/^f0101360:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101364	obj/kern/kernel.asm	/^f0101364:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0101367	obj/kern/kernel.asm	/^f0101367:	e8 de fe ff ff       	call   f010124a <pgdir_walk>$/;"	l
f010136c	obj/kern/kernel.asm	/^f010136c:	03 75 08             	add    0x8(%ebp),%esi$/;"	l
f010136f	obj/kern/kernel.asm	/^f010136f:	0b 75 dc             	or     -0x24(%ebp),%esi$/;"	l
f0101372	obj/kern/kernel.asm	/^f0101372:	89 30                	mov    %esi,(%eax)$/;"	l
f0101374	obj/kern/kernel.asm	/^f0101374:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0101377	obj/kern/kernel.asm	/^f0101377:	3b 5d e4             	cmp    -0x1c(%ebp),%ebx$/;"	l
f010137a	obj/kern/kernel.asm	/^f010137a:	7c d2                	jl     f010134e <boot_map_region+0x24>$/;"	l
f010137c	obj/kern/kernel.asm	/^f010137c:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f010137f	obj/kern/kernel.asm	/^f010137f:	5b                   	pop    %ebx$/;"	l
f0101380	obj/kern/kernel.asm	/^f0101380:	5e                   	pop    %esi$/;"	l
f0101381	obj/kern/kernel.asm	/^f0101381:	5f                   	pop    %edi$/;"	l
f0101382	obj/kern/kernel.asm	/^f0101382:	5d                   	pop    %ebp$/;"	l
f0101383	obj/kern/kernel.asm	/^f0101383:	c3                   	ret    $/;"	l
f0101384	obj/kern/kernel.asm	/^f0101384 <page_lookup>:$/;"	l
f0101384	obj/kern/kernel.asm	/^f0101384:	55                   	push   %ebp$/;"	l
f0101385	obj/kern/kernel.asm	/^f0101385:	89 e5                	mov    %esp,%ebp$/;"	l
f0101387	obj/kern/kernel.asm	/^f0101387:	53                   	push   %ebx$/;"	l
f0101388	obj/kern/kernel.asm	/^f0101388:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010138b	obj/kern/kernel.asm	/^f010138b:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f010138e	obj/kern/kernel.asm	/^f010138e:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0101395	obj/kern/kernel.asm	/^f0101395:	00 $/;"	l
f0101396	obj/kern/kernel.asm	/^f0101396:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101399	obj/kern/kernel.asm	/^f0101399:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010139d	obj/kern/kernel.asm	/^f010139d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01013a0	obj/kern/kernel.asm	/^f01013a0:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01013a3	obj/kern/kernel.asm	/^f01013a3:	e8 a2 fe ff ff       	call   f010124a <pgdir_walk>$/;"	l
f01013a8	obj/kern/kernel.asm	/^f01013a8:	85 c0                	test   %eax,%eax$/;"	l
f01013aa	obj/kern/kernel.asm	/^f01013aa:	74 3f                	je     f01013eb <page_lookup+0x67>$/;"	l
f01013ac	obj/kern/kernel.asm	/^f01013ac:	f6 00 01             	testb  $0x1,(%eax)$/;"	l
f01013af	obj/kern/kernel.asm	/^f01013af:	74 41                	je     f01013f2 <page_lookup+0x6e>$/;"	l
f01013b1	obj/kern/kernel.asm	/^f01013b1:	85 db                	test   %ebx,%ebx$/;"	l
f01013b3	obj/kern/kernel.asm	/^f01013b3:	74 02                	je     f01013b7 <page_lookup+0x33>$/;"	l
f01013b5	obj/kern/kernel.asm	/^f01013b5:	89 03                	mov    %eax,(%ebx)$/;"	l
f01013b7	obj/kern/kernel.asm	/^f01013b7:	8b 00                	mov    (%eax),%eax$/;"	l
f01013b9	obj/kern/kernel.asm	/^f01013b9:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f01013bc	obj/kern/kernel.asm	/^f01013bc:	3b 05 94 9e 2b f0    	cmp    0xf02b9e94,%eax$/;"	l
f01013c2	obj/kern/kernel.asm	/^f01013c2:	72 1c                	jb     f01013e0 <page_lookup+0x5c>$/;"	l
f01013c4	obj/kern/kernel.asm	/^f01013c4:	c7 44 24 08 b0 86 10 	movl   $0xf01086b0,0x8(%esp)$/;"	l
f01013cb	obj/kern/kernel.asm	/^f01013cb:	f0 $/;"	l
f01013cc	obj/kern/kernel.asm	/^f01013cc:	c7 44 24 04 51 00 00 	movl   $0x51,0x4(%esp)$/;"	l
f01013d3	obj/kern/kernel.asm	/^f01013d3:	00 $/;"	l
f01013d4	obj/kern/kernel.asm	/^f01013d4:	c7 04 24 1d 8f 10 f0 	movl   $0xf0108f1d,(%esp)$/;"	l
f01013db	obj/kern/kernel.asm	/^f01013db:	e8 60 ec ff ff       	call   f0100040 <_panic>$/;"	l
f01013e0	obj/kern/kernel.asm	/^f01013e0:	8b 15 9c 9e 2b f0    	mov    0xf02b9e9c,%edx$/;"	l
f01013e6	obj/kern/kernel.asm	/^f01013e6:	8d 04 c2             	lea    (%edx,%eax,8),%eax$/;"	l
f01013e9	obj/kern/kernel.asm	/^f01013e9:	eb 0c                	jmp    f01013f7 <page_lookup+0x73>$/;"	l
f01013eb	obj/kern/kernel.asm	/^f01013eb:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01013f0	obj/kern/kernel.asm	/^f01013f0:	eb 05                	jmp    f01013f7 <page_lookup+0x73>$/;"	l
f01013f2	obj/kern/kernel.asm	/^f01013f2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01013f7	obj/kern/kernel.asm	/^f01013f7:	83 c4 14             	add    $0x14,%esp$/;"	l
f01013fa	obj/kern/kernel.asm	/^f01013fa:	5b                   	pop    %ebx$/;"	l
f01013fb	obj/kern/kernel.asm	/^f01013fb:	5d                   	pop    %ebp$/;"	l
f01013fc	obj/kern/kernel.asm	/^f01013fc:	c3                   	ret    $/;"	l
f01013fd	obj/kern/kernel.asm	/^f01013fd <tlb_invalidate>:$/;"	l
f01013fd	obj/kern/kernel.asm	/^f01013fd:	55                   	push   %ebp$/;"	l
f01013fe	obj/kern/kernel.asm	/^f01013fe:	89 e5                	mov    %esp,%ebp$/;"	l
f0101400	obj/kern/kernel.asm	/^f0101400:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101403	obj/kern/kernel.asm	/^f0101403:	e8 51 57 00 00       	call   f0106b59 <cpunum>$/;"	l
f0101408	obj/kern/kernel.asm	/^f0101408:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010140b	obj/kern/kernel.asm	/^f010140b:	83 b8 28 a0 2b f0 00 	cmpl   $0x0,-0xfd45fd8(%eax)$/;"	l
f0101412	obj/kern/kernel.asm	/^f0101412:	74 16                	je     f010142a <tlb_invalidate+0x2d>$/;"	l
f0101414	obj/kern/kernel.asm	/^f0101414:	e8 40 57 00 00       	call   f0106b59 <cpunum>$/;"	l
f0101419	obj/kern/kernel.asm	/^f0101419:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010141c	obj/kern/kernel.asm	/^f010141c:	8b 80 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%eax$/;"	l
f0101422	obj/kern/kernel.asm	/^f0101422:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0101425	obj/kern/kernel.asm	/^f0101425:	39 50 60             	cmp    %edx,0x60(%eax)$/;"	l
f0101428	obj/kern/kernel.asm	/^f0101428:	75 06                	jne    f0101430 <tlb_invalidate+0x33>$/;"	l
f010142a	obj/kern/kernel.asm	/^f010142a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010142d	obj/kern/kernel.asm	/^f010142d:	0f 01 38             	invlpg (%eax)$/;"	l
f0101430	obj/kern/kernel.asm	/^f0101430:	c9                   	leave  $/;"	l
f0101431	obj/kern/kernel.asm	/^f0101431:	c3                   	ret    $/;"	l
f0101432	obj/kern/kernel.asm	/^f0101432 <page_remove>:$/;"	l
f0101432	obj/kern/kernel.asm	/^f0101432:	55                   	push   %ebp$/;"	l
f0101433	obj/kern/kernel.asm	/^f0101433:	89 e5                	mov    %esp,%ebp$/;"	l
f0101435	obj/kern/kernel.asm	/^f0101435:	56                   	push   %esi$/;"	l
f0101436	obj/kern/kernel.asm	/^f0101436:	53                   	push   %ebx$/;"	l
f0101437	obj/kern/kernel.asm	/^f0101437:	83 ec 20             	sub    $0x20,%esp$/;"	l
f010143a	obj/kern/kernel.asm	/^f010143a:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f010143d	obj/kern/kernel.asm	/^f010143d:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0101440	obj/kern/kernel.asm	/^f0101440:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0101443	obj/kern/kernel.asm	/^f0101443:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0101447	obj/kern/kernel.asm	/^f0101447:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f010144b	obj/kern/kernel.asm	/^f010144b:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010144e	obj/kern/kernel.asm	/^f010144e:	e8 31 ff ff ff       	call   f0101384 <page_lookup>$/;"	l
f0101453	obj/kern/kernel.asm	/^f0101453:	85 c0                	test   %eax,%eax$/;"	l
f0101455	obj/kern/kernel.asm	/^f0101455:	74 1d                	je     f0101474 <page_remove+0x42>$/;"	l
f0101457	obj/kern/kernel.asm	/^f0101457:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f010145a	obj/kern/kernel.asm	/^f010145a:	c7 02 00 00 00 00    	movl   $0x0,(%edx)$/;"	l
f0101460	obj/kern/kernel.asm	/^f0101460:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101463	obj/kern/kernel.asm	/^f0101463:	e8 bf fd ff ff       	call   f0101227 <page_decref>$/;"	l
f0101468	obj/kern/kernel.asm	/^f0101468:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f010146c	obj/kern/kernel.asm	/^f010146c:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010146f	obj/kern/kernel.asm	/^f010146f:	e8 89 ff ff ff       	call   f01013fd <tlb_invalidate>$/;"	l
f0101474	obj/kern/kernel.asm	/^f0101474:	83 c4 20             	add    $0x20,%esp$/;"	l
f0101477	obj/kern/kernel.asm	/^f0101477:	5b                   	pop    %ebx$/;"	l
f0101478	obj/kern/kernel.asm	/^f0101478:	5e                   	pop    %esi$/;"	l
f0101479	obj/kern/kernel.asm	/^f0101479:	5d                   	pop    %ebp$/;"	l
f010147a	obj/kern/kernel.asm	/^f010147a:	c3                   	ret    $/;"	l
f010147b	obj/kern/kernel.asm	/^f010147b <page_insert>:$/;"	l
f010147b	obj/kern/kernel.asm	/^f010147b:	55                   	push   %ebp$/;"	l
f010147c	obj/kern/kernel.asm	/^f010147c:	89 e5                	mov    %esp,%ebp$/;"	l
f010147e	obj/kern/kernel.asm	/^f010147e:	57                   	push   %edi$/;"	l
f010147f	obj/kern/kernel.asm	/^f010147f:	56                   	push   %esi$/;"	l
f0101480	obj/kern/kernel.asm	/^f0101480:	53                   	push   %ebx$/;"	l
f0101481	obj/kern/kernel.asm	/^f0101481:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0101484	obj/kern/kernel.asm	/^f0101484:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0101487	obj/kern/kernel.asm	/^f0101487:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f010148a	obj/kern/kernel.asm	/^f010148a:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0101491	obj/kern/kernel.asm	/^f0101491:	00 $/;"	l
f0101492	obj/kern/kernel.asm	/^f0101492:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0101496	obj/kern/kernel.asm	/^f0101496:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101499	obj/kern/kernel.asm	/^f0101499:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010149c	obj/kern/kernel.asm	/^f010149c:	e8 a9 fd ff ff       	call   f010124a <pgdir_walk>$/;"	l
f01014a1	obj/kern/kernel.asm	/^f01014a1:	89 c3                	mov    %eax,%ebx$/;"	l
f01014a3	obj/kern/kernel.asm	/^f01014a3:	85 c0                	test   %eax,%eax$/;"	l
f01014a5	obj/kern/kernel.asm	/^f01014a5:	74 61                	je     f0101508 <page_insert+0x8d>$/;"	l
f01014a7	obj/kern/kernel.asm	/^f01014a7:	8b 00                	mov    (%eax),%eax$/;"	l
f01014a9	obj/kern/kernel.asm	/^f01014a9:	a8 01                	test   $0x1,%al$/;"	l
f01014ab	obj/kern/kernel.asm	/^f01014ab:	74 37                	je     f01014e4 <page_insert+0x69>$/;"	l
f01014ad	obj/kern/kernel.asm	/^f01014ad:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01014b2	obj/kern/kernel.asm	/^f01014b2:	89 f2                	mov    %esi,%edx$/;"	l
f01014b4	obj/kern/kernel.asm	/^f01014b4:	2b 15 9c 9e 2b f0    	sub    0xf02b9e9c,%edx$/;"	l
f01014ba	obj/kern/kernel.asm	/^f01014ba:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01014bd	obj/kern/kernel.asm	/^f01014bd:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01014c0	obj/kern/kernel.asm	/^f01014c0:	39 d0                	cmp    %edx,%eax$/;"	l
f01014c2	obj/kern/kernel.asm	/^f01014c2:	75 11                	jne    f01014d5 <page_insert+0x5a>$/;"	l
f01014c4	obj/kern/kernel.asm	/^f01014c4:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
f01014c7	obj/kern/kernel.asm	/^f01014c7:	83 ca 01             	or     $0x1,%edx$/;"	l
f01014ca	obj/kern/kernel.asm	/^f01014ca:	09 d0                	or     %edx,%eax$/;"	l
f01014cc	obj/kern/kernel.asm	/^f01014cc:	89 03                	mov    %eax,(%ebx)$/;"	l
f01014ce	obj/kern/kernel.asm	/^f01014ce:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01014d3	obj/kern/kernel.asm	/^f01014d3:	eb 38                	jmp    f010150d <page_insert+0x92>$/;"	l
f01014d5	obj/kern/kernel.asm	/^f01014d5:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01014d9	obj/kern/kernel.asm	/^f01014d9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01014dc	obj/kern/kernel.asm	/^f01014dc:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01014df	obj/kern/kernel.asm	/^f01014df:	e8 4e ff ff ff       	call   f0101432 <page_remove>$/;"	l
f01014e4	obj/kern/kernel.asm	/^f01014e4:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
f01014e7	obj/kern/kernel.asm	/^f01014e7:	83 ca 01             	or     $0x1,%edx$/;"	l
f01014ea	obj/kern/kernel.asm	/^f01014ea:	89 f0                	mov    %esi,%eax$/;"	l
f01014ec	obj/kern/kernel.asm	/^f01014ec:	2b 05 9c 9e 2b f0    	sub    0xf02b9e9c,%eax$/;"	l
f01014f2	obj/kern/kernel.asm	/^f01014f2:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01014f5	obj/kern/kernel.asm	/^f01014f5:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01014f8	obj/kern/kernel.asm	/^f01014f8:	09 d0                	or     %edx,%eax$/;"	l
f01014fa	obj/kern/kernel.asm	/^f01014fa:	89 03                	mov    %eax,(%ebx)$/;"	l
f01014fc	obj/kern/kernel.asm	/^f01014fc:	66 83 46 04 01       	addw   $0x1,0x4(%esi)$/;"	l
f0101501	obj/kern/kernel.asm	/^f0101501:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101506	obj/kern/kernel.asm	/^f0101506:	eb 05                	jmp    f010150d <page_insert+0x92>$/;"	l
f0101508	obj/kern/kernel.asm	/^f0101508:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f010150d	obj/kern/kernel.asm	/^f010150d:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0101510	obj/kern/kernel.asm	/^f0101510:	5b                   	pop    %ebx$/;"	l
f0101511	obj/kern/kernel.asm	/^f0101511:	5e                   	pop    %esi$/;"	l
f0101512	obj/kern/kernel.asm	/^f0101512:	5f                   	pop    %edi$/;"	l
f0101513	obj/kern/kernel.asm	/^f0101513:	5d                   	pop    %ebp$/;"	l
f0101514	obj/kern/kernel.asm	/^f0101514:	c3                   	ret    $/;"	l
f0101515	obj/kern/kernel.asm	/^f0101515 <mmio_map_region>:$/;"	l
f0101515	obj/kern/kernel.asm	/^f0101515:	55                   	push   %ebp$/;"	l
f0101516	obj/kern/kernel.asm	/^f0101516:	89 e5                	mov    %esp,%ebp$/;"	l
f0101518	obj/kern/kernel.asm	/^f0101518:	56                   	push   %esi$/;"	l
f0101519	obj/kern/kernel.asm	/^f0101519:	53                   	push   %ebx$/;"	l
f010151a	obj/kern/kernel.asm	/^f010151a:	83 ec 10             	sub    $0x10,%esp$/;"	l
f010151d	obj/kern/kernel.asm	/^f010151d:	8b 1d 00 53 12 f0    	mov    0xf0125300,%ebx$/;"	l
f0101523	obj/kern/kernel.asm	/^f0101523:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101526	obj/kern/kernel.asm	/^f0101526:	8d b0 ff 0f 00 00    	lea    0xfff(%eax),%esi$/;"	l
f010152c	obj/kern/kernel.asm	/^f010152c:	81 e6 00 f0 ff ff    	and    $0xfffff000,%esi$/;"	l
f0101532	obj/kern/kernel.asm	/^f0101532:	8d 04 1e             	lea    (%esi,%ebx,1),%eax$/;"	l
f0101535	obj/kern/kernel.asm	/^f0101535:	3d 00 00 c0 ef       	cmp    $0xefc00000,%eax$/;"	l
f010153a	obj/kern/kernel.asm	/^f010153a:	76 1c                	jbe    f0101558 <mmio_map_region+0x43>$/;"	l
f010153c	obj/kern/kernel.asm	/^f010153c:	c7 44 24 08 d0 86 10 	movl   $0xf01086d0,0x8(%esp)$/;"	l
f0101543	obj/kern/kernel.asm	/^f0101543:	f0 $/;"	l
f0101544	obj/kern/kernel.asm	/^f0101544:	c7 44 24 04 5d 02 00 	movl   $0x25d,0x4(%esp)$/;"	l
f010154b	obj/kern/kernel.asm	/^f010154b:	00 $/;"	l
f010154c	obj/kern/kernel.asm	/^f010154c:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0101553	obj/kern/kernel.asm	/^f0101553:	e8 e8 ea ff ff       	call   f0100040 <_panic>$/;"	l
f0101558	obj/kern/kernel.asm	/^f0101558:	c7 44 24 04 1a 00 00 	movl   $0x1a,0x4(%esp)$/;"	l
f010155f	obj/kern/kernel.asm	/^f010155f:	00 $/;"	l
f0101560	obj/kern/kernel.asm	/^f0101560:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101563	obj/kern/kernel.asm	/^f0101563:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101566	obj/kern/kernel.asm	/^f0101566:	89 f1                	mov    %esi,%ecx$/;"	l
f0101568	obj/kern/kernel.asm	/^f0101568:	89 da                	mov    %ebx,%edx$/;"	l
f010156a	obj/kern/kernel.asm	/^f010156a:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f010156f	obj/kern/kernel.asm	/^f010156f:	e8 b6 fd ff ff       	call   f010132a <boot_map_region>$/;"	l
f0101574	obj/kern/kernel.asm	/^f0101574:	01 35 00 53 12 f0    	add    %esi,0xf0125300$/;"	l
f010157a	obj/kern/kernel.asm	/^f010157a:	89 d8                	mov    %ebx,%eax$/;"	l
f010157c	obj/kern/kernel.asm	/^f010157c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010157f	obj/kern/kernel.asm	/^f010157f:	5b                   	pop    %ebx$/;"	l
f0101580	obj/kern/kernel.asm	/^f0101580:	5e                   	pop    %esi$/;"	l
f0101581	obj/kern/kernel.asm	/^f0101581:	5d                   	pop    %ebp$/;"	l
f0101582	obj/kern/kernel.asm	/^f0101582:	c3                   	ret    $/;"	l
f0101583	obj/kern/kernel.asm	/^f0101583 <mem_init>:$/;"	l
f0101583	obj/kern/kernel.asm	/^f0101583:	55                   	push   %ebp$/;"	l
f0101584	obj/kern/kernel.asm	/^f0101584:	89 e5                	mov    %esp,%ebp$/;"	l
f0101586	obj/kern/kernel.asm	/^f0101586:	57                   	push   %edi$/;"	l
f0101587	obj/kern/kernel.asm	/^f0101587:	56                   	push   %esi$/;"	l
f0101588	obj/kern/kernel.asm	/^f0101588:	53                   	push   %ebx$/;"	l
f0101589	obj/kern/kernel.asm	/^f0101589:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f010158c	obj/kern/kernel.asm	/^f010158c:	c7 04 24 15 00 00 00 	movl   $0x15,(%esp)$/;"	l
f0101593	obj/kern/kernel.asm	/^f0101593:	e8 d8 28 00 00       	call   f0103e70 <mc146818_read>$/;"	l
f0101598	obj/kern/kernel.asm	/^f0101598:	89 c3                	mov    %eax,%ebx$/;"	l
f010159a	obj/kern/kernel.asm	/^f010159a:	c7 04 24 16 00 00 00 	movl   $0x16,(%esp)$/;"	l
f01015a1	obj/kern/kernel.asm	/^f01015a1:	e8 ca 28 00 00       	call   f0103e70 <mc146818_read>$/;"	l
f01015a6	obj/kern/kernel.asm	/^f01015a6:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f01015a9	obj/kern/kernel.asm	/^f01015a9:	09 c3                	or     %eax,%ebx$/;"	l
f01015ab	obj/kern/kernel.asm	/^f01015ab:	89 d8                	mov    %ebx,%eax$/;"	l
f01015ad	obj/kern/kernel.asm	/^f01015ad:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f01015b0	obj/kern/kernel.asm	/^f01015b0:	8d 90 ff 0f 00 00    	lea    0xfff(%eax),%edx$/;"	l
f01015b6	obj/kern/kernel.asm	/^f01015b6:	85 c0                	test   %eax,%eax$/;"	l
f01015b8	obj/kern/kernel.asm	/^f01015b8:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
f01015bb	obj/kern/kernel.asm	/^f01015bb:	c1 f8 0c             	sar    $0xc,%eax$/;"	l
f01015be	obj/kern/kernel.asm	/^f01015be:	a3 44 92 2b f0       	mov    %eax,0xf02b9244$/;"	l
f01015c3	obj/kern/kernel.asm	/^f01015c3:	c7 04 24 17 00 00 00 	movl   $0x17,(%esp)$/;"	l
f01015ca	obj/kern/kernel.asm	/^f01015ca:	e8 a1 28 00 00       	call   f0103e70 <mc146818_read>$/;"	l
f01015cf	obj/kern/kernel.asm	/^f01015cf:	89 c3                	mov    %eax,%ebx$/;"	l
f01015d1	obj/kern/kernel.asm	/^f01015d1:	c7 04 24 18 00 00 00 	movl   $0x18,(%esp)$/;"	l
f01015d8	obj/kern/kernel.asm	/^f01015d8:	e8 93 28 00 00       	call   f0103e70 <mc146818_read>$/;"	l
f01015dd	obj/kern/kernel.asm	/^f01015dd:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f01015e0	obj/kern/kernel.asm	/^f01015e0:	09 c3                	or     %eax,%ebx$/;"	l
f01015e2	obj/kern/kernel.asm	/^f01015e2:	89 d8                	mov    %ebx,%eax$/;"	l
f01015e4	obj/kern/kernel.asm	/^f01015e4:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f01015e7	obj/kern/kernel.asm	/^f01015e7:	8d 90 ff 0f 00 00    	lea    0xfff(%eax),%edx$/;"	l
f01015ed	obj/kern/kernel.asm	/^f01015ed:	85 c0                	test   %eax,%eax$/;"	l
f01015ef	obj/kern/kernel.asm	/^f01015ef:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
f01015f2	obj/kern/kernel.asm	/^f01015f2:	c1 f8 0c             	sar    $0xc,%eax$/;"	l
f01015f5	obj/kern/kernel.asm	/^f01015f5:	85 c0                	test   %eax,%eax$/;"	l
f01015f7	obj/kern/kernel.asm	/^f01015f7:	74 0e                	je     f0101607 <mem_init+0x84>$/;"	l
f01015f9	obj/kern/kernel.asm	/^f01015f9:	8d 90 00 01 00 00    	lea    0x100(%eax),%edx$/;"	l
f01015ff	obj/kern/kernel.asm	/^f01015ff:	89 15 94 9e 2b f0    	mov    %edx,0xf02b9e94$/;"	l
f0101605	obj/kern/kernel.asm	/^f0101605:	eb 0c                	jmp    f0101613 <mem_init+0x90>$/;"	l
f0101607	obj/kern/kernel.asm	/^f0101607:	8b 15 44 92 2b f0    	mov    0xf02b9244,%edx$/;"	l
f010160d	obj/kern/kernel.asm	/^f010160d:	89 15 94 9e 2b f0    	mov    %edx,0xf02b9e94$/;"	l
f0101613	obj/kern/kernel.asm	/^f0101613:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101616	obj/kern/kernel.asm	/^f0101616:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f0101619	obj/kern/kernel.asm	/^f0101619:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010161d	obj/kern/kernel.asm	/^f010161d:	a1 44 92 2b f0       	mov    0xf02b9244,%eax$/;"	l
f0101622	obj/kern/kernel.asm	/^f0101622:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101625	obj/kern/kernel.asm	/^f0101625:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f0101628	obj/kern/kernel.asm	/^f0101628:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010162c	obj/kern/kernel.asm	/^f010162c:	a1 94 9e 2b f0       	mov    0xf02b9e94,%eax$/;"	l
f0101631	obj/kern/kernel.asm	/^f0101631:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101634	obj/kern/kernel.asm	/^f0101634:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f0101637	obj/kern/kernel.asm	/^f0101637:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010163b	obj/kern/kernel.asm	/^f010163b:	c7 04 24 04 87 10 f0 	movl   $0xf0108704,(%esp)$/;"	l
f0101642	obj/kern/kernel.asm	/^f0101642:	e8 a5 29 00 00       	call   f0103fec <cprintf>$/;"	l
f0101647	obj/kern/kernel.asm	/^f0101647:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
f010164c	obj/kern/kernel.asm	/^f010164c:	e8 13 f6 ff ff       	call   f0100c64 <boot_alloc>$/;"	l
f0101651	obj/kern/kernel.asm	/^f0101651:	a3 98 9e 2b f0       	mov    %eax,0xf02b9e98$/;"	l
f0101656	obj/kern/kernel.asm	/^f0101656:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f010165d	obj/kern/kernel.asm	/^f010165d:	00 $/;"	l
f010165e	obj/kern/kernel.asm	/^f010165e:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0101665	obj/kern/kernel.asm	/^f0101665:	00 $/;"	l
f0101666	obj/kern/kernel.asm	/^f0101666:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101669	obj/kern/kernel.asm	/^f0101669:	e8 99 4e 00 00       	call   f0106507 <memset>$/;"	l
f010166e	obj/kern/kernel.asm	/^f010166e:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f0101673	obj/kern/kernel.asm	/^f0101673:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0101678	obj/kern/kernel.asm	/^f0101678:	77 20                	ja     f010169a <mem_init+0x117>$/;"	l
f010167a	obj/kern/kernel.asm	/^f010167a:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010167e	obj/kern/kernel.asm	/^f010167e:	c7 44 24 08 e8 7f 10 	movl   $0xf0107fe8,0x8(%esp)$/;"	l
f0101685	obj/kern/kernel.asm	/^f0101685:	f0 $/;"	l
f0101686	obj/kern/kernel.asm	/^f0101686:	c7 44 24 04 95 00 00 	movl   $0x95,0x4(%esp)$/;"	l
f010168d	obj/kern/kernel.asm	/^f010168d:	00 $/;"	l
f010168e	obj/kern/kernel.asm	/^f010168e:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0101695	obj/kern/kernel.asm	/^f0101695:	e8 a6 e9 ff ff       	call   f0100040 <_panic>$/;"	l
f010169a	obj/kern/kernel.asm	/^f010169a:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f01016a0	obj/kern/kernel.asm	/^f01016a0:	83 ca 05             	or     $0x5,%edx$/;"	l
f01016a3	obj/kern/kernel.asm	/^f01016a3:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
f01016a9	obj/kern/kernel.asm	/^f01016a9:	a1 94 9e 2b f0       	mov    0xf02b9e94,%eax$/;"	l
f01016ae	obj/kern/kernel.asm	/^f01016ae:	c1 e0 03             	shl    $0x3,%eax$/;"	l
f01016b1	obj/kern/kernel.asm	/^f01016b1:	e8 ae f5 ff ff       	call   f0100c64 <boot_alloc>$/;"	l
f01016b6	obj/kern/kernel.asm	/^f01016b6:	a3 9c 9e 2b f0       	mov    %eax,0xf02b9e9c$/;"	l
f01016bb	obj/kern/kernel.asm	/^f01016bb:	85 c0                	test   %eax,%eax$/;"	l
f01016bd	obj/kern/kernel.asm	/^f01016bd:	74 21                	je     f01016e0 <mem_init+0x15d>$/;"	l
f01016bf	obj/kern/kernel.asm	/^f01016bf:	8b 0d 94 9e 2b f0    	mov    0xf02b9e94,%ecx$/;"	l
f01016c5	obj/kern/kernel.asm	/^f01016c5:	8d 14 cd 00 00 00 00 	lea    0x0(,%ecx,8),%edx$/;"	l
f01016cc	obj/kern/kernel.asm	/^f01016cc:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f01016d0	obj/kern/kernel.asm	/^f01016d0:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01016d7	obj/kern/kernel.asm	/^f01016d7:	00 $/;"	l
f01016d8	obj/kern/kernel.asm	/^f01016d8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01016db	obj/kern/kernel.asm	/^f01016db:	e8 27 4e 00 00       	call   f0106507 <memset>$/;"	l
f01016e0	obj/kern/kernel.asm	/^f01016e0:	b8 00 f0 01 00       	mov    $0x1f000,%eax$/;"	l
f01016e5	obj/kern/kernel.asm	/^f01016e5:	e8 7a f5 ff ff       	call   f0100c64 <boot_alloc>$/;"	l
f01016ea	obj/kern/kernel.asm	/^f01016ea:	a3 48 92 2b f0       	mov    %eax,0xf02b9248$/;"	l
f01016ef	obj/kern/kernel.asm	/^f01016ef:	85 c0                	test   %eax,%eax$/;"	l
f01016f1	obj/kern/kernel.asm	/^f01016f1:	74 18                	je     f010170b <mem_init+0x188>$/;"	l
f01016f3	obj/kern/kernel.asm	/^f01016f3:	c7 44 24 08 00 f0 01 	movl   $0x1f000,0x8(%esp)$/;"	l
f01016fa	obj/kern/kernel.asm	/^f01016fa:	00 $/;"	l
f01016fb	obj/kern/kernel.asm	/^f01016fb:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0101702	obj/kern/kernel.asm	/^f0101702:	00 $/;"	l
f0101703	obj/kern/kernel.asm	/^f0101703:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101706	obj/kern/kernel.asm	/^f0101706:	e8 fc 4d 00 00       	call   f0106507 <memset>$/;"	l
f010170b	obj/kern/kernel.asm	/^f010170b:	e8 86 f9 ff ff       	call   f0101096 <page_init>$/;"	l
f0101710	obj/kern/kernel.asm	/^f0101710:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0101715	obj/kern/kernel.asm	/^f0101715:	e8 e9 f5 ff ff       	call   f0100d03 <check_page_free_list>$/;"	l
f010171a	obj/kern/kernel.asm	/^f010171a:	83 3d 9c 9e 2b f0 00 	cmpl   $0x0,0xf02b9e9c$/;"	l
f0101721	obj/kern/kernel.asm	/^f0101721:	75 1c                	jne    f010173f <mem_init+0x1bc>$/;"	l
f0101723	obj/kern/kernel.asm	/^f0101723:	c7 44 24 08 0e 90 10 	movl   $0xf010900e,0x8(%esp)$/;"	l
f010172a	obj/kern/kernel.asm	/^f010172a:	f0 $/;"	l
f010172b	obj/kern/kernel.asm	/^f010172b:	c7 44 24 04 f0 02 00 	movl   $0x2f0,0x4(%esp)$/;"	l
f0101732	obj/kern/kernel.asm	/^f0101732:	00 $/;"	l
f0101733	obj/kern/kernel.asm	/^f0101733:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f010173a	obj/kern/kernel.asm	/^f010173a:	e8 01 e9 ff ff       	call   f0100040 <_panic>$/;"	l
f010173f	obj/kern/kernel.asm	/^f010173f:	a1 40 92 2b f0       	mov    0xf02b9240,%eax$/;"	l
f0101744	obj/kern/kernel.asm	/^f0101744:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0101749	obj/kern/kernel.asm	/^f0101749:	eb 05                	jmp    f0101750 <mem_init+0x1cd>$/;"	l
f010174b	obj/kern/kernel.asm	/^f010174b:	83 c3 01             	add    $0x1,%ebx$/;"	l
f010174e	obj/kern/kernel.asm	/^f010174e:	8b 00                	mov    (%eax),%eax$/;"	l
f0101750	obj/kern/kernel.asm	/^f0101750:	85 c0                	test   %eax,%eax$/;"	l
f0101752	obj/kern/kernel.asm	/^f0101752:	75 f7                	jne    f010174b <mem_init+0x1c8>$/;"	l
f0101754	obj/kern/kernel.asm	/^f0101754:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010175b	obj/kern/kernel.asm	/^f010175b:	e8 db f9 ff ff       	call   f010113b <page_alloc>$/;"	l
f0101760	obj/kern/kernel.asm	/^f0101760:	89 c7                	mov    %eax,%edi$/;"	l
f0101762	obj/kern/kernel.asm	/^f0101762:	85 c0                	test   %eax,%eax$/;"	l
f0101764	obj/kern/kernel.asm	/^f0101764:	75 24                	jne    f010178a <mem_init+0x207>$/;"	l
f0101766	obj/kern/kernel.asm	/^f0101766:	c7 44 24 0c 29 90 10 	movl   $0xf0109029,0xc(%esp)$/;"	l
f010176d	obj/kern/kernel.asm	/^f010176d:	f0 $/;"	l
f010176e	obj/kern/kernel.asm	/^f010176e:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f0101775	obj/kern/kernel.asm	/^f0101775:	f0 $/;"	l
f0101776	obj/kern/kernel.asm	/^f0101776:	c7 44 24 04 f8 02 00 	movl   $0x2f8,0x4(%esp)$/;"	l
f010177d	obj/kern/kernel.asm	/^f010177d:	00 $/;"	l
f010177e	obj/kern/kernel.asm	/^f010177e:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0101785	obj/kern/kernel.asm	/^f0101785:	e8 b6 e8 ff ff       	call   f0100040 <_panic>$/;"	l
f010178a	obj/kern/kernel.asm	/^f010178a:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101791	obj/kern/kernel.asm	/^f0101791:	e8 a5 f9 ff ff       	call   f010113b <page_alloc>$/;"	l
f0101796	obj/kern/kernel.asm	/^f0101796:	89 c6                	mov    %eax,%esi$/;"	l
f0101798	obj/kern/kernel.asm	/^f0101798:	85 c0                	test   %eax,%eax$/;"	l
f010179a	obj/kern/kernel.asm	/^f010179a:	75 24                	jne    f01017c0 <mem_init+0x23d>$/;"	l
f010179c	obj/kern/kernel.asm	/^f010179c:	c7 44 24 0c 3f 90 10 	movl   $0xf010903f,0xc(%esp)$/;"	l
f01017a3	obj/kern/kernel.asm	/^f01017a3:	f0 $/;"	l
f01017a4	obj/kern/kernel.asm	/^f01017a4:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f01017ab	obj/kern/kernel.asm	/^f01017ab:	f0 $/;"	l
f01017ac	obj/kern/kernel.asm	/^f01017ac:	c7 44 24 04 f9 02 00 	movl   $0x2f9,0x4(%esp)$/;"	l
f01017b3	obj/kern/kernel.asm	/^f01017b3:	00 $/;"	l
f01017b4	obj/kern/kernel.asm	/^f01017b4:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f01017bb	obj/kern/kernel.asm	/^f01017bb:	e8 80 e8 ff ff       	call   f0100040 <_panic>$/;"	l
f01017c0	obj/kern/kernel.asm	/^f01017c0:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01017c7	obj/kern/kernel.asm	/^f01017c7:	e8 6f f9 ff ff       	call   f010113b <page_alloc>$/;"	l
f01017cc	obj/kern/kernel.asm	/^f01017cc:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01017cf	obj/kern/kernel.asm	/^f01017cf:	85 c0                	test   %eax,%eax$/;"	l
f01017d1	obj/kern/kernel.asm	/^f01017d1:	75 24                	jne    f01017f7 <mem_init+0x274>$/;"	l
f01017d3	obj/kern/kernel.asm	/^f01017d3:	c7 44 24 0c 55 90 10 	movl   $0xf0109055,0xc(%esp)$/;"	l
f01017da	obj/kern/kernel.asm	/^f01017da:	f0 $/;"	l
f01017db	obj/kern/kernel.asm	/^f01017db:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f01017e2	obj/kern/kernel.asm	/^f01017e2:	f0 $/;"	l
f01017e3	obj/kern/kernel.asm	/^f01017e3:	c7 44 24 04 fa 02 00 	movl   $0x2fa,0x4(%esp)$/;"	l
f01017ea	obj/kern/kernel.asm	/^f01017ea:	00 $/;"	l
f01017eb	obj/kern/kernel.asm	/^f01017eb:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f01017f2	obj/kern/kernel.asm	/^f01017f2:	e8 49 e8 ff ff       	call   f0100040 <_panic>$/;"	l
f01017f7	obj/kern/kernel.asm	/^f01017f7:	39 f7                	cmp    %esi,%edi$/;"	l
f01017f9	obj/kern/kernel.asm	/^f01017f9:	75 24                	jne    f010181f <mem_init+0x29c>$/;"	l
f01017fb	obj/kern/kernel.asm	/^f01017fb:	c7 44 24 0c 6b 90 10 	movl   $0xf010906b,0xc(%esp)$/;"	l
f0101802	obj/kern/kernel.asm	/^f0101802:	f0 $/;"	l
f0101803	obj/kern/kernel.asm	/^f0101803:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f010180a	obj/kern/kernel.asm	/^f010180a:	f0 $/;"	l
f010180b	obj/kern/kernel.asm	/^f010180b:	c7 44 24 04 fd 02 00 	movl   $0x2fd,0x4(%esp)$/;"	l
f0101812	obj/kern/kernel.asm	/^f0101812:	00 $/;"	l
f0101813	obj/kern/kernel.asm	/^f0101813:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f010181a	obj/kern/kernel.asm	/^f010181a:	e8 21 e8 ff ff       	call   f0100040 <_panic>$/;"	l
f010181f	obj/kern/kernel.asm	/^f010181f:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101822	obj/kern/kernel.asm	/^f0101822:	39 c6                	cmp    %eax,%esi$/;"	l
f0101824	obj/kern/kernel.asm	/^f0101824:	74 04                	je     f010182a <mem_init+0x2a7>$/;"	l
f0101826	obj/kern/kernel.asm	/^f0101826:	39 c7                	cmp    %eax,%edi$/;"	l
f0101828	obj/kern/kernel.asm	/^f0101828:	75 24                	jne    f010184e <mem_init+0x2cb>$/;"	l
f010182a	obj/kern/kernel.asm	/^f010182a:	c7 44 24 0c 40 87 10 	movl   $0xf0108740,0xc(%esp)$/;"	l
f0101831	obj/kern/kernel.asm	/^f0101831:	f0 $/;"	l
f0101832	obj/kern/kernel.asm	/^f0101832:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f0101839	obj/kern/kernel.asm	/^f0101839:	f0 $/;"	l
f010183a	obj/kern/kernel.asm	/^f010183a:	c7 44 24 04 fe 02 00 	movl   $0x2fe,0x4(%esp)$/;"	l
f0101841	obj/kern/kernel.asm	/^f0101841:	00 $/;"	l
f0101842	obj/kern/kernel.asm	/^f0101842:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0101849	obj/kern/kernel.asm	/^f0101849:	e8 f2 e7 ff ff       	call   f0100040 <_panic>$/;"	l
f010184e	obj/kern/kernel.asm	/^f010184e:	8b 15 9c 9e 2b f0    	mov    0xf02b9e9c,%edx$/;"	l
f0101854	obj/kern/kernel.asm	/^f0101854:	a1 94 9e 2b f0       	mov    0xf02b9e94,%eax$/;"	l
f0101859	obj/kern/kernel.asm	/^f0101859:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010185c	obj/kern/kernel.asm	/^f010185c:	89 f9                	mov    %edi,%ecx$/;"	l
f010185e	obj/kern/kernel.asm	/^f010185e:	29 d1                	sub    %edx,%ecx$/;"	l
f0101860	obj/kern/kernel.asm	/^f0101860:	c1 f9 03             	sar    $0x3,%ecx$/;"	l
f0101863	obj/kern/kernel.asm	/^f0101863:	c1 e1 0c             	shl    $0xc,%ecx$/;"	l
f0101866	obj/kern/kernel.asm	/^f0101866:	39 c1                	cmp    %eax,%ecx$/;"	l
f0101868	obj/kern/kernel.asm	/^f0101868:	72 24                	jb     f010188e <mem_init+0x30b>$/;"	l
f010186a	obj/kern/kernel.asm	/^f010186a:	c7 44 24 0c 7d 90 10 	movl   $0xf010907d,0xc(%esp)$/;"	l
f0101871	obj/kern/kernel.asm	/^f0101871:	f0 $/;"	l
f0101872	obj/kern/kernel.asm	/^f0101872:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f0101879	obj/kern/kernel.asm	/^f0101879:	f0 $/;"	l
f010187a	obj/kern/kernel.asm	/^f010187a:	c7 44 24 04 ff 02 00 	movl   $0x2ff,0x4(%esp)$/;"	l
f0101881	obj/kern/kernel.asm	/^f0101881:	00 $/;"	l
f0101882	obj/kern/kernel.asm	/^f0101882:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0101889	obj/kern/kernel.asm	/^f0101889:	e8 b2 e7 ff ff       	call   f0100040 <_panic>$/;"	l
f010188e	obj/kern/kernel.asm	/^f010188e:	89 f1                	mov    %esi,%ecx$/;"	l
f0101890	obj/kern/kernel.asm	/^f0101890:	29 d1                	sub    %edx,%ecx$/;"	l
f0101892	obj/kern/kernel.asm	/^f0101892:	c1 f9 03             	sar    $0x3,%ecx$/;"	l
f0101895	obj/kern/kernel.asm	/^f0101895:	c1 e1 0c             	shl    $0xc,%ecx$/;"	l
f0101898	obj/kern/kernel.asm	/^f0101898:	39 c8                	cmp    %ecx,%eax$/;"	l
f010189a	obj/kern/kernel.asm	/^f010189a:	77 24                	ja     f01018c0 <mem_init+0x33d>$/;"	l
f010189c	obj/kern/kernel.asm	/^f010189c:	c7 44 24 0c 9a 90 10 	movl   $0xf010909a,0xc(%esp)$/;"	l
f01018a3	obj/kern/kernel.asm	/^f01018a3:	f0 $/;"	l
f01018a4	obj/kern/kernel.asm	/^f01018a4:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f01018ab	obj/kern/kernel.asm	/^f01018ab:	f0 $/;"	l
f01018ac	obj/kern/kernel.asm	/^f01018ac:	c7 44 24 04 00 03 00 	movl   $0x300,0x4(%esp)$/;"	l
f01018b3	obj/kern/kernel.asm	/^f01018b3:	00 $/;"	l
f01018b4	obj/kern/kernel.asm	/^f01018b4:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f01018bb	obj/kern/kernel.asm	/^f01018bb:	e8 80 e7 ff ff       	call   f0100040 <_panic>$/;"	l
f01018c0	obj/kern/kernel.asm	/^f01018c0:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f01018c3	obj/kern/kernel.asm	/^f01018c3:	29 d1                	sub    %edx,%ecx$/;"	l
f01018c5	obj/kern/kernel.asm	/^f01018c5:	89 ca                	mov    %ecx,%edx$/;"	l
f01018c7	obj/kern/kernel.asm	/^f01018c7:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01018ca	obj/kern/kernel.asm	/^f01018ca:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01018cd	obj/kern/kernel.asm	/^f01018cd:	39 d0                	cmp    %edx,%eax$/;"	l
f01018cf	obj/kern/kernel.asm	/^f01018cf:	77 24                	ja     f01018f5 <mem_init+0x372>$/;"	l
f01018d1	obj/kern/kernel.asm	/^f01018d1:	c7 44 24 0c b7 90 10 	movl   $0xf01090b7,0xc(%esp)$/;"	l
f01018d8	obj/kern/kernel.asm	/^f01018d8:	f0 $/;"	l
f01018d9	obj/kern/kernel.asm	/^f01018d9:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f01018e0	obj/kern/kernel.asm	/^f01018e0:	f0 $/;"	l
f01018e1	obj/kern/kernel.asm	/^f01018e1:	c7 44 24 04 01 03 00 	movl   $0x301,0x4(%esp)$/;"	l
f01018e8	obj/kern/kernel.asm	/^f01018e8:	00 $/;"	l
f01018e9	obj/kern/kernel.asm	/^f01018e9:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f01018f0	obj/kern/kernel.asm	/^f01018f0:	e8 4b e7 ff ff       	call   f0100040 <_panic>$/;"	l
f01018f5	obj/kern/kernel.asm	/^f01018f5:	a1 40 92 2b f0       	mov    0xf02b9240,%eax$/;"	l
f01018fa	obj/kern/kernel.asm	/^f01018fa:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f01018fd	obj/kern/kernel.asm	/^f01018fd:	c7 05 40 92 2b f0 00 	movl   $0x0,0xf02b9240$/;"	l
f0101904	obj/kern/kernel.asm	/^f0101904:	00 00 00 $/;"	l
f0101907	obj/kern/kernel.asm	/^f0101907:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010190e	obj/kern/kernel.asm	/^f010190e:	e8 28 f8 ff ff       	call   f010113b <page_alloc>$/;"	l
f0101913	obj/kern/kernel.asm	/^f0101913:	85 c0                	test   %eax,%eax$/;"	l
f0101915	obj/kern/kernel.asm	/^f0101915:	74 24                	je     f010193b <mem_init+0x3b8>$/;"	l
f0101917	obj/kern/kernel.asm	/^f0101917:	c7 44 24 0c d4 90 10 	movl   $0xf01090d4,0xc(%esp)$/;"	l
f010191e	obj/kern/kernel.asm	/^f010191e:	f0 $/;"	l
f010191f	obj/kern/kernel.asm	/^f010191f:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f0101926	obj/kern/kernel.asm	/^f0101926:	f0 $/;"	l
f0101927	obj/kern/kernel.asm	/^f0101927:	c7 44 24 04 08 03 00 	movl   $0x308,0x4(%esp)$/;"	l
f010192e	obj/kern/kernel.asm	/^f010192e:	00 $/;"	l
f010192f	obj/kern/kernel.asm	/^f010192f:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0101936	obj/kern/kernel.asm	/^f0101936:	e8 05 e7 ff ff       	call   f0100040 <_panic>$/;"	l
f010193b	obj/kern/kernel.asm	/^f010193b:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f010193e	obj/kern/kernel.asm	/^f010193e:	e8 88 f8 ff ff       	call   f01011cb <page_free>$/;"	l
f0101943	obj/kern/kernel.asm	/^f0101943:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101946	obj/kern/kernel.asm	/^f0101946:	e8 80 f8 ff ff       	call   f01011cb <page_free>$/;"	l
f010194b	obj/kern/kernel.asm	/^f010194b:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010194e	obj/kern/kernel.asm	/^f010194e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101951	obj/kern/kernel.asm	/^f0101951:	e8 75 f8 ff ff       	call   f01011cb <page_free>$/;"	l
f0101956	obj/kern/kernel.asm	/^f0101956:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010195d	obj/kern/kernel.asm	/^f010195d:	e8 d9 f7 ff ff       	call   f010113b <page_alloc>$/;"	l
f0101962	obj/kern/kernel.asm	/^f0101962:	89 c6                	mov    %eax,%esi$/;"	l
f0101964	obj/kern/kernel.asm	/^f0101964:	85 c0                	test   %eax,%eax$/;"	l
f0101966	obj/kern/kernel.asm	/^f0101966:	75 24                	jne    f010198c <mem_init+0x409>$/;"	l
f0101968	obj/kern/kernel.asm	/^f0101968:	c7 44 24 0c 29 90 10 	movl   $0xf0109029,0xc(%esp)$/;"	l
f010196f	obj/kern/kernel.asm	/^f010196f:	f0 $/;"	l
f0101970	obj/kern/kernel.asm	/^f0101970:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f0101977	obj/kern/kernel.asm	/^f0101977:	f0 $/;"	l
f0101978	obj/kern/kernel.asm	/^f0101978:	c7 44 24 04 0f 03 00 	movl   $0x30f,0x4(%esp)$/;"	l
f010197f	obj/kern/kernel.asm	/^f010197f:	00 $/;"	l
f0101980	obj/kern/kernel.asm	/^f0101980:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0101987	obj/kern/kernel.asm	/^f0101987:	e8 b4 e6 ff ff       	call   f0100040 <_panic>$/;"	l
f010198c	obj/kern/kernel.asm	/^f010198c:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101993	obj/kern/kernel.asm	/^f0101993:	e8 a3 f7 ff ff       	call   f010113b <page_alloc>$/;"	l
f0101998	obj/kern/kernel.asm	/^f0101998:	89 c7                	mov    %eax,%edi$/;"	l
f010199a	obj/kern/kernel.asm	/^f010199a:	85 c0                	test   %eax,%eax$/;"	l
f010199c	obj/kern/kernel.asm	/^f010199c:	75 24                	jne    f01019c2 <mem_init+0x43f>$/;"	l
f010199e	obj/kern/kernel.asm	/^f010199e:	c7 44 24 0c 3f 90 10 	movl   $0xf010903f,0xc(%esp)$/;"	l
f01019a5	obj/kern/kernel.asm	/^f01019a5:	f0 $/;"	l
f01019a6	obj/kern/kernel.asm	/^f01019a6:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f01019ad	obj/kern/kernel.asm	/^f01019ad:	f0 $/;"	l
f01019ae	obj/kern/kernel.asm	/^f01019ae:	c7 44 24 04 10 03 00 	movl   $0x310,0x4(%esp)$/;"	l
f01019b5	obj/kern/kernel.asm	/^f01019b5:	00 $/;"	l
f01019b6	obj/kern/kernel.asm	/^f01019b6:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f01019bd	obj/kern/kernel.asm	/^f01019bd:	e8 7e e6 ff ff       	call   f0100040 <_panic>$/;"	l
f01019c2	obj/kern/kernel.asm	/^f01019c2:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01019c9	obj/kern/kernel.asm	/^f01019c9:	e8 6d f7 ff ff       	call   f010113b <page_alloc>$/;"	l
f01019ce	obj/kern/kernel.asm	/^f01019ce:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01019d1	obj/kern/kernel.asm	/^f01019d1:	85 c0                	test   %eax,%eax$/;"	l
f01019d3	obj/kern/kernel.asm	/^f01019d3:	75 24                	jne    f01019f9 <mem_init+0x476>$/;"	l
f01019d5	obj/kern/kernel.asm	/^f01019d5:	c7 44 24 0c 55 90 10 	movl   $0xf0109055,0xc(%esp)$/;"	l
f01019dc	obj/kern/kernel.asm	/^f01019dc:	f0 $/;"	l
f01019dd	obj/kern/kernel.asm	/^f01019dd:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f01019e4	obj/kern/kernel.asm	/^f01019e4:	f0 $/;"	l
f01019e5	obj/kern/kernel.asm	/^f01019e5:	c7 44 24 04 11 03 00 	movl   $0x311,0x4(%esp)$/;"	l
f01019ec	obj/kern/kernel.asm	/^f01019ec:	00 $/;"	l
f01019ed	obj/kern/kernel.asm	/^f01019ed:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f01019f4	obj/kern/kernel.asm	/^f01019f4:	e8 47 e6 ff ff       	call   f0100040 <_panic>$/;"	l
f01019f9	obj/kern/kernel.asm	/^f01019f9:	39 fe                	cmp    %edi,%esi$/;"	l
f01019fb	obj/kern/kernel.asm	/^f01019fb:	75 24                	jne    f0101a21 <mem_init+0x49e>$/;"	l
f01019fd	obj/kern/kernel.asm	/^f01019fd:	c7 44 24 0c 6b 90 10 	movl   $0xf010906b,0xc(%esp)$/;"	l
f0101a04	obj/kern/kernel.asm	/^f0101a04:	f0 $/;"	l
f0101a05	obj/kern/kernel.asm	/^f0101a05:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f0101a0c	obj/kern/kernel.asm	/^f0101a0c:	f0 $/;"	l
f0101a0d	obj/kern/kernel.asm	/^f0101a0d:	c7 44 24 04 13 03 00 	movl   $0x313,0x4(%esp)$/;"	l
f0101a14	obj/kern/kernel.asm	/^f0101a14:	00 $/;"	l
f0101a15	obj/kern/kernel.asm	/^f0101a15:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0101a1c	obj/kern/kernel.asm	/^f0101a1c:	e8 1f e6 ff ff       	call   f0100040 <_panic>$/;"	l
f0101a21	obj/kern/kernel.asm	/^f0101a21:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101a24	obj/kern/kernel.asm	/^f0101a24:	39 c7                	cmp    %eax,%edi$/;"	l
f0101a26	obj/kern/kernel.asm	/^f0101a26:	74 04                	je     f0101a2c <mem_init+0x4a9>$/;"	l
f0101a28	obj/kern/kernel.asm	/^f0101a28:	39 c6                	cmp    %eax,%esi$/;"	l
f0101a2a	obj/kern/kernel.asm	/^f0101a2a:	75 24                	jne    f0101a50 <mem_init+0x4cd>$/;"	l
f0101a2c	obj/kern/kernel.asm	/^f0101a2c:	c7 44 24 0c 40 87 10 	movl   $0xf0108740,0xc(%esp)$/;"	l
f0101a33	obj/kern/kernel.asm	/^f0101a33:	f0 $/;"	l
f0101a34	obj/kern/kernel.asm	/^f0101a34:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f0101a3b	obj/kern/kernel.asm	/^f0101a3b:	f0 $/;"	l
f0101a3c	obj/kern/kernel.asm	/^f0101a3c:	c7 44 24 04 14 03 00 	movl   $0x314,0x4(%esp)$/;"	l
f0101a43	obj/kern/kernel.asm	/^f0101a43:	00 $/;"	l
f0101a44	obj/kern/kernel.asm	/^f0101a44:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0101a4b	obj/kern/kernel.asm	/^f0101a4b:	e8 f0 e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101a50	obj/kern/kernel.asm	/^f0101a50:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101a57	obj/kern/kernel.asm	/^f0101a57:	e8 df f6 ff ff       	call   f010113b <page_alloc>$/;"	l
f0101a5c	obj/kern/kernel.asm	/^f0101a5c:	85 c0                	test   %eax,%eax$/;"	l
f0101a5e	obj/kern/kernel.asm	/^f0101a5e:	74 24                	je     f0101a84 <mem_init+0x501>$/;"	l
f0101a60	obj/kern/kernel.asm	/^f0101a60:	c7 44 24 0c d4 90 10 	movl   $0xf01090d4,0xc(%esp)$/;"	l
f0101a67	obj/kern/kernel.asm	/^f0101a67:	f0 $/;"	l
f0101a68	obj/kern/kernel.asm	/^f0101a68:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f0101a6f	obj/kern/kernel.asm	/^f0101a6f:	f0 $/;"	l
f0101a70	obj/kern/kernel.asm	/^f0101a70:	c7 44 24 04 15 03 00 	movl   $0x315,0x4(%esp)$/;"	l
f0101a77	obj/kern/kernel.asm	/^f0101a77:	00 $/;"	l
f0101a78	obj/kern/kernel.asm	/^f0101a78:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0101a7f	obj/kern/kernel.asm	/^f0101a7f:	e8 bc e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101a84	obj/kern/kernel.asm	/^f0101a84:	89 f0                	mov    %esi,%eax$/;"	l
f0101a86	obj/kern/kernel.asm	/^f0101a86:	2b 05 9c 9e 2b f0    	sub    0xf02b9e9c,%eax$/;"	l
f0101a8c	obj/kern/kernel.asm	/^f0101a8c:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101a8f	obj/kern/kernel.asm	/^f0101a8f:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101a92	obj/kern/kernel.asm	/^f0101a92:	89 c2                	mov    %eax,%edx$/;"	l
f0101a94	obj/kern/kernel.asm	/^f0101a94:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101a97	obj/kern/kernel.asm	/^f0101a97:	3b 15 94 9e 2b f0    	cmp    0xf02b9e94,%edx$/;"	l
f0101a9d	obj/kern/kernel.asm	/^f0101a9d:	72 20                	jb     f0101abf <mem_init+0x53c>$/;"	l
f0101a9f	obj/kern/kernel.asm	/^f0101a9f:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101aa3	obj/kern/kernel.asm	/^f0101aa3:	c7 44 24 08 c4 7f 10 	movl   $0xf0107fc4,0x8(%esp)$/;"	l
f0101aaa	obj/kern/kernel.asm	/^f0101aaa:	f0 $/;"	l
f0101aab	obj/kern/kernel.asm	/^f0101aab:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0101ab2	obj/kern/kernel.asm	/^f0101ab2:	00 $/;"	l
f0101ab3	obj/kern/kernel.asm	/^f0101ab3:	c7 04 24 1d 8f 10 f0 	movl   $0xf0108f1d,(%esp)$/;"	l
f0101aba	obj/kern/kernel.asm	/^f0101aba:	e8 81 e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101abf	obj/kern/kernel.asm	/^f0101abf:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0101ac6	obj/kern/kernel.asm	/^f0101ac6:	00 $/;"	l
f0101ac7	obj/kern/kernel.asm	/^f0101ac7:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
f0101ace	obj/kern/kernel.asm	/^f0101ace:	00 $/;"	l
f0101acf	obj/kern/kernel.asm	/^f0101acf:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0101ad4	obj/kern/kernel.asm	/^f0101ad4:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101ad7	obj/kern/kernel.asm	/^f0101ad7:	e8 2b 4a 00 00       	call   f0106507 <memset>$/;"	l
f0101adc	obj/kern/kernel.asm	/^f0101adc:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101adf	obj/kern/kernel.asm	/^f0101adf:	e8 e7 f6 ff ff       	call   f01011cb <page_free>$/;"	l
f0101ae4	obj/kern/kernel.asm	/^f0101ae4:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f0101aeb	obj/kern/kernel.asm	/^f0101aeb:	e8 4b f6 ff ff       	call   f010113b <page_alloc>$/;"	l
f0101af0	obj/kern/kernel.asm	/^f0101af0:	85 c0                	test   %eax,%eax$/;"	l
f0101af2	obj/kern/kernel.asm	/^f0101af2:	75 24                	jne    f0101b18 <mem_init+0x595>$/;"	l
f0101af4	obj/kern/kernel.asm	/^f0101af4:	c7 44 24 0c e3 90 10 	movl   $0xf01090e3,0xc(%esp)$/;"	l
f0101afb	obj/kern/kernel.asm	/^f0101afb:	f0 $/;"	l
f0101afc	obj/kern/kernel.asm	/^f0101afc:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f0101b03	obj/kern/kernel.asm	/^f0101b03:	f0 $/;"	l
f0101b04	obj/kern/kernel.asm	/^f0101b04:	c7 44 24 04 1a 03 00 	movl   $0x31a,0x4(%esp)$/;"	l
f0101b0b	obj/kern/kernel.asm	/^f0101b0b:	00 $/;"	l
f0101b0c	obj/kern/kernel.asm	/^f0101b0c:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0101b13	obj/kern/kernel.asm	/^f0101b13:	e8 28 e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101b18	obj/kern/kernel.asm	/^f0101b18:	39 c6                	cmp    %eax,%esi$/;"	l
f0101b1a	obj/kern/kernel.asm	/^f0101b1a:	74 24                	je     f0101b40 <mem_init+0x5bd>$/;"	l
f0101b1c	obj/kern/kernel.asm	/^f0101b1c:	c7 44 24 0c 01 91 10 	movl   $0xf0109101,0xc(%esp)$/;"	l
f0101b23	obj/kern/kernel.asm	/^f0101b23:	f0 $/;"	l
f0101b24	obj/kern/kernel.asm	/^f0101b24:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f0101b2b	obj/kern/kernel.asm	/^f0101b2b:	f0 $/;"	l
f0101b2c	obj/kern/kernel.asm	/^f0101b2c:	c7 44 24 04 1b 03 00 	movl   $0x31b,0x4(%esp)$/;"	l
f0101b33	obj/kern/kernel.asm	/^f0101b33:	00 $/;"	l
f0101b34	obj/kern/kernel.asm	/^f0101b34:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0101b3b	obj/kern/kernel.asm	/^f0101b3b:	e8 00 e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101b40	obj/kern/kernel.asm	/^f0101b40:	89 f0                	mov    %esi,%eax$/;"	l
f0101b42	obj/kern/kernel.asm	/^f0101b42:	2b 05 9c 9e 2b f0    	sub    0xf02b9e9c,%eax$/;"	l
f0101b48	obj/kern/kernel.asm	/^f0101b48:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101b4b	obj/kern/kernel.asm	/^f0101b4b:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101b4e	obj/kern/kernel.asm	/^f0101b4e:	89 c2                	mov    %eax,%edx$/;"	l
f0101b50	obj/kern/kernel.asm	/^f0101b50:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101b53	obj/kern/kernel.asm	/^f0101b53:	3b 15 94 9e 2b f0    	cmp    0xf02b9e94,%edx$/;"	l
f0101b59	obj/kern/kernel.asm	/^f0101b59:	72 20                	jb     f0101b7b <mem_init+0x5f8>$/;"	l
f0101b5b	obj/kern/kernel.asm	/^f0101b5b:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101b5f	obj/kern/kernel.asm	/^f0101b5f:	c7 44 24 08 c4 7f 10 	movl   $0xf0107fc4,0x8(%esp)$/;"	l
f0101b66	obj/kern/kernel.asm	/^f0101b66:	f0 $/;"	l
f0101b67	obj/kern/kernel.asm	/^f0101b67:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0101b6e	obj/kern/kernel.asm	/^f0101b6e:	00 $/;"	l
f0101b6f	obj/kern/kernel.asm	/^f0101b6f:	c7 04 24 1d 8f 10 f0 	movl   $0xf0108f1d,(%esp)$/;"	l
f0101b76	obj/kern/kernel.asm	/^f0101b76:	e8 c5 e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101b7b	obj/kern/kernel.asm	/^f0101b7b:	8d 90 00 10 00 f0    	lea    -0xffff000(%eax),%edx$/;"	l
f0101b81	obj/kern/kernel.asm	/^f0101b81:	8d 80 00 00 00 f0    	lea    -0x10000000(%eax),%eax$/;"	l
f0101b87	obj/kern/kernel.asm	/^f0101b87:	80 38 00             	cmpb   $0x0,(%eax)$/;"	l
f0101b8a	obj/kern/kernel.asm	/^f0101b8a:	74 24                	je     f0101bb0 <mem_init+0x62d>$/;"	l
f0101b8c	obj/kern/kernel.asm	/^f0101b8c:	c7 44 24 0c 11 91 10 	movl   $0xf0109111,0xc(%esp)$/;"	l
f0101b93	obj/kern/kernel.asm	/^f0101b93:	f0 $/;"	l
f0101b94	obj/kern/kernel.asm	/^f0101b94:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f0101b9b	obj/kern/kernel.asm	/^f0101b9b:	f0 $/;"	l
f0101b9c	obj/kern/kernel.asm	/^f0101b9c:	c7 44 24 04 1e 03 00 	movl   $0x31e,0x4(%esp)$/;"	l
f0101ba3	obj/kern/kernel.asm	/^f0101ba3:	00 $/;"	l
f0101ba4	obj/kern/kernel.asm	/^f0101ba4:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0101bab	obj/kern/kernel.asm	/^f0101bab:	e8 90 e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101bb0	obj/kern/kernel.asm	/^f0101bb0:	83 c0 01             	add    $0x1,%eax$/;"	l
f0101bb3	obj/kern/kernel.asm	/^f0101bb3:	39 d0                	cmp    %edx,%eax$/;"	l
f0101bb5	obj/kern/kernel.asm	/^f0101bb5:	75 d0                	jne    f0101b87 <mem_init+0x604>$/;"	l
f0101bb7	obj/kern/kernel.asm	/^f0101bb7:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0101bba	obj/kern/kernel.asm	/^f0101bba:	a3 40 92 2b f0       	mov    %eax,0xf02b9240$/;"	l
f0101bbf	obj/kern/kernel.asm	/^f0101bbf:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101bc2	obj/kern/kernel.asm	/^f0101bc2:	e8 04 f6 ff ff       	call   f01011cb <page_free>$/;"	l
f0101bc7	obj/kern/kernel.asm	/^f0101bc7:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0101bca	obj/kern/kernel.asm	/^f0101bca:	e8 fc f5 ff ff       	call   f01011cb <page_free>$/;"	l
f0101bcf	obj/kern/kernel.asm	/^f0101bcf:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101bd2	obj/kern/kernel.asm	/^f0101bd2:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101bd5	obj/kern/kernel.asm	/^f0101bd5:	e8 f1 f5 ff ff       	call   f01011cb <page_free>$/;"	l
f0101bda	obj/kern/kernel.asm	/^f0101bda:	a1 40 92 2b f0       	mov    0xf02b9240,%eax$/;"	l
f0101bdf	obj/kern/kernel.asm	/^f0101bdf:	eb 05                	jmp    f0101be6 <mem_init+0x663>$/;"	l
f0101be1	obj/kern/kernel.asm	/^f0101be1:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0101be4	obj/kern/kernel.asm	/^f0101be4:	8b 00                	mov    (%eax),%eax$/;"	l
f0101be6	obj/kern/kernel.asm	/^f0101be6:	85 c0                	test   %eax,%eax$/;"	l
f0101be8	obj/kern/kernel.asm	/^f0101be8:	75 f7                	jne    f0101be1 <mem_init+0x65e>$/;"	l
f0101bea	obj/kern/kernel.asm	/^f0101bea:	85 db                	test   %ebx,%ebx$/;"	l
f0101bec	obj/kern/kernel.asm	/^f0101bec:	74 24                	je     f0101c12 <mem_init+0x68f>$/;"	l
f0101bee	obj/kern/kernel.asm	/^f0101bee:	c7 44 24 0c 1b 91 10 	movl   $0xf010911b,0xc(%esp)$/;"	l
f0101bf5	obj/kern/kernel.asm	/^f0101bf5:	f0 $/;"	l
f0101bf6	obj/kern/kernel.asm	/^f0101bf6:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f0101bfd	obj/kern/kernel.asm	/^f0101bfd:	f0 $/;"	l
f0101bfe	obj/kern/kernel.asm	/^f0101bfe:	c7 44 24 04 2b 03 00 	movl   $0x32b,0x4(%esp)$/;"	l
f0101c05	obj/kern/kernel.asm	/^f0101c05:	00 $/;"	l
f0101c06	obj/kern/kernel.asm	/^f0101c06:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0101c0d	obj/kern/kernel.asm	/^f0101c0d:	e8 2e e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101c12	obj/kern/kernel.asm	/^f0101c12:	c7 04 24 60 87 10 f0 	movl   $0xf0108760,(%esp)$/;"	l
f0101c19	obj/kern/kernel.asm	/^f0101c19:	e8 ce 23 00 00       	call   f0103fec <cprintf>$/;"	l
f0101c1e	obj/kern/kernel.asm	/^f0101c1e:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101c25	obj/kern/kernel.asm	/^f0101c25:	e8 11 f5 ff ff       	call   f010113b <page_alloc>$/;"	l
f0101c2a	obj/kern/kernel.asm	/^f0101c2a:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0101c2d	obj/kern/kernel.asm	/^f0101c2d:	85 c0                	test   %eax,%eax$/;"	l
f0101c2f	obj/kern/kernel.asm	/^f0101c2f:	75 24                	jne    f0101c55 <mem_init+0x6d2>$/;"	l
f0101c31	obj/kern/kernel.asm	/^f0101c31:	c7 44 24 0c 29 90 10 	movl   $0xf0109029,0xc(%esp)$/;"	l
f0101c38	obj/kern/kernel.asm	/^f0101c38:	f0 $/;"	l
f0101c39	obj/kern/kernel.asm	/^f0101c39:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f0101c40	obj/kern/kernel.asm	/^f0101c40:	f0 $/;"	l
f0101c41	obj/kern/kernel.asm	/^f0101c41:	c7 44 24 04 91 03 00 	movl   $0x391,0x4(%esp)$/;"	l
f0101c48	obj/kern/kernel.asm	/^f0101c48:	00 $/;"	l
f0101c49	obj/kern/kernel.asm	/^f0101c49:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0101c50	obj/kern/kernel.asm	/^f0101c50:	e8 eb e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101c55	obj/kern/kernel.asm	/^f0101c55:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101c5c	obj/kern/kernel.asm	/^f0101c5c:	e8 da f4 ff ff       	call   f010113b <page_alloc>$/;"	l
f0101c61	obj/kern/kernel.asm	/^f0101c61:	89 c3                	mov    %eax,%ebx$/;"	l
f0101c63	obj/kern/kernel.asm	/^f0101c63:	85 c0                	test   %eax,%eax$/;"	l
f0101c65	obj/kern/kernel.asm	/^f0101c65:	75 24                	jne    f0101c8b <mem_init+0x708>$/;"	l
f0101c67	obj/kern/kernel.asm	/^f0101c67:	c7 44 24 0c 3f 90 10 	movl   $0xf010903f,0xc(%esp)$/;"	l
f0101c6e	obj/kern/kernel.asm	/^f0101c6e:	f0 $/;"	l
f0101c6f	obj/kern/kernel.asm	/^f0101c6f:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f0101c76	obj/kern/kernel.asm	/^f0101c76:	f0 $/;"	l
f0101c77	obj/kern/kernel.asm	/^f0101c77:	c7 44 24 04 92 03 00 	movl   $0x392,0x4(%esp)$/;"	l
f0101c7e	obj/kern/kernel.asm	/^f0101c7e:	00 $/;"	l
f0101c7f	obj/kern/kernel.asm	/^f0101c7f:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0101c86	obj/kern/kernel.asm	/^f0101c86:	e8 b5 e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101c8b	obj/kern/kernel.asm	/^f0101c8b:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101c92	obj/kern/kernel.asm	/^f0101c92:	e8 a4 f4 ff ff       	call   f010113b <page_alloc>$/;"	l
f0101c97	obj/kern/kernel.asm	/^f0101c97:	89 c6                	mov    %eax,%esi$/;"	l
f0101c99	obj/kern/kernel.asm	/^f0101c99:	85 c0                	test   %eax,%eax$/;"	l
f0101c9b	obj/kern/kernel.asm	/^f0101c9b:	75 24                	jne    f0101cc1 <mem_init+0x73e>$/;"	l
f0101c9d	obj/kern/kernel.asm	/^f0101c9d:	c7 44 24 0c 55 90 10 	movl   $0xf0109055,0xc(%esp)$/;"	l
f0101ca4	obj/kern/kernel.asm	/^f0101ca4:	f0 $/;"	l
f0101ca5	obj/kern/kernel.asm	/^f0101ca5:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f0101cac	obj/kern/kernel.asm	/^f0101cac:	f0 $/;"	l
f0101cad	obj/kern/kernel.asm	/^f0101cad:	c7 44 24 04 93 03 00 	movl   $0x393,0x4(%esp)$/;"	l
f0101cb4	obj/kern/kernel.asm	/^f0101cb4:	00 $/;"	l
f0101cb5	obj/kern/kernel.asm	/^f0101cb5:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0101cbc	obj/kern/kernel.asm	/^f0101cbc:	e8 7f e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101cc1	obj/kern/kernel.asm	/^f0101cc1:	39 5d d4             	cmp    %ebx,-0x2c(%ebp)$/;"	l
f0101cc4	obj/kern/kernel.asm	/^f0101cc4:	75 24                	jne    f0101cea <mem_init+0x767>$/;"	l
f0101cc6	obj/kern/kernel.asm	/^f0101cc6:	c7 44 24 0c 6b 90 10 	movl   $0xf010906b,0xc(%esp)$/;"	l
f0101ccd	obj/kern/kernel.asm	/^f0101ccd:	f0 $/;"	l
f0101cce	obj/kern/kernel.asm	/^f0101cce:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f0101cd5	obj/kern/kernel.asm	/^f0101cd5:	f0 $/;"	l
f0101cd6	obj/kern/kernel.asm	/^f0101cd6:	c7 44 24 04 96 03 00 	movl   $0x396,0x4(%esp)$/;"	l
f0101cdd	obj/kern/kernel.asm	/^f0101cdd:	00 $/;"	l
f0101cde	obj/kern/kernel.asm	/^f0101cde:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0101ce5	obj/kern/kernel.asm	/^f0101ce5:	e8 56 e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101cea	obj/kern/kernel.asm	/^f0101cea:	39 c3                	cmp    %eax,%ebx$/;"	l
f0101cec	obj/kern/kernel.asm	/^f0101cec:	74 05                	je     f0101cf3 <mem_init+0x770>$/;"	l
f0101cee	obj/kern/kernel.asm	/^f0101cee:	39 45 d4             	cmp    %eax,-0x2c(%ebp)$/;"	l
f0101cf1	obj/kern/kernel.asm	/^f0101cf1:	75 24                	jne    f0101d17 <mem_init+0x794>$/;"	l
f0101cf3	obj/kern/kernel.asm	/^f0101cf3:	c7 44 24 0c 40 87 10 	movl   $0xf0108740,0xc(%esp)$/;"	l
f0101cfa	obj/kern/kernel.asm	/^f0101cfa:	f0 $/;"	l
f0101cfb	obj/kern/kernel.asm	/^f0101cfb:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f0101d02	obj/kern/kernel.asm	/^f0101d02:	f0 $/;"	l
f0101d03	obj/kern/kernel.asm	/^f0101d03:	c7 44 24 04 97 03 00 	movl   $0x397,0x4(%esp)$/;"	l
f0101d0a	obj/kern/kernel.asm	/^f0101d0a:	00 $/;"	l
f0101d0b	obj/kern/kernel.asm	/^f0101d0b:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0101d12	obj/kern/kernel.asm	/^f0101d12:	e8 29 e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101d17	obj/kern/kernel.asm	/^f0101d17:	a1 40 92 2b f0       	mov    0xf02b9240,%eax$/;"	l
f0101d1c	obj/kern/kernel.asm	/^f0101d1c:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0101d1f	obj/kern/kernel.asm	/^f0101d1f:	c7 05 40 92 2b f0 00 	movl   $0x0,0xf02b9240$/;"	l
f0101d26	obj/kern/kernel.asm	/^f0101d26:	00 00 00 $/;"	l
f0101d29	obj/kern/kernel.asm	/^f0101d29:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101d30	obj/kern/kernel.asm	/^f0101d30:	e8 06 f4 ff ff       	call   f010113b <page_alloc>$/;"	l
f0101d35	obj/kern/kernel.asm	/^f0101d35:	85 c0                	test   %eax,%eax$/;"	l
f0101d37	obj/kern/kernel.asm	/^f0101d37:	74 24                	je     f0101d5d <mem_init+0x7da>$/;"	l
f0101d39	obj/kern/kernel.asm	/^f0101d39:	c7 44 24 0c d4 90 10 	movl   $0xf01090d4,0xc(%esp)$/;"	l
f0101d40	obj/kern/kernel.asm	/^f0101d40:	f0 $/;"	l
f0101d41	obj/kern/kernel.asm	/^f0101d41:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f0101d48	obj/kern/kernel.asm	/^f0101d48:	f0 $/;"	l
f0101d49	obj/kern/kernel.asm	/^f0101d49:	c7 44 24 04 9e 03 00 	movl   $0x39e,0x4(%esp)$/;"	l
f0101d50	obj/kern/kernel.asm	/^f0101d50:	00 $/;"	l
f0101d51	obj/kern/kernel.asm	/^f0101d51:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0101d58	obj/kern/kernel.asm	/^f0101d58:	e8 e3 e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101d5d	obj/kern/kernel.asm	/^f0101d5d:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0101d60	obj/kern/kernel.asm	/^f0101d60:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0101d64	obj/kern/kernel.asm	/^f0101d64:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0101d6b	obj/kern/kernel.asm	/^f0101d6b:	00 $/;"	l
f0101d6c	obj/kern/kernel.asm	/^f0101d6c:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f0101d71	obj/kern/kernel.asm	/^f0101d71:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101d74	obj/kern/kernel.asm	/^f0101d74:	e8 0b f6 ff ff       	call   f0101384 <page_lookup>$/;"	l
f0101d79	obj/kern/kernel.asm	/^f0101d79:	85 c0                	test   %eax,%eax$/;"	l
f0101d7b	obj/kern/kernel.asm	/^f0101d7b:	74 24                	je     f0101da1 <mem_init+0x81e>$/;"	l
f0101d7d	obj/kern/kernel.asm	/^f0101d7d:	c7 44 24 0c 80 87 10 	movl   $0xf0108780,0xc(%esp)$/;"	l
f0101d84	obj/kern/kernel.asm	/^f0101d84:	f0 $/;"	l
f0101d85	obj/kern/kernel.asm	/^f0101d85:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f0101d8c	obj/kern/kernel.asm	/^f0101d8c:	f0 $/;"	l
f0101d8d	obj/kern/kernel.asm	/^f0101d8d:	c7 44 24 04 a1 03 00 	movl   $0x3a1,0x4(%esp)$/;"	l
f0101d94	obj/kern/kernel.asm	/^f0101d94:	00 $/;"	l
f0101d95	obj/kern/kernel.asm	/^f0101d95:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0101d9c	obj/kern/kernel.asm	/^f0101d9c:	e8 9f e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101da1	obj/kern/kernel.asm	/^f0101da1:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0101da8	obj/kern/kernel.asm	/^f0101da8:	00 $/;"	l
f0101da9	obj/kern/kernel.asm	/^f0101da9:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0101db0	obj/kern/kernel.asm	/^f0101db0:	00 $/;"	l
f0101db1	obj/kern/kernel.asm	/^f0101db1:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0101db5	obj/kern/kernel.asm	/^f0101db5:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f0101dba	obj/kern/kernel.asm	/^f0101dba:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101dbd	obj/kern/kernel.asm	/^f0101dbd:	e8 b9 f6 ff ff       	call   f010147b <page_insert>$/;"	l
f0101dc2	obj/kern/kernel.asm	/^f0101dc2:	85 c0                	test   %eax,%eax$/;"	l
f0101dc4	obj/kern/kernel.asm	/^f0101dc4:	78 24                	js     f0101dea <mem_init+0x867>$/;"	l
f0101dc6	obj/kern/kernel.asm	/^f0101dc6:	c7 44 24 0c b8 87 10 	movl   $0xf01087b8,0xc(%esp)$/;"	l
f0101dcd	obj/kern/kernel.asm	/^f0101dcd:	f0 $/;"	l
f0101dce	obj/kern/kernel.asm	/^f0101dce:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f0101dd5	obj/kern/kernel.asm	/^f0101dd5:	f0 $/;"	l
f0101dd6	obj/kern/kernel.asm	/^f0101dd6:	c7 44 24 04 a4 03 00 	movl   $0x3a4,0x4(%esp)$/;"	l
f0101ddd	obj/kern/kernel.asm	/^f0101ddd:	00 $/;"	l
f0101dde	obj/kern/kernel.asm	/^f0101dde:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0101de5	obj/kern/kernel.asm	/^f0101de5:	e8 56 e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101dea	obj/kern/kernel.asm	/^f0101dea:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101ded	obj/kern/kernel.asm	/^f0101ded:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101df0	obj/kern/kernel.asm	/^f0101df0:	e8 d6 f3 ff ff       	call   f01011cb <page_free>$/;"	l
f0101df5	obj/kern/kernel.asm	/^f0101df5:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0101dfc	obj/kern/kernel.asm	/^f0101dfc:	00 $/;"	l
f0101dfd	obj/kern/kernel.asm	/^f0101dfd:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0101e04	obj/kern/kernel.asm	/^f0101e04:	00 $/;"	l
f0101e05	obj/kern/kernel.asm	/^f0101e05:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0101e09	obj/kern/kernel.asm	/^f0101e09:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f0101e0e	obj/kern/kernel.asm	/^f0101e0e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101e11	obj/kern/kernel.asm	/^f0101e11:	e8 65 f6 ff ff       	call   f010147b <page_insert>$/;"	l
f0101e16	obj/kern/kernel.asm	/^f0101e16:	85 c0                	test   %eax,%eax$/;"	l
f0101e18	obj/kern/kernel.asm	/^f0101e18:	74 24                	je     f0101e3e <mem_init+0x8bb>$/;"	l
f0101e1a	obj/kern/kernel.asm	/^f0101e1a:	c7 44 24 0c e8 87 10 	movl   $0xf01087e8,0xc(%esp)$/;"	l
f0101e21	obj/kern/kernel.asm	/^f0101e21:	f0 $/;"	l
f0101e22	obj/kern/kernel.asm	/^f0101e22:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f0101e29	obj/kern/kernel.asm	/^f0101e29:	f0 $/;"	l
f0101e2a	obj/kern/kernel.asm	/^f0101e2a:	c7 44 24 04 a8 03 00 	movl   $0x3a8,0x4(%esp)$/;"	l
f0101e31	obj/kern/kernel.asm	/^f0101e31:	00 $/;"	l
f0101e32	obj/kern/kernel.asm	/^f0101e32:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0101e39	obj/kern/kernel.asm	/^f0101e39:	e8 02 e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101e3e	obj/kern/kernel.asm	/^f0101e3e:	8b 3d 98 9e 2b f0    	mov    0xf02b9e98,%edi$/;"	l
f0101e44	obj/kern/kernel.asm	/^f0101e44:	a1 9c 9e 2b f0       	mov    0xf02b9e9c,%eax$/;"	l
f0101e49	obj/kern/kernel.asm	/^f0101e49:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0101e4c	obj/kern/kernel.asm	/^f0101e4c:	8b 17                	mov    (%edi),%edx$/;"	l
f0101e4e	obj/kern/kernel.asm	/^f0101e4e:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0101e54	obj/kern/kernel.asm	/^f0101e54:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f0101e57	obj/kern/kernel.asm	/^f0101e57:	29 c1                	sub    %eax,%ecx$/;"	l
f0101e59	obj/kern/kernel.asm	/^f0101e59:	89 c8                	mov    %ecx,%eax$/;"	l
f0101e5b	obj/kern/kernel.asm	/^f0101e5b:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101e5e	obj/kern/kernel.asm	/^f0101e5e:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101e61	obj/kern/kernel.asm	/^f0101e61:	39 c2                	cmp    %eax,%edx$/;"	l
f0101e63	obj/kern/kernel.asm	/^f0101e63:	74 24                	je     f0101e89 <mem_init+0x906>$/;"	l
f0101e65	obj/kern/kernel.asm	/^f0101e65:	c7 44 24 0c 18 88 10 	movl   $0xf0108818,0xc(%esp)$/;"	l
f0101e6c	obj/kern/kernel.asm	/^f0101e6c:	f0 $/;"	l
f0101e6d	obj/kern/kernel.asm	/^f0101e6d:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f0101e74	obj/kern/kernel.asm	/^f0101e74:	f0 $/;"	l
f0101e75	obj/kern/kernel.asm	/^f0101e75:	c7 44 24 04 a9 03 00 	movl   $0x3a9,0x4(%esp)$/;"	l
f0101e7c	obj/kern/kernel.asm	/^f0101e7c:	00 $/;"	l
f0101e7d	obj/kern/kernel.asm	/^f0101e7d:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0101e84	obj/kern/kernel.asm	/^f0101e84:	e8 b7 e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101e89	obj/kern/kernel.asm	/^f0101e89:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0101e8e	obj/kern/kernel.asm	/^f0101e8e:	89 f8                	mov    %edi,%eax$/;"	l
f0101e90	obj/kern/kernel.asm	/^f0101e90:	e8 60 ed ff ff       	call   f0100bf5 <check_va2pa>$/;"	l
f0101e95	obj/kern/kernel.asm	/^f0101e95:	89 da                	mov    %ebx,%edx$/;"	l
f0101e97	obj/kern/kernel.asm	/^f0101e97:	2b 55 cc             	sub    -0x34(%ebp),%edx$/;"	l
f0101e9a	obj/kern/kernel.asm	/^f0101e9a:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101e9d	obj/kern/kernel.asm	/^f0101e9d:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101ea0	obj/kern/kernel.asm	/^f0101ea0:	39 d0                	cmp    %edx,%eax$/;"	l
f0101ea2	obj/kern/kernel.asm	/^f0101ea2:	74 24                	je     f0101ec8 <mem_init+0x945>$/;"	l
f0101ea4	obj/kern/kernel.asm	/^f0101ea4:	c7 44 24 0c 40 88 10 	movl   $0xf0108840,0xc(%esp)$/;"	l
f0101eab	obj/kern/kernel.asm	/^f0101eab:	f0 $/;"	l
f0101eac	obj/kern/kernel.asm	/^f0101eac:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f0101eb3	obj/kern/kernel.asm	/^f0101eb3:	f0 $/;"	l
f0101eb4	obj/kern/kernel.asm	/^f0101eb4:	c7 44 24 04 aa 03 00 	movl   $0x3aa,0x4(%esp)$/;"	l
f0101ebb	obj/kern/kernel.asm	/^f0101ebb:	00 $/;"	l
f0101ebc	obj/kern/kernel.asm	/^f0101ebc:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0101ec3	obj/kern/kernel.asm	/^f0101ec3:	e8 78 e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101ec8	obj/kern/kernel.asm	/^f0101ec8:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0101ecd	obj/kern/kernel.asm	/^f0101ecd:	74 24                	je     f0101ef3 <mem_init+0x970>$/;"	l
f0101ecf	obj/kern/kernel.asm	/^f0101ecf:	c7 44 24 0c 26 91 10 	movl   $0xf0109126,0xc(%esp)$/;"	l
f0101ed6	obj/kern/kernel.asm	/^f0101ed6:	f0 $/;"	l
f0101ed7	obj/kern/kernel.asm	/^f0101ed7:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f0101ede	obj/kern/kernel.asm	/^f0101ede:	f0 $/;"	l
f0101edf	obj/kern/kernel.asm	/^f0101edf:	c7 44 24 04 ab 03 00 	movl   $0x3ab,0x4(%esp)$/;"	l
f0101ee6	obj/kern/kernel.asm	/^f0101ee6:	00 $/;"	l
f0101ee7	obj/kern/kernel.asm	/^f0101ee7:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0101eee	obj/kern/kernel.asm	/^f0101eee:	e8 4d e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101ef3	obj/kern/kernel.asm	/^f0101ef3:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101ef6	obj/kern/kernel.asm	/^f0101ef6:	66 83 78 04 01       	cmpw   $0x1,0x4(%eax)$/;"	l
f0101efb	obj/kern/kernel.asm	/^f0101efb:	74 24                	je     f0101f21 <mem_init+0x99e>$/;"	l
f0101efd	obj/kern/kernel.asm	/^f0101efd:	c7 44 24 0c 37 91 10 	movl   $0xf0109137,0xc(%esp)$/;"	l
f0101f04	obj/kern/kernel.asm	/^f0101f04:	f0 $/;"	l
f0101f05	obj/kern/kernel.asm	/^f0101f05:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f0101f0c	obj/kern/kernel.asm	/^f0101f0c:	f0 $/;"	l
f0101f0d	obj/kern/kernel.asm	/^f0101f0d:	c7 44 24 04 ac 03 00 	movl   $0x3ac,0x4(%esp)$/;"	l
f0101f14	obj/kern/kernel.asm	/^f0101f14:	00 $/;"	l
f0101f15	obj/kern/kernel.asm	/^f0101f15:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0101f1c	obj/kern/kernel.asm	/^f0101f1c:	e8 1f e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101f21	obj/kern/kernel.asm	/^f0101f21:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0101f28	obj/kern/kernel.asm	/^f0101f28:	00 $/;"	l
f0101f29	obj/kern/kernel.asm	/^f0101f29:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0101f30	obj/kern/kernel.asm	/^f0101f30:	00 $/;"	l
f0101f31	obj/kern/kernel.asm	/^f0101f31:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0101f35	obj/kern/kernel.asm	/^f0101f35:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0101f38	obj/kern/kernel.asm	/^f0101f38:	e8 3e f5 ff ff       	call   f010147b <page_insert>$/;"	l
f0101f3d	obj/kern/kernel.asm	/^f0101f3d:	85 c0                	test   %eax,%eax$/;"	l
f0101f3f	obj/kern/kernel.asm	/^f0101f3f:	74 24                	je     f0101f65 <mem_init+0x9e2>$/;"	l
f0101f41	obj/kern/kernel.asm	/^f0101f41:	c7 44 24 0c 70 88 10 	movl   $0xf0108870,0xc(%esp)$/;"	l
f0101f48	obj/kern/kernel.asm	/^f0101f48:	f0 $/;"	l
f0101f49	obj/kern/kernel.asm	/^f0101f49:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f0101f50	obj/kern/kernel.asm	/^f0101f50:	f0 $/;"	l
f0101f51	obj/kern/kernel.asm	/^f0101f51:	c7 44 24 04 af 03 00 	movl   $0x3af,0x4(%esp)$/;"	l
f0101f58	obj/kern/kernel.asm	/^f0101f58:	00 $/;"	l
f0101f59	obj/kern/kernel.asm	/^f0101f59:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0101f60	obj/kern/kernel.asm	/^f0101f60:	e8 db e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101f65	obj/kern/kernel.asm	/^f0101f65:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101f6a	obj/kern/kernel.asm	/^f0101f6a:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f0101f6f	obj/kern/kernel.asm	/^f0101f6f:	e8 81 ec ff ff       	call   f0100bf5 <check_va2pa>$/;"	l
f0101f74	obj/kern/kernel.asm	/^f0101f74:	89 f2                	mov    %esi,%edx$/;"	l
f0101f76	obj/kern/kernel.asm	/^f0101f76:	2b 15 9c 9e 2b f0    	sub    0xf02b9e9c,%edx$/;"	l
f0101f7c	obj/kern/kernel.asm	/^f0101f7c:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101f7f	obj/kern/kernel.asm	/^f0101f7f:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101f82	obj/kern/kernel.asm	/^f0101f82:	39 d0                	cmp    %edx,%eax$/;"	l
f0101f84	obj/kern/kernel.asm	/^f0101f84:	74 24                	je     f0101faa <mem_init+0xa27>$/;"	l
f0101f86	obj/kern/kernel.asm	/^f0101f86:	c7 44 24 0c ac 88 10 	movl   $0xf01088ac,0xc(%esp)$/;"	l
f0101f8d	obj/kern/kernel.asm	/^f0101f8d:	f0 $/;"	l
f0101f8e	obj/kern/kernel.asm	/^f0101f8e:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f0101f95	obj/kern/kernel.asm	/^f0101f95:	f0 $/;"	l
f0101f96	obj/kern/kernel.asm	/^f0101f96:	c7 44 24 04 b0 03 00 	movl   $0x3b0,0x4(%esp)$/;"	l
f0101f9d	obj/kern/kernel.asm	/^f0101f9d:	00 $/;"	l
f0101f9e	obj/kern/kernel.asm	/^f0101f9e:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0101fa5	obj/kern/kernel.asm	/^f0101fa5:	e8 96 e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101faa	obj/kern/kernel.asm	/^f0101faa:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0101faf	obj/kern/kernel.asm	/^f0101faf:	74 24                	je     f0101fd5 <mem_init+0xa52>$/;"	l
f0101fb1	obj/kern/kernel.asm	/^f0101fb1:	c7 44 24 0c 48 91 10 	movl   $0xf0109148,0xc(%esp)$/;"	l
f0101fb8	obj/kern/kernel.asm	/^f0101fb8:	f0 $/;"	l
f0101fb9	obj/kern/kernel.asm	/^f0101fb9:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f0101fc0	obj/kern/kernel.asm	/^f0101fc0:	f0 $/;"	l
f0101fc1	obj/kern/kernel.asm	/^f0101fc1:	c7 44 24 04 b1 03 00 	movl   $0x3b1,0x4(%esp)$/;"	l
f0101fc8	obj/kern/kernel.asm	/^f0101fc8:	00 $/;"	l
f0101fc9	obj/kern/kernel.asm	/^f0101fc9:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0101fd0	obj/kern/kernel.asm	/^f0101fd0:	e8 6b e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101fd5	obj/kern/kernel.asm	/^f0101fd5:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101fdc	obj/kern/kernel.asm	/^f0101fdc:	e8 5a f1 ff ff       	call   f010113b <page_alloc>$/;"	l
f0101fe1	obj/kern/kernel.asm	/^f0101fe1:	85 c0                	test   %eax,%eax$/;"	l
f0101fe3	obj/kern/kernel.asm	/^f0101fe3:	74 24                	je     f0102009 <mem_init+0xa86>$/;"	l
f0101fe5	obj/kern/kernel.asm	/^f0101fe5:	c7 44 24 0c d4 90 10 	movl   $0xf01090d4,0xc(%esp)$/;"	l
f0101fec	obj/kern/kernel.asm	/^f0101fec:	f0 $/;"	l
f0101fed	obj/kern/kernel.asm	/^f0101fed:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f0101ff4	obj/kern/kernel.asm	/^f0101ff4:	f0 $/;"	l
f0101ff5	obj/kern/kernel.asm	/^f0101ff5:	c7 44 24 04 b4 03 00 	movl   $0x3b4,0x4(%esp)$/;"	l
f0101ffc	obj/kern/kernel.asm	/^f0101ffc:	00 $/;"	l
f0101ffd	obj/kern/kernel.asm	/^f0101ffd:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0102004	obj/kern/kernel.asm	/^f0102004:	e8 37 e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102009	obj/kern/kernel.asm	/^f0102009:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0102010	obj/kern/kernel.asm	/^f0102010:	00 $/;"	l
f0102011	obj/kern/kernel.asm	/^f0102011:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0102018	obj/kern/kernel.asm	/^f0102018:	00 $/;"	l
f0102019	obj/kern/kernel.asm	/^f0102019:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f010201d	obj/kern/kernel.asm	/^f010201d:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f0102022	obj/kern/kernel.asm	/^f0102022:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102025	obj/kern/kernel.asm	/^f0102025:	e8 51 f4 ff ff       	call   f010147b <page_insert>$/;"	l
f010202a	obj/kern/kernel.asm	/^f010202a:	85 c0                	test   %eax,%eax$/;"	l
f010202c	obj/kern/kernel.asm	/^f010202c:	74 24                	je     f0102052 <mem_init+0xacf>$/;"	l
f010202e	obj/kern/kernel.asm	/^f010202e:	c7 44 24 0c 70 88 10 	movl   $0xf0108870,0xc(%esp)$/;"	l
f0102035	obj/kern/kernel.asm	/^f0102035:	f0 $/;"	l
f0102036	obj/kern/kernel.asm	/^f0102036:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f010203d	obj/kern/kernel.asm	/^f010203d:	f0 $/;"	l
f010203e	obj/kern/kernel.asm	/^f010203e:	c7 44 24 04 b7 03 00 	movl   $0x3b7,0x4(%esp)$/;"	l
f0102045	obj/kern/kernel.asm	/^f0102045:	00 $/;"	l
f0102046	obj/kern/kernel.asm	/^f0102046:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f010204d	obj/kern/kernel.asm	/^f010204d:	e8 ee df ff ff       	call   f0100040 <_panic>$/;"	l
f0102052	obj/kern/kernel.asm	/^f0102052:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102057	obj/kern/kernel.asm	/^f0102057:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f010205c	obj/kern/kernel.asm	/^f010205c:	e8 94 eb ff ff       	call   f0100bf5 <check_va2pa>$/;"	l
f0102061	obj/kern/kernel.asm	/^f0102061:	89 f2                	mov    %esi,%edx$/;"	l
f0102063	obj/kern/kernel.asm	/^f0102063:	2b 15 9c 9e 2b f0    	sub    0xf02b9e9c,%edx$/;"	l
f0102069	obj/kern/kernel.asm	/^f0102069:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f010206c	obj/kern/kernel.asm	/^f010206c:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f010206f	obj/kern/kernel.asm	/^f010206f:	39 d0                	cmp    %edx,%eax$/;"	l
f0102071	obj/kern/kernel.asm	/^f0102071:	74 24                	je     f0102097 <mem_init+0xb14>$/;"	l
f0102073	obj/kern/kernel.asm	/^f0102073:	c7 44 24 0c ac 88 10 	movl   $0xf01088ac,0xc(%esp)$/;"	l
f010207a	obj/kern/kernel.asm	/^f010207a:	f0 $/;"	l
f010207b	obj/kern/kernel.asm	/^f010207b:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f0102082	obj/kern/kernel.asm	/^f0102082:	f0 $/;"	l
f0102083	obj/kern/kernel.asm	/^f0102083:	c7 44 24 04 b8 03 00 	movl   $0x3b8,0x4(%esp)$/;"	l
f010208a	obj/kern/kernel.asm	/^f010208a:	00 $/;"	l
f010208b	obj/kern/kernel.asm	/^f010208b:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0102092	obj/kern/kernel.asm	/^f0102092:	e8 a9 df ff ff       	call   f0100040 <_panic>$/;"	l
f0102097	obj/kern/kernel.asm	/^f0102097:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f010209c	obj/kern/kernel.asm	/^f010209c:	74 24                	je     f01020c2 <mem_init+0xb3f>$/;"	l
f010209e	obj/kern/kernel.asm	/^f010209e:	c7 44 24 0c 48 91 10 	movl   $0xf0109148,0xc(%esp)$/;"	l
f01020a5	obj/kern/kernel.asm	/^f01020a5:	f0 $/;"	l
f01020a6	obj/kern/kernel.asm	/^f01020a6:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f01020ad	obj/kern/kernel.asm	/^f01020ad:	f0 $/;"	l
f01020ae	obj/kern/kernel.asm	/^f01020ae:	c7 44 24 04 b9 03 00 	movl   $0x3b9,0x4(%esp)$/;"	l
f01020b5	obj/kern/kernel.asm	/^f01020b5:	00 $/;"	l
f01020b6	obj/kern/kernel.asm	/^f01020b6:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f01020bd	obj/kern/kernel.asm	/^f01020bd:	e8 7e df ff ff       	call   f0100040 <_panic>$/;"	l
f01020c2	obj/kern/kernel.asm	/^f01020c2:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01020c9	obj/kern/kernel.asm	/^f01020c9:	e8 6d f0 ff ff       	call   f010113b <page_alloc>$/;"	l
f01020ce	obj/kern/kernel.asm	/^f01020ce:	85 c0                	test   %eax,%eax$/;"	l
f01020d0	obj/kern/kernel.asm	/^f01020d0:	74 24                	je     f01020f6 <mem_init+0xb73>$/;"	l
f01020d2	obj/kern/kernel.asm	/^f01020d2:	c7 44 24 0c d4 90 10 	movl   $0xf01090d4,0xc(%esp)$/;"	l
f01020d9	obj/kern/kernel.asm	/^f01020d9:	f0 $/;"	l
f01020da	obj/kern/kernel.asm	/^f01020da:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f01020e1	obj/kern/kernel.asm	/^f01020e1:	f0 $/;"	l
f01020e2	obj/kern/kernel.asm	/^f01020e2:	c7 44 24 04 bd 03 00 	movl   $0x3bd,0x4(%esp)$/;"	l
f01020e9	obj/kern/kernel.asm	/^f01020e9:	00 $/;"	l
f01020ea	obj/kern/kernel.asm	/^f01020ea:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f01020f1	obj/kern/kernel.asm	/^f01020f1:	e8 4a df ff ff       	call   f0100040 <_panic>$/;"	l
f01020f6	obj/kern/kernel.asm	/^f01020f6:	8b 15 98 9e 2b f0    	mov    0xf02b9e98,%edx$/;"	l
f01020fc	obj/kern/kernel.asm	/^f01020fc:	8b 02                	mov    (%edx),%eax$/;"	l
f01020fe	obj/kern/kernel.asm	/^f01020fe:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0102103	obj/kern/kernel.asm	/^f0102103:	89 c1                	mov    %eax,%ecx$/;"	l
f0102105	obj/kern/kernel.asm	/^f0102105:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0102108	obj/kern/kernel.asm	/^f0102108:	3b 0d 94 9e 2b f0    	cmp    0xf02b9e94,%ecx$/;"	l
f010210e	obj/kern/kernel.asm	/^f010210e:	72 20                	jb     f0102130 <mem_init+0xbad>$/;"	l
f0102110	obj/kern/kernel.asm	/^f0102110:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102114	obj/kern/kernel.asm	/^f0102114:	c7 44 24 08 c4 7f 10 	movl   $0xf0107fc4,0x8(%esp)$/;"	l
f010211b	obj/kern/kernel.asm	/^f010211b:	f0 $/;"	l
f010211c	obj/kern/kernel.asm	/^f010211c:	c7 44 24 04 c0 03 00 	movl   $0x3c0,0x4(%esp)$/;"	l
f0102123	obj/kern/kernel.asm	/^f0102123:	00 $/;"	l
f0102124	obj/kern/kernel.asm	/^f0102124:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f010212b	obj/kern/kernel.asm	/^f010212b:	e8 10 df ff ff       	call   f0100040 <_panic>$/;"	l
f0102130	obj/kern/kernel.asm	/^f0102130:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0102135	obj/kern/kernel.asm	/^f0102135:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0102138	obj/kern/kernel.asm	/^f0102138:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f010213f	obj/kern/kernel.asm	/^f010213f:	00 $/;"	l
f0102140	obj/kern/kernel.asm	/^f0102140:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0102147	obj/kern/kernel.asm	/^f0102147:	00 $/;"	l
f0102148	obj/kern/kernel.asm	/^f0102148:	89 14 24             	mov    %edx,(%esp)$/;"	l
f010214b	obj/kern/kernel.asm	/^f010214b:	e8 fa f0 ff ff       	call   f010124a <pgdir_walk>$/;"	l
f0102150	obj/kern/kernel.asm	/^f0102150:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f0102153	obj/kern/kernel.asm	/^f0102153:	8d 51 04             	lea    0x4(%ecx),%edx$/;"	l
f0102156	obj/kern/kernel.asm	/^f0102156:	39 d0                	cmp    %edx,%eax$/;"	l
f0102158	obj/kern/kernel.asm	/^f0102158:	74 24                	je     f010217e <mem_init+0xbfb>$/;"	l
f010215a	obj/kern/kernel.asm	/^f010215a:	c7 44 24 0c dc 88 10 	movl   $0xf01088dc,0xc(%esp)$/;"	l
f0102161	obj/kern/kernel.asm	/^f0102161:	f0 $/;"	l
f0102162	obj/kern/kernel.asm	/^f0102162:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f0102169	obj/kern/kernel.asm	/^f0102169:	f0 $/;"	l
f010216a	obj/kern/kernel.asm	/^f010216a:	c7 44 24 04 c1 03 00 	movl   $0x3c1,0x4(%esp)$/;"	l
f0102171	obj/kern/kernel.asm	/^f0102171:	00 $/;"	l
f0102172	obj/kern/kernel.asm	/^f0102172:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0102179	obj/kern/kernel.asm	/^f0102179:	e8 c2 de ff ff       	call   f0100040 <_panic>$/;"	l
f010217e	obj/kern/kernel.asm	/^f010217e:	c7 44 24 0c 06 00 00 	movl   $0x6,0xc(%esp)$/;"	l
f0102185	obj/kern/kernel.asm	/^f0102185:	00 $/;"	l
f0102186	obj/kern/kernel.asm	/^f0102186:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f010218d	obj/kern/kernel.asm	/^f010218d:	00 $/;"	l
f010218e	obj/kern/kernel.asm	/^f010218e:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0102192	obj/kern/kernel.asm	/^f0102192:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f0102197	obj/kern/kernel.asm	/^f0102197:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010219a	obj/kern/kernel.asm	/^f010219a:	e8 dc f2 ff ff       	call   f010147b <page_insert>$/;"	l
f010219f	obj/kern/kernel.asm	/^f010219f:	85 c0                	test   %eax,%eax$/;"	l
f01021a1	obj/kern/kernel.asm	/^f01021a1:	74 24                	je     f01021c7 <mem_init+0xc44>$/;"	l
f01021a3	obj/kern/kernel.asm	/^f01021a3:	c7 44 24 0c 1c 89 10 	movl   $0xf010891c,0xc(%esp)$/;"	l
f01021aa	obj/kern/kernel.asm	/^f01021aa:	f0 $/;"	l
f01021ab	obj/kern/kernel.asm	/^f01021ab:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f01021b2	obj/kern/kernel.asm	/^f01021b2:	f0 $/;"	l
f01021b3	obj/kern/kernel.asm	/^f01021b3:	c7 44 24 04 c4 03 00 	movl   $0x3c4,0x4(%esp)$/;"	l
f01021ba	obj/kern/kernel.asm	/^f01021ba:	00 $/;"	l
f01021bb	obj/kern/kernel.asm	/^f01021bb:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f01021c2	obj/kern/kernel.asm	/^f01021c2:	e8 79 de ff ff       	call   f0100040 <_panic>$/;"	l
f01021c7	obj/kern/kernel.asm	/^f01021c7:	8b 3d 98 9e 2b f0    	mov    0xf02b9e98,%edi$/;"	l
f01021cd	obj/kern/kernel.asm	/^f01021cd:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f01021d2	obj/kern/kernel.asm	/^f01021d2:	89 f8                	mov    %edi,%eax$/;"	l
f01021d4	obj/kern/kernel.asm	/^f01021d4:	e8 1c ea ff ff       	call   f0100bf5 <check_va2pa>$/;"	l
f01021d9	obj/kern/kernel.asm	/^f01021d9:	89 f2                	mov    %esi,%edx$/;"	l
f01021db	obj/kern/kernel.asm	/^f01021db:	2b 15 9c 9e 2b f0    	sub    0xf02b9e9c,%edx$/;"	l
f01021e1	obj/kern/kernel.asm	/^f01021e1:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01021e4	obj/kern/kernel.asm	/^f01021e4:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01021e7	obj/kern/kernel.asm	/^f01021e7:	39 d0                	cmp    %edx,%eax$/;"	l
f01021e9	obj/kern/kernel.asm	/^f01021e9:	74 24                	je     f010220f <mem_init+0xc8c>$/;"	l
f01021eb	obj/kern/kernel.asm	/^f01021eb:	c7 44 24 0c ac 88 10 	movl   $0xf01088ac,0xc(%esp)$/;"	l
f01021f2	obj/kern/kernel.asm	/^f01021f2:	f0 $/;"	l
f01021f3	obj/kern/kernel.asm	/^f01021f3:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f01021fa	obj/kern/kernel.asm	/^f01021fa:	f0 $/;"	l
f01021fb	obj/kern/kernel.asm	/^f01021fb:	c7 44 24 04 c5 03 00 	movl   $0x3c5,0x4(%esp)$/;"	l
f0102202	obj/kern/kernel.asm	/^f0102202:	00 $/;"	l
f0102203	obj/kern/kernel.asm	/^f0102203:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f010220a	obj/kern/kernel.asm	/^f010220a:	e8 31 de ff ff       	call   f0100040 <_panic>$/;"	l
f010220f	obj/kern/kernel.asm	/^f010220f:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0102214	obj/kern/kernel.asm	/^f0102214:	74 24                	je     f010223a <mem_init+0xcb7>$/;"	l
f0102216	obj/kern/kernel.asm	/^f0102216:	c7 44 24 0c 48 91 10 	movl   $0xf0109148,0xc(%esp)$/;"	l
f010221d	obj/kern/kernel.asm	/^f010221d:	f0 $/;"	l
f010221e	obj/kern/kernel.asm	/^f010221e:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f0102225	obj/kern/kernel.asm	/^f0102225:	f0 $/;"	l
f0102226	obj/kern/kernel.asm	/^f0102226:	c7 44 24 04 c6 03 00 	movl   $0x3c6,0x4(%esp)$/;"	l
f010222d	obj/kern/kernel.asm	/^f010222d:	00 $/;"	l
f010222e	obj/kern/kernel.asm	/^f010222e:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0102235	obj/kern/kernel.asm	/^f0102235:	e8 06 de ff ff       	call   f0100040 <_panic>$/;"	l
f010223a	obj/kern/kernel.asm	/^f010223a:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0102241	obj/kern/kernel.asm	/^f0102241:	00 $/;"	l
f0102242	obj/kern/kernel.asm	/^f0102242:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0102249	obj/kern/kernel.asm	/^f0102249:	00 $/;"	l
f010224a	obj/kern/kernel.asm	/^f010224a:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f010224d	obj/kern/kernel.asm	/^f010224d:	e8 f8 ef ff ff       	call   f010124a <pgdir_walk>$/;"	l
f0102252	obj/kern/kernel.asm	/^f0102252:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0102255	obj/kern/kernel.asm	/^f0102255:	75 24                	jne    f010227b <mem_init+0xcf8>$/;"	l
f0102257	obj/kern/kernel.asm	/^f0102257:	c7 44 24 0c 5c 89 10 	movl   $0xf010895c,0xc(%esp)$/;"	l
f010225e	obj/kern/kernel.asm	/^f010225e:	f0 $/;"	l
f010225f	obj/kern/kernel.asm	/^f010225f:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f0102266	obj/kern/kernel.asm	/^f0102266:	f0 $/;"	l
f0102267	obj/kern/kernel.asm	/^f0102267:	c7 44 24 04 c7 03 00 	movl   $0x3c7,0x4(%esp)$/;"	l
f010226e	obj/kern/kernel.asm	/^f010226e:	00 $/;"	l
f010226f	obj/kern/kernel.asm	/^f010226f:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0102276	obj/kern/kernel.asm	/^f0102276:	e8 c5 dd ff ff       	call   f0100040 <_panic>$/;"	l
f010227b	obj/kern/kernel.asm	/^f010227b:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f0102280	obj/kern/kernel.asm	/^f0102280:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0102283	obj/kern/kernel.asm	/^f0102283:	75 24                	jne    f01022a9 <mem_init+0xd26>$/;"	l
f0102285	obj/kern/kernel.asm	/^f0102285:	c7 44 24 0c 59 91 10 	movl   $0xf0109159,0xc(%esp)$/;"	l
f010228c	obj/kern/kernel.asm	/^f010228c:	f0 $/;"	l
f010228d	obj/kern/kernel.asm	/^f010228d:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f0102294	obj/kern/kernel.asm	/^f0102294:	f0 $/;"	l
f0102295	obj/kern/kernel.asm	/^f0102295:	c7 44 24 04 c8 03 00 	movl   $0x3c8,0x4(%esp)$/;"	l
f010229c	obj/kern/kernel.asm	/^f010229c:	00 $/;"	l
f010229d	obj/kern/kernel.asm	/^f010229d:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f01022a4	obj/kern/kernel.asm	/^f01022a4:	e8 97 dd ff ff       	call   f0100040 <_panic>$/;"	l
f01022a9	obj/kern/kernel.asm	/^f01022a9:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f01022b0	obj/kern/kernel.asm	/^f01022b0:	00 $/;"	l
f01022b1	obj/kern/kernel.asm	/^f01022b1:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01022b8	obj/kern/kernel.asm	/^f01022b8:	00 $/;"	l
f01022b9	obj/kern/kernel.asm	/^f01022b9:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f01022bd	obj/kern/kernel.asm	/^f01022bd:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01022c0	obj/kern/kernel.asm	/^f01022c0:	e8 b6 f1 ff ff       	call   f010147b <page_insert>$/;"	l
f01022c5	obj/kern/kernel.asm	/^f01022c5:	85 c0                	test   %eax,%eax$/;"	l
f01022c7	obj/kern/kernel.asm	/^f01022c7:	74 24                	je     f01022ed <mem_init+0xd6a>$/;"	l
f01022c9	obj/kern/kernel.asm	/^f01022c9:	c7 44 24 0c 70 88 10 	movl   $0xf0108870,0xc(%esp)$/;"	l
f01022d0	obj/kern/kernel.asm	/^f01022d0:	f0 $/;"	l
f01022d1	obj/kern/kernel.asm	/^f01022d1:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f01022d8	obj/kern/kernel.asm	/^f01022d8:	f0 $/;"	l
f01022d9	obj/kern/kernel.asm	/^f01022d9:	c7 44 24 04 cb 03 00 	movl   $0x3cb,0x4(%esp)$/;"	l
f01022e0	obj/kern/kernel.asm	/^f01022e0:	00 $/;"	l
f01022e1	obj/kern/kernel.asm	/^f01022e1:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f01022e8	obj/kern/kernel.asm	/^f01022e8:	e8 53 dd ff ff       	call   f0100040 <_panic>$/;"	l
f01022ed	obj/kern/kernel.asm	/^f01022ed:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f01022f4	obj/kern/kernel.asm	/^f01022f4:	00 $/;"	l
f01022f5	obj/kern/kernel.asm	/^f01022f5:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f01022fc	obj/kern/kernel.asm	/^f01022fc:	00 $/;"	l
f01022fd	obj/kern/kernel.asm	/^f01022fd:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f0102302	obj/kern/kernel.asm	/^f0102302:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102305	obj/kern/kernel.asm	/^f0102305:	e8 40 ef ff ff       	call   f010124a <pgdir_walk>$/;"	l
f010230a	obj/kern/kernel.asm	/^f010230a:	f6 00 02             	testb  $0x2,(%eax)$/;"	l
f010230d	obj/kern/kernel.asm	/^f010230d:	75 24                	jne    f0102333 <mem_init+0xdb0>$/;"	l
f010230f	obj/kern/kernel.asm	/^f010230f:	c7 44 24 0c 90 89 10 	movl   $0xf0108990,0xc(%esp)$/;"	l
f0102316	obj/kern/kernel.asm	/^f0102316:	f0 $/;"	l
f0102317	obj/kern/kernel.asm	/^f0102317:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f010231e	obj/kern/kernel.asm	/^f010231e:	f0 $/;"	l
f010231f	obj/kern/kernel.asm	/^f010231f:	c7 44 24 04 cc 03 00 	movl   $0x3cc,0x4(%esp)$/;"	l
f0102326	obj/kern/kernel.asm	/^f0102326:	00 $/;"	l
f0102327	obj/kern/kernel.asm	/^f0102327:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f010232e	obj/kern/kernel.asm	/^f010232e:	e8 0d dd ff ff       	call   f0100040 <_panic>$/;"	l
f0102333	obj/kern/kernel.asm	/^f0102333:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f010233a	obj/kern/kernel.asm	/^f010233a:	00 $/;"	l
f010233b	obj/kern/kernel.asm	/^f010233b:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0102342	obj/kern/kernel.asm	/^f0102342:	00 $/;"	l
f0102343	obj/kern/kernel.asm	/^f0102343:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f0102348	obj/kern/kernel.asm	/^f0102348:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010234b	obj/kern/kernel.asm	/^f010234b:	e8 fa ee ff ff       	call   f010124a <pgdir_walk>$/;"	l
f0102350	obj/kern/kernel.asm	/^f0102350:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0102353	obj/kern/kernel.asm	/^f0102353:	74 24                	je     f0102379 <mem_init+0xdf6>$/;"	l
f0102355	obj/kern/kernel.asm	/^f0102355:	c7 44 24 0c c4 89 10 	movl   $0xf01089c4,0xc(%esp)$/;"	l
f010235c	obj/kern/kernel.asm	/^f010235c:	f0 $/;"	l
f010235d	obj/kern/kernel.asm	/^f010235d:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f0102364	obj/kern/kernel.asm	/^f0102364:	f0 $/;"	l
f0102365	obj/kern/kernel.asm	/^f0102365:	c7 44 24 04 cd 03 00 	movl   $0x3cd,0x4(%esp)$/;"	l
f010236c	obj/kern/kernel.asm	/^f010236c:	00 $/;"	l
f010236d	obj/kern/kernel.asm	/^f010236d:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0102374	obj/kern/kernel.asm	/^f0102374:	e8 c7 dc ff ff       	call   f0100040 <_panic>$/;"	l
f0102379	obj/kern/kernel.asm	/^f0102379:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0102380	obj/kern/kernel.asm	/^f0102380:	00 $/;"	l
f0102381	obj/kern/kernel.asm	/^f0102381:	c7 44 24 08 00 00 40 	movl   $0x400000,0x8(%esp)$/;"	l
f0102388	obj/kern/kernel.asm	/^f0102388:	00 $/;"	l
f0102389	obj/kern/kernel.asm	/^f0102389:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010238c	obj/kern/kernel.asm	/^f010238c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0102390	obj/kern/kernel.asm	/^f0102390:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f0102395	obj/kern/kernel.asm	/^f0102395:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102398	obj/kern/kernel.asm	/^f0102398:	e8 de f0 ff ff       	call   f010147b <page_insert>$/;"	l
f010239d	obj/kern/kernel.asm	/^f010239d:	85 c0                	test   %eax,%eax$/;"	l
f010239f	obj/kern/kernel.asm	/^f010239f:	78 24                	js     f01023c5 <mem_init+0xe42>$/;"	l
f01023a1	obj/kern/kernel.asm	/^f01023a1:	c7 44 24 0c fc 89 10 	movl   $0xf01089fc,0xc(%esp)$/;"	l
f01023a8	obj/kern/kernel.asm	/^f01023a8:	f0 $/;"	l
f01023a9	obj/kern/kernel.asm	/^f01023a9:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f01023b0	obj/kern/kernel.asm	/^f01023b0:	f0 $/;"	l
f01023b1	obj/kern/kernel.asm	/^f01023b1:	c7 44 24 04 d0 03 00 	movl   $0x3d0,0x4(%esp)$/;"	l
f01023b8	obj/kern/kernel.asm	/^f01023b8:	00 $/;"	l
f01023b9	obj/kern/kernel.asm	/^f01023b9:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f01023c0	obj/kern/kernel.asm	/^f01023c0:	e8 7b dc ff ff       	call   f0100040 <_panic>$/;"	l
f01023c5	obj/kern/kernel.asm	/^f01023c5:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f01023cc	obj/kern/kernel.asm	/^f01023cc:	00 $/;"	l
f01023cd	obj/kern/kernel.asm	/^f01023cd:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01023d4	obj/kern/kernel.asm	/^f01023d4:	00 $/;"	l
f01023d5	obj/kern/kernel.asm	/^f01023d5:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01023d9	obj/kern/kernel.asm	/^f01023d9:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f01023de	obj/kern/kernel.asm	/^f01023de:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01023e1	obj/kern/kernel.asm	/^f01023e1:	e8 95 f0 ff ff       	call   f010147b <page_insert>$/;"	l
f01023e6	obj/kern/kernel.asm	/^f01023e6:	85 c0                	test   %eax,%eax$/;"	l
f01023e8	obj/kern/kernel.asm	/^f01023e8:	74 24                	je     f010240e <mem_init+0xe8b>$/;"	l
f01023ea	obj/kern/kernel.asm	/^f01023ea:	c7 44 24 0c 34 8a 10 	movl   $0xf0108a34,0xc(%esp)$/;"	l
f01023f1	obj/kern/kernel.asm	/^f01023f1:	f0 $/;"	l
f01023f2	obj/kern/kernel.asm	/^f01023f2:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f01023f9	obj/kern/kernel.asm	/^f01023f9:	f0 $/;"	l
f01023fa	obj/kern/kernel.asm	/^f01023fa:	c7 44 24 04 d3 03 00 	movl   $0x3d3,0x4(%esp)$/;"	l
f0102401	obj/kern/kernel.asm	/^f0102401:	00 $/;"	l
f0102402	obj/kern/kernel.asm	/^f0102402:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0102409	obj/kern/kernel.asm	/^f0102409:	e8 32 dc ff ff       	call   f0100040 <_panic>$/;"	l
f010240e	obj/kern/kernel.asm	/^f010240e:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0102415	obj/kern/kernel.asm	/^f0102415:	00 $/;"	l
f0102416	obj/kern/kernel.asm	/^f0102416:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f010241d	obj/kern/kernel.asm	/^f010241d:	00 $/;"	l
f010241e	obj/kern/kernel.asm	/^f010241e:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f0102423	obj/kern/kernel.asm	/^f0102423:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102426	obj/kern/kernel.asm	/^f0102426:	e8 1f ee ff ff       	call   f010124a <pgdir_walk>$/;"	l
f010242b	obj/kern/kernel.asm	/^f010242b:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f010242e	obj/kern/kernel.asm	/^f010242e:	74 24                	je     f0102454 <mem_init+0xed1>$/;"	l
f0102430	obj/kern/kernel.asm	/^f0102430:	c7 44 24 0c c4 89 10 	movl   $0xf01089c4,0xc(%esp)$/;"	l
f0102437	obj/kern/kernel.asm	/^f0102437:	f0 $/;"	l
f0102438	obj/kern/kernel.asm	/^f0102438:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f010243f	obj/kern/kernel.asm	/^f010243f:	f0 $/;"	l
f0102440	obj/kern/kernel.asm	/^f0102440:	c7 44 24 04 d4 03 00 	movl   $0x3d4,0x4(%esp)$/;"	l
f0102447	obj/kern/kernel.asm	/^f0102447:	00 $/;"	l
f0102448	obj/kern/kernel.asm	/^f0102448:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f010244f	obj/kern/kernel.asm	/^f010244f:	e8 ec db ff ff       	call   f0100040 <_panic>$/;"	l
f0102454	obj/kern/kernel.asm	/^f0102454:	8b 3d 98 9e 2b f0    	mov    0xf02b9e98,%edi$/;"	l
f010245a	obj/kern/kernel.asm	/^f010245a:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010245f	obj/kern/kernel.asm	/^f010245f:	89 f8                	mov    %edi,%eax$/;"	l
f0102461	obj/kern/kernel.asm	/^f0102461:	e8 8f e7 ff ff       	call   f0100bf5 <check_va2pa>$/;"	l
f0102466	obj/kern/kernel.asm	/^f0102466:	89 c1                	mov    %eax,%ecx$/;"	l
f0102468	obj/kern/kernel.asm	/^f0102468:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f010246b	obj/kern/kernel.asm	/^f010246b:	89 d8                	mov    %ebx,%eax$/;"	l
f010246d	obj/kern/kernel.asm	/^f010246d:	2b 05 9c 9e 2b f0    	sub    0xf02b9e9c,%eax$/;"	l
f0102473	obj/kern/kernel.asm	/^f0102473:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102476	obj/kern/kernel.asm	/^f0102476:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102479	obj/kern/kernel.asm	/^f0102479:	39 c1                	cmp    %eax,%ecx$/;"	l
f010247b	obj/kern/kernel.asm	/^f010247b:	74 24                	je     f01024a1 <mem_init+0xf1e>$/;"	l
f010247d	obj/kern/kernel.asm	/^f010247d:	c7 44 24 0c 70 8a 10 	movl   $0xf0108a70,0xc(%esp)$/;"	l
f0102484	obj/kern/kernel.asm	/^f0102484:	f0 $/;"	l
f0102485	obj/kern/kernel.asm	/^f0102485:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f010248c	obj/kern/kernel.asm	/^f010248c:	f0 $/;"	l
f010248d	obj/kern/kernel.asm	/^f010248d:	c7 44 24 04 d7 03 00 	movl   $0x3d7,0x4(%esp)$/;"	l
f0102494	obj/kern/kernel.asm	/^f0102494:	00 $/;"	l
f0102495	obj/kern/kernel.asm	/^f0102495:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f010249c	obj/kern/kernel.asm	/^f010249c:	e8 9f db ff ff       	call   f0100040 <_panic>$/;"	l
f01024a1	obj/kern/kernel.asm	/^f01024a1:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f01024a6	obj/kern/kernel.asm	/^f01024a6:	89 f8                	mov    %edi,%eax$/;"	l
f01024a8	obj/kern/kernel.asm	/^f01024a8:	e8 48 e7 ff ff       	call   f0100bf5 <check_va2pa>$/;"	l
f01024ad	obj/kern/kernel.asm	/^f01024ad:	39 45 cc             	cmp    %eax,-0x34(%ebp)$/;"	l
f01024b0	obj/kern/kernel.asm	/^f01024b0:	74 24                	je     f01024d6 <mem_init+0xf53>$/;"	l
f01024b2	obj/kern/kernel.asm	/^f01024b2:	c7 44 24 0c 9c 8a 10 	movl   $0xf0108a9c,0xc(%esp)$/;"	l
f01024b9	obj/kern/kernel.asm	/^f01024b9:	f0 $/;"	l
f01024ba	obj/kern/kernel.asm	/^f01024ba:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f01024c1	obj/kern/kernel.asm	/^f01024c1:	f0 $/;"	l
f01024c2	obj/kern/kernel.asm	/^f01024c2:	c7 44 24 04 d8 03 00 	movl   $0x3d8,0x4(%esp)$/;"	l
f01024c9	obj/kern/kernel.asm	/^f01024c9:	00 $/;"	l
f01024ca	obj/kern/kernel.asm	/^f01024ca:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f01024d1	obj/kern/kernel.asm	/^f01024d1:	e8 6a db ff ff       	call   f0100040 <_panic>$/;"	l
f01024d6	obj/kern/kernel.asm	/^f01024d6:	66 83 7b 04 02       	cmpw   $0x2,0x4(%ebx)$/;"	l
f01024db	obj/kern/kernel.asm	/^f01024db:	74 24                	je     f0102501 <mem_init+0xf7e>$/;"	l
f01024dd	obj/kern/kernel.asm	/^f01024dd:	c7 44 24 0c 6f 91 10 	movl   $0xf010916f,0xc(%esp)$/;"	l
f01024e4	obj/kern/kernel.asm	/^f01024e4:	f0 $/;"	l
f01024e5	obj/kern/kernel.asm	/^f01024e5:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f01024ec	obj/kern/kernel.asm	/^f01024ec:	f0 $/;"	l
f01024ed	obj/kern/kernel.asm	/^f01024ed:	c7 44 24 04 da 03 00 	movl   $0x3da,0x4(%esp)$/;"	l
f01024f4	obj/kern/kernel.asm	/^f01024f4:	00 $/;"	l
f01024f5	obj/kern/kernel.asm	/^f01024f5:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f01024fc	obj/kern/kernel.asm	/^f01024fc:	e8 3f db ff ff       	call   f0100040 <_panic>$/;"	l
f0102501	obj/kern/kernel.asm	/^f0102501:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f0102506	obj/kern/kernel.asm	/^f0102506:	74 24                	je     f010252c <mem_init+0xfa9>$/;"	l
f0102508	obj/kern/kernel.asm	/^f0102508:	c7 44 24 0c 80 91 10 	movl   $0xf0109180,0xc(%esp)$/;"	l
f010250f	obj/kern/kernel.asm	/^f010250f:	f0 $/;"	l
f0102510	obj/kern/kernel.asm	/^f0102510:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f0102517	obj/kern/kernel.asm	/^f0102517:	f0 $/;"	l
f0102518	obj/kern/kernel.asm	/^f0102518:	c7 44 24 04 db 03 00 	movl   $0x3db,0x4(%esp)$/;"	l
f010251f	obj/kern/kernel.asm	/^f010251f:	00 $/;"	l
f0102520	obj/kern/kernel.asm	/^f0102520:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0102527	obj/kern/kernel.asm	/^f0102527:	e8 14 db ff ff       	call   f0100040 <_panic>$/;"	l
f010252c	obj/kern/kernel.asm	/^f010252c:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102533	obj/kern/kernel.asm	/^f0102533:	e8 03 ec ff ff       	call   f010113b <page_alloc>$/;"	l
f0102538	obj/kern/kernel.asm	/^f0102538:	85 c0                	test   %eax,%eax$/;"	l
f010253a	obj/kern/kernel.asm	/^f010253a:	74 04                	je     f0102540 <mem_init+0xfbd>$/;"	l
f010253c	obj/kern/kernel.asm	/^f010253c:	39 c6                	cmp    %eax,%esi$/;"	l
f010253e	obj/kern/kernel.asm	/^f010253e:	74 24                	je     f0102564 <mem_init+0xfe1>$/;"	l
f0102540	obj/kern/kernel.asm	/^f0102540:	c7 44 24 0c cc 8a 10 	movl   $0xf0108acc,0xc(%esp)$/;"	l
f0102547	obj/kern/kernel.asm	/^f0102547:	f0 $/;"	l
f0102548	obj/kern/kernel.asm	/^f0102548:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f010254f	obj/kern/kernel.asm	/^f010254f:	f0 $/;"	l
f0102550	obj/kern/kernel.asm	/^f0102550:	c7 44 24 04 de 03 00 	movl   $0x3de,0x4(%esp)$/;"	l
f0102557	obj/kern/kernel.asm	/^f0102557:	00 $/;"	l
f0102558	obj/kern/kernel.asm	/^f0102558:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f010255f	obj/kern/kernel.asm	/^f010255f:	e8 dc da ff ff       	call   f0100040 <_panic>$/;"	l
f0102564	obj/kern/kernel.asm	/^f0102564:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f010256b	obj/kern/kernel.asm	/^f010256b:	00 $/;"	l
f010256c	obj/kern/kernel.asm	/^f010256c:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f0102571	obj/kern/kernel.asm	/^f0102571:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102574	obj/kern/kernel.asm	/^f0102574:	e8 b9 ee ff ff       	call   f0101432 <page_remove>$/;"	l
f0102579	obj/kern/kernel.asm	/^f0102579:	8b 3d 98 9e 2b f0    	mov    0xf02b9e98,%edi$/;"	l
f010257f	obj/kern/kernel.asm	/^f010257f:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0102584	obj/kern/kernel.asm	/^f0102584:	89 f8                	mov    %edi,%eax$/;"	l
f0102586	obj/kern/kernel.asm	/^f0102586:	e8 6a e6 ff ff       	call   f0100bf5 <check_va2pa>$/;"	l
f010258b	obj/kern/kernel.asm	/^f010258b:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f010258e	obj/kern/kernel.asm	/^f010258e:	74 24                	je     f01025b4 <mem_init+0x1031>$/;"	l
f0102590	obj/kern/kernel.asm	/^f0102590:	c7 44 24 0c f0 8a 10 	movl   $0xf0108af0,0xc(%esp)$/;"	l
f0102597	obj/kern/kernel.asm	/^f0102597:	f0 $/;"	l
f0102598	obj/kern/kernel.asm	/^f0102598:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f010259f	obj/kern/kernel.asm	/^f010259f:	f0 $/;"	l
f01025a0	obj/kern/kernel.asm	/^f01025a0:	c7 44 24 04 e2 03 00 	movl   $0x3e2,0x4(%esp)$/;"	l
f01025a7	obj/kern/kernel.asm	/^f01025a7:	00 $/;"	l
f01025a8	obj/kern/kernel.asm	/^f01025a8:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f01025af	obj/kern/kernel.asm	/^f01025af:	e8 8c da ff ff       	call   f0100040 <_panic>$/;"	l
f01025b4	obj/kern/kernel.asm	/^f01025b4:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f01025b9	obj/kern/kernel.asm	/^f01025b9:	89 f8                	mov    %edi,%eax$/;"	l
f01025bb	obj/kern/kernel.asm	/^f01025bb:	e8 35 e6 ff ff       	call   f0100bf5 <check_va2pa>$/;"	l
f01025c0	obj/kern/kernel.asm	/^f01025c0:	89 da                	mov    %ebx,%edx$/;"	l
f01025c2	obj/kern/kernel.asm	/^f01025c2:	2b 15 9c 9e 2b f0    	sub    0xf02b9e9c,%edx$/;"	l
f01025c8	obj/kern/kernel.asm	/^f01025c8:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01025cb	obj/kern/kernel.asm	/^f01025cb:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01025ce	obj/kern/kernel.asm	/^f01025ce:	39 d0                	cmp    %edx,%eax$/;"	l
f01025d0	obj/kern/kernel.asm	/^f01025d0:	74 24                	je     f01025f6 <mem_init+0x1073>$/;"	l
f01025d2	obj/kern/kernel.asm	/^f01025d2:	c7 44 24 0c 9c 8a 10 	movl   $0xf0108a9c,0xc(%esp)$/;"	l
f01025d9	obj/kern/kernel.asm	/^f01025d9:	f0 $/;"	l
f01025da	obj/kern/kernel.asm	/^f01025da:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f01025e1	obj/kern/kernel.asm	/^f01025e1:	f0 $/;"	l
f01025e2	obj/kern/kernel.asm	/^f01025e2:	c7 44 24 04 e3 03 00 	movl   $0x3e3,0x4(%esp)$/;"	l
f01025e9	obj/kern/kernel.asm	/^f01025e9:	00 $/;"	l
f01025ea	obj/kern/kernel.asm	/^f01025ea:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f01025f1	obj/kern/kernel.asm	/^f01025f1:	e8 4a da ff ff       	call   f0100040 <_panic>$/;"	l
f01025f6	obj/kern/kernel.asm	/^f01025f6:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f01025fb	obj/kern/kernel.asm	/^f01025fb:	74 24                	je     f0102621 <mem_init+0x109e>$/;"	l
f01025fd	obj/kern/kernel.asm	/^f01025fd:	c7 44 24 0c 26 91 10 	movl   $0xf0109126,0xc(%esp)$/;"	l
f0102604	obj/kern/kernel.asm	/^f0102604:	f0 $/;"	l
f0102605	obj/kern/kernel.asm	/^f0102605:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f010260c	obj/kern/kernel.asm	/^f010260c:	f0 $/;"	l
f010260d	obj/kern/kernel.asm	/^f010260d:	c7 44 24 04 e4 03 00 	movl   $0x3e4,0x4(%esp)$/;"	l
f0102614	obj/kern/kernel.asm	/^f0102614:	00 $/;"	l
f0102615	obj/kern/kernel.asm	/^f0102615:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f010261c	obj/kern/kernel.asm	/^f010261c:	e8 1f da ff ff       	call   f0100040 <_panic>$/;"	l
f0102621	obj/kern/kernel.asm	/^f0102621:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f0102626	obj/kern/kernel.asm	/^f0102626:	74 24                	je     f010264c <mem_init+0x10c9>$/;"	l
f0102628	obj/kern/kernel.asm	/^f0102628:	c7 44 24 0c 80 91 10 	movl   $0xf0109180,0xc(%esp)$/;"	l
f010262f	obj/kern/kernel.asm	/^f010262f:	f0 $/;"	l
f0102630	obj/kern/kernel.asm	/^f0102630:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f0102637	obj/kern/kernel.asm	/^f0102637:	f0 $/;"	l
f0102638	obj/kern/kernel.asm	/^f0102638:	c7 44 24 04 e5 03 00 	movl   $0x3e5,0x4(%esp)$/;"	l
f010263f	obj/kern/kernel.asm	/^f010263f:	00 $/;"	l
f0102640	obj/kern/kernel.asm	/^f0102640:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0102647	obj/kern/kernel.asm	/^f0102647:	e8 f4 d9 ff ff       	call   f0100040 <_panic>$/;"	l
f010264c	obj/kern/kernel.asm	/^f010264c:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
f0102653	obj/kern/kernel.asm	/^f0102653:	00 $/;"	l
f0102654	obj/kern/kernel.asm	/^f0102654:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f010265b	obj/kern/kernel.asm	/^f010265b:	00 $/;"	l
f010265c	obj/kern/kernel.asm	/^f010265c:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0102660	obj/kern/kernel.asm	/^f0102660:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0102663	obj/kern/kernel.asm	/^f0102663:	e8 13 ee ff ff       	call   f010147b <page_insert>$/;"	l
f0102668	obj/kern/kernel.asm	/^f0102668:	85 c0                	test   %eax,%eax$/;"	l
f010266a	obj/kern/kernel.asm	/^f010266a:	74 24                	je     f0102690 <mem_init+0x110d>$/;"	l
f010266c	obj/kern/kernel.asm	/^f010266c:	c7 44 24 0c 14 8b 10 	movl   $0xf0108b14,0xc(%esp)$/;"	l
f0102673	obj/kern/kernel.asm	/^f0102673:	f0 $/;"	l
f0102674	obj/kern/kernel.asm	/^f0102674:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f010267b	obj/kern/kernel.asm	/^f010267b:	f0 $/;"	l
f010267c	obj/kern/kernel.asm	/^f010267c:	c7 44 24 04 e8 03 00 	movl   $0x3e8,0x4(%esp)$/;"	l
f0102683	obj/kern/kernel.asm	/^f0102683:	00 $/;"	l
f0102684	obj/kern/kernel.asm	/^f0102684:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f010268b	obj/kern/kernel.asm	/^f010268b:	e8 b0 d9 ff ff       	call   f0100040 <_panic>$/;"	l
f0102690	obj/kern/kernel.asm	/^f0102690:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
f0102695	obj/kern/kernel.asm	/^f0102695:	75 24                	jne    f01026bb <mem_init+0x1138>$/;"	l
f0102697	obj/kern/kernel.asm	/^f0102697:	c7 44 24 0c 91 91 10 	movl   $0xf0109191,0xc(%esp)$/;"	l
f010269e	obj/kern/kernel.asm	/^f010269e:	f0 $/;"	l
f010269f	obj/kern/kernel.asm	/^f010269f:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f01026a6	obj/kern/kernel.asm	/^f01026a6:	f0 $/;"	l
f01026a7	obj/kern/kernel.asm	/^f01026a7:	c7 44 24 04 e9 03 00 	movl   $0x3e9,0x4(%esp)$/;"	l
f01026ae	obj/kern/kernel.asm	/^f01026ae:	00 $/;"	l
f01026af	obj/kern/kernel.asm	/^f01026af:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f01026b6	obj/kern/kernel.asm	/^f01026b6:	e8 85 d9 ff ff       	call   f0100040 <_panic>$/;"	l
f01026bb	obj/kern/kernel.asm	/^f01026bb:	83 3b 00             	cmpl   $0x0,(%ebx)$/;"	l
f01026be	obj/kern/kernel.asm	/^f01026be:	74 24                	je     f01026e4 <mem_init+0x1161>$/;"	l
f01026c0	obj/kern/kernel.asm	/^f01026c0:	c7 44 24 0c 9d 91 10 	movl   $0xf010919d,0xc(%esp)$/;"	l
f01026c7	obj/kern/kernel.asm	/^f01026c7:	f0 $/;"	l
f01026c8	obj/kern/kernel.asm	/^f01026c8:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f01026cf	obj/kern/kernel.asm	/^f01026cf:	f0 $/;"	l
f01026d0	obj/kern/kernel.asm	/^f01026d0:	c7 44 24 04 ea 03 00 	movl   $0x3ea,0x4(%esp)$/;"	l
f01026d7	obj/kern/kernel.asm	/^f01026d7:	00 $/;"	l
f01026d8	obj/kern/kernel.asm	/^f01026d8:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f01026df	obj/kern/kernel.asm	/^f01026df:	e8 5c d9 ff ff       	call   f0100040 <_panic>$/;"	l
f01026e4	obj/kern/kernel.asm	/^f01026e4:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f01026eb	obj/kern/kernel.asm	/^f01026eb:	00 $/;"	l
f01026ec	obj/kern/kernel.asm	/^f01026ec:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f01026f1	obj/kern/kernel.asm	/^f01026f1:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01026f4	obj/kern/kernel.asm	/^f01026f4:	e8 39 ed ff ff       	call   f0101432 <page_remove>$/;"	l
f01026f9	obj/kern/kernel.asm	/^f01026f9:	8b 3d 98 9e 2b f0    	mov    0xf02b9e98,%edi$/;"	l
f01026ff	obj/kern/kernel.asm	/^f01026ff:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0102704	obj/kern/kernel.asm	/^f0102704:	89 f8                	mov    %edi,%eax$/;"	l
f0102706	obj/kern/kernel.asm	/^f0102706:	e8 ea e4 ff ff       	call   f0100bf5 <check_va2pa>$/;"	l
f010270b	obj/kern/kernel.asm	/^f010270b:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f010270e	obj/kern/kernel.asm	/^f010270e:	74 24                	je     f0102734 <mem_init+0x11b1>$/;"	l
f0102710	obj/kern/kernel.asm	/^f0102710:	c7 44 24 0c f0 8a 10 	movl   $0xf0108af0,0xc(%esp)$/;"	l
f0102717	obj/kern/kernel.asm	/^f0102717:	f0 $/;"	l
f0102718	obj/kern/kernel.asm	/^f0102718:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f010271f	obj/kern/kernel.asm	/^f010271f:	f0 $/;"	l
f0102720	obj/kern/kernel.asm	/^f0102720:	c7 44 24 04 ee 03 00 	movl   $0x3ee,0x4(%esp)$/;"	l
f0102727	obj/kern/kernel.asm	/^f0102727:	00 $/;"	l
f0102728	obj/kern/kernel.asm	/^f0102728:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f010272f	obj/kern/kernel.asm	/^f010272f:	e8 0c d9 ff ff       	call   f0100040 <_panic>$/;"	l
f0102734	obj/kern/kernel.asm	/^f0102734:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102739	obj/kern/kernel.asm	/^f0102739:	89 f8                	mov    %edi,%eax$/;"	l
f010273b	obj/kern/kernel.asm	/^f010273b:	e8 b5 e4 ff ff       	call   f0100bf5 <check_va2pa>$/;"	l
f0102740	obj/kern/kernel.asm	/^f0102740:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102743	obj/kern/kernel.asm	/^f0102743:	74 24                	je     f0102769 <mem_init+0x11e6>$/;"	l
f0102745	obj/kern/kernel.asm	/^f0102745:	c7 44 24 0c 4c 8b 10 	movl   $0xf0108b4c,0xc(%esp)$/;"	l
f010274c	obj/kern/kernel.asm	/^f010274c:	f0 $/;"	l
f010274d	obj/kern/kernel.asm	/^f010274d:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f0102754	obj/kern/kernel.asm	/^f0102754:	f0 $/;"	l
f0102755	obj/kern/kernel.asm	/^f0102755:	c7 44 24 04 ef 03 00 	movl   $0x3ef,0x4(%esp)$/;"	l
f010275c	obj/kern/kernel.asm	/^f010275c:	00 $/;"	l
f010275d	obj/kern/kernel.asm	/^f010275d:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0102764	obj/kern/kernel.asm	/^f0102764:	e8 d7 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f0102769	obj/kern/kernel.asm	/^f0102769:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
f010276e	obj/kern/kernel.asm	/^f010276e:	74 24                	je     f0102794 <mem_init+0x1211>$/;"	l
f0102770	obj/kern/kernel.asm	/^f0102770:	c7 44 24 0c b2 91 10 	movl   $0xf01091b2,0xc(%esp)$/;"	l
f0102777	obj/kern/kernel.asm	/^f0102777:	f0 $/;"	l
f0102778	obj/kern/kernel.asm	/^f0102778:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f010277f	obj/kern/kernel.asm	/^f010277f:	f0 $/;"	l
f0102780	obj/kern/kernel.asm	/^f0102780:	c7 44 24 04 f0 03 00 	movl   $0x3f0,0x4(%esp)$/;"	l
f0102787	obj/kern/kernel.asm	/^f0102787:	00 $/;"	l
f0102788	obj/kern/kernel.asm	/^f0102788:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f010278f	obj/kern/kernel.asm	/^f010278f:	e8 ac d8 ff ff       	call   f0100040 <_panic>$/;"	l
f0102794	obj/kern/kernel.asm	/^f0102794:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f0102799	obj/kern/kernel.asm	/^f0102799:	74 24                	je     f01027bf <mem_init+0x123c>$/;"	l
f010279b	obj/kern/kernel.asm	/^f010279b:	c7 44 24 0c 80 91 10 	movl   $0xf0109180,0xc(%esp)$/;"	l
f01027a2	obj/kern/kernel.asm	/^f01027a2:	f0 $/;"	l
f01027a3	obj/kern/kernel.asm	/^f01027a3:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f01027aa	obj/kern/kernel.asm	/^f01027aa:	f0 $/;"	l
f01027ab	obj/kern/kernel.asm	/^f01027ab:	c7 44 24 04 f1 03 00 	movl   $0x3f1,0x4(%esp)$/;"	l
f01027b2	obj/kern/kernel.asm	/^f01027b2:	00 $/;"	l
f01027b3	obj/kern/kernel.asm	/^f01027b3:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f01027ba	obj/kern/kernel.asm	/^f01027ba:	e8 81 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f01027bf	obj/kern/kernel.asm	/^f01027bf:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01027c6	obj/kern/kernel.asm	/^f01027c6:	e8 70 e9 ff ff       	call   f010113b <page_alloc>$/;"	l
f01027cb	obj/kern/kernel.asm	/^f01027cb:	85 c0                	test   %eax,%eax$/;"	l
f01027cd	obj/kern/kernel.asm	/^f01027cd:	74 04                	je     f01027d3 <mem_init+0x1250>$/;"	l
f01027cf	obj/kern/kernel.asm	/^f01027cf:	39 c3                	cmp    %eax,%ebx$/;"	l
f01027d1	obj/kern/kernel.asm	/^f01027d1:	74 24                	je     f01027f7 <mem_init+0x1274>$/;"	l
f01027d3	obj/kern/kernel.asm	/^f01027d3:	c7 44 24 0c 74 8b 10 	movl   $0xf0108b74,0xc(%esp)$/;"	l
f01027da	obj/kern/kernel.asm	/^f01027da:	f0 $/;"	l
f01027db	obj/kern/kernel.asm	/^f01027db:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f01027e2	obj/kern/kernel.asm	/^f01027e2:	f0 $/;"	l
f01027e3	obj/kern/kernel.asm	/^f01027e3:	c7 44 24 04 f4 03 00 	movl   $0x3f4,0x4(%esp)$/;"	l
f01027ea	obj/kern/kernel.asm	/^f01027ea:	00 $/;"	l
f01027eb	obj/kern/kernel.asm	/^f01027eb:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f01027f2	obj/kern/kernel.asm	/^f01027f2:	e8 49 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f01027f7	obj/kern/kernel.asm	/^f01027f7:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01027fe	obj/kern/kernel.asm	/^f01027fe:	e8 38 e9 ff ff       	call   f010113b <page_alloc>$/;"	l
f0102803	obj/kern/kernel.asm	/^f0102803:	85 c0                	test   %eax,%eax$/;"	l
f0102805	obj/kern/kernel.asm	/^f0102805:	74 24                	je     f010282b <mem_init+0x12a8>$/;"	l
f0102807	obj/kern/kernel.asm	/^f0102807:	c7 44 24 0c d4 90 10 	movl   $0xf01090d4,0xc(%esp)$/;"	l
f010280e	obj/kern/kernel.asm	/^f010280e:	f0 $/;"	l
f010280f	obj/kern/kernel.asm	/^f010280f:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f0102816	obj/kern/kernel.asm	/^f0102816:	f0 $/;"	l
f0102817	obj/kern/kernel.asm	/^f0102817:	c7 44 24 04 f7 03 00 	movl   $0x3f7,0x4(%esp)$/;"	l
f010281e	obj/kern/kernel.asm	/^f010281e:	00 $/;"	l
f010281f	obj/kern/kernel.asm	/^f010281f:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0102826	obj/kern/kernel.asm	/^f0102826:	e8 15 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f010282b	obj/kern/kernel.asm	/^f010282b:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f0102830	obj/kern/kernel.asm	/^f0102830:	8b 08                	mov    (%eax),%ecx$/;"	l
f0102832	obj/kern/kernel.asm	/^f0102832:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f0102838	obj/kern/kernel.asm	/^f0102838:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f010283b	obj/kern/kernel.asm	/^f010283b:	2b 15 9c 9e 2b f0    	sub    0xf02b9e9c,%edx$/;"	l
f0102841	obj/kern/kernel.asm	/^f0102841:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0102844	obj/kern/kernel.asm	/^f0102844:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102847	obj/kern/kernel.asm	/^f0102847:	39 d1                	cmp    %edx,%ecx$/;"	l
f0102849	obj/kern/kernel.asm	/^f0102849:	74 24                	je     f010286f <mem_init+0x12ec>$/;"	l
f010284b	obj/kern/kernel.asm	/^f010284b:	c7 44 24 0c 18 88 10 	movl   $0xf0108818,0xc(%esp)$/;"	l
f0102852	obj/kern/kernel.asm	/^f0102852:	f0 $/;"	l
f0102853	obj/kern/kernel.asm	/^f0102853:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f010285a	obj/kern/kernel.asm	/^f010285a:	f0 $/;"	l
f010285b	obj/kern/kernel.asm	/^f010285b:	c7 44 24 04 fa 03 00 	movl   $0x3fa,0x4(%esp)$/;"	l
f0102862	obj/kern/kernel.asm	/^f0102862:	00 $/;"	l
f0102863	obj/kern/kernel.asm	/^f0102863:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f010286a	obj/kern/kernel.asm	/^f010286a:	e8 d1 d7 ff ff       	call   f0100040 <_panic>$/;"	l
f010286f	obj/kern/kernel.asm	/^f010286f:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102875	obj/kern/kernel.asm	/^f0102875:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102878	obj/kern/kernel.asm	/^f0102878:	66 83 78 04 01       	cmpw   $0x1,0x4(%eax)$/;"	l
f010287d	obj/kern/kernel.asm	/^f010287d:	74 24                	je     f01028a3 <mem_init+0x1320>$/;"	l
f010287f	obj/kern/kernel.asm	/^f010287f:	c7 44 24 0c 37 91 10 	movl   $0xf0109137,0xc(%esp)$/;"	l
f0102886	obj/kern/kernel.asm	/^f0102886:	f0 $/;"	l
f0102887	obj/kern/kernel.asm	/^f0102887:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f010288e	obj/kern/kernel.asm	/^f010288e:	f0 $/;"	l
f010288f	obj/kern/kernel.asm	/^f010288f:	c7 44 24 04 fc 03 00 	movl   $0x3fc,0x4(%esp)$/;"	l
f0102896	obj/kern/kernel.asm	/^f0102896:	00 $/;"	l
f0102897	obj/kern/kernel.asm	/^f0102897:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f010289e	obj/kern/kernel.asm	/^f010289e:	e8 9d d7 ff ff       	call   f0100040 <_panic>$/;"	l
f01028a3	obj/kern/kernel.asm	/^f01028a3:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01028a6	obj/kern/kernel.asm	/^f01028a6:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f01028ac	obj/kern/kernel.asm	/^f01028ac:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01028af	obj/kern/kernel.asm	/^f01028af:	e8 17 e9 ff ff       	call   f01011cb <page_free>$/;"	l
f01028b4	obj/kern/kernel.asm	/^f01028b4:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f01028bb	obj/kern/kernel.asm	/^f01028bb:	00 $/;"	l
f01028bc	obj/kern/kernel.asm	/^f01028bc:	c7 44 24 04 00 10 40 	movl   $0x401000,0x4(%esp)$/;"	l
f01028c3	obj/kern/kernel.asm	/^f01028c3:	00 $/;"	l
f01028c4	obj/kern/kernel.asm	/^f01028c4:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f01028c9	obj/kern/kernel.asm	/^f01028c9:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01028cc	obj/kern/kernel.asm	/^f01028cc:	e8 79 e9 ff ff       	call   f010124a <pgdir_walk>$/;"	l
f01028d1	obj/kern/kernel.asm	/^f01028d1:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f01028d4	obj/kern/kernel.asm	/^f01028d4:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01028d7	obj/kern/kernel.asm	/^f01028d7:	8b 15 98 9e 2b f0    	mov    0xf02b9e98,%edx$/;"	l
f01028dd	obj/kern/kernel.asm	/^f01028dd:	8b 7a 04             	mov    0x4(%edx),%edi$/;"	l
f01028e0	obj/kern/kernel.asm	/^f01028e0:	81 e7 00 f0 ff ff    	and    $0xfffff000,%edi$/;"	l
f01028e6	obj/kern/kernel.asm	/^f01028e6:	8b 0d 94 9e 2b f0    	mov    0xf02b9e94,%ecx$/;"	l
f01028ec	obj/kern/kernel.asm	/^f01028ec:	89 f8                	mov    %edi,%eax$/;"	l
f01028ee	obj/kern/kernel.asm	/^f01028ee:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f01028f1	obj/kern/kernel.asm	/^f01028f1:	39 c8                	cmp    %ecx,%eax$/;"	l
f01028f3	obj/kern/kernel.asm	/^f01028f3:	72 20                	jb     f0102915 <mem_init+0x1392>$/;"	l
f01028f5	obj/kern/kernel.asm	/^f01028f5:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f01028f9	obj/kern/kernel.asm	/^f01028f9:	c7 44 24 08 c4 7f 10 	movl   $0xf0107fc4,0x8(%esp)$/;"	l
f0102900	obj/kern/kernel.asm	/^f0102900:	f0 $/;"	l
f0102901	obj/kern/kernel.asm	/^f0102901:	c7 44 24 04 03 04 00 	movl   $0x403,0x4(%esp)$/;"	l
f0102908	obj/kern/kernel.asm	/^f0102908:	00 $/;"	l
f0102909	obj/kern/kernel.asm	/^f0102909:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0102910	obj/kern/kernel.asm	/^f0102910:	e8 2b d7 ff ff       	call   f0100040 <_panic>$/;"	l
f0102915	obj/kern/kernel.asm	/^f0102915:	81 ef fc ff ff 0f    	sub    $0xffffffc,%edi$/;"	l
f010291b	obj/kern/kernel.asm	/^f010291b:	39 7d cc             	cmp    %edi,-0x34(%ebp)$/;"	l
f010291e	obj/kern/kernel.asm	/^f010291e:	74 24                	je     f0102944 <mem_init+0x13c1>$/;"	l
f0102920	obj/kern/kernel.asm	/^f0102920:	c7 44 24 0c c3 91 10 	movl   $0xf01091c3,0xc(%esp)$/;"	l
f0102927	obj/kern/kernel.asm	/^f0102927:	f0 $/;"	l
f0102928	obj/kern/kernel.asm	/^f0102928:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f010292f	obj/kern/kernel.asm	/^f010292f:	f0 $/;"	l
f0102930	obj/kern/kernel.asm	/^f0102930:	c7 44 24 04 04 04 00 	movl   $0x404,0x4(%esp)$/;"	l
f0102937	obj/kern/kernel.asm	/^f0102937:	00 $/;"	l
f0102938	obj/kern/kernel.asm	/^f0102938:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f010293f	obj/kern/kernel.asm	/^f010293f:	e8 fc d6 ff ff       	call   f0100040 <_panic>$/;"	l
f0102944	obj/kern/kernel.asm	/^f0102944:	c7 42 04 00 00 00 00 	movl   $0x0,0x4(%edx)$/;"	l
f010294b	obj/kern/kernel.asm	/^f010294b:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010294e	obj/kern/kernel.asm	/^f010294e:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f0102954	obj/kern/kernel.asm	/^f0102954:	2b 05 9c 9e 2b f0    	sub    0xf02b9e9c,%eax$/;"	l
f010295a	obj/kern/kernel.asm	/^f010295a:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f010295d	obj/kern/kernel.asm	/^f010295d:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102960	obj/kern/kernel.asm	/^f0102960:	89 c2                	mov    %eax,%edx$/;"	l
f0102962	obj/kern/kernel.asm	/^f0102962:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0102965	obj/kern/kernel.asm	/^f0102965:	39 d1                	cmp    %edx,%ecx$/;"	l
f0102967	obj/kern/kernel.asm	/^f0102967:	77 20                	ja     f0102989 <mem_init+0x1406>$/;"	l
f0102969	obj/kern/kernel.asm	/^f0102969:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010296d	obj/kern/kernel.asm	/^f010296d:	c7 44 24 08 c4 7f 10 	movl   $0xf0107fc4,0x8(%esp)$/;"	l
f0102974	obj/kern/kernel.asm	/^f0102974:	f0 $/;"	l
f0102975	obj/kern/kernel.asm	/^f0102975:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f010297c	obj/kern/kernel.asm	/^f010297c:	00 $/;"	l
f010297d	obj/kern/kernel.asm	/^f010297d:	c7 04 24 1d 8f 10 f0 	movl   $0xf0108f1d,(%esp)$/;"	l
f0102984	obj/kern/kernel.asm	/^f0102984:	e8 b7 d6 ff ff       	call   f0100040 <_panic>$/;"	l
f0102989	obj/kern/kernel.asm	/^f0102989:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0102990	obj/kern/kernel.asm	/^f0102990:	00 $/;"	l
f0102991	obj/kern/kernel.asm	/^f0102991:	c7 44 24 04 ff 00 00 	movl   $0xff,0x4(%esp)$/;"	l
f0102998	obj/kern/kernel.asm	/^f0102998:	00 $/;"	l
f0102999	obj/kern/kernel.asm	/^f0102999:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f010299e	obj/kern/kernel.asm	/^f010299e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01029a1	obj/kern/kernel.asm	/^f01029a1:	e8 61 3b 00 00       	call   f0106507 <memset>$/;"	l
f01029a6	obj/kern/kernel.asm	/^f01029a6:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f01029a9	obj/kern/kernel.asm	/^f01029a9:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f01029ac	obj/kern/kernel.asm	/^f01029ac:	e8 1a e8 ff ff       	call   f01011cb <page_free>$/;"	l
f01029b1	obj/kern/kernel.asm	/^f01029b1:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f01029b8	obj/kern/kernel.asm	/^f01029b8:	00 $/;"	l
f01029b9	obj/kern/kernel.asm	/^f01029b9:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01029c0	obj/kern/kernel.asm	/^f01029c0:	00 $/;"	l
f01029c1	obj/kern/kernel.asm	/^f01029c1:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f01029c6	obj/kern/kernel.asm	/^f01029c6:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01029c9	obj/kern/kernel.asm	/^f01029c9:	e8 7c e8 ff ff       	call   f010124a <pgdir_walk>$/;"	l
f01029ce	obj/kern/kernel.asm	/^f01029ce:	89 fa                	mov    %edi,%edx$/;"	l
f01029d0	obj/kern/kernel.asm	/^f01029d0:	2b 15 9c 9e 2b f0    	sub    0xf02b9e9c,%edx$/;"	l
f01029d6	obj/kern/kernel.asm	/^f01029d6:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01029d9	obj/kern/kernel.asm	/^f01029d9:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01029dc	obj/kern/kernel.asm	/^f01029dc:	89 d0                	mov    %edx,%eax$/;"	l
f01029de	obj/kern/kernel.asm	/^f01029de:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f01029e1	obj/kern/kernel.asm	/^f01029e1:	3b 05 94 9e 2b f0    	cmp    0xf02b9e94,%eax$/;"	l
f01029e7	obj/kern/kernel.asm	/^f01029e7:	72 20                	jb     f0102a09 <mem_init+0x1486>$/;"	l
f01029e9	obj/kern/kernel.asm	/^f01029e9:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f01029ed	obj/kern/kernel.asm	/^f01029ed:	c7 44 24 08 c4 7f 10 	movl   $0xf0107fc4,0x8(%esp)$/;"	l
f01029f4	obj/kern/kernel.asm	/^f01029f4:	f0 $/;"	l
f01029f5	obj/kern/kernel.asm	/^f01029f5:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f01029fc	obj/kern/kernel.asm	/^f01029fc:	00 $/;"	l
f01029fd	obj/kern/kernel.asm	/^f01029fd:	c7 04 24 1d 8f 10 f0 	movl   $0xf0108f1d,(%esp)$/;"	l
f0102a04	obj/kern/kernel.asm	/^f0102a04:	e8 37 d6 ff ff       	call   f0100040 <_panic>$/;"	l
f0102a09	obj/kern/kernel.asm	/^f0102a09:	8d 82 00 00 00 f0    	lea    -0x10000000(%edx),%eax$/;"	l
f0102a0f	obj/kern/kernel.asm	/^f0102a0f:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0102a12	obj/kern/kernel.asm	/^f0102a12:	81 ea 00 f0 ff 0f    	sub    $0xffff000,%edx$/;"	l
f0102a18	obj/kern/kernel.asm	/^f0102a18:	f6 00 01             	testb  $0x1,(%eax)$/;"	l
f0102a1b	obj/kern/kernel.asm	/^f0102a1b:	74 24                	je     f0102a41 <mem_init+0x14be>$/;"	l
f0102a1d	obj/kern/kernel.asm	/^f0102a1d:	c7 44 24 0c db 91 10 	movl   $0xf01091db,0xc(%esp)$/;"	l
f0102a24	obj/kern/kernel.asm	/^f0102a24:	f0 $/;"	l
f0102a25	obj/kern/kernel.asm	/^f0102a25:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f0102a2c	obj/kern/kernel.asm	/^f0102a2c:	f0 $/;"	l
f0102a2d	obj/kern/kernel.asm	/^f0102a2d:	c7 44 24 04 0e 04 00 	movl   $0x40e,0x4(%esp)$/;"	l
f0102a34	obj/kern/kernel.asm	/^f0102a34:	00 $/;"	l
f0102a35	obj/kern/kernel.asm	/^f0102a35:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0102a3c	obj/kern/kernel.asm	/^f0102a3c:	e8 ff d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102a41	obj/kern/kernel.asm	/^f0102a41:	83 c0 04             	add    $0x4,%eax$/;"	l
f0102a44	obj/kern/kernel.asm	/^f0102a44:	39 d0                	cmp    %edx,%eax$/;"	l
f0102a46	obj/kern/kernel.asm	/^f0102a46:	75 d0                	jne    f0102a18 <mem_init+0x1495>$/;"	l
f0102a48	obj/kern/kernel.asm	/^f0102a48:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f0102a4d	obj/kern/kernel.asm	/^f0102a4d:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102a53	obj/kern/kernel.asm	/^f0102a53:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102a56	obj/kern/kernel.asm	/^f0102a56:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f0102a5c	obj/kern/kernel.asm	/^f0102a5c:	8b 4d d0             	mov    -0x30(%ebp),%ecx$/;"	l
f0102a5f	obj/kern/kernel.asm	/^f0102a5f:	89 0d 40 92 2b f0    	mov    %ecx,0xf02b9240$/;"	l
f0102a65	obj/kern/kernel.asm	/^f0102a65:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102a68	obj/kern/kernel.asm	/^f0102a68:	e8 5e e7 ff ff       	call   f01011cb <page_free>$/;"	l
f0102a6d	obj/kern/kernel.asm	/^f0102a6d:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0102a70	obj/kern/kernel.asm	/^f0102a70:	e8 56 e7 ff ff       	call   f01011cb <page_free>$/;"	l
f0102a75	obj/kern/kernel.asm	/^f0102a75:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0102a78	obj/kern/kernel.asm	/^f0102a78:	e8 4e e7 ff ff       	call   f01011cb <page_free>$/;"	l
f0102a7d	obj/kern/kernel.asm	/^f0102a7d:	c7 44 24 04 01 10 00 	movl   $0x1001,0x4(%esp)$/;"	l
f0102a84	obj/kern/kernel.asm	/^f0102a84:	00 $/;"	l
f0102a85	obj/kern/kernel.asm	/^f0102a85:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102a8c	obj/kern/kernel.asm	/^f0102a8c:	e8 84 ea ff ff       	call   f0101515 <mmio_map_region>$/;"	l
f0102a91	obj/kern/kernel.asm	/^f0102a91:	89 c3                	mov    %eax,%ebx$/;"	l
f0102a93	obj/kern/kernel.asm	/^f0102a93:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0102a9a	obj/kern/kernel.asm	/^f0102a9a:	00 $/;"	l
f0102a9b	obj/kern/kernel.asm	/^f0102a9b:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102aa2	obj/kern/kernel.asm	/^f0102aa2:	e8 6e ea ff ff       	call   f0101515 <mmio_map_region>$/;"	l
f0102aa7	obj/kern/kernel.asm	/^f0102aa7:	89 c6                	mov    %eax,%esi$/;"	l
f0102aa9	obj/kern/kernel.asm	/^f0102aa9:	8d 83 a0 1f 00 00    	lea    0x1fa0(%ebx),%eax$/;"	l
f0102aaf	obj/kern/kernel.asm	/^f0102aaf:	3d ff ff bf ef       	cmp    $0xefbfffff,%eax$/;"	l
f0102ab4	obj/kern/kernel.asm	/^f0102ab4:	77 08                	ja     f0102abe <mem_init+0x153b>$/;"	l
f0102ab6	obj/kern/kernel.asm	/^f0102ab6:	81 fb ff ff 7f ef    	cmp    $0xef7fffff,%ebx$/;"	l
f0102abc	obj/kern/kernel.asm	/^f0102abc:	77 24                	ja     f0102ae2 <mem_init+0x155f>$/;"	l
f0102abe	obj/kern/kernel.asm	/^f0102abe:	c7 44 24 0c 98 8b 10 	movl   $0xf0108b98,0xc(%esp)$/;"	l
f0102ac5	obj/kern/kernel.asm	/^f0102ac5:	f0 $/;"	l
f0102ac6	obj/kern/kernel.asm	/^f0102ac6:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f0102acd	obj/kern/kernel.asm	/^f0102acd:	f0 $/;"	l
f0102ace	obj/kern/kernel.asm	/^f0102ace:	c7 44 24 04 1e 04 00 	movl   $0x41e,0x4(%esp)$/;"	l
f0102ad5	obj/kern/kernel.asm	/^f0102ad5:	00 $/;"	l
f0102ad6	obj/kern/kernel.asm	/^f0102ad6:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0102add	obj/kern/kernel.asm	/^f0102add:	e8 5e d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102ae2	obj/kern/kernel.asm	/^f0102ae2:	8d 96 a0 1f 00 00    	lea    0x1fa0(%esi),%edx$/;"	l
f0102ae8	obj/kern/kernel.asm	/^f0102ae8:	81 fa ff ff bf ef    	cmp    $0xefbfffff,%edx$/;"	l
f0102aee	obj/kern/kernel.asm	/^f0102aee:	77 08                	ja     f0102af8 <mem_init+0x1575>$/;"	l
f0102af0	obj/kern/kernel.asm	/^f0102af0:	81 fe ff ff 7f ef    	cmp    $0xef7fffff,%esi$/;"	l
f0102af6	obj/kern/kernel.asm	/^f0102af6:	77 24                	ja     f0102b1c <mem_init+0x1599>$/;"	l
f0102af8	obj/kern/kernel.asm	/^f0102af8:	c7 44 24 0c c0 8b 10 	movl   $0xf0108bc0,0xc(%esp)$/;"	l
f0102aff	obj/kern/kernel.asm	/^f0102aff:	f0 $/;"	l
f0102b00	obj/kern/kernel.asm	/^f0102b00:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f0102b07	obj/kern/kernel.asm	/^f0102b07:	f0 $/;"	l
f0102b08	obj/kern/kernel.asm	/^f0102b08:	c7 44 24 04 1f 04 00 	movl   $0x41f,0x4(%esp)$/;"	l
f0102b0f	obj/kern/kernel.asm	/^f0102b0f:	00 $/;"	l
f0102b10	obj/kern/kernel.asm	/^f0102b10:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0102b17	obj/kern/kernel.asm	/^f0102b17:	e8 24 d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102b1c	obj/kern/kernel.asm	/^f0102b1c:	89 da                	mov    %ebx,%edx$/;"	l
f0102b1e	obj/kern/kernel.asm	/^f0102b1e:	09 f2                	or     %esi,%edx$/;"	l
f0102b20	obj/kern/kernel.asm	/^f0102b20:	f7 c2 ff 0f 00 00    	test   $0xfff,%edx$/;"	l
f0102b26	obj/kern/kernel.asm	/^f0102b26:	74 24                	je     f0102b4c <mem_init+0x15c9>$/;"	l
f0102b28	obj/kern/kernel.asm	/^f0102b28:	c7 44 24 0c e8 8b 10 	movl   $0xf0108be8,0xc(%esp)$/;"	l
f0102b2f	obj/kern/kernel.asm	/^f0102b2f:	f0 $/;"	l
f0102b30	obj/kern/kernel.asm	/^f0102b30:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f0102b37	obj/kern/kernel.asm	/^f0102b37:	f0 $/;"	l
f0102b38	obj/kern/kernel.asm	/^f0102b38:	c7 44 24 04 21 04 00 	movl   $0x421,0x4(%esp)$/;"	l
f0102b3f	obj/kern/kernel.asm	/^f0102b3f:	00 $/;"	l
f0102b40	obj/kern/kernel.asm	/^f0102b40:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0102b47	obj/kern/kernel.asm	/^f0102b47:	e8 f4 d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102b4c	obj/kern/kernel.asm	/^f0102b4c:	39 c6                	cmp    %eax,%esi$/;"	l
f0102b4e	obj/kern/kernel.asm	/^f0102b4e:	73 24                	jae    f0102b74 <mem_init+0x15f1>$/;"	l
f0102b50	obj/kern/kernel.asm	/^f0102b50:	c7 44 24 0c f2 91 10 	movl   $0xf01091f2,0xc(%esp)$/;"	l
f0102b57	obj/kern/kernel.asm	/^f0102b57:	f0 $/;"	l
f0102b58	obj/kern/kernel.asm	/^f0102b58:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f0102b5f	obj/kern/kernel.asm	/^f0102b5f:	f0 $/;"	l
f0102b60	obj/kern/kernel.asm	/^f0102b60:	c7 44 24 04 23 04 00 	movl   $0x423,0x4(%esp)$/;"	l
f0102b67	obj/kern/kernel.asm	/^f0102b67:	00 $/;"	l
f0102b68	obj/kern/kernel.asm	/^f0102b68:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0102b6f	obj/kern/kernel.asm	/^f0102b6f:	e8 cc d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102b74	obj/kern/kernel.asm	/^f0102b74:	8b 3d 98 9e 2b f0    	mov    0xf02b9e98,%edi$/;"	l
f0102b7a	obj/kern/kernel.asm	/^f0102b7a:	89 da                	mov    %ebx,%edx$/;"	l
f0102b7c	obj/kern/kernel.asm	/^f0102b7c:	89 f8                	mov    %edi,%eax$/;"	l
f0102b7e	obj/kern/kernel.asm	/^f0102b7e:	e8 72 e0 ff ff       	call   f0100bf5 <check_va2pa>$/;"	l
f0102b83	obj/kern/kernel.asm	/^f0102b83:	85 c0                	test   %eax,%eax$/;"	l
f0102b85	obj/kern/kernel.asm	/^f0102b85:	74 24                	je     f0102bab <mem_init+0x1628>$/;"	l
f0102b87	obj/kern/kernel.asm	/^f0102b87:	c7 44 24 0c 10 8c 10 	movl   $0xf0108c10,0xc(%esp)$/;"	l
f0102b8e	obj/kern/kernel.asm	/^f0102b8e:	f0 $/;"	l
f0102b8f	obj/kern/kernel.asm	/^f0102b8f:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f0102b96	obj/kern/kernel.asm	/^f0102b96:	f0 $/;"	l
f0102b97	obj/kern/kernel.asm	/^f0102b97:	c7 44 24 04 25 04 00 	movl   $0x425,0x4(%esp)$/;"	l
f0102b9e	obj/kern/kernel.asm	/^f0102b9e:	00 $/;"	l
f0102b9f	obj/kern/kernel.asm	/^f0102b9f:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0102ba6	obj/kern/kernel.asm	/^f0102ba6:	e8 95 d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102bab	obj/kern/kernel.asm	/^f0102bab:	8d 83 00 10 00 00    	lea    0x1000(%ebx),%eax$/;"	l
f0102bb1	obj/kern/kernel.asm	/^f0102bb1:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0102bb4	obj/kern/kernel.asm	/^f0102bb4:	89 c2                	mov    %eax,%edx$/;"	l
f0102bb6	obj/kern/kernel.asm	/^f0102bb6:	89 f8                	mov    %edi,%eax$/;"	l
f0102bb8	obj/kern/kernel.asm	/^f0102bb8:	e8 38 e0 ff ff       	call   f0100bf5 <check_va2pa>$/;"	l
f0102bbd	obj/kern/kernel.asm	/^f0102bbd:	3d 00 10 00 00       	cmp    $0x1000,%eax$/;"	l
f0102bc2	obj/kern/kernel.asm	/^f0102bc2:	74 24                	je     f0102be8 <mem_init+0x1665>$/;"	l
f0102bc4	obj/kern/kernel.asm	/^f0102bc4:	c7 44 24 0c 34 8c 10 	movl   $0xf0108c34,0xc(%esp)$/;"	l
f0102bcb	obj/kern/kernel.asm	/^f0102bcb:	f0 $/;"	l
f0102bcc	obj/kern/kernel.asm	/^f0102bcc:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f0102bd3	obj/kern/kernel.asm	/^f0102bd3:	f0 $/;"	l
f0102bd4	obj/kern/kernel.asm	/^f0102bd4:	c7 44 24 04 26 04 00 	movl   $0x426,0x4(%esp)$/;"	l
f0102bdb	obj/kern/kernel.asm	/^f0102bdb:	00 $/;"	l
f0102bdc	obj/kern/kernel.asm	/^f0102bdc:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0102be3	obj/kern/kernel.asm	/^f0102be3:	e8 58 d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102be8	obj/kern/kernel.asm	/^f0102be8:	89 f2                	mov    %esi,%edx$/;"	l
f0102bea	obj/kern/kernel.asm	/^f0102bea:	89 f8                	mov    %edi,%eax$/;"	l
f0102bec	obj/kern/kernel.asm	/^f0102bec:	e8 04 e0 ff ff       	call   f0100bf5 <check_va2pa>$/;"	l
f0102bf1	obj/kern/kernel.asm	/^f0102bf1:	85 c0                	test   %eax,%eax$/;"	l
f0102bf3	obj/kern/kernel.asm	/^f0102bf3:	74 24                	je     f0102c19 <mem_init+0x1696>$/;"	l
f0102bf5	obj/kern/kernel.asm	/^f0102bf5:	c7 44 24 0c 64 8c 10 	movl   $0xf0108c64,0xc(%esp)$/;"	l
f0102bfc	obj/kern/kernel.asm	/^f0102bfc:	f0 $/;"	l
f0102bfd	obj/kern/kernel.asm	/^f0102bfd:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f0102c04	obj/kern/kernel.asm	/^f0102c04:	f0 $/;"	l
f0102c05	obj/kern/kernel.asm	/^f0102c05:	c7 44 24 04 27 04 00 	movl   $0x427,0x4(%esp)$/;"	l
f0102c0c	obj/kern/kernel.asm	/^f0102c0c:	00 $/;"	l
f0102c0d	obj/kern/kernel.asm	/^f0102c0d:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0102c14	obj/kern/kernel.asm	/^f0102c14:	e8 27 d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102c19	obj/kern/kernel.asm	/^f0102c19:	8d 96 00 10 00 00    	lea    0x1000(%esi),%edx$/;"	l
f0102c1f	obj/kern/kernel.asm	/^f0102c1f:	89 f8                	mov    %edi,%eax$/;"	l
f0102c21	obj/kern/kernel.asm	/^f0102c21:	e8 cf df ff ff       	call   f0100bf5 <check_va2pa>$/;"	l
f0102c26	obj/kern/kernel.asm	/^f0102c26:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102c29	obj/kern/kernel.asm	/^f0102c29:	74 24                	je     f0102c4f <mem_init+0x16cc>$/;"	l
f0102c2b	obj/kern/kernel.asm	/^f0102c2b:	c7 44 24 0c 88 8c 10 	movl   $0xf0108c88,0xc(%esp)$/;"	l
f0102c32	obj/kern/kernel.asm	/^f0102c32:	f0 $/;"	l
f0102c33	obj/kern/kernel.asm	/^f0102c33:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f0102c3a	obj/kern/kernel.asm	/^f0102c3a:	f0 $/;"	l
f0102c3b	obj/kern/kernel.asm	/^f0102c3b:	c7 44 24 04 28 04 00 	movl   $0x428,0x4(%esp)$/;"	l
f0102c42	obj/kern/kernel.asm	/^f0102c42:	00 $/;"	l
f0102c43	obj/kern/kernel.asm	/^f0102c43:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0102c4a	obj/kern/kernel.asm	/^f0102c4a:	e8 f1 d3 ff ff       	call   f0100040 <_panic>$/;"	l
f0102c4f	obj/kern/kernel.asm	/^f0102c4f:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0102c56	obj/kern/kernel.asm	/^f0102c56:	00 $/;"	l
f0102c57	obj/kern/kernel.asm	/^f0102c57:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0102c5b	obj/kern/kernel.asm	/^f0102c5b:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0102c5e	obj/kern/kernel.asm	/^f0102c5e:	e8 e7 e5 ff ff       	call   f010124a <pgdir_walk>$/;"	l
f0102c63	obj/kern/kernel.asm	/^f0102c63:	f6 00 1a             	testb  $0x1a,(%eax)$/;"	l
f0102c66	obj/kern/kernel.asm	/^f0102c66:	75 24                	jne    f0102c8c <mem_init+0x1709>$/;"	l
f0102c68	obj/kern/kernel.asm	/^f0102c68:	c7 44 24 0c b4 8c 10 	movl   $0xf0108cb4,0xc(%esp)$/;"	l
f0102c6f	obj/kern/kernel.asm	/^f0102c6f:	f0 $/;"	l
f0102c70	obj/kern/kernel.asm	/^f0102c70:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f0102c77	obj/kern/kernel.asm	/^f0102c77:	f0 $/;"	l
f0102c78	obj/kern/kernel.asm	/^f0102c78:	c7 44 24 04 2a 04 00 	movl   $0x42a,0x4(%esp)$/;"	l
f0102c7f	obj/kern/kernel.asm	/^f0102c7f:	00 $/;"	l
f0102c80	obj/kern/kernel.asm	/^f0102c80:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0102c87	obj/kern/kernel.asm	/^f0102c87:	e8 b4 d3 ff ff       	call   f0100040 <_panic>$/;"	l
f0102c8c	obj/kern/kernel.asm	/^f0102c8c:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0102c93	obj/kern/kernel.asm	/^f0102c93:	00 $/;"	l
f0102c94	obj/kern/kernel.asm	/^f0102c94:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0102c98	obj/kern/kernel.asm	/^f0102c98:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f0102c9d	obj/kern/kernel.asm	/^f0102c9d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102ca0	obj/kern/kernel.asm	/^f0102ca0:	e8 a5 e5 ff ff       	call   f010124a <pgdir_walk>$/;"	l
f0102ca5	obj/kern/kernel.asm	/^f0102ca5:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0102ca8	obj/kern/kernel.asm	/^f0102ca8:	74 24                	je     f0102cce <mem_init+0x174b>$/;"	l
f0102caa	obj/kern/kernel.asm	/^f0102caa:	c7 44 24 0c f8 8c 10 	movl   $0xf0108cf8,0xc(%esp)$/;"	l
f0102cb1	obj/kern/kernel.asm	/^f0102cb1:	f0 $/;"	l
f0102cb2	obj/kern/kernel.asm	/^f0102cb2:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f0102cb9	obj/kern/kernel.asm	/^f0102cb9:	f0 $/;"	l
f0102cba	obj/kern/kernel.asm	/^f0102cba:	c7 44 24 04 2b 04 00 	movl   $0x42b,0x4(%esp)$/;"	l
f0102cc1	obj/kern/kernel.asm	/^f0102cc1:	00 $/;"	l
f0102cc2	obj/kern/kernel.asm	/^f0102cc2:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0102cc9	obj/kern/kernel.asm	/^f0102cc9:	e8 72 d3 ff ff       	call   f0100040 <_panic>$/;"	l
f0102cce	obj/kern/kernel.asm	/^f0102cce:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0102cd5	obj/kern/kernel.asm	/^f0102cd5:	00 $/;"	l
f0102cd6	obj/kern/kernel.asm	/^f0102cd6:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0102cda	obj/kern/kernel.asm	/^f0102cda:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f0102cdf	obj/kern/kernel.asm	/^f0102cdf:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102ce2	obj/kern/kernel.asm	/^f0102ce2:	e8 63 e5 ff ff       	call   f010124a <pgdir_walk>$/;"	l
f0102ce7	obj/kern/kernel.asm	/^f0102ce7:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102ced	obj/kern/kernel.asm	/^f0102ced:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0102cf4	obj/kern/kernel.asm	/^f0102cf4:	00 $/;"	l
f0102cf5	obj/kern/kernel.asm	/^f0102cf5:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102cf8	obj/kern/kernel.asm	/^f0102cf8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0102cfc	obj/kern/kernel.asm	/^f0102cfc:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f0102d01	obj/kern/kernel.asm	/^f0102d01:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102d04	obj/kern/kernel.asm	/^f0102d04:	e8 41 e5 ff ff       	call   f010124a <pgdir_walk>$/;"	l
f0102d09	obj/kern/kernel.asm	/^f0102d09:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102d0f	obj/kern/kernel.asm	/^f0102d0f:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0102d16	obj/kern/kernel.asm	/^f0102d16:	00 $/;"	l
f0102d17	obj/kern/kernel.asm	/^f0102d17:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0102d1b	obj/kern/kernel.asm	/^f0102d1b:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f0102d20	obj/kern/kernel.asm	/^f0102d20:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102d23	obj/kern/kernel.asm	/^f0102d23:	e8 22 e5 ff ff       	call   f010124a <pgdir_walk>$/;"	l
f0102d28	obj/kern/kernel.asm	/^f0102d28:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102d2e	obj/kern/kernel.asm	/^f0102d2e:	c7 04 24 04 92 10 f0 	movl   $0xf0109204,(%esp)$/;"	l
f0102d35	obj/kern/kernel.asm	/^f0102d35:	e8 b2 12 00 00       	call   f0103fec <cprintf>$/;"	l
f0102d3a	obj/kern/kernel.asm	/^f0102d3a:	a1 9c 9e 2b f0       	mov    0xf02b9e9c,%eax$/;"	l
f0102d3f	obj/kern/kernel.asm	/^f0102d3f:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102d44	obj/kern/kernel.asm	/^f0102d44:	77 20                	ja     f0102d66 <mem_init+0x17e3>$/;"	l
f0102d46	obj/kern/kernel.asm	/^f0102d46:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102d4a	obj/kern/kernel.asm	/^f0102d4a:	c7 44 24 08 e8 7f 10 	movl   $0xf0107fe8,0x8(%esp)$/;"	l
f0102d51	obj/kern/kernel.asm	/^f0102d51:	f0 $/;"	l
f0102d52	obj/kern/kernel.asm	/^f0102d52:	c7 44 24 04 bd 00 00 	movl   $0xbd,0x4(%esp)$/;"	l
f0102d59	obj/kern/kernel.asm	/^f0102d59:	00 $/;"	l
f0102d5a	obj/kern/kernel.asm	/^f0102d5a:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0102d61	obj/kern/kernel.asm	/^f0102d61:	e8 da d2 ff ff       	call   f0100040 <_panic>$/;"	l
f0102d66	obj/kern/kernel.asm	/^f0102d66:	8b 15 94 9e 2b f0    	mov    0xf02b9e94,%edx$/;"	l
f0102d6c	obj/kern/kernel.asm	/^f0102d6c:	8d 0c d5 ff 0f 00 00 	lea    0xfff(,%edx,8),%ecx$/;"	l
f0102d73	obj/kern/kernel.asm	/^f0102d73:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f0102d79	obj/kern/kernel.asm	/^f0102d79:	c7 44 24 04 04 00 00 	movl   $0x4,0x4(%esp)$/;"	l
f0102d80	obj/kern/kernel.asm	/^f0102d80:	00 $/;"	l
f0102d81	obj/kern/kernel.asm	/^f0102d81:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0102d86	obj/kern/kernel.asm	/^f0102d86:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102d89	obj/kern/kernel.asm	/^f0102d89:	ba 00 00 00 ef       	mov    $0xef000000,%edx$/;"	l
f0102d8e	obj/kern/kernel.asm	/^f0102d8e:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f0102d93	obj/kern/kernel.asm	/^f0102d93:	e8 92 e5 ff ff       	call   f010132a <boot_map_region>$/;"	l
f0102d98	obj/kern/kernel.asm	/^f0102d98:	a1 48 92 2b f0       	mov    0xf02b9248,%eax$/;"	l
f0102d9d	obj/kern/kernel.asm	/^f0102d9d:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102da2	obj/kern/kernel.asm	/^f0102da2:	77 20                	ja     f0102dc4 <mem_init+0x1841>$/;"	l
f0102da4	obj/kern/kernel.asm	/^f0102da4:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102da8	obj/kern/kernel.asm	/^f0102da8:	c7 44 24 08 e8 7f 10 	movl   $0xf0107fe8,0x8(%esp)$/;"	l
f0102daf	obj/kern/kernel.asm	/^f0102daf:	f0 $/;"	l
f0102db0	obj/kern/kernel.asm	/^f0102db0:	c7 44 24 04 c6 00 00 	movl   $0xc6,0x4(%esp)$/;"	l
f0102db7	obj/kern/kernel.asm	/^f0102db7:	00 $/;"	l
f0102db8	obj/kern/kernel.asm	/^f0102db8:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0102dbf	obj/kern/kernel.asm	/^f0102dbf:	e8 7c d2 ff ff       	call   f0100040 <_panic>$/;"	l
f0102dc4	obj/kern/kernel.asm	/^f0102dc4:	c7 44 24 04 04 00 00 	movl   $0x4,0x4(%esp)$/;"	l
f0102dcb	obj/kern/kernel.asm	/^f0102dcb:	00 $/;"	l
f0102dcc	obj/kern/kernel.asm	/^f0102dcc:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0102dd1	obj/kern/kernel.asm	/^f0102dd1:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102dd4	obj/kern/kernel.asm	/^f0102dd4:	b9 00 f0 01 00       	mov    $0x1f000,%ecx$/;"	l
f0102dd9	obj/kern/kernel.asm	/^f0102dd9:	ba 00 00 c0 ee       	mov    $0xeec00000,%edx$/;"	l
f0102dde	obj/kern/kernel.asm	/^f0102dde:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f0102de3	obj/kern/kernel.asm	/^f0102de3:	e8 42 e5 ff ff       	call   f010132a <boot_map_region>$/;"	l
f0102de8	obj/kern/kernel.asm	/^f0102de8:	b8 00 b0 11 f0       	mov    $0xf011b000,%eax$/;"	l
f0102ded	obj/kern/kernel.asm	/^f0102ded:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102df2	obj/kern/kernel.asm	/^f0102df2:	77 20                	ja     f0102e14 <mem_init+0x1891>$/;"	l
f0102df4	obj/kern/kernel.asm	/^f0102df4:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102df8	obj/kern/kernel.asm	/^f0102df8:	c7 44 24 08 e8 7f 10 	movl   $0xf0107fe8,0x8(%esp)$/;"	l
f0102dff	obj/kern/kernel.asm	/^f0102dff:	f0 $/;"	l
f0102e00	obj/kern/kernel.asm	/^f0102e00:	c7 44 24 04 d3 00 00 	movl   $0xd3,0x4(%esp)$/;"	l
f0102e07	obj/kern/kernel.asm	/^f0102e07:	00 $/;"	l
f0102e08	obj/kern/kernel.asm	/^f0102e08:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0102e0f	obj/kern/kernel.asm	/^f0102e0f:	e8 2c d2 ff ff       	call   f0100040 <_panic>$/;"	l
f0102e14	obj/kern/kernel.asm	/^f0102e14:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
f0102e1b	obj/kern/kernel.asm	/^f0102e1b:	00 $/;"	l
f0102e1c	obj/kern/kernel.asm	/^f0102e1c:	c7 04 24 00 b0 11 00 	movl   $0x11b000,(%esp)$/;"	l
f0102e23	obj/kern/kernel.asm	/^f0102e23:	b9 00 80 00 00       	mov    $0x8000,%ecx$/;"	l
f0102e28	obj/kern/kernel.asm	/^f0102e28:	ba 00 80 ff ef       	mov    $0xefff8000,%edx$/;"	l
f0102e2d	obj/kern/kernel.asm	/^f0102e2d:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f0102e32	obj/kern/kernel.asm	/^f0102e32:	e8 f3 e4 ff ff       	call   f010132a <boot_map_region>$/;"	l
f0102e37	obj/kern/kernel.asm	/^f0102e37:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
f0102e3e	obj/kern/kernel.asm	/^f0102e3e:	00 $/;"	l
f0102e3f	obj/kern/kernel.asm	/^f0102e3f:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102e46	obj/kern/kernel.asm	/^f0102e46:	b9 ff ff ff 0f       	mov    $0xfffffff,%ecx$/;"	l
f0102e4b	obj/kern/kernel.asm	/^f0102e4b:	ba 00 00 00 f0       	mov    $0xf0000000,%edx$/;"	l
f0102e50	obj/kern/kernel.asm	/^f0102e50:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f0102e55	obj/kern/kernel.asm	/^f0102e55:	e8 d0 e4 ff ff       	call   f010132a <boot_map_region>$/;"	l
f0102e5a	obj/kern/kernel.asm	/^f0102e5a:	bf 00 b0 2f f0       	mov    $0xf02fb000,%edi$/;"	l
f0102e5f	obj/kern/kernel.asm	/^f0102e5f:	bb 00 b0 2b f0       	mov    $0xf02bb000,%ebx$/;"	l
f0102e64	obj/kern/kernel.asm	/^f0102e64:	be 00 80 ff ef       	mov    $0xefff8000,%esi$/;"	l
f0102e69	obj/kern/kernel.asm	/^f0102e69:	81 fb ff ff ff ef    	cmp    $0xefffffff,%ebx$/;"	l
f0102e6f	obj/kern/kernel.asm	/^f0102e6f:	77 20                	ja     f0102e91 <mem_init+0x190e>$/;"	l
f0102e71	obj/kern/kernel.asm	/^f0102e71:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f0102e75	obj/kern/kernel.asm	/^f0102e75:	c7 44 24 08 e8 7f 10 	movl   $0xf0107fe8,0x8(%esp)$/;"	l
f0102e7c	obj/kern/kernel.asm	/^f0102e7c:	f0 $/;"	l
f0102e7d	obj/kern/kernel.asm	/^f0102e7d:	c7 44 24 04 18 01 00 	movl   $0x118,0x4(%esp)$/;"	l
f0102e84	obj/kern/kernel.asm	/^f0102e84:	00 $/;"	l
f0102e85	obj/kern/kernel.asm	/^f0102e85:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0102e8c	obj/kern/kernel.asm	/^f0102e8c:	e8 af d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102e91	obj/kern/kernel.asm	/^f0102e91:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
f0102e98	obj/kern/kernel.asm	/^f0102e98:	00 $/;"	l
f0102e99	obj/kern/kernel.asm	/^f0102e99:	8d 83 00 00 00 10    	lea    0x10000000(%ebx),%eax$/;"	l
f0102e9f	obj/kern/kernel.asm	/^f0102e9f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102ea2	obj/kern/kernel.asm	/^f0102ea2:	b9 00 80 00 00       	mov    $0x8000,%ecx$/;"	l
f0102ea7	obj/kern/kernel.asm	/^f0102ea7:	89 f2                	mov    %esi,%edx$/;"	l
f0102ea9	obj/kern/kernel.asm	/^f0102ea9:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f0102eae	obj/kern/kernel.asm	/^f0102eae:	e8 77 e4 ff ff       	call   f010132a <boot_map_region>$/;"	l
f0102eb3	obj/kern/kernel.asm	/^f0102eb3:	81 c3 00 80 00 00    	add    $0x8000,%ebx$/;"	l
f0102eb9	obj/kern/kernel.asm	/^f0102eb9:	81 ee 00 00 01 00    	sub    $0x10000,%esi$/;"	l
f0102ebf	obj/kern/kernel.asm	/^f0102ebf:	39 fb                	cmp    %edi,%ebx$/;"	l
f0102ec1	obj/kern/kernel.asm	/^f0102ec1:	75 a6                	jne    f0102e69 <mem_init+0x18e6>$/;"	l
f0102ec3	obj/kern/kernel.asm	/^f0102ec3:	8b 3d 98 9e 2b f0    	mov    0xf02b9e98,%edi$/;"	l
f0102ec9	obj/kern/kernel.asm	/^f0102ec9:	a1 94 9e 2b f0       	mov    0xf02b9e94,%eax$/;"	l
f0102ece	obj/kern/kernel.asm	/^f0102ece:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0102ed1	obj/kern/kernel.asm	/^f0102ed1:	8d 04 c5 ff 0f 00 00 	lea    0xfff(,%eax,8),%eax$/;"	l
f0102ed8	obj/kern/kernel.asm	/^f0102ed8:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0102edd	obj/kern/kernel.asm	/^f0102edd:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0102ee0	obj/kern/kernel.asm	/^f0102ee0:	8b 35 9c 9e 2b f0    	mov    0xf02b9e9c,%esi$/;"	l
f0102ee6	obj/kern/kernel.asm	/^f0102ee6:	89 75 cc             	mov    %esi,-0x34(%ebp)$/;"	l
f0102ee9	obj/kern/kernel.asm	/^f0102ee9:	8d 86 00 00 00 10    	lea    0x10000000(%esi),%eax$/;"	l
f0102eef	obj/kern/kernel.asm	/^f0102eef:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f0102ef2	obj/kern/kernel.asm	/^f0102ef2:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0102ef7	obj/kern/kernel.asm	/^f0102ef7:	eb 6a                	jmp    f0102f63 <mem_init+0x19e0>$/;"	l
f0102ef9	obj/kern/kernel.asm	/^f0102ef9:	8d 93 00 00 00 ef    	lea    -0x11000000(%ebx),%edx$/;"	l
f0102eff	obj/kern/kernel.asm	/^f0102eff:	89 f8                	mov    %edi,%eax$/;"	l
f0102f01	obj/kern/kernel.asm	/^f0102f01:	e8 ef dc ff ff       	call   f0100bf5 <check_va2pa>$/;"	l
f0102f06	obj/kern/kernel.asm	/^f0102f06:	81 7d cc ff ff ff ef 	cmpl   $0xefffffff,-0x34(%ebp)$/;"	l
f0102f0d	obj/kern/kernel.asm	/^f0102f0d:	77 20                	ja     f0102f2f <mem_init+0x19ac>$/;"	l
f0102f0f	obj/kern/kernel.asm	/^f0102f0f:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f0102f13	obj/kern/kernel.asm	/^f0102f13:	c7 44 24 08 e8 7f 10 	movl   $0xf0107fe8,0x8(%esp)$/;"	l
f0102f1a	obj/kern/kernel.asm	/^f0102f1a:	f0 $/;"	l
f0102f1b	obj/kern/kernel.asm	/^f0102f1b:	c7 44 24 04 43 03 00 	movl   $0x343,0x4(%esp)$/;"	l
f0102f22	obj/kern/kernel.asm	/^f0102f22:	00 $/;"	l
f0102f23	obj/kern/kernel.asm	/^f0102f23:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0102f2a	obj/kern/kernel.asm	/^f0102f2a:	e8 11 d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102f2f	obj/kern/kernel.asm	/^f0102f2f:	8b 4d c8             	mov    -0x38(%ebp),%ecx$/;"	l
f0102f32	obj/kern/kernel.asm	/^f0102f32:	8d 14 0b             	lea    (%ebx,%ecx,1),%edx$/;"	l
f0102f35	obj/kern/kernel.asm	/^f0102f35:	39 d0                	cmp    %edx,%eax$/;"	l
f0102f37	obj/kern/kernel.asm	/^f0102f37:	74 24                	je     f0102f5d <mem_init+0x19da>$/;"	l
f0102f39	obj/kern/kernel.asm	/^f0102f39:	c7 44 24 0c 2c 8d 10 	movl   $0xf0108d2c,0xc(%esp)$/;"	l
f0102f40	obj/kern/kernel.asm	/^f0102f40:	f0 $/;"	l
f0102f41	obj/kern/kernel.asm	/^f0102f41:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f0102f48	obj/kern/kernel.asm	/^f0102f48:	f0 $/;"	l
f0102f49	obj/kern/kernel.asm	/^f0102f49:	c7 44 24 04 43 03 00 	movl   $0x343,0x4(%esp)$/;"	l
f0102f50	obj/kern/kernel.asm	/^f0102f50:	00 $/;"	l
f0102f51	obj/kern/kernel.asm	/^f0102f51:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0102f58	obj/kern/kernel.asm	/^f0102f58:	e8 e3 d0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102f5d	obj/kern/kernel.asm	/^f0102f5d:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102f63	obj/kern/kernel.asm	/^f0102f63:	39 5d d0             	cmp    %ebx,-0x30(%ebp)$/;"	l
f0102f66	obj/kern/kernel.asm	/^f0102f66:	77 91                	ja     f0102ef9 <mem_init+0x1976>$/;"	l
f0102f68	obj/kern/kernel.asm	/^f0102f68:	8b 1d 48 92 2b f0    	mov    0xf02b9248,%ebx$/;"	l
f0102f6e	obj/kern/kernel.asm	/^f0102f6e:	89 de                	mov    %ebx,%esi$/;"	l
f0102f70	obj/kern/kernel.asm	/^f0102f70:	ba 00 00 c0 ee       	mov    $0xeec00000,%edx$/;"	l
f0102f75	obj/kern/kernel.asm	/^f0102f75:	89 f8                	mov    %edi,%eax$/;"	l
f0102f77	obj/kern/kernel.asm	/^f0102f77:	e8 79 dc ff ff       	call   f0100bf5 <check_va2pa>$/;"	l
f0102f7c	obj/kern/kernel.asm	/^f0102f7c:	81 fb ff ff ff ef    	cmp    $0xefffffff,%ebx$/;"	l
f0102f82	obj/kern/kernel.asm	/^f0102f82:	77 20                	ja     f0102fa4 <mem_init+0x1a21>$/;"	l
f0102f84	obj/kern/kernel.asm	/^f0102f84:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f0102f88	obj/kern/kernel.asm	/^f0102f88:	c7 44 24 08 e8 7f 10 	movl   $0xf0107fe8,0x8(%esp)$/;"	l
f0102f8f	obj/kern/kernel.asm	/^f0102f8f:	f0 $/;"	l
f0102f90	obj/kern/kernel.asm	/^f0102f90:	c7 44 24 04 48 03 00 	movl   $0x348,0x4(%esp)$/;"	l
f0102f97	obj/kern/kernel.asm	/^f0102f97:	00 $/;"	l
f0102f98	obj/kern/kernel.asm	/^f0102f98:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0102f9f	obj/kern/kernel.asm	/^f0102f9f:	e8 9c d0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102fa4	obj/kern/kernel.asm	/^f0102fa4:	bb 00 00 c0 ee       	mov    $0xeec00000,%ebx$/;"	l
f0102fa9	obj/kern/kernel.asm	/^f0102fa9:	81 c6 00 00 40 21    	add    $0x21400000,%esi$/;"	l
f0102faf	obj/kern/kernel.asm	/^f0102faf:	8d 14 1e             	lea    (%esi,%ebx,1),%edx$/;"	l
f0102fb2	obj/kern/kernel.asm	/^f0102fb2:	39 d0                	cmp    %edx,%eax$/;"	l
f0102fb4	obj/kern/kernel.asm	/^f0102fb4:	74 24                	je     f0102fda <mem_init+0x1a57>$/;"	l
f0102fb6	obj/kern/kernel.asm	/^f0102fb6:	c7 44 24 0c 60 8d 10 	movl   $0xf0108d60,0xc(%esp)$/;"	l
f0102fbd	obj/kern/kernel.asm	/^f0102fbd:	f0 $/;"	l
f0102fbe	obj/kern/kernel.asm	/^f0102fbe:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f0102fc5	obj/kern/kernel.asm	/^f0102fc5:	f0 $/;"	l
f0102fc6	obj/kern/kernel.asm	/^f0102fc6:	c7 44 24 04 48 03 00 	movl   $0x348,0x4(%esp)$/;"	l
f0102fcd	obj/kern/kernel.asm	/^f0102fcd:	00 $/;"	l
f0102fce	obj/kern/kernel.asm	/^f0102fce:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0102fd5	obj/kern/kernel.asm	/^f0102fd5:	e8 66 d0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102fda	obj/kern/kernel.asm	/^f0102fda:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102fe0	obj/kern/kernel.asm	/^f0102fe0:	81 fb 00 f0 c1 ee    	cmp    $0xeec1f000,%ebx$/;"	l
f0102fe6	obj/kern/kernel.asm	/^f0102fe6:	0f 85 a9 05 00 00    	jne    f0103595 <mem_init+0x2012>$/;"	l
f0102fec	obj/kern/kernel.asm	/^f0102fec:	8b 75 d4             	mov    -0x2c(%ebp),%esi$/;"	l
f0102fef	obj/kern/kernel.asm	/^f0102fef:	c1 e6 0c             	shl    $0xc,%esi$/;"	l
f0102ff2	obj/kern/kernel.asm	/^f0102ff2:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0102ff7	obj/kern/kernel.asm	/^f0102ff7:	eb 3b                	jmp    f0103034 <mem_init+0x1ab1>$/;"	l
f0102ff9	obj/kern/kernel.asm	/^f0102ff9:	8d 93 00 00 00 f0    	lea    -0x10000000(%ebx),%edx$/;"	l
f0102fff	obj/kern/kernel.asm	/^f0102fff:	89 f8                	mov    %edi,%eax$/;"	l
f0103001	obj/kern/kernel.asm	/^f0103001:	e8 ef db ff ff       	call   f0100bf5 <check_va2pa>$/;"	l
f0103006	obj/kern/kernel.asm	/^f0103006:	39 c3                	cmp    %eax,%ebx$/;"	l
f0103008	obj/kern/kernel.asm	/^f0103008:	74 24                	je     f010302e <mem_init+0x1aab>$/;"	l
f010300a	obj/kern/kernel.asm	/^f010300a:	c7 44 24 0c 94 8d 10 	movl   $0xf0108d94,0xc(%esp)$/;"	l
f0103011	obj/kern/kernel.asm	/^f0103011:	f0 $/;"	l
f0103012	obj/kern/kernel.asm	/^f0103012:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f0103019	obj/kern/kernel.asm	/^f0103019:	f0 $/;"	l
f010301a	obj/kern/kernel.asm	/^f010301a:	c7 44 24 04 4c 03 00 	movl   $0x34c,0x4(%esp)$/;"	l
f0103021	obj/kern/kernel.asm	/^f0103021:	00 $/;"	l
f0103022	obj/kern/kernel.asm	/^f0103022:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0103029	obj/kern/kernel.asm	/^f0103029:	e8 12 d0 ff ff       	call   f0100040 <_panic>$/;"	l
f010302e	obj/kern/kernel.asm	/^f010302e:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0103034	obj/kern/kernel.asm	/^f0103034:	39 f3                	cmp    %esi,%ebx$/;"	l
f0103036	obj/kern/kernel.asm	/^f0103036:	72 c1                	jb     f0102ff9 <mem_init+0x1a76>$/;"	l
f0103038	obj/kern/kernel.asm	/^f0103038:	c7 45 d0 00 b0 2b f0 	movl   $0xf02bb000,-0x30(%ebp)$/;"	l
f010303f	obj/kern/kernel.asm	/^f010303f:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)$/;"	l
f0103046	obj/kern/kernel.asm	/^f0103046:	be 00 80 ff ef       	mov    $0xefff8000,%esi$/;"	l
f010304b	obj/kern/kernel.asm	/^f010304b:	b8 00 b0 2b f0       	mov    $0xf02bb000,%eax$/;"	l
f0103050	obj/kern/kernel.asm	/^f0103050:	05 00 80 00 20       	add    $0x20008000,%eax$/;"	l
f0103055	obj/kern/kernel.asm	/^f0103055:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f0103058	obj/kern/kernel.asm	/^f0103058:	8d 86 00 80 00 00    	lea    0x8000(%esi),%eax$/;"	l
f010305e	obj/kern/kernel.asm	/^f010305e:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0103061	obj/kern/kernel.asm	/^f0103061:	89 f2                	mov    %esi,%edx$/;"	l
f0103063	obj/kern/kernel.asm	/^f0103063:	89 f8                	mov    %edi,%eax$/;"	l
f0103065	obj/kern/kernel.asm	/^f0103065:	e8 8b db ff ff       	call   f0100bf5 <check_va2pa>$/;"	l
f010306a	obj/kern/kernel.asm	/^f010306a:	8b 4d d0             	mov    -0x30(%ebp),%ecx$/;"	l
f010306d	obj/kern/kernel.asm	/^f010306d:	81 f9 ff ff ff ef    	cmp    $0xefffffff,%ecx$/;"	l
f0103073	obj/kern/kernel.asm	/^f0103073:	77 20                	ja     f0103095 <mem_init+0x1b12>$/;"	l
f0103075	obj/kern/kernel.asm	/^f0103075:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f0103079	obj/kern/kernel.asm	/^f0103079:	c7 44 24 08 e8 7f 10 	movl   $0xf0107fe8,0x8(%esp)$/;"	l
f0103080	obj/kern/kernel.asm	/^f0103080:	f0 $/;"	l
f0103081	obj/kern/kernel.asm	/^f0103081:	c7 44 24 04 54 03 00 	movl   $0x354,0x4(%esp)$/;"	l
f0103088	obj/kern/kernel.asm	/^f0103088:	00 $/;"	l
f0103089	obj/kern/kernel.asm	/^f0103089:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0103090	obj/kern/kernel.asm	/^f0103090:	e8 ab cf ff ff       	call   f0100040 <_panic>$/;"	l
f0103095	obj/kern/kernel.asm	/^f0103095:	89 f3                	mov    %esi,%ebx$/;"	l
f0103097	obj/kern/kernel.asm	/^f0103097:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
f010309a	obj/kern/kernel.asm	/^f010309a:	03 4d d4             	add    -0x2c(%ebp),%ecx$/;"	l
f010309d	obj/kern/kernel.asm	/^f010309d:	89 4d c8             	mov    %ecx,-0x38(%ebp)$/;"	l
f01030a0	obj/kern/kernel.asm	/^f01030a0:	8b 4d c8             	mov    -0x38(%ebp),%ecx$/;"	l
f01030a3	obj/kern/kernel.asm	/^f01030a3:	8d 14 19             	lea    (%ecx,%ebx,1),%edx$/;"	l
f01030a6	obj/kern/kernel.asm	/^f01030a6:	39 c2                	cmp    %eax,%edx$/;"	l
f01030a8	obj/kern/kernel.asm	/^f01030a8:	74 24                	je     f01030ce <mem_init+0x1b4b>$/;"	l
f01030aa	obj/kern/kernel.asm	/^f01030aa:	c7 44 24 0c bc 8d 10 	movl   $0xf0108dbc,0xc(%esp)$/;"	l
f01030b1	obj/kern/kernel.asm	/^f01030b1:	f0 $/;"	l
f01030b2	obj/kern/kernel.asm	/^f01030b2:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f01030b9	obj/kern/kernel.asm	/^f01030b9:	f0 $/;"	l
f01030ba	obj/kern/kernel.asm	/^f01030ba:	c7 44 24 04 54 03 00 	movl   $0x354,0x4(%esp)$/;"	l
f01030c1	obj/kern/kernel.asm	/^f01030c1:	00 $/;"	l
f01030c2	obj/kern/kernel.asm	/^f01030c2:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f01030c9	obj/kern/kernel.asm	/^f01030c9:	e8 72 cf ff ff       	call   f0100040 <_panic>$/;"	l
f01030ce	obj/kern/kernel.asm	/^f01030ce:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f01030d4	obj/kern/kernel.asm	/^f01030d4:	3b 5d cc             	cmp    -0x34(%ebp),%ebx$/;"	l
f01030d7	obj/kern/kernel.asm	/^f01030d7:	0f 85 a9 04 00 00    	jne    f0103586 <mem_init+0x2003>$/;"	l
f01030dd	obj/kern/kernel.asm	/^f01030dd:	8d 9e 00 80 ff ff    	lea    -0x8000(%esi),%ebx$/;"	l
f01030e3	obj/kern/kernel.asm	/^f01030e3:	89 da                	mov    %ebx,%edx$/;"	l
f01030e5	obj/kern/kernel.asm	/^f01030e5:	89 f8                	mov    %edi,%eax$/;"	l
f01030e7	obj/kern/kernel.asm	/^f01030e7:	e8 09 db ff ff       	call   f0100bf5 <check_va2pa>$/;"	l
f01030ec	obj/kern/kernel.asm	/^f01030ec:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f01030ef	obj/kern/kernel.asm	/^f01030ef:	74 24                	je     f0103115 <mem_init+0x1b92>$/;"	l
f01030f1	obj/kern/kernel.asm	/^f01030f1:	c7 44 24 0c 04 8e 10 	movl   $0xf0108e04,0xc(%esp)$/;"	l
f01030f8	obj/kern/kernel.asm	/^f01030f8:	f0 $/;"	l
f01030f9	obj/kern/kernel.asm	/^f01030f9:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f0103100	obj/kern/kernel.asm	/^f0103100:	f0 $/;"	l
f0103101	obj/kern/kernel.asm	/^f0103101:	c7 44 24 04 56 03 00 	movl   $0x356,0x4(%esp)$/;"	l
f0103108	obj/kern/kernel.asm	/^f0103108:	00 $/;"	l
f0103109	obj/kern/kernel.asm	/^f0103109:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0103110	obj/kern/kernel.asm	/^f0103110:	e8 2b cf ff ff       	call   f0100040 <_panic>$/;"	l
f0103115	obj/kern/kernel.asm	/^f0103115:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f010311b	obj/kern/kernel.asm	/^f010311b:	39 de                	cmp    %ebx,%esi$/;"	l
f010311d	obj/kern/kernel.asm	/^f010311d:	75 c4                	jne    f01030e3 <mem_init+0x1b60>$/;"	l
f010311f	obj/kern/kernel.asm	/^f010311f:	81 ee 00 00 01 00    	sub    $0x10000,%esi$/;"	l
f0103125	obj/kern/kernel.asm	/^f0103125:	81 45 d4 00 80 01 00 	addl   $0x18000,-0x2c(%ebp)$/;"	l
f010312c	obj/kern/kernel.asm	/^f010312c:	81 45 d0 00 80 00 00 	addl   $0x8000,-0x30(%ebp)$/;"	l
f0103133	obj/kern/kernel.asm	/^f0103133:	81 fe 00 80 f7 ef    	cmp    $0xeff78000,%esi$/;"	l
f0103139	obj/kern/kernel.asm	/^f0103139:	0f 85 19 ff ff ff    	jne    f0103058 <mem_init+0x1ad5>$/;"	l
f010313f	obj/kern/kernel.asm	/^f010313f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103144	obj/kern/kernel.asm	/^f0103144:	e9 c2 00 00 00       	jmp    f010320b <mem_init+0x1c88>$/;"	l
f0103149	obj/kern/kernel.asm	/^f0103149:	8d 90 45 fc ff ff    	lea    -0x3bb(%eax),%edx$/;"	l
f010314f	obj/kern/kernel.asm	/^f010314f:	83 fa 04             	cmp    $0x4,%edx$/;"	l
f0103152	obj/kern/kernel.asm	/^f0103152:	77 2e                	ja     f0103182 <mem_init+0x1bff>$/;"	l
f0103154	obj/kern/kernel.asm	/^f0103154:	f6 04 87 01          	testb  $0x1,(%edi,%eax,4)$/;"	l
f0103158	obj/kern/kernel.asm	/^f0103158:	0f 85 aa 00 00 00    	jne    f0103208 <mem_init+0x1c85>$/;"	l
f010315e	obj/kern/kernel.asm	/^f010315e:	c7 44 24 0c 1d 92 10 	movl   $0xf010921d,0xc(%esp)$/;"	l
f0103165	obj/kern/kernel.asm	/^f0103165:	f0 $/;"	l
f0103166	obj/kern/kernel.asm	/^f0103166:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f010316d	obj/kern/kernel.asm	/^f010316d:	f0 $/;"	l
f010316e	obj/kern/kernel.asm	/^f010316e:	c7 44 24 04 61 03 00 	movl   $0x361,0x4(%esp)$/;"	l
f0103175	obj/kern/kernel.asm	/^f0103175:	00 $/;"	l
f0103176	obj/kern/kernel.asm	/^f0103176:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f010317d	obj/kern/kernel.asm	/^f010317d:	e8 be ce ff ff       	call   f0100040 <_panic>$/;"	l
f0103182	obj/kern/kernel.asm	/^f0103182:	3d bf 03 00 00       	cmp    $0x3bf,%eax$/;"	l
f0103187	obj/kern/kernel.asm	/^f0103187:	76 55                	jbe    f01031de <mem_init+0x1c5b>$/;"	l
f0103189	obj/kern/kernel.asm	/^f0103189:	8b 14 87             	mov    (%edi,%eax,4),%edx$/;"	l
f010318c	obj/kern/kernel.asm	/^f010318c:	f6 c2 01             	test   $0x1,%dl$/;"	l
f010318f	obj/kern/kernel.asm	/^f010318f:	75 24                	jne    f01031b5 <mem_init+0x1c32>$/;"	l
f0103191	obj/kern/kernel.asm	/^f0103191:	c7 44 24 0c 1d 92 10 	movl   $0xf010921d,0xc(%esp)$/;"	l
f0103198	obj/kern/kernel.asm	/^f0103198:	f0 $/;"	l
f0103199	obj/kern/kernel.asm	/^f0103199:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f01031a0	obj/kern/kernel.asm	/^f01031a0:	f0 $/;"	l
f01031a1	obj/kern/kernel.asm	/^f01031a1:	c7 44 24 04 65 03 00 	movl   $0x365,0x4(%esp)$/;"	l
f01031a8	obj/kern/kernel.asm	/^f01031a8:	00 $/;"	l
f01031a9	obj/kern/kernel.asm	/^f01031a9:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f01031b0	obj/kern/kernel.asm	/^f01031b0:	e8 8b ce ff ff       	call   f0100040 <_panic>$/;"	l
f01031b5	obj/kern/kernel.asm	/^f01031b5:	f6 c2 02             	test   $0x2,%dl$/;"	l
f01031b8	obj/kern/kernel.asm	/^f01031b8:	75 4e                	jne    f0103208 <mem_init+0x1c85>$/;"	l
f01031ba	obj/kern/kernel.asm	/^f01031ba:	c7 44 24 0c 2e 92 10 	movl   $0xf010922e,0xc(%esp)$/;"	l
f01031c1	obj/kern/kernel.asm	/^f01031c1:	f0 $/;"	l
f01031c2	obj/kern/kernel.asm	/^f01031c2:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f01031c9	obj/kern/kernel.asm	/^f01031c9:	f0 $/;"	l
f01031ca	obj/kern/kernel.asm	/^f01031ca:	c7 44 24 04 66 03 00 	movl   $0x366,0x4(%esp)$/;"	l
f01031d1	obj/kern/kernel.asm	/^f01031d1:	00 $/;"	l
f01031d2	obj/kern/kernel.asm	/^f01031d2:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f01031d9	obj/kern/kernel.asm	/^f01031d9:	e8 62 ce ff ff       	call   f0100040 <_panic>$/;"	l
f01031de	obj/kern/kernel.asm	/^f01031de:	83 3c 87 00          	cmpl   $0x0,(%edi,%eax,4)$/;"	l
f01031e2	obj/kern/kernel.asm	/^f01031e2:	74 24                	je     f0103208 <mem_init+0x1c85>$/;"	l
f01031e4	obj/kern/kernel.asm	/^f01031e4:	c7 44 24 0c 3f 92 10 	movl   $0xf010923f,0xc(%esp)$/;"	l
f01031eb	obj/kern/kernel.asm	/^f01031eb:	f0 $/;"	l
f01031ec	obj/kern/kernel.asm	/^f01031ec:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f01031f3	obj/kern/kernel.asm	/^f01031f3:	f0 $/;"	l
f01031f4	obj/kern/kernel.asm	/^f01031f4:	c7 44 24 04 68 03 00 	movl   $0x368,0x4(%esp)$/;"	l
f01031fb	obj/kern/kernel.asm	/^f01031fb:	00 $/;"	l
f01031fc	obj/kern/kernel.asm	/^f01031fc:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0103203	obj/kern/kernel.asm	/^f0103203:	e8 38 ce ff ff       	call   f0100040 <_panic>$/;"	l
f0103208	obj/kern/kernel.asm	/^f0103208:	83 c0 01             	add    $0x1,%eax$/;"	l
f010320b	obj/kern/kernel.asm	/^f010320b:	3d 00 04 00 00       	cmp    $0x400,%eax$/;"	l
f0103210	obj/kern/kernel.asm	/^f0103210:	0f 85 33 ff ff ff    	jne    f0103149 <mem_init+0x1bc6>$/;"	l
f0103216	obj/kern/kernel.asm	/^f0103216:	c7 04 24 28 8e 10 f0 	movl   $0xf0108e28,(%esp)$/;"	l
f010321d	obj/kern/kernel.asm	/^f010321d:	e8 ca 0d 00 00       	call   f0103fec <cprintf>$/;"	l
f0103222	obj/kern/kernel.asm	/^f0103222:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f0103227	obj/kern/kernel.asm	/^f0103227:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010322c	obj/kern/kernel.asm	/^f010322c:	77 20                	ja     f010324e <mem_init+0x1ccb>$/;"	l
f010322e	obj/kern/kernel.asm	/^f010322e:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103232	obj/kern/kernel.asm	/^f0103232:	c7 44 24 08 e8 7f 10 	movl   $0xf0107fe8,0x8(%esp)$/;"	l
f0103239	obj/kern/kernel.asm	/^f0103239:	f0 $/;"	l
f010323a	obj/kern/kernel.asm	/^f010323a:	c7 44 24 04 ec 00 00 	movl   $0xec,0x4(%esp)$/;"	l
f0103241	obj/kern/kernel.asm	/^f0103241:	00 $/;"	l
f0103242	obj/kern/kernel.asm	/^f0103242:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0103249	obj/kern/kernel.asm	/^f0103249:	e8 f2 cd ff ff       	call   f0100040 <_panic>$/;"	l
f010324e	obj/kern/kernel.asm	/^f010324e:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103253	obj/kern/kernel.asm	/^f0103253:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103256	obj/kern/kernel.asm	/^f0103256:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010325b	obj/kern/kernel.asm	/^f010325b:	e8 a3 da ff ff       	call   f0100d03 <check_page_free_list>$/;"	l
f0103260	obj/kern/kernel.asm	/^f0103260:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0103263	obj/kern/kernel.asm	/^f0103263:	83 e0 f3             	and    $0xfffffff3,%eax$/;"	l
f0103266	obj/kern/kernel.asm	/^f0103266:	0d 23 00 05 80       	or     $0x80050023,%eax$/;"	l
f010326b	obj/kern/kernel.asm	/^f010326b:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f010326e	obj/kern/kernel.asm	/^f010326e:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0103275	obj/kern/kernel.asm	/^f0103275:	e8 c1 de ff ff       	call   f010113b <page_alloc>$/;"	l
f010327a	obj/kern/kernel.asm	/^f010327a:	89 c3                	mov    %eax,%ebx$/;"	l
f010327c	obj/kern/kernel.asm	/^f010327c:	85 c0                	test   %eax,%eax$/;"	l
f010327e	obj/kern/kernel.asm	/^f010327e:	75 24                	jne    f01032a4 <mem_init+0x1d21>$/;"	l
f0103280	obj/kern/kernel.asm	/^f0103280:	c7 44 24 0c 29 90 10 	movl   $0xf0109029,0xc(%esp)$/;"	l
f0103287	obj/kern/kernel.asm	/^f0103287:	f0 $/;"	l
f0103288	obj/kern/kernel.asm	/^f0103288:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f010328f	obj/kern/kernel.asm	/^f010328f:	f0 $/;"	l
f0103290	obj/kern/kernel.asm	/^f0103290:	c7 44 24 04 40 04 00 	movl   $0x440,0x4(%esp)$/;"	l
f0103297	obj/kern/kernel.asm	/^f0103297:	00 $/;"	l
f0103298	obj/kern/kernel.asm	/^f0103298:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f010329f	obj/kern/kernel.asm	/^f010329f:	e8 9c cd ff ff       	call   f0100040 <_panic>$/;"	l
f01032a4	obj/kern/kernel.asm	/^f01032a4:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01032ab	obj/kern/kernel.asm	/^f01032ab:	e8 8b de ff ff       	call   f010113b <page_alloc>$/;"	l
f01032b0	obj/kern/kernel.asm	/^f01032b0:	89 c7                	mov    %eax,%edi$/;"	l
f01032b2	obj/kern/kernel.asm	/^f01032b2:	85 c0                	test   %eax,%eax$/;"	l
f01032b4	obj/kern/kernel.asm	/^f01032b4:	75 24                	jne    f01032da <mem_init+0x1d57>$/;"	l
f01032b6	obj/kern/kernel.asm	/^f01032b6:	c7 44 24 0c 3f 90 10 	movl   $0xf010903f,0xc(%esp)$/;"	l
f01032bd	obj/kern/kernel.asm	/^f01032bd:	f0 $/;"	l
f01032be	obj/kern/kernel.asm	/^f01032be:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f01032c5	obj/kern/kernel.asm	/^f01032c5:	f0 $/;"	l
f01032c6	obj/kern/kernel.asm	/^f01032c6:	c7 44 24 04 41 04 00 	movl   $0x441,0x4(%esp)$/;"	l
f01032cd	obj/kern/kernel.asm	/^f01032cd:	00 $/;"	l
f01032ce	obj/kern/kernel.asm	/^f01032ce:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f01032d5	obj/kern/kernel.asm	/^f01032d5:	e8 66 cd ff ff       	call   f0100040 <_panic>$/;"	l
f01032da	obj/kern/kernel.asm	/^f01032da:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01032e1	obj/kern/kernel.asm	/^f01032e1:	e8 55 de ff ff       	call   f010113b <page_alloc>$/;"	l
f01032e6	obj/kern/kernel.asm	/^f01032e6:	89 c6                	mov    %eax,%esi$/;"	l
f01032e8	obj/kern/kernel.asm	/^f01032e8:	85 c0                	test   %eax,%eax$/;"	l
f01032ea	obj/kern/kernel.asm	/^f01032ea:	75 24                	jne    f0103310 <mem_init+0x1d8d>$/;"	l
f01032ec	obj/kern/kernel.asm	/^f01032ec:	c7 44 24 0c 55 90 10 	movl   $0xf0109055,0xc(%esp)$/;"	l
f01032f3	obj/kern/kernel.asm	/^f01032f3:	f0 $/;"	l
f01032f4	obj/kern/kernel.asm	/^f01032f4:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f01032fb	obj/kern/kernel.asm	/^f01032fb:	f0 $/;"	l
f01032fc	obj/kern/kernel.asm	/^f01032fc:	c7 44 24 04 42 04 00 	movl   $0x442,0x4(%esp)$/;"	l
f0103303	obj/kern/kernel.asm	/^f0103303:	00 $/;"	l
f0103304	obj/kern/kernel.asm	/^f0103304:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f010330b	obj/kern/kernel.asm	/^f010330b:	e8 30 cd ff ff       	call   f0100040 <_panic>$/;"	l
f0103310	obj/kern/kernel.asm	/^f0103310:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103313	obj/kern/kernel.asm	/^f0103313:	e8 b3 de ff ff       	call   f01011cb <page_free>$/;"	l
f0103318	obj/kern/kernel.asm	/^f0103318:	89 f8                	mov    %edi,%eax$/;"	l
f010331a	obj/kern/kernel.asm	/^f010331a:	e8 91 d8 ff ff       	call   f0100bb0 <page2kva>$/;"	l
f010331f	obj/kern/kernel.asm	/^f010331f:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0103326	obj/kern/kernel.asm	/^f0103326:	00 $/;"	l
f0103327	obj/kern/kernel.asm	/^f0103327:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
f010332e	obj/kern/kernel.asm	/^f010332e:	00 $/;"	l
f010332f	obj/kern/kernel.asm	/^f010332f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103332	obj/kern/kernel.asm	/^f0103332:	e8 d0 31 00 00       	call   f0106507 <memset>$/;"	l
f0103337	obj/kern/kernel.asm	/^f0103337:	89 f0                	mov    %esi,%eax$/;"	l
f0103339	obj/kern/kernel.asm	/^f0103339:	e8 72 d8 ff ff       	call   f0100bb0 <page2kva>$/;"	l
f010333e	obj/kern/kernel.asm	/^f010333e:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0103345	obj/kern/kernel.asm	/^f0103345:	00 $/;"	l
f0103346	obj/kern/kernel.asm	/^f0103346:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
f010334d	obj/kern/kernel.asm	/^f010334d:	00 $/;"	l
f010334e	obj/kern/kernel.asm	/^f010334e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103351	obj/kern/kernel.asm	/^f0103351:	e8 b1 31 00 00       	call   f0106507 <memset>$/;"	l
f0103356	obj/kern/kernel.asm	/^f0103356:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f010335d	obj/kern/kernel.asm	/^f010335d:	00 $/;"	l
f010335e	obj/kern/kernel.asm	/^f010335e:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0103365	obj/kern/kernel.asm	/^f0103365:	00 $/;"	l
f0103366	obj/kern/kernel.asm	/^f0103366:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f010336a	obj/kern/kernel.asm	/^f010336a:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f010336f	obj/kern/kernel.asm	/^f010336f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103372	obj/kern/kernel.asm	/^f0103372:	e8 04 e1 ff ff       	call   f010147b <page_insert>$/;"	l
f0103377	obj/kern/kernel.asm	/^f0103377:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
f010337c	obj/kern/kernel.asm	/^f010337c:	74 24                	je     f01033a2 <mem_init+0x1e1f>$/;"	l
f010337e	obj/kern/kernel.asm	/^f010337e:	c7 44 24 0c 26 91 10 	movl   $0xf0109126,0xc(%esp)$/;"	l
f0103385	obj/kern/kernel.asm	/^f0103385:	f0 $/;"	l
f0103386	obj/kern/kernel.asm	/^f0103386:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f010338d	obj/kern/kernel.asm	/^f010338d:	f0 $/;"	l
f010338e	obj/kern/kernel.asm	/^f010338e:	c7 44 24 04 47 04 00 	movl   $0x447,0x4(%esp)$/;"	l
f0103395	obj/kern/kernel.asm	/^f0103395:	00 $/;"	l
f0103396	obj/kern/kernel.asm	/^f0103396:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f010339d	obj/kern/kernel.asm	/^f010339d:	e8 9e cc ff ff       	call   f0100040 <_panic>$/;"	l
f01033a2	obj/kern/kernel.asm	/^f01033a2:	81 3d 00 10 00 00 01 	cmpl   $0x1010101,0x1000$/;"	l
f01033a9	obj/kern/kernel.asm	/^f01033a9:	01 01 01 $/;"	l
f01033ac	obj/kern/kernel.asm	/^f01033ac:	74 24                	je     f01033d2 <mem_init+0x1e4f>$/;"	l
f01033ae	obj/kern/kernel.asm	/^f01033ae:	c7 44 24 0c 48 8e 10 	movl   $0xf0108e48,0xc(%esp)$/;"	l
f01033b5	obj/kern/kernel.asm	/^f01033b5:	f0 $/;"	l
f01033b6	obj/kern/kernel.asm	/^f01033b6:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f01033bd	obj/kern/kernel.asm	/^f01033bd:	f0 $/;"	l
f01033be	obj/kern/kernel.asm	/^f01033be:	c7 44 24 04 48 04 00 	movl   $0x448,0x4(%esp)$/;"	l
f01033c5	obj/kern/kernel.asm	/^f01033c5:	00 $/;"	l
f01033c6	obj/kern/kernel.asm	/^f01033c6:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f01033cd	obj/kern/kernel.asm	/^f01033cd:	e8 6e cc ff ff       	call   f0100040 <_panic>$/;"	l
f01033d2	obj/kern/kernel.asm	/^f01033d2:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f01033d9	obj/kern/kernel.asm	/^f01033d9:	00 $/;"	l
f01033da	obj/kern/kernel.asm	/^f01033da:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01033e1	obj/kern/kernel.asm	/^f01033e1:	00 $/;"	l
f01033e2	obj/kern/kernel.asm	/^f01033e2:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f01033e6	obj/kern/kernel.asm	/^f01033e6:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f01033eb	obj/kern/kernel.asm	/^f01033eb:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01033ee	obj/kern/kernel.asm	/^f01033ee:	e8 88 e0 ff ff       	call   f010147b <page_insert>$/;"	l
f01033f3	obj/kern/kernel.asm	/^f01033f3:	81 3d 00 10 00 00 02 	cmpl   $0x2020202,0x1000$/;"	l
f01033fa	obj/kern/kernel.asm	/^f01033fa:	02 02 02 $/;"	l
f01033fd	obj/kern/kernel.asm	/^f01033fd:	74 24                	je     f0103423 <mem_init+0x1ea0>$/;"	l
f01033ff	obj/kern/kernel.asm	/^f01033ff:	c7 44 24 0c 6c 8e 10 	movl   $0xf0108e6c,0xc(%esp)$/;"	l
f0103406	obj/kern/kernel.asm	/^f0103406:	f0 $/;"	l
f0103407	obj/kern/kernel.asm	/^f0103407:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f010340e	obj/kern/kernel.asm	/^f010340e:	f0 $/;"	l
f010340f	obj/kern/kernel.asm	/^f010340f:	c7 44 24 04 4a 04 00 	movl   $0x44a,0x4(%esp)$/;"	l
f0103416	obj/kern/kernel.asm	/^f0103416:	00 $/;"	l
f0103417	obj/kern/kernel.asm	/^f0103417:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f010341e	obj/kern/kernel.asm	/^f010341e:	e8 1d cc ff ff       	call   f0100040 <_panic>$/;"	l
f0103423	obj/kern/kernel.asm	/^f0103423:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0103428	obj/kern/kernel.asm	/^f0103428:	74 24                	je     f010344e <mem_init+0x1ecb>$/;"	l
f010342a	obj/kern/kernel.asm	/^f010342a:	c7 44 24 0c 48 91 10 	movl   $0xf0109148,0xc(%esp)$/;"	l
f0103431	obj/kern/kernel.asm	/^f0103431:	f0 $/;"	l
f0103432	obj/kern/kernel.asm	/^f0103432:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f0103439	obj/kern/kernel.asm	/^f0103439:	f0 $/;"	l
f010343a	obj/kern/kernel.asm	/^f010343a:	c7 44 24 04 4b 04 00 	movl   $0x44b,0x4(%esp)$/;"	l
f0103441	obj/kern/kernel.asm	/^f0103441:	00 $/;"	l
f0103442	obj/kern/kernel.asm	/^f0103442:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0103449	obj/kern/kernel.asm	/^f0103449:	e8 f2 cb ff ff       	call   f0100040 <_panic>$/;"	l
f010344e	obj/kern/kernel.asm	/^f010344e:	66 83 7f 04 00       	cmpw   $0x0,0x4(%edi)$/;"	l
f0103453	obj/kern/kernel.asm	/^f0103453:	74 24                	je     f0103479 <mem_init+0x1ef6>$/;"	l
f0103455	obj/kern/kernel.asm	/^f0103455:	c7 44 24 0c b2 91 10 	movl   $0xf01091b2,0xc(%esp)$/;"	l
f010345c	obj/kern/kernel.asm	/^f010345c:	f0 $/;"	l
f010345d	obj/kern/kernel.asm	/^f010345d:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f0103464	obj/kern/kernel.asm	/^f0103464:	f0 $/;"	l
f0103465	obj/kern/kernel.asm	/^f0103465:	c7 44 24 04 4c 04 00 	movl   $0x44c,0x4(%esp)$/;"	l
f010346c	obj/kern/kernel.asm	/^f010346c:	00 $/;"	l
f010346d	obj/kern/kernel.asm	/^f010346d:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0103474	obj/kern/kernel.asm	/^f0103474:	e8 c7 cb ff ff       	call   f0100040 <_panic>$/;"	l
f0103479	obj/kern/kernel.asm	/^f0103479:	c7 05 00 10 00 00 03 	movl   $0x3030303,0x1000$/;"	l
f0103480	obj/kern/kernel.asm	/^f0103480:	03 03 03 $/;"	l
f0103483	obj/kern/kernel.asm	/^f0103483:	89 f0                	mov    %esi,%eax$/;"	l
f0103485	obj/kern/kernel.asm	/^f0103485:	e8 26 d7 ff ff       	call   f0100bb0 <page2kva>$/;"	l
f010348a	obj/kern/kernel.asm	/^f010348a:	81 38 03 03 03 03    	cmpl   $0x3030303,(%eax)$/;"	l
f0103490	obj/kern/kernel.asm	/^f0103490:	74 24                	je     f01034b6 <mem_init+0x1f33>$/;"	l
f0103492	obj/kern/kernel.asm	/^f0103492:	c7 44 24 0c 90 8e 10 	movl   $0xf0108e90,0xc(%esp)$/;"	l
f0103499	obj/kern/kernel.asm	/^f0103499:	f0 $/;"	l
f010349a	obj/kern/kernel.asm	/^f010349a:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f01034a1	obj/kern/kernel.asm	/^f01034a1:	f0 $/;"	l
f01034a2	obj/kern/kernel.asm	/^f01034a2:	c7 44 24 04 4e 04 00 	movl   $0x44e,0x4(%esp)$/;"	l
f01034a9	obj/kern/kernel.asm	/^f01034a9:	00 $/;"	l
f01034aa	obj/kern/kernel.asm	/^f01034aa:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f01034b1	obj/kern/kernel.asm	/^f01034b1:	e8 8a cb ff ff       	call   f0100040 <_panic>$/;"	l
f01034b6	obj/kern/kernel.asm	/^f01034b6:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f01034bd	obj/kern/kernel.asm	/^f01034bd:	00 $/;"	l
f01034be	obj/kern/kernel.asm	/^f01034be:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f01034c3	obj/kern/kernel.asm	/^f01034c3:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01034c6	obj/kern/kernel.asm	/^f01034c6:	e8 67 df ff ff       	call   f0101432 <page_remove>$/;"	l
f01034cb	obj/kern/kernel.asm	/^f01034cb:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f01034d0	obj/kern/kernel.asm	/^f01034d0:	74 24                	je     f01034f6 <mem_init+0x1f73>$/;"	l
f01034d2	obj/kern/kernel.asm	/^f01034d2:	c7 44 24 0c 80 91 10 	movl   $0xf0109180,0xc(%esp)$/;"	l
f01034d9	obj/kern/kernel.asm	/^f01034d9:	f0 $/;"	l
f01034da	obj/kern/kernel.asm	/^f01034da:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f01034e1	obj/kern/kernel.asm	/^f01034e1:	f0 $/;"	l
f01034e2	obj/kern/kernel.asm	/^f01034e2:	c7 44 24 04 50 04 00 	movl   $0x450,0x4(%esp)$/;"	l
f01034e9	obj/kern/kernel.asm	/^f01034e9:	00 $/;"	l
f01034ea	obj/kern/kernel.asm	/^f01034ea:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f01034f1	obj/kern/kernel.asm	/^f01034f1:	e8 4a cb ff ff       	call   f0100040 <_panic>$/;"	l
f01034f6	obj/kern/kernel.asm	/^f01034f6:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f01034fb	obj/kern/kernel.asm	/^f01034fb:	8b 08                	mov    (%eax),%ecx$/;"	l
f01034fd	obj/kern/kernel.asm	/^f01034fd:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f0103503	obj/kern/kernel.asm	/^f0103503:	89 da                	mov    %ebx,%edx$/;"	l
f0103505	obj/kern/kernel.asm	/^f0103505:	2b 15 9c 9e 2b f0    	sub    0xf02b9e9c,%edx$/;"	l
f010350b	obj/kern/kernel.asm	/^f010350b:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f010350e	obj/kern/kernel.asm	/^f010350e:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0103511	obj/kern/kernel.asm	/^f0103511:	39 d1                	cmp    %edx,%ecx$/;"	l
f0103513	obj/kern/kernel.asm	/^f0103513:	74 24                	je     f0103539 <mem_init+0x1fb6>$/;"	l
f0103515	obj/kern/kernel.asm	/^f0103515:	c7 44 24 0c 18 88 10 	movl   $0xf0108818,0xc(%esp)$/;"	l
f010351c	obj/kern/kernel.asm	/^f010351c:	f0 $/;"	l
f010351d	obj/kern/kernel.asm	/^f010351d:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f0103524	obj/kern/kernel.asm	/^f0103524:	f0 $/;"	l
f0103525	obj/kern/kernel.asm	/^f0103525:	c7 44 24 04 53 04 00 	movl   $0x453,0x4(%esp)$/;"	l
f010352c	obj/kern/kernel.asm	/^f010352c:	00 $/;"	l
f010352d	obj/kern/kernel.asm	/^f010352d:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0103534	obj/kern/kernel.asm	/^f0103534:	e8 07 cb ff ff       	call   f0100040 <_panic>$/;"	l
f0103539	obj/kern/kernel.asm	/^f0103539:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f010353f	obj/kern/kernel.asm	/^f010353f:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0103544	obj/kern/kernel.asm	/^f0103544:	74 24                	je     f010356a <mem_init+0x1fe7>$/;"	l
f0103546	obj/kern/kernel.asm	/^f0103546:	c7 44 24 0c 37 91 10 	movl   $0xf0109137,0xc(%esp)$/;"	l
f010354d	obj/kern/kernel.asm	/^f010354d:	f0 $/;"	l
f010354e	obj/kern/kernel.asm	/^f010354e:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f0103555	obj/kern/kernel.asm	/^f0103555:	f0 $/;"	l
f0103556	obj/kern/kernel.asm	/^f0103556:	c7 44 24 04 55 04 00 	movl   $0x455,0x4(%esp)$/;"	l
f010355d	obj/kern/kernel.asm	/^f010355d:	00 $/;"	l
f010355e	obj/kern/kernel.asm	/^f010355e:	c7 04 24 2b 8f 10 f0 	movl   $0xf0108f2b,(%esp)$/;"	l
f0103565	obj/kern/kernel.asm	/^f0103565:	e8 d6 ca ff ff       	call   f0100040 <_panic>$/;"	l
f010356a	obj/kern/kernel.asm	/^f010356a:	66 c7 43 04 00 00    	movw   $0x0,0x4(%ebx)$/;"	l
f0103570	obj/kern/kernel.asm	/^f0103570:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103573	obj/kern/kernel.asm	/^f0103573:	e8 53 dc ff ff       	call   f01011cb <page_free>$/;"	l
f0103578	obj/kern/kernel.asm	/^f0103578:	c7 04 24 bc 8e 10 f0 	movl   $0xf0108ebc,(%esp)$/;"	l
f010357f	obj/kern/kernel.asm	/^f010357f:	e8 68 0a 00 00       	call   f0103fec <cprintf>$/;"	l
f0103584	obj/kern/kernel.asm	/^f0103584:	eb 1f                	jmp    f01035a5 <mem_init+0x2022>$/;"	l
f0103586	obj/kern/kernel.asm	/^f0103586:	89 da                	mov    %ebx,%edx$/;"	l
f0103588	obj/kern/kernel.asm	/^f0103588:	89 f8                	mov    %edi,%eax$/;"	l
f010358a	obj/kern/kernel.asm	/^f010358a:	e8 66 d6 ff ff       	call   f0100bf5 <check_va2pa>$/;"	l
f010358f	obj/kern/kernel.asm	/^f010358f:	90                   	nop$/;"	l
f0103590	obj/kern/kernel.asm	/^f0103590:	e9 0b fb ff ff       	jmp    f01030a0 <mem_init+0x1b1d>$/;"	l
f0103595	obj/kern/kernel.asm	/^f0103595:	89 da                	mov    %ebx,%edx$/;"	l
f0103597	obj/kern/kernel.asm	/^f0103597:	89 f8                	mov    %edi,%eax$/;"	l
f0103599	obj/kern/kernel.asm	/^f0103599:	e8 57 d6 ff ff       	call   f0100bf5 <check_va2pa>$/;"	l
f010359e	obj/kern/kernel.asm	/^f010359e:	66 90                	xchg   %ax,%ax$/;"	l
f01035a0	obj/kern/kernel.asm	/^f01035a0:	e9 0a fa ff ff       	jmp    f0102faf <mem_init+0x1a2c>$/;"	l
f01035a5	obj/kern/kernel.asm	/^f01035a5:	83 c4 4c             	add    $0x4c,%esp$/;"	l
f01035a8	obj/kern/kernel.asm	/^f01035a8:	5b                   	pop    %ebx$/;"	l
f01035a9	obj/kern/kernel.asm	/^f01035a9:	5e                   	pop    %esi$/;"	l
f01035aa	obj/kern/kernel.asm	/^f01035aa:	5f                   	pop    %edi$/;"	l
f01035ab	obj/kern/kernel.asm	/^f01035ab:	5d                   	pop    %ebp$/;"	l
f01035ac	obj/kern/kernel.asm	/^f01035ac:	c3                   	ret    $/;"	l
f01035ad	obj/kern/kernel.asm	/^f01035ad <user_mem_check>:$/;"	l
f01035ad	obj/kern/kernel.asm	/^f01035ad:	55                   	push   %ebp$/;"	l
f01035ae	obj/kern/kernel.asm	/^f01035ae:	89 e5                	mov    %esp,%ebp$/;"	l
f01035b0	obj/kern/kernel.asm	/^f01035b0:	57                   	push   %edi$/;"	l
f01035b1	obj/kern/kernel.asm	/^f01035b1:	56                   	push   %esi$/;"	l
f01035b2	obj/kern/kernel.asm	/^f01035b2:	53                   	push   %ebx$/;"	l
f01035b3	obj/kern/kernel.asm	/^f01035b3:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f01035b6	obj/kern/kernel.asm	/^f01035b6:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f01035b9	obj/kern/kernel.asm	/^f01035b9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01035bc	obj/kern/kernel.asm	/^f01035bc:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01035c1	obj/kern/kernel.asm	/^f01035c1:	89 c3                	mov    %eax,%ebx$/;"	l
f01035c3	obj/kern/kernel.asm	/^f01035c3:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f01035c6	obj/kern/kernel.asm	/^f01035c6:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01035c9	obj/kern/kernel.asm	/^f01035c9:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f01035cc	obj/kern/kernel.asm	/^f01035cc:	8d 84 01 ff 0f 00 00 	lea    0xfff(%ecx,%eax,1),%eax$/;"	l
f01035d3	obj/kern/kernel.asm	/^f01035d3:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01035d8	obj/kern/kernel.asm	/^f01035d8:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01035db	obj/kern/kernel.asm	/^f01035db:	8b 75 14             	mov    0x14(%ebp),%esi$/;"	l
f01035de	obj/kern/kernel.asm	/^f01035de:	83 ce 01             	or     $0x1,%esi$/;"	l
f01035e1	obj/kern/kernel.asm	/^f01035e1:	eb 31                	jmp    f0103614 <user_mem_check+0x67>$/;"	l
f01035e3	obj/kern/kernel.asm	/^f01035e3:	81 fb 00 00 80 ef    	cmp    $0xef800000,%ebx$/;"	l
f01035e9	obj/kern/kernel.asm	/^f01035e9:	77 35                	ja     f0103620 <user_mem_check+0x73>$/;"	l
f01035eb	obj/kern/kernel.asm	/^f01035eb:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f01035f2	obj/kern/kernel.asm	/^f01035f2:	00 $/;"	l
f01035f3	obj/kern/kernel.asm	/^f01035f3:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01035f7	obj/kern/kernel.asm	/^f01035f7:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f01035fa	obj/kern/kernel.asm	/^f01035fa:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01035fd	obj/kern/kernel.asm	/^f01035fd:	e8 48 dc ff ff       	call   f010124a <pgdir_walk>$/;"	l
f0103602	obj/kern/kernel.asm	/^f0103602:	85 c0                	test   %eax,%eax$/;"	l
f0103604	obj/kern/kernel.asm	/^f0103604:	74 1e                	je     f0103624 <user_mem_check+0x77>$/;"	l
f0103606	obj/kern/kernel.asm	/^f0103606:	89 f2                	mov    %esi,%edx$/;"	l
f0103608	obj/kern/kernel.asm	/^f0103608:	23 10                	and    (%eax),%edx$/;"	l
f010360a	obj/kern/kernel.asm	/^f010360a:	39 d6                	cmp    %edx,%esi$/;"	l
f010360c	obj/kern/kernel.asm	/^f010360c:	75 1a                	jne    f0103628 <user_mem_check+0x7b>$/;"	l
f010360e	obj/kern/kernel.asm	/^f010360e:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0103614	obj/kern/kernel.asm	/^f0103614:	3b 5d e4             	cmp    -0x1c(%ebp),%ebx$/;"	l
f0103617	obj/kern/kernel.asm	/^f0103617:	72 ca                	jb     f01035e3 <user_mem_check+0x36>$/;"	l
f0103619	obj/kern/kernel.asm	/^f0103619:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010361e	obj/kern/kernel.asm	/^f010361e:	eb 1c                	jmp    f010363c <user_mem_check+0x8f>$/;"	l
f0103620	obj/kern/kernel.asm	/^f0103620:	89 d8                	mov    %ebx,%eax$/;"	l
f0103622	obj/kern/kernel.asm	/^f0103622:	eb 06                	jmp    f010362a <user_mem_check+0x7d>$/;"	l
f0103624	obj/kern/kernel.asm	/^f0103624:	89 d8                	mov    %ebx,%eax$/;"	l
f0103626	obj/kern/kernel.asm	/^f0103626:	eb 02                	jmp    f010362a <user_mem_check+0x7d>$/;"	l
f0103628	obj/kern/kernel.asm	/^f0103628:	89 d8                	mov    %ebx,%eax$/;"	l
f010362a	obj/kern/kernel.asm	/^f010362a:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
f010362d	obj/kern/kernel.asm	/^f010362d:	0f 44 5d 0c          	cmove  0xc(%ebp),%ebx$/;"	l
f0103631	obj/kern/kernel.asm	/^f0103631:	89 1d 3c 92 2b f0    	mov    %ebx,0xf02b923c$/;"	l
f0103637	obj/kern/kernel.asm	/^f0103637:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f010363c	obj/kern/kernel.asm	/^f010363c:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f010363f	obj/kern/kernel.asm	/^f010363f:	5b                   	pop    %ebx$/;"	l
f0103640	obj/kern/kernel.asm	/^f0103640:	5e                   	pop    %esi$/;"	l
f0103641	obj/kern/kernel.asm	/^f0103641:	5f                   	pop    %edi$/;"	l
f0103642	obj/kern/kernel.asm	/^f0103642:	5d                   	pop    %ebp$/;"	l
f0103643	obj/kern/kernel.asm	/^f0103643:	c3                   	ret    $/;"	l
f0103644	obj/kern/kernel.asm	/^f0103644 <user_mem_assert>:$/;"	l
f0103644	obj/kern/kernel.asm	/^f0103644:	55                   	push   %ebp$/;"	l
f0103645	obj/kern/kernel.asm	/^f0103645:	89 e5                	mov    %esp,%ebp$/;"	l
f0103647	obj/kern/kernel.asm	/^f0103647:	53                   	push   %ebx$/;"	l
f0103648	obj/kern/kernel.asm	/^f0103648:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010364b	obj/kern/kernel.asm	/^f010364b:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f010364e	obj/kern/kernel.asm	/^f010364e:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0103651	obj/kern/kernel.asm	/^f0103651:	83 c8 04             	or     $0x4,%eax$/;"	l
f0103654	obj/kern/kernel.asm	/^f0103654:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103658	obj/kern/kernel.asm	/^f0103658:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f010365b	obj/kern/kernel.asm	/^f010365b:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010365f	obj/kern/kernel.asm	/^f010365f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103662	obj/kern/kernel.asm	/^f0103662:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103666	obj/kern/kernel.asm	/^f0103666:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103669	obj/kern/kernel.asm	/^f0103669:	e8 3f ff ff ff       	call   f01035ad <user_mem_check>$/;"	l
f010366e	obj/kern/kernel.asm	/^f010366e:	85 c0                	test   %eax,%eax$/;"	l
f0103670	obj/kern/kernel.asm	/^f0103670:	79 24                	jns    f0103696 <user_mem_assert+0x52>$/;"	l
f0103672	obj/kern/kernel.asm	/^f0103672:	a1 3c 92 2b f0       	mov    0xf02b923c,%eax$/;"	l
f0103677	obj/kern/kernel.asm	/^f0103677:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010367b	obj/kern/kernel.asm	/^f010367b:	8b 43 48             	mov    0x48(%ebx),%eax$/;"	l
f010367e	obj/kern/kernel.asm	/^f010367e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103682	obj/kern/kernel.asm	/^f0103682:	c7 04 24 e8 8e 10 f0 	movl   $0xf0108ee8,(%esp)$/;"	l
f0103689	obj/kern/kernel.asm	/^f0103689:	e8 5e 09 00 00       	call   f0103fec <cprintf>$/;"	l
f010368e	obj/kern/kernel.asm	/^f010368e:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103691	obj/kern/kernel.asm	/^f0103691:	e8 94 06 00 00       	call   f0103d2a <env_destroy>$/;"	l
f0103696	obj/kern/kernel.asm	/^f0103696:	83 c4 14             	add    $0x14,%esp$/;"	l
f0103699	obj/kern/kernel.asm	/^f0103699:	5b                   	pop    %ebx$/;"	l
f010369a	obj/kern/kernel.asm	/^f010369a:	5d                   	pop    %ebp$/;"	l
f010369b	obj/kern/kernel.asm	/^f010369b:	c3                   	ret    $/;"	l
f010369c	obj/kern/kernel.asm	/^f010369c <region_alloc>:$/;"	l
f010369c	obj/kern/kernel.asm	/^f010369c:	55                   	push   %ebp$/;"	l
f010369d	obj/kern/kernel.asm	/^f010369d:	89 e5                	mov    %esp,%ebp$/;"	l
f010369f	obj/kern/kernel.asm	/^f010369f:	57                   	push   %edi$/;"	l
f01036a0	obj/kern/kernel.asm	/^f01036a0:	56                   	push   %esi$/;"	l
f01036a1	obj/kern/kernel.asm	/^f01036a1:	53                   	push   %ebx$/;"	l
f01036a2	obj/kern/kernel.asm	/^f01036a2:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f01036a5	obj/kern/kernel.asm	/^f01036a5:	89 c7                	mov    %eax,%edi$/;"	l
f01036a7	obj/kern/kernel.asm	/^f01036a7:	81 c1 ff 0f 00 00    	add    $0xfff,%ecx$/;"	l
f01036ad	obj/kern/kernel.asm	/^f01036ad:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f01036b0	obj/kern/kernel.asm	/^f01036b0:	89 4d e4             	mov    %ecx,-0x1c(%ebp)$/;"	l
f01036b3	obj/kern/kernel.asm	/^f01036b3:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f01036b9	obj/kern/kernel.asm	/^f01036b9:	89 d6                	mov    %edx,%esi$/;"	l
f01036bb	obj/kern/kernel.asm	/^f01036bb:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01036c0	obj/kern/kernel.asm	/^f01036c0:	eb 74                	jmp    f0103736 <region_alloc+0x9a>$/;"	l
f01036c2	obj/kern/kernel.asm	/^f01036c2:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01036c9	obj/kern/kernel.asm	/^f01036c9:	e8 6d da ff ff       	call   f010113b <page_alloc>$/;"	l
f01036ce	obj/kern/kernel.asm	/^f01036ce:	85 c0                	test   %eax,%eax$/;"	l
f01036d0	obj/kern/kernel.asm	/^f01036d0:	74 45                	je     f0103717 <region_alloc+0x7b>$/;"	l
f01036d2	obj/kern/kernel.asm	/^f01036d2:	c7 44 24 0c 06 00 00 	movl   $0x6,0xc(%esp)$/;"	l
f01036d9	obj/kern/kernel.asm	/^f01036d9:	00 $/;"	l
f01036da	obj/kern/kernel.asm	/^f01036da:	89 74 24 08          	mov    %esi,0x8(%esp)$/;"	l
f01036de	obj/kern/kernel.asm	/^f01036de:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01036e2	obj/kern/kernel.asm	/^f01036e2:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f01036e5	obj/kern/kernel.asm	/^f01036e5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01036e8	obj/kern/kernel.asm	/^f01036e8:	e8 8e dd ff ff       	call   f010147b <page_insert>$/;"	l
f01036ed	obj/kern/kernel.asm	/^f01036ed:	81 c6 00 10 00 00    	add    $0x1000,%esi$/;"	l
f01036f3	obj/kern/kernel.asm	/^f01036f3:	85 c0                	test   %eax,%eax$/;"	l
f01036f5	obj/kern/kernel.asm	/^f01036f5:	74 3c                	je     f0103733 <region_alloc+0x97>$/;"	l
f01036f7	obj/kern/kernel.asm	/^f01036f7:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01036fb	obj/kern/kernel.asm	/^f01036fb:	c7 44 24 08 4d 92 10 	movl   $0xf010924d,0x8(%esp)$/;"	l
f0103702	obj/kern/kernel.asm	/^f0103702:	f0 $/;"	l
f0103703	obj/kern/kernel.asm	/^f0103703:	c7 44 24 04 30 01 00 	movl   $0x130,0x4(%esp)$/;"	l
f010370a	obj/kern/kernel.asm	/^f010370a:	00 $/;"	l
f010370b	obj/kern/kernel.asm	/^f010370b:	c7 04 24 64 92 10 f0 	movl   $0xf0109264,(%esp)$/;"	l
f0103712	obj/kern/kernel.asm	/^f0103712:	e8 29 c9 ff ff       	call   f0100040 <_panic>$/;"	l
f0103717	obj/kern/kernel.asm	/^f0103717:	c7 44 24 08 6f 92 10 	movl   $0xf010926f,0x8(%esp)$/;"	l
f010371e	obj/kern/kernel.asm	/^f010371e:	f0 $/;"	l
f010371f	obj/kern/kernel.asm	/^f010371f:	c7 44 24 04 35 01 00 	movl   $0x135,0x4(%esp)$/;"	l
f0103726	obj/kern/kernel.asm	/^f0103726:	00 $/;"	l
f0103727	obj/kern/kernel.asm	/^f0103727:	c7 04 24 64 92 10 f0 	movl   $0xf0109264,(%esp)$/;"	l
f010372e	obj/kern/kernel.asm	/^f010372e:	e8 0d c9 ff ff       	call   f0100040 <_panic>$/;"	l
f0103733	obj/kern/kernel.asm	/^f0103733:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0103736	obj/kern/kernel.asm	/^f0103736:	3b 5d e4             	cmp    -0x1c(%ebp),%ebx$/;"	l
f0103739	obj/kern/kernel.asm	/^f0103739:	7c 87                	jl     f01036c2 <region_alloc+0x26>$/;"	l
f010373b	obj/kern/kernel.asm	/^f010373b:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f010373e	obj/kern/kernel.asm	/^f010373e:	5b                   	pop    %ebx$/;"	l
f010373f	obj/kern/kernel.asm	/^f010373f:	5e                   	pop    %esi$/;"	l
f0103740	obj/kern/kernel.asm	/^f0103740:	5f                   	pop    %edi$/;"	l
f0103741	obj/kern/kernel.asm	/^f0103741:	5d                   	pop    %ebp$/;"	l
f0103742	obj/kern/kernel.asm	/^f0103742:	c3                   	ret    $/;"	l
f0103743	obj/kern/kernel.asm	/^f0103743 <envid2env>:$/;"	l
f0103743	obj/kern/kernel.asm	/^f0103743:	55                   	push   %ebp$/;"	l
f0103744	obj/kern/kernel.asm	/^f0103744:	89 e5                	mov    %esp,%ebp$/;"	l
f0103746	obj/kern/kernel.asm	/^f0103746:	56                   	push   %esi$/;"	l
f0103747	obj/kern/kernel.asm	/^f0103747:	53                   	push   %ebx$/;"	l
f0103748	obj/kern/kernel.asm	/^f0103748:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010374b	obj/kern/kernel.asm	/^f010374b:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f010374e	obj/kern/kernel.asm	/^f010374e:	85 c0                	test   %eax,%eax$/;"	l
f0103750	obj/kern/kernel.asm	/^f0103750:	75 1a                	jne    f010376c <envid2env+0x29>$/;"	l
f0103752	obj/kern/kernel.asm	/^f0103752:	e8 02 34 00 00       	call   f0106b59 <cpunum>$/;"	l
f0103757	obj/kern/kernel.asm	/^f0103757:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010375a	obj/kern/kernel.asm	/^f010375a:	8b 80 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%eax$/;"	l
f0103760	obj/kern/kernel.asm	/^f0103760:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0103763	obj/kern/kernel.asm	/^f0103763:	89 01                	mov    %eax,(%ecx)$/;"	l
f0103765	obj/kern/kernel.asm	/^f0103765:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010376a	obj/kern/kernel.asm	/^f010376a:	eb 70                	jmp    f01037dc <envid2env+0x99>$/;"	l
f010376c	obj/kern/kernel.asm	/^f010376c:	89 c3                	mov    %eax,%ebx$/;"	l
f010376e	obj/kern/kernel.asm	/^f010376e:	81 e3 ff 03 00 00    	and    $0x3ff,%ebx$/;"	l
f0103774	obj/kern/kernel.asm	/^f0103774:	6b db 7c             	imul   $0x7c,%ebx,%ebx$/;"	l
f0103777	obj/kern/kernel.asm	/^f0103777:	03 1d 48 92 2b f0    	add    0xf02b9248,%ebx$/;"	l
f010377d	obj/kern/kernel.asm	/^f010377d:	83 7b 54 00          	cmpl   $0x0,0x54(%ebx)$/;"	l
f0103781	obj/kern/kernel.asm	/^f0103781:	74 05                	je     f0103788 <envid2env+0x45>$/;"	l
f0103783	obj/kern/kernel.asm	/^f0103783:	39 43 48             	cmp    %eax,0x48(%ebx)$/;"	l
f0103786	obj/kern/kernel.asm	/^f0103786:	74 10                	je     f0103798 <envid2env+0x55>$/;"	l
f0103788	obj/kern/kernel.asm	/^f0103788:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010378b	obj/kern/kernel.asm	/^f010378b:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0103791	obj/kern/kernel.asm	/^f0103791:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f0103796	obj/kern/kernel.asm	/^f0103796:	eb 44                	jmp    f01037dc <envid2env+0x99>$/;"	l
f0103798	obj/kern/kernel.asm	/^f0103798:	84 d2                	test   %dl,%dl$/;"	l
f010379a	obj/kern/kernel.asm	/^f010379a:	74 36                	je     f01037d2 <envid2env+0x8f>$/;"	l
f010379c	obj/kern/kernel.asm	/^f010379c:	e8 b8 33 00 00       	call   f0106b59 <cpunum>$/;"	l
f01037a1	obj/kern/kernel.asm	/^f01037a1:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01037a4	obj/kern/kernel.asm	/^f01037a4:	39 98 28 a0 2b f0    	cmp    %ebx,-0xfd45fd8(%eax)$/;"	l
f01037aa	obj/kern/kernel.asm	/^f01037aa:	74 26                	je     f01037d2 <envid2env+0x8f>$/;"	l
f01037ac	obj/kern/kernel.asm	/^f01037ac:	8b 73 4c             	mov    0x4c(%ebx),%esi$/;"	l
f01037af	obj/kern/kernel.asm	/^f01037af:	e8 a5 33 00 00       	call   f0106b59 <cpunum>$/;"	l
f01037b4	obj/kern/kernel.asm	/^f01037b4:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01037b7	obj/kern/kernel.asm	/^f01037b7:	8b 80 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%eax$/;"	l
f01037bd	obj/kern/kernel.asm	/^f01037bd:	3b 70 48             	cmp    0x48(%eax),%esi$/;"	l
f01037c0	obj/kern/kernel.asm	/^f01037c0:	74 10                	je     f01037d2 <envid2env+0x8f>$/;"	l
f01037c2	obj/kern/kernel.asm	/^f01037c2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01037c5	obj/kern/kernel.asm	/^f01037c5:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01037cb	obj/kern/kernel.asm	/^f01037cb:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f01037d0	obj/kern/kernel.asm	/^f01037d0:	eb 0a                	jmp    f01037dc <envid2env+0x99>$/;"	l
f01037d2	obj/kern/kernel.asm	/^f01037d2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01037d5	obj/kern/kernel.asm	/^f01037d5:	89 18                	mov    %ebx,(%eax)$/;"	l
f01037d7	obj/kern/kernel.asm	/^f01037d7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01037dc	obj/kern/kernel.asm	/^f01037dc:	5b                   	pop    %ebx$/;"	l
f01037dd	obj/kern/kernel.asm	/^f01037dd:	5e                   	pop    %esi$/;"	l
f01037de	obj/kern/kernel.asm	/^f01037de:	5d                   	pop    %ebp$/;"	l
f01037df	obj/kern/kernel.asm	/^f01037df:	c3                   	ret    $/;"	l
f01037e0	obj/kern/kernel.asm	/^f01037e0 <env_init_percpu>:$/;"	l
f01037e0	obj/kern/kernel.asm	/^f01037e0:	55                   	push   %ebp$/;"	l
f01037e1	obj/kern/kernel.asm	/^f01037e1:	89 e5                	mov    %esp,%ebp$/;"	l
f01037e3	obj/kern/kernel.asm	/^f01037e3:	b8 20 53 12 f0       	mov    $0xf0125320,%eax$/;"	l
f01037e8	obj/kern/kernel.asm	/^f01037e8:	0f 01 10             	lgdtl  (%eax)$/;"	l
f01037eb	obj/kern/kernel.asm	/^f01037eb:	b8 23 00 00 00       	mov    $0x23,%eax$/;"	l
f01037f0	obj/kern/kernel.asm	/^f01037f0:	8e e8                	mov    %eax,%gs$/;"	l
f01037f2	obj/kern/kernel.asm	/^f01037f2:	8e e0                	mov    %eax,%fs$/;"	l
f01037f4	obj/kern/kernel.asm	/^f01037f4:	b0 10                	mov    $0x10,%al$/;"	l
f01037f6	obj/kern/kernel.asm	/^f01037f6:	8e c0                	mov    %eax,%es$/;"	l
f01037f8	obj/kern/kernel.asm	/^f01037f8:	8e d8                	mov    %eax,%ds$/;"	l
f01037fa	obj/kern/kernel.asm	/^f01037fa:	8e d0                	mov    %eax,%ss$/;"	l
f01037fc	obj/kern/kernel.asm	/^f01037fc:	ea 03 38 10 f0 08 00 	ljmp   $0x8,$0xf0103803$/;"	l
f0103803	obj/kern/kernel.asm	/^f0103803:	b0 00                	mov    $0x0,%al$/;"	l
f0103805	obj/kern/kernel.asm	/^f0103805:	0f 00 d0             	lldt   %ax$/;"	l
f0103808	obj/kern/kernel.asm	/^f0103808:	5d                   	pop    %ebp$/;"	l
f0103809	obj/kern/kernel.asm	/^f0103809:	c3                   	ret    $/;"	l
f010380a	obj/kern/kernel.asm	/^f010380a <env_init>:$/;"	l
f010380a	obj/kern/kernel.asm	/^f010380a:	55                   	push   %ebp$/;"	l
f010380b	obj/kern/kernel.asm	/^f010380b:	89 e5                	mov    %esp,%ebp$/;"	l
f010380d	obj/kern/kernel.asm	/^f010380d:	56                   	push   %esi$/;"	l
f010380e	obj/kern/kernel.asm	/^f010380e:	53                   	push   %ebx$/;"	l
f010380f	obj/kern/kernel.asm	/^f010380f:	8b 35 48 92 2b f0    	mov    0xf02b9248,%esi$/;"	l
f0103815	obj/kern/kernel.asm	/^f0103815:	8b 0d 4c 92 2b f0    	mov    0xf02b924c,%ecx$/;"	l
f010381b	obj/kern/kernel.asm	/^f010381b:	8d 86 84 ef 01 00    	lea    0x1ef84(%esi),%eax$/;"	l
f0103821	obj/kern/kernel.asm	/^f0103821:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f0103826	obj/kern/kernel.asm	/^f0103826:	89 c3                	mov    %eax,%ebx$/;"	l
f0103828	obj/kern/kernel.asm	/^f0103828:	c7 40 54 00 00 00 00 	movl   $0x0,0x54(%eax)$/;"	l
f010382f	obj/kern/kernel.asm	/^f010382f:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%eax)$/;"	l
f0103836	obj/kern/kernel.asm	/^f0103836:	89 48 44             	mov    %ecx,0x44(%eax)$/;"	l
f0103839	obj/kern/kernel.asm	/^f0103839:	83 e8 7c             	sub    $0x7c,%eax$/;"	l
f010383c	obj/kern/kernel.asm	/^f010383c:	83 ea 01             	sub    $0x1,%edx$/;"	l
f010383f	obj/kern/kernel.asm	/^f010383f:	74 04                	je     f0103845 <env_init+0x3b>$/;"	l
f0103841	obj/kern/kernel.asm	/^f0103841:	89 d9                	mov    %ebx,%ecx$/;"	l
f0103843	obj/kern/kernel.asm	/^f0103843:	eb e1                	jmp    f0103826 <env_init+0x1c>$/;"	l
f0103845	obj/kern/kernel.asm	/^f0103845:	89 35 4c 92 2b f0    	mov    %esi,0xf02b924c$/;"	l
f010384b	obj/kern/kernel.asm	/^f010384b:	e8 90 ff ff ff       	call   f01037e0 <env_init_percpu>$/;"	l
f0103850	obj/kern/kernel.asm	/^f0103850:	5b                   	pop    %ebx$/;"	l
f0103851	obj/kern/kernel.asm	/^f0103851:	5e                   	pop    %esi$/;"	l
f0103852	obj/kern/kernel.asm	/^f0103852:	5d                   	pop    %ebp$/;"	l
f0103853	obj/kern/kernel.asm	/^f0103853:	c3                   	ret    $/;"	l
f0103854	obj/kern/kernel.asm	/^f0103854 <env_alloc>:$/;"	l
f0103854	obj/kern/kernel.asm	/^f0103854:	55                   	push   %ebp$/;"	l
f0103855	obj/kern/kernel.asm	/^f0103855:	89 e5                	mov    %esp,%ebp$/;"	l
f0103857	obj/kern/kernel.asm	/^f0103857:	56                   	push   %esi$/;"	l
f0103858	obj/kern/kernel.asm	/^f0103858:	53                   	push   %ebx$/;"	l
f0103859	obj/kern/kernel.asm	/^f0103859:	83 ec 10             	sub    $0x10,%esp$/;"	l
f010385c	obj/kern/kernel.asm	/^f010385c:	8b 1d 4c 92 2b f0    	mov    0xf02b924c,%ebx$/;"	l
f0103862	obj/kern/kernel.asm	/^f0103862:	85 db                	test   %ebx,%ebx$/;"	l
f0103864	obj/kern/kernel.asm	/^f0103864:	0f 84 6d 01 00 00    	je     f01039d7 <env_alloc+0x183>$/;"	l
f010386a	obj/kern/kernel.asm	/^f010386a:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f0103871	obj/kern/kernel.asm	/^f0103871:	e8 c5 d8 ff ff       	call   f010113b <page_alloc>$/;"	l
f0103876	obj/kern/kernel.asm	/^f0103876:	89 c6                	mov    %eax,%esi$/;"	l
f0103878	obj/kern/kernel.asm	/^f0103878:	85 c0                	test   %eax,%eax$/;"	l
f010387a	obj/kern/kernel.asm	/^f010387a:	0f 84 5e 01 00 00    	je     f01039de <env_alloc+0x18a>$/;"	l
f0103880	obj/kern/kernel.asm	/^f0103880:	2b 05 9c 9e 2b f0    	sub    0xf02b9e9c,%eax$/;"	l
f0103886	obj/kern/kernel.asm	/^f0103886:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0103889	obj/kern/kernel.asm	/^f0103889:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010388c	obj/kern/kernel.asm	/^f010388c:	89 c2                	mov    %eax,%edx$/;"	l
f010388e	obj/kern/kernel.asm	/^f010388e:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0103891	obj/kern/kernel.asm	/^f0103891:	3b 15 94 9e 2b f0    	cmp    0xf02b9e94,%edx$/;"	l
f0103897	obj/kern/kernel.asm	/^f0103897:	72 20                	jb     f01038b9 <env_alloc+0x65>$/;"	l
f0103899	obj/kern/kernel.asm	/^f0103899:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010389d	obj/kern/kernel.asm	/^f010389d:	c7 44 24 08 c4 7f 10 	movl   $0xf0107fc4,0x8(%esp)$/;"	l
f01038a4	obj/kern/kernel.asm	/^f01038a4:	f0 $/;"	l
f01038a5	obj/kern/kernel.asm	/^f01038a5:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f01038ac	obj/kern/kernel.asm	/^f01038ac:	00 $/;"	l
f01038ad	obj/kern/kernel.asm	/^f01038ad:	c7 04 24 1d 8f 10 f0 	movl   $0xf0108f1d,(%esp)$/;"	l
f01038b4	obj/kern/kernel.asm	/^f01038b4:	e8 87 c7 ff ff       	call   f0100040 <_panic>$/;"	l
f01038b9	obj/kern/kernel.asm	/^f01038b9:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f01038be	obj/kern/kernel.asm	/^f01038be:	89 43 60             	mov    %eax,0x60(%ebx)$/;"	l
f01038c1	obj/kern/kernel.asm	/^f01038c1:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01038c8	obj/kern/kernel.asm	/^f01038c8:	00 $/;"	l
f01038c9	obj/kern/kernel.asm	/^f01038c9:	8b 15 98 9e 2b f0    	mov    0xf02b9e98,%edx$/;"	l
f01038cf	obj/kern/kernel.asm	/^f01038cf:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01038d3	obj/kern/kernel.asm	/^f01038d3:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01038d6	obj/kern/kernel.asm	/^f01038d6:	e8 79 2c 00 00       	call   f0106554 <memmove>$/;"	l
f01038db	obj/kern/kernel.asm	/^f01038db:	c7 44 24 08 ec 0e 00 	movl   $0xeec,0x8(%esp)$/;"	l
f01038e2	obj/kern/kernel.asm	/^f01038e2:	00 $/;"	l
f01038e3	obj/kern/kernel.asm	/^f01038e3:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01038ea	obj/kern/kernel.asm	/^f01038ea:	00 $/;"	l
f01038eb	obj/kern/kernel.asm	/^f01038eb:	8b 43 60             	mov    0x60(%ebx),%eax$/;"	l
f01038ee	obj/kern/kernel.asm	/^f01038ee:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01038f1	obj/kern/kernel.asm	/^f01038f1:	e8 11 2c 00 00       	call   f0106507 <memset>$/;"	l
f01038f6	obj/kern/kernel.asm	/^f01038f6:	66 83 46 04 01       	addw   $0x1,0x4(%esi)$/;"	l
f01038fb	obj/kern/kernel.asm	/^f01038fb:	8b 43 60             	mov    0x60(%ebx),%eax$/;"	l
f01038fe	obj/kern/kernel.asm	/^f01038fe:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103903	obj/kern/kernel.asm	/^f0103903:	77 20                	ja     f0103925 <env_alloc+0xd1>$/;"	l
f0103905	obj/kern/kernel.asm	/^f0103905:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103909	obj/kern/kernel.asm	/^f0103909:	c7 44 24 08 e8 7f 10 	movl   $0xf0107fe8,0x8(%esp)$/;"	l
f0103910	obj/kern/kernel.asm	/^f0103910:	f0 $/;"	l
f0103911	obj/kern/kernel.asm	/^f0103911:	c7 44 24 04 c8 00 00 	movl   $0xc8,0x4(%esp)$/;"	l
f0103918	obj/kern/kernel.asm	/^f0103918:	00 $/;"	l
f0103919	obj/kern/kernel.asm	/^f0103919:	c7 04 24 64 92 10 f0 	movl   $0xf0109264,(%esp)$/;"	l
f0103920	obj/kern/kernel.asm	/^f0103920:	e8 1b c7 ff ff       	call   f0100040 <_panic>$/;"	l
f0103925	obj/kern/kernel.asm	/^f0103925:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f010392b	obj/kern/kernel.asm	/^f010392b:	83 ca 05             	or     $0x5,%edx$/;"	l
f010392e	obj/kern/kernel.asm	/^f010392e:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
f0103934	obj/kern/kernel.asm	/^f0103934:	8b 43 48             	mov    0x48(%ebx),%eax$/;"	l
f0103937	obj/kern/kernel.asm	/^f0103937:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
f010393c	obj/kern/kernel.asm	/^f010393c:	25 00 fc ff ff       	and    $0xfffffc00,%eax$/;"	l
f0103941	obj/kern/kernel.asm	/^f0103941:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0103946	obj/kern/kernel.asm	/^f0103946:	0f 4e c2             	cmovle %edx,%eax$/;"	l
f0103949	obj/kern/kernel.asm	/^f0103949:	89 da                	mov    %ebx,%edx$/;"	l
f010394b	obj/kern/kernel.asm	/^f010394b:	2b 15 48 92 2b f0    	sub    0xf02b9248,%edx$/;"	l
f0103951	obj/kern/kernel.asm	/^f0103951:	c1 fa 02             	sar    $0x2,%edx$/;"	l
f0103954	obj/kern/kernel.asm	/^f0103954:	69 d2 df 7b ef bd    	imul   $0xbdef7bdf,%edx,%edx$/;"	l
f010395a	obj/kern/kernel.asm	/^f010395a:	09 d0                	or     %edx,%eax$/;"	l
f010395c	obj/kern/kernel.asm	/^f010395c:	89 43 48             	mov    %eax,0x48(%ebx)$/;"	l
f010395f	obj/kern/kernel.asm	/^f010395f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103962	obj/kern/kernel.asm	/^f0103962:	89 43 4c             	mov    %eax,0x4c(%ebx)$/;"	l
f0103965	obj/kern/kernel.asm	/^f0103965:	c7 43 50 00 00 00 00 	movl   $0x0,0x50(%ebx)$/;"	l
f010396c	obj/kern/kernel.asm	/^f010396c:	c7 43 54 02 00 00 00 	movl   $0x2,0x54(%ebx)$/;"	l
f0103973	obj/kern/kernel.asm	/^f0103973:	c7 43 58 00 00 00 00 	movl   $0x0,0x58(%ebx)$/;"	l
f010397a	obj/kern/kernel.asm	/^f010397a:	c7 44 24 08 44 00 00 	movl   $0x44,0x8(%esp)$/;"	l
f0103981	obj/kern/kernel.asm	/^f0103981:	00 $/;"	l
f0103982	obj/kern/kernel.asm	/^f0103982:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0103989	obj/kern/kernel.asm	/^f0103989:	00 $/;"	l
f010398a	obj/kern/kernel.asm	/^f010398a:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010398d	obj/kern/kernel.asm	/^f010398d:	e8 75 2b 00 00       	call   f0106507 <memset>$/;"	l
f0103992	obj/kern/kernel.asm	/^f0103992:	66 c7 43 24 23 00    	movw   $0x23,0x24(%ebx)$/;"	l
f0103998	obj/kern/kernel.asm	/^f0103998:	66 c7 43 20 23 00    	movw   $0x23,0x20(%ebx)$/;"	l
f010399e	obj/kern/kernel.asm	/^f010399e:	66 c7 43 40 23 00    	movw   $0x23,0x40(%ebx)$/;"	l
f01039a4	obj/kern/kernel.asm	/^f01039a4:	c7 43 3c 00 e0 bf ee 	movl   $0xeebfe000,0x3c(%ebx)$/;"	l
f01039ab	obj/kern/kernel.asm	/^f01039ab:	66 c7 43 34 1b 00    	movw   $0x1b,0x34(%ebx)$/;"	l
f01039b1	obj/kern/kernel.asm	/^f01039b1:	81 4b 38 00 02 00 00 	orl    $0x200,0x38(%ebx)$/;"	l
f01039b8	obj/kern/kernel.asm	/^f01039b8:	c7 43 64 00 00 00 00 	movl   $0x0,0x64(%ebx)$/;"	l
f01039bf	obj/kern/kernel.asm	/^f01039bf:	c6 43 68 00          	movb   $0x0,0x68(%ebx)$/;"	l
f01039c3	obj/kern/kernel.asm	/^f01039c3:	8b 43 44             	mov    0x44(%ebx),%eax$/;"	l
f01039c6	obj/kern/kernel.asm	/^f01039c6:	a3 4c 92 2b f0       	mov    %eax,0xf02b924c$/;"	l
f01039cb	obj/kern/kernel.asm	/^f01039cb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01039ce	obj/kern/kernel.asm	/^f01039ce:	89 18                	mov    %ebx,(%eax)$/;"	l
f01039d0	obj/kern/kernel.asm	/^f01039d0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01039d5	obj/kern/kernel.asm	/^f01039d5:	eb 0c                	jmp    f01039e3 <env_alloc+0x18f>$/;"	l
f01039d7	obj/kern/kernel.asm	/^f01039d7:	b8 fb ff ff ff       	mov    $0xfffffffb,%eax$/;"	l
f01039dc	obj/kern/kernel.asm	/^f01039dc:	eb 05                	jmp    f01039e3 <env_alloc+0x18f>$/;"	l
f01039de	obj/kern/kernel.asm	/^f01039de:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f01039e3	obj/kern/kernel.asm	/^f01039e3:	83 c4 10             	add    $0x10,%esp$/;"	l
f01039e6	obj/kern/kernel.asm	/^f01039e6:	5b                   	pop    %ebx$/;"	l
f01039e7	obj/kern/kernel.asm	/^f01039e7:	5e                   	pop    %esi$/;"	l
f01039e8	obj/kern/kernel.asm	/^f01039e8:	5d                   	pop    %ebp$/;"	l
f01039e9	obj/kern/kernel.asm	/^f01039e9:	c3                   	ret    $/;"	l
f01039ea	obj/kern/kernel.asm	/^f01039ea <env_create>:$/;"	l
f01039ea	obj/kern/kernel.asm	/^f01039ea:	55                   	push   %ebp$/;"	l
f01039eb	obj/kern/kernel.asm	/^f01039eb:	89 e5                	mov    %esp,%ebp$/;"	l
f01039ed	obj/kern/kernel.asm	/^f01039ed:	57                   	push   %edi$/;"	l
f01039ee	obj/kern/kernel.asm	/^f01039ee:	56                   	push   %esi$/;"	l
f01039ef	obj/kern/kernel.asm	/^f01039ef:	53                   	push   %ebx$/;"	l
f01039f0	obj/kern/kernel.asm	/^f01039f0:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f01039f3	obj/kern/kernel.asm	/^f01039f3:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f01039f6	obj/kern/kernel.asm	/^f01039f6:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01039fd	obj/kern/kernel.asm	/^f01039fd:	00 $/;"	l
f01039fe	obj/kern/kernel.asm	/^f01039fe:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0103a01	obj/kern/kernel.asm	/^f0103a01:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103a04	obj/kern/kernel.asm	/^f0103a04:	e8 4b fe ff ff       	call   f0103854 <env_alloc>$/;"	l
f0103a09	obj/kern/kernel.asm	/^f0103a09:	85 c0                	test   %eax,%eax$/;"	l
f0103a0b	obj/kern/kernel.asm	/^f0103a0b:	74 20                	je     f0103a2d <env_create+0x43>$/;"	l
f0103a0d	obj/kern/kernel.asm	/^f0103a0d:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103a11	obj/kern/kernel.asm	/^f0103a11:	c7 44 24 08 83 92 10 	movl   $0xf0109283,0x8(%esp)$/;"	l
f0103a18	obj/kern/kernel.asm	/^f0103a18:	f0 $/;"	l
f0103a19	obj/kern/kernel.asm	/^f0103a19:	c7 44 24 04 a4 01 00 	movl   $0x1a4,0x4(%esp)$/;"	l
f0103a20	obj/kern/kernel.asm	/^f0103a20:	00 $/;"	l
f0103a21	obj/kern/kernel.asm	/^f0103a21:	c7 04 24 64 92 10 f0 	movl   $0xf0109264,(%esp)$/;"	l
f0103a28	obj/kern/kernel.asm	/^f0103a28:	e8 13 c6 ff ff       	call   f0100040 <_panic>$/;"	l
f0103a2d	obj/kern/kernel.asm	/^f0103a2d:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0103a30	obj/kern/kernel.asm	/^f0103a30:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0103a33	obj/kern/kernel.asm	/^f0103a33:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%edi)$/;"	l
f0103a39	obj/kern/kernel.asm	/^f0103a39:	74 1c                	je     f0103a57 <env_create+0x6d>$/;"	l
f0103a3b	obj/kern/kernel.asm	/^f0103a3b:	c7 44 24 08 a8 92 10 	movl   $0xf01092a8,0x8(%esp)$/;"	l
f0103a42	obj/kern/kernel.asm	/^f0103a42:	f0 $/;"	l
f0103a43	obj/kern/kernel.asm	/^f0103a43:	c7 44 24 04 79 01 00 	movl   $0x179,0x4(%esp)$/;"	l
f0103a4a	obj/kern/kernel.asm	/^f0103a4a:	00 $/;"	l
f0103a4b	obj/kern/kernel.asm	/^f0103a4b:	c7 04 24 64 92 10 f0 	movl   $0xf0109264,(%esp)$/;"	l
f0103a52	obj/kern/kernel.asm	/^f0103a52:	e8 e9 c5 ff ff       	call   f0100040 <_panic>$/;"	l
f0103a57	obj/kern/kernel.asm	/^f0103a57:	89 fb                	mov    %edi,%ebx$/;"	l
f0103a59	obj/kern/kernel.asm	/^f0103a59:	03 5f 1c             	add    0x1c(%edi),%ebx$/;"	l
f0103a5c	obj/kern/kernel.asm	/^f0103a5c:	0f b7 77 2c          	movzwl 0x2c(%edi),%esi$/;"	l
f0103a60	obj/kern/kernel.asm	/^f0103a60:	c1 e6 05             	shl    $0x5,%esi$/;"	l
f0103a63	obj/kern/kernel.asm	/^f0103a63:	01 de                	add    %ebx,%esi$/;"	l
f0103a65	obj/kern/kernel.asm	/^f0103a65:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0103a68	obj/kern/kernel.asm	/^f0103a68:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0103a6b	obj/kern/kernel.asm	/^f0103a6b:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103a70	obj/kern/kernel.asm	/^f0103a70:	77 20                	ja     f0103a92 <env_create+0xa8>$/;"	l
f0103a72	obj/kern/kernel.asm	/^f0103a72:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103a76	obj/kern/kernel.asm	/^f0103a76:	c7 44 24 08 e8 7f 10 	movl   $0xf0107fe8,0x8(%esp)$/;"	l
f0103a7d	obj/kern/kernel.asm	/^f0103a7d:	f0 $/;"	l
f0103a7e	obj/kern/kernel.asm	/^f0103a7e:	c7 44 24 04 7e 01 00 	movl   $0x17e,0x4(%esp)$/;"	l
f0103a85	obj/kern/kernel.asm	/^f0103a85:	00 $/;"	l
f0103a86	obj/kern/kernel.asm	/^f0103a86:	c7 04 24 64 92 10 f0 	movl   $0xf0109264,(%esp)$/;"	l
f0103a8d	obj/kern/kernel.asm	/^f0103a8d:	e8 ae c5 ff ff       	call   f0100040 <_panic>$/;"	l
f0103a92	obj/kern/kernel.asm	/^f0103a92:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103a97	obj/kern/kernel.asm	/^f0103a97:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103a9a	obj/kern/kernel.asm	/^f0103a9a:	eb 54                	jmp    f0103af0 <env_create+0x106>$/;"	l
f0103a9c	obj/kern/kernel.asm	/^f0103a9c:	83 3b 01             	cmpl   $0x1,(%ebx)$/;"	l
f0103a9f	obj/kern/kernel.asm	/^f0103a9f:	75 4c                	jne    f0103aed <env_create+0x103>$/;"	l
f0103aa1	obj/kern/kernel.asm	/^f0103aa1:	8b 4b 14             	mov    0x14(%ebx),%ecx$/;"	l
f0103aa4	obj/kern/kernel.asm	/^f0103aa4:	8b 53 08             	mov    0x8(%ebx),%edx$/;"	l
f0103aa7	obj/kern/kernel.asm	/^f0103aa7:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0103aaa	obj/kern/kernel.asm	/^f0103aaa:	e8 ed fb ff ff       	call   f010369c <region_alloc>$/;"	l
f0103aaf	obj/kern/kernel.asm	/^f0103aaf:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f0103ab2	obj/kern/kernel.asm	/^f0103ab2:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0103ab6	obj/kern/kernel.asm	/^f0103ab6:	89 f8                	mov    %edi,%eax$/;"	l
f0103ab8	obj/kern/kernel.asm	/^f0103ab8:	03 43 04             	add    0x4(%ebx),%eax$/;"	l
f0103abb	obj/kern/kernel.asm	/^f0103abb:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103abf	obj/kern/kernel.asm	/^f0103abf:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0103ac2	obj/kern/kernel.asm	/^f0103ac2:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103ac5	obj/kern/kernel.asm	/^f0103ac5:	e8 8a 2a 00 00       	call   f0106554 <memmove>$/;"	l
f0103aca	obj/kern/kernel.asm	/^f0103aca:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f0103acd	obj/kern/kernel.asm	/^f0103acd:	8b 53 14             	mov    0x14(%ebx),%edx$/;"	l
f0103ad0	obj/kern/kernel.asm	/^f0103ad0:	39 d0                	cmp    %edx,%eax$/;"	l
f0103ad2	obj/kern/kernel.asm	/^f0103ad2:	73 19                	jae    f0103aed <env_create+0x103>$/;"	l
f0103ad4	obj/kern/kernel.asm	/^f0103ad4:	29 c2                	sub    %eax,%edx$/;"	l
f0103ad6	obj/kern/kernel.asm	/^f0103ad6:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0103ada	obj/kern/kernel.asm	/^f0103ada:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0103ae1	obj/kern/kernel.asm	/^f0103ae1:	00 $/;"	l
f0103ae2	obj/kern/kernel.asm	/^f0103ae2:	03 43 08             	add    0x8(%ebx),%eax$/;"	l
f0103ae5	obj/kern/kernel.asm	/^f0103ae5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103ae8	obj/kern/kernel.asm	/^f0103ae8:	e8 1a 2a 00 00       	call   f0106507 <memset>$/;"	l
f0103aed	obj/kern/kernel.asm	/^f0103aed:	83 c3 20             	add    $0x20,%ebx$/;"	l
f0103af0	obj/kern/kernel.asm	/^f0103af0:	39 de                	cmp    %ebx,%esi$/;"	l
f0103af2	obj/kern/kernel.asm	/^f0103af2:	77 a8                	ja     f0103a9c <env_create+0xb2>$/;"	l
f0103af4	obj/kern/kernel.asm	/^f0103af4:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f0103af9	obj/kern/kernel.asm	/^f0103af9:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103afe	obj/kern/kernel.asm	/^f0103afe:	77 20                	ja     f0103b20 <env_create+0x136>$/;"	l
f0103b00	obj/kern/kernel.asm	/^f0103b00:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103b04	obj/kern/kernel.asm	/^f0103b04:	c7 44 24 08 e8 7f 10 	movl   $0xf0107fe8,0x8(%esp)$/;"	l
f0103b0b	obj/kern/kernel.asm	/^f0103b0b:	f0 $/;"	l
f0103b0c	obj/kern/kernel.asm	/^f0103b0c:	c7 44 24 04 8b 01 00 	movl   $0x18b,0x4(%esp)$/;"	l
f0103b13	obj/kern/kernel.asm	/^f0103b13:	00 $/;"	l
f0103b14	obj/kern/kernel.asm	/^f0103b14:	c7 04 24 64 92 10 f0 	movl   $0xf0109264,(%esp)$/;"	l
f0103b1b	obj/kern/kernel.asm	/^f0103b1b:	e8 20 c5 ff ff       	call   f0100040 <_panic>$/;"	l
f0103b20	obj/kern/kernel.asm	/^f0103b20:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103b25	obj/kern/kernel.asm	/^f0103b25:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103b28	obj/kern/kernel.asm	/^f0103b28:	8b 47 18             	mov    0x18(%edi),%eax$/;"	l
f0103b2b	obj/kern/kernel.asm	/^f0103b2b:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f0103b2e	obj/kern/kernel.asm	/^f0103b2e:	89 47 30             	mov    %eax,0x30(%edi)$/;"	l
f0103b31	obj/kern/kernel.asm	/^f0103b31:	b9 00 10 00 00       	mov    $0x1000,%ecx$/;"	l
f0103b36	obj/kern/kernel.asm	/^f0103b36:	ba 00 d0 bf ee       	mov    $0xeebfd000,%edx$/;"	l
f0103b3b	obj/kern/kernel.asm	/^f0103b3b:	89 f8                	mov    %edi,%eax$/;"	l
f0103b3d	obj/kern/kernel.asm	/^f0103b3d:	e8 5a fb ff ff       	call   f010369c <region_alloc>$/;"	l
f0103b42	obj/kern/kernel.asm	/^f0103b42:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0103b45	obj/kern/kernel.asm	/^f0103b45:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0103b48	obj/kern/kernel.asm	/^f0103b48:	89 48 50             	mov    %ecx,0x50(%eax)$/;"	l
f0103b4b	obj/kern/kernel.asm	/^f0103b4b:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
f0103b4e	obj/kern/kernel.asm	/^f0103b4e:	75 07                	jne    f0103b57 <env_create+0x16d>$/;"	l
f0103b50	obj/kern/kernel.asm	/^f0103b50:	81 48 38 00 30 00 00 	orl    $0x3000,0x38(%eax)$/;"	l
f0103b57	obj/kern/kernel.asm	/^f0103b57:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f0103b5a	obj/kern/kernel.asm	/^f0103b5a:	5b                   	pop    %ebx$/;"	l
f0103b5b	obj/kern/kernel.asm	/^f0103b5b:	5e                   	pop    %esi$/;"	l
f0103b5c	obj/kern/kernel.asm	/^f0103b5c:	5f                   	pop    %edi$/;"	l
f0103b5d	obj/kern/kernel.asm	/^f0103b5d:	5d                   	pop    %ebp$/;"	l
f0103b5e	obj/kern/kernel.asm	/^f0103b5e:	c3                   	ret    $/;"	l
f0103b5f	obj/kern/kernel.asm	/^f0103b5f <env_free>:$/;"	l
f0103b5f	obj/kern/kernel.asm	/^f0103b5f:	55                   	push   %ebp$/;"	l
f0103b60	obj/kern/kernel.asm	/^f0103b60:	89 e5                	mov    %esp,%ebp$/;"	l
f0103b62	obj/kern/kernel.asm	/^f0103b62:	57                   	push   %edi$/;"	l
f0103b63	obj/kern/kernel.asm	/^f0103b63:	56                   	push   %esi$/;"	l
f0103b64	obj/kern/kernel.asm	/^f0103b64:	53                   	push   %ebx$/;"	l
f0103b65	obj/kern/kernel.asm	/^f0103b65:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0103b68	obj/kern/kernel.asm	/^f0103b68:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0103b6b	obj/kern/kernel.asm	/^f0103b6b:	e8 e9 2f 00 00       	call   f0106b59 <cpunum>$/;"	l
f0103b70	obj/kern/kernel.asm	/^f0103b70:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103b73	obj/kern/kernel.asm	/^f0103b73:	39 b8 28 a0 2b f0    	cmp    %edi,-0xfd45fd8(%eax)$/;"	l
f0103b79	obj/kern/kernel.asm	/^f0103b79:	74 09                	je     f0103b84 <env_free+0x25>$/;"	l
f0103b7b	obj/kern/kernel.asm	/^f0103b7b:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f0103b82	obj/kern/kernel.asm	/^f0103b82:	eb 36                	jmp    f0103bba <env_free+0x5b>$/;"	l
f0103b84	obj/kern/kernel.asm	/^f0103b84:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f0103b89	obj/kern/kernel.asm	/^f0103b89:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103b8e	obj/kern/kernel.asm	/^f0103b8e:	77 20                	ja     f0103bb0 <env_free+0x51>$/;"	l
f0103b90	obj/kern/kernel.asm	/^f0103b90:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103b94	obj/kern/kernel.asm	/^f0103b94:	c7 44 24 08 e8 7f 10 	movl   $0xf0107fe8,0x8(%esp)$/;"	l
f0103b9b	obj/kern/kernel.asm	/^f0103b9b:	f0 $/;"	l
f0103b9c	obj/kern/kernel.asm	/^f0103b9c:	c7 44 24 04 bd 01 00 	movl   $0x1bd,0x4(%esp)$/;"	l
f0103ba3	obj/kern/kernel.asm	/^f0103ba3:	00 $/;"	l
f0103ba4	obj/kern/kernel.asm	/^f0103ba4:	c7 04 24 64 92 10 f0 	movl   $0xf0109264,(%esp)$/;"	l
f0103bab	obj/kern/kernel.asm	/^f0103bab:	e8 90 c4 ff ff       	call   f0100040 <_panic>$/;"	l
f0103bb0	obj/kern/kernel.asm	/^f0103bb0:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103bb5	obj/kern/kernel.asm	/^f0103bb5:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103bb8	obj/kern/kernel.asm	/^f0103bb8:	eb c1                	jmp    f0103b7b <env_free+0x1c>$/;"	l
f0103bba	obj/kern/kernel.asm	/^f0103bba:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f0103bbd	obj/kern/kernel.asm	/^f0103bbd:	89 c8                	mov    %ecx,%eax$/;"	l
f0103bbf	obj/kern/kernel.asm	/^f0103bbf:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0103bc2	obj/kern/kernel.asm	/^f0103bc2:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0103bc5	obj/kern/kernel.asm	/^f0103bc5:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103bc8	obj/kern/kernel.asm	/^f0103bc8:	8b 34 88             	mov    (%eax,%ecx,4),%esi$/;"	l
f0103bcb	obj/kern/kernel.asm	/^f0103bcb:	f7 c6 01 00 00 00    	test   $0x1,%esi$/;"	l
f0103bd1	obj/kern/kernel.asm	/^f0103bd1:	0f 84 b7 00 00 00    	je     f0103c8e <env_free+0x12f>$/;"	l
f0103bd7	obj/kern/kernel.asm	/^f0103bd7:	81 e6 00 f0 ff ff    	and    $0xfffff000,%esi$/;"	l
f0103bdd	obj/kern/kernel.asm	/^f0103bdd:	89 f0                	mov    %esi,%eax$/;"	l
f0103bdf	obj/kern/kernel.asm	/^f0103bdf:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0103be2	obj/kern/kernel.asm	/^f0103be2:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0103be5	obj/kern/kernel.asm	/^f0103be5:	3b 05 94 9e 2b f0    	cmp    0xf02b9e94,%eax$/;"	l
f0103beb	obj/kern/kernel.asm	/^f0103beb:	72 20                	jb     f0103c0d <env_free+0xae>$/;"	l
f0103bed	obj/kern/kernel.asm	/^f0103bed:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f0103bf1	obj/kern/kernel.asm	/^f0103bf1:	c7 44 24 08 c4 7f 10 	movl   $0xf0107fc4,0x8(%esp)$/;"	l
f0103bf8	obj/kern/kernel.asm	/^f0103bf8:	f0 $/;"	l
f0103bf9	obj/kern/kernel.asm	/^f0103bf9:	c7 44 24 04 cc 01 00 	movl   $0x1cc,0x4(%esp)$/;"	l
f0103c00	obj/kern/kernel.asm	/^f0103c00:	00 $/;"	l
f0103c01	obj/kern/kernel.asm	/^f0103c01:	c7 04 24 64 92 10 f0 	movl   $0xf0109264,(%esp)$/;"	l
f0103c08	obj/kern/kernel.asm	/^f0103c08:	e8 33 c4 ff ff       	call   f0100040 <_panic>$/;"	l
f0103c0d	obj/kern/kernel.asm	/^f0103c0d:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0103c10	obj/kern/kernel.asm	/^f0103c10:	c1 e0 16             	shl    $0x16,%eax$/;"	l
f0103c13	obj/kern/kernel.asm	/^f0103c13:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0103c16	obj/kern/kernel.asm	/^f0103c16:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0103c1b	obj/kern/kernel.asm	/^f0103c1b:	f6 84 9e 00 00 00 f0 	testb  $0x1,-0x10000000(%esi,%ebx,4)$/;"	l
f0103c22	obj/kern/kernel.asm	/^f0103c22:	01 $/;"	l
f0103c23	obj/kern/kernel.asm	/^f0103c23:	74 17                	je     f0103c3c <env_free+0xdd>$/;"	l
f0103c25	obj/kern/kernel.asm	/^f0103c25:	89 d8                	mov    %ebx,%eax$/;"	l
f0103c27	obj/kern/kernel.asm	/^f0103c27:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0103c2a	obj/kern/kernel.asm	/^f0103c2a:	0b 45 e4             	or     -0x1c(%ebp),%eax$/;"	l
f0103c2d	obj/kern/kernel.asm	/^f0103c2d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103c31	obj/kern/kernel.asm	/^f0103c31:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103c34	obj/kern/kernel.asm	/^f0103c34:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103c37	obj/kern/kernel.asm	/^f0103c37:	e8 f6 d7 ff ff       	call   f0101432 <page_remove>$/;"	l
f0103c3c	obj/kern/kernel.asm	/^f0103c3c:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0103c3f	obj/kern/kernel.asm	/^f0103c3f:	81 fb 00 04 00 00    	cmp    $0x400,%ebx$/;"	l
f0103c45	obj/kern/kernel.asm	/^f0103c45:	75 d4                	jne    f0103c1b <env_free+0xbc>$/;"	l
f0103c47	obj/kern/kernel.asm	/^f0103c47:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103c4a	obj/kern/kernel.asm	/^f0103c4a:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0103c4d	obj/kern/kernel.asm	/^f0103c4d:	c7 04 10 00 00 00 00 	movl   $0x0,(%eax,%edx,1)$/;"	l
f0103c54	obj/kern/kernel.asm	/^f0103c54:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0103c57	obj/kern/kernel.asm	/^f0103c57:	3b 05 94 9e 2b f0    	cmp    0xf02b9e94,%eax$/;"	l
f0103c5d	obj/kern/kernel.asm	/^f0103c5d:	72 1c                	jb     f0103c7b <env_free+0x11c>$/;"	l
f0103c5f	obj/kern/kernel.asm	/^f0103c5f:	c7 44 24 08 b0 86 10 	movl   $0xf01086b0,0x8(%esp)$/;"	l
f0103c66	obj/kern/kernel.asm	/^f0103c66:	f0 $/;"	l
f0103c67	obj/kern/kernel.asm	/^f0103c67:	c7 44 24 04 51 00 00 	movl   $0x51,0x4(%esp)$/;"	l
f0103c6e	obj/kern/kernel.asm	/^f0103c6e:	00 $/;"	l
f0103c6f	obj/kern/kernel.asm	/^f0103c6f:	c7 04 24 1d 8f 10 f0 	movl   $0xf0108f1d,(%esp)$/;"	l
f0103c76	obj/kern/kernel.asm	/^f0103c76:	e8 c5 c3 ff ff       	call   f0100040 <_panic>$/;"	l
f0103c7b	obj/kern/kernel.asm	/^f0103c7b:	a1 9c 9e 2b f0       	mov    0xf02b9e9c,%eax$/;"	l
f0103c80	obj/kern/kernel.asm	/^f0103c80:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0103c83	obj/kern/kernel.asm	/^f0103c83:	8d 04 d0             	lea    (%eax,%edx,8),%eax$/;"	l
f0103c86	obj/kern/kernel.asm	/^f0103c86:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103c89	obj/kern/kernel.asm	/^f0103c89:	e8 99 d5 ff ff       	call   f0101227 <page_decref>$/;"	l
f0103c8e	obj/kern/kernel.asm	/^f0103c8e:	83 45 e0 01          	addl   $0x1,-0x20(%ebp)$/;"	l
f0103c92	obj/kern/kernel.asm	/^f0103c92:	81 7d e0 bb 03 00 00 	cmpl   $0x3bb,-0x20(%ebp)$/;"	l
f0103c99	obj/kern/kernel.asm	/^f0103c99:	0f 85 1b ff ff ff    	jne    f0103bba <env_free+0x5b>$/;"	l
f0103c9f	obj/kern/kernel.asm	/^f0103c9f:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103ca2	obj/kern/kernel.asm	/^f0103ca2:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103ca7	obj/kern/kernel.asm	/^f0103ca7:	77 20                	ja     f0103cc9 <env_free+0x16a>$/;"	l
f0103ca9	obj/kern/kernel.asm	/^f0103ca9:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103cad	obj/kern/kernel.asm	/^f0103cad:	c7 44 24 08 e8 7f 10 	movl   $0xf0107fe8,0x8(%esp)$/;"	l
f0103cb4	obj/kern/kernel.asm	/^f0103cb4:	f0 $/;"	l
f0103cb5	obj/kern/kernel.asm	/^f0103cb5:	c7 44 24 04 da 01 00 	movl   $0x1da,0x4(%esp)$/;"	l
f0103cbc	obj/kern/kernel.asm	/^f0103cbc:	00 $/;"	l
f0103cbd	obj/kern/kernel.asm	/^f0103cbd:	c7 04 24 64 92 10 f0 	movl   $0xf0109264,(%esp)$/;"	l
f0103cc4	obj/kern/kernel.asm	/^f0103cc4:	e8 77 c3 ff ff       	call   f0100040 <_panic>$/;"	l
f0103cc9	obj/kern/kernel.asm	/^f0103cc9:	c7 47 60 00 00 00 00 	movl   $0x0,0x60(%edi)$/;"	l
f0103cd0	obj/kern/kernel.asm	/^f0103cd0:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103cd5	obj/kern/kernel.asm	/^f0103cd5:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0103cd8	obj/kern/kernel.asm	/^f0103cd8:	3b 05 94 9e 2b f0    	cmp    0xf02b9e94,%eax$/;"	l
f0103cde	obj/kern/kernel.asm	/^f0103cde:	72 1c                	jb     f0103cfc <env_free+0x19d>$/;"	l
f0103ce0	obj/kern/kernel.asm	/^f0103ce0:	c7 44 24 08 b0 86 10 	movl   $0xf01086b0,0x8(%esp)$/;"	l
f0103ce7	obj/kern/kernel.asm	/^f0103ce7:	f0 $/;"	l
f0103ce8	obj/kern/kernel.asm	/^f0103ce8:	c7 44 24 04 51 00 00 	movl   $0x51,0x4(%esp)$/;"	l
f0103cef	obj/kern/kernel.asm	/^f0103cef:	00 $/;"	l
f0103cf0	obj/kern/kernel.asm	/^f0103cf0:	c7 04 24 1d 8f 10 f0 	movl   $0xf0108f1d,(%esp)$/;"	l
f0103cf7	obj/kern/kernel.asm	/^f0103cf7:	e8 44 c3 ff ff       	call   f0100040 <_panic>$/;"	l
f0103cfc	obj/kern/kernel.asm	/^f0103cfc:	8b 15 9c 9e 2b f0    	mov    0xf02b9e9c,%edx$/;"	l
f0103d02	obj/kern/kernel.asm	/^f0103d02:	8d 04 c2             	lea    (%edx,%eax,8),%eax$/;"	l
f0103d05	obj/kern/kernel.asm	/^f0103d05:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103d08	obj/kern/kernel.asm	/^f0103d08:	e8 1a d5 ff ff       	call   f0101227 <page_decref>$/;"	l
f0103d0d	obj/kern/kernel.asm	/^f0103d0d:	c7 47 54 00 00 00 00 	movl   $0x0,0x54(%edi)$/;"	l
f0103d14	obj/kern/kernel.asm	/^f0103d14:	a1 4c 92 2b f0       	mov    0xf02b924c,%eax$/;"	l
f0103d19	obj/kern/kernel.asm	/^f0103d19:	89 47 44             	mov    %eax,0x44(%edi)$/;"	l
f0103d1c	obj/kern/kernel.asm	/^f0103d1c:	89 3d 4c 92 2b f0    	mov    %edi,0xf02b924c$/;"	l
f0103d22	obj/kern/kernel.asm	/^f0103d22:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0103d25	obj/kern/kernel.asm	/^f0103d25:	5b                   	pop    %ebx$/;"	l
f0103d26	obj/kern/kernel.asm	/^f0103d26:	5e                   	pop    %esi$/;"	l
f0103d27	obj/kern/kernel.asm	/^f0103d27:	5f                   	pop    %edi$/;"	l
f0103d28	obj/kern/kernel.asm	/^f0103d28:	5d                   	pop    %ebp$/;"	l
f0103d29	obj/kern/kernel.asm	/^f0103d29:	c3                   	ret    $/;"	l
f0103d2a	obj/kern/kernel.asm	/^f0103d2a <env_destroy>:$/;"	l
f0103d2a	obj/kern/kernel.asm	/^f0103d2a:	55                   	push   %ebp$/;"	l
f0103d2b	obj/kern/kernel.asm	/^f0103d2b:	89 e5                	mov    %esp,%ebp$/;"	l
f0103d2d	obj/kern/kernel.asm	/^f0103d2d:	53                   	push   %ebx$/;"	l
f0103d2e	obj/kern/kernel.asm	/^f0103d2e:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103d31	obj/kern/kernel.asm	/^f0103d31:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0103d34	obj/kern/kernel.asm	/^f0103d34:	83 7b 54 03          	cmpl   $0x3,0x54(%ebx)$/;"	l
f0103d38	obj/kern/kernel.asm	/^f0103d38:	75 19                	jne    f0103d53 <env_destroy+0x29>$/;"	l
f0103d3a	obj/kern/kernel.asm	/^f0103d3a:	e8 1a 2e 00 00       	call   f0106b59 <cpunum>$/;"	l
f0103d3f	obj/kern/kernel.asm	/^f0103d3f:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103d42	obj/kern/kernel.asm	/^f0103d42:	39 98 28 a0 2b f0    	cmp    %ebx,-0xfd45fd8(%eax)$/;"	l
f0103d48	obj/kern/kernel.asm	/^f0103d48:	74 09                	je     f0103d53 <env_destroy+0x29>$/;"	l
f0103d4a	obj/kern/kernel.asm	/^f0103d4a:	c7 43 54 01 00 00 00 	movl   $0x1,0x54(%ebx)$/;"	l
f0103d51	obj/kern/kernel.asm	/^f0103d51:	eb 2f                	jmp    f0103d82 <env_destroy+0x58>$/;"	l
f0103d53	obj/kern/kernel.asm	/^f0103d53:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103d56	obj/kern/kernel.asm	/^f0103d56:	e8 04 fe ff ff       	call   f0103b5f <env_free>$/;"	l
f0103d5b	obj/kern/kernel.asm	/^f0103d5b:	e8 f9 2d 00 00       	call   f0106b59 <cpunum>$/;"	l
f0103d60	obj/kern/kernel.asm	/^f0103d60:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103d63	obj/kern/kernel.asm	/^f0103d63:	39 98 28 a0 2b f0    	cmp    %ebx,-0xfd45fd8(%eax)$/;"	l
f0103d69	obj/kern/kernel.asm	/^f0103d69:	75 17                	jne    f0103d82 <env_destroy+0x58>$/;"	l
f0103d6b	obj/kern/kernel.asm	/^f0103d6b:	e8 e9 2d 00 00       	call   f0106b59 <cpunum>$/;"	l
f0103d70	obj/kern/kernel.asm	/^f0103d70:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103d73	obj/kern/kernel.asm	/^f0103d73:	c7 80 28 a0 2b f0 00 	movl   $0x0,-0xfd45fd8(%eax)$/;"	l
f0103d7a	obj/kern/kernel.asm	/^f0103d7a:	00 00 00 $/;"	l
f0103d7d	obj/kern/kernel.asm	/^f0103d7d:	e8 79 11 00 00       	call   f0104efb <sched_yield>$/;"	l
f0103d82	obj/kern/kernel.asm	/^f0103d82:	83 c4 14             	add    $0x14,%esp$/;"	l
f0103d85	obj/kern/kernel.asm	/^f0103d85:	5b                   	pop    %ebx$/;"	l
f0103d86	obj/kern/kernel.asm	/^f0103d86:	5d                   	pop    %ebp$/;"	l
f0103d87	obj/kern/kernel.asm	/^f0103d87:	c3                   	ret    $/;"	l
f0103d88	obj/kern/kernel.asm	/^f0103d88 <env_pop_tf>:$/;"	l
f0103d88	obj/kern/kernel.asm	/^f0103d88:	55                   	push   %ebp$/;"	l
f0103d89	obj/kern/kernel.asm	/^f0103d89:	89 e5                	mov    %esp,%ebp$/;"	l
f0103d8b	obj/kern/kernel.asm	/^f0103d8b:	53                   	push   %ebx$/;"	l
f0103d8c	obj/kern/kernel.asm	/^f0103d8c:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103d8f	obj/kern/kernel.asm	/^f0103d8f:	e8 c5 2d 00 00       	call   f0106b59 <cpunum>$/;"	l
f0103d94	obj/kern/kernel.asm	/^f0103d94:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103d97	obj/kern/kernel.asm	/^f0103d97:	8b 98 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%ebx$/;"	l
f0103d9d	obj/kern/kernel.asm	/^f0103d9d:	e8 b7 2d 00 00       	call   f0106b59 <cpunum>$/;"	l
f0103da2	obj/kern/kernel.asm	/^f0103da2:	89 43 5c             	mov    %eax,0x5c(%ebx)$/;"	l
f0103da5	obj/kern/kernel.asm	/^f0103da5:	8b 65 08             	mov    0x8(%ebp),%esp$/;"	l
f0103da8	obj/kern/kernel.asm	/^f0103da8:	61                   	popa   $/;"	l
f0103da9	obj/kern/kernel.asm	/^f0103da9:	07                   	pop    %es$/;"	l
f0103daa	obj/kern/kernel.asm	/^f0103daa:	1f                   	pop    %ds$/;"	l
f0103dab	obj/kern/kernel.asm	/^f0103dab:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103dae	obj/kern/kernel.asm	/^f0103dae:	cf                   	iret   $/;"	l
f0103daf	obj/kern/kernel.asm	/^f0103daf:	c7 44 24 08 9b 92 10 	movl   $0xf010929b,0x8(%esp)$/;"	l
f0103db6	obj/kern/kernel.asm	/^f0103db6:	f0 $/;"	l
f0103db7	obj/kern/kernel.asm	/^f0103db7:	c7 44 24 04 10 02 00 	movl   $0x210,0x4(%esp)$/;"	l
f0103dbe	obj/kern/kernel.asm	/^f0103dbe:	00 $/;"	l
f0103dbf	obj/kern/kernel.asm	/^f0103dbf:	c7 04 24 64 92 10 f0 	movl   $0xf0109264,(%esp)$/;"	l
f0103dc6	obj/kern/kernel.asm	/^f0103dc6:	e8 75 c2 ff ff       	call   f0100040 <_panic>$/;"	l
f0103dcb	obj/kern/kernel.asm	/^f0103dcb <env_run>:$/;"	l
f0103dcb	obj/kern/kernel.asm	/^f0103dcb:	55                   	push   %ebp$/;"	l
f0103dcc	obj/kern/kernel.asm	/^f0103dcc:	89 e5                	mov    %esp,%ebp$/;"	l
f0103dce	obj/kern/kernel.asm	/^f0103dce:	53                   	push   %ebx$/;"	l
f0103dcf	obj/kern/kernel.asm	/^f0103dcf:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103dd2	obj/kern/kernel.asm	/^f0103dd2:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0103dd5	obj/kern/kernel.asm	/^f0103dd5:	e8 7f 2d 00 00       	call   f0106b59 <cpunum>$/;"	l
f0103dda	obj/kern/kernel.asm	/^f0103dda:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103ddd	obj/kern/kernel.asm	/^f0103ddd:	83 b8 28 a0 2b f0 00 	cmpl   $0x0,-0xfd45fd8(%eax)$/;"	l
f0103de4	obj/kern/kernel.asm	/^f0103de4:	74 29                	je     f0103e0f <env_run+0x44>$/;"	l
f0103de6	obj/kern/kernel.asm	/^f0103de6:	e8 6e 2d 00 00       	call   f0106b59 <cpunum>$/;"	l
f0103deb	obj/kern/kernel.asm	/^f0103deb:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103dee	obj/kern/kernel.asm	/^f0103dee:	8b 80 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%eax$/;"	l
f0103df4	obj/kern/kernel.asm	/^f0103df4:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f0103df8	obj/kern/kernel.asm	/^f0103df8:	75 15                	jne    f0103e0f <env_run+0x44>$/;"	l
f0103dfa	obj/kern/kernel.asm	/^f0103dfa:	e8 5a 2d 00 00       	call   f0106b59 <cpunum>$/;"	l
f0103dff	obj/kern/kernel.asm	/^f0103dff:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103e02	obj/kern/kernel.asm	/^f0103e02:	8b 80 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%eax$/;"	l
f0103e08	obj/kern/kernel.asm	/^f0103e08:	c7 40 54 02 00 00 00 	movl   $0x2,0x54(%eax)$/;"	l
f0103e0f	obj/kern/kernel.asm	/^f0103e0f:	e8 45 2d 00 00       	call   f0106b59 <cpunum>$/;"	l
f0103e14	obj/kern/kernel.asm	/^f0103e14:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103e17	obj/kern/kernel.asm	/^f0103e17:	89 98 28 a0 2b f0    	mov    %ebx,-0xfd45fd8(%eax)$/;"	l
f0103e1d	obj/kern/kernel.asm	/^f0103e1d:	c7 43 54 03 00 00 00 	movl   $0x3,0x54(%ebx)$/;"	l
f0103e24	obj/kern/kernel.asm	/^f0103e24:	83 43 58 01          	addl   $0x1,0x58(%ebx)$/;"	l
f0103e28	obj/kern/kernel.asm	/^f0103e28:	8b 43 60             	mov    0x60(%ebx),%eax$/;"	l
f0103e2b	obj/kern/kernel.asm	/^f0103e2b:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103e30	obj/kern/kernel.asm	/^f0103e30:	77 20                	ja     f0103e52 <env_run+0x87>$/;"	l
f0103e32	obj/kern/kernel.asm	/^f0103e32:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103e36	obj/kern/kernel.asm	/^f0103e36:	c7 44 24 08 e8 7f 10 	movl   $0xf0107fe8,0x8(%esp)$/;"	l
f0103e3d	obj/kern/kernel.asm	/^f0103e3d:	f0 $/;"	l
f0103e3e	obj/kern/kernel.asm	/^f0103e3e:	c7 44 24 04 35 02 00 	movl   $0x235,0x4(%esp)$/;"	l
f0103e45	obj/kern/kernel.asm	/^f0103e45:	00 $/;"	l
f0103e46	obj/kern/kernel.asm	/^f0103e46:	c7 04 24 64 92 10 f0 	movl   $0xf0109264,(%esp)$/;"	l
f0103e4d	obj/kern/kernel.asm	/^f0103e4d:	e8 ee c1 ff ff       	call   f0100040 <_panic>$/;"	l
f0103e52	obj/kern/kernel.asm	/^f0103e52:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103e57	obj/kern/kernel.asm	/^f0103e57:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103e5a	obj/kern/kernel.asm	/^f0103e5a:	c7 04 24 c0 53 12 f0 	movl   $0xf01253c0,(%esp)$/;"	l
f0103e61	obj/kern/kernel.asm	/^f0103e61:	e8 1d 30 00 00       	call   f0106e83 <spin_unlock>$/;"	l
f0103e66	obj/kern/kernel.asm	/^f0103e66:	f3 90                	pause  $/;"	l
f0103e68	obj/kern/kernel.asm	/^f0103e68:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103e6b	obj/kern/kernel.asm	/^f0103e6b:	e8 18 ff ff ff       	call   f0103d88 <env_pop_tf>$/;"	l
f0103e70	obj/kern/kernel.asm	/^f0103e70 <mc146818_read>:$/;"	l
f0103e70	obj/kern/kernel.asm	/^f0103e70:	55                   	push   %ebp$/;"	l
f0103e71	obj/kern/kernel.asm	/^f0103e71:	89 e5                	mov    %esp,%ebp$/;"	l
f0103e73	obj/kern/kernel.asm	/^f0103e73:	0f b6 45 08          	movzbl 0x8(%ebp),%eax$/;"	l
f0103e77	obj/kern/kernel.asm	/^f0103e77:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0103e7c	obj/kern/kernel.asm	/^f0103e7c:	ee                   	out    %al,(%dx)$/;"	l
f0103e7d	obj/kern/kernel.asm	/^f0103e7d:	b2 71                	mov    $0x71,%dl$/;"	l
f0103e7f	obj/kern/kernel.asm	/^f0103e7f:	ec                   	in     (%dx),%al$/;"	l
f0103e80	obj/kern/kernel.asm	/^f0103e80:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0103e83	obj/kern/kernel.asm	/^f0103e83:	5d                   	pop    %ebp$/;"	l
f0103e84	obj/kern/kernel.asm	/^f0103e84:	c3                   	ret    $/;"	l
f0103e85	obj/kern/kernel.asm	/^f0103e85 <mc146818_write>:$/;"	l
f0103e85	obj/kern/kernel.asm	/^f0103e85:	55                   	push   %ebp$/;"	l
f0103e86	obj/kern/kernel.asm	/^f0103e86:	89 e5                	mov    %esp,%ebp$/;"	l
f0103e88	obj/kern/kernel.asm	/^f0103e88:	0f b6 45 08          	movzbl 0x8(%ebp),%eax$/;"	l
f0103e8c	obj/kern/kernel.asm	/^f0103e8c:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0103e91	obj/kern/kernel.asm	/^f0103e91:	ee                   	out    %al,(%dx)$/;"	l
f0103e92	obj/kern/kernel.asm	/^f0103e92:	b2 71                	mov    $0x71,%dl$/;"	l
f0103e94	obj/kern/kernel.asm	/^f0103e94:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103e97	obj/kern/kernel.asm	/^f0103e97:	ee                   	out    %al,(%dx)$/;"	l
f0103e98	obj/kern/kernel.asm	/^f0103e98:	5d                   	pop    %ebp$/;"	l
f0103e99	obj/kern/kernel.asm	/^f0103e99:	c3                   	ret    $/;"	l
f0103e9a	obj/kern/kernel.asm	/^f0103e9a <irq_setmask_8259A>:$/;"	l
f0103e9a	obj/kern/kernel.asm	/^f0103e9a:	55                   	push   %ebp$/;"	l
f0103e9b	obj/kern/kernel.asm	/^f0103e9b:	89 e5                	mov    %esp,%ebp$/;"	l
f0103e9d	obj/kern/kernel.asm	/^f0103e9d:	56                   	push   %esi$/;"	l
f0103e9e	obj/kern/kernel.asm	/^f0103e9e:	53                   	push   %ebx$/;"	l
f0103e9f	obj/kern/kernel.asm	/^f0103e9f:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0103ea2	obj/kern/kernel.asm	/^f0103ea2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103ea5	obj/kern/kernel.asm	/^f0103ea5:	66 a3 a8 53 12 f0    	mov    %ax,0xf01253a8$/;"	l
f0103eab	obj/kern/kernel.asm	/^f0103eab:	80 3d 50 92 2b f0 00 	cmpb   $0x0,0xf02b9250$/;"	l
f0103eb2	obj/kern/kernel.asm	/^f0103eb2:	74 4e                	je     f0103f02 <irq_setmask_8259A+0x68>$/;"	l
f0103eb4	obj/kern/kernel.asm	/^f0103eb4:	89 c6                	mov    %eax,%esi$/;"	l
f0103eb6	obj/kern/kernel.asm	/^f0103eb6:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f0103ebb	obj/kern/kernel.asm	/^f0103ebb:	ee                   	out    %al,(%dx)$/;"	l
f0103ebc	obj/kern/kernel.asm	/^f0103ebc:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f0103ec0	obj/kern/kernel.asm	/^f0103ec0:	b2 a1                	mov    $0xa1,%dl$/;"	l
f0103ec2	obj/kern/kernel.asm	/^f0103ec2:	ee                   	out    %al,(%dx)$/;"	l
f0103ec3	obj/kern/kernel.asm	/^f0103ec3:	c7 04 24 cd 92 10 f0 	movl   $0xf01092cd,(%esp)$/;"	l
f0103eca	obj/kern/kernel.asm	/^f0103eca:	e8 1d 01 00 00       	call   f0103fec <cprintf>$/;"	l
f0103ecf	obj/kern/kernel.asm	/^f0103ecf:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0103ed4	obj/kern/kernel.asm	/^f0103ed4:	0f b7 f6             	movzwl %si,%esi$/;"	l
f0103ed7	obj/kern/kernel.asm	/^f0103ed7:	f7 d6                	not    %esi$/;"	l
f0103ed9	obj/kern/kernel.asm	/^f0103ed9:	0f a3 de             	bt     %ebx,%esi$/;"	l
f0103edc	obj/kern/kernel.asm	/^f0103edc:	73 10                	jae    f0103eee <irq_setmask_8259A+0x54>$/;"	l
f0103ede	obj/kern/kernel.asm	/^f0103ede:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0103ee2	obj/kern/kernel.asm	/^f0103ee2:	c7 04 24 93 97 10 f0 	movl   $0xf0109793,(%esp)$/;"	l
f0103ee9	obj/kern/kernel.asm	/^f0103ee9:	e8 fe 00 00 00       	call   f0103fec <cprintf>$/;"	l
f0103eee	obj/kern/kernel.asm	/^f0103eee:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0103ef1	obj/kern/kernel.asm	/^f0103ef1:	83 fb 10             	cmp    $0x10,%ebx$/;"	l
f0103ef4	obj/kern/kernel.asm	/^f0103ef4:	75 e3                	jne    f0103ed9 <irq_setmask_8259A+0x3f>$/;"	l
f0103ef6	obj/kern/kernel.asm	/^f0103ef6:	c7 04 24 1b 92 10 f0 	movl   $0xf010921b,(%esp)$/;"	l
f0103efd	obj/kern/kernel.asm	/^f0103efd:	e8 ea 00 00 00       	call   f0103fec <cprintf>$/;"	l
f0103f02	obj/kern/kernel.asm	/^f0103f02:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103f05	obj/kern/kernel.asm	/^f0103f05:	5b                   	pop    %ebx$/;"	l
f0103f06	obj/kern/kernel.asm	/^f0103f06:	5e                   	pop    %esi$/;"	l
f0103f07	obj/kern/kernel.asm	/^f0103f07:	5d                   	pop    %ebp$/;"	l
f0103f08	obj/kern/kernel.asm	/^f0103f08:	c3                   	ret    $/;"	l
f0103f09	obj/kern/kernel.asm	/^f0103f09 <pic_init>:$/;"	l
f0103f09	obj/kern/kernel.asm	/^f0103f09:	c6 05 50 92 2b f0 01 	movb   $0x1,0xf02b9250$/;"	l
f0103f10	obj/kern/kernel.asm	/^f0103f10:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f0103f15	obj/kern/kernel.asm	/^f0103f15:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0103f1a	obj/kern/kernel.asm	/^f0103f1a:	ee                   	out    %al,(%dx)$/;"	l
f0103f1b	obj/kern/kernel.asm	/^f0103f1b:	b2 a1                	mov    $0xa1,%dl$/;"	l
f0103f1d	obj/kern/kernel.asm	/^f0103f1d:	ee                   	out    %al,(%dx)$/;"	l
f0103f1e	obj/kern/kernel.asm	/^f0103f1e:	b2 20                	mov    $0x20,%dl$/;"	l
f0103f20	obj/kern/kernel.asm	/^f0103f20:	b8 11 00 00 00       	mov    $0x11,%eax$/;"	l
f0103f25	obj/kern/kernel.asm	/^f0103f25:	ee                   	out    %al,(%dx)$/;"	l
f0103f26	obj/kern/kernel.asm	/^f0103f26:	b2 21                	mov    $0x21,%dl$/;"	l
f0103f28	obj/kern/kernel.asm	/^f0103f28:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0103f2d	obj/kern/kernel.asm	/^f0103f2d:	ee                   	out    %al,(%dx)$/;"	l
f0103f2e	obj/kern/kernel.asm	/^f0103f2e:	b8 04 00 00 00       	mov    $0x4,%eax$/;"	l
f0103f33	obj/kern/kernel.asm	/^f0103f33:	ee                   	out    %al,(%dx)$/;"	l
f0103f34	obj/kern/kernel.asm	/^f0103f34:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f0103f39	obj/kern/kernel.asm	/^f0103f39:	ee                   	out    %al,(%dx)$/;"	l
f0103f3a	obj/kern/kernel.asm	/^f0103f3a:	b2 a0                	mov    $0xa0,%dl$/;"	l
f0103f3c	obj/kern/kernel.asm	/^f0103f3c:	b8 11 00 00 00       	mov    $0x11,%eax$/;"	l
f0103f41	obj/kern/kernel.asm	/^f0103f41:	ee                   	out    %al,(%dx)$/;"	l
f0103f42	obj/kern/kernel.asm	/^f0103f42:	b2 a1                	mov    $0xa1,%dl$/;"	l
f0103f44	obj/kern/kernel.asm	/^f0103f44:	b8 28 00 00 00       	mov    $0x28,%eax$/;"	l
f0103f49	obj/kern/kernel.asm	/^f0103f49:	ee                   	out    %al,(%dx)$/;"	l
f0103f4a	obj/kern/kernel.asm	/^f0103f4a:	b8 02 00 00 00       	mov    $0x2,%eax$/;"	l
f0103f4f	obj/kern/kernel.asm	/^f0103f4f:	ee                   	out    %al,(%dx)$/;"	l
f0103f50	obj/kern/kernel.asm	/^f0103f50:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0103f55	obj/kern/kernel.asm	/^f0103f55:	ee                   	out    %al,(%dx)$/;"	l
f0103f56	obj/kern/kernel.asm	/^f0103f56:	b2 20                	mov    $0x20,%dl$/;"	l
f0103f58	obj/kern/kernel.asm	/^f0103f58:	b8 68 00 00 00       	mov    $0x68,%eax$/;"	l
f0103f5d	obj/kern/kernel.asm	/^f0103f5d:	ee                   	out    %al,(%dx)$/;"	l
f0103f5e	obj/kern/kernel.asm	/^f0103f5e:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0103f63	obj/kern/kernel.asm	/^f0103f63:	ee                   	out    %al,(%dx)$/;"	l
f0103f64	obj/kern/kernel.asm	/^f0103f64:	b2 a0                	mov    $0xa0,%dl$/;"	l
f0103f66	obj/kern/kernel.asm	/^f0103f66:	b8 68 00 00 00       	mov    $0x68,%eax$/;"	l
f0103f6b	obj/kern/kernel.asm	/^f0103f6b:	ee                   	out    %al,(%dx)$/;"	l
f0103f6c	obj/kern/kernel.asm	/^f0103f6c:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0103f71	obj/kern/kernel.asm	/^f0103f71:	ee                   	out    %al,(%dx)$/;"	l
f0103f72	obj/kern/kernel.asm	/^f0103f72:	0f b7 05 a8 53 12 f0 	movzwl 0xf01253a8,%eax$/;"	l
f0103f79	obj/kern/kernel.asm	/^f0103f79:	66 83 f8 ff          	cmp    $0xffff,%ax$/;"	l
f0103f7d	obj/kern/kernel.asm	/^f0103f7d:	74 12                	je     f0103f91 <pic_init+0x88>$/;"	l
f0103f7f	obj/kern/kernel.asm	/^f0103f7f:	55                   	push   %ebp$/;"	l
f0103f80	obj/kern/kernel.asm	/^f0103f80:	89 e5                	mov    %esp,%ebp$/;"	l
f0103f82	obj/kern/kernel.asm	/^f0103f82:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0103f85	obj/kern/kernel.asm	/^f0103f85:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0103f88	obj/kern/kernel.asm	/^f0103f88:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103f8b	obj/kern/kernel.asm	/^f0103f8b:	e8 0a ff ff ff       	call   f0103e9a <irq_setmask_8259A>$/;"	l
f0103f90	obj/kern/kernel.asm	/^f0103f90:	c9                   	leave  $/;"	l
f0103f91	obj/kern/kernel.asm	/^f0103f91:	f3 c3                	repz ret $/;"	l
f0103f93	obj/kern/kernel.asm	/^f0103f93 <irq_eoi>:$/;"	l
f0103f93	obj/kern/kernel.asm	/^f0103f93:	55                   	push   %ebp$/;"	l
f0103f94	obj/kern/kernel.asm	/^f0103f94:	89 e5                	mov    %esp,%ebp$/;"	l
f0103f96	obj/kern/kernel.asm	/^f0103f96:	ba 20 00 00 00       	mov    $0x20,%edx$/;"	l
f0103f9b	obj/kern/kernel.asm	/^f0103f9b:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0103fa0	obj/kern/kernel.asm	/^f0103fa0:	ee                   	out    %al,(%dx)$/;"	l
f0103fa1	obj/kern/kernel.asm	/^f0103fa1:	b2 a0                	mov    $0xa0,%dl$/;"	l
f0103fa3	obj/kern/kernel.asm	/^f0103fa3:	ee                   	out    %al,(%dx)$/;"	l
f0103fa4	obj/kern/kernel.asm	/^f0103fa4:	5d                   	pop    %ebp$/;"	l
f0103fa5	obj/kern/kernel.asm	/^f0103fa5:	c3                   	ret    $/;"	l
f0103fa6	obj/kern/kernel.asm	/^f0103fa6 <putch>:$/;"	l
f0103fa6	obj/kern/kernel.asm	/^f0103fa6:	55                   	push   %ebp$/;"	l
f0103fa7	obj/kern/kernel.asm	/^f0103fa7:	89 e5                	mov    %esp,%ebp$/;"	l
f0103fa9	obj/kern/kernel.asm	/^f0103fa9:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0103fac	obj/kern/kernel.asm	/^f0103fac:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103faf	obj/kern/kernel.asm	/^f0103faf:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103fb2	obj/kern/kernel.asm	/^f0103fb2:	e8 39 c8 ff ff       	call   f01007f0 <cputchar>$/;"	l
f0103fb7	obj/kern/kernel.asm	/^f0103fb7:	c9                   	leave  $/;"	l
f0103fb8	obj/kern/kernel.asm	/^f0103fb8:	c3                   	ret    $/;"	l
f0103fb9	obj/kern/kernel.asm	/^f0103fb9 <vcprintf>:$/;"	l
f0103fb9	obj/kern/kernel.asm	/^f0103fb9:	55                   	push   %ebp$/;"	l
f0103fba	obj/kern/kernel.asm	/^f0103fba:	89 e5                	mov    %esp,%ebp$/;"	l
f0103fbc	obj/kern/kernel.asm	/^f0103fbc:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0103fbf	obj/kern/kernel.asm	/^f0103fbf:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0103fc6	obj/kern/kernel.asm	/^f0103fc6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103fc9	obj/kern/kernel.asm	/^f0103fc9:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103fcd	obj/kern/kernel.asm	/^f0103fcd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103fd0	obj/kern/kernel.asm	/^f0103fd0:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0103fd4	obj/kern/kernel.asm	/^f0103fd4:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0103fd7	obj/kern/kernel.asm	/^f0103fd7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103fdb	obj/kern/kernel.asm	/^f0103fdb:	c7 04 24 a6 3f 10 f0 	movl   $0xf0103fa6,(%esp)$/;"	l
f0103fe2	obj/kern/kernel.asm	/^f0103fe2:	e8 97 1d 00 00       	call   f0105d7e <vprintfmt>$/;"	l
f0103fe7	obj/kern/kernel.asm	/^f0103fe7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0103fea	obj/kern/kernel.asm	/^f0103fea:	c9                   	leave  $/;"	l
f0103feb	obj/kern/kernel.asm	/^f0103feb:	c3                   	ret    $/;"	l
f0103fec	obj/kern/kernel.asm	/^f0103fec <cprintf>:$/;"	l
f0103fec	obj/kern/kernel.asm	/^f0103fec:	55                   	push   %ebp$/;"	l
f0103fed	obj/kern/kernel.asm	/^f0103fed:	89 e5                	mov    %esp,%ebp$/;"	l
f0103fef	obj/kern/kernel.asm	/^f0103fef:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0103ff2	obj/kern/kernel.asm	/^f0103ff2:	8d 45 0c             	lea    0xc(%ebp),%eax$/;"	l
f0103ff5	obj/kern/kernel.asm	/^f0103ff5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103ff9	obj/kern/kernel.asm	/^f0103ff9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103ffc	obj/kern/kernel.asm	/^f0103ffc:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103fff	obj/kern/kernel.asm	/^f0103fff:	e8 b5 ff ff ff       	call   f0103fb9 <vcprintf>$/;"	l
f0104004	obj/kern/kernel.asm	/^f0104004:	c9                   	leave  $/;"	l
f0104005	obj/kern/kernel.asm	/^f0104005:	c3                   	ret    $/;"	l
f0104006	obj/kern/kernel.asm	/^f0104006:	66 90                	xchg   %ax,%ax$/;"	l
f0104008	obj/kern/kernel.asm	/^f0104008:	66 90                	xchg   %ax,%ax$/;"	l
f010400a	obj/kern/kernel.asm	/^f010400a:	66 90                	xchg   %ax,%ax$/;"	l
f010400c	obj/kern/kernel.asm	/^f010400c:	66 90                	xchg   %ax,%ax$/;"	l
f010400e	obj/kern/kernel.asm	/^f010400e:	66 90                	xchg   %ax,%ax$/;"	l
f0104010	obj/kern/kernel.asm	/^f0104010 <trap_init_percpu>:$/;"	l
f0104010	obj/kern/kernel.asm	/^f0104010:	55                   	push   %ebp$/;"	l
f0104011	obj/kern/kernel.asm	/^f0104011:	89 e5                	mov    %esp,%ebp$/;"	l
f0104013	obj/kern/kernel.asm	/^f0104013:	57                   	push   %edi$/;"	l
f0104014	obj/kern/kernel.asm	/^f0104014:	56                   	push   %esi$/;"	l
f0104015	obj/kern/kernel.asm	/^f0104015:	53                   	push   %ebx$/;"	l
f0104016	obj/kern/kernel.asm	/^f0104016:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104019	obj/kern/kernel.asm	/^f0104019:	e8 3b 2b 00 00       	call   f0106b59 <cpunum>$/;"	l
f010401e	obj/kern/kernel.asm	/^f010401e:	89 c3                	mov    %eax,%ebx$/;"	l
f0104020	obj/kern/kernel.asm	/^f0104020:	e8 34 2b 00 00       	call   f0106b59 <cpunum>$/;"	l
f0104025	obj/kern/kernel.asm	/^f0104025:	6b db 74             	imul   $0x74,%ebx,%ebx$/;"	l
f0104028	obj/kern/kernel.asm	/^f0104028:	f7 d8                	neg    %eax$/;"	l
f010402a	obj/kern/kernel.asm	/^f010402a:	c1 e0 10             	shl    $0x10,%eax$/;"	l
f010402d	obj/kern/kernel.asm	/^f010402d:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0104032	obj/kern/kernel.asm	/^f0104032:	89 83 30 a0 2b f0    	mov    %eax,-0xfd45fd0(%ebx)$/;"	l
f0104038	obj/kern/kernel.asm	/^f0104038:	e8 1c 2b 00 00       	call   f0106b59 <cpunum>$/;"	l
f010403d	obj/kern/kernel.asm	/^f010403d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104040	obj/kern/kernel.asm	/^f0104040:	66 c7 80 34 a0 2b f0 	movw   $0x10,-0xfd45fcc(%eax)$/;"	l
f0104047	obj/kern/kernel.asm	/^f0104047:	10 00 $/;"	l
f0104049	obj/kern/kernel.asm	/^f0104049:	e8 0b 2b 00 00       	call   f0106b59 <cpunum>$/;"	l
f010404e	obj/kern/kernel.asm	/^f010404e:	8d 58 05             	lea    0x5(%eax),%ebx$/;"	l
f0104051	obj/kern/kernel.asm	/^f0104051:	e8 03 2b 00 00       	call   f0106b59 <cpunum>$/;"	l
f0104056	obj/kern/kernel.asm	/^f0104056:	89 c7                	mov    %eax,%edi$/;"	l
f0104058	obj/kern/kernel.asm	/^f0104058:	e8 fc 2a 00 00       	call   f0106b59 <cpunum>$/;"	l
f010405d	obj/kern/kernel.asm	/^f010405d:	89 c6                	mov    %eax,%esi$/;"	l
f010405f	obj/kern/kernel.asm	/^f010405f:	e8 f5 2a 00 00       	call   f0106b59 <cpunum>$/;"	l
f0104064	obj/kern/kernel.asm	/^f0104064:	66 c7 04 dd 40 53 12 	movw   $0x67,-0xfedacc0(,%ebx,8)$/;"	l
f010406b	obj/kern/kernel.asm	/^f010406b:	f0 67 00 $/;"	l
f010406e	obj/kern/kernel.asm	/^f010406e:	6b ff 74             	imul   $0x74,%edi,%edi$/;"	l
f0104071	obj/kern/kernel.asm	/^f0104071:	81 c7 2c a0 2b f0    	add    $0xf02ba02c,%edi$/;"	l
f0104077	obj/kern/kernel.asm	/^f0104077:	66 89 3c dd 42 53 12 	mov    %di,-0xfedacbe(,%ebx,8)$/;"	l
f010407e	obj/kern/kernel.asm	/^f010407e:	f0 $/;"	l
f010407f	obj/kern/kernel.asm	/^f010407f:	6b d6 74             	imul   $0x74,%esi,%edx$/;"	l
f0104082	obj/kern/kernel.asm	/^f0104082:	81 c2 2c a0 2b f0    	add    $0xf02ba02c,%edx$/;"	l
f0104088	obj/kern/kernel.asm	/^f0104088:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f010408b	obj/kern/kernel.asm	/^f010408b:	88 14 dd 44 53 12 f0 	mov    %dl,-0xfedacbc(,%ebx,8)$/;"	l
f0104092	obj/kern/kernel.asm	/^f0104092:	c6 04 dd 45 53 12 f0 	movb   $0x99,-0xfedacbb(,%ebx,8)$/;"	l
f0104099	obj/kern/kernel.asm	/^f0104099:	99 $/;"	l
f010409a	obj/kern/kernel.asm	/^f010409a:	c6 04 dd 46 53 12 f0 	movb   $0x40,-0xfedacba(,%ebx,8)$/;"	l
f01040a1	obj/kern/kernel.asm	/^f01040a1:	40 $/;"	l
f01040a2	obj/kern/kernel.asm	/^f01040a2:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01040a5	obj/kern/kernel.asm	/^f01040a5:	05 2c a0 2b f0       	add    $0xf02ba02c,%eax$/;"	l
f01040aa	obj/kern/kernel.asm	/^f01040aa:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f01040ad	obj/kern/kernel.asm	/^f01040ad:	88 04 dd 47 53 12 f0 	mov    %al,-0xfedacb9(,%ebx,8)$/;"	l
f01040b4	obj/kern/kernel.asm	/^f01040b4:	e8 a0 2a 00 00       	call   f0106b59 <cpunum>$/;"	l
f01040b9	obj/kern/kernel.asm	/^f01040b9:	80 24 c5 6d 53 12 f0 	andb   $0xef,-0xfedac93(,%eax,8)$/;"	l
f01040c0	obj/kern/kernel.asm	/^f01040c0:	ef $/;"	l
f01040c1	obj/kern/kernel.asm	/^f01040c1:	e8 93 2a 00 00       	call   f0106b59 <cpunum>$/;"	l
f01040c6	obj/kern/kernel.asm	/^f01040c6:	8d 04 c5 28 00 00 00 	lea    0x28(,%eax,8),%eax$/;"	l
f01040cd	obj/kern/kernel.asm	/^f01040cd:	0f 00 d8             	ltr    %ax$/;"	l
f01040d0	obj/kern/kernel.asm	/^f01040d0:	b8 aa 53 12 f0       	mov    $0xf01253aa,%eax$/;"	l
f01040d5	obj/kern/kernel.asm	/^f01040d5:	0f 01 18             	lidtl  (%eax)$/;"	l
f01040d8	obj/kern/kernel.asm	/^f01040d8:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01040db	obj/kern/kernel.asm	/^f01040db:	5b                   	pop    %ebx$/;"	l
f01040dc	obj/kern/kernel.asm	/^f01040dc:	5e                   	pop    %esi$/;"	l
f01040dd	obj/kern/kernel.asm	/^f01040dd:	5f                   	pop    %edi$/;"	l
f01040de	obj/kern/kernel.asm	/^f01040de:	5d                   	pop    %ebp$/;"	l
f01040df	obj/kern/kernel.asm	/^f01040df:	c3                   	ret    $/;"	l
f01040e0	obj/kern/kernel.asm	/^f01040e0 <trap_init>:$/;"	l
f01040e0	obj/kern/kernel.asm	/^f01040e0:	55                   	push   %ebp$/;"	l
f01040e1	obj/kern/kernel.asm	/^f01040e1:	89 e5                	mov    %esp,%ebp$/;"	l
f01040e3	obj/kern/kernel.asm	/^f01040e3:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01040e6	obj/kern/kernel.asm	/^f01040e6:	b8 14 4d 10 f0       	mov    $0xf0104d14,%eax$/;"	l
f01040eb	obj/kern/kernel.asm	/^f01040eb:	66 a3 60 92 2b f0    	mov    %ax,0xf02b9260$/;"	l
f01040f1	obj/kern/kernel.asm	/^f01040f1:	66 c7 05 62 92 2b f0 	movw   $0x8,0xf02b9262$/;"	l
f01040f8	obj/kern/kernel.asm	/^f01040f8:	08 00 $/;"	l
f01040fa	obj/kern/kernel.asm	/^f01040fa:	c6 05 64 92 2b f0 00 	movb   $0x0,0xf02b9264$/;"	l
f0104101	obj/kern/kernel.asm	/^f0104101:	c6 05 65 92 2b f0 8e 	movb   $0x8e,0xf02b9265$/;"	l
f0104108	obj/kern/kernel.asm	/^f0104108:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010410b	obj/kern/kernel.asm	/^f010410b:	66 a3 66 92 2b f0    	mov    %ax,0xf02b9266$/;"	l
f0104111	obj/kern/kernel.asm	/^f0104111:	b8 1e 4d 10 f0       	mov    $0xf0104d1e,%eax$/;"	l
f0104116	obj/kern/kernel.asm	/^f0104116:	66 a3 68 92 2b f0    	mov    %ax,0xf02b9268$/;"	l
f010411c	obj/kern/kernel.asm	/^f010411c:	66 c7 05 6a 92 2b f0 	movw   $0x8,0xf02b926a$/;"	l
f0104123	obj/kern/kernel.asm	/^f0104123:	08 00 $/;"	l
f0104125	obj/kern/kernel.asm	/^f0104125:	c6 05 6c 92 2b f0 00 	movb   $0x0,0xf02b926c$/;"	l
f010412c	obj/kern/kernel.asm	/^f010412c:	c6 05 6d 92 2b f0 8e 	movb   $0x8e,0xf02b926d$/;"	l
f0104133	obj/kern/kernel.asm	/^f0104133:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104136	obj/kern/kernel.asm	/^f0104136:	66 a3 6e 92 2b f0    	mov    %ax,0xf02b926e$/;"	l
f010413c	obj/kern/kernel.asm	/^f010413c:	b8 28 4d 10 f0       	mov    $0xf0104d28,%eax$/;"	l
f0104141	obj/kern/kernel.asm	/^f0104141:	66 a3 70 92 2b f0    	mov    %ax,0xf02b9270$/;"	l
f0104147	obj/kern/kernel.asm	/^f0104147:	66 c7 05 72 92 2b f0 	movw   $0x8,0xf02b9272$/;"	l
f010414e	obj/kern/kernel.asm	/^f010414e:	08 00 $/;"	l
f0104150	obj/kern/kernel.asm	/^f0104150:	c6 05 74 92 2b f0 00 	movb   $0x0,0xf02b9274$/;"	l
f0104157	obj/kern/kernel.asm	/^f0104157:	c6 05 75 92 2b f0 8e 	movb   $0x8e,0xf02b9275$/;"	l
f010415e	obj/kern/kernel.asm	/^f010415e:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104161	obj/kern/kernel.asm	/^f0104161:	66 a3 76 92 2b f0    	mov    %ax,0xf02b9276$/;"	l
f0104167	obj/kern/kernel.asm	/^f0104167:	b8 32 4d 10 f0       	mov    $0xf0104d32,%eax$/;"	l
f010416c	obj/kern/kernel.asm	/^f010416c:	66 a3 78 92 2b f0    	mov    %ax,0xf02b9278$/;"	l
f0104172	obj/kern/kernel.asm	/^f0104172:	66 c7 05 7a 92 2b f0 	movw   $0x8,0xf02b927a$/;"	l
f0104179	obj/kern/kernel.asm	/^f0104179:	08 00 $/;"	l
f010417b	obj/kern/kernel.asm	/^f010417b:	c6 05 7c 92 2b f0 00 	movb   $0x0,0xf02b927c$/;"	l
f0104182	obj/kern/kernel.asm	/^f0104182:	c6 05 7d 92 2b f0 ee 	movb   $0xee,0xf02b927d$/;"	l
f0104189	obj/kern/kernel.asm	/^f0104189:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010418c	obj/kern/kernel.asm	/^f010418c:	66 a3 7e 92 2b f0    	mov    %ax,0xf02b927e$/;"	l
f0104192	obj/kern/kernel.asm	/^f0104192:	b8 3c 4d 10 f0       	mov    $0xf0104d3c,%eax$/;"	l
f0104197	obj/kern/kernel.asm	/^f0104197:	66 a3 80 92 2b f0    	mov    %ax,0xf02b9280$/;"	l
f010419d	obj/kern/kernel.asm	/^f010419d:	66 c7 05 82 92 2b f0 	movw   $0x8,0xf02b9282$/;"	l
f01041a4	obj/kern/kernel.asm	/^f01041a4:	08 00 $/;"	l
f01041a6	obj/kern/kernel.asm	/^f01041a6:	c6 05 84 92 2b f0 00 	movb   $0x0,0xf02b9284$/;"	l
f01041ad	obj/kern/kernel.asm	/^f01041ad:	c6 05 85 92 2b f0 8e 	movb   $0x8e,0xf02b9285$/;"	l
f01041b4	obj/kern/kernel.asm	/^f01041b4:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01041b7	obj/kern/kernel.asm	/^f01041b7:	66 a3 86 92 2b f0    	mov    %ax,0xf02b9286$/;"	l
f01041bd	obj/kern/kernel.asm	/^f01041bd:	b8 46 4d 10 f0       	mov    $0xf0104d46,%eax$/;"	l
f01041c2	obj/kern/kernel.asm	/^f01041c2:	66 a3 88 92 2b f0    	mov    %ax,0xf02b9288$/;"	l
f01041c8	obj/kern/kernel.asm	/^f01041c8:	66 c7 05 8a 92 2b f0 	movw   $0x8,0xf02b928a$/;"	l
f01041cf	obj/kern/kernel.asm	/^f01041cf:	08 00 $/;"	l
f01041d1	obj/kern/kernel.asm	/^f01041d1:	c6 05 8c 92 2b f0 00 	movb   $0x0,0xf02b928c$/;"	l
f01041d8	obj/kern/kernel.asm	/^f01041d8:	c6 05 8d 92 2b f0 8e 	movb   $0x8e,0xf02b928d$/;"	l
f01041df	obj/kern/kernel.asm	/^f01041df:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01041e2	obj/kern/kernel.asm	/^f01041e2:	66 a3 8e 92 2b f0    	mov    %ax,0xf02b928e$/;"	l
f01041e8	obj/kern/kernel.asm	/^f01041e8:	b8 50 4d 10 f0       	mov    $0xf0104d50,%eax$/;"	l
f01041ed	obj/kern/kernel.asm	/^f01041ed:	66 a3 90 92 2b f0    	mov    %ax,0xf02b9290$/;"	l
f01041f3	obj/kern/kernel.asm	/^f01041f3:	66 c7 05 92 92 2b f0 	movw   $0x8,0xf02b9292$/;"	l
f01041fa	obj/kern/kernel.asm	/^f01041fa:	08 00 $/;"	l
f01041fc	obj/kern/kernel.asm	/^f01041fc:	c6 05 94 92 2b f0 00 	movb   $0x0,0xf02b9294$/;"	l
f0104203	obj/kern/kernel.asm	/^f0104203:	c6 05 95 92 2b f0 8e 	movb   $0x8e,0xf02b9295$/;"	l
f010420a	obj/kern/kernel.asm	/^f010420a:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010420d	obj/kern/kernel.asm	/^f010420d:	66 a3 96 92 2b f0    	mov    %ax,0xf02b9296$/;"	l
f0104213	obj/kern/kernel.asm	/^f0104213:	b8 5a 4d 10 f0       	mov    $0xf0104d5a,%eax$/;"	l
f0104218	obj/kern/kernel.asm	/^f0104218:	66 a3 98 92 2b f0    	mov    %ax,0xf02b9298$/;"	l
f010421e	obj/kern/kernel.asm	/^f010421e:	66 c7 05 9a 92 2b f0 	movw   $0x8,0xf02b929a$/;"	l
f0104225	obj/kern/kernel.asm	/^f0104225:	08 00 $/;"	l
f0104227	obj/kern/kernel.asm	/^f0104227:	c6 05 9c 92 2b f0 00 	movb   $0x0,0xf02b929c$/;"	l
f010422e	obj/kern/kernel.asm	/^f010422e:	c6 05 9d 92 2b f0 8e 	movb   $0x8e,0xf02b929d$/;"	l
f0104235	obj/kern/kernel.asm	/^f0104235:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104238	obj/kern/kernel.asm	/^f0104238:	66 a3 9e 92 2b f0    	mov    %ax,0xf02b929e$/;"	l
f010423e	obj/kern/kernel.asm	/^f010423e:	b8 64 4d 10 f0       	mov    $0xf0104d64,%eax$/;"	l
f0104243	obj/kern/kernel.asm	/^f0104243:	66 a3 a0 92 2b f0    	mov    %ax,0xf02b92a0$/;"	l
f0104249	obj/kern/kernel.asm	/^f0104249:	66 c7 05 a2 92 2b f0 	movw   $0x8,0xf02b92a2$/;"	l
f0104250	obj/kern/kernel.asm	/^f0104250:	08 00 $/;"	l
f0104252	obj/kern/kernel.asm	/^f0104252:	c6 05 a4 92 2b f0 00 	movb   $0x0,0xf02b92a4$/;"	l
f0104259	obj/kern/kernel.asm	/^f0104259:	c6 05 a5 92 2b f0 8e 	movb   $0x8e,0xf02b92a5$/;"	l
f0104260	obj/kern/kernel.asm	/^f0104260:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104263	obj/kern/kernel.asm	/^f0104263:	66 a3 a6 92 2b f0    	mov    %ax,0xf02b92a6$/;"	l
f0104269	obj/kern/kernel.asm	/^f0104269:	b8 6c 4d 10 f0       	mov    $0xf0104d6c,%eax$/;"	l
f010426e	obj/kern/kernel.asm	/^f010426e:	66 a3 b0 92 2b f0    	mov    %ax,0xf02b92b0$/;"	l
f0104274	obj/kern/kernel.asm	/^f0104274:	66 c7 05 b2 92 2b f0 	movw   $0x8,0xf02b92b2$/;"	l
f010427b	obj/kern/kernel.asm	/^f010427b:	08 00 $/;"	l
f010427d	obj/kern/kernel.asm	/^f010427d:	c6 05 b4 92 2b f0 00 	movb   $0x0,0xf02b92b4$/;"	l
f0104284	obj/kern/kernel.asm	/^f0104284:	c6 05 b5 92 2b f0 8e 	movb   $0x8e,0xf02b92b5$/;"	l
f010428b	obj/kern/kernel.asm	/^f010428b:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010428e	obj/kern/kernel.asm	/^f010428e:	66 a3 b6 92 2b f0    	mov    %ax,0xf02b92b6$/;"	l
f0104294	obj/kern/kernel.asm	/^f0104294:	b8 74 4d 10 f0       	mov    $0xf0104d74,%eax$/;"	l
f0104299	obj/kern/kernel.asm	/^f0104299:	66 a3 b8 92 2b f0    	mov    %ax,0xf02b92b8$/;"	l
f010429f	obj/kern/kernel.asm	/^f010429f:	66 c7 05 ba 92 2b f0 	movw   $0x8,0xf02b92ba$/;"	l
f01042a6	obj/kern/kernel.asm	/^f01042a6:	08 00 $/;"	l
f01042a8	obj/kern/kernel.asm	/^f01042a8:	c6 05 bc 92 2b f0 00 	movb   $0x0,0xf02b92bc$/;"	l
f01042af	obj/kern/kernel.asm	/^f01042af:	c6 05 bd 92 2b f0 8e 	movb   $0x8e,0xf02b92bd$/;"	l
f01042b6	obj/kern/kernel.asm	/^f01042b6:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01042b9	obj/kern/kernel.asm	/^f01042b9:	66 a3 be 92 2b f0    	mov    %ax,0xf02b92be$/;"	l
f01042bf	obj/kern/kernel.asm	/^f01042bf:	b8 7c 4d 10 f0       	mov    $0xf0104d7c,%eax$/;"	l
f01042c4	obj/kern/kernel.asm	/^f01042c4:	66 a3 c0 92 2b f0    	mov    %ax,0xf02b92c0$/;"	l
f01042ca	obj/kern/kernel.asm	/^f01042ca:	66 c7 05 c2 92 2b f0 	movw   $0x8,0xf02b92c2$/;"	l
f01042d1	obj/kern/kernel.asm	/^f01042d1:	08 00 $/;"	l
f01042d3	obj/kern/kernel.asm	/^f01042d3:	c6 05 c4 92 2b f0 00 	movb   $0x0,0xf02b92c4$/;"	l
f01042da	obj/kern/kernel.asm	/^f01042da:	c6 05 c5 92 2b f0 8e 	movb   $0x8e,0xf02b92c5$/;"	l
f01042e1	obj/kern/kernel.asm	/^f01042e1:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01042e4	obj/kern/kernel.asm	/^f01042e4:	66 a3 c6 92 2b f0    	mov    %ax,0xf02b92c6$/;"	l
f01042ea	obj/kern/kernel.asm	/^f01042ea:	b8 84 4d 10 f0       	mov    $0xf0104d84,%eax$/;"	l
f01042ef	obj/kern/kernel.asm	/^f01042ef:	66 a3 c8 92 2b f0    	mov    %ax,0xf02b92c8$/;"	l
f01042f5	obj/kern/kernel.asm	/^f01042f5:	66 c7 05 ca 92 2b f0 	movw   $0x8,0xf02b92ca$/;"	l
f01042fc	obj/kern/kernel.asm	/^f01042fc:	08 00 $/;"	l
f01042fe	obj/kern/kernel.asm	/^f01042fe:	c6 05 cc 92 2b f0 00 	movb   $0x0,0xf02b92cc$/;"	l
f0104305	obj/kern/kernel.asm	/^f0104305:	c6 05 cd 92 2b f0 8e 	movb   $0x8e,0xf02b92cd$/;"	l
f010430c	obj/kern/kernel.asm	/^f010430c:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010430f	obj/kern/kernel.asm	/^f010430f:	66 a3 ce 92 2b f0    	mov    %ax,0xf02b92ce$/;"	l
f0104315	obj/kern/kernel.asm	/^f0104315:	b8 8c 4d 10 f0       	mov    $0xf0104d8c,%eax$/;"	l
f010431a	obj/kern/kernel.asm	/^f010431a:	66 a3 d0 92 2b f0    	mov    %ax,0xf02b92d0$/;"	l
f0104320	obj/kern/kernel.asm	/^f0104320:	66 c7 05 d2 92 2b f0 	movw   $0x8,0xf02b92d2$/;"	l
f0104327	obj/kern/kernel.asm	/^f0104327:	08 00 $/;"	l
f0104329	obj/kern/kernel.asm	/^f0104329:	c6 05 d4 92 2b f0 00 	movb   $0x0,0xf02b92d4$/;"	l
f0104330	obj/kern/kernel.asm	/^f0104330:	c6 05 d5 92 2b f0 8e 	movb   $0x8e,0xf02b92d5$/;"	l
f0104337	obj/kern/kernel.asm	/^f0104337:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010433a	obj/kern/kernel.asm	/^f010433a:	66 a3 d6 92 2b f0    	mov    %ax,0xf02b92d6$/;"	l
f0104340	obj/kern/kernel.asm	/^f0104340:	b8 90 4d 10 f0       	mov    $0xf0104d90,%eax$/;"	l
f0104345	obj/kern/kernel.asm	/^f0104345:	66 a3 e0 92 2b f0    	mov    %ax,0xf02b92e0$/;"	l
f010434b	obj/kern/kernel.asm	/^f010434b:	66 c7 05 e2 92 2b f0 	movw   $0x8,0xf02b92e2$/;"	l
f0104352	obj/kern/kernel.asm	/^f0104352:	08 00 $/;"	l
f0104354	obj/kern/kernel.asm	/^f0104354:	c6 05 e4 92 2b f0 00 	movb   $0x0,0xf02b92e4$/;"	l
f010435b	obj/kern/kernel.asm	/^f010435b:	c6 05 e5 92 2b f0 8e 	movb   $0x8e,0xf02b92e5$/;"	l
f0104362	obj/kern/kernel.asm	/^f0104362:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104365	obj/kern/kernel.asm	/^f0104365:	66 a3 e6 92 2b f0    	mov    %ax,0xf02b92e6$/;"	l
f010436b	obj/kern/kernel.asm	/^f010436b:	b8 96 4d 10 f0       	mov    $0xf0104d96,%eax$/;"	l
f0104370	obj/kern/kernel.asm	/^f0104370:	66 a3 e8 92 2b f0    	mov    %ax,0xf02b92e8$/;"	l
f0104376	obj/kern/kernel.asm	/^f0104376:	66 c7 05 ea 92 2b f0 	movw   $0x8,0xf02b92ea$/;"	l
f010437d	obj/kern/kernel.asm	/^f010437d:	08 00 $/;"	l
f010437f	obj/kern/kernel.asm	/^f010437f:	c6 05 ec 92 2b f0 00 	movb   $0x0,0xf02b92ec$/;"	l
f0104386	obj/kern/kernel.asm	/^f0104386:	c6 05 ed 92 2b f0 8e 	movb   $0x8e,0xf02b92ed$/;"	l
f010438d	obj/kern/kernel.asm	/^f010438d:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104390	obj/kern/kernel.asm	/^f0104390:	66 a3 ee 92 2b f0    	mov    %ax,0xf02b92ee$/;"	l
f0104396	obj/kern/kernel.asm	/^f0104396:	b8 9a 4d 10 f0       	mov    $0xf0104d9a,%eax$/;"	l
f010439b	obj/kern/kernel.asm	/^f010439b:	66 a3 f0 92 2b f0    	mov    %ax,0xf02b92f0$/;"	l
f01043a1	obj/kern/kernel.asm	/^f01043a1:	66 c7 05 f2 92 2b f0 	movw   $0x8,0xf02b92f2$/;"	l
f01043a8	obj/kern/kernel.asm	/^f01043a8:	08 00 $/;"	l
f01043aa	obj/kern/kernel.asm	/^f01043aa:	c6 05 f4 92 2b f0 00 	movb   $0x0,0xf02b92f4$/;"	l
f01043b1	obj/kern/kernel.asm	/^f01043b1:	c6 05 f5 92 2b f0 8e 	movb   $0x8e,0xf02b92f5$/;"	l
f01043b8	obj/kern/kernel.asm	/^f01043b8:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01043bb	obj/kern/kernel.asm	/^f01043bb:	66 a3 f6 92 2b f0    	mov    %ax,0xf02b92f6$/;"	l
f01043c1	obj/kern/kernel.asm	/^f01043c1:	b8 a0 4d 10 f0       	mov    $0xf0104da0,%eax$/;"	l
f01043c6	obj/kern/kernel.asm	/^f01043c6:	66 a3 f8 92 2b f0    	mov    %ax,0xf02b92f8$/;"	l
f01043cc	obj/kern/kernel.asm	/^f01043cc:	66 c7 05 fa 92 2b f0 	movw   $0x8,0xf02b92fa$/;"	l
f01043d3	obj/kern/kernel.asm	/^f01043d3:	08 00 $/;"	l
f01043d5	obj/kern/kernel.asm	/^f01043d5:	c6 05 fc 92 2b f0 00 	movb   $0x0,0xf02b92fc$/;"	l
f01043dc	obj/kern/kernel.asm	/^f01043dc:	c6 05 fd 92 2b f0 8e 	movb   $0x8e,0xf02b92fd$/;"	l
f01043e3	obj/kern/kernel.asm	/^f01043e3:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01043e6	obj/kern/kernel.asm	/^f01043e6:	66 a3 fe 92 2b f0    	mov    %ax,0xf02b92fe$/;"	l
f01043ec	obj/kern/kernel.asm	/^f01043ec:	b8 a6 4d 10 f0       	mov    $0xf0104da6,%eax$/;"	l
f01043f1	obj/kern/kernel.asm	/^f01043f1:	66 a3 e0 93 2b f0    	mov    %ax,0xf02b93e0$/;"	l
f01043f7	obj/kern/kernel.asm	/^f01043f7:	66 c7 05 e2 93 2b f0 	movw   $0x8,0xf02b93e2$/;"	l
f01043fe	obj/kern/kernel.asm	/^f01043fe:	08 00 $/;"	l
f0104400	obj/kern/kernel.asm	/^f0104400:	c6 05 e4 93 2b f0 00 	movb   $0x0,0xf02b93e4$/;"	l
f0104407	obj/kern/kernel.asm	/^f0104407:	c6 05 e5 93 2b f0 ee 	movb   $0xee,0xf02b93e5$/;"	l
f010440e	obj/kern/kernel.asm	/^f010440e:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104411	obj/kern/kernel.asm	/^f0104411:	66 a3 e6 93 2b f0    	mov    %ax,0xf02b93e6$/;"	l
f0104417	obj/kern/kernel.asm	/^f0104417:	b8 ac 4d 10 f0       	mov    $0xf0104dac,%eax$/;"	l
f010441c	obj/kern/kernel.asm	/^f010441c:	66 a3 60 93 2b f0    	mov    %ax,0xf02b9360$/;"	l
f0104422	obj/kern/kernel.asm	/^f0104422:	66 c7 05 62 93 2b f0 	movw   $0x8,0xf02b9362$/;"	l
f0104429	obj/kern/kernel.asm	/^f0104429:	08 00 $/;"	l
f010442b	obj/kern/kernel.asm	/^f010442b:	c6 05 64 93 2b f0 00 	movb   $0x0,0xf02b9364$/;"	l
f0104432	obj/kern/kernel.asm	/^f0104432:	c6 05 65 93 2b f0 8e 	movb   $0x8e,0xf02b9365$/;"	l
f0104439	obj/kern/kernel.asm	/^f0104439:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010443c	obj/kern/kernel.asm	/^f010443c:	66 a3 66 93 2b f0    	mov    %ax,0xf02b9366$/;"	l
f0104442	obj/kern/kernel.asm	/^f0104442:	b8 b2 4d 10 f0       	mov    $0xf0104db2,%eax$/;"	l
f0104447	obj/kern/kernel.asm	/^f0104447:	66 a3 68 93 2b f0    	mov    %ax,0xf02b9368$/;"	l
f010444d	obj/kern/kernel.asm	/^f010444d:	66 c7 05 6a 93 2b f0 	movw   $0x8,0xf02b936a$/;"	l
f0104454	obj/kern/kernel.asm	/^f0104454:	08 00 $/;"	l
f0104456	obj/kern/kernel.asm	/^f0104456:	c6 05 6c 93 2b f0 00 	movb   $0x0,0xf02b936c$/;"	l
f010445d	obj/kern/kernel.asm	/^f010445d:	c6 05 6d 93 2b f0 8e 	movb   $0x8e,0xf02b936d$/;"	l
f0104464	obj/kern/kernel.asm	/^f0104464:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104467	obj/kern/kernel.asm	/^f0104467:	66 a3 6e 93 2b f0    	mov    %ax,0xf02b936e$/;"	l
f010446d	obj/kern/kernel.asm	/^f010446d:	b8 b8 4d 10 f0       	mov    $0xf0104db8,%eax$/;"	l
f0104472	obj/kern/kernel.asm	/^f0104472:	66 a3 70 93 2b f0    	mov    %ax,0xf02b9370$/;"	l
f0104478	obj/kern/kernel.asm	/^f0104478:	66 c7 05 72 93 2b f0 	movw   $0x8,0xf02b9372$/;"	l
f010447f	obj/kern/kernel.asm	/^f010447f:	08 00 $/;"	l
f0104481	obj/kern/kernel.asm	/^f0104481:	c6 05 74 93 2b f0 00 	movb   $0x0,0xf02b9374$/;"	l
f0104488	obj/kern/kernel.asm	/^f0104488:	c6 05 75 93 2b f0 8e 	movb   $0x8e,0xf02b9375$/;"	l
f010448f	obj/kern/kernel.asm	/^f010448f:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104492	obj/kern/kernel.asm	/^f0104492:	66 a3 76 93 2b f0    	mov    %ax,0xf02b9376$/;"	l
f0104498	obj/kern/kernel.asm	/^f0104498:	b8 be 4d 10 f0       	mov    $0xf0104dbe,%eax$/;"	l
f010449d	obj/kern/kernel.asm	/^f010449d:	66 a3 78 93 2b f0    	mov    %ax,0xf02b9378$/;"	l
f01044a3	obj/kern/kernel.asm	/^f01044a3:	66 c7 05 7a 93 2b f0 	movw   $0x8,0xf02b937a$/;"	l
f01044aa	obj/kern/kernel.asm	/^f01044aa:	08 00 $/;"	l
f01044ac	obj/kern/kernel.asm	/^f01044ac:	c6 05 7c 93 2b f0 00 	movb   $0x0,0xf02b937c$/;"	l
f01044b3	obj/kern/kernel.asm	/^f01044b3:	c6 05 7d 93 2b f0 8e 	movb   $0x8e,0xf02b937d$/;"	l
f01044ba	obj/kern/kernel.asm	/^f01044ba:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01044bd	obj/kern/kernel.asm	/^f01044bd:	66 a3 7e 93 2b f0    	mov    %ax,0xf02b937e$/;"	l
f01044c3	obj/kern/kernel.asm	/^f01044c3:	b8 c4 4d 10 f0       	mov    $0xf0104dc4,%eax$/;"	l
f01044c8	obj/kern/kernel.asm	/^f01044c8:	66 a3 80 93 2b f0    	mov    %ax,0xf02b9380$/;"	l
f01044ce	obj/kern/kernel.asm	/^f01044ce:	66 c7 05 82 93 2b f0 	movw   $0x8,0xf02b9382$/;"	l
f01044d5	obj/kern/kernel.asm	/^f01044d5:	08 00 $/;"	l
f01044d7	obj/kern/kernel.asm	/^f01044d7:	c6 05 84 93 2b f0 00 	movb   $0x0,0xf02b9384$/;"	l
f01044de	obj/kern/kernel.asm	/^f01044de:	c6 05 85 93 2b f0 8e 	movb   $0x8e,0xf02b9385$/;"	l
f01044e5	obj/kern/kernel.asm	/^f01044e5:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01044e8	obj/kern/kernel.asm	/^f01044e8:	66 a3 86 93 2b f0    	mov    %ax,0xf02b9386$/;"	l
f01044ee	obj/kern/kernel.asm	/^f01044ee:	b8 ca 4d 10 f0       	mov    $0xf0104dca,%eax$/;"	l
f01044f3	obj/kern/kernel.asm	/^f01044f3:	66 a3 88 93 2b f0    	mov    %ax,0xf02b9388$/;"	l
f01044f9	obj/kern/kernel.asm	/^f01044f9:	66 c7 05 8a 93 2b f0 	movw   $0x8,0xf02b938a$/;"	l
f0104500	obj/kern/kernel.asm	/^f0104500:	08 00 $/;"	l
f0104502	obj/kern/kernel.asm	/^f0104502:	c6 05 8c 93 2b f0 00 	movb   $0x0,0xf02b938c$/;"	l
f0104509	obj/kern/kernel.asm	/^f0104509:	c6 05 8d 93 2b f0 8e 	movb   $0x8e,0xf02b938d$/;"	l
f0104510	obj/kern/kernel.asm	/^f0104510:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104513	obj/kern/kernel.asm	/^f0104513:	66 a3 8e 93 2b f0    	mov    %ax,0xf02b938e$/;"	l
f0104519	obj/kern/kernel.asm	/^f0104519:	b8 d0 4d 10 f0       	mov    $0xf0104dd0,%eax$/;"	l
f010451e	obj/kern/kernel.asm	/^f010451e:	66 a3 90 93 2b f0    	mov    %ax,0xf02b9390$/;"	l
f0104524	obj/kern/kernel.asm	/^f0104524:	66 c7 05 92 93 2b f0 	movw   $0x8,0xf02b9392$/;"	l
f010452b	obj/kern/kernel.asm	/^f010452b:	08 00 $/;"	l
f010452d	obj/kern/kernel.asm	/^f010452d:	c6 05 94 93 2b f0 00 	movb   $0x0,0xf02b9394$/;"	l
f0104534	obj/kern/kernel.asm	/^f0104534:	c6 05 95 93 2b f0 8e 	movb   $0x8e,0xf02b9395$/;"	l
f010453b	obj/kern/kernel.asm	/^f010453b:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010453e	obj/kern/kernel.asm	/^f010453e:	66 a3 96 93 2b f0    	mov    %ax,0xf02b9396$/;"	l
f0104544	obj/kern/kernel.asm	/^f0104544:	b8 d6 4d 10 f0       	mov    $0xf0104dd6,%eax$/;"	l
f0104549	obj/kern/kernel.asm	/^f0104549:	66 a3 98 93 2b f0    	mov    %ax,0xf02b9398$/;"	l
f010454f	obj/kern/kernel.asm	/^f010454f:	66 c7 05 9a 93 2b f0 	movw   $0x8,0xf02b939a$/;"	l
f0104556	obj/kern/kernel.asm	/^f0104556:	08 00 $/;"	l
f0104558	obj/kern/kernel.asm	/^f0104558:	c6 05 9c 93 2b f0 00 	movb   $0x0,0xf02b939c$/;"	l
f010455f	obj/kern/kernel.asm	/^f010455f:	c6 05 9d 93 2b f0 8e 	movb   $0x8e,0xf02b939d$/;"	l
f0104566	obj/kern/kernel.asm	/^f0104566:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104569	obj/kern/kernel.asm	/^f0104569:	66 a3 9e 93 2b f0    	mov    %ax,0xf02b939e$/;"	l
f010456f	obj/kern/kernel.asm	/^f010456f:	b8 dc 4d 10 f0       	mov    $0xf0104ddc,%eax$/;"	l
f0104574	obj/kern/kernel.asm	/^f0104574:	66 a3 a0 93 2b f0    	mov    %ax,0xf02b93a0$/;"	l
f010457a	obj/kern/kernel.asm	/^f010457a:	66 c7 05 a2 93 2b f0 	movw   $0x8,0xf02b93a2$/;"	l
f0104581	obj/kern/kernel.asm	/^f0104581:	08 00 $/;"	l
f0104583	obj/kern/kernel.asm	/^f0104583:	c6 05 a4 93 2b f0 00 	movb   $0x0,0xf02b93a4$/;"	l
f010458a	obj/kern/kernel.asm	/^f010458a:	c6 05 a5 93 2b f0 8e 	movb   $0x8e,0xf02b93a5$/;"	l
f0104591	obj/kern/kernel.asm	/^f0104591:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104594	obj/kern/kernel.asm	/^f0104594:	66 a3 a6 93 2b f0    	mov    %ax,0xf02b93a6$/;"	l
f010459a	obj/kern/kernel.asm	/^f010459a:	b8 e2 4d 10 f0       	mov    $0xf0104de2,%eax$/;"	l
f010459f	obj/kern/kernel.asm	/^f010459f:	66 a3 a8 93 2b f0    	mov    %ax,0xf02b93a8$/;"	l
f01045a5	obj/kern/kernel.asm	/^f01045a5:	66 c7 05 aa 93 2b f0 	movw   $0x8,0xf02b93aa$/;"	l
f01045ac	obj/kern/kernel.asm	/^f01045ac:	08 00 $/;"	l
f01045ae	obj/kern/kernel.asm	/^f01045ae:	c6 05 ac 93 2b f0 00 	movb   $0x0,0xf02b93ac$/;"	l
f01045b5	obj/kern/kernel.asm	/^f01045b5:	c6 05 ad 93 2b f0 8e 	movb   $0x8e,0xf02b93ad$/;"	l
f01045bc	obj/kern/kernel.asm	/^f01045bc:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01045bf	obj/kern/kernel.asm	/^f01045bf:	66 a3 ae 93 2b f0    	mov    %ax,0xf02b93ae$/;"	l
f01045c5	obj/kern/kernel.asm	/^f01045c5:	b8 e8 4d 10 f0       	mov    $0xf0104de8,%eax$/;"	l
f01045ca	obj/kern/kernel.asm	/^f01045ca:	66 a3 b0 93 2b f0    	mov    %ax,0xf02b93b0$/;"	l
f01045d0	obj/kern/kernel.asm	/^f01045d0:	66 c7 05 b2 93 2b f0 	movw   $0x8,0xf02b93b2$/;"	l
f01045d7	obj/kern/kernel.asm	/^f01045d7:	08 00 $/;"	l
f01045d9	obj/kern/kernel.asm	/^f01045d9:	c6 05 b4 93 2b f0 00 	movb   $0x0,0xf02b93b4$/;"	l
f01045e0	obj/kern/kernel.asm	/^f01045e0:	c6 05 b5 93 2b f0 8e 	movb   $0x8e,0xf02b93b5$/;"	l
f01045e7	obj/kern/kernel.asm	/^f01045e7:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01045ea	obj/kern/kernel.asm	/^f01045ea:	66 a3 b6 93 2b f0    	mov    %ax,0xf02b93b6$/;"	l
f01045f0	obj/kern/kernel.asm	/^f01045f0:	b8 ee 4d 10 f0       	mov    $0xf0104dee,%eax$/;"	l
f01045f5	obj/kern/kernel.asm	/^f01045f5:	66 a3 b8 93 2b f0    	mov    %ax,0xf02b93b8$/;"	l
f01045fb	obj/kern/kernel.asm	/^f01045fb:	66 c7 05 ba 93 2b f0 	movw   $0x8,0xf02b93ba$/;"	l
f0104602	obj/kern/kernel.asm	/^f0104602:	08 00 $/;"	l
f0104604	obj/kern/kernel.asm	/^f0104604:	c6 05 bc 93 2b f0 00 	movb   $0x0,0xf02b93bc$/;"	l
f010460b	obj/kern/kernel.asm	/^f010460b:	c6 05 bd 93 2b f0 8e 	movb   $0x8e,0xf02b93bd$/;"	l
f0104612	obj/kern/kernel.asm	/^f0104612:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104615	obj/kern/kernel.asm	/^f0104615:	66 a3 be 93 2b f0    	mov    %ax,0xf02b93be$/;"	l
f010461b	obj/kern/kernel.asm	/^f010461b:	b8 f4 4d 10 f0       	mov    $0xf0104df4,%eax$/;"	l
f0104620	obj/kern/kernel.asm	/^f0104620:	66 a3 c0 93 2b f0    	mov    %ax,0xf02b93c0$/;"	l
f0104626	obj/kern/kernel.asm	/^f0104626:	66 c7 05 c2 93 2b f0 	movw   $0x8,0xf02b93c2$/;"	l
f010462d	obj/kern/kernel.asm	/^f010462d:	08 00 $/;"	l
f010462f	obj/kern/kernel.asm	/^f010462f:	c6 05 c4 93 2b f0 00 	movb   $0x0,0xf02b93c4$/;"	l
f0104636	obj/kern/kernel.asm	/^f0104636:	c6 05 c5 93 2b f0 8e 	movb   $0x8e,0xf02b93c5$/;"	l
f010463d	obj/kern/kernel.asm	/^f010463d:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104640	obj/kern/kernel.asm	/^f0104640:	66 a3 c6 93 2b f0    	mov    %ax,0xf02b93c6$/;"	l
f0104646	obj/kern/kernel.asm	/^f0104646:	b8 fa 4d 10 f0       	mov    $0xf0104dfa,%eax$/;"	l
f010464b	obj/kern/kernel.asm	/^f010464b:	66 a3 c8 93 2b f0    	mov    %ax,0xf02b93c8$/;"	l
f0104651	obj/kern/kernel.asm	/^f0104651:	66 c7 05 ca 93 2b f0 	movw   $0x8,0xf02b93ca$/;"	l
f0104658	obj/kern/kernel.asm	/^f0104658:	08 00 $/;"	l
f010465a	obj/kern/kernel.asm	/^f010465a:	c6 05 cc 93 2b f0 00 	movb   $0x0,0xf02b93cc$/;"	l
f0104661	obj/kern/kernel.asm	/^f0104661:	c6 05 cd 93 2b f0 8e 	movb   $0x8e,0xf02b93cd$/;"	l
f0104668	obj/kern/kernel.asm	/^f0104668:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010466b	obj/kern/kernel.asm	/^f010466b:	66 a3 ce 93 2b f0    	mov    %ax,0xf02b93ce$/;"	l
f0104671	obj/kern/kernel.asm	/^f0104671:	b8 00 4e 10 f0       	mov    $0xf0104e00,%eax$/;"	l
f0104676	obj/kern/kernel.asm	/^f0104676:	66 a3 d0 93 2b f0    	mov    %ax,0xf02b93d0$/;"	l
f010467c	obj/kern/kernel.asm	/^f010467c:	66 c7 05 d2 93 2b f0 	movw   $0x8,0xf02b93d2$/;"	l
f0104683	obj/kern/kernel.asm	/^f0104683:	08 00 $/;"	l
f0104685	obj/kern/kernel.asm	/^f0104685:	c6 05 d4 93 2b f0 00 	movb   $0x0,0xf02b93d4$/;"	l
f010468c	obj/kern/kernel.asm	/^f010468c:	c6 05 d5 93 2b f0 8e 	movb   $0x8e,0xf02b93d5$/;"	l
f0104693	obj/kern/kernel.asm	/^f0104693:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104696	obj/kern/kernel.asm	/^f0104696:	66 a3 d6 93 2b f0    	mov    %ax,0xf02b93d6$/;"	l
f010469c	obj/kern/kernel.asm	/^f010469c:	b8 06 4e 10 f0       	mov    $0xf0104e06,%eax$/;"	l
f01046a1	obj/kern/kernel.asm	/^f01046a1:	66 a3 d8 93 2b f0    	mov    %ax,0xf02b93d8$/;"	l
f01046a7	obj/kern/kernel.asm	/^f01046a7:	66 c7 05 da 93 2b f0 	movw   $0x8,0xf02b93da$/;"	l
f01046ae	obj/kern/kernel.asm	/^f01046ae:	08 00 $/;"	l
f01046b0	obj/kern/kernel.asm	/^f01046b0:	c6 05 dc 93 2b f0 00 	movb   $0x0,0xf02b93dc$/;"	l
f01046b7	obj/kern/kernel.asm	/^f01046b7:	c6 05 dd 93 2b f0 8e 	movb   $0x8e,0xf02b93dd$/;"	l
f01046be	obj/kern/kernel.asm	/^f01046be:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01046c1	obj/kern/kernel.asm	/^f01046c1:	66 a3 de 93 2b f0    	mov    %ax,0xf02b93de$/;"	l
f01046c7	obj/kern/kernel.asm	/^f01046c7:	e8 44 f9 ff ff       	call   f0104010 <trap_init_percpu>$/;"	l
f01046cc	obj/kern/kernel.asm	/^f01046cc:	c9                   	leave  $/;"	l
f01046cd	obj/kern/kernel.asm	/^f01046cd:	c3                   	ret    $/;"	l
f01046ce	obj/kern/kernel.asm	/^f01046ce <print_regs>:$/;"	l
f01046ce	obj/kern/kernel.asm	/^f01046ce:	55                   	push   %ebp$/;"	l
f01046cf	obj/kern/kernel.asm	/^f01046cf:	89 e5                	mov    %esp,%ebp$/;"	l
f01046d1	obj/kern/kernel.asm	/^f01046d1:	53                   	push   %ebx$/;"	l
f01046d2	obj/kern/kernel.asm	/^f01046d2:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01046d5	obj/kern/kernel.asm	/^f01046d5:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01046d8	obj/kern/kernel.asm	/^f01046d8:	8b 03                	mov    (%ebx),%eax$/;"	l
f01046da	obj/kern/kernel.asm	/^f01046da:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01046de	obj/kern/kernel.asm	/^f01046de:	c7 04 24 e1 92 10 f0 	movl   $0xf01092e1,(%esp)$/;"	l
f01046e5	obj/kern/kernel.asm	/^f01046e5:	e8 02 f9 ff ff       	call   f0103fec <cprintf>$/;"	l
f01046ea	obj/kern/kernel.asm	/^f01046ea:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f01046ed	obj/kern/kernel.asm	/^f01046ed:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01046f1	obj/kern/kernel.asm	/^f01046f1:	c7 04 24 f0 92 10 f0 	movl   $0xf01092f0,(%esp)$/;"	l
f01046f8	obj/kern/kernel.asm	/^f01046f8:	e8 ef f8 ff ff       	call   f0103fec <cprintf>$/;"	l
f01046fd	obj/kern/kernel.asm	/^f01046fd:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0104700	obj/kern/kernel.asm	/^f0104700:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104704	obj/kern/kernel.asm	/^f0104704:	c7 04 24 ff 92 10 f0 	movl   $0xf01092ff,(%esp)$/;"	l
f010470b	obj/kern/kernel.asm	/^f010470b:	e8 dc f8 ff ff       	call   f0103fec <cprintf>$/;"	l
f0104710	obj/kern/kernel.asm	/^f0104710:	8b 43 0c             	mov    0xc(%ebx),%eax$/;"	l
f0104713	obj/kern/kernel.asm	/^f0104713:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104717	obj/kern/kernel.asm	/^f0104717:	c7 04 24 0e 93 10 f0 	movl   $0xf010930e,(%esp)$/;"	l
f010471e	obj/kern/kernel.asm	/^f010471e:	e8 c9 f8 ff ff       	call   f0103fec <cprintf>$/;"	l
f0104723	obj/kern/kernel.asm	/^f0104723:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f0104726	obj/kern/kernel.asm	/^f0104726:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010472a	obj/kern/kernel.asm	/^f010472a:	c7 04 24 1d 93 10 f0 	movl   $0xf010931d,(%esp)$/;"	l
f0104731	obj/kern/kernel.asm	/^f0104731:	e8 b6 f8 ff ff       	call   f0103fec <cprintf>$/;"	l
f0104736	obj/kern/kernel.asm	/^f0104736:	8b 43 14             	mov    0x14(%ebx),%eax$/;"	l
f0104739	obj/kern/kernel.asm	/^f0104739:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010473d	obj/kern/kernel.asm	/^f010473d:	c7 04 24 2c 93 10 f0 	movl   $0xf010932c,(%esp)$/;"	l
f0104744	obj/kern/kernel.asm	/^f0104744:	e8 a3 f8 ff ff       	call   f0103fec <cprintf>$/;"	l
f0104749	obj/kern/kernel.asm	/^f0104749:	8b 43 18             	mov    0x18(%ebx),%eax$/;"	l
f010474c	obj/kern/kernel.asm	/^f010474c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104750	obj/kern/kernel.asm	/^f0104750:	c7 04 24 3b 93 10 f0 	movl   $0xf010933b,(%esp)$/;"	l
f0104757	obj/kern/kernel.asm	/^f0104757:	e8 90 f8 ff ff       	call   f0103fec <cprintf>$/;"	l
f010475c	obj/kern/kernel.asm	/^f010475c:	8b 43 1c             	mov    0x1c(%ebx),%eax$/;"	l
f010475f	obj/kern/kernel.asm	/^f010475f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104763	obj/kern/kernel.asm	/^f0104763:	c7 04 24 4a 93 10 f0 	movl   $0xf010934a,(%esp)$/;"	l
f010476a	obj/kern/kernel.asm	/^f010476a:	e8 7d f8 ff ff       	call   f0103fec <cprintf>$/;"	l
f010476f	obj/kern/kernel.asm	/^f010476f:	83 c4 14             	add    $0x14,%esp$/;"	l
f0104772	obj/kern/kernel.asm	/^f0104772:	5b                   	pop    %ebx$/;"	l
f0104773	obj/kern/kernel.asm	/^f0104773:	5d                   	pop    %ebp$/;"	l
f0104774	obj/kern/kernel.asm	/^f0104774:	c3                   	ret    $/;"	l
f0104775	obj/kern/kernel.asm	/^f0104775 <print_trapframe>:$/;"	l
f0104775	obj/kern/kernel.asm	/^f0104775:	55                   	push   %ebp$/;"	l
f0104776	obj/kern/kernel.asm	/^f0104776:	89 e5                	mov    %esp,%ebp$/;"	l
f0104778	obj/kern/kernel.asm	/^f0104778:	56                   	push   %esi$/;"	l
f0104779	obj/kern/kernel.asm	/^f0104779:	53                   	push   %ebx$/;"	l
f010477a	obj/kern/kernel.asm	/^f010477a:	83 ec 10             	sub    $0x10,%esp$/;"	l
f010477d	obj/kern/kernel.asm	/^f010477d:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0104780	obj/kern/kernel.asm	/^f0104780:	e8 d4 23 00 00       	call   f0106b59 <cpunum>$/;"	l
f0104785	obj/kern/kernel.asm	/^f0104785:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0104789	obj/kern/kernel.asm	/^f0104789:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f010478d	obj/kern/kernel.asm	/^f010478d:	c7 04 24 ae 93 10 f0 	movl   $0xf01093ae,(%esp)$/;"	l
f0104794	obj/kern/kernel.asm	/^f0104794:	e8 53 f8 ff ff       	call   f0103fec <cprintf>$/;"	l
f0104799	obj/kern/kernel.asm	/^f0104799:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010479c	obj/kern/kernel.asm	/^f010479c:	e8 2d ff ff ff       	call   f01046ce <print_regs>$/;"	l
f01047a1	obj/kern/kernel.asm	/^f01047a1:	0f b7 43 20          	movzwl 0x20(%ebx),%eax$/;"	l
f01047a5	obj/kern/kernel.asm	/^f01047a5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01047a9	obj/kern/kernel.asm	/^f01047a9:	c7 04 24 cc 93 10 f0 	movl   $0xf01093cc,(%esp)$/;"	l
f01047b0	obj/kern/kernel.asm	/^f01047b0:	e8 37 f8 ff ff       	call   f0103fec <cprintf>$/;"	l
f01047b5	obj/kern/kernel.asm	/^f01047b5:	0f b7 43 24          	movzwl 0x24(%ebx),%eax$/;"	l
f01047b9	obj/kern/kernel.asm	/^f01047b9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01047bd	obj/kern/kernel.asm	/^f01047bd:	c7 04 24 df 93 10 f0 	movl   $0xf01093df,(%esp)$/;"	l
f01047c4	obj/kern/kernel.asm	/^f01047c4:	e8 23 f8 ff ff       	call   f0103fec <cprintf>$/;"	l
f01047c9	obj/kern/kernel.asm	/^f01047c9:	8b 43 28             	mov    0x28(%ebx),%eax$/;"	l
f01047cc	obj/kern/kernel.asm	/^f01047cc:	83 f8 13             	cmp    $0x13,%eax$/;"	l
f01047cf	obj/kern/kernel.asm	/^f01047cf:	77 09                	ja     f01047da <print_trapframe+0x65>$/;"	l
f01047d1	obj/kern/kernel.asm	/^f01047d1:	8b 14 85 80 96 10 f0 	mov    -0xfef6980(,%eax,4),%edx$/;"	l
f01047d8	obj/kern/kernel.asm	/^f01047d8:	eb 1f                	jmp    f01047f9 <print_trapframe+0x84>$/;"	l
f01047da	obj/kern/kernel.asm	/^f01047da:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f01047dd	obj/kern/kernel.asm	/^f01047dd:	74 15                	je     f01047f4 <print_trapframe+0x7f>$/;"	l
f01047df	obj/kern/kernel.asm	/^f01047df:	8d 50 e0             	lea    -0x20(%eax),%edx$/;"	l
f01047e2	obj/kern/kernel.asm	/^f01047e2:	83 fa 0f             	cmp    $0xf,%edx$/;"	l
f01047e5	obj/kern/kernel.asm	/^f01047e5:	ba 65 93 10 f0       	mov    $0xf0109365,%edx$/;"	l
f01047ea	obj/kern/kernel.asm	/^f01047ea:	b9 78 93 10 f0       	mov    $0xf0109378,%ecx$/;"	l
f01047ef	obj/kern/kernel.asm	/^f01047ef:	0f 47 d1             	cmova  %ecx,%edx$/;"	l
f01047f2	obj/kern/kernel.asm	/^f01047f2:	eb 05                	jmp    f01047f9 <print_trapframe+0x84>$/;"	l
f01047f4	obj/kern/kernel.asm	/^f01047f4:	ba 59 93 10 f0       	mov    $0xf0109359,%edx$/;"	l
f01047f9	obj/kern/kernel.asm	/^f01047f9:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f01047fd	obj/kern/kernel.asm	/^f01047fd:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104801	obj/kern/kernel.asm	/^f0104801:	c7 04 24 f2 93 10 f0 	movl   $0xf01093f2,(%esp)$/;"	l
f0104808	obj/kern/kernel.asm	/^f0104808:	e8 df f7 ff ff       	call   f0103fec <cprintf>$/;"	l
f010480d	obj/kern/kernel.asm	/^f010480d:	3b 1d 60 9a 2b f0    	cmp    0xf02b9a60,%ebx$/;"	l
f0104813	obj/kern/kernel.asm	/^f0104813:	75 19                	jne    f010482e <print_trapframe+0xb9>$/;"	l
f0104815	obj/kern/kernel.asm	/^f0104815:	83 7b 28 0e          	cmpl   $0xe,0x28(%ebx)$/;"	l
f0104819	obj/kern/kernel.asm	/^f0104819:	75 13                	jne    f010482e <print_trapframe+0xb9>$/;"	l
f010481b	obj/kern/kernel.asm	/^f010481b:	0f 20 d0             	mov    %cr2,%eax$/;"	l
f010481e	obj/kern/kernel.asm	/^f010481e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104822	obj/kern/kernel.asm	/^f0104822:	c7 04 24 04 94 10 f0 	movl   $0xf0109404,(%esp)$/;"	l
f0104829	obj/kern/kernel.asm	/^f0104829:	e8 be f7 ff ff       	call   f0103fec <cprintf>$/;"	l
f010482e	obj/kern/kernel.asm	/^f010482e:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f0104831	obj/kern/kernel.asm	/^f0104831:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104835	obj/kern/kernel.asm	/^f0104835:	c7 04 24 13 94 10 f0 	movl   $0xf0109413,(%esp)$/;"	l
f010483c	obj/kern/kernel.asm	/^f010483c:	e8 ab f7 ff ff       	call   f0103fec <cprintf>$/;"	l
f0104841	obj/kern/kernel.asm	/^f0104841:	83 7b 28 0e          	cmpl   $0xe,0x28(%ebx)$/;"	l
f0104845	obj/kern/kernel.asm	/^f0104845:	75 51                	jne    f0104898 <print_trapframe+0x123>$/;"	l
f0104847	obj/kern/kernel.asm	/^f0104847:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f010484a	obj/kern/kernel.asm	/^f010484a:	89 c2                	mov    %eax,%edx$/;"	l
f010484c	obj/kern/kernel.asm	/^f010484c:	83 e2 01             	and    $0x1,%edx$/;"	l
f010484f	obj/kern/kernel.asm	/^f010484f:	ba 87 93 10 f0       	mov    $0xf0109387,%edx$/;"	l
f0104854	obj/kern/kernel.asm	/^f0104854:	b9 92 93 10 f0       	mov    $0xf0109392,%ecx$/;"	l
f0104859	obj/kern/kernel.asm	/^f0104859:	0f 45 ca             	cmovne %edx,%ecx$/;"	l
f010485c	obj/kern/kernel.asm	/^f010485c:	89 c2                	mov    %eax,%edx$/;"	l
f010485e	obj/kern/kernel.asm	/^f010485e:	83 e2 02             	and    $0x2,%edx$/;"	l
f0104861	obj/kern/kernel.asm	/^f0104861:	ba 9e 93 10 f0       	mov    $0xf010939e,%edx$/;"	l
f0104866	obj/kern/kernel.asm	/^f0104866:	be a4 93 10 f0       	mov    $0xf01093a4,%esi$/;"	l
f010486b	obj/kern/kernel.asm	/^f010486b:	0f 44 d6             	cmove  %esi,%edx$/;"	l
f010486e	obj/kern/kernel.asm	/^f010486e:	83 e0 04             	and    $0x4,%eax$/;"	l
f0104871	obj/kern/kernel.asm	/^f0104871:	b8 a9 93 10 f0       	mov    $0xf01093a9,%eax$/;"	l
f0104876	obj/kern/kernel.asm	/^f0104876:	be f3 94 10 f0       	mov    $0xf01094f3,%esi$/;"	l
f010487b	obj/kern/kernel.asm	/^f010487b:	0f 44 c6             	cmove  %esi,%eax$/;"	l
f010487e	obj/kern/kernel.asm	/^f010487e:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f0104882	obj/kern/kernel.asm	/^f0104882:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0104886	obj/kern/kernel.asm	/^f0104886:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010488a	obj/kern/kernel.asm	/^f010488a:	c7 04 24 21 94 10 f0 	movl   $0xf0109421,(%esp)$/;"	l
f0104891	obj/kern/kernel.asm	/^f0104891:	e8 56 f7 ff ff       	call   f0103fec <cprintf>$/;"	l
f0104896	obj/kern/kernel.asm	/^f0104896:	eb 0c                	jmp    f01048a4 <print_trapframe+0x12f>$/;"	l
f0104898	obj/kern/kernel.asm	/^f0104898:	c7 04 24 1b 92 10 f0 	movl   $0xf010921b,(%esp)$/;"	l
f010489f	obj/kern/kernel.asm	/^f010489f:	e8 48 f7 ff ff       	call   f0103fec <cprintf>$/;"	l
f01048a4	obj/kern/kernel.asm	/^f01048a4:	8b 43 30             	mov    0x30(%ebx),%eax$/;"	l
f01048a7	obj/kern/kernel.asm	/^f01048a7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01048ab	obj/kern/kernel.asm	/^f01048ab:	c7 04 24 30 94 10 f0 	movl   $0xf0109430,(%esp)$/;"	l
f01048b2	obj/kern/kernel.asm	/^f01048b2:	e8 35 f7 ff ff       	call   f0103fec <cprintf>$/;"	l
f01048b7	obj/kern/kernel.asm	/^f01048b7:	0f b7 43 34          	movzwl 0x34(%ebx),%eax$/;"	l
f01048bb	obj/kern/kernel.asm	/^f01048bb:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01048bf	obj/kern/kernel.asm	/^f01048bf:	c7 04 24 3f 94 10 f0 	movl   $0xf010943f,(%esp)$/;"	l
f01048c6	obj/kern/kernel.asm	/^f01048c6:	e8 21 f7 ff ff       	call   f0103fec <cprintf>$/;"	l
f01048cb	obj/kern/kernel.asm	/^f01048cb:	8b 43 38             	mov    0x38(%ebx),%eax$/;"	l
f01048ce	obj/kern/kernel.asm	/^f01048ce:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01048d2	obj/kern/kernel.asm	/^f01048d2:	c7 04 24 52 94 10 f0 	movl   $0xf0109452,(%esp)$/;"	l
f01048d9	obj/kern/kernel.asm	/^f01048d9:	e8 0e f7 ff ff       	call   f0103fec <cprintf>$/;"	l
f01048de	obj/kern/kernel.asm	/^f01048de:	f6 43 34 03          	testb  $0x3,0x34(%ebx)$/;"	l
f01048e2	obj/kern/kernel.asm	/^f01048e2:	74 27                	je     f010490b <print_trapframe+0x196>$/;"	l
f01048e4	obj/kern/kernel.asm	/^f01048e4:	8b 43 3c             	mov    0x3c(%ebx),%eax$/;"	l
f01048e7	obj/kern/kernel.asm	/^f01048e7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01048eb	obj/kern/kernel.asm	/^f01048eb:	c7 04 24 61 94 10 f0 	movl   $0xf0109461,(%esp)$/;"	l
f01048f2	obj/kern/kernel.asm	/^f01048f2:	e8 f5 f6 ff ff       	call   f0103fec <cprintf>$/;"	l
f01048f7	obj/kern/kernel.asm	/^f01048f7:	0f b7 43 40          	movzwl 0x40(%ebx),%eax$/;"	l
f01048fb	obj/kern/kernel.asm	/^f01048fb:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01048ff	obj/kern/kernel.asm	/^f01048ff:	c7 04 24 70 94 10 f0 	movl   $0xf0109470,(%esp)$/;"	l
f0104906	obj/kern/kernel.asm	/^f0104906:	e8 e1 f6 ff ff       	call   f0103fec <cprintf>$/;"	l
f010490b	obj/kern/kernel.asm	/^f010490b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010490e	obj/kern/kernel.asm	/^f010490e:	5b                   	pop    %ebx$/;"	l
f010490f	obj/kern/kernel.asm	/^f010490f:	5e                   	pop    %esi$/;"	l
f0104910	obj/kern/kernel.asm	/^f0104910:	5d                   	pop    %ebp$/;"	l
f0104911	obj/kern/kernel.asm	/^f0104911:	c3                   	ret    $/;"	l
f0104912	obj/kern/kernel.asm	/^f0104912 <page_fault_handler>:$/;"	l
f0104912	obj/kern/kernel.asm	/^f0104912:	55                   	push   %ebp$/;"	l
f0104913	obj/kern/kernel.asm	/^f0104913:	89 e5                	mov    %esp,%ebp$/;"	l
f0104915	obj/kern/kernel.asm	/^f0104915:	57                   	push   %edi$/;"	l
f0104916	obj/kern/kernel.asm	/^f0104916:	56                   	push   %esi$/;"	l
f0104917	obj/kern/kernel.asm	/^f0104917:	53                   	push   %ebx$/;"	l
f0104918	obj/kern/kernel.asm	/^f0104918:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f010491b	obj/kern/kernel.asm	/^f010491b:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f010491e	obj/kern/kernel.asm	/^f010491e:	0f 20 d6             	mov    %cr2,%esi$/;"	l
f0104921	obj/kern/kernel.asm	/^f0104921:	0f b7 43 34          	movzwl 0x34(%ebx),%eax$/;"	l
f0104925	obj/kern/kernel.asm	/^f0104925:	83 e0 03             	and    $0x3,%eax$/;"	l
f0104928	obj/kern/kernel.asm	/^f0104928:	66 83 f8 03          	cmp    $0x3,%ax$/;"	l
f010492c	obj/kern/kernel.asm	/^f010492c:	74 1c                	je     f010494a <page_fault_handler+0x38>$/;"	l
f010492e	obj/kern/kernel.asm	/^f010492e:	c7 44 24 08 83 94 10 	movl   $0xf0109483,0x8(%esp)$/;"	l
f0104935	obj/kern/kernel.asm	/^f0104935:	f0 $/;"	l
f0104936	obj/kern/kernel.asm	/^f0104936:	c7 44 24 04 8d 01 00 	movl   $0x18d,0x4(%esp)$/;"	l
f010493d	obj/kern/kernel.asm	/^f010493d:	00 $/;"	l
f010493e	obj/kern/kernel.asm	/^f010493e:	c7 04 24 9f 94 10 f0 	movl   $0xf010949f,(%esp)$/;"	l
f0104945	obj/kern/kernel.asm	/^f0104945:	e8 f6 b6 ff ff       	call   f0100040 <_panic>$/;"	l
f010494a	obj/kern/kernel.asm	/^f010494a:	e8 0a 22 00 00       	call   f0106b59 <cpunum>$/;"	l
f010494f	obj/kern/kernel.asm	/^f010494f:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104952	obj/kern/kernel.asm	/^f0104952:	8b 80 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%eax$/;"	l
f0104958	obj/kern/kernel.asm	/^f0104958:	83 78 64 00          	cmpl   $0x0,0x64(%eax)$/;"	l
f010495c	obj/kern/kernel.asm	/^f010495c:	0f 84 f7 00 00 00    	je     f0104a59 <page_fault_handler+0x147>$/;"	l
f0104962	obj/kern/kernel.asm	/^f0104962:	8b 43 3c             	mov    0x3c(%ebx),%eax$/;"	l
f0104965	obj/kern/kernel.asm	/^f0104965:	8d 90 00 10 40 11    	lea    0x11401000(%eax),%edx$/;"	l
f010496b	obj/kern/kernel.asm	/^f010496b:	83 e8 38             	sub    $0x38,%eax$/;"	l
f010496e	obj/kern/kernel.asm	/^f010496e:	81 fa 00 10 00 00    	cmp    $0x1000,%edx$/;"	l
f0104974	obj/kern/kernel.asm	/^f0104974:	ba cc ff bf ee       	mov    $0xeebfffcc,%edx$/;"	l
f0104979	obj/kern/kernel.asm	/^f0104979:	0f 46 d0             	cmovbe %eax,%edx$/;"	l
f010497c	obj/kern/kernel.asm	/^f010497c:	89 d7                	mov    %edx,%edi$/;"	l
f010497e	obj/kern/kernel.asm	/^f010497e:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0104981	obj/kern/kernel.asm	/^f0104981:	e8 d3 21 00 00       	call   f0106b59 <cpunum>$/;"	l
f0104986	obj/kern/kernel.asm	/^f0104986:	c7 44 24 0c 06 00 00 	movl   $0x6,0xc(%esp)$/;"	l
f010498d	obj/kern/kernel.asm	/^f010498d:	00 $/;"	l
f010498e	obj/kern/kernel.asm	/^f010498e:	c7 44 24 08 34 00 00 	movl   $0x34,0x8(%esp)$/;"	l
f0104995	obj/kern/kernel.asm	/^f0104995:	00 $/;"	l
f0104996	obj/kern/kernel.asm	/^f0104996:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f010499a	obj/kern/kernel.asm	/^f010499a:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010499d	obj/kern/kernel.asm	/^f010499d:	8b 80 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%eax$/;"	l
f01049a3	obj/kern/kernel.asm	/^f01049a3:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01049a6	obj/kern/kernel.asm	/^f01049a6:	e8 99 ec ff ff       	call   f0103644 <user_mem_assert>$/;"	l
f01049ab	obj/kern/kernel.asm	/^f01049ab:	89 37                	mov    %esi,(%edi)$/;"	l
f01049ad	obj/kern/kernel.asm	/^f01049ad:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f01049b0	obj/kern/kernel.asm	/^f01049b0:	89 47 04             	mov    %eax,0x4(%edi)$/;"	l
f01049b3	obj/kern/kernel.asm	/^f01049b3:	8d 7f 08             	lea    0x8(%edi),%edi$/;"	l
f01049b6	obj/kern/kernel.asm	/^f01049b6:	89 de                	mov    %ebx,%esi$/;"	l
f01049b8	obj/kern/kernel.asm	/^f01049b8:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01049bd	obj/kern/kernel.asm	/^f01049bd:	f7 c7 01 00 00 00    	test   $0x1,%edi$/;"	l
f01049c3	obj/kern/kernel.asm	/^f01049c3:	74 03                	je     f01049c8 <page_fault_handler+0xb6>$/;"	l
f01049c5	obj/kern/kernel.asm	/^f01049c5:	a4                   	movsb  %ds:(%esi),%es:(%edi)$/;"	l
f01049c6	obj/kern/kernel.asm	/^f01049c6:	b0 1f                	mov    $0x1f,%al$/;"	l
f01049c8	obj/kern/kernel.asm	/^f01049c8:	f7 c7 02 00 00 00    	test   $0x2,%edi$/;"	l
f01049ce	obj/kern/kernel.asm	/^f01049ce:	74 05                	je     f01049d5 <page_fault_handler+0xc3>$/;"	l
f01049d0	obj/kern/kernel.asm	/^f01049d0:	66 a5                	movsw  %ds:(%esi),%es:(%edi)$/;"	l
f01049d2	obj/kern/kernel.asm	/^f01049d2:	83 e8 02             	sub    $0x2,%eax$/;"	l
f01049d5	obj/kern/kernel.asm	/^f01049d5:	89 c1                	mov    %eax,%ecx$/;"	l
f01049d7	obj/kern/kernel.asm	/^f01049d7:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f01049da	obj/kern/kernel.asm	/^f01049da:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f01049dc	obj/kern/kernel.asm	/^f01049dc:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01049e1	obj/kern/kernel.asm	/^f01049e1:	a8 02                	test   $0x2,%al$/;"	l
f01049e3	obj/kern/kernel.asm	/^f01049e3:	74 0b                	je     f01049f0 <page_fault_handler+0xde>$/;"	l
f01049e5	obj/kern/kernel.asm	/^f01049e5:	0f b7 16             	movzwl (%esi),%edx$/;"	l
f01049e8	obj/kern/kernel.asm	/^f01049e8:	66 89 17             	mov    %dx,(%edi)$/;"	l
f01049eb	obj/kern/kernel.asm	/^f01049eb:	ba 02 00 00 00       	mov    $0x2,%edx$/;"	l
f01049f0	obj/kern/kernel.asm	/^f01049f0:	a8 01                	test   $0x1,%al$/;"	l
f01049f2	obj/kern/kernel.asm	/^f01049f2:	74 07                	je     f01049fb <page_fault_handler+0xe9>$/;"	l
f01049f4	obj/kern/kernel.asm	/^f01049f4:	0f b6 04 16          	movzbl (%esi,%edx,1),%eax$/;"	l
f01049f8	obj/kern/kernel.asm	/^f01049f8:	88 04 17             	mov    %al,(%edi,%edx,1)$/;"	l
f01049fb	obj/kern/kernel.asm	/^f01049fb:	8b 43 30             	mov    0x30(%ebx),%eax$/;"	l
f01049fe	obj/kern/kernel.asm	/^f01049fe:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f0104a01	obj/kern/kernel.asm	/^f0104a01:	89 46 28             	mov    %eax,0x28(%esi)$/;"	l
f0104a04	obj/kern/kernel.asm	/^f0104a04:	8b 43 38             	mov    0x38(%ebx),%eax$/;"	l
f0104a07	obj/kern/kernel.asm	/^f0104a07:	89 46 2c             	mov    %eax,0x2c(%esi)$/;"	l
f0104a0a	obj/kern/kernel.asm	/^f0104a0a:	8b 43 3c             	mov    0x3c(%ebx),%eax$/;"	l
f0104a0d	obj/kern/kernel.asm	/^f0104a0d:	89 46 30             	mov    %eax,0x30(%esi)$/;"	l
f0104a10	obj/kern/kernel.asm	/^f0104a10:	e8 44 21 00 00       	call   f0106b59 <cpunum>$/;"	l
f0104a15	obj/kern/kernel.asm	/^f0104a15:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104a18	obj/kern/kernel.asm	/^f0104a18:	8b 98 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%ebx$/;"	l
f0104a1e	obj/kern/kernel.asm	/^f0104a1e:	e8 36 21 00 00       	call   f0106b59 <cpunum>$/;"	l
f0104a23	obj/kern/kernel.asm	/^f0104a23:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104a26	obj/kern/kernel.asm	/^f0104a26:	8b 80 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%eax$/;"	l
f0104a2c	obj/kern/kernel.asm	/^f0104a2c:	8b 40 64             	mov    0x64(%eax),%eax$/;"	l
f0104a2f	obj/kern/kernel.asm	/^f0104a2f:	89 43 30             	mov    %eax,0x30(%ebx)$/;"	l
f0104a32	obj/kern/kernel.asm	/^f0104a32:	e8 22 21 00 00       	call   f0106b59 <cpunum>$/;"	l
f0104a37	obj/kern/kernel.asm	/^f0104a37:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104a3a	obj/kern/kernel.asm	/^f0104a3a:	8b 80 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%eax$/;"	l
f0104a40	obj/kern/kernel.asm	/^f0104a40:	89 70 3c             	mov    %esi,0x3c(%eax)$/;"	l
f0104a43	obj/kern/kernel.asm	/^f0104a43:	e8 11 21 00 00       	call   f0106b59 <cpunum>$/;"	l
f0104a48	obj/kern/kernel.asm	/^f0104a48:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104a4b	obj/kern/kernel.asm	/^f0104a4b:	8b 80 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%eax$/;"	l
f0104a51	obj/kern/kernel.asm	/^f0104a51:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104a54	obj/kern/kernel.asm	/^f0104a54:	e8 72 f3 ff ff       	call   f0103dcb <env_run>$/;"	l
f0104a59	obj/kern/kernel.asm	/^f0104a59:	8b 7b 30             	mov    0x30(%ebx),%edi$/;"	l
f0104a5c	obj/kern/kernel.asm	/^f0104a5c:	e8 f8 20 00 00       	call   f0106b59 <cpunum>$/;"	l
f0104a61	obj/kern/kernel.asm	/^f0104a61:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f0104a65	obj/kern/kernel.asm	/^f0104a65:	89 74 24 08          	mov    %esi,0x8(%esp)$/;"	l
f0104a69	obj/kern/kernel.asm	/^f0104a69:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104a6c	obj/kern/kernel.asm	/^f0104a6c:	8b 80 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%eax$/;"	l
f0104a72	obj/kern/kernel.asm	/^f0104a72:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0104a75	obj/kern/kernel.asm	/^f0104a75:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104a79	obj/kern/kernel.asm	/^f0104a79:	c7 04 24 40 96 10 f0 	movl   $0xf0109640,(%esp)$/;"	l
f0104a80	obj/kern/kernel.asm	/^f0104a80:	e8 67 f5 ff ff       	call   f0103fec <cprintf>$/;"	l
f0104a85	obj/kern/kernel.asm	/^f0104a85:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0104a88	obj/kern/kernel.asm	/^f0104a88:	e8 e8 fc ff ff       	call   f0104775 <print_trapframe>$/;"	l
f0104a8d	obj/kern/kernel.asm	/^f0104a8d:	e8 c7 20 00 00       	call   f0106b59 <cpunum>$/;"	l
f0104a92	obj/kern/kernel.asm	/^f0104a92:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104a95	obj/kern/kernel.asm	/^f0104a95:	8b 80 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%eax$/;"	l
f0104a9b	obj/kern/kernel.asm	/^f0104a9b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104a9e	obj/kern/kernel.asm	/^f0104a9e:	e8 87 f2 ff ff       	call   f0103d2a <env_destroy>$/;"	l
f0104aa3	obj/kern/kernel.asm	/^f0104aa3:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0104aa6	obj/kern/kernel.asm	/^f0104aa6:	5b                   	pop    %ebx$/;"	l
f0104aa7	obj/kern/kernel.asm	/^f0104aa7:	5e                   	pop    %esi$/;"	l
f0104aa8	obj/kern/kernel.asm	/^f0104aa8:	5f                   	pop    %edi$/;"	l
f0104aa9	obj/kern/kernel.asm	/^f0104aa9:	5d                   	pop    %ebp$/;"	l
f0104aaa	obj/kern/kernel.asm	/^f0104aaa:	c3                   	ret    $/;"	l
f0104aab	obj/kern/kernel.asm	/^f0104aab <trap>:$/;"	l
f0104aab	obj/kern/kernel.asm	/^f0104aab:	55                   	push   %ebp$/;"	l
f0104aac	obj/kern/kernel.asm	/^f0104aac:	89 e5                	mov    %esp,%ebp$/;"	l
f0104aae	obj/kern/kernel.asm	/^f0104aae:	57                   	push   %edi$/;"	l
f0104aaf	obj/kern/kernel.asm	/^f0104aaf:	56                   	push   %esi$/;"	l
f0104ab0	obj/kern/kernel.asm	/^f0104ab0:	83 ec 20             	sub    $0x20,%esp$/;"	l
f0104ab3	obj/kern/kernel.asm	/^f0104ab3:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0104ab6	obj/kern/kernel.asm	/^f0104ab6:	fc                   	cld    $/;"	l
f0104ab7	obj/kern/kernel.asm	/^f0104ab7:	83 3d 8c 9e 2b f0 00 	cmpl   $0x0,0xf02b9e8c$/;"	l
f0104abe	obj/kern/kernel.asm	/^f0104abe:	74 01                	je     f0104ac1 <trap+0x16>$/;"	l
f0104ac0	obj/kern/kernel.asm	/^f0104ac0:	f4                   	hlt    $/;"	l
f0104ac1	obj/kern/kernel.asm	/^f0104ac1:	e8 93 20 00 00       	call   f0106b59 <cpunum>$/;"	l
f0104ac6	obj/kern/kernel.asm	/^f0104ac6:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0104ac9	obj/kern/kernel.asm	/^f0104ac9:	81 c2 20 a0 2b f0    	add    $0xf02ba020,%edx$/;"	l
f0104acf	obj/kern/kernel.asm	/^f0104acf:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0104ad4	obj/kern/kernel.asm	/^f0104ad4:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f0104ad8	obj/kern/kernel.asm	/^f0104ad8:	83 f8 02             	cmp    $0x2,%eax$/;"	l
f0104adb	obj/kern/kernel.asm	/^f0104adb:	75 0c                	jne    f0104ae9 <trap+0x3e>$/;"	l
f0104add	obj/kern/kernel.asm	/^f0104add:	c7 04 24 c0 53 12 f0 	movl   $0xf01253c0,(%esp)$/;"	l
f0104ae4	obj/kern/kernel.asm	/^f0104ae4:	e8 ee 22 00 00       	call   f0106dd7 <spin_lock>$/;"	l
f0104ae9	obj/kern/kernel.asm	/^f0104ae9:	9c                   	pushf  $/;"	l
f0104aea	obj/kern/kernel.asm	/^f0104aea:	58                   	pop    %eax$/;"	l
f0104aeb	obj/kern/kernel.asm	/^f0104aeb:	f6 c4 02             	test   $0x2,%ah$/;"	l
f0104aee	obj/kern/kernel.asm	/^f0104aee:	74 24                	je     f0104b14 <trap+0x69>$/;"	l
f0104af0	obj/kern/kernel.asm	/^f0104af0:	c7 44 24 0c ab 94 10 	movl   $0xf01094ab,0xc(%esp)$/;"	l
f0104af7	obj/kern/kernel.asm	/^f0104af7:	f0 $/;"	l
f0104af8	obj/kern/kernel.asm	/^f0104af8:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f0104aff	obj/kern/kernel.asm	/^f0104aff:	f0 $/;"	l
f0104b00	obj/kern/kernel.asm	/^f0104b00:	c7 44 24 04 57 01 00 	movl   $0x157,0x4(%esp)$/;"	l
f0104b07	obj/kern/kernel.asm	/^f0104b07:	00 $/;"	l
f0104b08	obj/kern/kernel.asm	/^f0104b08:	c7 04 24 9f 94 10 f0 	movl   $0xf010949f,(%esp)$/;"	l
f0104b0f	obj/kern/kernel.asm	/^f0104b0f:	e8 2c b5 ff ff       	call   f0100040 <_panic>$/;"	l
f0104b14	obj/kern/kernel.asm	/^f0104b14:	0f b7 46 34          	movzwl 0x34(%esi),%eax$/;"	l
f0104b18	obj/kern/kernel.asm	/^f0104b18:	83 e0 03             	and    $0x3,%eax$/;"	l
f0104b1b	obj/kern/kernel.asm	/^f0104b1b:	66 83 f8 03          	cmp    $0x3,%ax$/;"	l
f0104b1f	obj/kern/kernel.asm	/^f0104b1f:	0f 85 a7 00 00 00    	jne    f0104bcc <trap+0x121>$/;"	l
f0104b25	obj/kern/kernel.asm	/^f0104b25:	e8 2f 20 00 00       	call   f0106b59 <cpunum>$/;"	l
f0104b2a	obj/kern/kernel.asm	/^f0104b2a:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104b2d	obj/kern/kernel.asm	/^f0104b2d:	83 b8 28 a0 2b f0 00 	cmpl   $0x0,-0xfd45fd8(%eax)$/;"	l
f0104b34	obj/kern/kernel.asm	/^f0104b34:	75 24                	jne    f0104b5a <trap+0xaf>$/;"	l
f0104b36	obj/kern/kernel.asm	/^f0104b36:	c7 44 24 0c 1a 97 10 	movl   $0xf010971a,0xc(%esp)$/;"	l
f0104b3d	obj/kern/kernel.asm	/^f0104b3d:	f0 $/;"	l
f0104b3e	obj/kern/kernel.asm	/^f0104b3e:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f0104b45	obj/kern/kernel.asm	/^f0104b45:	f0 $/;"	l
f0104b46	obj/kern/kernel.asm	/^f0104b46:	c7 44 24 04 5e 01 00 	movl   $0x15e,0x4(%esp)$/;"	l
f0104b4d	obj/kern/kernel.asm	/^f0104b4d:	00 $/;"	l
f0104b4e	obj/kern/kernel.asm	/^f0104b4e:	c7 04 24 9f 94 10 f0 	movl   $0xf010949f,(%esp)$/;"	l
f0104b55	obj/kern/kernel.asm	/^f0104b55:	e8 e6 b4 ff ff       	call   f0100040 <_panic>$/;"	l
f0104b5a	obj/kern/kernel.asm	/^f0104b5a:	c7 04 24 c0 53 12 f0 	movl   $0xf01253c0,(%esp)$/;"	l
f0104b61	obj/kern/kernel.asm	/^f0104b61:	e8 71 22 00 00       	call   f0106dd7 <spin_lock>$/;"	l
f0104b66	obj/kern/kernel.asm	/^f0104b66:	e8 ee 1f 00 00       	call   f0106b59 <cpunum>$/;"	l
f0104b6b	obj/kern/kernel.asm	/^f0104b6b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104b6e	obj/kern/kernel.asm	/^f0104b6e:	8b 80 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%eax$/;"	l
f0104b74	obj/kern/kernel.asm	/^f0104b74:	83 78 54 01          	cmpl   $0x1,0x54(%eax)$/;"	l
f0104b78	obj/kern/kernel.asm	/^f0104b78:	75 2d                	jne    f0104ba7 <trap+0xfc>$/;"	l
f0104b7a	obj/kern/kernel.asm	/^f0104b7a:	e8 da 1f 00 00       	call   f0106b59 <cpunum>$/;"	l
f0104b7f	obj/kern/kernel.asm	/^f0104b7f:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104b82	obj/kern/kernel.asm	/^f0104b82:	8b 80 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%eax$/;"	l
f0104b88	obj/kern/kernel.asm	/^f0104b88:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104b8b	obj/kern/kernel.asm	/^f0104b8b:	e8 cf ef ff ff       	call   f0103b5f <env_free>$/;"	l
f0104b90	obj/kern/kernel.asm	/^f0104b90:	e8 c4 1f 00 00       	call   f0106b59 <cpunum>$/;"	l
f0104b95	obj/kern/kernel.asm	/^f0104b95:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104b98	obj/kern/kernel.asm	/^f0104b98:	c7 80 28 a0 2b f0 00 	movl   $0x0,-0xfd45fd8(%eax)$/;"	l
f0104b9f	obj/kern/kernel.asm	/^f0104b9f:	00 00 00 $/;"	l
f0104ba2	obj/kern/kernel.asm	/^f0104ba2:	e8 54 03 00 00       	call   f0104efb <sched_yield>$/;"	l
f0104ba7	obj/kern/kernel.asm	/^f0104ba7:	e8 ad 1f 00 00       	call   f0106b59 <cpunum>$/;"	l
f0104bac	obj/kern/kernel.asm	/^f0104bac:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104baf	obj/kern/kernel.asm	/^f0104baf:	8b 80 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%eax$/;"	l
f0104bb5	obj/kern/kernel.asm	/^f0104bb5:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f0104bba	obj/kern/kernel.asm	/^f0104bba:	89 c7                	mov    %eax,%edi$/;"	l
f0104bbc	obj/kern/kernel.asm	/^f0104bbc:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0104bbe	obj/kern/kernel.asm	/^f0104bbe:	e8 96 1f 00 00       	call   f0106b59 <cpunum>$/;"	l
f0104bc3	obj/kern/kernel.asm	/^f0104bc3:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104bc6	obj/kern/kernel.asm	/^f0104bc6:	8b b0 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%esi$/;"	l
f0104bcc	obj/kern/kernel.asm	/^f0104bcc:	89 35 60 9a 2b f0    	mov    %esi,0xf02b9a60$/;"	l
f0104bd2	obj/kern/kernel.asm	/^f0104bd2:	8b 46 28             	mov    0x28(%esi),%eax$/;"	l
f0104bd5	obj/kern/kernel.asm	/^f0104bd5:	83 f8 0e             	cmp    $0xe,%eax$/;"	l
f0104bd8	obj/kern/kernel.asm	/^f0104bd8:	74 17                	je     f0104bf1 <trap+0x146>$/;"	l
f0104bda	obj/kern/kernel.asm	/^f0104bda:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f0104bdd	obj/kern/kernel.asm	/^f0104bdd:	74 1f                	je     f0104bfe <trap+0x153>$/;"	l
f0104bdf	obj/kern/kernel.asm	/^f0104bdf:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f0104be2	obj/kern/kernel.asm	/^f0104be2:	75 4f                	jne    f0104c33 <trap+0x188>$/;"	l
f0104be4	obj/kern/kernel.asm	/^f0104be4:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104be7	obj/kern/kernel.asm	/^f0104be7:	e8 4e be ff ff       	call   f0100a3a <monitor>$/;"	l
f0104bec	obj/kern/kernel.asm	/^f0104bec:	e9 e2 00 00 00       	jmp    f0104cd3 <trap+0x228>$/;"	l
f0104bf1	obj/kern/kernel.asm	/^f0104bf1:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104bf4	obj/kern/kernel.asm	/^f0104bf4:	e8 19 fd ff ff       	call   f0104912 <page_fault_handler>$/;"	l
f0104bf9	obj/kern/kernel.asm	/^f0104bf9:	e9 d5 00 00 00       	jmp    f0104cd3 <trap+0x228>$/;"	l
f0104bfe	obj/kern/kernel.asm	/^f0104bfe:	8b 46 04             	mov    0x4(%esi),%eax$/;"	l
f0104c01	obj/kern/kernel.asm	/^f0104c01:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
f0104c05	obj/kern/kernel.asm	/^f0104c05:	8b 06                	mov    (%esi),%eax$/;"	l
f0104c07	obj/kern/kernel.asm	/^f0104c07:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f0104c0b	obj/kern/kernel.asm	/^f0104c0b:	8b 46 10             	mov    0x10(%esi),%eax$/;"	l
f0104c0e	obj/kern/kernel.asm	/^f0104c0e:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0104c12	obj/kern/kernel.asm	/^f0104c12:	8b 46 18             	mov    0x18(%esi),%eax$/;"	l
f0104c15	obj/kern/kernel.asm	/^f0104c15:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0104c19	obj/kern/kernel.asm	/^f0104c19:	8b 46 14             	mov    0x14(%esi),%eax$/;"	l
f0104c1c	obj/kern/kernel.asm	/^f0104c1c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104c20	obj/kern/kernel.asm	/^f0104c20:	8b 46 1c             	mov    0x1c(%esi),%eax$/;"	l
f0104c23	obj/kern/kernel.asm	/^f0104c23:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104c26	obj/kern/kernel.asm	/^f0104c26:	e8 a5 03 00 00       	call   f0104fd0 <syscall>$/;"	l
f0104c2b	obj/kern/kernel.asm	/^f0104c2b:	89 46 1c             	mov    %eax,0x1c(%esi)$/;"	l
f0104c2e	obj/kern/kernel.asm	/^f0104c2e:	e9 a0 00 00 00       	jmp    f0104cd3 <trap+0x228>$/;"	l
f0104c33	obj/kern/kernel.asm	/^f0104c33:	83 f8 27             	cmp    $0x27,%eax$/;"	l
f0104c36	obj/kern/kernel.asm	/^f0104c36:	75 19                	jne    f0104c51 <trap+0x1a6>$/;"	l
f0104c38	obj/kern/kernel.asm	/^f0104c38:	c7 04 24 c4 94 10 f0 	movl   $0xf01094c4,(%esp)$/;"	l
f0104c3f	obj/kern/kernel.asm	/^f0104c3f:	e8 a8 f3 ff ff       	call   f0103fec <cprintf>$/;"	l
f0104c44	obj/kern/kernel.asm	/^f0104c44:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104c47	obj/kern/kernel.asm	/^f0104c47:	e8 29 fb ff ff       	call   f0104775 <print_trapframe>$/;"	l
f0104c4c	obj/kern/kernel.asm	/^f0104c4c:	e9 82 00 00 00       	jmp    f0104cd3 <trap+0x228>$/;"	l
f0104c51	obj/kern/kernel.asm	/^f0104c51:	83 f8 20             	cmp    $0x20,%eax$/;"	l
f0104c54	obj/kern/kernel.asm	/^f0104c54:	75 1f                	jne    f0104c75 <trap+0x1ca>$/;"	l
f0104c56	obj/kern/kernel.asm	/^f0104c56:	e8 4b 20 00 00       	call   f0106ca6 <lapic_eoi>$/;"	l
f0104c5b	obj/kern/kernel.asm	/^f0104c5b:	90                   	nop$/;"	l
f0104c5c	obj/kern/kernel.asm	/^f0104c5c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0104c60	obj/kern/kernel.asm	/^f0104c60:	e8 f4 1e 00 00       	call   f0106b59 <cpunum>$/;"	l
f0104c65	obj/kern/kernel.asm	/^f0104c65:	85 c0                	test   %eax,%eax$/;"	l
f0104c67	obj/kern/kernel.asm	/^f0104c67:	75 05                	jne    f0104c6e <trap+0x1c3>$/;"	l
f0104c69	obj/kern/kernel.asm	/^f0104c69:	e8 52 30 00 00       	call   f0107cc0 <time_tick>$/;"	l
f0104c6e	obj/kern/kernel.asm	/^f0104c6e:	66 90                	xchg   %ax,%ax$/;"	l
f0104c70	obj/kern/kernel.asm	/^f0104c70:	e8 86 02 00 00       	call   f0104efb <sched_yield>$/;"	l
f0104c75	obj/kern/kernel.asm	/^f0104c75:	83 f8 21             	cmp    $0x21,%eax$/;"	l
f0104c78	obj/kern/kernel.asm	/^f0104c78:	75 08                	jne    f0104c82 <trap+0x1d7>$/;"	l
f0104c7a	obj/kern/kernel.asm	/^f0104c7a:	e8 ed b9 ff ff       	call   f010066c <kbd_intr>$/;"	l
f0104c7f	obj/kern/kernel.asm	/^f0104c7f:	90                   	nop$/;"	l
f0104c80	obj/kern/kernel.asm	/^f0104c80:	eb 51                	jmp    f0104cd3 <trap+0x228>$/;"	l
f0104c82	obj/kern/kernel.asm	/^f0104c82:	83 f8 24             	cmp    $0x24,%eax$/;"	l
f0104c85	obj/kern/kernel.asm	/^f0104c85:	75 0b                	jne    f0104c92 <trap+0x1e7>$/;"	l
f0104c87	obj/kern/kernel.asm	/^f0104c87:	e8 c4 b9 ff ff       	call   f0100650 <serial_intr>$/;"	l
f0104c8c	obj/kern/kernel.asm	/^f0104c8c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0104c90	obj/kern/kernel.asm	/^f0104c90:	eb 41                	jmp    f0104cd3 <trap+0x228>$/;"	l
f0104c92	obj/kern/kernel.asm	/^f0104c92:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104c95	obj/kern/kernel.asm	/^f0104c95:	e8 db fa ff ff       	call   f0104775 <print_trapframe>$/;"	l
f0104c9a	obj/kern/kernel.asm	/^f0104c9a:	66 83 7e 34 08       	cmpw   $0x8,0x34(%esi)$/;"	l
f0104c9f	obj/kern/kernel.asm	/^f0104c9f:	75 1c                	jne    f0104cbd <trap+0x212>$/;"	l
f0104ca1	obj/kern/kernel.asm	/^f0104ca1:	c7 44 24 08 e1 94 10 	movl   $0xf01094e1,0x8(%esp)$/;"	l
f0104ca8	obj/kern/kernel.asm	/^f0104ca8:	f0 $/;"	l
f0104ca9	obj/kern/kernel.asm	/^f0104ca9:	c7 44 24 04 3d 01 00 	movl   $0x13d,0x4(%esp)$/;"	l
f0104cb0	obj/kern/kernel.asm	/^f0104cb0:	00 $/;"	l
f0104cb1	obj/kern/kernel.asm	/^f0104cb1:	c7 04 24 9f 94 10 f0 	movl   $0xf010949f,(%esp)$/;"	l
f0104cb8	obj/kern/kernel.asm	/^f0104cb8:	e8 83 b3 ff ff       	call   f0100040 <_panic>$/;"	l
f0104cbd	obj/kern/kernel.asm	/^f0104cbd:	e8 97 1e 00 00       	call   f0106b59 <cpunum>$/;"	l
f0104cc2	obj/kern/kernel.asm	/^f0104cc2:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104cc5	obj/kern/kernel.asm	/^f0104cc5:	8b 80 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%eax$/;"	l
f0104ccb	obj/kern/kernel.asm	/^f0104ccb:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104cce	obj/kern/kernel.asm	/^f0104cce:	e8 57 f0 ff ff       	call   f0103d2a <env_destroy>$/;"	l
f0104cd3	obj/kern/kernel.asm	/^f0104cd3:	e8 81 1e 00 00       	call   f0106b59 <cpunum>$/;"	l
f0104cd8	obj/kern/kernel.asm	/^f0104cd8:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104cdb	obj/kern/kernel.asm	/^f0104cdb:	83 b8 28 a0 2b f0 00 	cmpl   $0x0,-0xfd45fd8(%eax)$/;"	l
f0104ce2	obj/kern/kernel.asm	/^f0104ce2:	74 2a                	je     f0104d0e <trap+0x263>$/;"	l
f0104ce4	obj/kern/kernel.asm	/^f0104ce4:	e8 70 1e 00 00       	call   f0106b59 <cpunum>$/;"	l
f0104ce9	obj/kern/kernel.asm	/^f0104ce9:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104cec	obj/kern/kernel.asm	/^f0104cec:	8b 80 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%eax$/;"	l
f0104cf2	obj/kern/kernel.asm	/^f0104cf2:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f0104cf6	obj/kern/kernel.asm	/^f0104cf6:	75 16                	jne    f0104d0e <trap+0x263>$/;"	l
f0104cf8	obj/kern/kernel.asm	/^f0104cf8:	e8 5c 1e 00 00       	call   f0106b59 <cpunum>$/;"	l
f0104cfd	obj/kern/kernel.asm	/^f0104cfd:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104d00	obj/kern/kernel.asm	/^f0104d00:	8b 80 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%eax$/;"	l
f0104d06	obj/kern/kernel.asm	/^f0104d06:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104d09	obj/kern/kernel.asm	/^f0104d09:	e8 bd f0 ff ff       	call   f0103dcb <env_run>$/;"	l
f0104d0e	obj/kern/kernel.asm	/^f0104d0e:	e8 e8 01 00 00       	call   f0104efb <sched_yield>$/;"	l
f0104d13	obj/kern/kernel.asm	/^f0104d13:	90                   	nop$/;"	l
f0104d14	obj/kern/kernel.asm	/^f0104d14 <handler0>:$/;"	l
f0104d14	obj/kern/kernel.asm	/^f0104d14:	6a 00                	push   $0x0$/;"	l
f0104d16	obj/kern/kernel.asm	/^f0104d16:	6a 00                	push   $0x0$/;"	l
f0104d18	obj/kern/kernel.asm	/^f0104d18:	e9 ef 00 00 00       	jmp    f0104e0c <_alltraps>$/;"	l
f0104d1d	obj/kern/kernel.asm	/^f0104d1d:	90                   	nop$/;"	l
f0104d1e	obj/kern/kernel.asm	/^f0104d1e <handler1>:$/;"	l
f0104d1e	obj/kern/kernel.asm	/^f0104d1e:	6a 00                	push   $0x0$/;"	l
f0104d20	obj/kern/kernel.asm	/^f0104d20:	6a 01                	push   $0x1$/;"	l
f0104d22	obj/kern/kernel.asm	/^f0104d22:	e9 e5 00 00 00       	jmp    f0104e0c <_alltraps>$/;"	l
f0104d27	obj/kern/kernel.asm	/^f0104d27:	90                   	nop$/;"	l
f0104d28	obj/kern/kernel.asm	/^f0104d28 <handler2>:$/;"	l
f0104d28	obj/kern/kernel.asm	/^f0104d28:	6a 00                	push   $0x0$/;"	l
f0104d2a	obj/kern/kernel.asm	/^f0104d2a:	6a 02                	push   $0x2$/;"	l
f0104d2c	obj/kern/kernel.asm	/^f0104d2c:	e9 db 00 00 00       	jmp    f0104e0c <_alltraps>$/;"	l
f0104d31	obj/kern/kernel.asm	/^f0104d31:	90                   	nop$/;"	l
f0104d32	obj/kern/kernel.asm	/^f0104d32 <handler3>:$/;"	l
f0104d32	obj/kern/kernel.asm	/^f0104d32:	6a 00                	push   $0x0$/;"	l
f0104d34	obj/kern/kernel.asm	/^f0104d34:	6a 03                	push   $0x3$/;"	l
f0104d36	obj/kern/kernel.asm	/^f0104d36:	e9 d1 00 00 00       	jmp    f0104e0c <_alltraps>$/;"	l
f0104d3b	obj/kern/kernel.asm	/^f0104d3b:	90                   	nop$/;"	l
f0104d3c	obj/kern/kernel.asm	/^f0104d3c <handler4>:$/;"	l
f0104d3c	obj/kern/kernel.asm	/^f0104d3c:	6a 00                	push   $0x0$/;"	l
f0104d3e	obj/kern/kernel.asm	/^f0104d3e:	6a 04                	push   $0x4$/;"	l
f0104d40	obj/kern/kernel.asm	/^f0104d40:	e9 c7 00 00 00       	jmp    f0104e0c <_alltraps>$/;"	l
f0104d45	obj/kern/kernel.asm	/^f0104d45:	90                   	nop$/;"	l
f0104d46	obj/kern/kernel.asm	/^f0104d46 <handler5>:$/;"	l
f0104d46	obj/kern/kernel.asm	/^f0104d46:	6a 00                	push   $0x0$/;"	l
f0104d48	obj/kern/kernel.asm	/^f0104d48:	6a 05                	push   $0x5$/;"	l
f0104d4a	obj/kern/kernel.asm	/^f0104d4a:	e9 bd 00 00 00       	jmp    f0104e0c <_alltraps>$/;"	l
f0104d4f	obj/kern/kernel.asm	/^f0104d4f:	90                   	nop$/;"	l
f0104d50	obj/kern/kernel.asm	/^f0104d50 <handler6>:$/;"	l
f0104d50	obj/kern/kernel.asm	/^f0104d50:	6a 00                	push   $0x0$/;"	l
f0104d52	obj/kern/kernel.asm	/^f0104d52:	6a 06                	push   $0x6$/;"	l
f0104d54	obj/kern/kernel.asm	/^f0104d54:	e9 b3 00 00 00       	jmp    f0104e0c <_alltraps>$/;"	l
f0104d59	obj/kern/kernel.asm	/^f0104d59:	90                   	nop$/;"	l
f0104d5a	obj/kern/kernel.asm	/^f0104d5a <handler7>:$/;"	l
f0104d5a	obj/kern/kernel.asm	/^f0104d5a:	6a 00                	push   $0x0$/;"	l
f0104d5c	obj/kern/kernel.asm	/^f0104d5c:	6a 07                	push   $0x7$/;"	l
f0104d5e	obj/kern/kernel.asm	/^f0104d5e:	e9 a9 00 00 00       	jmp    f0104e0c <_alltraps>$/;"	l
f0104d63	obj/kern/kernel.asm	/^f0104d63:	90                   	nop$/;"	l
f0104d64	obj/kern/kernel.asm	/^f0104d64 <handler8>:$/;"	l
f0104d64	obj/kern/kernel.asm	/^f0104d64:	6a 08                	push   $0x8$/;"	l
f0104d66	obj/kern/kernel.asm	/^f0104d66:	e9 a1 00 00 00       	jmp    f0104e0c <_alltraps>$/;"	l
f0104d6b	obj/kern/kernel.asm	/^f0104d6b:	90                   	nop$/;"	l
f0104d6c	obj/kern/kernel.asm	/^f0104d6c <handler10>:$/;"	l
f0104d6c	obj/kern/kernel.asm	/^f0104d6c:	6a 0a                	push   $0xa$/;"	l
f0104d6e	obj/kern/kernel.asm	/^f0104d6e:	e9 99 00 00 00       	jmp    f0104e0c <_alltraps>$/;"	l
f0104d73	obj/kern/kernel.asm	/^f0104d73:	90                   	nop$/;"	l
f0104d74	obj/kern/kernel.asm	/^f0104d74 <handler11>:$/;"	l
f0104d74	obj/kern/kernel.asm	/^f0104d74:	6a 0b                	push   $0xb$/;"	l
f0104d76	obj/kern/kernel.asm	/^f0104d76:	e9 91 00 00 00       	jmp    f0104e0c <_alltraps>$/;"	l
f0104d7b	obj/kern/kernel.asm	/^f0104d7b:	90                   	nop$/;"	l
f0104d7c	obj/kern/kernel.asm	/^f0104d7c <handler12>:$/;"	l
f0104d7c	obj/kern/kernel.asm	/^f0104d7c:	6a 0c                	push   $0xc$/;"	l
f0104d7e	obj/kern/kernel.asm	/^f0104d7e:	e9 89 00 00 00       	jmp    f0104e0c <_alltraps>$/;"	l
f0104d83	obj/kern/kernel.asm	/^f0104d83:	90                   	nop$/;"	l
f0104d84	obj/kern/kernel.asm	/^f0104d84 <handler13>:$/;"	l
f0104d84	obj/kern/kernel.asm	/^f0104d84:	6a 0d                	push   $0xd$/;"	l
f0104d86	obj/kern/kernel.asm	/^f0104d86:	e9 81 00 00 00       	jmp    f0104e0c <_alltraps>$/;"	l
f0104d8b	obj/kern/kernel.asm	/^f0104d8b:	90                   	nop$/;"	l
f0104d8c	obj/kern/kernel.asm	/^f0104d8c <handler14>:$/;"	l
f0104d8c	obj/kern/kernel.asm	/^f0104d8c:	6a 0e                	push   $0xe$/;"	l
f0104d8e	obj/kern/kernel.asm	/^f0104d8e:	eb 7c                	jmp    f0104e0c <_alltraps>$/;"	l
f0104d90	obj/kern/kernel.asm	/^f0104d90 <handler16>:$/;"	l
f0104d90	obj/kern/kernel.asm	/^f0104d90:	6a 00                	push   $0x0$/;"	l
f0104d92	obj/kern/kernel.asm	/^f0104d92:	6a 10                	push   $0x10$/;"	l
f0104d94	obj/kern/kernel.asm	/^f0104d94:	eb 76                	jmp    f0104e0c <_alltraps>$/;"	l
f0104d96	obj/kern/kernel.asm	/^f0104d96 <handler17>:$/;"	l
f0104d96	obj/kern/kernel.asm	/^f0104d96:	6a 11                	push   $0x11$/;"	l
f0104d98	obj/kern/kernel.asm	/^f0104d98:	eb 72                	jmp    f0104e0c <_alltraps>$/;"	l
f0104d9a	obj/kern/kernel.asm	/^f0104d9a <handler18>:$/;"	l
f0104d9a	obj/kern/kernel.asm	/^f0104d9a:	6a 00                	push   $0x0$/;"	l
f0104d9c	obj/kern/kernel.asm	/^f0104d9c:	6a 12                	push   $0x12$/;"	l
f0104d9e	obj/kern/kernel.asm	/^f0104d9e:	eb 6c                	jmp    f0104e0c <_alltraps>$/;"	l
f0104da0	obj/kern/kernel.asm	/^f0104da0 <handler19>:$/;"	l
f0104da0	obj/kern/kernel.asm	/^f0104da0:	6a 00                	push   $0x0$/;"	l
f0104da2	obj/kern/kernel.asm	/^f0104da2:	6a 13                	push   $0x13$/;"	l
f0104da4	obj/kern/kernel.asm	/^f0104da4:	eb 66                	jmp    f0104e0c <_alltraps>$/;"	l
f0104da6	obj/kern/kernel.asm	/^f0104da6 <handler48>:$/;"	l
f0104da6	obj/kern/kernel.asm	/^f0104da6:	6a 00                	push   $0x0$/;"	l
f0104da8	obj/kern/kernel.asm	/^f0104da8:	6a 30                	push   $0x30$/;"	l
f0104daa	obj/kern/kernel.asm	/^f0104daa:	eb 60                	jmp    f0104e0c <_alltraps>$/;"	l
f0104dac	obj/kern/kernel.asm	/^f0104dac <irq_handler0>:$/;"	l
f0104dac	obj/kern/kernel.asm	/^f0104dac:	6a 00                	push   $0x0$/;"	l
f0104dae	obj/kern/kernel.asm	/^f0104dae:	6a 20                	push   $0x20$/;"	l
f0104db0	obj/kern/kernel.asm	/^f0104db0:	eb 5a                	jmp    f0104e0c <_alltraps>$/;"	l
f0104db2	obj/kern/kernel.asm	/^f0104db2 <irq_handler1>:$/;"	l
f0104db2	obj/kern/kernel.asm	/^f0104db2:	6a 00                	push   $0x0$/;"	l
f0104db4	obj/kern/kernel.asm	/^f0104db4:	6a 21                	push   $0x21$/;"	l
f0104db6	obj/kern/kernel.asm	/^f0104db6:	eb 54                	jmp    f0104e0c <_alltraps>$/;"	l
f0104db8	obj/kern/kernel.asm	/^f0104db8 <irq_handler2>:$/;"	l
f0104db8	obj/kern/kernel.asm	/^f0104db8:	6a 00                	push   $0x0$/;"	l
f0104dba	obj/kern/kernel.asm	/^f0104dba:	6a 22                	push   $0x22$/;"	l
f0104dbc	obj/kern/kernel.asm	/^f0104dbc:	eb 4e                	jmp    f0104e0c <_alltraps>$/;"	l
f0104dbe	obj/kern/kernel.asm	/^f0104dbe <irq_handler3>:$/;"	l
f0104dbe	obj/kern/kernel.asm	/^f0104dbe:	6a 00                	push   $0x0$/;"	l
f0104dc0	obj/kern/kernel.asm	/^f0104dc0:	6a 23                	push   $0x23$/;"	l
f0104dc2	obj/kern/kernel.asm	/^f0104dc2:	eb 48                	jmp    f0104e0c <_alltraps>$/;"	l
f0104dc4	obj/kern/kernel.asm	/^f0104dc4 <irq_handler4>:$/;"	l
f0104dc4	obj/kern/kernel.asm	/^f0104dc4:	6a 00                	push   $0x0$/;"	l
f0104dc6	obj/kern/kernel.asm	/^f0104dc6:	6a 24                	push   $0x24$/;"	l
f0104dc8	obj/kern/kernel.asm	/^f0104dc8:	eb 42                	jmp    f0104e0c <_alltraps>$/;"	l
f0104dca	obj/kern/kernel.asm	/^f0104dca <irq_handler5>:$/;"	l
f0104dca	obj/kern/kernel.asm	/^f0104dca:	6a 00                	push   $0x0$/;"	l
f0104dcc	obj/kern/kernel.asm	/^f0104dcc:	6a 25                	push   $0x25$/;"	l
f0104dce	obj/kern/kernel.asm	/^f0104dce:	eb 3c                	jmp    f0104e0c <_alltraps>$/;"	l
f0104dd0	obj/kern/kernel.asm	/^f0104dd0 <irq_handler6>:$/;"	l
f0104dd0	obj/kern/kernel.asm	/^f0104dd0:	6a 00                	push   $0x0$/;"	l
f0104dd2	obj/kern/kernel.asm	/^f0104dd2:	6a 26                	push   $0x26$/;"	l
f0104dd4	obj/kern/kernel.asm	/^f0104dd4:	eb 36                	jmp    f0104e0c <_alltraps>$/;"	l
f0104dd6	obj/kern/kernel.asm	/^f0104dd6 <irq_handler7>:$/;"	l
f0104dd6	obj/kern/kernel.asm	/^f0104dd6:	6a 00                	push   $0x0$/;"	l
f0104dd8	obj/kern/kernel.asm	/^f0104dd8:	6a 27                	push   $0x27$/;"	l
f0104dda	obj/kern/kernel.asm	/^f0104dda:	eb 30                	jmp    f0104e0c <_alltraps>$/;"	l
f0104ddc	obj/kern/kernel.asm	/^f0104ddc <irq_handler8>:$/;"	l
f0104ddc	obj/kern/kernel.asm	/^f0104ddc:	6a 00                	push   $0x0$/;"	l
f0104dde	obj/kern/kernel.asm	/^f0104dde:	6a 28                	push   $0x28$/;"	l
f0104de0	obj/kern/kernel.asm	/^f0104de0:	eb 2a                	jmp    f0104e0c <_alltraps>$/;"	l
f0104de2	obj/kern/kernel.asm	/^f0104de2 <irq_handler9>:$/;"	l
f0104de2	obj/kern/kernel.asm	/^f0104de2:	6a 00                	push   $0x0$/;"	l
f0104de4	obj/kern/kernel.asm	/^f0104de4:	6a 29                	push   $0x29$/;"	l
f0104de6	obj/kern/kernel.asm	/^f0104de6:	eb 24                	jmp    f0104e0c <_alltraps>$/;"	l
f0104de8	obj/kern/kernel.asm	/^f0104de8 <irq_handler10>:$/;"	l
f0104de8	obj/kern/kernel.asm	/^f0104de8:	6a 00                	push   $0x0$/;"	l
f0104dea	obj/kern/kernel.asm	/^f0104dea:	6a 2a                	push   $0x2a$/;"	l
f0104dec	obj/kern/kernel.asm	/^f0104dec:	eb 1e                	jmp    f0104e0c <_alltraps>$/;"	l
f0104dee	obj/kern/kernel.asm	/^f0104dee <irq_handler11>:$/;"	l
f0104dee	obj/kern/kernel.asm	/^f0104dee:	6a 00                	push   $0x0$/;"	l
f0104df0	obj/kern/kernel.asm	/^f0104df0:	6a 2b                	push   $0x2b$/;"	l
f0104df2	obj/kern/kernel.asm	/^f0104df2:	eb 18                	jmp    f0104e0c <_alltraps>$/;"	l
f0104df4	obj/kern/kernel.asm	/^f0104df4 <irq_handler12>:$/;"	l
f0104df4	obj/kern/kernel.asm	/^f0104df4:	6a 00                	push   $0x0$/;"	l
f0104df6	obj/kern/kernel.asm	/^f0104df6:	6a 2c                	push   $0x2c$/;"	l
f0104df8	obj/kern/kernel.asm	/^f0104df8:	eb 12                	jmp    f0104e0c <_alltraps>$/;"	l
f0104dfa	obj/kern/kernel.asm	/^f0104dfa <irq_handler13>:$/;"	l
f0104dfa	obj/kern/kernel.asm	/^f0104dfa:	6a 00                	push   $0x0$/;"	l
f0104dfc	obj/kern/kernel.asm	/^f0104dfc:	6a 2d                	push   $0x2d$/;"	l
f0104dfe	obj/kern/kernel.asm	/^f0104dfe:	eb 0c                	jmp    f0104e0c <_alltraps>$/;"	l
f0104e00	obj/kern/kernel.asm	/^f0104e00 <irq_handler14>:$/;"	l
f0104e00	obj/kern/kernel.asm	/^f0104e00:	6a 00                	push   $0x0$/;"	l
f0104e02	obj/kern/kernel.asm	/^f0104e02:	6a 2e                	push   $0x2e$/;"	l
f0104e04	obj/kern/kernel.asm	/^f0104e04:	eb 06                	jmp    f0104e0c <_alltraps>$/;"	l
f0104e06	obj/kern/kernel.asm	/^f0104e06 <irq_handler15>:$/;"	l
f0104e06	obj/kern/kernel.asm	/^f0104e06:	6a 00                	push   $0x0$/;"	l
f0104e08	obj/kern/kernel.asm	/^f0104e08:	6a 2f                	push   $0x2f$/;"	l
f0104e0a	obj/kern/kernel.asm	/^f0104e0a:	eb 00                	jmp    f0104e0c <_alltraps>$/;"	l
f0104e0c	obj/kern/kernel.asm	/^f0104e0c <_alltraps>:$/;"	l
f0104e0c	obj/kern/kernel.asm	/^f0104e0c:	66 6a 00             	pushw  $0x0$/;"	l
f0104e0f	obj/kern/kernel.asm	/^f0104e0f:	66 1e                	pushw  %ds$/;"	l
f0104e11	obj/kern/kernel.asm	/^f0104e11:	66 6a 00             	pushw  $0x0$/;"	l
f0104e14	obj/kern/kernel.asm	/^f0104e14:	66 06                	pushw  %es$/;"	l
f0104e16	obj/kern/kernel.asm	/^f0104e16:	60                   	pusha  $/;"	l
f0104e17	obj/kern/kernel.asm	/^f0104e17:	66 b8 10 00          	mov    $0x10,%ax$/;"	l
f0104e1b	obj/kern/kernel.asm	/^f0104e1b:	8e d8                	mov    %eax,%ds$/;"	l
f0104e1d	obj/kern/kernel.asm	/^f0104e1d:	8e c0                	mov    %eax,%es$/;"	l
f0104e1f	obj/kern/kernel.asm	/^f0104e1f:	54                   	push   %esp$/;"	l
f0104e20	obj/kern/kernel.asm	/^f0104e20:	e8 86 fc ff ff       	call   f0104aab <trap>$/;"	l
f0104e25	obj/kern/kernel.asm	/^f0104e25 <sched_halt>:$/;"	l
f0104e25	obj/kern/kernel.asm	/^f0104e25:	55                   	push   %ebp$/;"	l
f0104e26	obj/kern/kernel.asm	/^f0104e26:	89 e5                	mov    %esp,%ebp$/;"	l
f0104e28	obj/kern/kernel.asm	/^f0104e28:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0104e2b	obj/kern/kernel.asm	/^f0104e2b:	8b 15 48 92 2b f0    	mov    0xf02b9248,%edx$/;"	l
f0104e31	obj/kern/kernel.asm	/^f0104e31:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104e36	obj/kern/kernel.asm	/^f0104e36:	8b 4a 54             	mov    0x54(%edx),%ecx$/;"	l
f0104e39	obj/kern/kernel.asm	/^f0104e39:	83 e9 01             	sub    $0x1,%ecx$/;"	l
f0104e3c	obj/kern/kernel.asm	/^f0104e3c:	83 f9 02             	cmp    $0x2,%ecx$/;"	l
f0104e3f	obj/kern/kernel.asm	/^f0104e3f:	76 0f                	jbe    f0104e50 <sched_halt+0x2b>$/;"	l
f0104e41	obj/kern/kernel.asm	/^f0104e41:	83 c0 01             	add    $0x1,%eax$/;"	l
f0104e44	obj/kern/kernel.asm	/^f0104e44:	83 c2 7c             	add    $0x7c,%edx$/;"	l
f0104e47	obj/kern/kernel.asm	/^f0104e47:	3d 00 04 00 00       	cmp    $0x400,%eax$/;"	l
f0104e4c	obj/kern/kernel.asm	/^f0104e4c:	75 e8                	jne    f0104e36 <sched_halt+0x11>$/;"	l
f0104e4e	obj/kern/kernel.asm	/^f0104e4e:	eb 07                	jmp    f0104e57 <sched_halt+0x32>$/;"	l
f0104e50	obj/kern/kernel.asm	/^f0104e50:	3d 00 04 00 00       	cmp    $0x400,%eax$/;"	l
f0104e55	obj/kern/kernel.asm	/^f0104e55:	75 1a                	jne    f0104e71 <sched_halt+0x4c>$/;"	l
f0104e57	obj/kern/kernel.asm	/^f0104e57:	c7 04 24 d0 96 10 f0 	movl   $0xf01096d0,(%esp)$/;"	l
f0104e5e	obj/kern/kernel.asm	/^f0104e5e:	e8 89 f1 ff ff       	call   f0103fec <cprintf>$/;"	l
f0104e63	obj/kern/kernel.asm	/^f0104e63:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0104e6a	obj/kern/kernel.asm	/^f0104e6a:	e8 cb bb ff ff       	call   f0100a3a <monitor>$/;"	l
f0104e6f	obj/kern/kernel.asm	/^f0104e6f:	eb f2                	jmp    f0104e63 <sched_halt+0x3e>$/;"	l
f0104e71	obj/kern/kernel.asm	/^f0104e71:	e8 e3 1c 00 00       	call   f0106b59 <cpunum>$/;"	l
f0104e76	obj/kern/kernel.asm	/^f0104e76:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104e79	obj/kern/kernel.asm	/^f0104e79:	c7 80 28 a0 2b f0 00 	movl   $0x0,-0xfd45fd8(%eax)$/;"	l
f0104e80	obj/kern/kernel.asm	/^f0104e80:	00 00 00 $/;"	l
f0104e83	obj/kern/kernel.asm	/^f0104e83:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f0104e88	obj/kern/kernel.asm	/^f0104e88:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0104e8d	obj/kern/kernel.asm	/^f0104e8d:	77 20                	ja     f0104eaf <sched_halt+0x8a>$/;"	l
f0104e8f	obj/kern/kernel.asm	/^f0104e8f:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0104e93	obj/kern/kernel.asm	/^f0104e93:	c7 44 24 08 e8 7f 10 	movl   $0xf0107fe8,0x8(%esp)$/;"	l
f0104e9a	obj/kern/kernel.asm	/^f0104e9a:	f0 $/;"	l
f0104e9b	obj/kern/kernel.asm	/^f0104e9b:	c7 44 24 04 4b 00 00 	movl   $0x4b,0x4(%esp)$/;"	l
f0104ea2	obj/kern/kernel.asm	/^f0104ea2:	00 $/;"	l
f0104ea3	obj/kern/kernel.asm	/^f0104ea3:	c7 04 24 f9 96 10 f0 	movl   $0xf01096f9,(%esp)$/;"	l
f0104eaa	obj/kern/kernel.asm	/^f0104eaa:	e8 91 b1 ff ff       	call   f0100040 <_panic>$/;"	l
f0104eaf	obj/kern/kernel.asm	/^f0104eaf:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0104eb4	obj/kern/kernel.asm	/^f0104eb4:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0104eb7	obj/kern/kernel.asm	/^f0104eb7:	e8 9d 1c 00 00       	call   f0106b59 <cpunum>$/;"	l
f0104ebc	obj/kern/kernel.asm	/^f0104ebc:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0104ebf	obj/kern/kernel.asm	/^f0104ebf:	81 c2 20 a0 2b f0    	add    $0xf02ba020,%edx$/;"	l
f0104ec5	obj/kern/kernel.asm	/^f0104ec5:	b8 02 00 00 00       	mov    $0x2,%eax$/;"	l
f0104eca	obj/kern/kernel.asm	/^f0104eca:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f0104ece	obj/kern/kernel.asm	/^f0104ece:	c7 04 24 c0 53 12 f0 	movl   $0xf01253c0,(%esp)$/;"	l
f0104ed5	obj/kern/kernel.asm	/^f0104ed5:	e8 a9 1f 00 00       	call   f0106e83 <spin_unlock>$/;"	l
f0104eda	obj/kern/kernel.asm	/^f0104eda:	f3 90                	pause  $/;"	l
f0104edc	obj/kern/kernel.asm	/^f0104edc:	e8 78 1c 00 00       	call   f0106b59 <cpunum>$/;"	l
f0104ee1	obj/kern/kernel.asm	/^f0104ee1:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104ee4	obj/kern/kernel.asm	/^f0104ee4:	8b 80 30 a0 2b f0    	mov    -0xfd45fd0(%eax),%eax$/;"	l
f0104eea	obj/kern/kernel.asm	/^f0104eea:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0104eef	obj/kern/kernel.asm	/^f0104eef:	89 c4                	mov    %eax,%esp$/;"	l
f0104ef1	obj/kern/kernel.asm	/^f0104ef1:	6a 00                	push   $0x0$/;"	l
f0104ef3	obj/kern/kernel.asm	/^f0104ef3:	6a 00                	push   $0x0$/;"	l
f0104ef5	obj/kern/kernel.asm	/^f0104ef5:	fb                   	sti    $/;"	l
f0104ef6	obj/kern/kernel.asm	/^f0104ef6:	f4                   	hlt    $/;"	l
f0104ef7	obj/kern/kernel.asm	/^f0104ef7:	eb fd                	jmp    f0104ef6 <sched_halt+0xd1>$/;"	l
f0104ef9	obj/kern/kernel.asm	/^f0104ef9:	c9                   	leave  $/;"	l
f0104efa	obj/kern/kernel.asm	/^f0104efa:	c3                   	ret    $/;"	l
f0104efb	obj/kern/kernel.asm	/^f0104efb <sched_yield>:$/;"	l
f0104efb	obj/kern/kernel.asm	/^f0104efb:	55                   	push   %ebp$/;"	l
f0104efc	obj/kern/kernel.asm	/^f0104efc:	89 e5                	mov    %esp,%ebp$/;"	l
f0104efe	obj/kern/kernel.asm	/^f0104efe:	56                   	push   %esi$/;"	l
f0104eff	obj/kern/kernel.asm	/^f0104eff:	53                   	push   %ebx$/;"	l
f0104f00	obj/kern/kernel.asm	/^f0104f00:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0104f03	obj/kern/kernel.asm	/^f0104f03:	e8 51 1c 00 00       	call   f0106b59 <cpunum>$/;"	l
f0104f08	obj/kern/kernel.asm	/^f0104f08:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104f0b	obj/kern/kernel.asm	/^f0104f0b:	8b 98 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%ebx$/;"	l
f0104f11	obj/kern/kernel.asm	/^f0104f11:	e8 43 1c 00 00       	call   f0106b59 <cpunum>$/;"	l
f0104f16	obj/kern/kernel.asm	/^f0104f16:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104f19	obj/kern/kernel.asm	/^f0104f19:	8b b0 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%esi$/;"	l
f0104f1f	obj/kern/kernel.asm	/^f0104f1f:	e8 35 1c 00 00       	call   f0106b59 <cpunum>$/;"	l
f0104f24	obj/kern/kernel.asm	/^f0104f24:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104f27	obj/kern/kernel.asm	/^f0104f27:	3b b0 28 a0 2b f0    	cmp    -0xfd45fd8(%eax),%esi$/;"	l
f0104f2d	obj/kern/kernel.asm	/^f0104f2d:	74 24                	je     f0104f53 <sched_yield+0x58>$/;"	l
f0104f2f	obj/kern/kernel.asm	/^f0104f2f:	c7 44 24 0c 06 97 10 	movl   $0xf0109706,0xc(%esp)$/;"	l
f0104f36	obj/kern/kernel.asm	/^f0104f36:	f0 $/;"	l
f0104f37	obj/kern/kernel.asm	/^f0104f37:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f0104f3e	obj/kern/kernel.asm	/^f0104f3e:	f0 $/;"	l
f0104f3f	obj/kern/kernel.asm	/^f0104f3f:	c7 44 24 04 21 00 00 	movl   $0x21,0x4(%esp)$/;"	l
f0104f46	obj/kern/kernel.asm	/^f0104f46:	00 $/;"	l
f0104f47	obj/kern/kernel.asm	/^f0104f47:	c7 04 24 f9 96 10 f0 	movl   $0xf01096f9,(%esp)$/;"	l
f0104f4e	obj/kern/kernel.asm	/^f0104f4e:	e8 ed b0 ff ff       	call   f0100040 <_panic>$/;"	l
f0104f53	obj/kern/kernel.asm	/^f0104f53:	85 db                	test   %ebx,%ebx$/;"	l
f0104f55	obj/kern/kernel.asm	/^f0104f55:	0f 44 1d 48 92 2b f0 	cmove  0xf02b9248,%ebx$/;"	l
f0104f5c	obj/kern/kernel.asm	/^f0104f5c:	8b 15 48 92 2b f0    	mov    0xf02b9248,%edx$/;"	l
f0104f62	obj/kern/kernel.asm	/^f0104f62:	8d 8a 00 f0 01 00    	lea    0x1f000(%edx),%ecx$/;"	l
f0104f68	obj/kern/kernel.asm	/^f0104f68:	b8 00 04 00 00       	mov    $0x400,%eax$/;"	l
f0104f6d	obj/kern/kernel.asm	/^f0104f6d:	39 d9                	cmp    %ebx,%ecx$/;"	l
f0104f6f	obj/kern/kernel.asm	/^f0104f6f:	0f 46 da             	cmovbe %edx,%ebx$/;"	l
f0104f72	obj/kern/kernel.asm	/^f0104f72:	83 7b 54 02          	cmpl   $0x2,0x54(%ebx)$/;"	l
f0104f76	obj/kern/kernel.asm	/^f0104f76:	75 08                	jne    f0104f80 <sched_yield+0x85>$/;"	l
f0104f78	obj/kern/kernel.asm	/^f0104f78:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0104f7b	obj/kern/kernel.asm	/^f0104f7b:	e8 4b ee ff ff       	call   f0103dcb <env_run>$/;"	l
f0104f80	obj/kern/kernel.asm	/^f0104f80:	83 c3 7c             	add    $0x7c,%ebx$/;"	l
f0104f83	obj/kern/kernel.asm	/^f0104f83:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0104f86	obj/kern/kernel.asm	/^f0104f86:	75 e5                	jne    f0104f6d <sched_yield+0x72>$/;"	l
f0104f88	obj/kern/kernel.asm	/^f0104f88:	e8 cc 1b 00 00       	call   f0106b59 <cpunum>$/;"	l
f0104f8d	obj/kern/kernel.asm	/^f0104f8d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104f90	obj/kern/kernel.asm	/^f0104f90:	83 b8 28 a0 2b f0 00 	cmpl   $0x0,-0xfd45fd8(%eax)$/;"	l
f0104f97	obj/kern/kernel.asm	/^f0104f97:	74 2a                	je     f0104fc3 <sched_yield+0xc8>$/;"	l
f0104f99	obj/kern/kernel.asm	/^f0104f99:	e8 bb 1b 00 00       	call   f0106b59 <cpunum>$/;"	l
f0104f9e	obj/kern/kernel.asm	/^f0104f9e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104fa1	obj/kern/kernel.asm	/^f0104fa1:	8b 80 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%eax$/;"	l
f0104fa7	obj/kern/kernel.asm	/^f0104fa7:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f0104fab	obj/kern/kernel.asm	/^f0104fab:	75 16                	jne    f0104fc3 <sched_yield+0xc8>$/;"	l
f0104fad	obj/kern/kernel.asm	/^f0104fad:	e8 a7 1b 00 00       	call   f0106b59 <cpunum>$/;"	l
f0104fb2	obj/kern/kernel.asm	/^f0104fb2:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104fb5	obj/kern/kernel.asm	/^f0104fb5:	8b 80 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%eax$/;"	l
f0104fbb	obj/kern/kernel.asm	/^f0104fbb:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104fbe	obj/kern/kernel.asm	/^f0104fbe:	e8 08 ee ff ff       	call   f0103dcb <env_run>$/;"	l
f0104fc3	obj/kern/kernel.asm	/^f0104fc3:	e8 5d fe ff ff       	call   f0104e25 <sched_halt>$/;"	l
f0104fc8	obj/kern/kernel.asm	/^f0104fc8:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104fcb	obj/kern/kernel.asm	/^f0104fcb:	5b                   	pop    %ebx$/;"	l
f0104fcc	obj/kern/kernel.asm	/^f0104fcc:	5e                   	pop    %esi$/;"	l
f0104fcd	obj/kern/kernel.asm	/^f0104fcd:	5d                   	pop    %ebp$/;"	l
f0104fce	obj/kern/kernel.asm	/^f0104fce:	c3                   	ret    $/;"	l
f0104fcf	obj/kern/kernel.asm	/^f0104fcf:	90                   	nop$/;"	l
f0104fd0	obj/kern/kernel.asm	/^f0104fd0 <syscall>:$/;"	l
f0104fd0	obj/kern/kernel.asm	/^f0104fd0:	55                   	push   %ebp$/;"	l
f0104fd1	obj/kern/kernel.asm	/^f0104fd1:	89 e5                	mov    %esp,%ebp$/;"	l
f0104fd3	obj/kern/kernel.asm	/^f0104fd3:	57                   	push   %edi$/;"	l
f0104fd4	obj/kern/kernel.asm	/^f0104fd4:	56                   	push   %esi$/;"	l
f0104fd5	obj/kern/kernel.asm	/^f0104fd5:	53                   	push   %ebx$/;"	l
f0104fd6	obj/kern/kernel.asm	/^f0104fd6:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0104fd9	obj/kern/kernel.asm	/^f0104fd9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104fdc	obj/kern/kernel.asm	/^f0104fdc:	83 f8 10             	cmp    $0x10,%eax$/;"	l
f0104fdf	obj/kern/kernel.asm	/^f0104fdf:	0f 87 a7 07 00 00    	ja     f010578c <syscall+0x7bc>$/;"	l
f0104fe5	obj/kern/kernel.asm	/^f0104fe5:	ff 24 85 28 97 10 f0 	jmp    *-0xfef68d8(,%eax,4)$/;"	l
f0104fec	obj/kern/kernel.asm	/^f0104fec:	e8 68 1b 00 00       	call   f0106b59 <cpunum>$/;"	l
f0104ff1	obj/kern/kernel.asm	/^f0104ff1:	c7 44 24 0c 04 00 00 	movl   $0x4,0xc(%esp)$/;"	l
f0104ff8	obj/kern/kernel.asm	/^f0104ff8:	00 $/;"	l
f0104ff9	obj/kern/kernel.asm	/^f0104ff9:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0104ffc	obj/kern/kernel.asm	/^f0104ffc:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0105000	obj/kern/kernel.asm	/^f0105000:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0105003	obj/kern/kernel.asm	/^f0105003:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105007	obj/kern/kernel.asm	/^f0105007:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010500a	obj/kern/kernel.asm	/^f010500a:	8b 80 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%eax$/;"	l
f0105010	obj/kern/kernel.asm	/^f0105010:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105013	obj/kern/kernel.asm	/^f0105013:	e8 2c e6 ff ff       	call   f0103644 <user_mem_assert>$/;"	l
f0105018	obj/kern/kernel.asm	/^f0105018:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010501b	obj/kern/kernel.asm	/^f010501b:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010501f	obj/kern/kernel.asm	/^f010501f:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0105022	obj/kern/kernel.asm	/^f0105022:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105026	obj/kern/kernel.asm	/^f0105026:	c7 04 24 21 97 10 f0 	movl   $0xf0109721,(%esp)$/;"	l
f010502d	obj/kern/kernel.asm	/^f010502d:	e8 ba ef ff ff       	call   f0103fec <cprintf>$/;"	l
f0105032	obj/kern/kernel.asm	/^f0105032:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105037	obj/kern/kernel.asm	/^f0105037:	e9 ba 07 00 00       	jmp    f01057f6 <syscall+0x826>$/;"	l
f010503c	obj/kern/kernel.asm	/^f010503c:	e8 3d b6 ff ff       	call   f010067e <cons_getc>$/;"	l
f0105041	obj/kern/kernel.asm	/^f0105041:	e9 b0 07 00 00       	jmp    f01057f6 <syscall+0x826>$/;"	l
f0105046	obj/kern/kernel.asm	/^f0105046:	e8 0e 1b 00 00       	call   f0106b59 <cpunum>$/;"	l
f010504b	obj/kern/kernel.asm	/^f010504b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010504e	obj/kern/kernel.asm	/^f010504e:	8b 80 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%eax$/;"	l
f0105054	obj/kern/kernel.asm	/^f0105054:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0105057	obj/kern/kernel.asm	/^f0105057:	e9 9a 07 00 00       	jmp    f01057f6 <syscall+0x826>$/;"	l
f010505c	obj/kern/kernel.asm	/^f010505c:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0105063	obj/kern/kernel.asm	/^f0105063:	00 $/;"	l
f0105064	obj/kern/kernel.asm	/^f0105064:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0105067	obj/kern/kernel.asm	/^f0105067:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010506b	obj/kern/kernel.asm	/^f010506b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010506e	obj/kern/kernel.asm	/^f010506e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105071	obj/kern/kernel.asm	/^f0105071:	e8 cd e6 ff ff       	call   f0103743 <envid2env>$/;"	l
f0105076	obj/kern/kernel.asm	/^f0105076:	89 c2                	mov    %eax,%edx$/;"	l
f0105078	obj/kern/kernel.asm	/^f0105078:	85 c0                	test   %eax,%eax$/;"	l
f010507a	obj/kern/kernel.asm	/^f010507a:	78 10                	js     f010508c <syscall+0xbc>$/;"	l
f010507c	obj/kern/kernel.asm	/^f010507c:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010507f	obj/kern/kernel.asm	/^f010507f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105082	obj/kern/kernel.asm	/^f0105082:	e8 a3 ec ff ff       	call   f0103d2a <env_destroy>$/;"	l
f0105087	obj/kern/kernel.asm	/^f0105087:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010508c	obj/kern/kernel.asm	/^f010508c:	89 d0                	mov    %edx,%eax$/;"	l
f010508e	obj/kern/kernel.asm	/^f010508e:	e9 63 07 00 00       	jmp    f01057f6 <syscall+0x826>$/;"	l
f0105093	obj/kern/kernel.asm	/^f0105093:	e8 63 fe ff ff       	call   f0104efb <sched_yield>$/;"	l
f0105098	obj/kern/kernel.asm	/^f0105098:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f010509f	obj/kern/kernel.asm	/^f010509f:	e8 b5 1a 00 00       	call   f0106b59 <cpunum>$/;"	l
f01050a4	obj/kern/kernel.asm	/^f01050a4:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01050a7	obj/kern/kernel.asm	/^f01050a7:	8b 80 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%eax$/;"	l
f01050ad	obj/kern/kernel.asm	/^f01050ad:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f01050b0	obj/kern/kernel.asm	/^f01050b0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01050b4	obj/kern/kernel.asm	/^f01050b4:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01050b7	obj/kern/kernel.asm	/^f01050b7:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01050ba	obj/kern/kernel.asm	/^f01050ba:	e8 95 e7 ff ff       	call   f0103854 <env_alloc>$/;"	l
f01050bf	obj/kern/kernel.asm	/^f01050bf:	89 c2                	mov    %eax,%edx$/;"	l
f01050c1	obj/kern/kernel.asm	/^f01050c1:	85 c0                	test   %eax,%eax$/;"	l
f01050c3	obj/kern/kernel.asm	/^f01050c3:	78 2e                	js     f01050f3 <syscall+0x123>$/;"	l
f01050c5	obj/kern/kernel.asm	/^f01050c5:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f01050c8	obj/kern/kernel.asm	/^f01050c8:	c7 43 54 04 00 00 00 	movl   $0x4,0x54(%ebx)$/;"	l
f01050cf	obj/kern/kernel.asm	/^f01050cf:	e8 85 1a 00 00       	call   f0106b59 <cpunum>$/;"	l
f01050d4	obj/kern/kernel.asm	/^f01050d4:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01050d7	obj/kern/kernel.asm	/^f01050d7:	8b b0 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%esi$/;"	l
f01050dd	obj/kern/kernel.asm	/^f01050dd:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f01050e2	obj/kern/kernel.asm	/^f01050e2:	89 df                	mov    %ebx,%edi$/;"	l
f01050e4	obj/kern/kernel.asm	/^f01050e4:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f01050e6	obj/kern/kernel.asm	/^f01050e6:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01050e9	obj/kern/kernel.asm	/^f01050e9:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)$/;"	l
f01050f0	obj/kern/kernel.asm	/^f01050f0:	8b 50 48             	mov    0x48(%eax),%edx$/;"	l
f01050f3	obj/kern/kernel.asm	/^f01050f3:	89 d0                	mov    %edx,%eax$/;"	l
f01050f5	obj/kern/kernel.asm	/^f01050f5:	e9 fc 06 00 00       	jmp    f01057f6 <syscall+0x826>$/;"	l
f01050fa	obj/kern/kernel.asm	/^f01050fa:	81 7d 10 ff ff bf ee 	cmpl   $0xeebfffff,0x10(%ebp)$/;"	l
f0105101	obj/kern/kernel.asm	/^f0105101:	0f 87 9e 00 00 00    	ja     f01051a5 <syscall+0x1d5>$/;"	l
f0105107	obj/kern/kernel.asm	/^f0105107:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f010510a	obj/kern/kernel.asm	/^f010510a:	05 ff 0f 00 00       	add    $0xfff,%eax$/;"	l
f010510f	obj/kern/kernel.asm	/^f010510f:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0105114	obj/kern/kernel.asm	/^f0105114:	39 45 10             	cmp    %eax,0x10(%ebp)$/;"	l
f0105117	obj/kern/kernel.asm	/^f0105117:	0f 85 8f 00 00 00    	jne    f01051ac <syscall+0x1dc>$/;"	l
f010511d	obj/kern/kernel.asm	/^f010511d:	f7 45 14 f8 f1 ff ff 	testl  $0xfffff1f8,0x14(%ebp)$/;"	l
f0105124	obj/kern/kernel.asm	/^f0105124:	0f 85 89 00 00 00    	jne    f01051b3 <syscall+0x1e3>$/;"	l
f010512a	obj/kern/kernel.asm	/^f010512a:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010512d	obj/kern/kernel.asm	/^f010512d:	f7 d0                	not    %eax$/;"	l
f010512f	obj/kern/kernel.asm	/^f010512f:	83 e0 05             	and    $0x5,%eax$/;"	l
f0105132	obj/kern/kernel.asm	/^f0105132:	89 c3                	mov    %eax,%ebx$/;"	l
f0105134	obj/kern/kernel.asm	/^f0105134:	0f 85 80 00 00 00    	jne    f01051ba <syscall+0x1ea>$/;"	l
f010513a	obj/kern/kernel.asm	/^f010513a:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0105141	obj/kern/kernel.asm	/^f0105141:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0105148	obj/kern/kernel.asm	/^f0105148:	00 $/;"	l
f0105149	obj/kern/kernel.asm	/^f0105149:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f010514c	obj/kern/kernel.asm	/^f010514c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105150	obj/kern/kernel.asm	/^f0105150:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105153	obj/kern/kernel.asm	/^f0105153:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105156	obj/kern/kernel.asm	/^f0105156:	e8 e8 e5 ff ff       	call   f0103743 <envid2env>$/;"	l
f010515b	obj/kern/kernel.asm	/^f010515b:	85 c0                	test   %eax,%eax$/;"	l
f010515d	obj/kern/kernel.asm	/^f010515d:	78 62                	js     f01051c1 <syscall+0x1f1>$/;"	l
f010515f	obj/kern/kernel.asm	/^f010515f:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f0105166	obj/kern/kernel.asm	/^f0105166:	e8 d0 bf ff ff       	call   f010113b <page_alloc>$/;"	l
f010516b	obj/kern/kernel.asm	/^f010516b:	89 c6                	mov    %eax,%esi$/;"	l
f010516d	obj/kern/kernel.asm	/^f010516d:	85 c0                	test   %eax,%eax$/;"	l
f010516f	obj/kern/kernel.asm	/^f010516f:	74 54                	je     f01051c5 <syscall+0x1f5>$/;"	l
f0105171	obj/kern/kernel.asm	/^f0105171:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105174	obj/kern/kernel.asm	/^f0105174:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0105178	obj/kern/kernel.asm	/^f0105178:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f010517b	obj/kern/kernel.asm	/^f010517b:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010517f	obj/kern/kernel.asm	/^f010517f:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0105183	obj/kern/kernel.asm	/^f0105183:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105186	obj/kern/kernel.asm	/^f0105186:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0105189	obj/kern/kernel.asm	/^f0105189:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010518c	obj/kern/kernel.asm	/^f010518c:	e8 ea c2 ff ff       	call   f010147b <page_insert>$/;"	l
f0105191	obj/kern/kernel.asm	/^f0105191:	89 c7                	mov    %eax,%edi$/;"	l
f0105193	obj/kern/kernel.asm	/^f0105193:	85 c0                	test   %eax,%eax$/;"	l
f0105195	obj/kern/kernel.asm	/^f0105195:	79 33                	jns    f01051ca <syscall+0x1fa>$/;"	l
f0105197	obj/kern/kernel.asm	/^f0105197:	89 34 24             	mov    %esi,(%esp)$/;"	l
f010519a	obj/kern/kernel.asm	/^f010519a:	e8 2c c0 ff ff       	call   f01011cb <page_free>$/;"	l
f010519f	obj/kern/kernel.asm	/^f010519f:	89 fb                	mov    %edi,%ebx$/;"	l
f01051a1	obj/kern/kernel.asm	/^f01051a1:	f7 db                	neg    %ebx$/;"	l
f01051a3	obj/kern/kernel.asm	/^f01051a3:	eb 25                	jmp    f01051ca <syscall+0x1fa>$/;"	l
f01051a5	obj/kern/kernel.asm	/^f01051a5:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f01051aa	obj/kern/kernel.asm	/^f01051aa:	eb 1e                	jmp    f01051ca <syscall+0x1fa>$/;"	l
f01051ac	obj/kern/kernel.asm	/^f01051ac:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f01051b1	obj/kern/kernel.asm	/^f01051b1:	eb 17                	jmp    f01051ca <syscall+0x1fa>$/;"	l
f01051b3	obj/kern/kernel.asm	/^f01051b3:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f01051b8	obj/kern/kernel.asm	/^f01051b8:	eb 10                	jmp    f01051ca <syscall+0x1fa>$/;"	l
f01051ba	obj/kern/kernel.asm	/^f01051ba:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f01051bf	obj/kern/kernel.asm	/^f01051bf:	eb 09                	jmp    f01051ca <syscall+0x1fa>$/;"	l
f01051c1	obj/kern/kernel.asm	/^f01051c1:	89 c3                	mov    %eax,%ebx$/;"	l
f01051c3	obj/kern/kernel.asm	/^f01051c3:	eb 05                	jmp    f01051ca <syscall+0x1fa>$/;"	l
f01051c5	obj/kern/kernel.asm	/^f01051c5:	bb fc ff ff ff       	mov    $0xfffffffc,%ebx$/;"	l
f01051ca	obj/kern/kernel.asm	/^f01051ca:	89 d8                	mov    %ebx,%eax$/;"	l
f01051cc	obj/kern/kernel.asm	/^f01051cc:	e9 25 06 00 00       	jmp    f01057f6 <syscall+0x826>$/;"	l
f01051d1	obj/kern/kernel.asm	/^f01051d1:	81 7d 10 ff ff bf ee 	cmpl   $0xeebfffff,0x10(%ebp)$/;"	l
f01051d8	obj/kern/kernel.asm	/^f01051d8:	0f 87 03 01 00 00    	ja     f01052e1 <syscall+0x311>$/;"	l
f01051de	obj/kern/kernel.asm	/^f01051de:	81 7d 18 ff ff bf ee 	cmpl   $0xeebfffff,0x18(%ebp)$/;"	l
f01051e5	obj/kern/kernel.asm	/^f01051e5:	0f 87 f6 00 00 00    	ja     f01052e1 <syscall+0x311>$/;"	l
f01051eb	obj/kern/kernel.asm	/^f01051eb:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01051ee	obj/kern/kernel.asm	/^f01051ee:	05 ff 0f 00 00       	add    $0xfff,%eax$/;"	l
f01051f3	obj/kern/kernel.asm	/^f01051f3:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01051f8	obj/kern/kernel.asm	/^f01051f8:	39 45 10             	cmp    %eax,0x10(%ebp)$/;"	l
f01051fb	obj/kern/kernel.asm	/^f01051fb:	0f 85 e7 00 00 00    	jne    f01052e8 <syscall+0x318>$/;"	l
f0105201	obj/kern/kernel.asm	/^f0105201:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
f0105204	obj/kern/kernel.asm	/^f0105204:	05 ff 0f 00 00       	add    $0xfff,%eax$/;"	l
f0105209	obj/kern/kernel.asm	/^f0105209:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f010520e	obj/kern/kernel.asm	/^f010520e:	39 45 18             	cmp    %eax,0x18(%ebp)$/;"	l
f0105211	obj/kern/kernel.asm	/^f0105211:	0f 85 d8 00 00 00    	jne    f01052ef <syscall+0x31f>$/;"	l
f0105217	obj/kern/kernel.asm	/^f0105217:	f7 45 1c f8 f1 ff ff 	testl  $0xfffff1f8,0x1c(%ebp)$/;"	l
f010521e	obj/kern/kernel.asm	/^f010521e:	0f 85 d2 00 00 00    	jne    f01052f6 <syscall+0x326>$/;"	l
f0105224	obj/kern/kernel.asm	/^f0105224:	8b 45 1c             	mov    0x1c(%ebp),%eax$/;"	l
f0105227	obj/kern/kernel.asm	/^f0105227:	f7 d0                	not    %eax$/;"	l
f0105229	obj/kern/kernel.asm	/^f0105229:	a8 05                	test   $0x5,%al$/;"	l
f010522b	obj/kern/kernel.asm	/^f010522b:	0f 85 cc 00 00 00    	jne    f01052fd <syscall+0x32d>$/;"	l
f0105231	obj/kern/kernel.asm	/^f0105231:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f0105238	obj/kern/kernel.asm	/^f0105238:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f010523f	obj/kern/kernel.asm	/^f010523f:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0105246	obj/kern/kernel.asm	/^f0105246:	00 $/;"	l
f0105247	obj/kern/kernel.asm	/^f0105247:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f010524a	obj/kern/kernel.asm	/^f010524a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010524e	obj/kern/kernel.asm	/^f010524e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105251	obj/kern/kernel.asm	/^f0105251:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105254	obj/kern/kernel.asm	/^f0105254:	e8 ea e4 ff ff       	call   f0103743 <envid2env>$/;"	l
f0105259	obj/kern/kernel.asm	/^f0105259:	89 c2                	mov    %eax,%edx$/;"	l
f010525b	obj/kern/kernel.asm	/^f010525b:	85 c0                	test   %eax,%eax$/;"	l
f010525d	obj/kern/kernel.asm	/^f010525d:	0f 88 ad 00 00 00    	js     f0105310 <syscall+0x340>$/;"	l
f0105263	obj/kern/kernel.asm	/^f0105263:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f010526a	obj/kern/kernel.asm	/^f010526a:	00 $/;"	l
f010526b	obj/kern/kernel.asm	/^f010526b:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f010526e	obj/kern/kernel.asm	/^f010526e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105272	obj/kern/kernel.asm	/^f0105272:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105275	obj/kern/kernel.asm	/^f0105275:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105278	obj/kern/kernel.asm	/^f0105278:	e8 c6 e4 ff ff       	call   f0103743 <envid2env>$/;"	l
f010527d	obj/kern/kernel.asm	/^f010527d:	89 c2                	mov    %eax,%edx$/;"	l
f010527f	obj/kern/kernel.asm	/^f010527f:	85 c0                	test   %eax,%eax$/;"	l
f0105281	obj/kern/kernel.asm	/^f0105281:	0f 88 89 00 00 00    	js     f0105310 <syscall+0x340>$/;"	l
f0105287	obj/kern/kernel.asm	/^f0105287:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
f010528a	obj/kern/kernel.asm	/^f010528a:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010528e	obj/kern/kernel.asm	/^f010528e:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0105291	obj/kern/kernel.asm	/^f0105291:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105295	obj/kern/kernel.asm	/^f0105295:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105298	obj/kern/kernel.asm	/^f0105298:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f010529b	obj/kern/kernel.asm	/^f010529b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010529e	obj/kern/kernel.asm	/^f010529e:	e8 e1 c0 ff ff       	call   f0101384 <page_lookup>$/;"	l
f01052a3	obj/kern/kernel.asm	/^f01052a3:	85 c0                	test   %eax,%eax$/;"	l
f01052a5	obj/kern/kernel.asm	/^f01052a5:	74 5d                	je     f0105304 <syscall+0x334>$/;"	l
f01052a7	obj/kern/kernel.asm	/^f01052a7:	f6 45 1c 02          	testb  $0x2,0x1c(%ebp)$/;"	l
f01052ab	obj/kern/kernel.asm	/^f01052ab:	74 08                	je     f01052b5 <syscall+0x2e5>$/;"	l
f01052ad	obj/kern/kernel.asm	/^f01052ad:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f01052b0	obj/kern/kernel.asm	/^f01052b0:	f6 02 02             	testb  $0x2,(%edx)$/;"	l
f01052b3	obj/kern/kernel.asm	/^f01052b3:	74 56                	je     f010530b <syscall+0x33b>$/;"	l
f01052b5	obj/kern/kernel.asm	/^f01052b5:	8b 75 1c             	mov    0x1c(%ebp),%esi$/;"	l
f01052b8	obj/kern/kernel.asm	/^f01052b8:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f01052bc	obj/kern/kernel.asm	/^f01052bc:	8b 7d 18             	mov    0x18(%ebp),%edi$/;"	l
f01052bf	obj/kern/kernel.asm	/^f01052bf:	89 7c 24 08          	mov    %edi,0x8(%esp)$/;"	l
f01052c3	obj/kern/kernel.asm	/^f01052c3:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01052c7	obj/kern/kernel.asm	/^f01052c7:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01052ca	obj/kern/kernel.asm	/^f01052ca:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f01052cd	obj/kern/kernel.asm	/^f01052cd:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01052d0	obj/kern/kernel.asm	/^f01052d0:	e8 a6 c1 ff ff       	call   f010147b <page_insert>$/;"	l
f01052d5	obj/kern/kernel.asm	/^f01052d5:	85 c0                	test   %eax,%eax$/;"	l
f01052d7	obj/kern/kernel.asm	/^f01052d7:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01052dc	obj/kern/kernel.asm	/^f01052dc:	0f 4e d0             	cmovle %eax,%edx$/;"	l
f01052df	obj/kern/kernel.asm	/^f01052df:	eb 2f                	jmp    f0105310 <syscall+0x340>$/;"	l
f01052e1	obj/kern/kernel.asm	/^f01052e1:	ba fd ff ff ff       	mov    $0xfffffffd,%edx$/;"	l
f01052e6	obj/kern/kernel.asm	/^f01052e6:	eb 28                	jmp    f0105310 <syscall+0x340>$/;"	l
f01052e8	obj/kern/kernel.asm	/^f01052e8:	ba fd ff ff ff       	mov    $0xfffffffd,%edx$/;"	l
f01052ed	obj/kern/kernel.asm	/^f01052ed:	eb 21                	jmp    f0105310 <syscall+0x340>$/;"	l
f01052ef	obj/kern/kernel.asm	/^f01052ef:	ba fd ff ff ff       	mov    $0xfffffffd,%edx$/;"	l
f01052f4	obj/kern/kernel.asm	/^f01052f4:	eb 1a                	jmp    f0105310 <syscall+0x340>$/;"	l
f01052f6	obj/kern/kernel.asm	/^f01052f6:	ba fd ff ff ff       	mov    $0xfffffffd,%edx$/;"	l
f01052fb	obj/kern/kernel.asm	/^f01052fb:	eb 13                	jmp    f0105310 <syscall+0x340>$/;"	l
f01052fd	obj/kern/kernel.asm	/^f01052fd:	ba fd ff ff ff       	mov    $0xfffffffd,%edx$/;"	l
f0105302	obj/kern/kernel.asm	/^f0105302:	eb 0c                	jmp    f0105310 <syscall+0x340>$/;"	l
f0105304	obj/kern/kernel.asm	/^f0105304:	ba fd ff ff ff       	mov    $0xfffffffd,%edx$/;"	l
f0105309	obj/kern/kernel.asm	/^f0105309:	eb 05                	jmp    f0105310 <syscall+0x340>$/;"	l
f010530b	obj/kern/kernel.asm	/^f010530b:	ba fd ff ff ff       	mov    $0xfffffffd,%edx$/;"	l
f0105310	obj/kern/kernel.asm	/^f0105310:	89 d0                	mov    %edx,%eax$/;"	l
f0105312	obj/kern/kernel.asm	/^f0105312:	e9 df 04 00 00       	jmp    f01057f6 <syscall+0x826>$/;"	l
f0105317	obj/kern/kernel.asm	/^f0105317:	81 7d 10 ff ff bf ee 	cmpl   $0xeebfffff,0x10(%ebp)$/;"	l
f010531e	obj/kern/kernel.asm	/^f010531e:	77 55                	ja     f0105375 <syscall+0x3a5>$/;"	l
f0105320	obj/kern/kernel.asm	/^f0105320:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0105323	obj/kern/kernel.asm	/^f0105323:	05 ff 0f 00 00       	add    $0xfff,%eax$/;"	l
f0105328	obj/kern/kernel.asm	/^f0105328:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f010532d	obj/kern/kernel.asm	/^f010532d:	39 45 10             	cmp    %eax,0x10(%ebp)$/;"	l
f0105330	obj/kern/kernel.asm	/^f0105330:	75 4a                	jne    f010537c <syscall+0x3ac>$/;"	l
f0105332	obj/kern/kernel.asm	/^f0105332:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0105339	obj/kern/kernel.asm	/^f0105339:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0105340	obj/kern/kernel.asm	/^f0105340:	00 $/;"	l
f0105341	obj/kern/kernel.asm	/^f0105341:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0105344	obj/kern/kernel.asm	/^f0105344:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105348	obj/kern/kernel.asm	/^f0105348:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010534b	obj/kern/kernel.asm	/^f010534b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010534e	obj/kern/kernel.asm	/^f010534e:	e8 f0 e3 ff ff       	call   f0103743 <envid2env>$/;"	l
f0105353	obj/kern/kernel.asm	/^f0105353:	89 c2                	mov    %eax,%edx$/;"	l
f0105355	obj/kern/kernel.asm	/^f0105355:	85 c0                	test   %eax,%eax$/;"	l
f0105357	obj/kern/kernel.asm	/^f0105357:	78 28                	js     f0105381 <syscall+0x3b1>$/;"	l
f0105359	obj/kern/kernel.asm	/^f0105359:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f010535c	obj/kern/kernel.asm	/^f010535c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105360	obj/kern/kernel.asm	/^f0105360:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105363	obj/kern/kernel.asm	/^f0105363:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0105366	obj/kern/kernel.asm	/^f0105366:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105369	obj/kern/kernel.asm	/^f0105369:	e8 c4 c0 ff ff       	call   f0101432 <page_remove>$/;"	l
f010536e	obj/kern/kernel.asm	/^f010536e:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105373	obj/kern/kernel.asm	/^f0105373:	eb 0c                	jmp    f0105381 <syscall+0x3b1>$/;"	l
f0105375	obj/kern/kernel.asm	/^f0105375:	ba fd ff ff ff       	mov    $0xfffffffd,%edx$/;"	l
f010537a	obj/kern/kernel.asm	/^f010537a:	eb 05                	jmp    f0105381 <syscall+0x3b1>$/;"	l
f010537c	obj/kern/kernel.asm	/^f010537c:	ba fd ff ff ff       	mov    $0xfffffffd,%edx$/;"	l
f0105381	obj/kern/kernel.asm	/^f0105381:	89 d0                	mov    %edx,%eax$/;"	l
f0105383	obj/kern/kernel.asm	/^f0105383:	e9 6e 04 00 00       	jmp    f01057f6 <syscall+0x826>$/;"	l
f0105388	obj/kern/kernel.asm	/^f0105388:	83 7d 10 04          	cmpl   $0x4,0x10(%ebp)$/;"	l
f010538c	obj/kern/kernel.asm	/^f010538c:	74 06                	je     f0105394 <syscall+0x3c4>$/;"	l
f010538e	obj/kern/kernel.asm	/^f010538e:	83 7d 10 02          	cmpl   $0x2,0x10(%ebp)$/;"	l
f0105392	obj/kern/kernel.asm	/^f0105392:	75 3c                	jne    f01053d0 <syscall+0x400>$/;"	l
f0105394	obj/kern/kernel.asm	/^f0105394:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f010539b	obj/kern/kernel.asm	/^f010539b:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f01053a2	obj/kern/kernel.asm	/^f01053a2:	00 $/;"	l
f01053a3	obj/kern/kernel.asm	/^f01053a3:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01053a6	obj/kern/kernel.asm	/^f01053a6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01053aa	obj/kern/kernel.asm	/^f01053aa:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01053ad	obj/kern/kernel.asm	/^f01053ad:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01053b0	obj/kern/kernel.asm	/^f01053b0:	e8 8e e3 ff ff       	call   f0103743 <envid2env>$/;"	l
f01053b5	obj/kern/kernel.asm	/^f01053b5:	85 c0                	test   %eax,%eax$/;"	l
f01053b7	obj/kern/kernel.asm	/^f01053b7:	0f 88 39 04 00 00    	js     f01057f6 <syscall+0x826>$/;"	l
f01053bd	obj/kern/kernel.asm	/^f01053bd:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01053c0	obj/kern/kernel.asm	/^f01053c0:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f01053c3	obj/kern/kernel.asm	/^f01053c3:	89 70 54             	mov    %esi,0x54(%eax)$/;"	l
f01053c6	obj/kern/kernel.asm	/^f01053c6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01053cb	obj/kern/kernel.asm	/^f01053cb:	e9 26 04 00 00       	jmp    f01057f6 <syscall+0x826>$/;"	l
f01053d0	obj/kern/kernel.asm	/^f01053d0:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f01053d5	obj/kern/kernel.asm	/^f01053d5:	e9 1c 04 00 00       	jmp    f01057f6 <syscall+0x826>$/;"	l
f01053da	obj/kern/kernel.asm	/^f01053da:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f01053e1	obj/kern/kernel.asm	/^f01053e1:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f01053e8	obj/kern/kernel.asm	/^f01053e8:	00 $/;"	l
f01053e9	obj/kern/kernel.asm	/^f01053e9:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01053ec	obj/kern/kernel.asm	/^f01053ec:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01053f0	obj/kern/kernel.asm	/^f01053f0:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01053f3	obj/kern/kernel.asm	/^f01053f3:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01053f6	obj/kern/kernel.asm	/^f01053f6:	e8 48 e3 ff ff       	call   f0103743 <envid2env>$/;"	l
f01053fb	obj/kern/kernel.asm	/^f01053fb:	85 c0                	test   %eax,%eax$/;"	l
f01053fd	obj/kern/kernel.asm	/^f01053fd:	0f 88 f3 03 00 00    	js     f01057f6 <syscall+0x826>$/;"	l
f0105403	obj/kern/kernel.asm	/^f0105403:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105406	obj/kern/kernel.asm	/^f0105406:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f0105409	obj/kern/kernel.asm	/^f0105409:	89 78 64             	mov    %edi,0x64(%eax)$/;"	l
f010540c	obj/kern/kernel.asm	/^f010540c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105411	obj/kern/kernel.asm	/^f0105411:	e9 e0 03 00 00       	jmp    f01057f6 <syscall+0x826>$/;"	l
f0105416	obj/kern/kernel.asm	/^f0105416:	81 7d 14 ff ff bf ee 	cmpl   $0xeebfffff,0x14(%ebp)$/;"	l
f010541d	obj/kern/kernel.asm	/^f010541d:	0f 87 bb 03 00 00    	ja     f01057de <syscall+0x80e>$/;"	l
f0105423	obj/kern/kernel.asm	/^f0105423:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105426	obj/kern/kernel.asm	/^f0105426:	05 ff 0f 00 00       	add    $0xfff,%eax$/;"	l
f010542b	obj/kern/kernel.asm	/^f010542b:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0105430	obj/kern/kernel.asm	/^f0105430:	39 45 14             	cmp    %eax,0x14(%ebp)$/;"	l
f0105433	obj/kern/kernel.asm	/^f0105433:	0f 85 ed 00 00 00    	jne    f0105526 <syscall+0x556>$/;"	l
f0105439	obj/kern/kernel.asm	/^f0105439:	f7 45 18 f8 f1 ff ff 	testl  $0xfffff1f8,0x18(%ebp)$/;"	l
f0105440	obj/kern/kernel.asm	/^f0105440:	0f 85 ea 00 00 00    	jne    f0105530 <syscall+0x560>$/;"	l
f0105446	obj/kern/kernel.asm	/^f0105446:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
f0105449	obj/kern/kernel.asm	/^f0105449:	f7 d0                	not    %eax$/;"	l
f010544b	obj/kern/kernel.asm	/^f010544b:	a8 05                	test   $0x5,%al$/;"	l
f010544d	obj/kern/kernel.asm	/^f010544d:	0f 84 47 03 00 00    	je     f010579a <syscall+0x7ca>$/;"	l
f0105453	obj/kern/kernel.asm	/^f0105453:	e9 e2 00 00 00       	jmp    f010553a <syscall+0x56a>$/;"	l
f0105458	obj/kern/kernel.asm	/^f0105458:	f6 45 18 02          	testb  $0x2,0x18(%ebp)$/;"	l
f010545c	obj/kern/kernel.asm	/^f010545c:	74 0c                	je     f010546a <syscall+0x49a>$/;"	l
f010545e	obj/kern/kernel.asm	/^f010545e:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105461	obj/kern/kernel.asm	/^f0105461:	f6 00 02             	testb  $0x2,(%eax)$/;"	l
f0105464	obj/kern/kernel.asm	/^f0105464:	0f 84 da 00 00 00    	je     f0105544 <syscall+0x574>$/;"	l
f010546a	obj/kern/kernel.asm	/^f010546a:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0105471	obj/kern/kernel.asm	/^f0105471:	00 $/;"	l
f0105472	obj/kern/kernel.asm	/^f0105472:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0105475	obj/kern/kernel.asm	/^f0105475:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105479	obj/kern/kernel.asm	/^f0105479:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010547c	obj/kern/kernel.asm	/^f010547c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010547f	obj/kern/kernel.asm	/^f010547f:	e8 bf e2 ff ff       	call   f0103743 <envid2env>$/;"	l
f0105484	obj/kern/kernel.asm	/^f0105484:	85 c0                	test   %eax,%eax$/;"	l
f0105486	obj/kern/kernel.asm	/^f0105486:	0f 88 6a 03 00 00    	js     f01057f6 <syscall+0x826>$/;"	l
f010548c	obj/kern/kernel.asm	/^f010548c:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f010548f	obj/kern/kernel.asm	/^f010548f:	80 7a 68 00          	cmpb   $0x0,0x68(%edx)$/;"	l
f0105493	obj/kern/kernel.asm	/^f0105493:	0f 84 b5 00 00 00    	je     f010554e <syscall+0x57e>$/;"	l
f0105499	obj/kern/kernel.asm	/^f0105499:	83 7a 54 04          	cmpl   $0x4,0x54(%edx)$/;"	l
f010549d	obj/kern/kernel.asm	/^f010549d:	0f 85 b5 00 00 00    	jne    f0105558 <syscall+0x588>$/;"	l
f01054a3	obj/kern/kernel.asm	/^f01054a3:	81 7d 14 ff ff bf ee 	cmpl   $0xeebfffff,0x14(%ebp)$/;"	l
f01054aa	obj/kern/kernel.asm	/^f01054aa:	77 37                	ja     f01054e3 <syscall+0x513>$/;"	l
f01054ac	obj/kern/kernel.asm	/^f01054ac:	8b 42 6c             	mov    0x6c(%edx),%eax$/;"	l
f01054af	obj/kern/kernel.asm	/^f01054af:	3d ff ff bf ee       	cmp    $0xeebfffff,%eax$/;"	l
f01054b4	obj/kern/kernel.asm	/^f01054b4:	77 2d                	ja     f01054e3 <syscall+0x513>$/;"	l
f01054b6	obj/kern/kernel.asm	/^f01054b6:	8b 4d 18             	mov    0x18(%ebp),%ecx$/;"	l
f01054b9	obj/kern/kernel.asm	/^f01054b9:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f01054bd	obj/kern/kernel.asm	/^f01054bd:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01054c1	obj/kern/kernel.asm	/^f01054c1:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01054c5	obj/kern/kernel.asm	/^f01054c5:	8b 42 60             	mov    0x60(%edx),%eax$/;"	l
f01054c8	obj/kern/kernel.asm	/^f01054c8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01054cb	obj/kern/kernel.asm	/^f01054cb:	e8 ab bf ff ff       	call   f010147b <page_insert>$/;"	l
f01054d0	obj/kern/kernel.asm	/^f01054d0:	85 c0                	test   %eax,%eax$/;"	l
f01054d2	obj/kern/kernel.asm	/^f01054d2:	0f 88 1e 03 00 00    	js     f01057f6 <syscall+0x826>$/;"	l
f01054d8	obj/kern/kernel.asm	/^f01054d8:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01054db	obj/kern/kernel.asm	/^f01054db:	8b 75 18             	mov    0x18(%ebp),%esi$/;"	l
f01054de	obj/kern/kernel.asm	/^f01054de:	89 70 78             	mov    %esi,0x78(%eax)$/;"	l
f01054e1	obj/kern/kernel.asm	/^f01054e1:	eb 07                	jmp    f01054ea <syscall+0x51a>$/;"	l
f01054e3	obj/kern/kernel.asm	/^f01054e3:	c7 42 78 00 00 00 00 	movl   $0x0,0x78(%edx)$/;"	l
f01054ea	obj/kern/kernel.asm	/^f01054ea:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f01054ed	obj/kern/kernel.asm	/^f01054ed:	c6 43 68 00          	movb   $0x0,0x68(%ebx)$/;"	l
f01054f1	obj/kern/kernel.asm	/^f01054f1:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01054f4	obj/kern/kernel.asm	/^f01054f4:	89 43 70             	mov    %eax,0x70(%ebx)$/;"	l
f01054f7	obj/kern/kernel.asm	/^f01054f7:	e8 5d 16 00 00       	call   f0106b59 <cpunum>$/;"	l
f01054fc	obj/kern/kernel.asm	/^f01054fc:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01054ff	obj/kern/kernel.asm	/^f01054ff:	8b 80 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%eax$/;"	l
f0105505	obj/kern/kernel.asm	/^f0105505:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0105508	obj/kern/kernel.asm	/^f0105508:	89 43 74             	mov    %eax,0x74(%ebx)$/;"	l
f010550b	obj/kern/kernel.asm	/^f010550b:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010550e	obj/kern/kernel.asm	/^f010550e:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)$/;"	l
f0105515	obj/kern/kernel.asm	/^f0105515:	c7 40 54 02 00 00 00 	movl   $0x2,0x54(%eax)$/;"	l
f010551c	obj/kern/kernel.asm	/^f010551c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105521	obj/kern/kernel.asm	/^f0105521:	e9 d0 02 00 00       	jmp    f01057f6 <syscall+0x826>$/;"	l
f0105526	obj/kern/kernel.asm	/^f0105526:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f010552b	obj/kern/kernel.asm	/^f010552b:	e9 c6 02 00 00       	jmp    f01057f6 <syscall+0x826>$/;"	l
f0105530	obj/kern/kernel.asm	/^f0105530:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105535	obj/kern/kernel.asm	/^f0105535:	e9 bc 02 00 00       	jmp    f01057f6 <syscall+0x826>$/;"	l
f010553a	obj/kern/kernel.asm	/^f010553a:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f010553f	obj/kern/kernel.asm	/^f010553f:	e9 b2 02 00 00       	jmp    f01057f6 <syscall+0x826>$/;"	l
f0105544	obj/kern/kernel.asm	/^f0105544:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105549	obj/kern/kernel.asm	/^f0105549:	e9 a8 02 00 00       	jmp    f01057f6 <syscall+0x826>$/;"	l
f010554e	obj/kern/kernel.asm	/^f010554e:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax$/;"	l
f0105553	obj/kern/kernel.asm	/^f0105553:	e9 9e 02 00 00       	jmp    f01057f6 <syscall+0x826>$/;"	l
f0105558	obj/kern/kernel.asm	/^f0105558:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax$/;"	l
f010555d	obj/kern/kernel.asm	/^f010555d:	e9 94 02 00 00       	jmp    f01057f6 <syscall+0x826>$/;"	l
f0105562	obj/kern/kernel.asm	/^f0105562:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105567	obj/kern/kernel.asm	/^f0105567:	e9 8a 02 00 00       	jmp    f01057f6 <syscall+0x826>$/;"	l
f010556c	obj/kern/kernel.asm	/^f010556c:	81 7d 0c ff ff bf ee 	cmpl   $0xeebfffff,0xc(%ebp)$/;"	l
f0105573	obj/kern/kernel.asm	/^f0105573:	77 2a                	ja     f010559f <syscall+0x5cf>$/;"	l
f0105575	obj/kern/kernel.asm	/^f0105575:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105578	obj/kern/kernel.asm	/^f0105578:	05 ff 0f 00 00       	add    $0xfff,%eax$/;"	l
f010557d	obj/kern/kernel.asm	/^f010557d:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0105582	obj/kern/kernel.asm	/^f0105582:	39 45 0c             	cmp    %eax,0xc(%ebp)$/;"	l
f0105585	obj/kern/kernel.asm	/^f0105585:	0f 85 08 02 00 00    	jne    f0105793 <syscall+0x7c3>$/;"	l
f010558b	obj/kern/kernel.asm	/^f010558b:	e8 c9 15 00 00       	call   f0106b59 <cpunum>$/;"	l
f0105590	obj/kern/kernel.asm	/^f0105590:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105593	obj/kern/kernel.asm	/^f0105593:	8b 80 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%eax$/;"	l
f0105599	obj/kern/kernel.asm	/^f0105599:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f010559c	obj/kern/kernel.asm	/^f010559c:	89 48 6c             	mov    %ecx,0x6c(%eax)$/;"	l
f010559f	obj/kern/kernel.asm	/^f010559f:	e8 b5 15 00 00       	call   f0106b59 <cpunum>$/;"	l
f01055a4	obj/kern/kernel.asm	/^f01055a4:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01055a7	obj/kern/kernel.asm	/^f01055a7:	8b 80 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%eax$/;"	l
f01055ad	obj/kern/kernel.asm	/^f01055ad:	c6 40 68 01          	movb   $0x1,0x68(%eax)$/;"	l
f01055b1	obj/kern/kernel.asm	/^f01055b1:	e8 a3 15 00 00       	call   f0106b59 <cpunum>$/;"	l
f01055b6	obj/kern/kernel.asm	/^f01055b6:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01055b9	obj/kern/kernel.asm	/^f01055b9:	8b 80 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%eax$/;"	l
f01055bf	obj/kern/kernel.asm	/^f01055bf:	c7 40 54 04 00 00 00 	movl   $0x4,0x54(%eax)$/;"	l
f01055c6	obj/kern/kernel.asm	/^f01055c6:	e8 30 f9 ff ff       	call   f0104efb <sched_yield>$/;"	l
f01055cb	obj/kern/kernel.asm	/^f01055cb:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f01055ce	obj/kern/kernel.asm	/^f01055ce:	e8 86 15 00 00       	call   f0106b59 <cpunum>$/;"	l
f01055d3	obj/kern/kernel.asm	/^f01055d3:	c7 44 24 0c 05 00 00 	movl   $0x5,0xc(%esp)$/;"	l
f01055da	obj/kern/kernel.asm	/^f01055da:	00 $/;"	l
f01055db	obj/kern/kernel.asm	/^f01055db:	c7 44 24 08 44 00 00 	movl   $0x44,0x8(%esp)$/;"	l
f01055e2	obj/kern/kernel.asm	/^f01055e2:	00 $/;"	l
f01055e3	obj/kern/kernel.asm	/^f01055e3:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f01055e6	obj/kern/kernel.asm	/^f01055e6:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f01055ea	obj/kern/kernel.asm	/^f01055ea:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01055ed	obj/kern/kernel.asm	/^f01055ed:	8b 80 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%eax$/;"	l
f01055f3	obj/kern/kernel.asm	/^f01055f3:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01055f6	obj/kern/kernel.asm	/^f01055f6:	e8 49 e0 ff ff       	call   f0103644 <user_mem_assert>$/;"	l
f01055fb	obj/kern/kernel.asm	/^f01055fb:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0105602	obj/kern/kernel.asm	/^f0105602:	00 $/;"	l
f0105603	obj/kern/kernel.asm	/^f0105603:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0105606	obj/kern/kernel.asm	/^f0105606:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010560a	obj/kern/kernel.asm	/^f010560a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010560d	obj/kern/kernel.asm	/^f010560d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105610	obj/kern/kernel.asm	/^f0105610:	e8 2e e1 ff ff       	call   f0103743 <envid2env>$/;"	l
f0105615	obj/kern/kernel.asm	/^f0105615:	85 c0                	test   %eax,%eax$/;"	l
f0105617	obj/kern/kernel.asm	/^f0105617:	0f 88 d9 01 00 00    	js     f01057f6 <syscall+0x826>$/;"	l
f010561d	obj/kern/kernel.asm	/^f010561d:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f0105622	obj/kern/kernel.asm	/^f0105622:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0105625	obj/kern/kernel.asm	/^f0105625:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0105627	obj/kern/kernel.asm	/^f0105627:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010562a	obj/kern/kernel.asm	/^f010562a:	81 48 38 00 02 00 00 	orl    $0x200,0x38(%eax)$/;"	l
f0105631	obj/kern/kernel.asm	/^f0105631:	66 c7 40 34 1b 00    	movw   $0x1b,0x34(%eax)$/;"	l
f0105637	obj/kern/kernel.asm	/^f0105637:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010563c	obj/kern/kernel.asm	/^f010563c:	e9 b5 01 00 00       	jmp    f01057f6 <syscall+0x826>$/;"	l
f0105641	obj/kern/kernel.asm	/^f0105641:	e8 b4 26 00 00       	call   f0107cfa <time_msec>$/;"	l
f0105646	obj/kern/kernel.asm	/^f0105646:	e9 ab 01 00 00       	jmp    f01057f6 <syscall+0x826>$/;"	l
f010564b	obj/kern/kernel.asm	/^f010564b:	90                   	nop$/;"	l
f010564c	obj/kern/kernel.asm	/^f010564c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0105650	obj/kern/kernel.asm	/^f0105650:	e8 04 15 00 00       	call   f0106b59 <cpunum>$/;"	l
f0105655	obj/kern/kernel.asm	/^f0105655:	c7 44 24 0c 05 00 00 	movl   $0x5,0xc(%esp)$/;"	l
f010565c	obj/kern/kernel.asm	/^f010565c:	00 $/;"	l
f010565d	obj/kern/kernel.asm	/^f010565d:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f0105660	obj/kern/kernel.asm	/^f0105660:	89 7c 24 08          	mov    %edi,0x8(%esp)$/;"	l
f0105664	obj/kern/kernel.asm	/^f0105664:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0105667	obj/kern/kernel.asm	/^f0105667:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f010566b	obj/kern/kernel.asm	/^f010566b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010566e	obj/kern/kernel.asm	/^f010566e:	8b 80 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%eax$/;"	l
f0105674	obj/kern/kernel.asm	/^f0105674:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105677	obj/kern/kernel.asm	/^f0105677:	e8 c8 df ff ff       	call   f0103644 <user_mem_assert>$/;"	l
f010567c	obj/kern/kernel.asm	/^f010567c:	e8 d8 14 00 00       	call   f0106b59 <cpunum>$/;"	l
f0105681	obj/kern/kernel.asm	/^f0105681:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f0105684	obj/kern/kernel.asm	/^f0105684:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0105688	obj/kern/kernel.asm	/^f0105688:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f010568b	obj/kern/kernel.asm	/^f010568b:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f010568f	obj/kern/kernel.asm	/^f010568f:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105692	obj/kern/kernel.asm	/^f0105692:	8b 80 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%eax$/;"	l
f0105698	obj/kern/kernel.asm	/^f0105698:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f010569b	obj/kern/kernel.asm	/^f010569b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010569e	obj/kern/kernel.asm	/^f010569e:	e8 e1 bc ff ff       	call   f0101384 <page_lookup>$/;"	l
f01056a3	obj/kern/kernel.asm	/^f01056a3:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01056a6	obj/kern/kernel.asm	/^f01056a6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01056aa	obj/kern/kernel.asm	/^f01056aa:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01056ad	obj/kern/kernel.asm	/^f01056ad:	81 e2 ff 0f 00 00    	and    $0xfff,%edx$/;"	l
f01056b3	obj/kern/kernel.asm	/^f01056b3:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01056b6	obj/kern/kernel.asm	/^f01056b6:	8b 00                	mov    (%eax),%eax$/;"	l
f01056b8	obj/kern/kernel.asm	/^f01056b8:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01056bd	obj/kern/kernel.asm	/^f01056bd:	09 d0                	or     %edx,%eax$/;"	l
f01056bf	obj/kern/kernel.asm	/^f01056bf:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01056c2	obj/kern/kernel.asm	/^f01056c2:	e8 76 1a 00 00       	call   f010713d <transmit_packet>$/;"	l
f01056c7	obj/kern/kernel.asm	/^f01056c7:	85 c0                	test   %eax,%eax$/;"	l
f01056c9	obj/kern/kernel.asm	/^f01056c9:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01056ce	obj/kern/kernel.asm	/^f01056ce:	0f 4f c2             	cmovg  %edx,%eax$/;"	l
f01056d1	obj/kern/kernel.asm	/^f01056d1:	e9 20 01 00 00       	jmp    f01057f6 <syscall+0x826>$/;"	l
f01056d6	obj/kern/kernel.asm	/^f01056d6:	81 7d 0c ff ff bf ee 	cmpl   $0xeebfffff,0xc(%ebp)$/;"	l
f01056dd	obj/kern/kernel.asm	/^f01056dd:	0f 87 9b 00 00 00    	ja     f010577e <syscall+0x7ae>$/;"	l
f01056e3	obj/kern/kernel.asm	/^f01056e3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01056e6	obj/kern/kernel.asm	/^f01056e6:	05 ff 0f 00 00       	add    $0xfff,%eax$/;"	l
f01056eb	obj/kern/kernel.asm	/^f01056eb:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01056f0	obj/kern/kernel.asm	/^f01056f0:	39 45 0c             	cmp    %eax,0xc(%ebp)$/;"	l
f01056f3	obj/kern/kernel.asm	/^f01056f3:	0f 85 8c 00 00 00    	jne    f0105785 <syscall+0x7b5>$/;"	l
f01056f9	obj/kern/kernel.asm	/^f01056f9:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01056fc	obj/kern/kernel.asm	/^f01056fc:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105700	obj/kern/kernel.asm	/^f0105700:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0105703	obj/kern/kernel.asm	/^f0105703:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105706	obj/kern/kernel.asm	/^f0105706:	e8 35 1f 00 00       	call   f0107640 <receive_packet>$/;"	l
f010570b	obj/kern/kernel.asm	/^f010570b:	85 c0                	test   %eax,%eax$/;"	l
f010570d	obj/kern/kernel.asm	/^f010570d:	0f 88 e3 00 00 00    	js     f01057f6 <syscall+0x826>$/;"	l
f0105713	obj/kern/kernel.asm	/^f0105713:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105716	obj/kern/kernel.asm	/^f0105716:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0105719	obj/kern/kernel.asm	/^f0105719:	3b 05 94 9e 2b f0    	cmp    0xf02b9e94,%eax$/;"	l
f010571f	obj/kern/kernel.asm	/^f010571f:	72 1c                	jb     f010573d <syscall+0x76d>$/;"	l
f0105721	obj/kern/kernel.asm	/^f0105721:	c7 44 24 08 b0 86 10 	movl   $0xf01086b0,0x8(%esp)$/;"	l
f0105728	obj/kern/kernel.asm	/^f0105728:	f0 $/;"	l
f0105729	obj/kern/kernel.asm	/^f0105729:	c7 44 24 04 51 00 00 	movl   $0x51,0x4(%esp)$/;"	l
f0105730	obj/kern/kernel.asm	/^f0105730:	00 $/;"	l
f0105731	obj/kern/kernel.asm	/^f0105731:	c7 04 24 1d 8f 10 f0 	movl   $0xf0108f1d,(%esp)$/;"	l
f0105738	obj/kern/kernel.asm	/^f0105738:	e8 03 a9 ff ff       	call   f0100040 <_panic>$/;"	l
f010573d	obj/kern/kernel.asm	/^f010573d:	8b 15 9c 9e 2b f0    	mov    0xf02b9e9c,%edx$/;"	l
f0105743	obj/kern/kernel.asm	/^f0105743:	8d 1c c2             	lea    (%edx,%eax,8),%ebx$/;"	l
f0105746	obj/kern/kernel.asm	/^f0105746:	e8 0e 14 00 00       	call   f0106b59 <cpunum>$/;"	l
f010574b	obj/kern/kernel.asm	/^f010574b:	c7 44 24 0c 07 00 00 	movl   $0x7,0xc(%esp)$/;"	l
f0105752	obj/kern/kernel.asm	/^f0105752:	00 $/;"	l
f0105753	obj/kern/kernel.asm	/^f0105753:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0105756	obj/kern/kernel.asm	/^f0105756:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f010575a	obj/kern/kernel.asm	/^f010575a:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f010575e	obj/kern/kernel.asm	/^f010575e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105761	obj/kern/kernel.asm	/^f0105761:	8b 80 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%eax$/;"	l
f0105767	obj/kern/kernel.asm	/^f0105767:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f010576a	obj/kern/kernel.asm	/^f010576a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010576d	obj/kern/kernel.asm	/^f010576d:	e8 09 bd ff ff       	call   f010147b <page_insert>$/;"	l
f0105772	obj/kern/kernel.asm	/^f0105772:	85 c0                	test   %eax,%eax$/;"	l
f0105774	obj/kern/kernel.asm	/^f0105774:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105779	obj/kern/kernel.asm	/^f0105779:	0f 4f c2             	cmovg  %edx,%eax$/;"	l
f010577c	obj/kern/kernel.asm	/^f010577c:	eb 78                	jmp    f01057f6 <syscall+0x826>$/;"	l
f010577e	obj/kern/kernel.asm	/^f010577e:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105783	obj/kern/kernel.asm	/^f0105783:	eb 71                	jmp    f01057f6 <syscall+0x826>$/;"	l
f0105785	obj/kern/kernel.asm	/^f0105785:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f010578a	obj/kern/kernel.asm	/^f010578a:	eb 6a                	jmp    f01057f6 <syscall+0x826>$/;"	l
f010578c	obj/kern/kernel.asm	/^f010578c:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105791	obj/kern/kernel.asm	/^f0105791:	eb 63                	jmp    f01057f6 <syscall+0x826>$/;"	l
f0105793	obj/kern/kernel.asm	/^f0105793:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105798	obj/kern/kernel.asm	/^f0105798:	eb 5c                	jmp    f01057f6 <syscall+0x826>$/;"	l
f010579a	obj/kern/kernel.asm	/^f010579a:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f01057a1	obj/kern/kernel.asm	/^f01057a1:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f01057a8	obj/kern/kernel.asm	/^f01057a8:	e8 ac 13 00 00       	call   f0106b59 <cpunum>$/;"	l
f01057ad	obj/kern/kernel.asm	/^f01057ad:	8d 55 e0             	lea    -0x20(%ebp),%edx$/;"	l
f01057b0	obj/kern/kernel.asm	/^f01057b0:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f01057b4	obj/kern/kernel.asm	/^f01057b4:	8b 5d 14             	mov    0x14(%ebp),%ebx$/;"	l
f01057b7	obj/kern/kernel.asm	/^f01057b7:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01057bb	obj/kern/kernel.asm	/^f01057bb:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01057be	obj/kern/kernel.asm	/^f01057be:	8b 80 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%eax$/;"	l
f01057c4	obj/kern/kernel.asm	/^f01057c4:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f01057c7	obj/kern/kernel.asm	/^f01057c7:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01057ca	obj/kern/kernel.asm	/^f01057ca:	e8 b5 bb ff ff       	call   f0101384 <page_lookup>$/;"	l
f01057cf	obj/kern/kernel.asm	/^f01057cf:	89 c3                	mov    %eax,%ebx$/;"	l
f01057d1	obj/kern/kernel.asm	/^f01057d1:	85 c0                	test   %eax,%eax$/;"	l
f01057d3	obj/kern/kernel.asm	/^f01057d3:	0f 85 7f fc ff ff    	jne    f0105458 <syscall+0x488>$/;"	l
f01057d9	obj/kern/kernel.asm	/^f01057d9:	e9 84 fd ff ff       	jmp    f0105562 <syscall+0x592>$/;"	l
f01057de	obj/kern/kernel.asm	/^f01057de:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f01057e5	obj/kern/kernel.asm	/^f01057e5:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f01057ec	obj/kern/kernel.asm	/^f01057ec:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01057f1	obj/kern/kernel.asm	/^f01057f1:	e9 74 fc ff ff       	jmp    f010546a <syscall+0x49a>$/;"	l
f01057f6	obj/kern/kernel.asm	/^f01057f6:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f01057f9	obj/kern/kernel.asm	/^f01057f9:	5b                   	pop    %ebx$/;"	l
f01057fa	obj/kern/kernel.asm	/^f01057fa:	5e                   	pop    %esi$/;"	l
f01057fb	obj/kern/kernel.asm	/^f01057fb:	5f                   	pop    %edi$/;"	l
f01057fc	obj/kern/kernel.asm	/^f01057fc:	5d                   	pop    %ebp$/;"	l
f01057fd	obj/kern/kernel.asm	/^f01057fd:	c3                   	ret    $/;"	l
f01057fe	obj/kern/kernel.asm	/^f01057fe <stab_binsearch>:$/;"	l
f01057fe	obj/kern/kernel.asm	/^f01057fe:	55                   	push   %ebp$/;"	l
f01057ff	obj/kern/kernel.asm	/^f01057ff:	89 e5                	mov    %esp,%ebp$/;"	l
f0105801	obj/kern/kernel.asm	/^f0105801:	57                   	push   %edi$/;"	l
f0105802	obj/kern/kernel.asm	/^f0105802:	56                   	push   %esi$/;"	l
f0105803	obj/kern/kernel.asm	/^f0105803:	53                   	push   %ebx$/;"	l
f0105804	obj/kern/kernel.asm	/^f0105804:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0105807	obj/kern/kernel.asm	/^f0105807:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f010580a	obj/kern/kernel.asm	/^f010580a:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f010580d	obj/kern/kernel.asm	/^f010580d:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f0105810	obj/kern/kernel.asm	/^f0105810:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0105813	obj/kern/kernel.asm	/^f0105813:	8b 1a                	mov    (%edx),%ebx$/;"	l
f0105815	obj/kern/kernel.asm	/^f0105815:	8b 01                	mov    (%ecx),%eax$/;"	l
f0105817	obj/kern/kernel.asm	/^f0105817:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f010581a	obj/kern/kernel.asm	/^f010581a:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
f0105821	obj/kern/kernel.asm	/^f0105821:	e9 88 00 00 00       	jmp    f01058ae <stab_binsearch+0xb0>$/;"	l
f0105826	obj/kern/kernel.asm	/^f0105826:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0105829	obj/kern/kernel.asm	/^f0105829:	01 d8                	add    %ebx,%eax$/;"	l
f010582b	obj/kern/kernel.asm	/^f010582b:	89 c7                	mov    %eax,%edi$/;"	l
f010582d	obj/kern/kernel.asm	/^f010582d:	c1 ef 1f             	shr    $0x1f,%edi$/;"	l
f0105830	obj/kern/kernel.asm	/^f0105830:	01 c7                	add    %eax,%edi$/;"	l
f0105832	obj/kern/kernel.asm	/^f0105832:	d1 ff                	sar    %edi$/;"	d
f0105834	obj/kern/kernel.asm	/^f0105834:	8d 04 7f             	lea    (%edi,%edi,2),%eax$/;"	l
f0105837	obj/kern/kernel.asm	/^f0105837:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
f010583a	obj/kern/kernel.asm	/^f010583a:	8d 14 81             	lea    (%ecx,%eax,4),%edx$/;"	l
f010583d	obj/kern/kernel.asm	/^f010583d:	89 f8                	mov    %edi,%eax$/;"	l
f010583f	obj/kern/kernel.asm	/^f010583f:	eb 03                	jmp    f0105844 <stab_binsearch+0x46>$/;"	l
f0105841	obj/kern/kernel.asm	/^f0105841:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0105844	obj/kern/kernel.asm	/^f0105844:	39 c3                	cmp    %eax,%ebx$/;"	l
f0105846	obj/kern/kernel.asm	/^f0105846:	7f 1f                	jg     f0105867 <stab_binsearch+0x69>$/;"	l
f0105848	obj/kern/kernel.asm	/^f0105848:	0f b6 4a 04          	movzbl 0x4(%edx),%ecx$/;"	l
f010584c	obj/kern/kernel.asm	/^f010584c:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f010584f	obj/kern/kernel.asm	/^f010584f:	39 f1                	cmp    %esi,%ecx$/;"	l
f0105851	obj/kern/kernel.asm	/^f0105851:	75 ee                	jne    f0105841 <stab_binsearch+0x43>$/;"	l
f0105853	obj/kern/kernel.asm	/^f0105853:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
f0105856	obj/kern/kernel.asm	/^f0105856:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0105859	obj/kern/kernel.asm	/^f0105859:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
f010585c	obj/kern/kernel.asm	/^f010585c:	8b 54 91 08          	mov    0x8(%ecx,%edx,4),%edx$/;"	l
f0105860	obj/kern/kernel.asm	/^f0105860:	39 55 0c             	cmp    %edx,0xc(%ebp)$/;"	l
f0105863	obj/kern/kernel.asm	/^f0105863:	76 18                	jbe    f010587d <stab_binsearch+0x7f>$/;"	l
f0105865	obj/kern/kernel.asm	/^f0105865:	eb 05                	jmp    f010586c <stab_binsearch+0x6e>$/;"	l
f0105867	obj/kern/kernel.asm	/^f0105867:	8d 5f 01             	lea    0x1(%edi),%ebx$/;"	l
f010586a	obj/kern/kernel.asm	/^f010586a:	eb 42                	jmp    f01058ae <stab_binsearch+0xb0>$/;"	l
f010586c	obj/kern/kernel.asm	/^f010586c:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f010586f	obj/kern/kernel.asm	/^f010586f:	89 03                	mov    %eax,(%ebx)$/;"	l
f0105871	obj/kern/kernel.asm	/^f0105871:	8d 5f 01             	lea    0x1(%edi),%ebx$/;"	l
f0105874	obj/kern/kernel.asm	/^f0105874:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f010587b	obj/kern/kernel.asm	/^f010587b:	eb 31                	jmp    f01058ae <stab_binsearch+0xb0>$/;"	l
f010587d	obj/kern/kernel.asm	/^f010587d:	39 55 0c             	cmp    %edx,0xc(%ebp)$/;"	l
f0105880	obj/kern/kernel.asm	/^f0105880:	73 17                	jae    f0105899 <stab_binsearch+0x9b>$/;"	l
f0105882	obj/kern/kernel.asm	/^f0105882:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f0105885	obj/kern/kernel.asm	/^f0105885:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0105888	obj/kern/kernel.asm	/^f0105888:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f010588b	obj/kern/kernel.asm	/^f010588b:	8b 7d e0             	mov    -0x20(%ebp),%edi$/;"	l
f010588e	obj/kern/kernel.asm	/^f010588e:	89 07                	mov    %eax,(%edi)$/;"	l
f0105890	obj/kern/kernel.asm	/^f0105890:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f0105897	obj/kern/kernel.asm	/^f0105897:	eb 15                	jmp    f01058ae <stab_binsearch+0xb0>$/;"	l
f0105899	obj/kern/kernel.asm	/^f0105899:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f010589c	obj/kern/kernel.asm	/^f010589c:	8b 5d e8             	mov    -0x18(%ebp),%ebx$/;"	l
f010589f	obj/kern/kernel.asm	/^f010589f:	89 1f                	mov    %ebx,(%edi)$/;"	l
f01058a1	obj/kern/kernel.asm	/^f01058a1:	83 45 0c 01          	addl   $0x1,0xc(%ebp)$/;"	l
f01058a5	obj/kern/kernel.asm	/^f01058a5:	89 c3                	mov    %eax,%ebx$/;"	l
f01058a7	obj/kern/kernel.asm	/^f01058a7:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f01058ae	obj/kern/kernel.asm	/^f01058ae:	3b 5d f0             	cmp    -0x10(%ebp),%ebx$/;"	l
f01058b1	obj/kern/kernel.asm	/^f01058b1:	0f 8e 6f ff ff ff    	jle    f0105826 <stab_binsearch+0x28>$/;"	l
f01058b7	obj/kern/kernel.asm	/^f01058b7:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
f01058bb	obj/kern/kernel.asm	/^f01058bb:	75 0f                	jne    f01058cc <stab_binsearch+0xce>$/;"	l
f01058bd	obj/kern/kernel.asm	/^f01058bd:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01058c0	obj/kern/kernel.asm	/^f01058c0:	8b 00                	mov    (%eax),%eax$/;"	l
f01058c2	obj/kern/kernel.asm	/^f01058c2:	83 e8 01             	sub    $0x1,%eax$/;"	l
f01058c5	obj/kern/kernel.asm	/^f01058c5:	8b 7d e0             	mov    -0x20(%ebp),%edi$/;"	l
f01058c8	obj/kern/kernel.asm	/^f01058c8:	89 07                	mov    %eax,(%edi)$/;"	l
f01058ca	obj/kern/kernel.asm	/^f01058ca:	eb 2c                	jmp    f01058f8 <stab_binsearch+0xfa>$/;"	l
f01058cc	obj/kern/kernel.asm	/^f01058cc:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01058cf	obj/kern/kernel.asm	/^f01058cf:	8b 00                	mov    (%eax),%eax$/;"	l
f01058d1	obj/kern/kernel.asm	/^f01058d1:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01058d4	obj/kern/kernel.asm	/^f01058d4:	8b 0f                	mov    (%edi),%ecx$/;"	l
f01058d6	obj/kern/kernel.asm	/^f01058d6:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f01058d9	obj/kern/kernel.asm	/^f01058d9:	8b 7d ec             	mov    -0x14(%ebp),%edi$/;"	l
f01058dc	obj/kern/kernel.asm	/^f01058dc:	8d 14 97             	lea    (%edi,%edx,4),%edx$/;"	l
f01058df	obj/kern/kernel.asm	/^f01058df:	eb 03                	jmp    f01058e4 <stab_binsearch+0xe6>$/;"	l
f01058e1	obj/kern/kernel.asm	/^f01058e1:	83 e8 01             	sub    $0x1,%eax$/;"	l
f01058e4	obj/kern/kernel.asm	/^f01058e4:	39 c8                	cmp    %ecx,%eax$/;"	l
f01058e6	obj/kern/kernel.asm	/^f01058e6:	7e 0b                	jle    f01058f3 <stab_binsearch+0xf5>$/;"	l
f01058e8	obj/kern/kernel.asm	/^f01058e8:	0f b6 5a 04          	movzbl 0x4(%edx),%ebx$/;"	l
f01058ec	obj/kern/kernel.asm	/^f01058ec:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f01058ef	obj/kern/kernel.asm	/^f01058ef:	39 f3                	cmp    %esi,%ebx$/;"	l
f01058f1	obj/kern/kernel.asm	/^f01058f1:	75 ee                	jne    f01058e1 <stab_binsearch+0xe3>$/;"	l
f01058f3	obj/kern/kernel.asm	/^f01058f3:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01058f6	obj/kern/kernel.asm	/^f01058f6:	89 07                	mov    %eax,(%edi)$/;"	l
f01058f8	obj/kern/kernel.asm	/^f01058f8:	83 c4 14             	add    $0x14,%esp$/;"	l
f01058fb	obj/kern/kernel.asm	/^f01058fb:	5b                   	pop    %ebx$/;"	l
f01058fc	obj/kern/kernel.asm	/^f01058fc:	5e                   	pop    %esi$/;"	l
f01058fd	obj/kern/kernel.asm	/^f01058fd:	5f                   	pop    %edi$/;"	l
f01058fe	obj/kern/kernel.asm	/^f01058fe:	5d                   	pop    %ebp$/;"	l
f01058ff	obj/kern/kernel.asm	/^f01058ff:	c3                   	ret    $/;"	l
f0105900	obj/kern/kernel.asm	/^f0105900 <debuginfo_eip>:$/;"	l
f0105900	obj/kern/kernel.asm	/^f0105900:	55                   	push   %ebp$/;"	l
f0105901	obj/kern/kernel.asm	/^f0105901:	89 e5                	mov    %esp,%ebp$/;"	l
f0105903	obj/kern/kernel.asm	/^f0105903:	57                   	push   %edi$/;"	l
f0105904	obj/kern/kernel.asm	/^f0105904:	56                   	push   %esi$/;"	l
f0105905	obj/kern/kernel.asm	/^f0105905:	53                   	push   %ebx$/;"	l
f0105906	obj/kern/kernel.asm	/^f0105906:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f0105909	obj/kern/kernel.asm	/^f0105909:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f010590c	obj/kern/kernel.asm	/^f010590c:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f010590f	obj/kern/kernel.asm	/^f010590f:	c7 07 6c 97 10 f0    	movl   $0xf010976c,(%edi)$/;"	l
f0105915	obj/kern/kernel.asm	/^f0105915:	c7 47 04 00 00 00 00 	movl   $0x0,0x4(%edi)$/;"	l
f010591c	obj/kern/kernel.asm	/^f010591c:	c7 47 08 6c 97 10 f0 	movl   $0xf010976c,0x8(%edi)$/;"	l
f0105923	obj/kern/kernel.asm	/^f0105923:	c7 47 0c 09 00 00 00 	movl   $0x9,0xc(%edi)$/;"	l
f010592a	obj/kern/kernel.asm	/^f010592a:	89 77 10             	mov    %esi,0x10(%edi)$/;"	l
f010592d	obj/kern/kernel.asm	/^f010592d:	c7 47 14 00 00 00 00 	movl   $0x0,0x14(%edi)$/;"	l
f0105934	obj/kern/kernel.asm	/^f0105934:	81 fe ff ff 7f ef    	cmp    $0xef7fffff,%esi$/;"	l
f010593a	obj/kern/kernel.asm	/^f010593a:	0f 87 c1 00 00 00    	ja     f0105a01 <debuginfo_eip+0x101>$/;"	l
f0105940	obj/kern/kernel.asm	/^f0105940:	e8 14 12 00 00       	call   f0106b59 <cpunum>$/;"	l
f0105945	obj/kern/kernel.asm	/^f0105945:	c7 44 24 0c 04 00 00 	movl   $0x4,0xc(%esp)$/;"	l
f010594c	obj/kern/kernel.asm	/^f010594c:	00 $/;"	l
f010594d	obj/kern/kernel.asm	/^f010594d:	c7 44 24 08 10 00 00 	movl   $0x10,0x8(%esp)$/;"	l
f0105954	obj/kern/kernel.asm	/^f0105954:	00 $/;"	l
f0105955	obj/kern/kernel.asm	/^f0105955:	c7 44 24 04 00 00 20 	movl   $0x200000,0x4(%esp)$/;"	l
f010595c	obj/kern/kernel.asm	/^f010595c:	00 $/;"	l
f010595d	obj/kern/kernel.asm	/^f010595d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105960	obj/kern/kernel.asm	/^f0105960:	8b 80 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%eax$/;"	l
f0105966	obj/kern/kernel.asm	/^f0105966:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105969	obj/kern/kernel.asm	/^f0105969:	e8 3f dc ff ff       	call   f01035ad <user_mem_check>$/;"	l
f010596e	obj/kern/kernel.asm	/^f010596e:	85 c0                	test   %eax,%eax$/;"	l
f0105970	obj/kern/kernel.asm	/^f0105970:	0f 85 51 02 00 00    	jne    f0105bc7 <debuginfo_eip+0x2c7>$/;"	l
f0105976	obj/kern/kernel.asm	/^f0105976:	a1 00 00 20 00       	mov    0x200000,%eax$/;"	l
f010597b	obj/kern/kernel.asm	/^f010597b:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f010597e	obj/kern/kernel.asm	/^f010597e:	8b 1d 04 00 20 00    	mov    0x200004,%ebx$/;"	l
f0105984	obj/kern/kernel.asm	/^f0105984:	8b 15 08 00 20 00    	mov    0x200008,%edx$/;"	l
f010598a	obj/kern/kernel.asm	/^f010598a:	89 55 c0             	mov    %edx,-0x40(%ebp)$/;"	l
f010598d	obj/kern/kernel.asm	/^f010598d:	a1 0c 00 20 00       	mov    0x20000c,%eax$/;"	l
f0105992	obj/kern/kernel.asm	/^f0105992:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
f0105995	obj/kern/kernel.asm	/^f0105995:	e8 bf 11 00 00       	call   f0106b59 <cpunum>$/;"	l
f010599a	obj/kern/kernel.asm	/^f010599a:	c7 44 24 0c 04 00 00 	movl   $0x4,0xc(%esp)$/;"	l
f01059a1	obj/kern/kernel.asm	/^f01059a1:	00 $/;"	l
f01059a2	obj/kern/kernel.asm	/^f01059a2:	89 da                	mov    %ebx,%edx$/;"	l
f01059a4	obj/kern/kernel.asm	/^f01059a4:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
f01059a7	obj/kern/kernel.asm	/^f01059a7:	29 ca                	sub    %ecx,%edx$/;"	l
f01059a9	obj/kern/kernel.asm	/^f01059a9:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f01059ad	obj/kern/kernel.asm	/^f01059ad:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f01059b1	obj/kern/kernel.asm	/^f01059b1:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01059b4	obj/kern/kernel.asm	/^f01059b4:	8b 80 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%eax$/;"	l
f01059ba	obj/kern/kernel.asm	/^f01059ba:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01059bd	obj/kern/kernel.asm	/^f01059bd:	e8 eb db ff ff       	call   f01035ad <user_mem_check>$/;"	l
f01059c2	obj/kern/kernel.asm	/^f01059c2:	85 c0                	test   %eax,%eax$/;"	l
f01059c4	obj/kern/kernel.asm	/^f01059c4:	0f 85 04 02 00 00    	jne    f0105bce <debuginfo_eip+0x2ce>$/;"	l
f01059ca	obj/kern/kernel.asm	/^f01059ca:	e8 8a 11 00 00       	call   f0106b59 <cpunum>$/;"	l
f01059cf	obj/kern/kernel.asm	/^f01059cf:	c7 44 24 0c 04 00 00 	movl   $0x4,0xc(%esp)$/;"	l
f01059d6	obj/kern/kernel.asm	/^f01059d6:	00 $/;"	l
f01059d7	obj/kern/kernel.asm	/^f01059d7:	8b 55 bc             	mov    -0x44(%ebp),%edx$/;"	l
f01059da	obj/kern/kernel.asm	/^f01059da:	8b 4d c0             	mov    -0x40(%ebp),%ecx$/;"	l
f01059dd	obj/kern/kernel.asm	/^f01059dd:	29 ca                	sub    %ecx,%edx$/;"	l
f01059df	obj/kern/kernel.asm	/^f01059df:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f01059e3	obj/kern/kernel.asm	/^f01059e3:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f01059e7	obj/kern/kernel.asm	/^f01059e7:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01059ea	obj/kern/kernel.asm	/^f01059ea:	8b 80 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%eax$/;"	l
f01059f0	obj/kern/kernel.asm	/^f01059f0:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01059f3	obj/kern/kernel.asm	/^f01059f3:	e8 b5 db ff ff       	call   f01035ad <user_mem_check>$/;"	l
f01059f8	obj/kern/kernel.asm	/^f01059f8:	85 c0                	test   %eax,%eax$/;"	l
f01059fa	obj/kern/kernel.asm	/^f01059fa:	74 1f                	je     f0105a1b <debuginfo_eip+0x11b>$/;"	l
f01059fc	obj/kern/kernel.asm	/^f01059fc:	e9 d4 01 00 00       	jmp    f0105bd5 <debuginfo_eip+0x2d5>$/;"	l
f0105a01	obj/kern/kernel.asm	/^f0105a01:	c7 45 bc de a7 11 f0 	movl   $0xf011a7de,-0x44(%ebp)$/;"	l
f0105a08	obj/kern/kernel.asm	/^f0105a08:	c7 45 c0 91 64 11 f0 	movl   $0xf0116491,-0x40(%ebp)$/;"	l
f0105a0f	obj/kern/kernel.asm	/^f0105a0f:	bb 90 64 11 f0       	mov    $0xf0116490,%ebx$/;"	l
f0105a14	obj/kern/kernel.asm	/^f0105a14:	c7 45 c4 68 a2 10 f0 	movl   $0xf010a268,-0x3c(%ebp)$/;"	l
f0105a1b	obj/kern/kernel.asm	/^f0105a1b:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
f0105a1e	obj/kern/kernel.asm	/^f0105a1e:	39 45 c0             	cmp    %eax,-0x40(%ebp)$/;"	l
f0105a21	obj/kern/kernel.asm	/^f0105a21:	0f 83 b5 01 00 00    	jae    f0105bdc <debuginfo_eip+0x2dc>$/;"	l
f0105a27	obj/kern/kernel.asm	/^f0105a27:	80 78 ff 00          	cmpb   $0x0,-0x1(%eax)$/;"	l
f0105a2b	obj/kern/kernel.asm	/^f0105a2b:	0f 85 b2 01 00 00    	jne    f0105be3 <debuginfo_eip+0x2e3>$/;"	l
f0105a31	obj/kern/kernel.asm	/^f0105a31:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0105a38	obj/kern/kernel.asm	/^f0105a38:	2b 5d c4             	sub    -0x3c(%ebp),%ebx$/;"	l
f0105a3b	obj/kern/kernel.asm	/^f0105a3b:	c1 fb 02             	sar    $0x2,%ebx$/;"	l
f0105a3e	obj/kern/kernel.asm	/^f0105a3e:	69 c3 ab aa aa aa    	imul   $0xaaaaaaab,%ebx,%eax$/;"	l
f0105a44	obj/kern/kernel.asm	/^f0105a44:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0105a47	obj/kern/kernel.asm	/^f0105a47:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0105a4a	obj/kern/kernel.asm	/^f0105a4a:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0105a4e	obj/kern/kernel.asm	/^f0105a4e:	c7 04 24 64 00 00 00 	movl   $0x64,(%esp)$/;"	l
f0105a55	obj/kern/kernel.asm	/^f0105a55:	8d 4d e0             	lea    -0x20(%ebp),%ecx$/;"	l
f0105a58	obj/kern/kernel.asm	/^f0105a58:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f0105a5b	obj/kern/kernel.asm	/^f0105a5b:	8b 5d c4             	mov    -0x3c(%ebp),%ebx$/;"	l
f0105a5e	obj/kern/kernel.asm	/^f0105a5e:	89 d8                	mov    %ebx,%eax$/;"	l
f0105a60	obj/kern/kernel.asm	/^f0105a60:	e8 99 fd ff ff       	call   f01057fe <stab_binsearch>$/;"	l
f0105a65	obj/kern/kernel.asm	/^f0105a65:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105a68	obj/kern/kernel.asm	/^f0105a68:	85 c0                	test   %eax,%eax$/;"	l
f0105a6a	obj/kern/kernel.asm	/^f0105a6a:	0f 84 7a 01 00 00    	je     f0105bea <debuginfo_eip+0x2ea>$/;"	l
f0105a70	obj/kern/kernel.asm	/^f0105a70:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0105a73	obj/kern/kernel.asm	/^f0105a73:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105a76	obj/kern/kernel.asm	/^f0105a76:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0105a79	obj/kern/kernel.asm	/^f0105a79:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0105a7d	obj/kern/kernel.asm	/^f0105a7d:	c7 04 24 24 00 00 00 	movl   $0x24,(%esp)$/;"	l
f0105a84	obj/kern/kernel.asm	/^f0105a84:	8d 4d d8             	lea    -0x28(%ebp),%ecx$/;"	l
f0105a87	obj/kern/kernel.asm	/^f0105a87:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f0105a8a	obj/kern/kernel.asm	/^f0105a8a:	89 d8                	mov    %ebx,%eax$/;"	l
f0105a8c	obj/kern/kernel.asm	/^f0105a8c:	e8 6d fd ff ff       	call   f01057fe <stab_binsearch>$/;"	l
f0105a91	obj/kern/kernel.asm	/^f0105a91:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0105a94	obj/kern/kernel.asm	/^f0105a94:	8b 5d d8             	mov    -0x28(%ebp),%ebx$/;"	l
f0105a97	obj/kern/kernel.asm	/^f0105a97:	39 d8                	cmp    %ebx,%eax$/;"	l
f0105a99	obj/kern/kernel.asm	/^f0105a99:	7f 32                	jg     f0105acd <debuginfo_eip+0x1cd>$/;"	l
f0105a9b	obj/kern/kernel.asm	/^f0105a9b:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0105a9e	obj/kern/kernel.asm	/^f0105a9e:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
f0105aa1	obj/kern/kernel.asm	/^f0105aa1:	8d 14 91             	lea    (%ecx,%edx,4),%edx$/;"	l
f0105aa4	obj/kern/kernel.asm	/^f0105aa4:	8b 0a                	mov    (%edx),%ecx$/;"	l
f0105aa6	obj/kern/kernel.asm	/^f0105aa6:	89 4d b8             	mov    %ecx,-0x48(%ebp)$/;"	l
f0105aa9	obj/kern/kernel.asm	/^f0105aa9:	8b 4d bc             	mov    -0x44(%ebp),%ecx$/;"	l
f0105aac	obj/kern/kernel.asm	/^f0105aac:	2b 4d c0             	sub    -0x40(%ebp),%ecx$/;"	l
f0105aaf	obj/kern/kernel.asm	/^f0105aaf:	39 4d b8             	cmp    %ecx,-0x48(%ebp)$/;"	l
f0105ab2	obj/kern/kernel.asm	/^f0105ab2:	73 09                	jae    f0105abd <debuginfo_eip+0x1bd>$/;"	l
f0105ab4	obj/kern/kernel.asm	/^f0105ab4:	8b 4d b8             	mov    -0x48(%ebp),%ecx$/;"	l
f0105ab7	obj/kern/kernel.asm	/^f0105ab7:	03 4d c0             	add    -0x40(%ebp),%ecx$/;"	l
f0105aba	obj/kern/kernel.asm	/^f0105aba:	89 4f 08             	mov    %ecx,0x8(%edi)$/;"	l
f0105abd	obj/kern/kernel.asm	/^f0105abd:	8b 52 08             	mov    0x8(%edx),%edx$/;"	l
f0105ac0	obj/kern/kernel.asm	/^f0105ac0:	89 57 10             	mov    %edx,0x10(%edi)$/;"	l
f0105ac3	obj/kern/kernel.asm	/^f0105ac3:	29 d6                	sub    %edx,%esi$/;"	l
f0105ac5	obj/kern/kernel.asm	/^f0105ac5:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105ac8	obj/kern/kernel.asm	/^f0105ac8:	89 5d d0             	mov    %ebx,-0x30(%ebp)$/;"	l
f0105acb	obj/kern/kernel.asm	/^f0105acb:	eb 0f                	jmp    f0105adc <debuginfo_eip+0x1dc>$/;"	l
f0105acd	obj/kern/kernel.asm	/^f0105acd:	89 77 10             	mov    %esi,0x10(%edi)$/;"	l
f0105ad0	obj/kern/kernel.asm	/^f0105ad0:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105ad3	obj/kern/kernel.asm	/^f0105ad3:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105ad6	obj/kern/kernel.asm	/^f0105ad6:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105ad9	obj/kern/kernel.asm	/^f0105ad9:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0105adc	obj/kern/kernel.asm	/^f0105adc:	c7 44 24 04 3a 00 00 	movl   $0x3a,0x4(%esp)$/;"	l
f0105ae3	obj/kern/kernel.asm	/^f0105ae3:	00 $/;"	l
f0105ae4	obj/kern/kernel.asm	/^f0105ae4:	8b 47 08             	mov    0x8(%edi),%eax$/;"	l
f0105ae7	obj/kern/kernel.asm	/^f0105ae7:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105aea	obj/kern/kernel.asm	/^f0105aea:	e8 fc 09 00 00       	call   f01064eb <strfind>$/;"	l
f0105aef	obj/kern/kernel.asm	/^f0105aef:	2b 47 08             	sub    0x8(%edi),%eax$/;"	l
f0105af2	obj/kern/kernel.asm	/^f0105af2:	89 47 0c             	mov    %eax,0xc(%edi)$/;"	l
f0105af5	obj/kern/kernel.asm	/^f0105af5:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0105af9	obj/kern/kernel.asm	/^f0105af9:	c7 04 24 44 00 00 00 	movl   $0x44,(%esp)$/;"	l
f0105b00	obj/kern/kernel.asm	/^f0105b00:	8d 4d d0             	lea    -0x30(%ebp),%ecx$/;"	l
f0105b03	obj/kern/kernel.asm	/^f0105b03:	8d 55 d4             	lea    -0x2c(%ebp),%edx$/;"	l
f0105b06	obj/kern/kernel.asm	/^f0105b06:	8b 75 c4             	mov    -0x3c(%ebp),%esi$/;"	l
f0105b09	obj/kern/kernel.asm	/^f0105b09:	89 f0                	mov    %esi,%eax$/;"	l
f0105b0b	obj/kern/kernel.asm	/^f0105b0b:	e8 ee fc ff ff       	call   f01057fe <stab_binsearch>$/;"	l
f0105b10	obj/kern/kernel.asm	/^f0105b10:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0105b13	obj/kern/kernel.asm	/^f0105b13:	39 45 d0             	cmp    %eax,-0x30(%ebp)$/;"	l
f0105b16	obj/kern/kernel.asm	/^f0105b16:	0f 8c d5 00 00 00    	jl     f0105bf1 <debuginfo_eip+0x2f1>$/;"	l
f0105b1c	obj/kern/kernel.asm	/^f0105b1c:	8d 04 40             	lea    (%eax,%eax,2),%eax$/;"	l
f0105b1f	obj/kern/kernel.asm	/^f0105b1f:	0f b7 44 86 06       	movzwl 0x6(%esi,%eax,4),%eax$/;"	l
f0105b24	obj/kern/kernel.asm	/^f0105b24:	89 47 04             	mov    %eax,0x4(%edi)$/;"	l
f0105b27	obj/kern/kernel.asm	/^f0105b27:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105b2a	obj/kern/kernel.asm	/^f0105b2a:	89 c3                	mov    %eax,%ebx$/;"	l
f0105b2c	obj/kern/kernel.asm	/^f0105b2c:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0105b2f	obj/kern/kernel.asm	/^f0105b2f:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0105b32	obj/kern/kernel.asm	/^f0105b32:	8d 14 96             	lea    (%esi,%edx,4),%edx$/;"	l
f0105b35	obj/kern/kernel.asm	/^f0105b35:	89 7d 0c             	mov    %edi,0xc(%ebp)$/;"	l
f0105b38	obj/kern/kernel.asm	/^f0105b38:	89 df                	mov    %ebx,%edi$/;"	l
f0105b3a	obj/kern/kernel.asm	/^f0105b3a:	eb 06                	jmp    f0105b42 <debuginfo_eip+0x242>$/;"	l
f0105b3c	obj/kern/kernel.asm	/^f0105b3c:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0105b3f	obj/kern/kernel.asm	/^f0105b3f:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0105b42	obj/kern/kernel.asm	/^f0105b42:	89 c6                	mov    %eax,%esi$/;"	l
f0105b44	obj/kern/kernel.asm	/^f0105b44:	39 c7                	cmp    %eax,%edi$/;"	l
f0105b46	obj/kern/kernel.asm	/^f0105b46:	7f 3c                	jg     f0105b84 <debuginfo_eip+0x284>$/;"	l
f0105b48	obj/kern/kernel.asm	/^f0105b48:	0f b6 4a 04          	movzbl 0x4(%edx),%ecx$/;"	l
f0105b4c	obj/kern/kernel.asm	/^f0105b4c:	80 f9 84             	cmp    $0x84,%cl$/;"	l
f0105b4f	obj/kern/kernel.asm	/^f0105b4f:	75 08                	jne    f0105b59 <debuginfo_eip+0x259>$/;"	l
f0105b51	obj/kern/kernel.asm	/^f0105b51:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0105b54	obj/kern/kernel.asm	/^f0105b54:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105b57	obj/kern/kernel.asm	/^f0105b57:	eb 11                	jmp    f0105b6a <debuginfo_eip+0x26a>$/;"	l
f0105b59	obj/kern/kernel.asm	/^f0105b59:	80 f9 64             	cmp    $0x64,%cl$/;"	l
f0105b5c	obj/kern/kernel.asm	/^f0105b5c:	75 de                	jne    f0105b3c <debuginfo_eip+0x23c>$/;"	l
f0105b5e	obj/kern/kernel.asm	/^f0105b5e:	83 7a 08 00          	cmpl   $0x0,0x8(%edx)$/;"	l
f0105b62	obj/kern/kernel.asm	/^f0105b62:	74 d8                	je     f0105b3c <debuginfo_eip+0x23c>$/;"	l
f0105b64	obj/kern/kernel.asm	/^f0105b64:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0105b67	obj/kern/kernel.asm	/^f0105b67:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105b6a	obj/kern/kernel.asm	/^f0105b6a:	8d 04 76             	lea    (%esi,%esi,2),%eax$/;"	l
f0105b6d	obj/kern/kernel.asm	/^f0105b6d:	8b 75 c4             	mov    -0x3c(%ebp),%esi$/;"	l
f0105b70	obj/kern/kernel.asm	/^f0105b70:	8b 04 86             	mov    (%esi,%eax,4),%eax$/;"	l
f0105b73	obj/kern/kernel.asm	/^f0105b73:	8b 55 bc             	mov    -0x44(%ebp),%edx$/;"	l
f0105b76	obj/kern/kernel.asm	/^f0105b76:	2b 55 c0             	sub    -0x40(%ebp),%edx$/;"	l
f0105b79	obj/kern/kernel.asm	/^f0105b79:	39 d0                	cmp    %edx,%eax$/;"	l
f0105b7b	obj/kern/kernel.asm	/^f0105b7b:	73 0a                	jae    f0105b87 <debuginfo_eip+0x287>$/;"	l
f0105b7d	obj/kern/kernel.asm	/^f0105b7d:	03 45 c0             	add    -0x40(%ebp),%eax$/;"	l
f0105b80	obj/kern/kernel.asm	/^f0105b80:	89 07                	mov    %eax,(%edi)$/;"	l
f0105b82	obj/kern/kernel.asm	/^f0105b82:	eb 03                	jmp    f0105b87 <debuginfo_eip+0x287>$/;"	l
f0105b84	obj/kern/kernel.asm	/^f0105b84:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0105b87	obj/kern/kernel.asm	/^f0105b87:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0105b8a	obj/kern/kernel.asm	/^f0105b8a:	8b 5d d8             	mov    -0x28(%ebp),%ebx$/;"	l
f0105b8d	obj/kern/kernel.asm	/^f0105b8d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105b92	obj/kern/kernel.asm	/^f0105b92:	39 da                	cmp    %ebx,%edx$/;"	l
f0105b94	obj/kern/kernel.asm	/^f0105b94:	7d 67                	jge    f0105bfd <debuginfo_eip+0x2fd>$/;"	l
f0105b96	obj/kern/kernel.asm	/^f0105b96:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105b99	obj/kern/kernel.asm	/^f0105b99:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f0105b9c	obj/kern/kernel.asm	/^f0105b9c:	89 d0                	mov    %edx,%eax$/;"	l
f0105b9e	obj/kern/kernel.asm	/^f0105b9e:	8d 14 52             	lea    (%edx,%edx,2),%edx$/;"	l
f0105ba1	obj/kern/kernel.asm	/^f0105ba1:	8b 75 c4             	mov    -0x3c(%ebp),%esi$/;"	l
f0105ba4	obj/kern/kernel.asm	/^f0105ba4:	8d 14 96             	lea    (%esi,%edx,4),%edx$/;"	l
f0105ba7	obj/kern/kernel.asm	/^f0105ba7:	eb 04                	jmp    f0105bad <debuginfo_eip+0x2ad>$/;"	l
f0105ba9	obj/kern/kernel.asm	/^f0105ba9:	83 47 14 01          	addl   $0x1,0x14(%edi)$/;"	l
f0105bad	obj/kern/kernel.asm	/^f0105bad:	39 c3                	cmp    %eax,%ebx$/;"	l
f0105baf	obj/kern/kernel.asm	/^f0105baf:	7e 47                	jle    f0105bf8 <debuginfo_eip+0x2f8>$/;"	l
f0105bb1	obj/kern/kernel.asm	/^f0105bb1:	0f b6 4a 04          	movzbl 0x4(%edx),%ecx$/;"	l
f0105bb5	obj/kern/kernel.asm	/^f0105bb5:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105bb8	obj/kern/kernel.asm	/^f0105bb8:	83 c2 0c             	add    $0xc,%edx$/;"	l
f0105bbb	obj/kern/kernel.asm	/^f0105bbb:	80 f9 a0             	cmp    $0xa0,%cl$/;"	l
f0105bbe	obj/kern/kernel.asm	/^f0105bbe:	74 e9                	je     f0105ba9 <debuginfo_eip+0x2a9>$/;"	l
f0105bc0	obj/kern/kernel.asm	/^f0105bc0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105bc5	obj/kern/kernel.asm	/^f0105bc5:	eb 36                	jmp    f0105bfd <debuginfo_eip+0x2fd>$/;"	l
f0105bc7	obj/kern/kernel.asm	/^f0105bc7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0105bcc	obj/kern/kernel.asm	/^f0105bcc:	eb 2f                	jmp    f0105bfd <debuginfo_eip+0x2fd>$/;"	l
f0105bce	obj/kern/kernel.asm	/^f0105bce:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0105bd3	obj/kern/kernel.asm	/^f0105bd3:	eb 28                	jmp    f0105bfd <debuginfo_eip+0x2fd>$/;"	l
f0105bd5	obj/kern/kernel.asm	/^f0105bd5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0105bda	obj/kern/kernel.asm	/^f0105bda:	eb 21                	jmp    f0105bfd <debuginfo_eip+0x2fd>$/;"	l
f0105bdc	obj/kern/kernel.asm	/^f0105bdc:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0105be1	obj/kern/kernel.asm	/^f0105be1:	eb 1a                	jmp    f0105bfd <debuginfo_eip+0x2fd>$/;"	l
f0105be3	obj/kern/kernel.asm	/^f0105be3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0105be8	obj/kern/kernel.asm	/^f0105be8:	eb 13                	jmp    f0105bfd <debuginfo_eip+0x2fd>$/;"	l
f0105bea	obj/kern/kernel.asm	/^f0105bea:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0105bef	obj/kern/kernel.asm	/^f0105bef:	eb 0c                	jmp    f0105bfd <debuginfo_eip+0x2fd>$/;"	l
f0105bf1	obj/kern/kernel.asm	/^f0105bf1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0105bf6	obj/kern/kernel.asm	/^f0105bf6:	eb 05                	jmp    f0105bfd <debuginfo_eip+0x2fd>$/;"	l
f0105bf8	obj/kern/kernel.asm	/^f0105bf8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105bfd	obj/kern/kernel.asm	/^f0105bfd:	83 c4 4c             	add    $0x4c,%esp$/;"	l
f0105c00	obj/kern/kernel.asm	/^f0105c00:	5b                   	pop    %ebx$/;"	l
f0105c01	obj/kern/kernel.asm	/^f0105c01:	5e                   	pop    %esi$/;"	l
f0105c02	obj/kern/kernel.asm	/^f0105c02:	5f                   	pop    %edi$/;"	l
f0105c03	obj/kern/kernel.asm	/^f0105c03:	5d                   	pop    %ebp$/;"	l
f0105c04	obj/kern/kernel.asm	/^f0105c04:	c3                   	ret    $/;"	l
f0105c05	obj/kern/kernel.asm	/^f0105c05:	66 90                	xchg   %ax,%ax$/;"	l
f0105c07	obj/kern/kernel.asm	/^f0105c07:	66 90                	xchg   %ax,%ax$/;"	l
f0105c09	obj/kern/kernel.asm	/^f0105c09:	66 90                	xchg   %ax,%ax$/;"	l
f0105c0b	obj/kern/kernel.asm	/^f0105c0b:	66 90                	xchg   %ax,%ax$/;"	l
f0105c0d	obj/kern/kernel.asm	/^f0105c0d:	66 90                	xchg   %ax,%ax$/;"	l
f0105c0f	obj/kern/kernel.asm	/^f0105c0f:	90                   	nop$/;"	l
f0105c10	obj/kern/kernel.asm	/^f0105c10 <printnum>:$/;"	l
f0105c10	obj/kern/kernel.asm	/^f0105c10:	55                   	push   %ebp$/;"	l
f0105c11	obj/kern/kernel.asm	/^f0105c11:	89 e5                	mov    %esp,%ebp$/;"	l
f0105c13	obj/kern/kernel.asm	/^f0105c13:	57                   	push   %edi$/;"	l
f0105c14	obj/kern/kernel.asm	/^f0105c14:	56                   	push   %esi$/;"	l
f0105c15	obj/kern/kernel.asm	/^f0105c15:	53                   	push   %ebx$/;"	l
f0105c16	obj/kern/kernel.asm	/^f0105c16:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0105c19	obj/kern/kernel.asm	/^f0105c19:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0105c1c	obj/kern/kernel.asm	/^f0105c1c:	89 d7                	mov    %edx,%edi$/;"	l
f0105c1e	obj/kern/kernel.asm	/^f0105c1e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105c21	obj/kern/kernel.asm	/^f0105c21:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0105c24	obj/kern/kernel.asm	/^f0105c24:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105c27	obj/kern/kernel.asm	/^f0105c27:	89 c3                	mov    %eax,%ebx$/;"	l
f0105c29	obj/kern/kernel.asm	/^f0105c29:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105c2c	obj/kern/kernel.asm	/^f0105c2c:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0105c2f	obj/kern/kernel.asm	/^f0105c2f:	8b 75 14             	mov    0x14(%ebp),%esi$/;"	l
f0105c32	obj/kern/kernel.asm	/^f0105c32:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0105c37	obj/kern/kernel.asm	/^f0105c37:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0105c3a	obj/kern/kernel.asm	/^f0105c3a:	89 4d dc             	mov    %ecx,-0x24(%ebp)$/;"	l
f0105c3d	obj/kern/kernel.asm	/^f0105c3d:	39 d9                	cmp    %ebx,%ecx$/;"	l
f0105c3f	obj/kern/kernel.asm	/^f0105c3f:	72 05                	jb     f0105c46 <printnum+0x36>$/;"	l
f0105c41	obj/kern/kernel.asm	/^f0105c41:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
f0105c44	obj/kern/kernel.asm	/^f0105c44:	77 69                	ja     f0105caf <printnum+0x9f>$/;"	l
f0105c46	obj/kern/kernel.asm	/^f0105c46:	8b 4d 18             	mov    0x18(%ebp),%ecx$/;"	l
f0105c49	obj/kern/kernel.asm	/^f0105c49:	89 4c 24 10          	mov    %ecx,0x10(%esp)$/;"	l
f0105c4d	obj/kern/kernel.asm	/^f0105c4d:	83 ee 01             	sub    $0x1,%esi$/;"	l
f0105c50	obj/kern/kernel.asm	/^f0105c50:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f0105c54	obj/kern/kernel.asm	/^f0105c54:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0105c58	obj/kern/kernel.asm	/^f0105c58:	8b 44 24 08          	mov    0x8(%esp),%eax$/;"	l
f0105c5c	obj/kern/kernel.asm	/^f0105c5c:	8b 54 24 0c          	mov    0xc(%esp),%edx$/;"	l
f0105c60	obj/kern/kernel.asm	/^f0105c60:	89 c3                	mov    %eax,%ebx$/;"	l
f0105c62	obj/kern/kernel.asm	/^f0105c62:	89 d6                	mov    %edx,%esi$/;"	l
f0105c64	obj/kern/kernel.asm	/^f0105c64:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0105c67	obj/kern/kernel.asm	/^f0105c67:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
f0105c6a	obj/kern/kernel.asm	/^f0105c6a:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0105c6e	obj/kern/kernel.asm	/^f0105c6e:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f0105c72	obj/kern/kernel.asm	/^f0105c72:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105c75	obj/kern/kernel.asm	/^f0105c75:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105c78	obj/kern/kernel.asm	/^f0105c78:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0105c7b	obj/kern/kernel.asm	/^f0105c7b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105c7f	obj/kern/kernel.asm	/^f0105c7f:	e8 8c 20 00 00       	call   f0107d10 <__udivdi3>$/;"	l
f0105c84	obj/kern/kernel.asm	/^f0105c84:	89 d9                	mov    %ebx,%ecx$/;"	l
f0105c86	obj/kern/kernel.asm	/^f0105c86:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0105c8a	obj/kern/kernel.asm	/^f0105c8a:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f0105c8e	obj/kern/kernel.asm	/^f0105c8e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105c91	obj/kern/kernel.asm	/^f0105c91:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0105c95	obj/kern/kernel.asm	/^f0105c95:	89 fa                	mov    %edi,%edx$/;"	l
f0105c97	obj/kern/kernel.asm	/^f0105c97:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105c9a	obj/kern/kernel.asm	/^f0105c9a:	e8 71 ff ff ff       	call   f0105c10 <printnum>$/;"	l
f0105c9f	obj/kern/kernel.asm	/^f0105c9f:	eb 1b                	jmp    f0105cbc <printnum+0xac>$/;"	l
f0105ca1	obj/kern/kernel.asm	/^f0105ca1:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105ca5	obj/kern/kernel.asm	/^f0105ca5:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
f0105ca8	obj/kern/kernel.asm	/^f0105ca8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105cab	obj/kern/kernel.asm	/^f0105cab:	ff d3                	call   *%ebx$/;"	l
f0105cad	obj/kern/kernel.asm	/^f0105cad:	eb 03                	jmp    f0105cb2 <printnum+0xa2>$/;"	l
f0105caf	obj/kern/kernel.asm	/^f0105caf:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0105cb2	obj/kern/kernel.asm	/^f0105cb2:	83 ee 01             	sub    $0x1,%esi$/;"	l
f0105cb5	obj/kern/kernel.asm	/^f0105cb5:	85 f6                	test   %esi,%esi$/;"	l
f0105cb7	obj/kern/kernel.asm	/^f0105cb7:	7f e8                	jg     f0105ca1 <printnum+0x91>$/;"	l
f0105cb9	obj/kern/kernel.asm	/^f0105cb9:	89 5d e4             	mov    %ebx,-0x1c(%ebp)$/;"	l
f0105cbc	obj/kern/kernel.asm	/^f0105cbc:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105cc0	obj/kern/kernel.asm	/^f0105cc0:	8b 7c 24 04          	mov    0x4(%esp),%edi$/;"	l
f0105cc4	obj/kern/kernel.asm	/^f0105cc4:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0105cc7	obj/kern/kernel.asm	/^f0105cc7:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0105cca	obj/kern/kernel.asm	/^f0105cca:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0105cce	obj/kern/kernel.asm	/^f0105cce:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0105cd2	obj/kern/kernel.asm	/^f0105cd2:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105cd5	obj/kern/kernel.asm	/^f0105cd5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105cd8	obj/kern/kernel.asm	/^f0105cd8:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0105cdb	obj/kern/kernel.asm	/^f0105cdb:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105cdf	obj/kern/kernel.asm	/^f0105cdf:	e8 5c 21 00 00       	call   f0107e40 <__umoddi3>$/;"	l
f0105ce4	obj/kern/kernel.asm	/^f0105ce4:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105ce8	obj/kern/kernel.asm	/^f0105ce8:	0f be 80 76 97 10 f0 	movsbl -0xfef688a(%eax),%eax$/;"	l
f0105cef	obj/kern/kernel.asm	/^f0105cef:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105cf2	obj/kern/kernel.asm	/^f0105cf2:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105cf5	obj/kern/kernel.asm	/^f0105cf5:	ff d0                	call   *%eax$/;"	l
f0105cf7	obj/kern/kernel.asm	/^f0105cf7:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f0105cfa	obj/kern/kernel.asm	/^f0105cfa:	5b                   	pop    %ebx$/;"	l
f0105cfb	obj/kern/kernel.asm	/^f0105cfb:	5e                   	pop    %esi$/;"	l
f0105cfc	obj/kern/kernel.asm	/^f0105cfc:	5f                   	pop    %edi$/;"	l
f0105cfd	obj/kern/kernel.asm	/^f0105cfd:	5d                   	pop    %ebp$/;"	l
f0105cfe	obj/kern/kernel.asm	/^f0105cfe:	c3                   	ret    $/;"	l
f0105cff	obj/kern/kernel.asm	/^f0105cff <getuint>:$/;"	l
f0105cff	obj/kern/kernel.asm	/^f0105cff:	55                   	push   %ebp$/;"	l
f0105d00	obj/kern/kernel.asm	/^f0105d00:	89 e5                	mov    %esp,%ebp$/;"	l
f0105d02	obj/kern/kernel.asm	/^f0105d02:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f0105d05	obj/kern/kernel.asm	/^f0105d05:	7e 0e                	jle    f0105d15 <getuint+0x16>$/;"	l
f0105d07	obj/kern/kernel.asm	/^f0105d07:	8b 10                	mov    (%eax),%edx$/;"	l
f0105d09	obj/kern/kernel.asm	/^f0105d09:	8d 4a 08             	lea    0x8(%edx),%ecx$/;"	l
f0105d0c	obj/kern/kernel.asm	/^f0105d0c:	89 08                	mov    %ecx,(%eax)$/;"	l
f0105d0e	obj/kern/kernel.asm	/^f0105d0e:	8b 02                	mov    (%edx),%eax$/;"	l
f0105d10	obj/kern/kernel.asm	/^f0105d10:	8b 52 04             	mov    0x4(%edx),%edx$/;"	l
f0105d13	obj/kern/kernel.asm	/^f0105d13:	eb 22                	jmp    f0105d37 <getuint+0x38>$/;"	l
f0105d15	obj/kern/kernel.asm	/^f0105d15:	85 d2                	test   %edx,%edx$/;"	l
f0105d17	obj/kern/kernel.asm	/^f0105d17:	74 10                	je     f0105d29 <getuint+0x2a>$/;"	l
f0105d19	obj/kern/kernel.asm	/^f0105d19:	8b 10                	mov    (%eax),%edx$/;"	l
f0105d1b	obj/kern/kernel.asm	/^f0105d1b:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
f0105d1e	obj/kern/kernel.asm	/^f0105d1e:	89 08                	mov    %ecx,(%eax)$/;"	l
f0105d20	obj/kern/kernel.asm	/^f0105d20:	8b 02                	mov    (%edx),%eax$/;"	l
f0105d22	obj/kern/kernel.asm	/^f0105d22:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105d27	obj/kern/kernel.asm	/^f0105d27:	eb 0e                	jmp    f0105d37 <getuint+0x38>$/;"	l
f0105d29	obj/kern/kernel.asm	/^f0105d29:	8b 10                	mov    (%eax),%edx$/;"	l
f0105d2b	obj/kern/kernel.asm	/^f0105d2b:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
f0105d2e	obj/kern/kernel.asm	/^f0105d2e:	89 08                	mov    %ecx,(%eax)$/;"	l
f0105d30	obj/kern/kernel.asm	/^f0105d30:	8b 02                	mov    (%edx),%eax$/;"	l
f0105d32	obj/kern/kernel.asm	/^f0105d32:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105d37	obj/kern/kernel.asm	/^f0105d37:	5d                   	pop    %ebp$/;"	l
f0105d38	obj/kern/kernel.asm	/^f0105d38:	c3                   	ret    $/;"	l
f0105d39	obj/kern/kernel.asm	/^f0105d39 <sprintputch>:$/;"	l
f0105d39	obj/kern/kernel.asm	/^f0105d39:	55                   	push   %ebp$/;"	l
f0105d3a	obj/kern/kernel.asm	/^f0105d3a:	89 e5                	mov    %esp,%ebp$/;"	l
f0105d3c	obj/kern/kernel.asm	/^f0105d3c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105d3f	obj/kern/kernel.asm	/^f0105d3f:	83 40 08 01          	addl   $0x1,0x8(%eax)$/;"	l
f0105d43	obj/kern/kernel.asm	/^f0105d43:	8b 10                	mov    (%eax),%edx$/;"	l
f0105d45	obj/kern/kernel.asm	/^f0105d45:	3b 50 04             	cmp    0x4(%eax),%edx$/;"	l
f0105d48	obj/kern/kernel.asm	/^f0105d48:	73 0a                	jae    f0105d54 <sprintputch+0x1b>$/;"	l
f0105d4a	obj/kern/kernel.asm	/^f0105d4a:	8d 4a 01             	lea    0x1(%edx),%ecx$/;"	l
f0105d4d	obj/kern/kernel.asm	/^f0105d4d:	89 08                	mov    %ecx,(%eax)$/;"	l
f0105d4f	obj/kern/kernel.asm	/^f0105d4f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105d52	obj/kern/kernel.asm	/^f0105d52:	88 02                	mov    %al,(%edx)$/;"	l
f0105d54	obj/kern/kernel.asm	/^f0105d54:	5d                   	pop    %ebp$/;"	l
f0105d55	obj/kern/kernel.asm	/^f0105d55:	c3                   	ret    $/;"	l
f0105d56	obj/kern/kernel.asm	/^f0105d56 <printfmt>:$/;"	l
f0105d56	obj/kern/kernel.asm	/^f0105d56:	55                   	push   %ebp$/;"	l
f0105d57	obj/kern/kernel.asm	/^f0105d57:	89 e5                	mov    %esp,%ebp$/;"	l
f0105d59	obj/kern/kernel.asm	/^f0105d59:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0105d5c	obj/kern/kernel.asm	/^f0105d5c:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0105d5f	obj/kern/kernel.asm	/^f0105d5f:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0105d63	obj/kern/kernel.asm	/^f0105d63:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0105d66	obj/kern/kernel.asm	/^f0105d66:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0105d6a	obj/kern/kernel.asm	/^f0105d6a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105d6d	obj/kern/kernel.asm	/^f0105d6d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105d71	obj/kern/kernel.asm	/^f0105d71:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105d74	obj/kern/kernel.asm	/^f0105d74:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105d77	obj/kern/kernel.asm	/^f0105d77:	e8 02 00 00 00       	call   f0105d7e <vprintfmt>$/;"	l
f0105d7c	obj/kern/kernel.asm	/^f0105d7c:	c9                   	leave  $/;"	l
f0105d7d	obj/kern/kernel.asm	/^f0105d7d:	c3                   	ret    $/;"	l
f0105d7e	obj/kern/kernel.asm	/^f0105d7e <vprintfmt>:$/;"	l
f0105d7e	obj/kern/kernel.asm	/^f0105d7e:	55                   	push   %ebp$/;"	l
f0105d7f	obj/kern/kernel.asm	/^f0105d7f:	89 e5                	mov    %esp,%ebp$/;"	l
f0105d81	obj/kern/kernel.asm	/^f0105d81:	57                   	push   %edi$/;"	l
f0105d82	obj/kern/kernel.asm	/^f0105d82:	56                   	push   %esi$/;"	l
f0105d83	obj/kern/kernel.asm	/^f0105d83:	53                   	push   %ebx$/;"	l
f0105d84	obj/kern/kernel.asm	/^f0105d84:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0105d87	obj/kern/kernel.asm	/^f0105d87:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0105d8a	obj/kern/kernel.asm	/^f0105d8a:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0105d8d	obj/kern/kernel.asm	/^f0105d8d:	eb 1f                	jmp    f0105dae <vprintfmt+0x30>$/;"	l
f0105d8f	obj/kern/kernel.asm	/^f0105d8f:	85 c0                	test   %eax,%eax$/;"	l
f0105d91	obj/kern/kernel.asm	/^f0105d91:	75 0f                	jne    f0105da2 <vprintfmt+0x24>$/;"	l
f0105d93	obj/kern/kernel.asm	/^f0105d93:	c7 05 a0 9e 2b f0 00 	movl   $0x0,0xf02b9ea0$/;"	l
f0105d9a	obj/kern/kernel.asm	/^f0105d9a:	00 00 00 $/;"	l
f0105d9d	obj/kern/kernel.asm	/^f0105d9d:	e9 6e 04 00 00       	jmp    f0106210 <vprintfmt+0x492>$/;"	l
f0105da2	obj/kern/kernel.asm	/^f0105da2:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105da6	obj/kern/kernel.asm	/^f0105da6:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105da9	obj/kern/kernel.asm	/^f0105da9:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105dac	obj/kern/kernel.asm	/^f0105dac:	89 f3                	mov    %esi,%ebx$/;"	l
f0105dae	obj/kern/kernel.asm	/^f0105dae:	8d 73 01             	lea    0x1(%ebx),%esi$/;"	l
f0105db1	obj/kern/kernel.asm	/^f0105db1:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0105db4	obj/kern/kernel.asm	/^f0105db4:	83 f8 25             	cmp    $0x25,%eax$/;"	l
f0105db7	obj/kern/kernel.asm	/^f0105db7:	75 d6                	jne    f0105d8f <vprintfmt+0x11>$/;"	l
f0105db9	obj/kern/kernel.asm	/^f0105db9:	c6 45 d8 20          	movb   $0x20,-0x28(%ebp)$/;"	l
f0105dbd	obj/kern/kernel.asm	/^f0105dbd:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f0105dc4	obj/kern/kernel.asm	/^f0105dc4:	c7 45 d4 ff ff ff ff 	movl   $0xffffffff,-0x2c(%ebp)$/;"	l
f0105dcb	obj/kern/kernel.asm	/^f0105dcb:	c7 45 dc ff ff ff ff 	movl   $0xffffffff,-0x24(%ebp)$/;"	l
f0105dd2	obj/kern/kernel.asm	/^f0105dd2:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105dd7	obj/kern/kernel.asm	/^f0105dd7:	eb 1d                	jmp    f0105df6 <vprintfmt+0x78>$/;"	l
f0105dd9	obj/kern/kernel.asm	/^f0105dd9:	89 de                	mov    %ebx,%esi$/;"	l
f0105ddb	obj/kern/kernel.asm	/^f0105ddb:	c6 45 d8 2d          	movb   $0x2d,-0x28(%ebp)$/;"	l
f0105ddf	obj/kern/kernel.asm	/^f0105ddf:	eb 15                	jmp    f0105df6 <vprintfmt+0x78>$/;"	l
f0105de1	obj/kern/kernel.asm	/^f0105de1:	89 de                	mov    %ebx,%esi$/;"	l
f0105de3	obj/kern/kernel.asm	/^f0105de3:	c6 45 d8 30          	movb   $0x30,-0x28(%ebp)$/;"	l
f0105de7	obj/kern/kernel.asm	/^f0105de7:	eb 0d                	jmp    f0105df6 <vprintfmt+0x78>$/;"	l
f0105de9	obj/kern/kernel.asm	/^f0105de9:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0105dec	obj/kern/kernel.asm	/^f0105dec:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0105def	obj/kern/kernel.asm	/^f0105def:	c7 45 d4 ff ff ff ff 	movl   $0xffffffff,-0x2c(%ebp)$/;"	l
f0105df6	obj/kern/kernel.asm	/^f0105df6:	8d 5e 01             	lea    0x1(%esi),%ebx$/;"	l
f0105df9	obj/kern/kernel.asm	/^f0105df9:	0f b6 06             	movzbl (%esi),%eax$/;"	l
f0105dfc	obj/kern/kernel.asm	/^f0105dfc:	0f b6 c8             	movzbl %al,%ecx$/;"	l
f0105dff	obj/kern/kernel.asm	/^f0105dff:	83 e8 23             	sub    $0x23,%eax$/;"	l
f0105e02	obj/kern/kernel.asm	/^f0105e02:	3c 55                	cmp    $0x55,%al$/;"	l
f0105e04	obj/kern/kernel.asm	/^f0105e04:	0f 87 45 03 00 00    	ja     f010614f <vprintfmt+0x3d1>$/;"	l
f0105e0a	obj/kern/kernel.asm	/^f0105e0a:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0105e0d	obj/kern/kernel.asm	/^f0105e0d:	ff 24 85 c0 98 10 f0 	jmp    *-0xfef6740(,%eax,4)$/;"	l
f0105e14	obj/kern/kernel.asm	/^f0105e14:	c7 05 a0 9e 2b f0 00 	movl   $0x0,0xf02b9ea0$/;"	l
f0105e1b	obj/kern/kernel.asm	/^f0105e1b:	00 00 00 $/;"	l
f0105e1e	obj/kern/kernel.asm	/^f0105e1e:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105e23	obj/kern/kernel.asm	/^f0105e23:	e9 4a 03 00 00       	jmp    f0106172 <vprintfmt+0x3f4>$/;"	l
f0105e28	obj/kern/kernel.asm	/^f0105e28:	89 de                	mov    %ebx,%esi$/;"	l
f0105e2a	obj/kern/kernel.asm	/^f0105e2a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105e2f	obj/kern/kernel.asm	/^f0105e2f:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f0105e32	obj/kern/kernel.asm	/^f0105e32:	8d 44 41 d0          	lea    -0x30(%ecx,%eax,2),%eax$/;"	l
f0105e36	obj/kern/kernel.asm	/^f0105e36:	0f be 0e             	movsbl (%esi),%ecx$/;"	l
f0105e39	obj/kern/kernel.asm	/^f0105e39:	8d 59 d0             	lea    -0x30(%ecx),%ebx$/;"	l
f0105e3c	obj/kern/kernel.asm	/^f0105e3c:	83 fb 09             	cmp    $0x9,%ebx$/;"	l
f0105e3f	obj/kern/kernel.asm	/^f0105e3f:	77 39                	ja     f0105e7a <vprintfmt+0xfc>$/;"	l
f0105e41	obj/kern/kernel.asm	/^f0105e41:	83 c6 01             	add    $0x1,%esi$/;"	l
f0105e44	obj/kern/kernel.asm	/^f0105e44:	eb e9                	jmp    f0105e2f <vprintfmt+0xb1>$/;"	l
f0105e46	obj/kern/kernel.asm	/^f0105e46:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105e49	obj/kern/kernel.asm	/^f0105e49:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
f0105e4c	obj/kern/kernel.asm	/^f0105e4c:	89 4d 14             	mov    %ecx,0x14(%ebp)$/;"	l
f0105e4f	obj/kern/kernel.asm	/^f0105e4f:	8b 00                	mov    (%eax),%eax$/;"	l
f0105e51	obj/kern/kernel.asm	/^f0105e51:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105e54	obj/kern/kernel.asm	/^f0105e54:	89 de                	mov    %ebx,%esi$/;"	l
f0105e56	obj/kern/kernel.asm	/^f0105e56:	eb 25                	jmp    f0105e7d <vprintfmt+0xff>$/;"	l
f0105e58	obj/kern/kernel.asm	/^f0105e58:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
f0105e5b	obj/kern/kernel.asm	/^f0105e5b:	85 c9                	test   %ecx,%ecx$/;"	l
f0105e5d	obj/kern/kernel.asm	/^f0105e5d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105e62	obj/kern/kernel.asm	/^f0105e62:	0f 49 c1             	cmovns %ecx,%eax$/;"	l
f0105e65	obj/kern/kernel.asm	/^f0105e65:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0105e68	obj/kern/kernel.asm	/^f0105e68:	89 de                	mov    %ebx,%esi$/;"	l
f0105e6a	obj/kern/kernel.asm	/^f0105e6a:	eb 8a                	jmp    f0105df6 <vprintfmt+0x78>$/;"	l
f0105e6c	obj/kern/kernel.asm	/^f0105e6c:	89 de                	mov    %ebx,%esi$/;"	l
f0105e6e	obj/kern/kernel.asm	/^f0105e6e:	c7 45 e0 01 00 00 00 	movl   $0x1,-0x20(%ebp)$/;"	l
f0105e75	obj/kern/kernel.asm	/^f0105e75:	e9 7c ff ff ff       	jmp    f0105df6 <vprintfmt+0x78>$/;"	l
f0105e7a	obj/kern/kernel.asm	/^f0105e7a:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105e7d	obj/kern/kernel.asm	/^f0105e7d:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
f0105e81	obj/kern/kernel.asm	/^f0105e81:	0f 89 6f ff ff ff    	jns    f0105df6 <vprintfmt+0x78>$/;"	l
f0105e87	obj/kern/kernel.asm	/^f0105e87:	e9 5d ff ff ff       	jmp    f0105de9 <vprintfmt+0x6b>$/;"	l
f0105e8c	obj/kern/kernel.asm	/^f0105e8c:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105e8f	obj/kern/kernel.asm	/^f0105e8f:	89 de                	mov    %ebx,%esi$/;"	l
f0105e91	obj/kern/kernel.asm	/^f0105e91:	e9 60 ff ff ff       	jmp    f0105df6 <vprintfmt+0x78>$/;"	l
f0105e96	obj/kern/kernel.asm	/^f0105e96:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105e99	obj/kern/kernel.asm	/^f0105e99:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105e9c	obj/kern/kernel.asm	/^f0105e9c:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105e9f	obj/kern/kernel.asm	/^f0105e9f:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105ea3	obj/kern/kernel.asm	/^f0105ea3:	8b 00                	mov    (%eax),%eax$/;"	l
f0105ea5	obj/kern/kernel.asm	/^f0105ea5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105ea8	obj/kern/kernel.asm	/^f0105ea8:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105eab	obj/kern/kernel.asm	/^f0105eab:	e9 fe fe ff ff       	jmp    f0105dae <vprintfmt+0x30>$/;"	l
f0105eb0	obj/kern/kernel.asm	/^f0105eb0:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105eb3	obj/kern/kernel.asm	/^f0105eb3:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105eb6	obj/kern/kernel.asm	/^f0105eb6:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105eb9	obj/kern/kernel.asm	/^f0105eb9:	8b 00                	mov    (%eax),%eax$/;"	l
f0105ebb	obj/kern/kernel.asm	/^f0105ebb:	99                   	cltd   $/;"	l
f0105ebc	obj/kern/kernel.asm	/^f0105ebc:	31 d0                	xor    %edx,%eax$/;"	l
f0105ebe	obj/kern/kernel.asm	/^f0105ebe:	29 d0                	sub    %edx,%eax$/;"	l
f0105ec0	obj/kern/kernel.asm	/^f0105ec0:	83 f8 13             	cmp    $0x13,%eax$/;"	l
f0105ec3	obj/kern/kernel.asm	/^f0105ec3:	7f 0b                	jg     f0105ed0 <vprintfmt+0x152>$/;"	l
f0105ec5	obj/kern/kernel.asm	/^f0105ec5:	8b 14 85 00 9b 10 f0 	mov    -0xfef6500(,%eax,4),%edx$/;"	l
f0105ecc	obj/kern/kernel.asm	/^f0105ecc:	85 d2                	test   %edx,%edx$/;"	l
f0105ece	obj/kern/kernel.asm	/^f0105ece:	75 20                	jne    f0105ef0 <vprintfmt+0x172>$/;"	l
f0105ed0	obj/kern/kernel.asm	/^f0105ed0:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0105ed4	obj/kern/kernel.asm	/^f0105ed4:	c7 44 24 08 8e 97 10 	movl   $0xf010978e,0x8(%esp)$/;"	l
f0105edb	obj/kern/kernel.asm	/^f0105edb:	f0 $/;"	l
f0105edc	obj/kern/kernel.asm	/^f0105edc:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105ee0	obj/kern/kernel.asm	/^f0105ee0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105ee3	obj/kern/kernel.asm	/^f0105ee3:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105ee6	obj/kern/kernel.asm	/^f0105ee6:	e8 6b fe ff ff       	call   f0105d56 <printfmt>$/;"	l
f0105eeb	obj/kern/kernel.asm	/^f0105eeb:	e9 be fe ff ff       	jmp    f0105dae <vprintfmt+0x30>$/;"	l
f0105ef0	obj/kern/kernel.asm	/^f0105ef0:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0105ef4	obj/kern/kernel.asm	/^f0105ef4:	c7 44 24 08 65 8f 10 	movl   $0xf0108f65,0x8(%esp)$/;"	l
f0105efb	obj/kern/kernel.asm	/^f0105efb:	f0 $/;"	l
f0105efc	obj/kern/kernel.asm	/^f0105efc:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105f00	obj/kern/kernel.asm	/^f0105f00:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105f03	obj/kern/kernel.asm	/^f0105f03:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105f06	obj/kern/kernel.asm	/^f0105f06:	e8 4b fe ff ff       	call   f0105d56 <printfmt>$/;"	l
f0105f0b	obj/kern/kernel.asm	/^f0105f0b:	e9 9e fe ff ff       	jmp    f0105dae <vprintfmt+0x30>$/;"	l
f0105f10	obj/kern/kernel.asm	/^f0105f10:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f0105f13	obj/kern/kernel.asm	/^f0105f13:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0105f16	obj/kern/kernel.asm	/^f0105f16:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0105f19	obj/kern/kernel.asm	/^f0105f19:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105f1c	obj/kern/kernel.asm	/^f0105f1c:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105f1f	obj/kern/kernel.asm	/^f0105f1f:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105f22	obj/kern/kernel.asm	/^f0105f22:	8b 30                	mov    (%eax),%esi$/;"	l
f0105f24	obj/kern/kernel.asm	/^f0105f24:	85 f6                	test   %esi,%esi$/;"	l
f0105f26	obj/kern/kernel.asm	/^f0105f26:	b8 87 97 10 f0       	mov    $0xf0109787,%eax$/;"	l
f0105f2b	obj/kern/kernel.asm	/^f0105f2b:	0f 44 f0             	cmove  %eax,%esi$/;"	l
f0105f2e	obj/kern/kernel.asm	/^f0105f2e:	80 7d d8 2d          	cmpb   $0x2d,-0x28(%ebp)$/;"	l
f0105f32	obj/kern/kernel.asm	/^f0105f32:	0f 84 97 00 00 00    	je     f0105fcf <vprintfmt+0x251>$/;"	l
f0105f38	obj/kern/kernel.asm	/^f0105f38:	83 7d d0 00          	cmpl   $0x0,-0x30(%ebp)$/;"	l
f0105f3c	obj/kern/kernel.asm	/^f0105f3c:	0f 8e 9b 00 00 00    	jle    f0105fdd <vprintfmt+0x25f>$/;"	l
f0105f42	obj/kern/kernel.asm	/^f0105f42:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0105f46	obj/kern/kernel.asm	/^f0105f46:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0105f49	obj/kern/kernel.asm	/^f0105f49:	e8 4a 04 00 00       	call   f0106398 <strnlen>$/;"	l
f0105f4e	obj/kern/kernel.asm	/^f0105f4e:	8b 4d d0             	mov    -0x30(%ebp),%ecx$/;"	l
f0105f51	obj/kern/kernel.asm	/^f0105f51:	29 c1                	sub    %eax,%ecx$/;"	l
f0105f53	obj/kern/kernel.asm	/^f0105f53:	89 4d d0             	mov    %ecx,-0x30(%ebp)$/;"	l
f0105f56	obj/kern/kernel.asm	/^f0105f56:	0f be 45 d8          	movsbl -0x28(%ebp),%eax$/;"	l
f0105f5a	obj/kern/kernel.asm	/^f0105f5a:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0105f5d	obj/kern/kernel.asm	/^f0105f5d:	89 75 d8             	mov    %esi,-0x28(%ebp)$/;"	l
f0105f60	obj/kern/kernel.asm	/^f0105f60:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0105f63	obj/kern/kernel.asm	/^f0105f63:	89 5d 10             	mov    %ebx,0x10(%ebp)$/;"	l
f0105f66	obj/kern/kernel.asm	/^f0105f66:	89 cb                	mov    %ecx,%ebx$/;"	l
f0105f68	obj/kern/kernel.asm	/^f0105f68:	eb 0f                	jmp    f0105f79 <vprintfmt+0x1fb>$/;"	l
f0105f6a	obj/kern/kernel.asm	/^f0105f6a:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105f6e	obj/kern/kernel.asm	/^f0105f6e:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0105f71	obj/kern/kernel.asm	/^f0105f71:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105f74	obj/kern/kernel.asm	/^f0105f74:	ff d6                	call   *%esi$/;"	l
f0105f76	obj/kern/kernel.asm	/^f0105f76:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0105f79	obj/kern/kernel.asm	/^f0105f79:	85 db                	test   %ebx,%ebx$/;"	l
f0105f7b	obj/kern/kernel.asm	/^f0105f7b:	7f ed                	jg     f0105f6a <vprintfmt+0x1ec>$/;"	l
f0105f7d	obj/kern/kernel.asm	/^f0105f7d:	8b 75 d8             	mov    -0x28(%ebp),%esi$/;"	l
f0105f80	obj/kern/kernel.asm	/^f0105f80:	8b 4d d0             	mov    -0x30(%ebp),%ecx$/;"	l
f0105f83	obj/kern/kernel.asm	/^f0105f83:	85 c9                	test   %ecx,%ecx$/;"	l
f0105f85	obj/kern/kernel.asm	/^f0105f85:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105f8a	obj/kern/kernel.asm	/^f0105f8a:	0f 49 c1             	cmovns %ecx,%eax$/;"	l
f0105f8d	obj/kern/kernel.asm	/^f0105f8d:	29 c1                	sub    %eax,%ecx$/;"	l
f0105f8f	obj/kern/kernel.asm	/^f0105f8f:	89 7d 0c             	mov    %edi,0xc(%ebp)$/;"	l
f0105f92	obj/kern/kernel.asm	/^f0105f92:	89 cf                	mov    %ecx,%edi$/;"	l
f0105f94	obj/kern/kernel.asm	/^f0105f94:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0105f97	obj/kern/kernel.asm	/^f0105f97:	eb 50                	jmp    f0105fe9 <vprintfmt+0x26b>$/;"	l
f0105f99	obj/kern/kernel.asm	/^f0105f99:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
f0105f9d	obj/kern/kernel.asm	/^f0105f9d:	74 1e                	je     f0105fbd <vprintfmt+0x23f>$/;"	l
f0105f9f	obj/kern/kernel.asm	/^f0105f9f:	0f be d2             	movsbl %dl,%edx$/;"	l
f0105fa2	obj/kern/kernel.asm	/^f0105fa2:	83 ea 20             	sub    $0x20,%edx$/;"	l
f0105fa5	obj/kern/kernel.asm	/^f0105fa5:	83 fa 5e             	cmp    $0x5e,%edx$/;"	l
f0105fa8	obj/kern/kernel.asm	/^f0105fa8:	76 13                	jbe    f0105fbd <vprintfmt+0x23f>$/;"	l
f0105faa	obj/kern/kernel.asm	/^f0105faa:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105fad	obj/kern/kernel.asm	/^f0105fad:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105fb1	obj/kern/kernel.asm	/^f0105fb1:	c7 04 24 3f 00 00 00 	movl   $0x3f,(%esp)$/;"	l
f0105fb8	obj/kern/kernel.asm	/^f0105fb8:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105fbb	obj/kern/kernel.asm	/^f0105fbb:	eb 0d                	jmp    f0105fca <vprintfmt+0x24c>$/;"	l
f0105fbd	obj/kern/kernel.asm	/^f0105fbd:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0105fc0	obj/kern/kernel.asm	/^f0105fc0:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0105fc4	obj/kern/kernel.asm	/^f0105fc4:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105fc7	obj/kern/kernel.asm	/^f0105fc7:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105fca	obj/kern/kernel.asm	/^f0105fca:	83 ef 01             	sub    $0x1,%edi$/;"	l
f0105fcd	obj/kern/kernel.asm	/^f0105fcd:	eb 1a                	jmp    f0105fe9 <vprintfmt+0x26b>$/;"	l
f0105fcf	obj/kern/kernel.asm	/^f0105fcf:	89 7d 0c             	mov    %edi,0xc(%ebp)$/;"	l
f0105fd2	obj/kern/kernel.asm	/^f0105fd2:	8b 7d dc             	mov    -0x24(%ebp),%edi$/;"	l
f0105fd5	obj/kern/kernel.asm	/^f0105fd5:	89 5d 10             	mov    %ebx,0x10(%ebp)$/;"	l
f0105fd8	obj/kern/kernel.asm	/^f0105fd8:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0105fdb	obj/kern/kernel.asm	/^f0105fdb:	eb 0c                	jmp    f0105fe9 <vprintfmt+0x26b>$/;"	l
f0105fdd	obj/kern/kernel.asm	/^f0105fdd:	89 7d 0c             	mov    %edi,0xc(%ebp)$/;"	l
f0105fe0	obj/kern/kernel.asm	/^f0105fe0:	8b 7d dc             	mov    -0x24(%ebp),%edi$/;"	l
f0105fe3	obj/kern/kernel.asm	/^f0105fe3:	89 5d 10             	mov    %ebx,0x10(%ebp)$/;"	l
f0105fe6	obj/kern/kernel.asm	/^f0105fe6:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0105fe9	obj/kern/kernel.asm	/^f0105fe9:	83 c6 01             	add    $0x1,%esi$/;"	l
f0105fec	obj/kern/kernel.asm	/^f0105fec:	0f b6 56 ff          	movzbl -0x1(%esi),%edx$/;"	l
f0105ff0	obj/kern/kernel.asm	/^f0105ff0:	0f be c2             	movsbl %dl,%eax$/;"	l
f0105ff3	obj/kern/kernel.asm	/^f0105ff3:	85 c0                	test   %eax,%eax$/;"	l
f0105ff5	obj/kern/kernel.asm	/^f0105ff5:	74 27                	je     f010601e <vprintfmt+0x2a0>$/;"	l
f0105ff7	obj/kern/kernel.asm	/^f0105ff7:	85 db                	test   %ebx,%ebx$/;"	l
f0105ff9	obj/kern/kernel.asm	/^f0105ff9:	78 9e                	js     f0105f99 <vprintfmt+0x21b>$/;"	l
f0105ffb	obj/kern/kernel.asm	/^f0105ffb:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0105ffe	obj/kern/kernel.asm	/^f0105ffe:	79 99                	jns    f0105f99 <vprintfmt+0x21b>$/;"	l
f0106000	obj/kern/kernel.asm	/^f0106000:	89 f8                	mov    %edi,%eax$/;"	l
f0106002	obj/kern/kernel.asm	/^f0106002:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0106005	obj/kern/kernel.asm	/^f0106005:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0106008	obj/kern/kernel.asm	/^f0106008:	89 c3                	mov    %eax,%ebx$/;"	l
f010600a	obj/kern/kernel.asm	/^f010600a:	eb 1a                	jmp    f0106026 <vprintfmt+0x2a8>$/;"	l
f010600c	obj/kern/kernel.asm	/^f010600c:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0106010	obj/kern/kernel.asm	/^f0106010:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)$/;"	l
f0106017	obj/kern/kernel.asm	/^f0106017:	ff d6                	call   *%esi$/;"	l
f0106019	obj/kern/kernel.asm	/^f0106019:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f010601c	obj/kern/kernel.asm	/^f010601c:	eb 08                	jmp    f0106026 <vprintfmt+0x2a8>$/;"	l
f010601e	obj/kern/kernel.asm	/^f010601e:	89 fb                	mov    %edi,%ebx$/;"	l
f0106020	obj/kern/kernel.asm	/^f0106020:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0106023	obj/kern/kernel.asm	/^f0106023:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0106026	obj/kern/kernel.asm	/^f0106026:	85 db                	test   %ebx,%ebx$/;"	l
f0106028	obj/kern/kernel.asm	/^f0106028:	7f e2                	jg     f010600c <vprintfmt+0x28e>$/;"	l
f010602a	obj/kern/kernel.asm	/^f010602a:	89 75 08             	mov    %esi,0x8(%ebp)$/;"	l
f010602d	obj/kern/kernel.asm	/^f010602d:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0106030	obj/kern/kernel.asm	/^f0106030:	e9 79 fd ff ff       	jmp    f0105dae <vprintfmt+0x30>$/;"	l
f0106035	obj/kern/kernel.asm	/^f0106035:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f0106038	obj/kern/kernel.asm	/^f0106038:	7e 16                	jle    f0106050 <vprintfmt+0x2d2>$/;"	l
f010603a	obj/kern/kernel.asm	/^f010603a:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010603d	obj/kern/kernel.asm	/^f010603d:	8d 50 08             	lea    0x8(%eax),%edx$/;"	l
f0106040	obj/kern/kernel.asm	/^f0106040:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0106043	obj/kern/kernel.asm	/^f0106043:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
f0106046	obj/kern/kernel.asm	/^f0106046:	8b 00                	mov    (%eax),%eax$/;"	l
f0106048	obj/kern/kernel.asm	/^f0106048:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f010604b	obj/kern/kernel.asm	/^f010604b:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f010604e	obj/kern/kernel.asm	/^f010604e:	eb 32                	jmp    f0106082 <vprintfmt+0x304>$/;"	l
f0106050	obj/kern/kernel.asm	/^f0106050:	85 d2                	test   %edx,%edx$/;"	l
f0106052	obj/kern/kernel.asm	/^f0106052:	74 18                	je     f010606c <vprintfmt+0x2ee>$/;"	l
f0106054	obj/kern/kernel.asm	/^f0106054:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0106057	obj/kern/kernel.asm	/^f0106057:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f010605a	obj/kern/kernel.asm	/^f010605a:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f010605d	obj/kern/kernel.asm	/^f010605d:	8b 30                	mov    (%eax),%esi$/;"	l
f010605f	obj/kern/kernel.asm	/^f010605f:	89 75 e0             	mov    %esi,-0x20(%ebp)$/;"	l
f0106062	obj/kern/kernel.asm	/^f0106062:	89 f0                	mov    %esi,%eax$/;"	l
f0106064	obj/kern/kernel.asm	/^f0106064:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
f0106067	obj/kern/kernel.asm	/^f0106067:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f010606a	obj/kern/kernel.asm	/^f010606a:	eb 16                	jmp    f0106082 <vprintfmt+0x304>$/;"	l
f010606c	obj/kern/kernel.asm	/^f010606c:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010606f	obj/kern/kernel.asm	/^f010606f:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0106072	obj/kern/kernel.asm	/^f0106072:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0106075	obj/kern/kernel.asm	/^f0106075:	8b 30                	mov    (%eax),%esi$/;"	l
f0106077	obj/kern/kernel.asm	/^f0106077:	89 75 e0             	mov    %esi,-0x20(%ebp)$/;"	l
f010607a	obj/kern/kernel.asm	/^f010607a:	89 f0                	mov    %esi,%eax$/;"	l
f010607c	obj/kern/kernel.asm	/^f010607c:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
f010607f	obj/kern/kernel.asm	/^f010607f:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0106082	obj/kern/kernel.asm	/^f0106082:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0106085	obj/kern/kernel.asm	/^f0106085:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0106088	obj/kern/kernel.asm	/^f0106088:	b9 0a 00 00 00       	mov    $0xa,%ecx$/;"	l
f010608d	obj/kern/kernel.asm	/^f010608d:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f0106091	obj/kern/kernel.asm	/^f0106091:	0f 89 80 00 00 00    	jns    f0106117 <vprintfmt+0x399>$/;"	l
f0106097	obj/kern/kernel.asm	/^f0106097:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f010609b	obj/kern/kernel.asm	/^f010609b:	c7 04 24 2d 00 00 00 	movl   $0x2d,(%esp)$/;"	l
f01060a2	obj/kern/kernel.asm	/^f01060a2:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01060a5	obj/kern/kernel.asm	/^f01060a5:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01060a8	obj/kern/kernel.asm	/^f01060a8:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f01060ab	obj/kern/kernel.asm	/^f01060ab:	f7 d8                	neg    %eax$/;"	l
f01060ad	obj/kern/kernel.asm	/^f01060ad:	83 d2 00             	adc    $0x0,%edx$/;"	l
f01060b0	obj/kern/kernel.asm	/^f01060b0:	f7 da                	neg    %edx$/;"	l
f01060b2	obj/kern/kernel.asm	/^f01060b2:	b9 0a 00 00 00       	mov    $0xa,%ecx$/;"	l
f01060b7	obj/kern/kernel.asm	/^f01060b7:	eb 5e                	jmp    f0106117 <vprintfmt+0x399>$/;"	l
f01060b9	obj/kern/kernel.asm	/^f01060b9:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f01060bc	obj/kern/kernel.asm	/^f01060bc:	e8 3e fc ff ff       	call   f0105cff <getuint>$/;"	l
f01060c1	obj/kern/kernel.asm	/^f01060c1:	b9 0a 00 00 00       	mov    $0xa,%ecx$/;"	l
f01060c6	obj/kern/kernel.asm	/^f01060c6:	eb 4f                	jmp    f0106117 <vprintfmt+0x399>$/;"	l
f01060c8	obj/kern/kernel.asm	/^f01060c8:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f01060cb	obj/kern/kernel.asm	/^f01060cb:	e8 2f fc ff ff       	call   f0105cff <getuint>$/;"	l
f01060d0	obj/kern/kernel.asm	/^f01060d0:	b9 08 00 00 00       	mov    $0x8,%ecx$/;"	l
f01060d5	obj/kern/kernel.asm	/^f01060d5:	eb 40                	jmp    f0106117 <vprintfmt+0x399>$/;"	l
f01060d7	obj/kern/kernel.asm	/^f01060d7:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01060db	obj/kern/kernel.asm	/^f01060db:	c7 04 24 30 00 00 00 	movl   $0x30,(%esp)$/;"	l
f01060e2	obj/kern/kernel.asm	/^f01060e2:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01060e5	obj/kern/kernel.asm	/^f01060e5:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01060e9	obj/kern/kernel.asm	/^f01060e9:	c7 04 24 78 00 00 00 	movl   $0x78,(%esp)$/;"	l
f01060f0	obj/kern/kernel.asm	/^f01060f0:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01060f3	obj/kern/kernel.asm	/^f01060f3:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01060f6	obj/kern/kernel.asm	/^f01060f6:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f01060f9	obj/kern/kernel.asm	/^f01060f9:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f01060fc	obj/kern/kernel.asm	/^f01060fc:	8b 00                	mov    (%eax),%eax$/;"	l
f01060fe	obj/kern/kernel.asm	/^f01060fe:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106103	obj/kern/kernel.asm	/^f0106103:	b9 10 00 00 00       	mov    $0x10,%ecx$/;"	l
f0106108	obj/kern/kernel.asm	/^f0106108:	eb 0d                	jmp    f0106117 <vprintfmt+0x399>$/;"	l
f010610a	obj/kern/kernel.asm	/^f010610a:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f010610d	obj/kern/kernel.asm	/^f010610d:	e8 ed fb ff ff       	call   f0105cff <getuint>$/;"	l
f0106112	obj/kern/kernel.asm	/^f0106112:	b9 10 00 00 00       	mov    $0x10,%ecx$/;"	l
f0106117	obj/kern/kernel.asm	/^f0106117:	0f be 75 d8          	movsbl -0x28(%ebp),%esi$/;"	l
f010611b	obj/kern/kernel.asm	/^f010611b:	89 74 24 10          	mov    %esi,0x10(%esp)$/;"	l
f010611f	obj/kern/kernel.asm	/^f010611f:	8b 75 dc             	mov    -0x24(%ebp),%esi$/;"	l
f0106122	obj/kern/kernel.asm	/^f0106122:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f0106126	obj/kern/kernel.asm	/^f0106126:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f010612a	obj/kern/kernel.asm	/^f010612a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010612d	obj/kern/kernel.asm	/^f010612d:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0106131	obj/kern/kernel.asm	/^f0106131:	89 fa                	mov    %edi,%edx$/;"	l
f0106133	obj/kern/kernel.asm	/^f0106133:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106136	obj/kern/kernel.asm	/^f0106136:	e8 d5 fa ff ff       	call   f0105c10 <printnum>$/;"	l
f010613b	obj/kern/kernel.asm	/^f010613b:	e9 6e fc ff ff       	jmp    f0105dae <vprintfmt+0x30>$/;"	l
f0106140	obj/kern/kernel.asm	/^f0106140:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0106144	obj/kern/kernel.asm	/^f0106144:	89 0c 24             	mov    %ecx,(%esp)$/;"	l
f0106147	obj/kern/kernel.asm	/^f0106147:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f010614a	obj/kern/kernel.asm	/^f010614a:	e9 5f fc ff ff       	jmp    f0105dae <vprintfmt+0x30>$/;"	l
f010614f	obj/kern/kernel.asm	/^f010614f:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0106153	obj/kern/kernel.asm	/^f0106153:	c7 04 24 25 00 00 00 	movl   $0x25,(%esp)$/;"	l
f010615a	obj/kern/kernel.asm	/^f010615a:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f010615d	obj/kern/kernel.asm	/^f010615d:	89 f3                	mov    %esi,%ebx$/;"	l
f010615f	obj/kern/kernel.asm	/^f010615f:	eb 03                	jmp    f0106164 <vprintfmt+0x3e6>$/;"	l
f0106161	obj/kern/kernel.asm	/^f0106161:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0106164	obj/kern/kernel.asm	/^f0106164:	80 7b ff 25          	cmpb   $0x25,-0x1(%ebx)$/;"	l
f0106168	obj/kern/kernel.asm	/^f0106168:	75 f7                	jne    f0106161 <vprintfmt+0x3e3>$/;"	l
f010616a	obj/kern/kernel.asm	/^f010616a:	e9 3f fc ff ff       	jmp    f0105dae <vprintfmt+0x30>$/;"	l
f010616f	obj/kern/kernel.asm	/^f010616f:	83 c2 01             	add    $0x1,%edx$/;"	l
f0106172	obj/kern/kernel.asm	/^f0106172:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0106175	obj/kern/kernel.asm	/^f0106175:	0f b6 43 ff          	movzbl -0x1(%ebx),%eax$/;"	l
f0106179	obj/kern/kernel.asm	/^f0106179:	0f b6 c8             	movzbl %al,%ecx$/;"	l
f010617c	obj/kern/kernel.asm	/^f010617c:	83 e8 30             	sub    $0x30,%eax$/;"	l
f010617f	obj/kern/kernel.asm	/^f010617f:	3c 36                	cmp    $0x36,%al$/;"	l
f0106181	obj/kern/kernel.asm	/^f0106181:	0f 87 27 fc ff ff    	ja     f0105dae <vprintfmt+0x30>$/;"	l
f0106187	obj/kern/kernel.asm	/^f0106187:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010618a	obj/kern/kernel.asm	/^f010618a:	ff 24 85 18 9a 10 f0 	jmp    *-0xfef65e8(,%eax,4)$/;"	l
f0106191	obj/kern/kernel.asm	/^f0106191:	85 d2                	test   %edx,%edx$/;"	l
f0106193	obj/kern/kernel.asm	/^f0106193:	75 0e                	jne    f01061a3 <vprintfmt+0x425>$/;"	l
f0106195	obj/kern/kernel.asm	/^f0106195:	8d 41 a9             	lea    -0x57(%ecx),%eax$/;"	l
f0106198	obj/kern/kernel.asm	/^f0106198:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010619b	obj/kern/kernel.asm	/^f010619b:	09 05 a0 9e 2b f0    	or     %eax,0xf02b9ea0$/;"	l
f01061a1	obj/kern/kernel.asm	/^f01061a1:	eb cc                	jmp    f010616f <vprintfmt+0x3f1>$/;"	l
f01061a3	obj/kern/kernel.asm	/^f01061a3:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f01061a6	obj/kern/kernel.asm	/^f01061a6:	75 c7                	jne    f010616f <vprintfmt+0x3f1>$/;"	l
f01061a8	obj/kern/kernel.asm	/^f01061a8:	8d 41 a9             	lea    -0x57(%ecx),%eax$/;"	l
f01061ab	obj/kern/kernel.asm	/^f01061ab:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f01061ae	obj/kern/kernel.asm	/^f01061ae:	09 05 a0 9e 2b f0    	or     %eax,0xf02b9ea0$/;"	l
f01061b4	obj/kern/kernel.asm	/^f01061b4:	e9 f5 fb ff ff       	jmp    f0105dae <vprintfmt+0x30>$/;"	l
f01061b9	obj/kern/kernel.asm	/^f01061b9:	85 d2                	test   %edx,%edx$/;"	l
f01061bb	obj/kern/kernel.asm	/^f01061bb:	75 0e                	jne    f01061cb <vprintfmt+0x44d>$/;"	l
f01061bd	obj/kern/kernel.asm	/^f01061bd:	8d 41 c9             	lea    -0x37(%ecx),%eax$/;"	l
f01061c0	obj/kern/kernel.asm	/^f01061c0:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01061c3	obj/kern/kernel.asm	/^f01061c3:	09 05 a0 9e 2b f0    	or     %eax,0xf02b9ea0$/;"	l
f01061c9	obj/kern/kernel.asm	/^f01061c9:	eb a4                	jmp    f010616f <vprintfmt+0x3f1>$/;"	l
f01061cb	obj/kern/kernel.asm	/^f01061cb:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f01061ce	obj/kern/kernel.asm	/^f01061ce:	75 9f                	jne    f010616f <vprintfmt+0x3f1>$/;"	l
f01061d0	obj/kern/kernel.asm	/^f01061d0:	8d 41 c9             	lea    -0x37(%ecx),%eax$/;"	l
f01061d3	obj/kern/kernel.asm	/^f01061d3:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f01061d6	obj/kern/kernel.asm	/^f01061d6:	09 05 a0 9e 2b f0    	or     %eax,0xf02b9ea0$/;"	l
f01061dc	obj/kern/kernel.asm	/^f01061dc:	e9 cd fb ff ff       	jmp    f0105dae <vprintfmt+0x30>$/;"	l
f01061e1	obj/kern/kernel.asm	/^f01061e1:	85 d2                	test   %edx,%edx$/;"	l
f01061e3	obj/kern/kernel.asm	/^f01061e3:	75 11                	jne    f01061f6 <vprintfmt+0x478>$/;"	l
f01061e5	obj/kern/kernel.asm	/^f01061e5:	8d 41 d0             	lea    -0x30(%ecx),%eax$/;"	l
f01061e8	obj/kern/kernel.asm	/^f01061e8:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01061eb	obj/kern/kernel.asm	/^f01061eb:	09 05 a0 9e 2b f0    	or     %eax,0xf02b9ea0$/;"	l
f01061f1	obj/kern/kernel.asm	/^f01061f1:	e9 79 ff ff ff       	jmp    f010616f <vprintfmt+0x3f1>$/;"	l
f01061f6	obj/kern/kernel.asm	/^f01061f6:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f01061f9	obj/kern/kernel.asm	/^f01061f9:	0f 85 70 ff ff ff    	jne    f010616f <vprintfmt+0x3f1>$/;"	l
f01061ff	obj/kern/kernel.asm	/^f01061ff:	8d 41 d0             	lea    -0x30(%ecx),%eax$/;"	l
f0106202	obj/kern/kernel.asm	/^f0106202:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f0106205	obj/kern/kernel.asm	/^f0106205:	09 05 a0 9e 2b f0    	or     %eax,0xf02b9ea0$/;"	l
f010620b	obj/kern/kernel.asm	/^f010620b:	e9 9e fb ff ff       	jmp    f0105dae <vprintfmt+0x30>$/;"	l
f0106210	obj/kern/kernel.asm	/^f0106210:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f0106213	obj/kern/kernel.asm	/^f0106213:	5b                   	pop    %ebx$/;"	l
f0106214	obj/kern/kernel.asm	/^f0106214:	5e                   	pop    %esi$/;"	l
f0106215	obj/kern/kernel.asm	/^f0106215:	5f                   	pop    %edi$/;"	l
f0106216	obj/kern/kernel.asm	/^f0106216:	5d                   	pop    %ebp$/;"	l
f0106217	obj/kern/kernel.asm	/^f0106217:	c3                   	ret    $/;"	l
f0106218	obj/kern/kernel.asm	/^f0106218 <vsnprintf>:$/;"	l
f0106218	obj/kern/kernel.asm	/^f0106218:	55                   	push   %ebp$/;"	l
f0106219	obj/kern/kernel.asm	/^f0106219:	89 e5                	mov    %esp,%ebp$/;"	l
f010621b	obj/kern/kernel.asm	/^f010621b:	83 ec 28             	sub    $0x28,%esp$/;"	l
f010621e	obj/kern/kernel.asm	/^f010621e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106221	obj/kern/kernel.asm	/^f0106221:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0106224	obj/kern/kernel.asm	/^f0106224:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0106227	obj/kern/kernel.asm	/^f0106227:	8d 4c 10 ff          	lea    -0x1(%eax,%edx,1),%ecx$/;"	l
f010622b	obj/kern/kernel.asm	/^f010622b:	89 4d f0             	mov    %ecx,-0x10(%ebp)$/;"	l
f010622e	obj/kern/kernel.asm	/^f010622e:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0106235	obj/kern/kernel.asm	/^f0106235:	85 c0                	test   %eax,%eax$/;"	l
f0106237	obj/kern/kernel.asm	/^f0106237:	74 30                	je     f0106269 <vsnprintf+0x51>$/;"	l
f0106239	obj/kern/kernel.asm	/^f0106239:	85 d2                	test   %edx,%edx$/;"	l
f010623b	obj/kern/kernel.asm	/^f010623b:	7e 2c                	jle    f0106269 <vsnprintf+0x51>$/;"	l
f010623d	obj/kern/kernel.asm	/^f010623d:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0106240	obj/kern/kernel.asm	/^f0106240:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0106244	obj/kern/kernel.asm	/^f0106244:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0106247	obj/kern/kernel.asm	/^f0106247:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010624b	obj/kern/kernel.asm	/^f010624b:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
f010624e	obj/kern/kernel.asm	/^f010624e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106252	obj/kern/kernel.asm	/^f0106252:	c7 04 24 39 5d 10 f0 	movl   $0xf0105d39,(%esp)$/;"	l
f0106259	obj/kern/kernel.asm	/^f0106259:	e8 20 fb ff ff       	call   f0105d7e <vprintfmt>$/;"	l
f010625e	obj/kern/kernel.asm	/^f010625e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0106261	obj/kern/kernel.asm	/^f0106261:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f0106264	obj/kern/kernel.asm	/^f0106264:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0106267	obj/kern/kernel.asm	/^f0106267:	eb 05                	jmp    f010626e <vsnprintf+0x56>$/;"	l
f0106269	obj/kern/kernel.asm	/^f0106269:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f010626e	obj/kern/kernel.asm	/^f010626e:	c9                   	leave  $/;"	l
f010626f	obj/kern/kernel.asm	/^f010626f:	c3                   	ret    $/;"	l
f0106270	obj/kern/kernel.asm	/^f0106270 <snprintf>:$/;"	l
f0106270	obj/kern/kernel.asm	/^f0106270:	55                   	push   %ebp$/;"	l
f0106271	obj/kern/kernel.asm	/^f0106271:	89 e5                	mov    %esp,%ebp$/;"	l
f0106273	obj/kern/kernel.asm	/^f0106273:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0106276	obj/kern/kernel.asm	/^f0106276:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0106279	obj/kern/kernel.asm	/^f0106279:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010627d	obj/kern/kernel.asm	/^f010627d:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0106280	obj/kern/kernel.asm	/^f0106280:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0106284	obj/kern/kernel.asm	/^f0106284:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0106287	obj/kern/kernel.asm	/^f0106287:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010628b	obj/kern/kernel.asm	/^f010628b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010628e	obj/kern/kernel.asm	/^f010628e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106291	obj/kern/kernel.asm	/^f0106291:	e8 82 ff ff ff       	call   f0106218 <vsnprintf>$/;"	l
f0106296	obj/kern/kernel.asm	/^f0106296:	c9                   	leave  $/;"	l
f0106297	obj/kern/kernel.asm	/^f0106297:	c3                   	ret    $/;"	l
f0106298	obj/kern/kernel.asm	/^f0106298:	66 90                	xchg   %ax,%ax$/;"	l
f010629a	obj/kern/kernel.asm	/^f010629a:	66 90                	xchg   %ax,%ax$/;"	l
f010629c	obj/kern/kernel.asm	/^f010629c:	66 90                	xchg   %ax,%ax$/;"	l
f010629e	obj/kern/kernel.asm	/^f010629e:	66 90                	xchg   %ax,%ax$/;"	l
f01062a0	obj/kern/kernel.asm	/^f01062a0 <readline>:$/;"	l
f01062a0	obj/kern/kernel.asm	/^f01062a0:	55                   	push   %ebp$/;"	l
f01062a1	obj/kern/kernel.asm	/^f01062a1:	89 e5                	mov    %esp,%ebp$/;"	l
f01062a3	obj/kern/kernel.asm	/^f01062a3:	57                   	push   %edi$/;"	l
f01062a4	obj/kern/kernel.asm	/^f01062a4:	56                   	push   %esi$/;"	l
f01062a5	obj/kern/kernel.asm	/^f01062a5:	53                   	push   %ebx$/;"	l
f01062a6	obj/kern/kernel.asm	/^f01062a6:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01062a9	obj/kern/kernel.asm	/^f01062a9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01062ac	obj/kern/kernel.asm	/^f01062ac:	85 c0                	test   %eax,%eax$/;"	l
f01062ae	obj/kern/kernel.asm	/^f01062ae:	74 10                	je     f01062c0 <readline+0x20>$/;"	l
f01062b0	obj/kern/kernel.asm	/^f01062b0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01062b4	obj/kern/kernel.asm	/^f01062b4:	c7 04 24 65 8f 10 f0 	movl   $0xf0108f65,(%esp)$/;"	l
f01062bb	obj/kern/kernel.asm	/^f01062bb:	e8 2c dd ff ff       	call   f0103fec <cprintf>$/;"	l
f01062c0	obj/kern/kernel.asm	/^f01062c0:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01062c7	obj/kern/kernel.asm	/^f01062c7:	e8 45 a5 ff ff       	call   f0100811 <iscons>$/;"	l
f01062cc	obj/kern/kernel.asm	/^f01062cc:	89 c7                	mov    %eax,%edi$/;"	l
f01062ce	obj/kern/kernel.asm	/^f01062ce:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f01062d3	obj/kern/kernel.asm	/^f01062d3:	e8 28 a5 ff ff       	call   f0100800 <getchar>$/;"	l
f01062d8	obj/kern/kernel.asm	/^f01062d8:	89 c3                	mov    %eax,%ebx$/;"	l
f01062da	obj/kern/kernel.asm	/^f01062da:	85 c0                	test   %eax,%eax$/;"	l
f01062dc	obj/kern/kernel.asm	/^f01062dc:	79 25                	jns    f0106303 <readline+0x63>$/;"	l
f01062de	obj/kern/kernel.asm	/^f01062de:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01062e3	obj/kern/kernel.asm	/^f01062e3:	83 fb f8             	cmp    $0xfffffff8,%ebx$/;"	l
f01062e6	obj/kern/kernel.asm	/^f01062e6:	0f 84 89 00 00 00    	je     f0106375 <readline+0xd5>$/;"	l
f01062ec	obj/kern/kernel.asm	/^f01062ec:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01062f0	obj/kern/kernel.asm	/^f01062f0:	c7 04 24 6f 9b 10 f0 	movl   $0xf0109b6f,(%esp)$/;"	l
f01062f7	obj/kern/kernel.asm	/^f01062f7:	e8 f0 dc ff ff       	call   f0103fec <cprintf>$/;"	l
f01062fc	obj/kern/kernel.asm	/^f01062fc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106301	obj/kern/kernel.asm	/^f0106301:	eb 72                	jmp    f0106375 <readline+0xd5>$/;"	l
f0106303	obj/kern/kernel.asm	/^f0106303:	83 f8 7f             	cmp    $0x7f,%eax$/;"	l
f0106306	obj/kern/kernel.asm	/^f0106306:	74 05                	je     f010630d <readline+0x6d>$/;"	l
f0106308	obj/kern/kernel.asm	/^f0106308:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f010630b	obj/kern/kernel.asm	/^f010630b:	75 1a                	jne    f0106327 <readline+0x87>$/;"	l
f010630d	obj/kern/kernel.asm	/^f010630d:	85 f6                	test   %esi,%esi$/;"	l
f010630f	obj/kern/kernel.asm	/^f010630f:	90                   	nop$/;"	l
f0106310	obj/kern/kernel.asm	/^f0106310:	7e 15                	jle    f0106327 <readline+0x87>$/;"	l
f0106312	obj/kern/kernel.asm	/^f0106312:	85 ff                	test   %edi,%edi$/;"	l
f0106314	obj/kern/kernel.asm	/^f0106314:	74 0c                	je     f0106322 <readline+0x82>$/;"	l
f0106316	obj/kern/kernel.asm	/^f0106316:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)$/;"	l
f010631d	obj/kern/kernel.asm	/^f010631d:	e8 ce a4 ff ff       	call   f01007f0 <cputchar>$/;"	l
f0106322	obj/kern/kernel.asm	/^f0106322:	83 ee 01             	sub    $0x1,%esi$/;"	l
f0106325	obj/kern/kernel.asm	/^f0106325:	eb ac                	jmp    f01062d3 <readline+0x33>$/;"	l
f0106327	obj/kern/kernel.asm	/^f0106327:	81 fe fe 03 00 00    	cmp    $0x3fe,%esi$/;"	l
f010632d	obj/kern/kernel.asm	/^f010632d:	7f 1c                	jg     f010634b <readline+0xab>$/;"	l
f010632f	obj/kern/kernel.asm	/^f010632f:	83 fb 1f             	cmp    $0x1f,%ebx$/;"	l
f0106332	obj/kern/kernel.asm	/^f0106332:	7e 17                	jle    f010634b <readline+0xab>$/;"	l
f0106334	obj/kern/kernel.asm	/^f0106334:	85 ff                	test   %edi,%edi$/;"	l
f0106336	obj/kern/kernel.asm	/^f0106336:	74 08                	je     f0106340 <readline+0xa0>$/;"	l
f0106338	obj/kern/kernel.asm	/^f0106338:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010633b	obj/kern/kernel.asm	/^f010633b:	e8 b0 a4 ff ff       	call   f01007f0 <cputchar>$/;"	l
f0106340	obj/kern/kernel.asm	/^f0106340:	88 9e 80 9a 2b f0    	mov    %bl,-0xfd46580(%esi)$/;"	l
f0106346	obj/kern/kernel.asm	/^f0106346:	8d 76 01             	lea    0x1(%esi),%esi$/;"	l
f0106349	obj/kern/kernel.asm	/^f0106349:	eb 88                	jmp    f01062d3 <readline+0x33>$/;"	l
f010634b	obj/kern/kernel.asm	/^f010634b:	83 fb 0d             	cmp    $0xd,%ebx$/;"	l
f010634e	obj/kern/kernel.asm	/^f010634e:	74 09                	je     f0106359 <readline+0xb9>$/;"	l
f0106350	obj/kern/kernel.asm	/^f0106350:	83 fb 0a             	cmp    $0xa,%ebx$/;"	l
f0106353	obj/kern/kernel.asm	/^f0106353:	0f 85 7a ff ff ff    	jne    f01062d3 <readline+0x33>$/;"	l
f0106359	obj/kern/kernel.asm	/^f0106359:	85 ff                	test   %edi,%edi$/;"	l
f010635b	obj/kern/kernel.asm	/^f010635b:	74 0c                	je     f0106369 <readline+0xc9>$/;"	l
f010635d	obj/kern/kernel.asm	/^f010635d:	c7 04 24 0a 00 00 00 	movl   $0xa,(%esp)$/;"	l
f0106364	obj/kern/kernel.asm	/^f0106364:	e8 87 a4 ff ff       	call   f01007f0 <cputchar>$/;"	l
f0106369	obj/kern/kernel.asm	/^f0106369:	c6 86 80 9a 2b f0 00 	movb   $0x0,-0xfd46580(%esi)$/;"	l
f0106370	obj/kern/kernel.asm	/^f0106370:	b8 80 9a 2b f0       	mov    $0xf02b9a80,%eax$/;"	l
f0106375	obj/kern/kernel.asm	/^f0106375:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0106378	obj/kern/kernel.asm	/^f0106378:	5b                   	pop    %ebx$/;"	l
f0106379	obj/kern/kernel.asm	/^f0106379:	5e                   	pop    %esi$/;"	l
f010637a	obj/kern/kernel.asm	/^f010637a:	5f                   	pop    %edi$/;"	l
f010637b	obj/kern/kernel.asm	/^f010637b:	5d                   	pop    %ebp$/;"	l
f010637c	obj/kern/kernel.asm	/^f010637c:	c3                   	ret    $/;"	l
f010637d	obj/kern/kernel.asm	/^f010637d:	66 90                	xchg   %ax,%ax$/;"	l
f010637f	obj/kern/kernel.asm	/^f010637f:	90                   	nop$/;"	l
f0106380	obj/kern/kernel.asm	/^f0106380 <strlen>:$/;"	l
f0106380	obj/kern/kernel.asm	/^f0106380:	55                   	push   %ebp$/;"	l
f0106381	obj/kern/kernel.asm	/^f0106381:	89 e5                	mov    %esp,%ebp$/;"	l
f0106383	obj/kern/kernel.asm	/^f0106383:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0106386	obj/kern/kernel.asm	/^f0106386:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010638b	obj/kern/kernel.asm	/^f010638b:	eb 03                	jmp    f0106390 <strlen+0x10>$/;"	l
f010638d	obj/kern/kernel.asm	/^f010638d:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106390	obj/kern/kernel.asm	/^f0106390:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)$/;"	l
f0106394	obj/kern/kernel.asm	/^f0106394:	75 f7                	jne    f010638d <strlen+0xd>$/;"	l
f0106396	obj/kern/kernel.asm	/^f0106396:	5d                   	pop    %ebp$/;"	l
f0106397	obj/kern/kernel.asm	/^f0106397:	c3                   	ret    $/;"	l
f0106398	obj/kern/kernel.asm	/^f0106398 <strnlen>:$/;"	l
f0106398	obj/kern/kernel.asm	/^f0106398:	55                   	push   %ebp$/;"	l
f0106399	obj/kern/kernel.asm	/^f0106399:	89 e5                	mov    %esp,%ebp$/;"	l
f010639b	obj/kern/kernel.asm	/^f010639b:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f010639e	obj/kern/kernel.asm	/^f010639e:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01063a1	obj/kern/kernel.asm	/^f01063a1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01063a6	obj/kern/kernel.asm	/^f01063a6:	eb 03                	jmp    f01063ab <strnlen+0x13>$/;"	l
f01063a8	obj/kern/kernel.asm	/^f01063a8:	83 c0 01             	add    $0x1,%eax$/;"	l
f01063ab	obj/kern/kernel.asm	/^f01063ab:	39 d0                	cmp    %edx,%eax$/;"	l
f01063ad	obj/kern/kernel.asm	/^f01063ad:	74 06                	je     f01063b5 <strnlen+0x1d>$/;"	l
f01063af	obj/kern/kernel.asm	/^f01063af:	80 3c 01 00          	cmpb   $0x0,(%ecx,%eax,1)$/;"	l
f01063b3	obj/kern/kernel.asm	/^f01063b3:	75 f3                	jne    f01063a8 <strnlen+0x10>$/;"	l
f01063b5	obj/kern/kernel.asm	/^f01063b5:	5d                   	pop    %ebp$/;"	l
f01063b6	obj/kern/kernel.asm	/^f01063b6:	c3                   	ret    $/;"	l
f01063b7	obj/kern/kernel.asm	/^f01063b7 <strcpy>:$/;"	l
f01063b7	obj/kern/kernel.asm	/^f01063b7:	55                   	push   %ebp$/;"	l
f01063b8	obj/kern/kernel.asm	/^f01063b8:	89 e5                	mov    %esp,%ebp$/;"	l
f01063ba	obj/kern/kernel.asm	/^f01063ba:	53                   	push   %ebx$/;"	l
f01063bb	obj/kern/kernel.asm	/^f01063bb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01063be	obj/kern/kernel.asm	/^f01063be:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f01063c1	obj/kern/kernel.asm	/^f01063c1:	89 c2                	mov    %eax,%edx$/;"	l
f01063c3	obj/kern/kernel.asm	/^f01063c3:	83 c2 01             	add    $0x1,%edx$/;"	l
f01063c6	obj/kern/kernel.asm	/^f01063c6:	83 c1 01             	add    $0x1,%ecx$/;"	l
f01063c9	obj/kern/kernel.asm	/^f01063c9:	0f b6 59 ff          	movzbl -0x1(%ecx),%ebx$/;"	l
f01063cd	obj/kern/kernel.asm	/^f01063cd:	88 5a ff             	mov    %bl,-0x1(%edx)$/;"	l
f01063d0	obj/kern/kernel.asm	/^f01063d0:	84 db                	test   %bl,%bl$/;"	l
f01063d2	obj/kern/kernel.asm	/^f01063d2:	75 ef                	jne    f01063c3 <strcpy+0xc>$/;"	l
f01063d4	obj/kern/kernel.asm	/^f01063d4:	5b                   	pop    %ebx$/;"	l
f01063d5	obj/kern/kernel.asm	/^f01063d5:	5d                   	pop    %ebp$/;"	l
f01063d6	obj/kern/kernel.asm	/^f01063d6:	c3                   	ret    $/;"	l
f01063d7	obj/kern/kernel.asm	/^f01063d7 <strcat>:$/;"	l
f01063d7	obj/kern/kernel.asm	/^f01063d7:	55                   	push   %ebp$/;"	l
f01063d8	obj/kern/kernel.asm	/^f01063d8:	89 e5                	mov    %esp,%ebp$/;"	l
f01063da	obj/kern/kernel.asm	/^f01063da:	53                   	push   %ebx$/;"	l
f01063db	obj/kern/kernel.asm	/^f01063db:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01063de	obj/kern/kernel.asm	/^f01063de:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01063e1	obj/kern/kernel.asm	/^f01063e1:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01063e4	obj/kern/kernel.asm	/^f01063e4:	e8 97 ff ff ff       	call   f0106380 <strlen>$/;"	l
f01063e9	obj/kern/kernel.asm	/^f01063e9:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01063ec	obj/kern/kernel.asm	/^f01063ec:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01063f0	obj/kern/kernel.asm	/^f01063f0:	01 d8                	add    %ebx,%eax$/;"	l
f01063f2	obj/kern/kernel.asm	/^f01063f2:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01063f5	obj/kern/kernel.asm	/^f01063f5:	e8 bd ff ff ff       	call   f01063b7 <strcpy>$/;"	l
f01063fa	obj/kern/kernel.asm	/^f01063fa:	89 d8                	mov    %ebx,%eax$/;"	l
f01063fc	obj/kern/kernel.asm	/^f01063fc:	83 c4 08             	add    $0x8,%esp$/;"	l
f01063ff	obj/kern/kernel.asm	/^f01063ff:	5b                   	pop    %ebx$/;"	l
f0106400	obj/kern/kernel.asm	/^f0106400:	5d                   	pop    %ebp$/;"	l
f0106401	obj/kern/kernel.asm	/^f0106401:	c3                   	ret    $/;"	l
f0106402	obj/kern/kernel.asm	/^f0106402 <strncpy>:$/;"	l
f0106402	obj/kern/kernel.asm	/^f0106402:	55                   	push   %ebp$/;"	l
f0106403	obj/kern/kernel.asm	/^f0106403:	89 e5                	mov    %esp,%ebp$/;"	l
f0106405	obj/kern/kernel.asm	/^f0106405:	56                   	push   %esi$/;"	l
f0106406	obj/kern/kernel.asm	/^f0106406:	53                   	push   %ebx$/;"	l
f0106407	obj/kern/kernel.asm	/^f0106407:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f010640a	obj/kern/kernel.asm	/^f010640a:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f010640d	obj/kern/kernel.asm	/^f010640d:	89 f3                	mov    %esi,%ebx$/;"	l
f010640f	obj/kern/kernel.asm	/^f010640f:	03 5d 10             	add    0x10(%ebp),%ebx$/;"	l
f0106412	obj/kern/kernel.asm	/^f0106412:	89 f2                	mov    %esi,%edx$/;"	l
f0106414	obj/kern/kernel.asm	/^f0106414:	eb 0f                	jmp    f0106425 <strncpy+0x23>$/;"	l
f0106416	obj/kern/kernel.asm	/^f0106416:	83 c2 01             	add    $0x1,%edx$/;"	l
f0106419	obj/kern/kernel.asm	/^f0106419:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f010641c	obj/kern/kernel.asm	/^f010641c:	88 42 ff             	mov    %al,-0x1(%edx)$/;"	l
f010641f	obj/kern/kernel.asm	/^f010641f:	80 39 01             	cmpb   $0x1,(%ecx)$/;"	l
f0106422	obj/kern/kernel.asm	/^f0106422:	83 d9 ff             	sbb    $0xffffffff,%ecx$/;"	l
f0106425	obj/kern/kernel.asm	/^f0106425:	39 da                	cmp    %ebx,%edx$/;"	l
f0106427	obj/kern/kernel.asm	/^f0106427:	75 ed                	jne    f0106416 <strncpy+0x14>$/;"	l
f0106429	obj/kern/kernel.asm	/^f0106429:	89 f0                	mov    %esi,%eax$/;"	l
f010642b	obj/kern/kernel.asm	/^f010642b:	5b                   	pop    %ebx$/;"	l
f010642c	obj/kern/kernel.asm	/^f010642c:	5e                   	pop    %esi$/;"	l
f010642d	obj/kern/kernel.asm	/^f010642d:	5d                   	pop    %ebp$/;"	l
f010642e	obj/kern/kernel.asm	/^f010642e:	c3                   	ret    $/;"	l
f010642f	obj/kern/kernel.asm	/^f010642f <strlcpy>:$/;"	l
f010642f	obj/kern/kernel.asm	/^f010642f:	55                   	push   %ebp$/;"	l
f0106430	obj/kern/kernel.asm	/^f0106430:	89 e5                	mov    %esp,%ebp$/;"	l
f0106432	obj/kern/kernel.asm	/^f0106432:	56                   	push   %esi$/;"	l
f0106433	obj/kern/kernel.asm	/^f0106433:	53                   	push   %ebx$/;"	l
f0106434	obj/kern/kernel.asm	/^f0106434:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0106437	obj/kern/kernel.asm	/^f0106437:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010643a	obj/kern/kernel.asm	/^f010643a:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f010643d	obj/kern/kernel.asm	/^f010643d:	89 f0                	mov    %esi,%eax$/;"	l
f010643f	obj/kern/kernel.asm	/^f010643f:	8d 5c 0e ff          	lea    -0x1(%esi,%ecx,1),%ebx$/;"	l
f0106443	obj/kern/kernel.asm	/^f0106443:	85 c9                	test   %ecx,%ecx$/;"	l
f0106445	obj/kern/kernel.asm	/^f0106445:	75 0b                	jne    f0106452 <strlcpy+0x23>$/;"	l
f0106447	obj/kern/kernel.asm	/^f0106447:	eb 1d                	jmp    f0106466 <strlcpy+0x37>$/;"	l
f0106449	obj/kern/kernel.asm	/^f0106449:	83 c0 01             	add    $0x1,%eax$/;"	l
f010644c	obj/kern/kernel.asm	/^f010644c:	83 c2 01             	add    $0x1,%edx$/;"	l
f010644f	obj/kern/kernel.asm	/^f010644f:	88 48 ff             	mov    %cl,-0x1(%eax)$/;"	l
f0106452	obj/kern/kernel.asm	/^f0106452:	39 d8                	cmp    %ebx,%eax$/;"	l
f0106454	obj/kern/kernel.asm	/^f0106454:	74 0b                	je     f0106461 <strlcpy+0x32>$/;"	l
f0106456	obj/kern/kernel.asm	/^f0106456:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f0106459	obj/kern/kernel.asm	/^f0106459:	84 c9                	test   %cl,%cl$/;"	l
f010645b	obj/kern/kernel.asm	/^f010645b:	75 ec                	jne    f0106449 <strlcpy+0x1a>$/;"	l
f010645d	obj/kern/kernel.asm	/^f010645d:	89 c2                	mov    %eax,%edx$/;"	l
f010645f	obj/kern/kernel.asm	/^f010645f:	eb 02                	jmp    f0106463 <strlcpy+0x34>$/;"	l
f0106461	obj/kern/kernel.asm	/^f0106461:	89 c2                	mov    %eax,%edx$/;"	l
f0106463	obj/kern/kernel.asm	/^f0106463:	c6 02 00             	movb   $0x0,(%edx)$/;"	l
f0106466	obj/kern/kernel.asm	/^f0106466:	29 f0                	sub    %esi,%eax$/;"	l
f0106468	obj/kern/kernel.asm	/^f0106468:	5b                   	pop    %ebx$/;"	l
f0106469	obj/kern/kernel.asm	/^f0106469:	5e                   	pop    %esi$/;"	l
f010646a	obj/kern/kernel.asm	/^f010646a:	5d                   	pop    %ebp$/;"	l
f010646b	obj/kern/kernel.asm	/^f010646b:	c3                   	ret    $/;"	l
f010646c	obj/kern/kernel.asm	/^f010646c <strcmp>:$/;"	l
f010646c	obj/kern/kernel.asm	/^f010646c:	55                   	push   %ebp$/;"	l
f010646d	obj/kern/kernel.asm	/^f010646d:	89 e5                	mov    %esp,%ebp$/;"	l
f010646f	obj/kern/kernel.asm	/^f010646f:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0106472	obj/kern/kernel.asm	/^f0106472:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0106475	obj/kern/kernel.asm	/^f0106475:	eb 06                	jmp    f010647d <strcmp+0x11>$/;"	l
f0106477	obj/kern/kernel.asm	/^f0106477:	83 c1 01             	add    $0x1,%ecx$/;"	l
f010647a	obj/kern/kernel.asm	/^f010647a:	83 c2 01             	add    $0x1,%edx$/;"	l
f010647d	obj/kern/kernel.asm	/^f010647d:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f0106480	obj/kern/kernel.asm	/^f0106480:	84 c0                	test   %al,%al$/;"	l
f0106482	obj/kern/kernel.asm	/^f0106482:	74 04                	je     f0106488 <strcmp+0x1c>$/;"	l
f0106484	obj/kern/kernel.asm	/^f0106484:	3a 02                	cmp    (%edx),%al$/;"	l
f0106486	obj/kern/kernel.asm	/^f0106486:	74 ef                	je     f0106477 <strcmp+0xb>$/;"	l
f0106488	obj/kern/kernel.asm	/^f0106488:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010648b	obj/kern/kernel.asm	/^f010648b:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f010648e	obj/kern/kernel.asm	/^f010648e:	29 d0                	sub    %edx,%eax$/;"	l
f0106490	obj/kern/kernel.asm	/^f0106490:	5d                   	pop    %ebp$/;"	l
f0106491	obj/kern/kernel.asm	/^f0106491:	c3                   	ret    $/;"	l
f0106492	obj/kern/kernel.asm	/^f0106492 <strncmp>:$/;"	l
f0106492	obj/kern/kernel.asm	/^f0106492:	55                   	push   %ebp$/;"	l
f0106493	obj/kern/kernel.asm	/^f0106493:	89 e5                	mov    %esp,%ebp$/;"	l
f0106495	obj/kern/kernel.asm	/^f0106495:	53                   	push   %ebx$/;"	l
f0106496	obj/kern/kernel.asm	/^f0106496:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106499	obj/kern/kernel.asm	/^f0106499:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010649c	obj/kern/kernel.asm	/^f010649c:	89 c3                	mov    %eax,%ebx$/;"	l
f010649e	obj/kern/kernel.asm	/^f010649e:	03 5d 10             	add    0x10(%ebp),%ebx$/;"	l
f01064a1	obj/kern/kernel.asm	/^f01064a1:	eb 06                	jmp    f01064a9 <strncmp+0x17>$/;"	l
f01064a3	obj/kern/kernel.asm	/^f01064a3:	83 c0 01             	add    $0x1,%eax$/;"	l
f01064a6	obj/kern/kernel.asm	/^f01064a6:	83 c2 01             	add    $0x1,%edx$/;"	l
f01064a9	obj/kern/kernel.asm	/^f01064a9:	39 d8                	cmp    %ebx,%eax$/;"	l
f01064ab	obj/kern/kernel.asm	/^f01064ab:	74 15                	je     f01064c2 <strncmp+0x30>$/;"	l
f01064ad	obj/kern/kernel.asm	/^f01064ad:	0f b6 08             	movzbl (%eax),%ecx$/;"	l
f01064b0	obj/kern/kernel.asm	/^f01064b0:	84 c9                	test   %cl,%cl$/;"	l
f01064b2	obj/kern/kernel.asm	/^f01064b2:	74 04                	je     f01064b8 <strncmp+0x26>$/;"	l
f01064b4	obj/kern/kernel.asm	/^f01064b4:	3a 0a                	cmp    (%edx),%cl$/;"	l
f01064b6	obj/kern/kernel.asm	/^f01064b6:	74 eb                	je     f01064a3 <strncmp+0x11>$/;"	l
f01064b8	obj/kern/kernel.asm	/^f01064b8:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f01064bb	obj/kern/kernel.asm	/^f01064bb:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f01064be	obj/kern/kernel.asm	/^f01064be:	29 d0                	sub    %edx,%eax$/;"	l
f01064c0	obj/kern/kernel.asm	/^f01064c0:	eb 05                	jmp    f01064c7 <strncmp+0x35>$/;"	l
f01064c2	obj/kern/kernel.asm	/^f01064c2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01064c7	obj/kern/kernel.asm	/^f01064c7:	5b                   	pop    %ebx$/;"	l
f01064c8	obj/kern/kernel.asm	/^f01064c8:	5d                   	pop    %ebp$/;"	l
f01064c9	obj/kern/kernel.asm	/^f01064c9:	c3                   	ret    $/;"	l
f01064ca	obj/kern/kernel.asm	/^f01064ca <strchr>:$/;"	l
f01064ca	obj/kern/kernel.asm	/^f01064ca:	55                   	push   %ebp$/;"	l
f01064cb	obj/kern/kernel.asm	/^f01064cb:	89 e5                	mov    %esp,%ebp$/;"	l
f01064cd	obj/kern/kernel.asm	/^f01064cd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01064d0	obj/kern/kernel.asm	/^f01064d0:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f01064d4	obj/kern/kernel.asm	/^f01064d4:	eb 07                	jmp    f01064dd <strchr+0x13>$/;"	l
f01064d6	obj/kern/kernel.asm	/^f01064d6:	38 ca                	cmp    %cl,%dl$/;"	l
f01064d8	obj/kern/kernel.asm	/^f01064d8:	74 0f                	je     f01064e9 <strchr+0x1f>$/;"	l
f01064da	obj/kern/kernel.asm	/^f01064da:	83 c0 01             	add    $0x1,%eax$/;"	l
f01064dd	obj/kern/kernel.asm	/^f01064dd:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f01064e0	obj/kern/kernel.asm	/^f01064e0:	84 d2                	test   %dl,%dl$/;"	l
f01064e2	obj/kern/kernel.asm	/^f01064e2:	75 f2                	jne    f01064d6 <strchr+0xc>$/;"	l
f01064e4	obj/kern/kernel.asm	/^f01064e4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01064e9	obj/kern/kernel.asm	/^f01064e9:	5d                   	pop    %ebp$/;"	l
f01064ea	obj/kern/kernel.asm	/^f01064ea:	c3                   	ret    $/;"	l
f01064eb	obj/kern/kernel.asm	/^f01064eb <strfind>:$/;"	l
f01064eb	obj/kern/kernel.asm	/^f01064eb:	55                   	push   %ebp$/;"	l
f01064ec	obj/kern/kernel.asm	/^f01064ec:	89 e5                	mov    %esp,%ebp$/;"	l
f01064ee	obj/kern/kernel.asm	/^f01064ee:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01064f1	obj/kern/kernel.asm	/^f01064f1:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f01064f5	obj/kern/kernel.asm	/^f01064f5:	eb 07                	jmp    f01064fe <strfind+0x13>$/;"	l
f01064f7	obj/kern/kernel.asm	/^f01064f7:	38 ca                	cmp    %cl,%dl$/;"	l
f01064f9	obj/kern/kernel.asm	/^f01064f9:	74 0a                	je     f0106505 <strfind+0x1a>$/;"	l
f01064fb	obj/kern/kernel.asm	/^f01064fb:	83 c0 01             	add    $0x1,%eax$/;"	l
f01064fe	obj/kern/kernel.asm	/^f01064fe:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f0106501	obj/kern/kernel.asm	/^f0106501:	84 d2                	test   %dl,%dl$/;"	l
f0106503	obj/kern/kernel.asm	/^f0106503:	75 f2                	jne    f01064f7 <strfind+0xc>$/;"	l
f0106505	obj/kern/kernel.asm	/^f0106505:	5d                   	pop    %ebp$/;"	l
f0106506	obj/kern/kernel.asm	/^f0106506:	c3                   	ret    $/;"	l
f0106507	obj/kern/kernel.asm	/^f0106507 <memset>:$/;"	l
f0106507	obj/kern/kernel.asm	/^f0106507:	55                   	push   %ebp$/;"	l
f0106508	obj/kern/kernel.asm	/^f0106508:	89 e5                	mov    %esp,%ebp$/;"	l
f010650a	obj/kern/kernel.asm	/^f010650a:	57                   	push   %edi$/;"	l
f010650b	obj/kern/kernel.asm	/^f010650b:	56                   	push   %esi$/;"	l
f010650c	obj/kern/kernel.asm	/^f010650c:	53                   	push   %ebx$/;"	l
f010650d	obj/kern/kernel.asm	/^f010650d:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0106510	obj/kern/kernel.asm	/^f0106510:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0106513	obj/kern/kernel.asm	/^f0106513:	85 c9                	test   %ecx,%ecx$/;"	l
f0106515	obj/kern/kernel.asm	/^f0106515:	74 36                	je     f010654d <memset+0x46>$/;"	l
f0106517	obj/kern/kernel.asm	/^f0106517:	f7 c7 03 00 00 00    	test   $0x3,%edi$/;"	l
f010651d	obj/kern/kernel.asm	/^f010651d:	75 28                	jne    f0106547 <memset+0x40>$/;"	l
f010651f	obj/kern/kernel.asm	/^f010651f:	f6 c1 03             	test   $0x3,%cl$/;"	l
f0106522	obj/kern/kernel.asm	/^f0106522:	75 23                	jne    f0106547 <memset+0x40>$/;"	l
f0106524	obj/kern/kernel.asm	/^f0106524:	0f b6 55 0c          	movzbl 0xc(%ebp),%edx$/;"	l
f0106528	obj/kern/kernel.asm	/^f0106528:	89 d3                	mov    %edx,%ebx$/;"	l
f010652a	obj/kern/kernel.asm	/^f010652a:	c1 e3 08             	shl    $0x8,%ebx$/;"	l
f010652d	obj/kern/kernel.asm	/^f010652d:	89 d6                	mov    %edx,%esi$/;"	l
f010652f	obj/kern/kernel.asm	/^f010652f:	c1 e6 18             	shl    $0x18,%esi$/;"	l
f0106532	obj/kern/kernel.asm	/^f0106532:	89 d0                	mov    %edx,%eax$/;"	l
f0106534	obj/kern/kernel.asm	/^f0106534:	c1 e0 10             	shl    $0x10,%eax$/;"	l
f0106537	obj/kern/kernel.asm	/^f0106537:	09 f0                	or     %esi,%eax$/;"	l
f0106539	obj/kern/kernel.asm	/^f0106539:	09 c2                	or     %eax,%edx$/;"	l
f010653b	obj/kern/kernel.asm	/^f010653b:	89 d0                	mov    %edx,%eax$/;"	l
f010653d	obj/kern/kernel.asm	/^f010653d:	09 d8                	or     %ebx,%eax$/;"	l
f010653f	obj/kern/kernel.asm	/^f010653f:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0106542	obj/kern/kernel.asm	/^f0106542:	fc                   	cld    $/;"	l
f0106543	obj/kern/kernel.asm	/^f0106543:	f3 ab                	rep stos %eax,%es:(%edi)$/;"	l
f0106545	obj/kern/kernel.asm	/^f0106545:	eb 06                	jmp    f010654d <memset+0x46>$/;"	l
f0106547	obj/kern/kernel.asm	/^f0106547:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010654a	obj/kern/kernel.asm	/^f010654a:	fc                   	cld    $/;"	l
f010654b	obj/kern/kernel.asm	/^f010654b:	f3 aa                	rep stos %al,%es:(%edi)$/;"	l
f010654d	obj/kern/kernel.asm	/^f010654d:	89 f8                	mov    %edi,%eax$/;"	l
f010654f	obj/kern/kernel.asm	/^f010654f:	5b                   	pop    %ebx$/;"	l
f0106550	obj/kern/kernel.asm	/^f0106550:	5e                   	pop    %esi$/;"	l
f0106551	obj/kern/kernel.asm	/^f0106551:	5f                   	pop    %edi$/;"	l
f0106552	obj/kern/kernel.asm	/^f0106552:	5d                   	pop    %ebp$/;"	l
f0106553	obj/kern/kernel.asm	/^f0106553:	c3                   	ret    $/;"	l
f0106554	obj/kern/kernel.asm	/^f0106554 <memmove>:$/;"	l
f0106554	obj/kern/kernel.asm	/^f0106554:	55                   	push   %ebp$/;"	l
f0106555	obj/kern/kernel.asm	/^f0106555:	89 e5                	mov    %esp,%ebp$/;"	l
f0106557	obj/kern/kernel.asm	/^f0106557:	57                   	push   %edi$/;"	l
f0106558	obj/kern/kernel.asm	/^f0106558:	56                   	push   %esi$/;"	l
f0106559	obj/kern/kernel.asm	/^f0106559:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010655c	obj/kern/kernel.asm	/^f010655c:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f010655f	obj/kern/kernel.asm	/^f010655f:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0106562	obj/kern/kernel.asm	/^f0106562:	39 c6                	cmp    %eax,%esi$/;"	l
f0106564	obj/kern/kernel.asm	/^f0106564:	73 35                	jae    f010659b <memmove+0x47>$/;"	l
f0106566	obj/kern/kernel.asm	/^f0106566:	8d 14 0e             	lea    (%esi,%ecx,1),%edx$/;"	l
f0106569	obj/kern/kernel.asm	/^f0106569:	39 d0                	cmp    %edx,%eax$/;"	l
f010656b	obj/kern/kernel.asm	/^f010656b:	73 2e                	jae    f010659b <memmove+0x47>$/;"	l
f010656d	obj/kern/kernel.asm	/^f010656d:	8d 3c 08             	lea    (%eax,%ecx,1),%edi$/;"	l
f0106570	obj/kern/kernel.asm	/^f0106570:	89 d6                	mov    %edx,%esi$/;"	l
f0106572	obj/kern/kernel.asm	/^f0106572:	09 fe                	or     %edi,%esi$/;"	l
f0106574	obj/kern/kernel.asm	/^f0106574:	f7 c6 03 00 00 00    	test   $0x3,%esi$/;"	l
f010657a	obj/kern/kernel.asm	/^f010657a:	75 13                	jne    f010658f <memmove+0x3b>$/;"	l
f010657c	obj/kern/kernel.asm	/^f010657c:	f6 c1 03             	test   $0x3,%cl$/;"	l
f010657f	obj/kern/kernel.asm	/^f010657f:	75 0e                	jne    f010658f <memmove+0x3b>$/;"	l
f0106581	obj/kern/kernel.asm	/^f0106581:	83 ef 04             	sub    $0x4,%edi$/;"	l
f0106584	obj/kern/kernel.asm	/^f0106584:	8d 72 fc             	lea    -0x4(%edx),%esi$/;"	l
f0106587	obj/kern/kernel.asm	/^f0106587:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f010658a	obj/kern/kernel.asm	/^f010658a:	fd                   	std    $/;"	l
f010658b	obj/kern/kernel.asm	/^f010658b:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f010658d	obj/kern/kernel.asm	/^f010658d:	eb 09                	jmp    f0106598 <memmove+0x44>$/;"	l
f010658f	obj/kern/kernel.asm	/^f010658f:	83 ef 01             	sub    $0x1,%edi$/;"	l
f0106592	obj/kern/kernel.asm	/^f0106592:	8d 72 ff             	lea    -0x1(%edx),%esi$/;"	l
f0106595	obj/kern/kernel.asm	/^f0106595:	fd                   	std    $/;"	l
f0106596	obj/kern/kernel.asm	/^f0106596:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f0106598	obj/kern/kernel.asm	/^f0106598:	fc                   	cld    $/;"	l
f0106599	obj/kern/kernel.asm	/^f0106599:	eb 1d                	jmp    f01065b8 <memmove+0x64>$/;"	l
f010659b	obj/kern/kernel.asm	/^f010659b:	89 f2                	mov    %esi,%edx$/;"	l
f010659d	obj/kern/kernel.asm	/^f010659d:	09 c2                	or     %eax,%edx$/;"	l
f010659f	obj/kern/kernel.asm	/^f010659f:	f6 c2 03             	test   $0x3,%dl$/;"	l
f01065a2	obj/kern/kernel.asm	/^f01065a2:	75 0f                	jne    f01065b3 <memmove+0x5f>$/;"	l
f01065a4	obj/kern/kernel.asm	/^f01065a4:	f6 c1 03             	test   $0x3,%cl$/;"	l
f01065a7	obj/kern/kernel.asm	/^f01065a7:	75 0a                	jne    f01065b3 <memmove+0x5f>$/;"	l
f01065a9	obj/kern/kernel.asm	/^f01065a9:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f01065ac	obj/kern/kernel.asm	/^f01065ac:	89 c7                	mov    %eax,%edi$/;"	l
f01065ae	obj/kern/kernel.asm	/^f01065ae:	fc                   	cld    $/;"	l
f01065af	obj/kern/kernel.asm	/^f01065af:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f01065b1	obj/kern/kernel.asm	/^f01065b1:	eb 05                	jmp    f01065b8 <memmove+0x64>$/;"	l
f01065b3	obj/kern/kernel.asm	/^f01065b3:	89 c7                	mov    %eax,%edi$/;"	l
f01065b5	obj/kern/kernel.asm	/^f01065b5:	fc                   	cld    $/;"	l
f01065b6	obj/kern/kernel.asm	/^f01065b6:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f01065b8	obj/kern/kernel.asm	/^f01065b8:	5e                   	pop    %esi$/;"	l
f01065b9	obj/kern/kernel.asm	/^f01065b9:	5f                   	pop    %edi$/;"	l
f01065ba	obj/kern/kernel.asm	/^f01065ba:	5d                   	pop    %ebp$/;"	l
f01065bb	obj/kern/kernel.asm	/^f01065bb:	c3                   	ret    $/;"	l
f01065bc	obj/kern/kernel.asm	/^f01065bc <memcpy>:$/;"	l
f01065bc	obj/kern/kernel.asm	/^f01065bc:	55                   	push   %ebp$/;"	l
f01065bd	obj/kern/kernel.asm	/^f01065bd:	89 e5                	mov    %esp,%ebp$/;"	l
f01065bf	obj/kern/kernel.asm	/^f01065bf:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01065c2	obj/kern/kernel.asm	/^f01065c2:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01065c5	obj/kern/kernel.asm	/^f01065c5:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01065c9	obj/kern/kernel.asm	/^f01065c9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01065cc	obj/kern/kernel.asm	/^f01065cc:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01065d0	obj/kern/kernel.asm	/^f01065d0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01065d3	obj/kern/kernel.asm	/^f01065d3:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01065d6	obj/kern/kernel.asm	/^f01065d6:	e8 79 ff ff ff       	call   f0106554 <memmove>$/;"	l
f01065db	obj/kern/kernel.asm	/^f01065db:	c9                   	leave  $/;"	l
f01065dc	obj/kern/kernel.asm	/^f01065dc:	c3                   	ret    $/;"	l
f01065dd	obj/kern/kernel.asm	/^f01065dd <memcmp>:$/;"	l
f01065dd	obj/kern/kernel.asm	/^f01065dd:	55                   	push   %ebp$/;"	l
f01065de	obj/kern/kernel.asm	/^f01065de:	89 e5                	mov    %esp,%ebp$/;"	l
f01065e0	obj/kern/kernel.asm	/^f01065e0:	56                   	push   %esi$/;"	l
f01065e1	obj/kern/kernel.asm	/^f01065e1:	53                   	push   %ebx$/;"	l
f01065e2	obj/kern/kernel.asm	/^f01065e2:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f01065e5	obj/kern/kernel.asm	/^f01065e5:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f01065e8	obj/kern/kernel.asm	/^f01065e8:	89 d6                	mov    %edx,%esi$/;"	l
f01065ea	obj/kern/kernel.asm	/^f01065ea:	03 75 10             	add    0x10(%ebp),%esi$/;"	l
f01065ed	obj/kern/kernel.asm	/^f01065ed:	eb 1a                	jmp    f0106609 <memcmp+0x2c>$/;"	l
f01065ef	obj/kern/kernel.asm	/^f01065ef:	0f b6 02             	movzbl (%edx),%eax$/;"	l
f01065f2	obj/kern/kernel.asm	/^f01065f2:	0f b6 19             	movzbl (%ecx),%ebx$/;"	l
f01065f5	obj/kern/kernel.asm	/^f01065f5:	38 d8                	cmp    %bl,%al$/;"	l
f01065f7	obj/kern/kernel.asm	/^f01065f7:	74 0a                	je     f0106603 <memcmp+0x26>$/;"	l
f01065f9	obj/kern/kernel.asm	/^f01065f9:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01065fc	obj/kern/kernel.asm	/^f01065fc:	0f b6 db             	movzbl %bl,%ebx$/;"	l
f01065ff	obj/kern/kernel.asm	/^f01065ff:	29 d8                	sub    %ebx,%eax$/;"	l
f0106601	obj/kern/kernel.asm	/^f0106601:	eb 0f                	jmp    f0106612 <memcmp+0x35>$/;"	l
f0106603	obj/kern/kernel.asm	/^f0106603:	83 c2 01             	add    $0x1,%edx$/;"	l
f0106606	obj/kern/kernel.asm	/^f0106606:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0106609	obj/kern/kernel.asm	/^f0106609:	39 f2                	cmp    %esi,%edx$/;"	l
f010660b	obj/kern/kernel.asm	/^f010660b:	75 e2                	jne    f01065ef <memcmp+0x12>$/;"	l
f010660d	obj/kern/kernel.asm	/^f010660d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106612	obj/kern/kernel.asm	/^f0106612:	5b                   	pop    %ebx$/;"	l
f0106613	obj/kern/kernel.asm	/^f0106613:	5e                   	pop    %esi$/;"	l
f0106614	obj/kern/kernel.asm	/^f0106614:	5d                   	pop    %ebp$/;"	l
f0106615	obj/kern/kernel.asm	/^f0106615:	c3                   	ret    $/;"	l
f0106616	obj/kern/kernel.asm	/^f0106616 <memfind>:$/;"	l
f0106616	obj/kern/kernel.asm	/^f0106616:	55                   	push   %ebp$/;"	l
f0106617	obj/kern/kernel.asm	/^f0106617:	89 e5                	mov    %esp,%ebp$/;"	l
f0106619	obj/kern/kernel.asm	/^f0106619:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010661c	obj/kern/kernel.asm	/^f010661c:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f010661f	obj/kern/kernel.asm	/^f010661f:	89 c2                	mov    %eax,%edx$/;"	l
f0106621	obj/kern/kernel.asm	/^f0106621:	03 55 10             	add    0x10(%ebp),%edx$/;"	l
f0106624	obj/kern/kernel.asm	/^f0106624:	eb 07                	jmp    f010662d <memfind+0x17>$/;"	l
f0106626	obj/kern/kernel.asm	/^f0106626:	38 08                	cmp    %cl,(%eax)$/;"	l
f0106628	obj/kern/kernel.asm	/^f0106628:	74 07                	je     f0106631 <memfind+0x1b>$/;"	l
f010662a	obj/kern/kernel.asm	/^f010662a:	83 c0 01             	add    $0x1,%eax$/;"	l
f010662d	obj/kern/kernel.asm	/^f010662d:	39 d0                	cmp    %edx,%eax$/;"	l
f010662f	obj/kern/kernel.asm	/^f010662f:	72 f5                	jb     f0106626 <memfind+0x10>$/;"	l
f0106631	obj/kern/kernel.asm	/^f0106631:	5d                   	pop    %ebp$/;"	l
f0106632	obj/kern/kernel.asm	/^f0106632:	c3                   	ret    $/;"	l
f0106633	obj/kern/kernel.asm	/^f0106633 <strtol>:$/;"	l
f0106633	obj/kern/kernel.asm	/^f0106633:	55                   	push   %ebp$/;"	l
f0106634	obj/kern/kernel.asm	/^f0106634:	89 e5                	mov    %esp,%ebp$/;"	l
f0106636	obj/kern/kernel.asm	/^f0106636:	57                   	push   %edi$/;"	l
f0106637	obj/kern/kernel.asm	/^f0106637:	56                   	push   %esi$/;"	l
f0106638	obj/kern/kernel.asm	/^f0106638:	53                   	push   %ebx$/;"	l
f0106639	obj/kern/kernel.asm	/^f0106639:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f010663c	obj/kern/kernel.asm	/^f010663c:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f010663f	obj/kern/kernel.asm	/^f010663f:	eb 03                	jmp    f0106644 <strtol+0x11>$/;"	l
f0106641	obj/kern/kernel.asm	/^f0106641:	83 c2 01             	add    $0x1,%edx$/;"	l
f0106644	obj/kern/kernel.asm	/^f0106644:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f0106647	obj/kern/kernel.asm	/^f0106647:	80 f9 09             	cmp    $0x9,%cl$/;"	l
f010664a	obj/kern/kernel.asm	/^f010664a:	74 f5                	je     f0106641 <strtol+0xe>$/;"	l
f010664c	obj/kern/kernel.asm	/^f010664c:	80 f9 20             	cmp    $0x20,%cl$/;"	l
f010664f	obj/kern/kernel.asm	/^f010664f:	74 f0                	je     f0106641 <strtol+0xe>$/;"	l
f0106651	obj/kern/kernel.asm	/^f0106651:	80 f9 2b             	cmp    $0x2b,%cl$/;"	l
f0106654	obj/kern/kernel.asm	/^f0106654:	75 0a                	jne    f0106660 <strtol+0x2d>$/;"	l
f0106656	obj/kern/kernel.asm	/^f0106656:	83 c2 01             	add    $0x1,%edx$/;"	l
f0106659	obj/kern/kernel.asm	/^f0106659:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f010665e	obj/kern/kernel.asm	/^f010665e:	eb 11                	jmp    f0106671 <strtol+0x3e>$/;"	l
f0106660	obj/kern/kernel.asm	/^f0106660:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0106665	obj/kern/kernel.asm	/^f0106665:	80 f9 2d             	cmp    $0x2d,%cl$/;"	l
f0106668	obj/kern/kernel.asm	/^f0106668:	75 07                	jne    f0106671 <strtol+0x3e>$/;"	l
f010666a	obj/kern/kernel.asm	/^f010666a:	8d 52 01             	lea    0x1(%edx),%edx$/;"	l
f010666d	obj/kern/kernel.asm	/^f010666d:	66 bf 01 00          	mov    $0x1,%di$/;"	l
f0106671	obj/kern/kernel.asm	/^f0106671:	a9 ef ff ff ff       	test   $0xffffffef,%eax$/;"	l
f0106676	obj/kern/kernel.asm	/^f0106676:	75 15                	jne    f010668d <strtol+0x5a>$/;"	l
f0106678	obj/kern/kernel.asm	/^f0106678:	80 3a 30             	cmpb   $0x30,(%edx)$/;"	l
f010667b	obj/kern/kernel.asm	/^f010667b:	75 10                	jne    f010668d <strtol+0x5a>$/;"	l
f010667d	obj/kern/kernel.asm	/^f010667d:	80 7a 01 78          	cmpb   $0x78,0x1(%edx)$/;"	l
f0106681	obj/kern/kernel.asm	/^f0106681:	75 0a                	jne    f010668d <strtol+0x5a>$/;"	l
f0106683	obj/kern/kernel.asm	/^f0106683:	83 c2 02             	add    $0x2,%edx$/;"	l
f0106686	obj/kern/kernel.asm	/^f0106686:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f010668b	obj/kern/kernel.asm	/^f010668b:	eb 10                	jmp    f010669d <strtol+0x6a>$/;"	l
f010668d	obj/kern/kernel.asm	/^f010668d:	85 c0                	test   %eax,%eax$/;"	l
f010668f	obj/kern/kernel.asm	/^f010668f:	75 0c                	jne    f010669d <strtol+0x6a>$/;"	l
f0106691	obj/kern/kernel.asm	/^f0106691:	b0 0a                	mov    $0xa,%al$/;"	l
f0106693	obj/kern/kernel.asm	/^f0106693:	80 3a 30             	cmpb   $0x30,(%edx)$/;"	l
f0106696	obj/kern/kernel.asm	/^f0106696:	75 05                	jne    f010669d <strtol+0x6a>$/;"	l
f0106698	obj/kern/kernel.asm	/^f0106698:	83 c2 01             	add    $0x1,%edx$/;"	l
f010669b	obj/kern/kernel.asm	/^f010669b:	b0 08                	mov    $0x8,%al$/;"	l
f010669d	obj/kern/kernel.asm	/^f010669d:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01066a2	obj/kern/kernel.asm	/^f01066a2:	89 45 10             	mov    %eax,0x10(%ebp)$/;"	l
f01066a5	obj/kern/kernel.asm	/^f01066a5:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f01066a8	obj/kern/kernel.asm	/^f01066a8:	8d 71 d0             	lea    -0x30(%ecx),%esi$/;"	l
f01066ab	obj/kern/kernel.asm	/^f01066ab:	89 f0                	mov    %esi,%eax$/;"	l
f01066ad	obj/kern/kernel.asm	/^f01066ad:	3c 09                	cmp    $0x9,%al$/;"	l
f01066af	obj/kern/kernel.asm	/^f01066af:	77 08                	ja     f01066b9 <strtol+0x86>$/;"	l
f01066b1	obj/kern/kernel.asm	/^f01066b1:	0f be c9             	movsbl %cl,%ecx$/;"	l
f01066b4	obj/kern/kernel.asm	/^f01066b4:	83 e9 30             	sub    $0x30,%ecx$/;"	l
f01066b7	obj/kern/kernel.asm	/^f01066b7:	eb 20                	jmp    f01066d9 <strtol+0xa6>$/;"	l
f01066b9	obj/kern/kernel.asm	/^f01066b9:	8d 71 9f             	lea    -0x61(%ecx),%esi$/;"	l
f01066bc	obj/kern/kernel.asm	/^f01066bc:	89 f0                	mov    %esi,%eax$/;"	l
f01066be	obj/kern/kernel.asm	/^f01066be:	3c 19                	cmp    $0x19,%al$/;"	l
f01066c0	obj/kern/kernel.asm	/^f01066c0:	77 08                	ja     f01066ca <strtol+0x97>$/;"	l
f01066c2	obj/kern/kernel.asm	/^f01066c2:	0f be c9             	movsbl %cl,%ecx$/;"	l
f01066c5	obj/kern/kernel.asm	/^f01066c5:	83 e9 57             	sub    $0x57,%ecx$/;"	l
f01066c8	obj/kern/kernel.asm	/^f01066c8:	eb 0f                	jmp    f01066d9 <strtol+0xa6>$/;"	l
f01066ca	obj/kern/kernel.asm	/^f01066ca:	8d 71 bf             	lea    -0x41(%ecx),%esi$/;"	l
f01066cd	obj/kern/kernel.asm	/^f01066cd:	89 f0                	mov    %esi,%eax$/;"	l
f01066cf	obj/kern/kernel.asm	/^f01066cf:	3c 19                	cmp    $0x19,%al$/;"	l
f01066d1	obj/kern/kernel.asm	/^f01066d1:	77 16                	ja     f01066e9 <strtol+0xb6>$/;"	l
f01066d3	obj/kern/kernel.asm	/^f01066d3:	0f be c9             	movsbl %cl,%ecx$/;"	l
f01066d6	obj/kern/kernel.asm	/^f01066d6:	83 e9 37             	sub    $0x37,%ecx$/;"	l
f01066d9	obj/kern/kernel.asm	/^f01066d9:	3b 4d 10             	cmp    0x10(%ebp),%ecx$/;"	l
f01066dc	obj/kern/kernel.asm	/^f01066dc:	7d 0f                	jge    f01066ed <strtol+0xba>$/;"	l
f01066de	obj/kern/kernel.asm	/^f01066de:	83 c2 01             	add    $0x1,%edx$/;"	l
f01066e1	obj/kern/kernel.asm	/^f01066e1:	0f af 5d 10          	imul   0x10(%ebp),%ebx$/;"	l
f01066e5	obj/kern/kernel.asm	/^f01066e5:	01 cb                	add    %ecx,%ebx$/;"	l
f01066e7	obj/kern/kernel.asm	/^f01066e7:	eb bc                	jmp    f01066a5 <strtol+0x72>$/;"	l
f01066e9	obj/kern/kernel.asm	/^f01066e9:	89 d8                	mov    %ebx,%eax$/;"	l
f01066eb	obj/kern/kernel.asm	/^f01066eb:	eb 02                	jmp    f01066ef <strtol+0xbc>$/;"	l
f01066ed	obj/kern/kernel.asm	/^f01066ed:	89 d8                	mov    %ebx,%eax$/;"	l
f01066ef	obj/kern/kernel.asm	/^f01066ef:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
f01066f3	obj/kern/kernel.asm	/^f01066f3:	74 05                	je     f01066fa <strtol+0xc7>$/;"	l
f01066f5	obj/kern/kernel.asm	/^f01066f5:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f01066f8	obj/kern/kernel.asm	/^f01066f8:	89 16                	mov    %edx,(%esi)$/;"	l
f01066fa	obj/kern/kernel.asm	/^f01066fa:	f7 d8                	neg    %eax$/;"	l
f01066fc	obj/kern/kernel.asm	/^f01066fc:	85 ff                	test   %edi,%edi$/;"	l
f01066fe	obj/kern/kernel.asm	/^f01066fe:	0f 44 c3             	cmove  %ebx,%eax$/;"	l
f0106701	obj/kern/kernel.asm	/^f0106701:	5b                   	pop    %ebx$/;"	l
f0106702	obj/kern/kernel.asm	/^f0106702:	5e                   	pop    %esi$/;"	l
f0106703	obj/kern/kernel.asm	/^f0106703:	5f                   	pop    %edi$/;"	l
f0106704	obj/kern/kernel.asm	/^f0106704:	5d                   	pop    %ebp$/;"	l
f0106705	obj/kern/kernel.asm	/^f0106705:	c3                   	ret    $/;"	l
f0106706	obj/kern/kernel.asm	/^f0106706:	66 90                	xchg   %ax,%ax$/;"	l
f0106708	obj/kern/kernel.asm	/^f0106708 <mpentry_start>:$/;"	l
f0106708	obj/kern/kernel.asm	/^f0106708:	fa                   	cli    $/;"	l
f0106709	obj/kern/kernel.asm	/^f0106709:	31 c0                	xor    %eax,%eax$/;"	l
f010670b	obj/kern/kernel.asm	/^f010670b:	8e d8                	mov    %eax,%ds$/;"	l
f010670d	obj/kern/kernel.asm	/^f010670d:	8e c0                	mov    %eax,%es$/;"	l
f010670f	obj/kern/kernel.asm	/^f010670f:	8e d0                	mov    %eax,%ss$/;"	l
f0106711	obj/kern/kernel.asm	/^f0106711:	0f 01 16             	lgdtl  (%esi)$/;"	l
f0106714	obj/kern/kernel.asm	/^f0106714:	74 70                	je     f0106786 <mpentry_end+0x4>$/;"	l
f0106716	obj/kern/kernel.asm	/^f0106716:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0106719	obj/kern/kernel.asm	/^f0106719:	66 83 c8 01          	or     $0x1,%ax$/;"	l
f010671d	obj/kern/kernel.asm	/^f010671d:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0106720	obj/kern/kernel.asm	/^f0106720:	66 ea 20 70 00 00    	ljmpw  $0x0,$0x7020$/;"	l
f0106726	obj/kern/kernel.asm	/^f0106726:	08 00                	or     %al,(%eax)$/;"	l
f0106728	obj/kern/kernel.asm	/^f0106728 <start32>:$/;"	l
f0106728	obj/kern/kernel.asm	/^f0106728:	66 b8 10 00          	mov    $0x10,%ax$/;"	l
f010672c	obj/kern/kernel.asm	/^f010672c:	8e d8                	mov    %eax,%ds$/;"	l
f010672e	obj/kern/kernel.asm	/^f010672e:	8e c0                	mov    %eax,%es$/;"	l
f0106730	obj/kern/kernel.asm	/^f0106730:	8e d0                	mov    %eax,%ss$/;"	l
f0106732	obj/kern/kernel.asm	/^f0106732:	66 b8 00 00          	mov    $0x0,%ax$/;"	l
f0106736	obj/kern/kernel.asm	/^f0106736:	8e e0                	mov    %eax,%fs$/;"	l
f0106738	obj/kern/kernel.asm	/^f0106738:	8e e8                	mov    %eax,%gs$/;"	l
f010673a	obj/kern/kernel.asm	/^f010673a:	b8 00 30 12 00       	mov    $0x123000,%eax$/;"	l
f010673f	obj/kern/kernel.asm	/^f010673f:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0106742	obj/kern/kernel.asm	/^f0106742:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0106745	obj/kern/kernel.asm	/^f0106745:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f010674a	obj/kern/kernel.asm	/^f010674a:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f010674d	obj/kern/kernel.asm	/^f010674d:	8b 25 90 9e 2b f0    	mov    0xf02b9e90,%esp$/;"	l
f0106753	obj/kern/kernel.asm	/^f0106753:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0106758	obj/kern/kernel.asm	/^f0106758:	b8 24 02 10 f0       	mov    $0xf0100224,%eax$/;"	l
f010675d	obj/kern/kernel.asm	/^f010675d:	ff d0                	call   *%eax$/;"	l
f010675f	obj/kern/kernel.asm	/^f010675f <spin>:$/;"	l
f010675f	obj/kern/kernel.asm	/^f010675f:	eb fe                	jmp    f010675f <spin>$/;"	l
f0106761	obj/kern/kernel.asm	/^f0106761:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0106764	obj/kern/kernel.asm	/^f0106764 <gdt>:$/;"	l
f010676c	obj/kern/kernel.asm	/^f010676c:	ff                   	(bad)  $/;"	l
f010676d	obj/kern/kernel.asm	/^f010676d:	ff 00                	incl   (%eax)$/;"	l
f010676f	obj/kern/kernel.asm	/^f010676f:	00 00                	add    %al,(%eax)$/;"	l
f0106771	obj/kern/kernel.asm	/^f0106771:	9a cf 00 ff ff 00 00 	lcall  $0x0,$0xffff00cf$/;"	l
f0106778	obj/kern/kernel.asm	/^f0106778:	00 92 cf 00 17 00    	add    %dl,0x1700cf(%edx)$/;"	l
f010677c	obj/kern/kernel.asm	/^f010677c <gdtdesc>:$/;"	l
f010677c	obj/kern/kernel.asm	/^f010677c:	17                   	pop    %ss$/;"	l
f010677d	obj/kern/kernel.asm	/^f010677d:	00 5c 70 00          	add    %bl,0x0(%eax,%esi,2)$/;"	l
f0106782	obj/kern/kernel.asm	/^f0106782 <mpentry_end>:$/;"	l
f0106782	obj/kern/kernel.asm	/^f0106782:	90                   	nop$/;"	l
f0106783	obj/kern/kernel.asm	/^f0106783:	66 90                	xchg   %ax,%ax$/;"	l
f0106785	obj/kern/kernel.asm	/^f0106785:	66 90                	xchg   %ax,%ax$/;"	l
f0106787	obj/kern/kernel.asm	/^f0106787:	66 90                	xchg   %ax,%ax$/;"	l
f0106789	obj/kern/kernel.asm	/^f0106789:	66 90                	xchg   %ax,%ax$/;"	l
f010678b	obj/kern/kernel.asm	/^f010678b:	66 90                	xchg   %ax,%ax$/;"	l
f010678d	obj/kern/kernel.asm	/^f010678d:	66 90                	xchg   %ax,%ax$/;"	l
f010678f	obj/kern/kernel.asm	/^f010678f:	90                   	nop$/;"	l
f0106790	obj/kern/kernel.asm	/^f0106790 <mpsearch1>:$/;"	l
f0106790	obj/kern/kernel.asm	/^f0106790:	55                   	push   %ebp$/;"	l
f0106791	obj/kern/kernel.asm	/^f0106791:	89 e5                	mov    %esp,%ebp$/;"	l
f0106793	obj/kern/kernel.asm	/^f0106793:	56                   	push   %esi$/;"	l
f0106794	obj/kern/kernel.asm	/^f0106794:	53                   	push   %ebx$/;"	l
f0106795	obj/kern/kernel.asm	/^f0106795:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0106798	obj/kern/kernel.asm	/^f0106798:	8b 0d 94 9e 2b f0    	mov    0xf02b9e94,%ecx$/;"	l
f010679e	obj/kern/kernel.asm	/^f010679e:	89 c3                	mov    %eax,%ebx$/;"	l
f01067a0	obj/kern/kernel.asm	/^f01067a0:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f01067a3	obj/kern/kernel.asm	/^f01067a3:	39 cb                	cmp    %ecx,%ebx$/;"	l
f01067a5	obj/kern/kernel.asm	/^f01067a5:	72 20                	jb     f01067c7 <mpsearch1+0x37>$/;"	l
f01067a7	obj/kern/kernel.asm	/^f01067a7:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01067ab	obj/kern/kernel.asm	/^f01067ab:	c7 44 24 08 c4 7f 10 	movl   $0xf0107fc4,0x8(%esp)$/;"	l
f01067b2	obj/kern/kernel.asm	/^f01067b2:	f0 $/;"	l
f01067b3	obj/kern/kernel.asm	/^f01067b3:	c7 44 24 04 57 00 00 	movl   $0x57,0x4(%esp)$/;"	l
f01067ba	obj/kern/kernel.asm	/^f01067ba:	00 $/;"	l
f01067bb	obj/kern/kernel.asm	/^f01067bb:	c7 04 24 0d 9d 10 f0 	movl   $0xf0109d0d,(%esp)$/;"	l
f01067c2	obj/kern/kernel.asm	/^f01067c2:	e8 79 98 ff ff       	call   f0100040 <_panic>$/;"	l
f01067c7	obj/kern/kernel.asm	/^f01067c7:	8d 98 00 00 00 f0    	lea    -0x10000000(%eax),%ebx$/;"	l
f01067cd	obj/kern/kernel.asm	/^f01067cd:	01 d0                	add    %edx,%eax$/;"	l
f01067cf	obj/kern/kernel.asm	/^f01067cf:	89 c2                	mov    %eax,%edx$/;"	l
f01067d1	obj/kern/kernel.asm	/^f01067d1:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01067d4	obj/kern/kernel.asm	/^f01067d4:	39 d1                	cmp    %edx,%ecx$/;"	l
f01067d6	obj/kern/kernel.asm	/^f01067d6:	77 20                	ja     f01067f8 <mpsearch1+0x68>$/;"	l
f01067d8	obj/kern/kernel.asm	/^f01067d8:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01067dc	obj/kern/kernel.asm	/^f01067dc:	c7 44 24 08 c4 7f 10 	movl   $0xf0107fc4,0x8(%esp)$/;"	l
f01067e3	obj/kern/kernel.asm	/^f01067e3:	f0 $/;"	l
f01067e4	obj/kern/kernel.asm	/^f01067e4:	c7 44 24 04 57 00 00 	movl   $0x57,0x4(%esp)$/;"	l
f01067eb	obj/kern/kernel.asm	/^f01067eb:	00 $/;"	l
f01067ec	obj/kern/kernel.asm	/^f01067ec:	c7 04 24 0d 9d 10 f0 	movl   $0xf0109d0d,(%esp)$/;"	l
f01067f3	obj/kern/kernel.asm	/^f01067f3:	e8 48 98 ff ff       	call   f0100040 <_panic>$/;"	l
f01067f8	obj/kern/kernel.asm	/^f01067f8:	8d b0 00 00 00 f0    	lea    -0x10000000(%eax),%esi$/;"	l
f01067fe	obj/kern/kernel.asm	/^f01067fe:	eb 36                	jmp    f0106836 <mpsearch1+0xa6>$/;"	l
f0106800	obj/kern/kernel.asm	/^f0106800:	c7 44 24 08 04 00 00 	movl   $0x4,0x8(%esp)$/;"	l
f0106807	obj/kern/kernel.asm	/^f0106807:	00 $/;"	l
f0106808	obj/kern/kernel.asm	/^f0106808:	c7 44 24 04 1d 9d 10 	movl   $0xf0109d1d,0x4(%esp)$/;"	l
f010680f	obj/kern/kernel.asm	/^f010680f:	f0 $/;"	l
f0106810	obj/kern/kernel.asm	/^f0106810:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0106813	obj/kern/kernel.asm	/^f0106813:	e8 c5 fd ff ff       	call   f01065dd <memcmp>$/;"	l
f0106818	obj/kern/kernel.asm	/^f0106818:	85 c0                	test   %eax,%eax$/;"	l
f010681a	obj/kern/kernel.asm	/^f010681a:	75 17                	jne    f0106833 <mpsearch1+0xa3>$/;"	l
f010681c	obj/kern/kernel.asm	/^f010681c:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106821	obj/kern/kernel.asm	/^f0106821:	0f b6 0c 13          	movzbl (%ebx,%edx,1),%ecx$/;"	l
f0106825	obj/kern/kernel.asm	/^f0106825:	01 c8                	add    %ecx,%eax$/;"	l
f0106827	obj/kern/kernel.asm	/^f0106827:	83 c2 01             	add    $0x1,%edx$/;"	l
f010682a	obj/kern/kernel.asm	/^f010682a:	83 fa 10             	cmp    $0x10,%edx$/;"	l
f010682d	obj/kern/kernel.asm	/^f010682d:	75 f2                	jne    f0106821 <mpsearch1+0x91>$/;"	l
f010682f	obj/kern/kernel.asm	/^f010682f:	84 c0                	test   %al,%al$/;"	l
f0106831	obj/kern/kernel.asm	/^f0106831:	74 0e                	je     f0106841 <mpsearch1+0xb1>$/;"	l
f0106833	obj/kern/kernel.asm	/^f0106833:	83 c3 10             	add    $0x10,%ebx$/;"	l
f0106836	obj/kern/kernel.asm	/^f0106836:	39 f3                	cmp    %esi,%ebx$/;"	l
f0106838	obj/kern/kernel.asm	/^f0106838:	72 c6                	jb     f0106800 <mpsearch1+0x70>$/;"	l
f010683a	obj/kern/kernel.asm	/^f010683a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010683f	obj/kern/kernel.asm	/^f010683f:	eb 02                	jmp    f0106843 <mpsearch1+0xb3>$/;"	l
f0106841	obj/kern/kernel.asm	/^f0106841:	89 d8                	mov    %ebx,%eax$/;"	l
f0106843	obj/kern/kernel.asm	/^f0106843:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106846	obj/kern/kernel.asm	/^f0106846:	5b                   	pop    %ebx$/;"	l
f0106847	obj/kern/kernel.asm	/^f0106847:	5e                   	pop    %esi$/;"	l
f0106848	obj/kern/kernel.asm	/^f0106848:	5d                   	pop    %ebp$/;"	l
f0106849	obj/kern/kernel.asm	/^f0106849:	c3                   	ret    $/;"	l
f010684a	obj/kern/kernel.asm	/^f010684a <mp_init>:$/;"	l
f010684a	obj/kern/kernel.asm	/^f010684a:	55                   	push   %ebp$/;"	l
f010684b	obj/kern/kernel.asm	/^f010684b:	89 e5                	mov    %esp,%ebp$/;"	l
f010684d	obj/kern/kernel.asm	/^f010684d:	57                   	push   %edi$/;"	l
f010684e	obj/kern/kernel.asm	/^f010684e:	56                   	push   %esi$/;"	l
f010684f	obj/kern/kernel.asm	/^f010684f:	53                   	push   %ebx$/;"	l
f0106850	obj/kern/kernel.asm	/^f0106850:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0106853	obj/kern/kernel.asm	/^f0106853:	c7 05 c0 a3 2b f0 20 	movl   $0xf02ba020,0xf02ba3c0$/;"	l
f010685a	obj/kern/kernel.asm	/^f010685a:	a0 2b f0 $/;"	l
f010685d	obj/kern/kernel.asm	/^f010685d:	83 3d 94 9e 2b f0 00 	cmpl   $0x0,0xf02b9e94$/;"	l
f0106864	obj/kern/kernel.asm	/^f0106864:	75 24                	jne    f010688a <mp_init+0x40>$/;"	l
f0106866	obj/kern/kernel.asm	/^f0106866:	c7 44 24 0c 00 04 00 	movl   $0x400,0xc(%esp)$/;"	l
f010686d	obj/kern/kernel.asm	/^f010686d:	00 $/;"	l
f010686e	obj/kern/kernel.asm	/^f010686e:	c7 44 24 08 c4 7f 10 	movl   $0xf0107fc4,0x8(%esp)$/;"	l
f0106875	obj/kern/kernel.asm	/^f0106875:	f0 $/;"	l
f0106876	obj/kern/kernel.asm	/^f0106876:	c7 44 24 04 6f 00 00 	movl   $0x6f,0x4(%esp)$/;"	l
f010687d	obj/kern/kernel.asm	/^f010687d:	00 $/;"	l
f010687e	obj/kern/kernel.asm	/^f010687e:	c7 04 24 0d 9d 10 f0 	movl   $0xf0109d0d,(%esp)$/;"	l
f0106885	obj/kern/kernel.asm	/^f0106885:	e8 b6 97 ff ff       	call   f0100040 <_panic>$/;"	l
f010688a	obj/kern/kernel.asm	/^f010688a:	0f b7 05 0e 04 00 f0 	movzwl 0xf000040e,%eax$/;"	l
f0106891	obj/kern/kernel.asm	/^f0106891:	85 c0                	test   %eax,%eax$/;"	l
f0106893	obj/kern/kernel.asm	/^f0106893:	74 16                	je     f01068ab <mp_init+0x61>$/;"	l
f0106895	obj/kern/kernel.asm	/^f0106895:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f0106898	obj/kern/kernel.asm	/^f0106898:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f010689d	obj/kern/kernel.asm	/^f010689d:	e8 ee fe ff ff       	call   f0106790 <mpsearch1>$/;"	l
f01068a2	obj/kern/kernel.asm	/^f01068a2:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01068a5	obj/kern/kernel.asm	/^f01068a5:	85 c0                	test   %eax,%eax$/;"	l
f01068a7	obj/kern/kernel.asm	/^f01068a7:	75 3c                	jne    f01068e5 <mp_init+0x9b>$/;"	l
f01068a9	obj/kern/kernel.asm	/^f01068a9:	eb 20                	jmp    f01068cb <mp_init+0x81>$/;"	l
f01068ab	obj/kern/kernel.asm	/^f01068ab:	0f b7 05 13 04 00 f0 	movzwl 0xf0000413,%eax$/;"	l
f01068b2	obj/kern/kernel.asm	/^f01068b2:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f01068b5	obj/kern/kernel.asm	/^f01068b5:	2d 00 04 00 00       	sub    $0x400,%eax$/;"	l
f01068ba	obj/kern/kernel.asm	/^f01068ba:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f01068bf	obj/kern/kernel.asm	/^f01068bf:	e8 cc fe ff ff       	call   f0106790 <mpsearch1>$/;"	l
f01068c4	obj/kern/kernel.asm	/^f01068c4:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01068c7	obj/kern/kernel.asm	/^f01068c7:	85 c0                	test   %eax,%eax$/;"	l
f01068c9	obj/kern/kernel.asm	/^f01068c9:	75 1a                	jne    f01068e5 <mp_init+0x9b>$/;"	l
f01068cb	obj/kern/kernel.asm	/^f01068cb:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f01068d0	obj/kern/kernel.asm	/^f01068d0:	b8 00 00 0f 00       	mov    $0xf0000,%eax$/;"	l
f01068d5	obj/kern/kernel.asm	/^f01068d5:	e8 b6 fe ff ff       	call   f0106790 <mpsearch1>$/;"	l
f01068da	obj/kern/kernel.asm	/^f01068da:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01068dd	obj/kern/kernel.asm	/^f01068dd:	85 c0                	test   %eax,%eax$/;"	l
f01068df	obj/kern/kernel.asm	/^f01068df:	0f 84 54 02 00 00    	je     f0106b39 <mp_init+0x2ef>$/;"	l
f01068e5	obj/kern/kernel.asm	/^f01068e5:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01068e8	obj/kern/kernel.asm	/^f01068e8:	8b 70 04             	mov    0x4(%eax),%esi$/;"	l
f01068eb	obj/kern/kernel.asm	/^f01068eb:	85 f6                	test   %esi,%esi$/;"	l
f01068ed	obj/kern/kernel.asm	/^f01068ed:	74 06                	je     f01068f5 <mp_init+0xab>$/;"	l
f01068ef	obj/kern/kernel.asm	/^f01068ef:	80 78 0b 00          	cmpb   $0x0,0xb(%eax)$/;"	l
f01068f3	obj/kern/kernel.asm	/^f01068f3:	74 11                	je     f0106906 <mp_init+0xbc>$/;"	l
f01068f5	obj/kern/kernel.asm	/^f01068f5:	c7 04 24 80 9b 10 f0 	movl   $0xf0109b80,(%esp)$/;"	l
f01068fc	obj/kern/kernel.asm	/^f01068fc:	e8 eb d6 ff ff       	call   f0103fec <cprintf>$/;"	l
f0106901	obj/kern/kernel.asm	/^f0106901:	e9 33 02 00 00       	jmp    f0106b39 <mp_init+0x2ef>$/;"	l
f0106906	obj/kern/kernel.asm	/^f0106906:	89 f0                	mov    %esi,%eax$/;"	l
f0106908	obj/kern/kernel.asm	/^f0106908:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f010690b	obj/kern/kernel.asm	/^f010690b:	3b 05 94 9e 2b f0    	cmp    0xf02b9e94,%eax$/;"	l
f0106911	obj/kern/kernel.asm	/^f0106911:	72 20                	jb     f0106933 <mp_init+0xe9>$/;"	l
f0106913	obj/kern/kernel.asm	/^f0106913:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f0106917	obj/kern/kernel.asm	/^f0106917:	c7 44 24 08 c4 7f 10 	movl   $0xf0107fc4,0x8(%esp)$/;"	l
f010691e	obj/kern/kernel.asm	/^f010691e:	f0 $/;"	l
f010691f	obj/kern/kernel.asm	/^f010691f:	c7 44 24 04 90 00 00 	movl   $0x90,0x4(%esp)$/;"	l
f0106926	obj/kern/kernel.asm	/^f0106926:	00 $/;"	l
f0106927	obj/kern/kernel.asm	/^f0106927:	c7 04 24 0d 9d 10 f0 	movl   $0xf0109d0d,(%esp)$/;"	l
f010692e	obj/kern/kernel.asm	/^f010692e:	e8 0d 97 ff ff       	call   f0100040 <_panic>$/;"	l
f0106933	obj/kern/kernel.asm	/^f0106933:	8d 9e 00 00 00 f0    	lea    -0x10000000(%esi),%ebx$/;"	l
f0106939	obj/kern/kernel.asm	/^f0106939:	c7 44 24 08 04 00 00 	movl   $0x4,0x8(%esp)$/;"	l
f0106940	obj/kern/kernel.asm	/^f0106940:	00 $/;"	l
f0106941	obj/kern/kernel.asm	/^f0106941:	c7 44 24 04 22 9d 10 	movl   $0xf0109d22,0x4(%esp)$/;"	l
f0106948	obj/kern/kernel.asm	/^f0106948:	f0 $/;"	l
f0106949	obj/kern/kernel.asm	/^f0106949:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010694c	obj/kern/kernel.asm	/^f010694c:	e8 8c fc ff ff       	call   f01065dd <memcmp>$/;"	l
f0106951	obj/kern/kernel.asm	/^f0106951:	85 c0                	test   %eax,%eax$/;"	l
f0106953	obj/kern/kernel.asm	/^f0106953:	74 11                	je     f0106966 <mp_init+0x11c>$/;"	l
f0106955	obj/kern/kernel.asm	/^f0106955:	c7 04 24 b0 9b 10 f0 	movl   $0xf0109bb0,(%esp)$/;"	l
f010695c	obj/kern/kernel.asm	/^f010695c:	e8 8b d6 ff ff       	call   f0103fec <cprintf>$/;"	l
f0106961	obj/kern/kernel.asm	/^f0106961:	e9 d3 01 00 00       	jmp    f0106b39 <mp_init+0x2ef>$/;"	l
f0106966	obj/kern/kernel.asm	/^f0106966:	0f b7 43 04          	movzwl 0x4(%ebx),%eax$/;"	l
f010696a	obj/kern/kernel.asm	/^f010696a:	66 89 45 e2          	mov    %ax,-0x1e(%ebp)$/;"	l
f010696e	obj/kern/kernel.asm	/^f010696e:	0f b7 f8             	movzwl %ax,%edi$/;"	l
f0106971	obj/kern/kernel.asm	/^f0106971:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106976	obj/kern/kernel.asm	/^f0106976:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010697b	obj/kern/kernel.asm	/^f010697b:	eb 0d                	jmp    f010698a <mp_init+0x140>$/;"	l
f010697d	obj/kern/kernel.asm	/^f010697d:	0f b6 8c 30 00 00 00 	movzbl -0x10000000(%eax,%esi,1),%ecx$/;"	l
f0106984	obj/kern/kernel.asm	/^f0106984:	f0 $/;"	l
f0106985	obj/kern/kernel.asm	/^f0106985:	01 ca                	add    %ecx,%edx$/;"	l
f0106987	obj/kern/kernel.asm	/^f0106987:	83 c0 01             	add    $0x1,%eax$/;"	l
f010698a	obj/kern/kernel.asm	/^f010698a:	39 c7                	cmp    %eax,%edi$/;"	l
f010698c	obj/kern/kernel.asm	/^f010698c:	7f ef                	jg     f010697d <mp_init+0x133>$/;"	l
f010698e	obj/kern/kernel.asm	/^f010698e:	84 d2                	test   %dl,%dl$/;"	l
f0106990	obj/kern/kernel.asm	/^f0106990:	74 11                	je     f01069a3 <mp_init+0x159>$/;"	l
f0106992	obj/kern/kernel.asm	/^f0106992:	c7 04 24 e4 9b 10 f0 	movl   $0xf0109be4,(%esp)$/;"	l
f0106999	obj/kern/kernel.asm	/^f0106999:	e8 4e d6 ff ff       	call   f0103fec <cprintf>$/;"	l
f010699e	obj/kern/kernel.asm	/^f010699e:	e9 96 01 00 00       	jmp    f0106b39 <mp_init+0x2ef>$/;"	l
f01069a3	obj/kern/kernel.asm	/^f01069a3:	0f b6 43 06          	movzbl 0x6(%ebx),%eax$/;"	l
f01069a7	obj/kern/kernel.asm	/^f01069a7:	3c 04                	cmp    $0x4,%al$/;"	l
f01069a9	obj/kern/kernel.asm	/^f01069a9:	74 1f                	je     f01069ca <mp_init+0x180>$/;"	l
f01069ab	obj/kern/kernel.asm	/^f01069ab:	3c 01                	cmp    $0x1,%al$/;"	l
f01069ad	obj/kern/kernel.asm	/^f01069ad:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f01069b0	obj/kern/kernel.asm	/^f01069b0:	74 18                	je     f01069ca <mp_init+0x180>$/;"	l
f01069b2	obj/kern/kernel.asm	/^f01069b2:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01069b5	obj/kern/kernel.asm	/^f01069b5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01069b9	obj/kern/kernel.asm	/^f01069b9:	c7 04 24 08 9c 10 f0 	movl   $0xf0109c08,(%esp)$/;"	l
f01069c0	obj/kern/kernel.asm	/^f01069c0:	e8 27 d6 ff ff       	call   f0103fec <cprintf>$/;"	l
f01069c5	obj/kern/kernel.asm	/^f01069c5:	e9 6f 01 00 00       	jmp    f0106b39 <mp_init+0x2ef>$/;"	l
f01069ca	obj/kern/kernel.asm	/^f01069ca:	0f b7 73 28          	movzwl 0x28(%ebx),%esi$/;"	l
f01069ce	obj/kern/kernel.asm	/^f01069ce:	0f b7 7d e2          	movzwl -0x1e(%ebp),%edi$/;"	l
f01069d2	obj/kern/kernel.asm	/^f01069d2:	01 df                	add    %ebx,%edi$/;"	l
f01069d4	obj/kern/kernel.asm	/^f01069d4:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01069d9	obj/kern/kernel.asm	/^f01069d9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01069de	obj/kern/kernel.asm	/^f01069de:	eb 09                	jmp    f01069e9 <mp_init+0x19f>$/;"	l
f01069e0	obj/kern/kernel.asm	/^f01069e0:	0f b6 0c 07          	movzbl (%edi,%eax,1),%ecx$/;"	l
f01069e4	obj/kern/kernel.asm	/^f01069e4:	01 ca                	add    %ecx,%edx$/;"	l
f01069e6	obj/kern/kernel.asm	/^f01069e6:	83 c0 01             	add    $0x1,%eax$/;"	l
f01069e9	obj/kern/kernel.asm	/^f01069e9:	39 c6                	cmp    %eax,%esi$/;"	l
f01069eb	obj/kern/kernel.asm	/^f01069eb:	7f f3                	jg     f01069e0 <mp_init+0x196>$/;"	l
f01069ed	obj/kern/kernel.asm	/^f01069ed:	02 53 2a             	add    0x2a(%ebx),%dl$/;"	l
f01069f0	obj/kern/kernel.asm	/^f01069f0:	84 d2                	test   %dl,%dl$/;"	l
f01069f2	obj/kern/kernel.asm	/^f01069f2:	74 11                	je     f0106a05 <mp_init+0x1bb>$/;"	l
f01069f4	obj/kern/kernel.asm	/^f01069f4:	c7 04 24 28 9c 10 f0 	movl   $0xf0109c28,(%esp)$/;"	l
f01069fb	obj/kern/kernel.asm	/^f01069fb:	e8 ec d5 ff ff       	call   f0103fec <cprintf>$/;"	l
f0106a00	obj/kern/kernel.asm	/^f0106a00:	e9 34 01 00 00       	jmp    f0106b39 <mp_init+0x2ef>$/;"	l
f0106a05	obj/kern/kernel.asm	/^f0106a05:	85 db                	test   %ebx,%ebx$/;"	l
f0106a07	obj/kern/kernel.asm	/^f0106a07:	0f 84 2c 01 00 00    	je     f0106b39 <mp_init+0x2ef>$/;"	l
f0106a0d	obj/kern/kernel.asm	/^f0106a0d:	c7 05 00 a0 2b f0 01 	movl   $0x1,0xf02ba000$/;"	l
f0106a14	obj/kern/kernel.asm	/^f0106a14:	00 00 00 $/;"	l
f0106a17	obj/kern/kernel.asm	/^f0106a17:	8b 43 24             	mov    0x24(%ebx),%eax$/;"	l
f0106a1a	obj/kern/kernel.asm	/^f0106a1a:	a3 00 b0 2f f0       	mov    %eax,0xf02fb000$/;"	l
f0106a1f	obj/kern/kernel.asm	/^f0106a1f:	8d 7b 2c             	lea    0x2c(%ebx),%edi$/;"	l
f0106a22	obj/kern/kernel.asm	/^f0106a22:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0106a27	obj/kern/kernel.asm	/^f0106a27:	e9 86 00 00 00       	jmp    f0106ab2 <mp_init+0x268>$/;"	l
f0106a2c	obj/kern/kernel.asm	/^f0106a2c:	0f b6 07             	movzbl (%edi),%eax$/;"	l
f0106a2f	obj/kern/kernel.asm	/^f0106a2f:	84 c0                	test   %al,%al$/;"	l
f0106a31	obj/kern/kernel.asm	/^f0106a31:	74 06                	je     f0106a39 <mp_init+0x1ef>$/;"	l
f0106a33	obj/kern/kernel.asm	/^f0106a33:	3c 04                	cmp    $0x4,%al$/;"	l
f0106a35	obj/kern/kernel.asm	/^f0106a35:	77 57                	ja     f0106a8e <mp_init+0x244>$/;"	l
f0106a37	obj/kern/kernel.asm	/^f0106a37:	eb 50                	jmp    f0106a89 <mp_init+0x23f>$/;"	l
f0106a39	obj/kern/kernel.asm	/^f0106a39:	f6 47 03 02          	testb  $0x2,0x3(%edi)$/;"	l
f0106a3d	obj/kern/kernel.asm	/^f0106a3d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0106a40	obj/kern/kernel.asm	/^f0106a40:	74 11                	je     f0106a53 <mp_init+0x209>$/;"	l
f0106a42	obj/kern/kernel.asm	/^f0106a42:	6b 05 c4 a3 2b f0 74 	imul   $0x74,0xf02ba3c4,%eax$/;"	l
f0106a49	obj/kern/kernel.asm	/^f0106a49:	05 20 a0 2b f0       	add    $0xf02ba020,%eax$/;"	l
f0106a4e	obj/kern/kernel.asm	/^f0106a4e:	a3 c0 a3 2b f0       	mov    %eax,0xf02ba3c0$/;"	l
f0106a53	obj/kern/kernel.asm	/^f0106a53:	a1 c4 a3 2b f0       	mov    0xf02ba3c4,%eax$/;"	l
f0106a58	obj/kern/kernel.asm	/^f0106a58:	83 f8 07             	cmp    $0x7,%eax$/;"	l
f0106a5b	obj/kern/kernel.asm	/^f0106a5b:	7f 13                	jg     f0106a70 <mp_init+0x226>$/;"	l
f0106a5d	obj/kern/kernel.asm	/^f0106a5d:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0106a60	obj/kern/kernel.asm	/^f0106a60:	88 82 20 a0 2b f0    	mov    %al,-0xfd45fe0(%edx)$/;"	l
f0106a66	obj/kern/kernel.asm	/^f0106a66:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106a69	obj/kern/kernel.asm	/^f0106a69:	a3 c4 a3 2b f0       	mov    %eax,0xf02ba3c4$/;"	l
f0106a6e	obj/kern/kernel.asm	/^f0106a6e:	eb 14                	jmp    f0106a84 <mp_init+0x23a>$/;"	l
f0106a70	obj/kern/kernel.asm	/^f0106a70:	0f b6 47 01          	movzbl 0x1(%edi),%eax$/;"	l
f0106a74	obj/kern/kernel.asm	/^f0106a74:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106a78	obj/kern/kernel.asm	/^f0106a78:	c7 04 24 58 9c 10 f0 	movl   $0xf0109c58,(%esp)$/;"	l
f0106a7f	obj/kern/kernel.asm	/^f0106a7f:	e8 68 d5 ff ff       	call   f0103fec <cprintf>$/;"	l
f0106a84	obj/kern/kernel.asm	/^f0106a84:	83 c7 14             	add    $0x14,%edi$/;"	l
f0106a87	obj/kern/kernel.asm	/^f0106a87:	eb 26                	jmp    f0106aaf <mp_init+0x265>$/;"	l
f0106a89	obj/kern/kernel.asm	/^f0106a89:	83 c7 08             	add    $0x8,%edi$/;"	l
f0106a8c	obj/kern/kernel.asm	/^f0106a8c:	eb 21                	jmp    f0106aaf <mp_init+0x265>$/;"	l
f0106a8e	obj/kern/kernel.asm	/^f0106a8e:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0106a91	obj/kern/kernel.asm	/^f0106a91:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106a95	obj/kern/kernel.asm	/^f0106a95:	c7 04 24 80 9c 10 f0 	movl   $0xf0109c80,(%esp)$/;"	l
f0106a9c	obj/kern/kernel.asm	/^f0106a9c:	e8 4b d5 ff ff       	call   f0103fec <cprintf>$/;"	l
f0106aa1	obj/kern/kernel.asm	/^f0106aa1:	c7 05 00 a0 2b f0 00 	movl   $0x0,0xf02ba000$/;"	l
f0106aa8	obj/kern/kernel.asm	/^f0106aa8:	00 00 00 $/;"	l
f0106aab	obj/kern/kernel.asm	/^f0106aab:	0f b7 73 22          	movzwl 0x22(%ebx),%esi$/;"	l
f0106aaf	obj/kern/kernel.asm	/^f0106aaf:	83 c6 01             	add    $0x1,%esi$/;"	l
f0106ab2	obj/kern/kernel.asm	/^f0106ab2:	0f b7 43 22          	movzwl 0x22(%ebx),%eax$/;"	l
f0106ab6	obj/kern/kernel.asm	/^f0106ab6:	39 c6                	cmp    %eax,%esi$/;"	l
f0106ab8	obj/kern/kernel.asm	/^f0106ab8:	0f 82 6e ff ff ff    	jb     f0106a2c <mp_init+0x1e2>$/;"	l
f0106abe	obj/kern/kernel.asm	/^f0106abe:	a1 c0 a3 2b f0       	mov    0xf02ba3c0,%eax$/;"	l
f0106ac3	obj/kern/kernel.asm	/^f0106ac3:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)$/;"	l
f0106aca	obj/kern/kernel.asm	/^f0106aca:	83 3d 00 a0 2b f0 00 	cmpl   $0x0,0xf02ba000$/;"	l
f0106ad1	obj/kern/kernel.asm	/^f0106ad1:	75 22                	jne    f0106af5 <mp_init+0x2ab>$/;"	l
f0106ad3	obj/kern/kernel.asm	/^f0106ad3:	c7 05 c4 a3 2b f0 01 	movl   $0x1,0xf02ba3c4$/;"	l
f0106ada	obj/kern/kernel.asm	/^f0106ada:	00 00 00 $/;"	l
f0106add	obj/kern/kernel.asm	/^f0106add:	c7 05 00 b0 2f f0 00 	movl   $0x0,0xf02fb000$/;"	l
f0106ae4	obj/kern/kernel.asm	/^f0106ae4:	00 00 00 $/;"	l
f0106ae7	obj/kern/kernel.asm	/^f0106ae7:	c7 04 24 a0 9c 10 f0 	movl   $0xf0109ca0,(%esp)$/;"	l
f0106aee	obj/kern/kernel.asm	/^f0106aee:	e8 f9 d4 ff ff       	call   f0103fec <cprintf>$/;"	l
f0106af3	obj/kern/kernel.asm	/^f0106af3:	eb 44                	jmp    f0106b39 <mp_init+0x2ef>$/;"	l
f0106af5	obj/kern/kernel.asm	/^f0106af5:	8b 15 c4 a3 2b f0    	mov    0xf02ba3c4,%edx$/;"	l
f0106afb	obj/kern/kernel.asm	/^f0106afb:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0106aff	obj/kern/kernel.asm	/^f0106aff:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0106b02	obj/kern/kernel.asm	/^f0106b02:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106b06	obj/kern/kernel.asm	/^f0106b06:	c7 04 24 27 9d 10 f0 	movl   $0xf0109d27,(%esp)$/;"	l
f0106b0d	obj/kern/kernel.asm	/^f0106b0d:	e8 da d4 ff ff       	call   f0103fec <cprintf>$/;"	l
f0106b12	obj/kern/kernel.asm	/^f0106b12:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0106b15	obj/kern/kernel.asm	/^f0106b15:	80 78 0c 00          	cmpb   $0x0,0xc(%eax)$/;"	l
f0106b19	obj/kern/kernel.asm	/^f0106b19:	74 1e                	je     f0106b39 <mp_init+0x2ef>$/;"	l
f0106b1b	obj/kern/kernel.asm	/^f0106b1b:	c7 04 24 cc 9c 10 f0 	movl   $0xf0109ccc,(%esp)$/;"	l
f0106b22	obj/kern/kernel.asm	/^f0106b22:	e8 c5 d4 ff ff       	call   f0103fec <cprintf>$/;"	l
f0106b27	obj/kern/kernel.asm	/^f0106b27:	ba 22 00 00 00       	mov    $0x22,%edx$/;"	l
f0106b2c	obj/kern/kernel.asm	/^f0106b2c:	b8 70 00 00 00       	mov    $0x70,%eax$/;"	l
f0106b31	obj/kern/kernel.asm	/^f0106b31:	ee                   	out    %al,(%dx)$/;"	l
f0106b32	obj/kern/kernel.asm	/^f0106b32:	b2 23                	mov    $0x23,%dl$/;"	l
f0106b34	obj/kern/kernel.asm	/^f0106b34:	ec                   	in     (%dx),%al$/;"	l
f0106b35	obj/kern/kernel.asm	/^f0106b35:	83 c8 01             	or     $0x1,%eax$/;"	l
f0106b38	obj/kern/kernel.asm	/^f0106b38:	ee                   	out    %al,(%dx)$/;"	l
f0106b39	obj/kern/kernel.asm	/^f0106b39:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0106b3c	obj/kern/kernel.asm	/^f0106b3c:	5b                   	pop    %ebx$/;"	l
f0106b3d	obj/kern/kernel.asm	/^f0106b3d:	5e                   	pop    %esi$/;"	l
f0106b3e	obj/kern/kernel.asm	/^f0106b3e:	5f                   	pop    %edi$/;"	l
f0106b3f	obj/kern/kernel.asm	/^f0106b3f:	5d                   	pop    %ebp$/;"	l
f0106b40	obj/kern/kernel.asm	/^f0106b40:	c3                   	ret    $/;"	l
f0106b41	obj/kern/kernel.asm	/^f0106b41 <lapicw>:$/;"	l
f0106b41	obj/kern/kernel.asm	/^f0106b41:	55                   	push   %ebp$/;"	l
f0106b42	obj/kern/kernel.asm	/^f0106b42:	89 e5                	mov    %esp,%ebp$/;"	l
f0106b44	obj/kern/kernel.asm	/^f0106b44:	8b 0d 04 b0 2f f0    	mov    0xf02fb004,%ecx$/;"	l
f0106b4a	obj/kern/kernel.asm	/^f0106b4a:	8d 04 81             	lea    (%ecx,%eax,4),%eax$/;"	l
f0106b4d	obj/kern/kernel.asm	/^f0106b4d:	89 10                	mov    %edx,(%eax)$/;"	l
f0106b4f	obj/kern/kernel.asm	/^f0106b4f:	a1 04 b0 2f f0       	mov    0xf02fb004,%eax$/;"	l
f0106b54	obj/kern/kernel.asm	/^f0106b54:	8b 40 20             	mov    0x20(%eax),%eax$/;"	l
f0106b57	obj/kern/kernel.asm	/^f0106b57:	5d                   	pop    %ebp$/;"	l
f0106b58	obj/kern/kernel.asm	/^f0106b58:	c3                   	ret    $/;"	l
f0106b59	obj/kern/kernel.asm	/^f0106b59 <cpunum>:$/;"	l
f0106b59	obj/kern/kernel.asm	/^f0106b59:	55                   	push   %ebp$/;"	l
f0106b5a	obj/kern/kernel.asm	/^f0106b5a:	89 e5                	mov    %esp,%ebp$/;"	l
f0106b5c	obj/kern/kernel.asm	/^f0106b5c:	a1 04 b0 2f f0       	mov    0xf02fb004,%eax$/;"	l
f0106b61	obj/kern/kernel.asm	/^f0106b61:	85 c0                	test   %eax,%eax$/;"	l
f0106b63	obj/kern/kernel.asm	/^f0106b63:	74 08                	je     f0106b6d <cpunum+0x14>$/;"	l
f0106b65	obj/kern/kernel.asm	/^f0106b65:	8b 40 20             	mov    0x20(%eax),%eax$/;"	l
f0106b68	obj/kern/kernel.asm	/^f0106b68:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f0106b6b	obj/kern/kernel.asm	/^f0106b6b:	eb 05                	jmp    f0106b72 <cpunum+0x19>$/;"	l
f0106b6d	obj/kern/kernel.asm	/^f0106b6d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106b72	obj/kern/kernel.asm	/^f0106b72:	5d                   	pop    %ebp$/;"	l
f0106b73	obj/kern/kernel.asm	/^f0106b73:	c3                   	ret    $/;"	l
f0106b74	obj/kern/kernel.asm	/^f0106b74 <lapic_init>:$/;"	l
f0106b74	obj/kern/kernel.asm	/^f0106b74:	a1 00 b0 2f f0       	mov    0xf02fb000,%eax$/;"	l
f0106b79	obj/kern/kernel.asm	/^f0106b79:	85 c0                	test   %eax,%eax$/;"	l
f0106b7b	obj/kern/kernel.asm	/^f0106b7b:	0f 84 23 01 00 00    	je     f0106ca4 <lapic_init+0x130>$/;"	l
f0106b81	obj/kern/kernel.asm	/^f0106b81:	55                   	push   %ebp$/;"	l
f0106b82	obj/kern/kernel.asm	/^f0106b82:	89 e5                	mov    %esp,%ebp$/;"	l
f0106b84	obj/kern/kernel.asm	/^f0106b84:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0106b87	obj/kern/kernel.asm	/^f0106b87:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0106b8e	obj/kern/kernel.asm	/^f0106b8e:	00 $/;"	l
f0106b8f	obj/kern/kernel.asm	/^f0106b8f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106b92	obj/kern/kernel.asm	/^f0106b92:	e8 7e a9 ff ff       	call   f0101515 <mmio_map_region>$/;"	l
f0106b97	obj/kern/kernel.asm	/^f0106b97:	a3 04 b0 2f f0       	mov    %eax,0xf02fb004$/;"	l
f0106b9c	obj/kern/kernel.asm	/^f0106b9c:	ba 27 01 00 00       	mov    $0x127,%edx$/;"	l
f0106ba1	obj/kern/kernel.asm	/^f0106ba1:	b8 3c 00 00 00       	mov    $0x3c,%eax$/;"	l
f0106ba6	obj/kern/kernel.asm	/^f0106ba6:	e8 96 ff ff ff       	call   f0106b41 <lapicw>$/;"	l
f0106bab	obj/kern/kernel.asm	/^f0106bab:	ba 0b 00 00 00       	mov    $0xb,%edx$/;"	l
f0106bb0	obj/kern/kernel.asm	/^f0106bb0:	b8 f8 00 00 00       	mov    $0xf8,%eax$/;"	l
f0106bb5	obj/kern/kernel.asm	/^f0106bb5:	e8 87 ff ff ff       	call   f0106b41 <lapicw>$/;"	l
f0106bba	obj/kern/kernel.asm	/^f0106bba:	ba 20 00 02 00       	mov    $0x20020,%edx$/;"	l
f0106bbf	obj/kern/kernel.asm	/^f0106bbf:	b8 c8 00 00 00       	mov    $0xc8,%eax$/;"	l
f0106bc4	obj/kern/kernel.asm	/^f0106bc4:	e8 78 ff ff ff       	call   f0106b41 <lapicw>$/;"	l
f0106bc9	obj/kern/kernel.asm	/^f0106bc9:	ba 80 96 98 00       	mov    $0x989680,%edx$/;"	l
f0106bce	obj/kern/kernel.asm	/^f0106bce:	b8 e0 00 00 00       	mov    $0xe0,%eax$/;"	l
f0106bd3	obj/kern/kernel.asm	/^f0106bd3:	e8 69 ff ff ff       	call   f0106b41 <lapicw>$/;"	l
f0106bd8	obj/kern/kernel.asm	/^f0106bd8:	e8 7c ff ff ff       	call   f0106b59 <cpunum>$/;"	l
f0106bdd	obj/kern/kernel.asm	/^f0106bdd:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0106be0	obj/kern/kernel.asm	/^f0106be0:	05 20 a0 2b f0       	add    $0xf02ba020,%eax$/;"	l
f0106be5	obj/kern/kernel.asm	/^f0106be5:	39 05 c0 a3 2b f0    	cmp    %eax,0xf02ba3c0$/;"	l
f0106beb	obj/kern/kernel.asm	/^f0106beb:	74 0f                	je     f0106bfc <lapic_init+0x88>$/;"	l
f0106bed	obj/kern/kernel.asm	/^f0106bed:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0106bf2	obj/kern/kernel.asm	/^f0106bf2:	b8 d4 00 00 00       	mov    $0xd4,%eax$/;"	l
f0106bf7	obj/kern/kernel.asm	/^f0106bf7:	e8 45 ff ff ff       	call   f0106b41 <lapicw>$/;"	l
f0106bfc	obj/kern/kernel.asm	/^f0106bfc:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0106c01	obj/kern/kernel.asm	/^f0106c01:	b8 d8 00 00 00       	mov    $0xd8,%eax$/;"	l
f0106c06	obj/kern/kernel.asm	/^f0106c06:	e8 36 ff ff ff       	call   f0106b41 <lapicw>$/;"	l
f0106c0b	obj/kern/kernel.asm	/^f0106c0b:	a1 04 b0 2f f0       	mov    0xf02fb004,%eax$/;"	l
f0106c10	obj/kern/kernel.asm	/^f0106c10:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
f0106c13	obj/kern/kernel.asm	/^f0106c13:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0106c16	obj/kern/kernel.asm	/^f0106c16:	3c 03                	cmp    $0x3,%al$/;"	l
f0106c18	obj/kern/kernel.asm	/^f0106c18:	76 0f                	jbe    f0106c29 <lapic_init+0xb5>$/;"	l
f0106c1a	obj/kern/kernel.asm	/^f0106c1a:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0106c1f	obj/kern/kernel.asm	/^f0106c1f:	b8 d0 00 00 00       	mov    $0xd0,%eax$/;"	l
f0106c24	obj/kern/kernel.asm	/^f0106c24:	e8 18 ff ff ff       	call   f0106b41 <lapicw>$/;"	l
f0106c29	obj/kern/kernel.asm	/^f0106c29:	ba 33 00 00 00       	mov    $0x33,%edx$/;"	l
f0106c2e	obj/kern/kernel.asm	/^f0106c2e:	b8 dc 00 00 00       	mov    $0xdc,%eax$/;"	l
f0106c33	obj/kern/kernel.asm	/^f0106c33:	e8 09 ff ff ff       	call   f0106b41 <lapicw>$/;"	l
f0106c38	obj/kern/kernel.asm	/^f0106c38:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106c3d	obj/kern/kernel.asm	/^f0106c3d:	b8 a0 00 00 00       	mov    $0xa0,%eax$/;"	l
f0106c42	obj/kern/kernel.asm	/^f0106c42:	e8 fa fe ff ff       	call   f0106b41 <lapicw>$/;"	l
f0106c47	obj/kern/kernel.asm	/^f0106c47:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106c4c	obj/kern/kernel.asm	/^f0106c4c:	b8 a0 00 00 00       	mov    $0xa0,%eax$/;"	l
f0106c51	obj/kern/kernel.asm	/^f0106c51:	e8 eb fe ff ff       	call   f0106b41 <lapicw>$/;"	l
f0106c56	obj/kern/kernel.asm	/^f0106c56:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106c5b	obj/kern/kernel.asm	/^f0106c5b:	b8 2c 00 00 00       	mov    $0x2c,%eax$/;"	l
f0106c60	obj/kern/kernel.asm	/^f0106c60:	e8 dc fe ff ff       	call   f0106b41 <lapicw>$/;"	l
f0106c65	obj/kern/kernel.asm	/^f0106c65:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106c6a	obj/kern/kernel.asm	/^f0106c6a:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0106c6f	obj/kern/kernel.asm	/^f0106c6f:	e8 cd fe ff ff       	call   f0106b41 <lapicw>$/;"	l
f0106c74	obj/kern/kernel.asm	/^f0106c74:	ba 00 85 08 00       	mov    $0x88500,%edx$/;"	l
f0106c79	obj/kern/kernel.asm	/^f0106c79:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106c7e	obj/kern/kernel.asm	/^f0106c7e:	e8 be fe ff ff       	call   f0106b41 <lapicw>$/;"	l
f0106c83	obj/kern/kernel.asm	/^f0106c83:	8b 15 04 b0 2f f0    	mov    0xf02fb004,%edx$/;"	l
f0106c89	obj/kern/kernel.asm	/^f0106c89:	8b 82 00 03 00 00    	mov    0x300(%edx),%eax$/;"	l
f0106c8f	obj/kern/kernel.asm	/^f0106c8f:	f6 c4 10             	test   $0x10,%ah$/;"	l
f0106c92	obj/kern/kernel.asm	/^f0106c92:	75 f5                	jne    f0106c89 <lapic_init+0x115>$/;"	l
f0106c94	obj/kern/kernel.asm	/^f0106c94:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106c99	obj/kern/kernel.asm	/^f0106c99:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0106c9e	obj/kern/kernel.asm	/^f0106c9e:	e8 9e fe ff ff       	call   f0106b41 <lapicw>$/;"	l
f0106ca3	obj/kern/kernel.asm	/^f0106ca3:	c9                   	leave  $/;"	l
f0106ca4	obj/kern/kernel.asm	/^f0106ca4:	f3 c3                	repz ret $/;"	l
f0106ca6	obj/kern/kernel.asm	/^f0106ca6 <lapic_eoi>:$/;"	l
f0106ca6	obj/kern/kernel.asm	/^f0106ca6:	83 3d 04 b0 2f f0 00 	cmpl   $0x0,0xf02fb004$/;"	l
f0106cad	obj/kern/kernel.asm	/^f0106cad:	74 13                	je     f0106cc2 <lapic_eoi+0x1c>$/;"	l
f0106caf	obj/kern/kernel.asm	/^f0106caf:	55                   	push   %ebp$/;"	l
f0106cb0	obj/kern/kernel.asm	/^f0106cb0:	89 e5                	mov    %esp,%ebp$/;"	l
f0106cb2	obj/kern/kernel.asm	/^f0106cb2:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106cb7	obj/kern/kernel.asm	/^f0106cb7:	b8 2c 00 00 00       	mov    $0x2c,%eax$/;"	l
f0106cbc	obj/kern/kernel.asm	/^f0106cbc:	e8 80 fe ff ff       	call   f0106b41 <lapicw>$/;"	l
f0106cc1	obj/kern/kernel.asm	/^f0106cc1:	5d                   	pop    %ebp$/;"	l
f0106cc2	obj/kern/kernel.asm	/^f0106cc2:	f3 c3                	repz ret $/;"	l
f0106cc4	obj/kern/kernel.asm	/^f0106cc4 <lapic_startap>:$/;"	l
f0106cc4	obj/kern/kernel.asm	/^f0106cc4:	55                   	push   %ebp$/;"	l
f0106cc5	obj/kern/kernel.asm	/^f0106cc5:	89 e5                	mov    %esp,%ebp$/;"	l
f0106cc7	obj/kern/kernel.asm	/^f0106cc7:	56                   	push   %esi$/;"	l
f0106cc8	obj/kern/kernel.asm	/^f0106cc8:	53                   	push   %ebx$/;"	l
f0106cc9	obj/kern/kernel.asm	/^f0106cc9:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0106ccc	obj/kern/kernel.asm	/^f0106ccc:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0106ccf	obj/kern/kernel.asm	/^f0106ccf:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0106cd2	obj/kern/kernel.asm	/^f0106cd2:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0106cd7	obj/kern/kernel.asm	/^f0106cd7:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f0106cdc	obj/kern/kernel.asm	/^f0106cdc:	ee                   	out    %al,(%dx)$/;"	l
f0106cdd	obj/kern/kernel.asm	/^f0106cdd:	b2 71                	mov    $0x71,%dl$/;"	l
f0106cdf	obj/kern/kernel.asm	/^f0106cdf:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0106ce4	obj/kern/kernel.asm	/^f0106ce4:	ee                   	out    %al,(%dx)$/;"	l
f0106ce5	obj/kern/kernel.asm	/^f0106ce5:	83 3d 94 9e 2b f0 00 	cmpl   $0x0,0xf02b9e94$/;"	l
f0106cec	obj/kern/kernel.asm	/^f0106cec:	75 24                	jne    f0106d12 <lapic_startap+0x4e>$/;"	l
f0106cee	obj/kern/kernel.asm	/^f0106cee:	c7 44 24 0c 67 04 00 	movl   $0x467,0xc(%esp)$/;"	l
f0106cf5	obj/kern/kernel.asm	/^f0106cf5:	00 $/;"	l
f0106cf6	obj/kern/kernel.asm	/^f0106cf6:	c7 44 24 08 c4 7f 10 	movl   $0xf0107fc4,0x8(%esp)$/;"	l
f0106cfd	obj/kern/kernel.asm	/^f0106cfd:	f0 $/;"	l
f0106cfe	obj/kern/kernel.asm	/^f0106cfe:	c7 44 24 04 98 00 00 	movl   $0x98,0x4(%esp)$/;"	l
f0106d05	obj/kern/kernel.asm	/^f0106d05:	00 $/;"	l
f0106d06	obj/kern/kernel.asm	/^f0106d06:	c7 04 24 44 9d 10 f0 	movl   $0xf0109d44,(%esp)$/;"	l
f0106d0d	obj/kern/kernel.asm	/^f0106d0d:	e8 2e 93 ff ff       	call   f0100040 <_panic>$/;"	l
f0106d12	obj/kern/kernel.asm	/^f0106d12:	66 c7 05 67 04 00 f0 	movw   $0x0,0xf0000467$/;"	l
f0106d19	obj/kern/kernel.asm	/^f0106d19:	00 00 $/;"	l
f0106d1b	obj/kern/kernel.asm	/^f0106d1b:	89 f0                	mov    %esi,%eax$/;"	l
f0106d1d	obj/kern/kernel.asm	/^f0106d1d:	c1 e8 04             	shr    $0x4,%eax$/;"	l
f0106d20	obj/kern/kernel.asm	/^f0106d20:	66 a3 69 04 00 f0    	mov    %ax,0xf0000469$/;"	l
f0106d26	obj/kern/kernel.asm	/^f0106d26:	c1 e3 18             	shl    $0x18,%ebx$/;"	l
f0106d29	obj/kern/kernel.asm	/^f0106d29:	89 da                	mov    %ebx,%edx$/;"	l
f0106d2b	obj/kern/kernel.asm	/^f0106d2b:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0106d30	obj/kern/kernel.asm	/^f0106d30:	e8 0c fe ff ff       	call   f0106b41 <lapicw>$/;"	l
f0106d35	obj/kern/kernel.asm	/^f0106d35:	ba 00 c5 00 00       	mov    $0xc500,%edx$/;"	l
f0106d3a	obj/kern/kernel.asm	/^f0106d3a:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106d3f	obj/kern/kernel.asm	/^f0106d3f:	e8 fd fd ff ff       	call   f0106b41 <lapicw>$/;"	l
f0106d44	obj/kern/kernel.asm	/^f0106d44:	ba 00 85 00 00       	mov    $0x8500,%edx$/;"	l
f0106d49	obj/kern/kernel.asm	/^f0106d49:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106d4e	obj/kern/kernel.asm	/^f0106d4e:	e8 ee fd ff ff       	call   f0106b41 <lapicw>$/;"	l
f0106d53	obj/kern/kernel.asm	/^f0106d53:	c1 ee 0c             	shr    $0xc,%esi$/;"	l
f0106d56	obj/kern/kernel.asm	/^f0106d56:	81 ce 00 06 00 00    	or     $0x600,%esi$/;"	l
f0106d5c	obj/kern/kernel.asm	/^f0106d5c:	89 da                	mov    %ebx,%edx$/;"	l
f0106d5e	obj/kern/kernel.asm	/^f0106d5e:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0106d63	obj/kern/kernel.asm	/^f0106d63:	e8 d9 fd ff ff       	call   f0106b41 <lapicw>$/;"	l
f0106d68	obj/kern/kernel.asm	/^f0106d68:	89 f2                	mov    %esi,%edx$/;"	l
f0106d6a	obj/kern/kernel.asm	/^f0106d6a:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106d6f	obj/kern/kernel.asm	/^f0106d6f:	e8 cd fd ff ff       	call   f0106b41 <lapicw>$/;"	l
f0106d74	obj/kern/kernel.asm	/^f0106d74:	89 da                	mov    %ebx,%edx$/;"	l
f0106d76	obj/kern/kernel.asm	/^f0106d76:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0106d7b	obj/kern/kernel.asm	/^f0106d7b:	e8 c1 fd ff ff       	call   f0106b41 <lapicw>$/;"	l
f0106d80	obj/kern/kernel.asm	/^f0106d80:	89 f2                	mov    %esi,%edx$/;"	l
f0106d82	obj/kern/kernel.asm	/^f0106d82:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106d87	obj/kern/kernel.asm	/^f0106d87:	e8 b5 fd ff ff       	call   f0106b41 <lapicw>$/;"	l
f0106d8c	obj/kern/kernel.asm	/^f0106d8c:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106d8f	obj/kern/kernel.asm	/^f0106d8f:	5b                   	pop    %ebx$/;"	l
f0106d90	obj/kern/kernel.asm	/^f0106d90:	5e                   	pop    %esi$/;"	l
f0106d91	obj/kern/kernel.asm	/^f0106d91:	5d                   	pop    %ebp$/;"	l
f0106d92	obj/kern/kernel.asm	/^f0106d92:	c3                   	ret    $/;"	l
f0106d93	obj/kern/kernel.asm	/^f0106d93 <lapic_ipi>:$/;"	l
f0106d93	obj/kern/kernel.asm	/^f0106d93:	55                   	push   %ebp$/;"	l
f0106d94	obj/kern/kernel.asm	/^f0106d94:	89 e5                	mov    %esp,%ebp$/;"	l
f0106d96	obj/kern/kernel.asm	/^f0106d96:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0106d99	obj/kern/kernel.asm	/^f0106d99:	81 ca 00 00 0c 00    	or     $0xc0000,%edx$/;"	l
f0106d9f	obj/kern/kernel.asm	/^f0106d9f:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106da4	obj/kern/kernel.asm	/^f0106da4:	e8 98 fd ff ff       	call   f0106b41 <lapicw>$/;"	l
f0106da9	obj/kern/kernel.asm	/^f0106da9:	8b 15 04 b0 2f f0    	mov    0xf02fb004,%edx$/;"	l
f0106daf	obj/kern/kernel.asm	/^f0106daf:	8b 82 00 03 00 00    	mov    0x300(%edx),%eax$/;"	l
f0106db5	obj/kern/kernel.asm	/^f0106db5:	f6 c4 10             	test   $0x10,%ah$/;"	l
f0106db8	obj/kern/kernel.asm	/^f0106db8:	75 f5                	jne    f0106daf <lapic_ipi+0x1c>$/;"	l
f0106dba	obj/kern/kernel.asm	/^f0106dba:	5d                   	pop    %ebp$/;"	l
f0106dbb	obj/kern/kernel.asm	/^f0106dbb:	c3                   	ret    $/;"	l
f0106dbc	obj/kern/kernel.asm	/^f0106dbc <__spin_initlock>:$/;"	l
f0106dbc	obj/kern/kernel.asm	/^f0106dbc:	55                   	push   %ebp$/;"	l
f0106dbd	obj/kern/kernel.asm	/^f0106dbd:	89 e5                	mov    %esp,%ebp$/;"	l
f0106dbf	obj/kern/kernel.asm	/^f0106dbf:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106dc2	obj/kern/kernel.asm	/^f0106dc2:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0106dc8	obj/kern/kernel.asm	/^f0106dc8:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0106dcb	obj/kern/kernel.asm	/^f0106dcb:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
f0106dce	obj/kern/kernel.asm	/^f0106dce:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
f0106dd5	obj/kern/kernel.asm	/^f0106dd5:	5d                   	pop    %ebp$/;"	l
f0106dd6	obj/kern/kernel.asm	/^f0106dd6:	c3                   	ret    $/;"	l
f0106dd7	obj/kern/kernel.asm	/^f0106dd7 <spin_lock>:$/;"	l
f0106dd7	obj/kern/kernel.asm	/^f0106dd7:	55                   	push   %ebp$/;"	l
f0106dd8	obj/kern/kernel.asm	/^f0106dd8:	89 e5                	mov    %esp,%ebp$/;"	l
f0106dda	obj/kern/kernel.asm	/^f0106dda:	56                   	push   %esi$/;"	l
f0106ddb	obj/kern/kernel.asm	/^f0106ddb:	53                   	push   %ebx$/;"	l
f0106ddc	obj/kern/kernel.asm	/^f0106ddc:	83 ec 20             	sub    $0x20,%esp$/;"	l
f0106ddf	obj/kern/kernel.asm	/^f0106ddf:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0106de2	obj/kern/kernel.asm	/^f0106de2:	83 3b 00             	cmpl   $0x0,(%ebx)$/;"	l
f0106de5	obj/kern/kernel.asm	/^f0106de5:	75 07                	jne    f0106dee <spin_lock+0x17>$/;"	l
f0106de7	obj/kern/kernel.asm	/^f0106de7:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
f0106dec	obj/kern/kernel.asm	/^f0106dec:	eb 42                	jmp    f0106e30 <spin_lock+0x59>$/;"	l
f0106dee	obj/kern/kernel.asm	/^f0106dee:	8b 73 08             	mov    0x8(%ebx),%esi$/;"	l
f0106df1	obj/kern/kernel.asm	/^f0106df1:	e8 63 fd ff ff       	call   f0106b59 <cpunum>$/;"	l
f0106df6	obj/kern/kernel.asm	/^f0106df6:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0106df9	obj/kern/kernel.asm	/^f0106df9:	05 20 a0 2b f0       	add    $0xf02ba020,%eax$/;"	l
f0106dfe	obj/kern/kernel.asm	/^f0106dfe:	39 c6                	cmp    %eax,%esi$/;"	l
f0106e00	obj/kern/kernel.asm	/^f0106e00:	75 e5                	jne    f0106de7 <spin_lock+0x10>$/;"	l
f0106e02	obj/kern/kernel.asm	/^f0106e02:	8b 5b 04             	mov    0x4(%ebx),%ebx$/;"	l
f0106e05	obj/kern/kernel.asm	/^f0106e05:	e8 4f fd ff ff       	call   f0106b59 <cpunum>$/;"	l
f0106e0a	obj/kern/kernel.asm	/^f0106e0a:	89 5c 24 10          	mov    %ebx,0x10(%esp)$/;"	l
f0106e0e	obj/kern/kernel.asm	/^f0106e0e:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0106e12	obj/kern/kernel.asm	/^f0106e12:	c7 44 24 08 54 9d 10 	movl   $0xf0109d54,0x8(%esp)$/;"	l
f0106e19	obj/kern/kernel.asm	/^f0106e19:	f0 $/;"	l
f0106e1a	obj/kern/kernel.asm	/^f0106e1a:	c7 44 24 04 41 00 00 	movl   $0x41,0x4(%esp)$/;"	l
f0106e21	obj/kern/kernel.asm	/^f0106e21:	00 $/;"	l
f0106e22	obj/kern/kernel.asm	/^f0106e22:	c7 04 24 b6 9d 10 f0 	movl   $0xf0109db6,(%esp)$/;"	l
f0106e29	obj/kern/kernel.asm	/^f0106e29:	e8 12 92 ff ff       	call   f0100040 <_panic>$/;"	l
f0106e2e	obj/kern/kernel.asm	/^f0106e2e:	f3 90                	pause  $/;"	l
f0106e30	obj/kern/kernel.asm	/^f0106e30:	89 d0                	mov    %edx,%eax$/;"	l
f0106e32	obj/kern/kernel.asm	/^f0106e32:	f0 87 03             	lock xchg %eax,(%ebx)$/;"	l
f0106e35	obj/kern/kernel.asm	/^f0106e35:	85 c0                	test   %eax,%eax$/;"	l
f0106e37	obj/kern/kernel.asm	/^f0106e37:	75 f5                	jne    f0106e2e <spin_lock+0x57>$/;"	l
f0106e39	obj/kern/kernel.asm	/^f0106e39:	e8 1b fd ff ff       	call   f0106b59 <cpunum>$/;"	l
f0106e3e	obj/kern/kernel.asm	/^f0106e3e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0106e41	obj/kern/kernel.asm	/^f0106e41:	05 20 a0 2b f0       	add    $0xf02ba020,%eax$/;"	l
f0106e46	obj/kern/kernel.asm	/^f0106e46:	89 43 08             	mov    %eax,0x8(%ebx)$/;"	l
f0106e49	obj/kern/kernel.asm	/^f0106e49:	83 c3 0c             	add    $0xc,%ebx$/;"	l
f0106e4c	obj/kern/kernel.asm	/^f0106e4c:	89 ea                	mov    %ebp,%edx$/;"	l
f0106e4e	obj/kern/kernel.asm	/^f0106e4e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106e53	obj/kern/kernel.asm	/^f0106e53:	81 fa ff ff 7f ef    	cmp    $0xef7fffff,%edx$/;"	l
f0106e59	obj/kern/kernel.asm	/^f0106e59:	76 12                	jbe    f0106e6d <spin_lock+0x96>$/;"	l
f0106e5b	obj/kern/kernel.asm	/^f0106e5b:	8b 4a 04             	mov    0x4(%edx),%ecx$/;"	l
f0106e5e	obj/kern/kernel.asm	/^f0106e5e:	89 0c 83             	mov    %ecx,(%ebx,%eax,4)$/;"	l
f0106e61	obj/kern/kernel.asm	/^f0106e61:	8b 12                	mov    (%edx),%edx$/;"	l
f0106e63	obj/kern/kernel.asm	/^f0106e63:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106e66	obj/kern/kernel.asm	/^f0106e66:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
f0106e69	obj/kern/kernel.asm	/^f0106e69:	75 e8                	jne    f0106e53 <spin_lock+0x7c>$/;"	l
f0106e6b	obj/kern/kernel.asm	/^f0106e6b:	eb 0f                	jmp    f0106e7c <spin_lock+0xa5>$/;"	l
f0106e6d	obj/kern/kernel.asm	/^f0106e6d:	c7 04 83 00 00 00 00 	movl   $0x0,(%ebx,%eax,4)$/;"	l
f0106e74	obj/kern/kernel.asm	/^f0106e74:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106e77	obj/kern/kernel.asm	/^f0106e77:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f0106e7a	obj/kern/kernel.asm	/^f0106e7a:	7e f1                	jle    f0106e6d <spin_lock+0x96>$/;"	l
f0106e7c	obj/kern/kernel.asm	/^f0106e7c:	83 c4 20             	add    $0x20,%esp$/;"	l
f0106e7f	obj/kern/kernel.asm	/^f0106e7f:	5b                   	pop    %ebx$/;"	l
f0106e80	obj/kern/kernel.asm	/^f0106e80:	5e                   	pop    %esi$/;"	l
f0106e81	obj/kern/kernel.asm	/^f0106e81:	5d                   	pop    %ebp$/;"	l
f0106e82	obj/kern/kernel.asm	/^f0106e82:	c3                   	ret    $/;"	l
f0106e83	obj/kern/kernel.asm	/^f0106e83 <spin_unlock>:$/;"	l
f0106e83	obj/kern/kernel.asm	/^f0106e83:	55                   	push   %ebp$/;"	l
f0106e84	obj/kern/kernel.asm	/^f0106e84:	89 e5                	mov    %esp,%ebp$/;"	l
f0106e86	obj/kern/kernel.asm	/^f0106e86:	57                   	push   %edi$/;"	l
f0106e87	obj/kern/kernel.asm	/^f0106e87:	56                   	push   %esi$/;"	l
f0106e88	obj/kern/kernel.asm	/^f0106e88:	53                   	push   %ebx$/;"	l
f0106e89	obj/kern/kernel.asm	/^f0106e89:	83 ec 6c             	sub    $0x6c,%esp$/;"	l
f0106e8c	obj/kern/kernel.asm	/^f0106e8c:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0106e8f	obj/kern/kernel.asm	/^f0106e8f:	83 3e 00             	cmpl   $0x0,(%esi)$/;"	l
f0106e92	obj/kern/kernel.asm	/^f0106e92:	74 18                	je     f0106eac <spin_unlock+0x29>$/;"	l
f0106e94	obj/kern/kernel.asm	/^f0106e94:	8b 5e 08             	mov    0x8(%esi),%ebx$/;"	l
f0106e97	obj/kern/kernel.asm	/^f0106e97:	e8 bd fc ff ff       	call   f0106b59 <cpunum>$/;"	l
f0106e9c	obj/kern/kernel.asm	/^f0106e9c:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0106e9f	obj/kern/kernel.asm	/^f0106e9f:	05 20 a0 2b f0       	add    $0xf02ba020,%eax$/;"	l
f0106ea4	obj/kern/kernel.asm	/^f0106ea4:	39 c3                	cmp    %eax,%ebx$/;"	l
f0106ea6	obj/kern/kernel.asm	/^f0106ea6:	0f 84 ce 00 00 00    	je     f0106f7a <spin_unlock+0xf7>$/;"	l
f0106eac	obj/kern/kernel.asm	/^f0106eac:	c7 44 24 08 28 00 00 	movl   $0x28,0x8(%esp)$/;"	l
f0106eb3	obj/kern/kernel.asm	/^f0106eb3:	00 $/;"	l
f0106eb4	obj/kern/kernel.asm	/^f0106eb4:	8d 46 0c             	lea    0xc(%esi),%eax$/;"	l
f0106eb7	obj/kern/kernel.asm	/^f0106eb7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106ebb	obj/kern/kernel.asm	/^f0106ebb:	8d 5d c0             	lea    -0x40(%ebp),%ebx$/;"	l
f0106ebe	obj/kern/kernel.asm	/^f0106ebe:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0106ec1	obj/kern/kernel.asm	/^f0106ec1:	e8 8e f6 ff ff       	call   f0106554 <memmove>$/;"	l
f0106ec6	obj/kern/kernel.asm	/^f0106ec6:	8b 46 08             	mov    0x8(%esi),%eax$/;"	l
f0106ec9	obj/kern/kernel.asm	/^f0106ec9:	0f b6 38             	movzbl (%eax),%edi$/;"	l
f0106ecc	obj/kern/kernel.asm	/^f0106ecc:	8b 76 04             	mov    0x4(%esi),%esi$/;"	l
f0106ecf	obj/kern/kernel.asm	/^f0106ecf:	e8 85 fc ff ff       	call   f0106b59 <cpunum>$/;"	l
f0106ed4	obj/kern/kernel.asm	/^f0106ed4:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f0106ed8	obj/kern/kernel.asm	/^f0106ed8:	89 74 24 08          	mov    %esi,0x8(%esp)$/;"	l
f0106edc	obj/kern/kernel.asm	/^f0106edc:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106ee0	obj/kern/kernel.asm	/^f0106ee0:	c7 04 24 80 9d 10 f0 	movl   $0xf0109d80,(%esp)$/;"	l
f0106ee7	obj/kern/kernel.asm	/^f0106ee7:	e8 00 d1 ff ff       	call   f0103fec <cprintf>$/;"	l
f0106eec	obj/kern/kernel.asm	/^f0106eec:	8d 7d a8             	lea    -0x58(%ebp),%edi$/;"	l
f0106eef	obj/kern/kernel.asm	/^f0106eef:	eb 65                	jmp    f0106f56 <spin_unlock+0xd3>$/;"	l
f0106ef1	obj/kern/kernel.asm	/^f0106ef1:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0106ef5	obj/kern/kernel.asm	/^f0106ef5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106ef8	obj/kern/kernel.asm	/^f0106ef8:	e8 03 ea ff ff       	call   f0105900 <debuginfo_eip>$/;"	l
f0106efd	obj/kern/kernel.asm	/^f0106efd:	85 c0                	test   %eax,%eax$/;"	l
f0106eff	obj/kern/kernel.asm	/^f0106eff:	78 39                	js     f0106f3a <spin_unlock+0xb7>$/;"	l
f0106f01	obj/kern/kernel.asm	/^f0106f01:	8b 06                	mov    (%esi),%eax$/;"	l
f0106f03	obj/kern/kernel.asm	/^f0106f03:	89 c2                	mov    %eax,%edx$/;"	l
f0106f05	obj/kern/kernel.asm	/^f0106f05:	2b 55 b8             	sub    -0x48(%ebp),%edx$/;"	l
f0106f08	obj/kern/kernel.asm	/^f0106f08:	89 54 24 18          	mov    %edx,0x18(%esp)$/;"	l
f0106f0c	obj/kern/kernel.asm	/^f0106f0c:	8b 55 b0             	mov    -0x50(%ebp),%edx$/;"	l
f0106f0f	obj/kern/kernel.asm	/^f0106f0f:	89 54 24 14          	mov    %edx,0x14(%esp)$/;"	l
f0106f13	obj/kern/kernel.asm	/^f0106f13:	8b 55 b4             	mov    -0x4c(%ebp),%edx$/;"	l
f0106f16	obj/kern/kernel.asm	/^f0106f16:	89 54 24 10          	mov    %edx,0x10(%esp)$/;"	l
f0106f1a	obj/kern/kernel.asm	/^f0106f1a:	8b 55 ac             	mov    -0x54(%ebp),%edx$/;"	l
f0106f1d	obj/kern/kernel.asm	/^f0106f1d:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0106f21	obj/kern/kernel.asm	/^f0106f21:	8b 55 a8             	mov    -0x58(%ebp),%edx$/;"	l
f0106f24	obj/kern/kernel.asm	/^f0106f24:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0106f28	obj/kern/kernel.asm	/^f0106f28:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106f2c	obj/kern/kernel.asm	/^f0106f2c:	c7 04 24 c6 9d 10 f0 	movl   $0xf0109dc6,(%esp)$/;"	l
f0106f33	obj/kern/kernel.asm	/^f0106f33:	e8 b4 d0 ff ff       	call   f0103fec <cprintf>$/;"	l
f0106f38	obj/kern/kernel.asm	/^f0106f38:	eb 12                	jmp    f0106f4c <spin_unlock+0xc9>$/;"	l
f0106f3a	obj/kern/kernel.asm	/^f0106f3a:	8b 06                	mov    (%esi),%eax$/;"	l
f0106f3c	obj/kern/kernel.asm	/^f0106f3c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106f40	obj/kern/kernel.asm	/^f0106f40:	c7 04 24 dd 9d 10 f0 	movl   $0xf0109ddd,(%esp)$/;"	l
f0106f47	obj/kern/kernel.asm	/^f0106f47:	e8 a0 d0 ff ff       	call   f0103fec <cprintf>$/;"	l
f0106f4c	obj/kern/kernel.asm	/^f0106f4c:	83 c3 04             	add    $0x4,%ebx$/;"	l
f0106f4f	obj/kern/kernel.asm	/^f0106f4f:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
f0106f52	obj/kern/kernel.asm	/^f0106f52:	39 c3                	cmp    %eax,%ebx$/;"	l
f0106f54	obj/kern/kernel.asm	/^f0106f54:	74 08                	je     f0106f5e <spin_unlock+0xdb>$/;"	l
f0106f56	obj/kern/kernel.asm	/^f0106f56:	89 de                	mov    %ebx,%esi$/;"	l
f0106f58	obj/kern/kernel.asm	/^f0106f58:	8b 03                	mov    (%ebx),%eax$/;"	l
f0106f5a	obj/kern/kernel.asm	/^f0106f5a:	85 c0                	test   %eax,%eax$/;"	l
f0106f5c	obj/kern/kernel.asm	/^f0106f5c:	75 93                	jne    f0106ef1 <spin_unlock+0x6e>$/;"	l
f0106f5e	obj/kern/kernel.asm	/^f0106f5e:	c7 44 24 08 e5 9d 10 	movl   $0xf0109de5,0x8(%esp)$/;"	l
f0106f65	obj/kern/kernel.asm	/^f0106f65:	f0 $/;"	l
f0106f66	obj/kern/kernel.asm	/^f0106f66:	c7 44 24 04 67 00 00 	movl   $0x67,0x4(%esp)$/;"	l
f0106f6d	obj/kern/kernel.asm	/^f0106f6d:	00 $/;"	l
f0106f6e	obj/kern/kernel.asm	/^f0106f6e:	c7 04 24 b6 9d 10 f0 	movl   $0xf0109db6,(%esp)$/;"	l
f0106f75	obj/kern/kernel.asm	/^f0106f75:	e8 c6 90 ff ff       	call   f0100040 <_panic>$/;"	l
f0106f7a	obj/kern/kernel.asm	/^f0106f7a:	c7 46 0c 00 00 00 00 	movl   $0x0,0xc(%esi)$/;"	l
f0106f81	obj/kern/kernel.asm	/^f0106f81:	c7 46 08 00 00 00 00 	movl   $0x0,0x8(%esi)$/;"	l
f0106f88	obj/kern/kernel.asm	/^f0106f88:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106f8d	obj/kern/kernel.asm	/^f0106f8d:	f0 87 06             	lock xchg %eax,(%esi)$/;"	l
f0106f90	obj/kern/kernel.asm	/^f0106f90:	83 c4 6c             	add    $0x6c,%esp$/;"	l
f0106f93	obj/kern/kernel.asm	/^f0106f93:	5b                   	pop    %ebx$/;"	l
f0106f94	obj/kern/kernel.asm	/^f0106f94:	5e                   	pop    %esi$/;"	l
f0106f95	obj/kern/kernel.asm	/^f0106f95:	5f                   	pop    %edi$/;"	l
f0106f96	obj/kern/kernel.asm	/^f0106f96:	5d                   	pop    %ebp$/;"	l
f0106f97	obj/kern/kernel.asm	/^f0106f97:	c3                   	ret    $/;"	l
f0106f98	obj/kern/kernel.asm	/^f0106f98 <init_transmit>:$/;"	l
f0106f98	obj/kern/kernel.asm	/^f0106f98:	55                   	push   %ebp$/;"	l
f0106f99	obj/kern/kernel.asm	/^f0106f99:	89 e5                	mov    %esp,%ebp$/;"	l
f0106f9b	obj/kern/kernel.asm	/^f0106f9b:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0106f9e	obj/kern/kernel.asm	/^f0106f9e:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f0106fa5	obj/kern/kernel.asm	/^f0106fa5:	e8 91 a1 ff ff       	call   f010113b <page_alloc>$/;"	l
f0106faa	obj/kern/kernel.asm	/^f0106faa:	85 c0                	test   %eax,%eax$/;"	l
f0106fac	obj/kern/kernel.asm	/^f0106fac:	75 1c                	jne    f0106fca <init_transmit+0x32>$/;"	l
f0106fae	obj/kern/kernel.asm	/^f0106fae:	c7 44 24 08 00 9e 10 	movl   $0xf0109e00,0x8(%esp)$/;"	l
f0106fb5	obj/kern/kernel.asm	/^f0106fb5:	f0 $/;"	l
f0106fb6	obj/kern/kernel.asm	/^f0106fb6:	c7 44 24 04 32 00 00 	movl   $0x32,0x4(%esp)$/;"	l
f0106fbd	obj/kern/kernel.asm	/^f0106fbd:	00 $/;"	l
f0106fbe	obj/kern/kernel.asm	/^f0106fbe:	c7 04 24 03 a0 10 f0 	movl   $0xf010a003,(%esp)$/;"	l
f0106fc5	obj/kern/kernel.asm	/^f0106fc5:	e8 76 90 ff ff       	call   f0100040 <_panic>$/;"	l
f0106fca	obj/kern/kernel.asm	/^f0106fca:	2b 05 9c 9e 2b f0    	sub    0xf02b9e9c,%eax$/;"	l
f0106fd0	obj/kern/kernel.asm	/^f0106fd0:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0106fd3	obj/kern/kernel.asm	/^f0106fd3:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0106fd6	obj/kern/kernel.asm	/^f0106fd6:	89 c2                	mov    %eax,%edx$/;"	l
f0106fd8	obj/kern/kernel.asm	/^f0106fd8:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0106fdb	obj/kern/kernel.asm	/^f0106fdb:	3b 15 94 9e 2b f0    	cmp    0xf02b9e94,%edx$/;"	l
f0106fe1	obj/kern/kernel.asm	/^f0106fe1:	72 20                	jb     f0107003 <init_transmit+0x6b>$/;"	l
f0106fe3	obj/kern/kernel.asm	/^f0106fe3:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0106fe7	obj/kern/kernel.asm	/^f0106fe7:	c7 44 24 08 c4 7f 10 	movl   $0xf0107fc4,0x8(%esp)$/;"	l
f0106fee	obj/kern/kernel.asm	/^f0106fee:	f0 $/;"	l
f0106fef	obj/kern/kernel.asm	/^f0106fef:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0106ff6	obj/kern/kernel.asm	/^f0106ff6:	00 $/;"	l
f0106ff7	obj/kern/kernel.asm	/^f0106ff7:	c7 04 24 1d 8f 10 f0 	movl   $0xf0108f1d,(%esp)$/;"	l
f0106ffe	obj/kern/kernel.asm	/^f0106ffe:	e8 3d 90 ff ff       	call   f0100040 <_panic>$/;"	l
f0107003	obj/kern/kernel.asm	/^f0107003:	8d 88 00 00 00 f0    	lea    -0x10000000(%eax),%ecx$/;"	l
f0107009	obj/kern/kernel.asm	/^f0107009:	89 0d 20 b0 2f f0    	mov    %ecx,0xf02fb020$/;"	l
f010700f	obj/kern/kernel.asm	/^f010700f:	8b 15 28 b0 2f f0    	mov    0xf02fb028,%edx$/;"	l
f0107015	obj/kern/kernel.asm	/^f0107015:	81 f9 ff ff ff ef    	cmp    $0xefffffff,%ecx$/;"	l
f010701b	obj/kern/kernel.asm	/^f010701b:	77 20                	ja     f010703d <init_transmit+0xa5>$/;"	l
f010701d	obj/kern/kernel.asm	/^f010701d:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f0107021	obj/kern/kernel.asm	/^f0107021:	c7 44 24 08 e8 7f 10 	movl   $0xf0107fe8,0x8(%esp)$/;"	l
f0107028	obj/kern/kernel.asm	/^f0107028:	f0 $/;"	l
f0107029	obj/kern/kernel.asm	/^f0107029:	c7 44 24 04 35 00 00 	movl   $0x35,0x4(%esp)$/;"	l
f0107030	obj/kern/kernel.asm	/^f0107030:	00 $/;"	l
f0107031	obj/kern/kernel.asm	/^f0107031:	c7 04 24 03 a0 10 f0 	movl   $0xf010a003,(%esp)$/;"	l
f0107038	obj/kern/kernel.asm	/^f0107038:	e8 03 90 ff ff       	call   f0100040 <_panic>$/;"	l
f010703d	obj/kern/kernel.asm	/^f010703d:	89 82 00 38 00 00    	mov    %eax,0x3800(%edx)$/;"	l
f0107043	obj/kern/kernel.asm	/^f0107043:	c7 82 04 38 00 00 00 	movl   $0x0,0x3804(%edx)$/;"	l
f010704a	obj/kern/kernel.asm	/^f010704a:	00 00 00 $/;"	l
f010704d	obj/kern/kernel.asm	/^f010704d:	c7 82 08 38 00 00 00 	movl   $0x1000,0x3808(%edx)$/;"	l
f0107054	obj/kern/kernel.asm	/^f0107054:	10 00 00 $/;"	l
f0107057	obj/kern/kernel.asm	/^f0107057:	c7 82 10 38 00 00 00 	movl   $0x0,0x3810(%edx)$/;"	l
f010705e	obj/kern/kernel.asm	/^f010705e:	00 00 00 $/;"	l
f0107061	obj/kern/kernel.asm	/^f0107061:	c7 82 18 38 00 00 00 	movl   $0x0,0x3818(%edx)$/;"	l
f0107068	obj/kern/kernel.asm	/^f0107068:	00 00 00 $/;"	l
f010706b	obj/kern/kernel.asm	/^f010706b:	8b 82 00 04 00 00    	mov    0x400(%edx),%eax$/;"	l
f0107071	obj/kern/kernel.asm	/^f0107071:	83 c8 0a             	or     $0xa,%eax$/;"	l
f0107074	obj/kern/kernel.asm	/^f0107074:	89 82 00 04 00 00    	mov    %eax,0x400(%edx)$/;"	l
f010707a	obj/kern/kernel.asm	/^f010707a:	8b 82 00 04 00 00    	mov    0x400(%edx),%eax$/;"	l
f0107080	obj/kern/kernel.asm	/^f0107080:	25 0f f0 ff ff       	and    $0xfffff00f,%eax$/;"	l
f0107085	obj/kern/kernel.asm	/^f0107085:	89 82 00 04 00 00    	mov    %eax,0x400(%edx)$/;"	l
f010708b	obj/kern/kernel.asm	/^f010708b:	8b 82 00 04 00 00    	mov    0x400(%edx),%eax$/;"	l
f0107091	obj/kern/kernel.asm	/^f0107091:	80 cc 01             	or     $0x1,%ah$/;"	l
f0107094	obj/kern/kernel.asm	/^f0107094:	89 82 00 04 00 00    	mov    %eax,0x400(%edx)$/;"	l
f010709a	obj/kern/kernel.asm	/^f010709a:	8b 82 00 04 00 00    	mov    0x400(%edx),%eax$/;"	l
f01070a0	obj/kern/kernel.asm	/^f01070a0:	25 ff 0f c0 ff       	and    $0xffc00fff,%eax$/;"	l
f01070a5	obj/kern/kernel.asm	/^f01070a5:	89 82 00 04 00 00    	mov    %eax,0x400(%edx)$/;"	l
f01070ab	obj/kern/kernel.asm	/^f01070ab:	8b 82 00 04 00 00    	mov    0x400(%edx),%eax$/;"	l
f01070b1	obj/kern/kernel.asm	/^f01070b1:	0d 00 00 04 00       	or     $0x40000,%eax$/;"	l
f01070b6	obj/kern/kernel.asm	/^f01070b6:	89 82 00 04 00 00    	mov    %eax,0x400(%edx)$/;"	l
f01070bc	obj/kern/kernel.asm	/^f01070bc:	8b 82 10 04 00 00    	mov    0x410(%edx),%eax$/;"	l
f01070c2	obj/kern/kernel.asm	/^f01070c2:	25 00 fc ff ff       	and    $0xfffffc00,%eax$/;"	l
f01070c7	obj/kern/kernel.asm	/^f01070c7:	89 82 10 04 00 00    	mov    %eax,0x410(%edx)$/;"	l
f01070cd	obj/kern/kernel.asm	/^f01070cd:	8b 82 10 04 00 00    	mov    0x410(%edx),%eax$/;"	l
f01070d3	obj/kern/kernel.asm	/^f01070d3:	83 c8 0a             	or     $0xa,%eax$/;"	l
f01070d6	obj/kern/kernel.asm	/^f01070d6:	89 82 10 04 00 00    	mov    %eax,0x410(%edx)$/;"	l
f01070dc	obj/kern/kernel.asm	/^f01070dc:	8b 82 10 04 00 00    	mov    0x410(%edx),%eax$/;"	l
f01070e2	obj/kern/kernel.asm	/^f01070e2:	25 ff 03 f0 ff       	and    $0xfff003ff,%eax$/;"	l
f01070e7	obj/kern/kernel.asm	/^f01070e7:	89 82 10 04 00 00    	mov    %eax,0x410(%edx)$/;"	l
f01070ed	obj/kern/kernel.asm	/^f01070ed:	8b 82 10 04 00 00    	mov    0x410(%edx),%eax$/;"	l
f01070f3	obj/kern/kernel.asm	/^f01070f3:	80 cc 20             	or     $0x20,%ah$/;"	l
f01070f6	obj/kern/kernel.asm	/^f01070f6:	89 82 10 04 00 00    	mov    %eax,0x410(%edx)$/;"	l
f01070fc	obj/kern/kernel.asm	/^f01070fc:	8b 82 10 04 00 00    	mov    0x410(%edx),%eax$/;"	l
f0107102	obj/kern/kernel.asm	/^f0107102:	25 ff ff 0f c0       	and    $0xc00fffff,%eax$/;"	l
f0107107	obj/kern/kernel.asm	/^f0107107:	89 82 10 04 00 00    	mov    %eax,0x410(%edx)$/;"	l
f010710d	obj/kern/kernel.asm	/^f010710d:	8b 82 10 04 00 00    	mov    0x410(%edx),%eax$/;"	l
f0107113	obj/kern/kernel.asm	/^f0107113:	0d 00 00 60 00       	or     $0x600000,%eax$/;"	l
f0107118	obj/kern/kernel.asm	/^f0107118:	89 82 10 04 00 00    	mov    %eax,0x410(%edx)$/;"	l
f010711e	obj/kern/kernel.asm	/^f010711e:	8b 82 10 04 00 00    	mov    0x410(%edx),%eax$/;"	l
f0107124	obj/kern/kernel.asm	/^f0107124:	25 ff ff ff 3f       	and    $0x3fffffff,%eax$/;"	l
f0107129	obj/kern/kernel.asm	/^f0107129:	89 82 10 04 00 00    	mov    %eax,0x410(%edx)$/;"	l
f010712f	obj/kern/kernel.asm	/^f010712f:	8b 82 10 04 00 00    	mov    0x410(%edx),%eax$/;"	l
f0107135	obj/kern/kernel.asm	/^f0107135:	89 82 10 04 00 00    	mov    %eax,0x410(%edx)$/;"	l
f010713b	obj/kern/kernel.asm	/^f010713b:	c9                   	leave  $/;"	l
f010713c	obj/kern/kernel.asm	/^f010713c:	c3                   	ret    $/;"	l
f010713d	obj/kern/kernel.asm	/^f010713d <transmit_packet>:$/;"	l
f010713d	obj/kern/kernel.asm	/^f010713d:	55                   	push   %ebp$/;"	l
f010713e	obj/kern/kernel.asm	/^f010713e:	89 e5                	mov    %esp,%ebp$/;"	l
f0107140	obj/kern/kernel.asm	/^f0107140:	56                   	push   %esi$/;"	l
f0107141	obj/kern/kernel.asm	/^f0107141:	53                   	push   %ebx$/;"	l
f0107142	obj/kern/kernel.asm	/^f0107142:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0107145	obj/kern/kernel.asm	/^f0107145:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0107148	obj/kern/kernel.asm	/^f0107148:	a1 28 b0 2f f0       	mov    0xf02fb028,%eax$/;"	l
f010714d	obj/kern/kernel.asm	/^f010714d:	8b 98 18 38 00 00    	mov    0x3818(%eax),%ebx$/;"	l
f0107153	obj/kern/kernel.asm	/^f0107153:	c1 e3 04             	shl    $0x4,%ebx$/;"	l
f0107156	obj/kern/kernel.asm	/^f0107156:	03 1d 20 b0 2f f0    	add    0xf02fb020,%ebx$/;"	l
f010715c	obj/kern/kernel.asm	/^f010715c:	83 3d f4 53 12 f0 00 	cmpl   $0x0,0xf01253f4$/;"	l
f0107163	obj/kern/kernel.asm	/^f0107163:	75 0a                	jne    f010716f <transmit_packet+0x32>$/;"	l
f0107165	obj/kern/kernel.asm	/^f0107165:	f6 43 0c 01          	testb  $0x1,0xc(%ebx)$/;"	l
f0107169	obj/kern/kernel.asm	/^f0107169:	0f 84 87 00 00 00    	je     f01071f6 <transmit_packet+0xb9>$/;"	l
f010716f	obj/kern/kernel.asm	/^f010716f:	81 fe a0 3f 00 00    	cmp    $0x3fa0,%esi$/;"	l
f0107175	obj/kern/kernel.asm	/^f0107175:	0f 87 82 00 00 00    	ja     f01071fd <transmit_packet+0xc0>$/;"	l
f010717b	obj/kern/kernel.asm	/^f010717b:	c7 44 24 08 10 00 00 	movl   $0x10,0x8(%esp)$/;"	l
f0107182	obj/kern/kernel.asm	/^f0107182:	00 $/;"	l
f0107183	obj/kern/kernel.asm	/^f0107183:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f010718a	obj/kern/kernel.asm	/^f010718a:	00 $/;"	l
f010718b	obj/kern/kernel.asm	/^f010718b:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010718e	obj/kern/kernel.asm	/^f010718e:	e8 74 f3 ff ff       	call   f0106507 <memset>$/;"	l
f0107193	obj/kern/kernel.asm	/^f0107193:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0107196	obj/kern/kernel.asm	/^f0107196:	89 03                	mov    %eax,(%ebx)$/;"	l
f0107198	obj/kern/kernel.asm	/^f0107198:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)$/;"	l
f010719f	obj/kern/kernel.asm	/^f010719f:	66 89 73 08          	mov    %si,0x8(%ebx)$/;"	l
f01071a3	obj/kern/kernel.asm	/^f01071a3:	81 4b 08 00 00 00 09 	orl    $0x9000000,0x8(%ebx)$/;"	l
f01071aa	obj/kern/kernel.asm	/^f01071aa:	a1 28 b0 2f f0       	mov    0xf02fb028,%eax$/;"	l
f01071af	obj/kern/kernel.asm	/^f01071af:	8b 88 18 38 00 00    	mov    0x3818(%eax),%ecx$/;"	l
f01071b5	obj/kern/kernel.asm	/^f01071b5:	8b 90 08 38 00 00    	mov    0x3808(%eax),%edx$/;"	l
f01071bb	obj/kern/kernel.asm	/^f01071bb:	83 c1 01             	add    $0x1,%ecx$/;"	l
f01071be	obj/kern/kernel.asm	/^f01071be:	c1 e1 04             	shl    $0x4,%ecx$/;"	l
f01071c1	obj/kern/kernel.asm	/^f01071c1:	39 d1                	cmp    %edx,%ecx$/;"	l
f01071c3	obj/kern/kernel.asm	/^f01071c3:	72 1b                	jb     f01071e0 <transmit_packet+0xa3>$/;"	l
f01071c5	obj/kern/kernel.asm	/^f01071c5:	c7 05 f4 53 12 f0 00 	movl   $0x0,0xf01253f4$/;"	l
f01071cc	obj/kern/kernel.asm	/^f01071cc:	00 00 00 $/;"	l
f01071cf	obj/kern/kernel.asm	/^f01071cf:	c7 80 18 38 00 00 00 	movl   $0x0,0x3818(%eax)$/;"	l
f01071d6	obj/kern/kernel.asm	/^f01071d6:	00 00 00 $/;"	l
f01071d9	obj/kern/kernel.asm	/^f01071d9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01071de	obj/kern/kernel.asm	/^f01071de:	eb 22                	jmp    f0107202 <transmit_packet+0xc5>$/;"	l
f01071e0	obj/kern/kernel.asm	/^f01071e0:	8b 90 18 38 00 00    	mov    0x3818(%eax),%edx$/;"	l
f01071e6	obj/kern/kernel.asm	/^f01071e6:	83 c2 01             	add    $0x1,%edx$/;"	l
f01071e9	obj/kern/kernel.asm	/^f01071e9:	89 90 18 38 00 00    	mov    %edx,0x3818(%eax)$/;"	l
f01071ef	obj/kern/kernel.asm	/^f01071ef:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01071f4	obj/kern/kernel.asm	/^f01071f4:	eb 0c                	jmp    f0107202 <transmit_packet+0xc5>$/;"	l
f01071f6	obj/kern/kernel.asm	/^f01071f6:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax$/;"	l
f01071fb	obj/kern/kernel.asm	/^f01071fb:	eb 05                	jmp    f0107202 <transmit_packet+0xc5>$/;"	l
f01071fd	obj/kern/kernel.asm	/^f01071fd:	b8 ef ff ff ff       	mov    $0xffffffef,%eax$/;"	l
f0107202	obj/kern/kernel.asm	/^f0107202:	83 c4 10             	add    $0x10,%esp$/;"	l
f0107205	obj/kern/kernel.asm	/^f0107205:	5b                   	pop    %ebx$/;"	l
f0107206	obj/kern/kernel.asm	/^f0107206:	5e                   	pop    %esi$/;"	l
f0107207	obj/kern/kernel.asm	/^f0107207:	5d                   	pop    %ebp$/;"	l
f0107208	obj/kern/kernel.asm	/^f0107208:	c3                   	ret    $/;"	l
f0107209	obj/kern/kernel.asm	/^f0107209 <init_receive>:$/;"	l
f0107209	obj/kern/kernel.asm	/^f0107209:	55                   	push   %ebp$/;"	l
f010720a	obj/kern/kernel.asm	/^f010720a:	89 e5                	mov    %esp,%ebp$/;"	l
f010720c	obj/kern/kernel.asm	/^f010720c:	56                   	push   %esi$/;"	l
f010720d	obj/kern/kernel.asm	/^f010720d:	53                   	push   %ebx$/;"	l
f010720e	obj/kern/kernel.asm	/^f010720e:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0107211	obj/kern/kernel.asm	/^f0107211:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f0107218	obj/kern/kernel.asm	/^f0107218:	e8 1e 9f ff ff       	call   f010113b <page_alloc>$/;"	l
f010721d	obj/kern/kernel.asm	/^f010721d:	85 c0                	test   %eax,%eax$/;"	l
f010721f	obj/kern/kernel.asm	/^f010721f:	75 1c                	jne    f010723d <init_receive+0x34>$/;"	l
f0107221	obj/kern/kernel.asm	/^f0107221:	c7 44 24 08 24 9e 10 	movl   $0xf0109e24,0x8(%esp)$/;"	l
f0107228	obj/kern/kernel.asm	/^f0107228:	f0 $/;"	l
f0107229	obj/kern/kernel.asm	/^f0107229:	c7 44 24 04 6a 00 00 	movl   $0x6a,0x4(%esp)$/;"	l
f0107230	obj/kern/kernel.asm	/^f0107230:	00 $/;"	l
f0107231	obj/kern/kernel.asm	/^f0107231:	c7 04 24 03 a0 10 f0 	movl   $0xf010a003,(%esp)$/;"	l
f0107238	obj/kern/kernel.asm	/^f0107238:	e8 03 8e ff ff       	call   f0100040 <_panic>$/;"	l
f010723d	obj/kern/kernel.asm	/^f010723d:	2b 05 9c 9e 2b f0    	sub    0xf02b9e9c,%eax$/;"	l
f0107243	obj/kern/kernel.asm	/^f0107243:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0107246	obj/kern/kernel.asm	/^f0107246:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0107249	obj/kern/kernel.asm	/^f0107249:	89 c2                	mov    %eax,%edx$/;"	l
f010724b	obj/kern/kernel.asm	/^f010724b:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f010724e	obj/kern/kernel.asm	/^f010724e:	3b 15 94 9e 2b f0    	cmp    0xf02b9e94,%edx$/;"	l
f0107254	obj/kern/kernel.asm	/^f0107254:	72 20                	jb     f0107276 <init_receive+0x6d>$/;"	l
f0107256	obj/kern/kernel.asm	/^f0107256:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010725a	obj/kern/kernel.asm	/^f010725a:	c7 44 24 08 c4 7f 10 	movl   $0xf0107fc4,0x8(%esp)$/;"	l
f0107261	obj/kern/kernel.asm	/^f0107261:	f0 $/;"	l
f0107262	obj/kern/kernel.asm	/^f0107262:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0107269	obj/kern/kernel.asm	/^f0107269:	00 $/;"	l
f010726a	obj/kern/kernel.asm	/^f010726a:	c7 04 24 1d 8f 10 f0 	movl   $0xf0108f1d,(%esp)$/;"	l
f0107271	obj/kern/kernel.asm	/^f0107271:	e8 ca 8d ff ff       	call   f0100040 <_panic>$/;"	l
f0107276	obj/kern/kernel.asm	/^f0107276:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f010727b	obj/kern/kernel.asm	/^f010727b:	a3 24 b0 2f f0       	mov    %eax,0xf02fb024$/;"	l
f0107280	obj/kern/kernel.asm	/^f0107280:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f0107287	obj/kern/kernel.asm	/^f0107287:	e8 af 9e ff ff       	call   f010113b <page_alloc>$/;"	l
f010728c	obj/kern/kernel.asm	/^f010728c:	85 c0                	test   %eax,%eax$/;"	l
f010728e	obj/kern/kernel.asm	/^f010728e:	75 1c                	jne    f01072ac <init_receive+0xa3>$/;"	l
f0107290	obj/kern/kernel.asm	/^f0107290:	c7 44 24 08 24 9e 10 	movl   $0xf0109e24,0x8(%esp)$/;"	l
f0107297	obj/kern/kernel.asm	/^f0107297:	f0 $/;"	l
f0107298	obj/kern/kernel.asm	/^f0107298:	c7 44 24 04 6e 00 00 	movl   $0x6e,0x4(%esp)$/;"	l
f010729f	obj/kern/kernel.asm	/^f010729f:	00 $/;"	l
f01072a0	obj/kern/kernel.asm	/^f01072a0:	c7 04 24 03 a0 10 f0 	movl   $0xf010a003,(%esp)$/;"	l
f01072a7	obj/kern/kernel.asm	/^f01072a7:	e8 94 8d ff ff       	call   f0100040 <_panic>$/;"	l
f01072ac	obj/kern/kernel.asm	/^f01072ac:	a1 28 b0 2f f0       	mov    0xf02fb028,%eax$/;"	l
f01072b1	obj/kern/kernel.asm	/^f01072b1:	c7 80 00 54 00 00 52 	movl   $0x12005452,0x5400(%eax)$/;"	l
f01072b8	obj/kern/kernel.asm	/^f01072b8:	54 00 12 $/;"	l
f01072bb	obj/kern/kernel.asm	/^f01072bb:	c7 80 04 54 00 00 34 	movl   $0x80005634,0x5404(%eax)$/;"	l
f01072c2	obj/kern/kernel.asm	/^f01072c2:	56 00 80 $/;"	l
f01072c5	obj/kern/kernel.asm	/^f01072c5:	b8 00 52 00 00       	mov    $0x5200,%eax$/;"	l
f01072ca	obj/kern/kernel.asm	/^f01072ca:	89 c2                	mov    %eax,%edx$/;"	l
f01072cc	obj/kern/kernel.asm	/^f01072cc:	03 15 28 b0 2f f0    	add    0xf02fb028,%edx$/;"	l
f01072d2	obj/kern/kernel.asm	/^f01072d2:	c7 02 00 00 00 00    	movl   $0x0,(%edx)$/;"	l
f01072d8	obj/kern/kernel.asm	/^f01072d8:	83 c0 04             	add    $0x4,%eax$/;"	l
f01072db	obj/kern/kernel.asm	/^f01072db:	3d 00 54 00 00       	cmp    $0x5400,%eax$/;"	l
f01072e0	obj/kern/kernel.asm	/^f01072e0:	75 e8                	jne    f01072ca <init_receive+0xc1>$/;"	l
f01072e2	obj/kern/kernel.asm	/^f01072e2:	a1 28 b0 2f f0       	mov    0xf02fb028,%eax$/;"	l
f01072e7	obj/kern/kernel.asm	/^f01072e7:	8b 15 24 b0 2f f0    	mov    0xf02fb024,%edx$/;"	l
f01072ed	obj/kern/kernel.asm	/^f01072ed:	81 fa ff ff ff ef    	cmp    $0xefffffff,%edx$/;"	l
f01072f3	obj/kern/kernel.asm	/^f01072f3:	77 20                	ja     f0107315 <init_receive+0x10c>$/;"	l
f01072f5	obj/kern/kernel.asm	/^f01072f5:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f01072f9	obj/kern/kernel.asm	/^f01072f9:	c7 44 24 08 e8 7f 10 	movl   $0xf0107fe8,0x8(%esp)$/;"	l
f0107300	obj/kern/kernel.asm	/^f0107300:	f0 $/;"	l
f0107301	obj/kern/kernel.asm	/^f0107301:	c7 44 24 04 79 00 00 	movl   $0x79,0x4(%esp)$/;"	l
f0107308	obj/kern/kernel.asm	/^f0107308:	00 $/;"	l
f0107309	obj/kern/kernel.asm	/^f0107309:	c7 04 24 03 a0 10 f0 	movl   $0xf010a003,(%esp)$/;"	l
f0107310	obj/kern/kernel.asm	/^f0107310:	e8 2b 8d ff ff       	call   f0100040 <_panic>$/;"	l
f0107315	obj/kern/kernel.asm	/^f0107315:	81 c2 00 00 00 10    	add    $0x10000000,%edx$/;"	l
f010731b	obj/kern/kernel.asm	/^f010731b:	89 90 00 28 00 00    	mov    %edx,0x2800(%eax)$/;"	l
f0107321	obj/kern/kernel.asm	/^f0107321:	c7 80 04 28 00 00 00 	movl   $0x0,0x2804(%eax)$/;"	l
f0107328	obj/kern/kernel.asm	/^f0107328:	00 00 00 $/;"	l
f010732b	obj/kern/kernel.asm	/^f010732b:	c7 80 08 28 00 00 00 	movl   $0x1000,0x2808(%eax)$/;"	l
f0107332	obj/kern/kernel.asm	/^f0107332:	10 00 00 $/;"	l
f0107335	obj/kern/kernel.asm	/^f0107335:	c7 80 10 28 00 00 00 	movl   $0x0,0x2810(%eax)$/;"	l
f010733c	obj/kern/kernel.asm	/^f010733c:	00 00 00 $/;"	l
f010733f	obj/kern/kernel.asm	/^f010733f:	c7 80 18 28 00 00 ff 	movl   $0xff,0x2818(%eax)$/;"	l
f0107346	obj/kern/kernel.asm	/^f0107346:	00 00 00 $/;"	l
f0107349	obj/kern/kernel.asm	/^f0107349:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f010734e	obj/kern/kernel.asm	/^f010734e:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f0107355	obj/kern/kernel.asm	/^f0107355:	e8 e1 9d ff ff       	call   f010113b <page_alloc>$/;"	l
f010735a	obj/kern/kernel.asm	/^f010735a:	85 c0                	test   %eax,%eax$/;"	l
f010735c	obj/kern/kernel.asm	/^f010735c:	75 1c                	jne    f010737a <init_receive+0x171>$/;"	l
f010735e	obj/kern/kernel.asm	/^f010735e:	c7 44 24 08 24 9e 10 	movl   $0xf0109e24,0x8(%esp)$/;"	l
f0107365	obj/kern/kernel.asm	/^f0107365:	f0 $/;"	l
f0107366	obj/kern/kernel.asm	/^f0107366:	c7 44 24 04 81 00 00 	movl   $0x81,0x4(%esp)$/;"	l
f010736d	obj/kern/kernel.asm	/^f010736d:	00 $/;"	l
f010736e	obj/kern/kernel.asm	/^f010736e:	c7 04 24 03 a0 10 f0 	movl   $0xf010a003,(%esp)$/;"	l
f0107375	obj/kern/kernel.asm	/^f0107375:	e8 c6 8c ff ff       	call   f0100040 <_panic>$/;"	l
f010737a	obj/kern/kernel.asm	/^f010737a:	2b 05 9c 9e 2b f0    	sub    0xf02b9e9c,%eax$/;"	l
f0107380	obj/kern/kernel.asm	/^f0107380:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0107383	obj/kern/kernel.asm	/^f0107383:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0107386	obj/kern/kernel.asm	/^f0107386:	89 c2                	mov    %eax,%edx$/;"	l
f0107388	obj/kern/kernel.asm	/^f0107388:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f010738b	obj/kern/kernel.asm	/^f010738b:	3b 15 94 9e 2b f0    	cmp    0xf02b9e94,%edx$/;"	l
f0107391	obj/kern/kernel.asm	/^f0107391:	72 20                	jb     f01073b3 <init_receive+0x1aa>$/;"	l
f0107393	obj/kern/kernel.asm	/^f0107393:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0107397	obj/kern/kernel.asm	/^f0107397:	c7 44 24 08 c4 7f 10 	movl   $0xf0107fc4,0x8(%esp)$/;"	l
f010739e	obj/kern/kernel.asm	/^f010739e:	f0 $/;"	l
f010739f	obj/kern/kernel.asm	/^f010739f:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f01073a6	obj/kern/kernel.asm	/^f01073a6:	00 $/;"	l
f01073a7	obj/kern/kernel.asm	/^f01073a7:	c7 04 24 1d 8f 10 f0 	movl   $0xf0108f1d,(%esp)$/;"	l
f01073ae	obj/kern/kernel.asm	/^f01073ae:	e8 8d 8c ff ff       	call   f0100040 <_panic>$/;"	l
f01073b3	obj/kern/kernel.asm	/^f01073b3:	8d 90 00 00 00 f0    	lea    -0x10000000(%eax),%edx$/;"	l
f01073b9	obj/kern/kernel.asm	/^f01073b9:	89 14 9d 40 b0 2f f0 	mov    %edx,-0xfd04fc0(,%ebx,4)$/;"	l
f01073c0	obj/kern/kernel.asm	/^f01073c0:	89 da                	mov    %ebx,%edx$/;"	l
f01073c2	obj/kern/kernel.asm	/^f01073c2:	c1 e2 04             	shl    $0x4,%edx$/;"	l
f01073c5	obj/kern/kernel.asm	/^f01073c5:	89 d6                	mov    %edx,%esi$/;"	l
f01073c7	obj/kern/kernel.asm	/^f01073c7:	03 35 24 b0 2f f0    	add    0xf02fb024,%esi$/;"	l
f01073cd	obj/kern/kernel.asm	/^f01073cd:	8d 88 04 00 00 f0    	lea    -0xffffffc(%eax),%ecx$/;"	l
f01073d3	obj/kern/kernel.asm	/^f01073d3:	81 f9 ff ff ff ef    	cmp    $0xefffffff,%ecx$/;"	l
f01073d9	obj/kern/kernel.asm	/^f01073d9:	77 20                	ja     f01073fb <init_receive+0x1f2>$/;"	l
f01073db	obj/kern/kernel.asm	/^f01073db:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f01073df	obj/kern/kernel.asm	/^f01073df:	c7 44 24 08 e8 7f 10 	movl   $0xf0107fe8,0x8(%esp)$/;"	l
f01073e6	obj/kern/kernel.asm	/^f01073e6:	f0 $/;"	l
f01073e7	obj/kern/kernel.asm	/^f01073e7:	c7 44 24 04 83 00 00 	movl   $0x83,0x4(%esp)$/;"	l
f01073ee	obj/kern/kernel.asm	/^f01073ee:	00 $/;"	l
f01073ef	obj/kern/kernel.asm	/^f01073ef:	c7 04 24 03 a0 10 f0 	movl   $0xf010a003,(%esp)$/;"	l
f01073f6	obj/kern/kernel.asm	/^f01073f6:	e8 45 8c ff ff       	call   f0100040 <_panic>$/;"	l
f01073fb	obj/kern/kernel.asm	/^f01073fb:	83 c0 04             	add    $0x4,%eax$/;"	l
f01073fe	obj/kern/kernel.asm	/^f01073fe:	89 06                	mov    %eax,(%esi)$/;"	l
f0107400	obj/kern/kernel.asm	/^f0107400:	c7 46 04 00 00 00 00 	movl   $0x0,0x4(%esi)$/;"	l
f0107407	obj/kern/kernel.asm	/^f0107407:	a1 24 b0 2f f0       	mov    0xf02fb024,%eax$/;"	l
f010740c	obj/kern/kernel.asm	/^f010740c:	66 c7 44 10 08 00 10 	movw   $0x1000,0x8(%eax,%edx,1)$/;"	l
f0107413	obj/kern/kernel.asm	/^f0107413:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0107416	obj/kern/kernel.asm	/^f0107416:	81 fb 00 01 00 00    	cmp    $0x100,%ebx$/;"	l
f010741c	obj/kern/kernel.asm	/^f010741c:	0f 85 2c ff ff ff    	jne    f010734e <init_receive+0x145>$/;"	l
f0107422	obj/kern/kernel.asm	/^f0107422:	a1 28 b0 2f f0       	mov    0xf02fb028,%eax$/;"	l
f0107427	obj/kern/kernel.asm	/^f0107427:	8b 90 00 01 00 00    	mov    0x100(%eax),%edx$/;"	l
f010742d	obj/kern/kernel.asm	/^f010742d:	80 e2 1d             	and    $0x1d,%dl$/;"	l
f0107430	obj/kern/kernel.asm	/^f0107430:	89 90 00 01 00 00    	mov    %edx,0x100(%eax)$/;"	l
f0107436	obj/kern/kernel.asm	/^f0107436:	8b 90 00 01 00 00    	mov    0x100(%eax),%edx$/;"	l
f010743c	obj/kern/kernel.asm	/^f010743c:	80 ce 83             	or     $0x83,%dh$/;"	l
f010743f	obj/kern/kernel.asm	/^f010743f:	89 90 00 01 00 00    	mov    %edx,0x100(%eax)$/;"	l
f0107445	obj/kern/kernel.asm	/^f0107445:	8b 90 00 01 00 00    	mov    0x100(%eax),%edx$/;"	l
f010744b	obj/kern/kernel.asm	/^f010744b:	81 ca 00 00 03 06    	or     $0x6030000,%edx$/;"	l
f0107451	obj/kern/kernel.asm	/^f0107451:	89 90 00 01 00 00    	mov    %edx,0x100(%eax)$/;"	l
f0107457	obj/kern/kernel.asm	/^f0107457:	8b 90 00 01 00 00    	mov    0x100(%eax),%edx$/;"	l
f010745d	obj/kern/kernel.asm	/^f010745d:	83 ca 02             	or     $0x2,%edx$/;"	l
f0107460	obj/kern/kernel.asm	/^f0107460:	89 90 00 01 00 00    	mov    %edx,0x100(%eax)$/;"	l
f0107466	obj/kern/kernel.asm	/^f0107466:	8b 90 00 01 00 00    	mov    0x100(%eax),%edx$/;"	l
f010746c	obj/kern/kernel.asm	/^f010746c:	f6 c2 02             	test   $0x2,%dl$/;"	l
f010746f	obj/kern/kernel.asm	/^f010746f:	75 24                	jne    f0107495 <init_receive+0x28c>$/;"	l
f0107471	obj/kern/kernel.asm	/^f0107471:	c7 44 24 0c 48 9e 10 	movl   $0xf0109e48,0xc(%esp)$/;"	l
f0107478	obj/kern/kernel.asm	/^f0107478:	f0 $/;"	l
f0107479	obj/kern/kernel.asm	/^f0107479:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f0107480	obj/kern/kernel.asm	/^f0107480:	f0 $/;"	l
f0107481	obj/kern/kernel.asm	/^f0107481:	c7 44 24 04 8e 00 00 	movl   $0x8e,0x4(%esp)$/;"	l
f0107488	obj/kern/kernel.asm	/^f0107488:	00 $/;"	l
f0107489	obj/kern/kernel.asm	/^f0107489:	c7 04 24 03 a0 10 f0 	movl   $0xf010a003,(%esp)$/;"	l
f0107490	obj/kern/kernel.asm	/^f0107490:	e8 ab 8b ff ff       	call   f0100040 <_panic>$/;"	l
f0107495	obj/kern/kernel.asm	/^f0107495:	8b 90 00 01 00 00    	mov    0x100(%eax),%edx$/;"	l
f010749b	obj/kern/kernel.asm	/^f010749b:	f6 c2 20             	test   $0x20,%dl$/;"	l
f010749e	obj/kern/kernel.asm	/^f010749e:	74 24                	je     f01074c4 <init_receive+0x2bb>$/;"	l
f01074a0	obj/kern/kernel.asm	/^f01074a0:	c7 44 24 0c 80 9e 10 	movl   $0xf0109e80,0xc(%esp)$/;"	l
f01074a7	obj/kern/kernel.asm	/^f01074a7:	f0 $/;"	l
f01074a8	obj/kern/kernel.asm	/^f01074a8:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f01074af	obj/kern/kernel.asm	/^f01074af:	f0 $/;"	l
f01074b0	obj/kern/kernel.asm	/^f01074b0:	c7 44 24 04 8f 00 00 	movl   $0x8f,0x4(%esp)$/;"	l
f01074b7	obj/kern/kernel.asm	/^f01074b7:	00 $/;"	l
f01074b8	obj/kern/kernel.asm	/^f01074b8:	c7 04 24 03 a0 10 f0 	movl   $0xf010a003,(%esp)$/;"	l
f01074bf	obj/kern/kernel.asm	/^f01074bf:	e8 7c 8b ff ff       	call   f0100040 <_panic>$/;"	l
f01074c4	obj/kern/kernel.asm	/^f01074c4:	8b 90 00 01 00 00    	mov    0x100(%eax),%edx$/;"	l
f01074ca	obj/kern/kernel.asm	/^f01074ca:	f6 c2 c0             	test   $0xc0,%dl$/;"	l
f01074cd	obj/kern/kernel.asm	/^f01074cd:	74 24                	je     f01074f3 <init_receive+0x2ea>$/;"	l
f01074cf	obj/kern/kernel.asm	/^f01074cf:	c7 44 24 0c ac 9e 10 	movl   $0xf0109eac,0xc(%esp)$/;"	l
f01074d6	obj/kern/kernel.asm	/^f01074d6:	f0 $/;"	l
f01074d7	obj/kern/kernel.asm	/^f01074d7:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f01074de	obj/kern/kernel.asm	/^f01074de:	f0 $/;"	l
f01074df	obj/kern/kernel.asm	/^f01074df:	c7 44 24 04 90 00 00 	movl   $0x90,0x4(%esp)$/;"	l
f01074e6	obj/kern/kernel.asm	/^f01074e6:	00 $/;"	l
f01074e7	obj/kern/kernel.asm	/^f01074e7:	c7 04 24 03 a0 10 f0 	movl   $0xf010a003,(%esp)$/;"	l
f01074ee	obj/kern/kernel.asm	/^f01074ee:	e8 4d 8b ff ff       	call   f0100040 <_panic>$/;"	l
f01074f3	obj/kern/kernel.asm	/^f01074f3:	8b 90 00 01 00 00    	mov    0x100(%eax),%edx$/;"	l
f01074f9	obj/kern/kernel.asm	/^f01074f9:	81 e2 00 03 00 00    	and    $0x300,%edx$/;"	l
f01074ff	obj/kern/kernel.asm	/^f01074ff:	81 fa 00 03 00 00    	cmp    $0x300,%edx$/;"	l
f0107505	obj/kern/kernel.asm	/^f0107505:	74 24                	je     f010752b <init_receive+0x322>$/;"	l
f0107507	obj/kern/kernel.asm	/^f0107507:	c7 44 24 0c d8 9e 10 	movl   $0xf0109ed8,0xc(%esp)$/;"	l
f010750e	obj/kern/kernel.asm	/^f010750e:	f0 $/;"	l
f010750f	obj/kern/kernel.asm	/^f010750f:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f0107516	obj/kern/kernel.asm	/^f0107516:	f0 $/;"	l
f0107517	obj/kern/kernel.asm	/^f0107517:	c7 44 24 04 91 00 00 	movl   $0x91,0x4(%esp)$/;"	l
f010751e	obj/kern/kernel.asm	/^f010751e:	00 $/;"	l
f010751f	obj/kern/kernel.asm	/^f010751f:	c7 04 24 03 a0 10 f0 	movl   $0xf010a003,(%esp)$/;"	l
f0107526	obj/kern/kernel.asm	/^f0107526:	e8 15 8b ff ff       	call   f0100040 <_panic>$/;"	l
f010752b	obj/kern/kernel.asm	/^f010752b:	8b 90 00 01 00 00    	mov    0x100(%eax),%edx$/;"	l
f0107531	obj/kern/kernel.asm	/^f0107531:	8b 90 00 01 00 00    	mov    0x100(%eax),%edx$/;"	l
f0107537	obj/kern/kernel.asm	/^f0107537:	f6 c6 80             	test   $0x80,%dh$/;"	l
f010753a	obj/kern/kernel.asm	/^f010753a:	75 24                	jne    f0107560 <init_receive+0x357>$/;"	l
f010753c	obj/kern/kernel.asm	/^f010753c:	c7 44 24 0c 14 9f 10 	movl   $0xf0109f14,0xc(%esp)$/;"	l
f0107543	obj/kern/kernel.asm	/^f0107543:	f0 $/;"	l
f0107544	obj/kern/kernel.asm	/^f0107544:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f010754b	obj/kern/kernel.asm	/^f010754b:	f0 $/;"	l
f010754c	obj/kern/kernel.asm	/^f010754c:	c7 44 24 04 93 00 00 	movl   $0x93,0x4(%esp)$/;"	l
f0107553	obj/kern/kernel.asm	/^f0107553:	00 $/;"	l
f0107554	obj/kern/kernel.asm	/^f0107554:	c7 04 24 03 a0 10 f0 	movl   $0xf010a003,(%esp)$/;"	l
f010755b	obj/kern/kernel.asm	/^f010755b:	e8 e0 8a ff ff       	call   f0100040 <_panic>$/;"	l
f0107560	obj/kern/kernel.asm	/^f0107560:	8b 90 00 01 00 00    	mov    0x100(%eax),%edx$/;"	l
f0107566	obj/kern/kernel.asm	/^f0107566:	81 e2 00 00 03 00    	and    $0x30000,%edx$/;"	l
f010756c	obj/kern/kernel.asm	/^f010756c:	81 fa 00 00 03 00    	cmp    $0x30000,%edx$/;"	l
f0107572	obj/kern/kernel.asm	/^f0107572:	74 24                	je     f0107598 <init_receive+0x38f>$/;"	l
f0107574	obj/kern/kernel.asm	/^f0107574:	c7 44 24 0c 4c 9f 10 	movl   $0xf0109f4c,0xc(%esp)$/;"	l
f010757b	obj/kern/kernel.asm	/^f010757b:	f0 $/;"	l
f010757c	obj/kern/kernel.asm	/^f010757c:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f0107583	obj/kern/kernel.asm	/^f0107583:	f0 $/;"	l
f0107584	obj/kern/kernel.asm	/^f0107584:	c7 44 24 04 94 00 00 	movl   $0x94,0x4(%esp)$/;"	l
f010758b	obj/kern/kernel.asm	/^f010758b:	00 $/;"	l
f010758c	obj/kern/kernel.asm	/^f010758c:	c7 04 24 03 a0 10 f0 	movl   $0xf010a003,(%esp)$/;"	l
f0107593	obj/kern/kernel.asm	/^f0107593:	e8 a8 8a ff ff       	call   f0100040 <_panic>$/;"	l
f0107598	obj/kern/kernel.asm	/^f0107598:	8b 90 00 01 00 00    	mov    0x100(%eax),%edx$/;"	l
f010759e	obj/kern/kernel.asm	/^f010759e:	f7 c2 00 00 00 02    	test   $0x2000000,%edx$/;"	l
f01075a4	obj/kern/kernel.asm	/^f01075a4:	75 24                	jne    f01075ca <init_receive+0x3c1>$/;"	l
f01075a6	obj/kern/kernel.asm	/^f01075a6:	c7 44 24 0c 8c 9f 10 	movl   $0xf0109f8c,0xc(%esp)$/;"	l
f01075ad	obj/kern/kernel.asm	/^f01075ad:	f0 $/;"	l
f01075ae	obj/kern/kernel.asm	/^f01075ae:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f01075b5	obj/kern/kernel.asm	/^f01075b5:	f0 $/;"	l
f01075b6	obj/kern/kernel.asm	/^f01075b6:	c7 44 24 04 95 00 00 	movl   $0x95,0x4(%esp)$/;"	l
f01075bd	obj/kern/kernel.asm	/^f01075bd:	00 $/;"	l
f01075be	obj/kern/kernel.asm	/^f01075be:	c7 04 24 03 a0 10 f0 	movl   $0xf010a003,(%esp)$/;"	l
f01075c5	obj/kern/kernel.asm	/^f01075c5:	e8 76 8a ff ff       	call   f0100040 <_panic>$/;"	l
f01075ca	obj/kern/kernel.asm	/^f01075ca:	8b 80 00 01 00 00    	mov    0x100(%eax),%eax$/;"	l
f01075d0	obj/kern/kernel.asm	/^f01075d0:	a9 00 00 00 04       	test   $0x4000000,%eax$/;"	l
f01075d5	obj/kern/kernel.asm	/^f01075d5:	75 24                	jne    f01075fb <init_receive+0x3f2>$/;"	l
f01075d7	obj/kern/kernel.asm	/^f01075d7:	c7 44 24 0c c8 9f 10 	movl   $0xf0109fc8,0xc(%esp)$/;"	l
f01075de	obj/kern/kernel.asm	/^f01075de:	f0 $/;"	l
f01075df	obj/kern/kernel.asm	/^f01075df:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f01075e6	obj/kern/kernel.asm	/^f01075e6:	f0 $/;"	l
f01075e7	obj/kern/kernel.asm	/^f01075e7:	c7 44 24 04 96 00 00 	movl   $0x96,0x4(%esp)$/;"	l
f01075ee	obj/kern/kernel.asm	/^f01075ee:	00 $/;"	l
f01075ef	obj/kern/kernel.asm	/^f01075ef:	c7 04 24 03 a0 10 f0 	movl   $0xf010a003,(%esp)$/;"	l
f01075f6	obj/kern/kernel.asm	/^f01075f6:	e8 45 8a ff ff       	call   f0100040 <_panic>$/;"	l
f01075fb	obj/kern/kernel.asm	/^f01075fb:	83 c4 10             	add    $0x10,%esp$/;"	l
f01075fe	obj/kern/kernel.asm	/^f01075fe:	5b                   	pop    %ebx$/;"	l
f01075ff	obj/kern/kernel.asm	/^f01075ff:	5e                   	pop    %esi$/;"	l
f0107600	obj/kern/kernel.asm	/^f0107600:	5d                   	pop    %ebp$/;"	l
f0107601	obj/kern/kernel.asm	/^f0107601:	c3                   	ret    $/;"	l
f0107602	obj/kern/kernel.asm	/^f0107602 <pci_e1000_attach>:$/;"	l
f0107602	obj/kern/kernel.asm	/^f0107602:	55                   	push   %ebp$/;"	l
f0107603	obj/kern/kernel.asm	/^f0107603:	89 e5                	mov    %esp,%ebp$/;"	l
f0107605	obj/kern/kernel.asm	/^f0107605:	53                   	push   %ebx$/;"	l
f0107606	obj/kern/kernel.asm	/^f0107606:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0107609	obj/kern/kernel.asm	/^f0107609:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f010760c	obj/kern/kernel.asm	/^f010760c:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010760f	obj/kern/kernel.asm	/^f010760f:	e8 13 05 00 00       	call   f0107b27 <pci_func_enable>$/;"	l
f0107614	obj/kern/kernel.asm	/^f0107614:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f0107617	obj/kern/kernel.asm	/^f0107617:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010761b	obj/kern/kernel.asm	/^f010761b:	8b 43 14             	mov    0x14(%ebx),%eax$/;"	l
f010761e	obj/kern/kernel.asm	/^f010761e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0107621	obj/kern/kernel.asm	/^f0107621:	e8 ef 9e ff ff       	call   f0101515 <mmio_map_region>$/;"	l
f0107626	obj/kern/kernel.asm	/^f0107626:	a3 28 b0 2f f0       	mov    %eax,0xf02fb028$/;"	l
f010762b	obj/kern/kernel.asm	/^f010762b:	e8 d9 fb ff ff       	call   f0107209 <init_receive>$/;"	l
f0107630	obj/kern/kernel.asm	/^f0107630:	e8 63 f9 ff ff       	call   f0106f98 <init_transmit>$/;"	l
f0107635	obj/kern/kernel.asm	/^f0107635:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010763a	obj/kern/kernel.asm	/^f010763a:	83 c4 14             	add    $0x14,%esp$/;"	l
f010763d	obj/kern/kernel.asm	/^f010763d:	5b                   	pop    %ebx$/;"	l
f010763e	obj/kern/kernel.asm	/^f010763e:	5d                   	pop    %ebp$/;"	l
f010763f	obj/kern/kernel.asm	/^f010763f:	c3                   	ret    $/;"	l
f0107640	obj/kern/kernel.asm	/^f0107640 <receive_packet>:$/;"	l
f0107640	obj/kern/kernel.asm	/^f0107640:	a1 28 b0 2f f0       	mov    0xf02fb028,%eax$/;"	l
f0107645	obj/kern/kernel.asm	/^f0107645:	8b 90 18 28 00 00    	mov    0x2818(%eax),%edx$/;"	l
f010764b	obj/kern/kernel.asm	/^f010764b:	83 c2 01             	add    $0x1,%edx$/;"	l
f010764e	obj/kern/kernel.asm	/^f010764e:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0107651	obj/kern/kernel.asm	/^f0107651:	c1 e2 04             	shl    $0x4,%edx$/;"	l
f0107654	obj/kern/kernel.asm	/^f0107654:	03 15 24 b0 2f f0    	add    0xf02fb024,%edx$/;"	l
f010765a	obj/kern/kernel.asm	/^f010765a:	f6 42 0c 01          	testb  $0x1,0xc(%edx)$/;"	l
f010765e	obj/kern/kernel.asm	/^f010765e:	74 4c                	je     f01076ac <receive_packet+0x6c>$/;"	l
f0107660	obj/kern/kernel.asm	/^f0107660:	55                   	push   %ebp$/;"	l
f0107661	obj/kern/kernel.asm	/^f0107661:	89 e5                	mov    %esp,%ebp$/;"	l
f0107663	obj/kern/kernel.asm	/^f0107663:	53                   	push   %ebx$/;"	l
f0107664	obj/kern/kernel.asm	/^f0107664:	8b 98 18 28 00 00    	mov    0x2818(%eax),%ebx$/;"	l
f010766a	obj/kern/kernel.asm	/^f010766a:	8b 88 08 28 00 00    	mov    0x2808(%eax),%ecx$/;"	l
f0107670	obj/kern/kernel.asm	/^f0107670:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0107673	obj/kern/kernel.asm	/^f0107673:	c1 e3 04             	shl    $0x4,%ebx$/;"	l
f0107676	obj/kern/kernel.asm	/^f0107676:	39 cb                	cmp    %ecx,%ebx$/;"	l
f0107678	obj/kern/kernel.asm	/^f0107678:	72 0c                	jb     f0107686 <receive_packet+0x46>$/;"	l
f010767a	obj/kern/kernel.asm	/^f010767a:	c7 80 18 28 00 00 00 	movl   $0x0,0x2818(%eax)$/;"	l
f0107681	obj/kern/kernel.asm	/^f0107681:	00 00 00 $/;"	l
f0107684	obj/kern/kernel.asm	/^f0107684:	eb 0f                	jmp    f0107695 <receive_packet+0x55>$/;"	l
f0107686	obj/kern/kernel.asm	/^f0107686:	8b 88 18 28 00 00    	mov    0x2818(%eax),%ecx$/;"	l
f010768c	obj/kern/kernel.asm	/^f010768c:	83 c1 01             	add    $0x1,%ecx$/;"	l
f010768f	obj/kern/kernel.asm	/^f010768f:	89 88 18 28 00 00    	mov    %ecx,0x2818(%eax)$/;"	l
f0107695	obj/kern/kernel.asm	/^f0107695:	8b 0a                	mov    (%edx),%ecx$/;"	l
f0107697	obj/kern/kernel.asm	/^f0107697:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010769a	obj/kern/kernel.asm	/^f010769a:	89 08                	mov    %ecx,(%eax)$/;"	l
f010769c	obj/kern/kernel.asm	/^f010769c:	0f b7 52 08          	movzwl 0x8(%edx),%edx$/;"	l
f01076a0	obj/kern/kernel.asm	/^f01076a0:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01076a3	obj/kern/kernel.asm	/^f01076a3:	89 10                	mov    %edx,(%eax)$/;"	l
f01076a5	obj/kern/kernel.asm	/^f01076a5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01076aa	obj/kern/kernel.asm	/^f01076aa:	eb 06                	jmp    f01076b2 <receive_packet+0x72>$/;"	l
f01076ac	obj/kern/kernel.asm	/^f01076ac:	b8 ee ff ff ff       	mov    $0xffffffee,%eax$/;"	l
f01076b1	obj/kern/kernel.asm	/^f01076b1:	c3                   	ret    $/;"	l
f01076b2	obj/kern/kernel.asm	/^f01076b2:	5b                   	pop    %ebx$/;"	l
f01076b3	obj/kern/kernel.asm	/^f01076b3:	5d                   	pop    %ebp$/;"	l
f01076b4	obj/kern/kernel.asm	/^f01076b4:	c3                   	ret    $/;"	l
f01076b5	obj/kern/kernel.asm	/^f01076b5 <pci_attach_match>:$/;"	l
f01076b5	obj/kern/kernel.asm	/^f01076b5:	55                   	push   %ebp$/;"	l
f01076b6	obj/kern/kernel.asm	/^f01076b6:	89 e5                	mov    %esp,%ebp$/;"	l
f01076b8	obj/kern/kernel.asm	/^f01076b8:	57                   	push   %edi$/;"	l
f01076b9	obj/kern/kernel.asm	/^f01076b9:	56                   	push   %esi$/;"	l
f01076ba	obj/kern/kernel.asm	/^f01076ba:	53                   	push   %ebx$/;"	l
f01076bb	obj/kern/kernel.asm	/^f01076bb:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f01076be	obj/kern/kernel.asm	/^f01076be:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f01076c1	obj/kern/kernel.asm	/^f01076c1:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f01076c4	obj/kern/kernel.asm	/^f01076c4:	eb 41                	jmp    f0107707 <pci_attach_match+0x52>$/;"	l
f01076c6	obj/kern/kernel.asm	/^f01076c6:	39 3b                	cmp    %edi,(%ebx)$/;"	l
f01076c8	obj/kern/kernel.asm	/^f01076c8:	75 3a                	jne    f0107704 <pci_attach_match+0x4f>$/;"	l
f01076ca	obj/kern/kernel.asm	/^f01076ca:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01076cd	obj/kern/kernel.asm	/^f01076cd:	39 56 04             	cmp    %edx,0x4(%esi)$/;"	l
f01076d0	obj/kern/kernel.asm	/^f01076d0:	75 32                	jne    f0107704 <pci_attach_match+0x4f>$/;"	l
f01076d2	obj/kern/kernel.asm	/^f01076d2:	8b 4d 14             	mov    0x14(%ebp),%ecx$/;"	l
f01076d5	obj/kern/kernel.asm	/^f01076d5:	89 0c 24             	mov    %ecx,(%esp)$/;"	l
f01076d8	obj/kern/kernel.asm	/^f01076d8:	ff d0                	call   *%eax$/;"	l
f01076da	obj/kern/kernel.asm	/^f01076da:	85 c0                	test   %eax,%eax$/;"	l
f01076dc	obj/kern/kernel.asm	/^f01076dc:	7f 32                	jg     f0107710 <pci_attach_match+0x5b>$/;"	l
f01076de	obj/kern/kernel.asm	/^f01076de:	85 c0                	test   %eax,%eax$/;"	l
f01076e0	obj/kern/kernel.asm	/^f01076e0:	79 22                	jns    f0107704 <pci_attach_match+0x4f>$/;"	l
f01076e2	obj/kern/kernel.asm	/^f01076e2:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f01076e6	obj/kern/kernel.asm	/^f01076e6:	8b 46 08             	mov    0x8(%esi),%eax$/;"	l
f01076e9	obj/kern/kernel.asm	/^f01076e9:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01076ed	obj/kern/kernel.asm	/^f01076ed:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01076f0	obj/kern/kernel.asm	/^f01076f0:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01076f4	obj/kern/kernel.asm	/^f01076f4:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01076f8	obj/kern/kernel.asm	/^f01076f8:	c7 04 24 10 a0 10 f0 	movl   $0xf010a010,(%esp)$/;"	l
f01076ff	obj/kern/kernel.asm	/^f01076ff:	e8 e8 c8 ff ff       	call   f0103fec <cprintf>$/;"	l
f0107704	obj/kern/kernel.asm	/^f0107704:	83 c3 0c             	add    $0xc,%ebx$/;"	l
f0107707	obj/kern/kernel.asm	/^f0107707:	89 de                	mov    %ebx,%esi$/;"	l
f0107709	obj/kern/kernel.asm	/^f0107709:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f010770c	obj/kern/kernel.asm	/^f010770c:	85 c0                	test   %eax,%eax$/;"	l
f010770e	obj/kern/kernel.asm	/^f010770e:	75 b6                	jne    f01076c6 <pci_attach_match+0x11>$/;"	l
f0107710	obj/kern/kernel.asm	/^f0107710:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0107713	obj/kern/kernel.asm	/^f0107713:	5b                   	pop    %ebx$/;"	l
f0107714	obj/kern/kernel.asm	/^f0107714:	5e                   	pop    %esi$/;"	l
f0107715	obj/kern/kernel.asm	/^f0107715:	5f                   	pop    %edi$/;"	l
f0107716	obj/kern/kernel.asm	/^f0107716:	5d                   	pop    %ebp$/;"	l
f0107717	obj/kern/kernel.asm	/^f0107717:	c3                   	ret    $/;"	l
f0107718	obj/kern/kernel.asm	/^f0107718 <pci_conf1_set_addr>:$/;"	l
f0107718	obj/kern/kernel.asm	/^f0107718:	55                   	push   %ebp$/;"	l
f0107719	obj/kern/kernel.asm	/^f0107719:	89 e5                	mov    %esp,%ebp$/;"	l
f010771b	obj/kern/kernel.asm	/^f010771b:	56                   	push   %esi$/;"	l
f010771c	obj/kern/kernel.asm	/^f010771c:	53                   	push   %ebx$/;"	l
f010771d	obj/kern/kernel.asm	/^f010771d:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0107720	obj/kern/kernel.asm	/^f0107720:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0107723	obj/kern/kernel.asm	/^f0107723:	3d ff 00 00 00       	cmp    $0xff,%eax$/;"	l
f0107728	obj/kern/kernel.asm	/^f0107728:	76 24                	jbe    f010774e <pci_conf1_set_addr+0x36>$/;"	l
f010772a	obj/kern/kernel.asm	/^f010772a:	c7 44 24 0c 68 a1 10 	movl   $0xf010a168,0xc(%esp)$/;"	l
f0107731	obj/kern/kernel.asm	/^f0107731:	f0 $/;"	l
f0107732	obj/kern/kernel.asm	/^f0107732:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f0107739	obj/kern/kernel.asm	/^f0107739:	f0 $/;"	l
f010773a	obj/kern/kernel.asm	/^f010773a:	c7 44 24 04 2c 00 00 	movl   $0x2c,0x4(%esp)$/;"	l
f0107741	obj/kern/kernel.asm	/^f0107741:	00 $/;"	l
f0107742	obj/kern/kernel.asm	/^f0107742:	c7 04 24 72 a1 10 f0 	movl   $0xf010a172,(%esp)$/;"	l
f0107749	obj/kern/kernel.asm	/^f0107749:	e8 f2 88 ff ff       	call   f0100040 <_panic>$/;"	l
f010774e	obj/kern/kernel.asm	/^f010774e:	83 fa 1f             	cmp    $0x1f,%edx$/;"	l
f0107751	obj/kern/kernel.asm	/^f0107751:	76 24                	jbe    f0107777 <pci_conf1_set_addr+0x5f>$/;"	l
f0107753	obj/kern/kernel.asm	/^f0107753:	c7 44 24 0c 7d a1 10 	movl   $0xf010a17d,0xc(%esp)$/;"	l
f010775a	obj/kern/kernel.asm	/^f010775a:	f0 $/;"	l
f010775b	obj/kern/kernel.asm	/^f010775b:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f0107762	obj/kern/kernel.asm	/^f0107762:	f0 $/;"	l
f0107763	obj/kern/kernel.asm	/^f0107763:	c7 44 24 04 2d 00 00 	movl   $0x2d,0x4(%esp)$/;"	l
f010776a	obj/kern/kernel.asm	/^f010776a:	00 $/;"	l
f010776b	obj/kern/kernel.asm	/^f010776b:	c7 04 24 72 a1 10 f0 	movl   $0xf010a172,(%esp)$/;"	l
f0107772	obj/kern/kernel.asm	/^f0107772:	e8 c9 88 ff ff       	call   f0100040 <_panic>$/;"	l
f0107777	obj/kern/kernel.asm	/^f0107777:	83 f9 07             	cmp    $0x7,%ecx$/;"	l
f010777a	obj/kern/kernel.asm	/^f010777a:	76 24                	jbe    f01077a0 <pci_conf1_set_addr+0x88>$/;"	l
f010777c	obj/kern/kernel.asm	/^f010777c:	c7 44 24 0c 86 a1 10 	movl   $0xf010a186,0xc(%esp)$/;"	l
f0107783	obj/kern/kernel.asm	/^f0107783:	f0 $/;"	l
f0107784	obj/kern/kernel.asm	/^f0107784:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f010778b	obj/kern/kernel.asm	/^f010778b:	f0 $/;"	l
f010778c	obj/kern/kernel.asm	/^f010778c:	c7 44 24 04 2e 00 00 	movl   $0x2e,0x4(%esp)$/;"	l
f0107793	obj/kern/kernel.asm	/^f0107793:	00 $/;"	l
f0107794	obj/kern/kernel.asm	/^f0107794:	c7 04 24 72 a1 10 f0 	movl   $0xf010a172,(%esp)$/;"	l
f010779b	obj/kern/kernel.asm	/^f010779b:	e8 a0 88 ff ff       	call   f0100040 <_panic>$/;"	l
f01077a0	obj/kern/kernel.asm	/^f01077a0:	81 fb ff 00 00 00    	cmp    $0xff,%ebx$/;"	l
f01077a6	obj/kern/kernel.asm	/^f01077a6:	76 24                	jbe    f01077cc <pci_conf1_set_addr+0xb4>$/;"	l
f01077a8	obj/kern/kernel.asm	/^f01077a8:	c7 44 24 0c 8f a1 10 	movl   $0xf010a18f,0xc(%esp)$/;"	l
f01077af	obj/kern/kernel.asm	/^f01077af:	f0 $/;"	l
f01077b0	obj/kern/kernel.asm	/^f01077b0:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f01077b7	obj/kern/kernel.asm	/^f01077b7:	f0 $/;"	l
f01077b8	obj/kern/kernel.asm	/^f01077b8:	c7 44 24 04 2f 00 00 	movl   $0x2f,0x4(%esp)$/;"	l
f01077bf	obj/kern/kernel.asm	/^f01077bf:	00 $/;"	l
f01077c0	obj/kern/kernel.asm	/^f01077c0:	c7 04 24 72 a1 10 f0 	movl   $0xf010a172,(%esp)$/;"	l
f01077c7	obj/kern/kernel.asm	/^f01077c7:	e8 74 88 ff ff       	call   f0100040 <_panic>$/;"	l
f01077cc	obj/kern/kernel.asm	/^f01077cc:	f6 c3 03             	test   $0x3,%bl$/;"	l
f01077cf	obj/kern/kernel.asm	/^f01077cf:	74 24                	je     f01077f5 <pci_conf1_set_addr+0xdd>$/;"	l
f01077d1	obj/kern/kernel.asm	/^f01077d1:	c7 44 24 0c 9c a1 10 	movl   $0xf010a19c,0xc(%esp)$/;"	l
f01077d8	obj/kern/kernel.asm	/^f01077d8:	f0 $/;"	l
f01077d9	obj/kern/kernel.asm	/^f01077d9:	c7 44 24 08 53 8f 10 	movl   $0xf0108f53,0x8(%esp)$/;"	l
f01077e0	obj/kern/kernel.asm	/^f01077e0:	f0 $/;"	l
f01077e1	obj/kern/kernel.asm	/^f01077e1:	c7 44 24 04 30 00 00 	movl   $0x30,0x4(%esp)$/;"	l
f01077e8	obj/kern/kernel.asm	/^f01077e8:	00 $/;"	l
f01077e9	obj/kern/kernel.asm	/^f01077e9:	c7 04 24 72 a1 10 f0 	movl   $0xf010a172,(%esp)$/;"	l
f01077f0	obj/kern/kernel.asm	/^f01077f0:	e8 4b 88 ff ff       	call   f0100040 <_panic>$/;"	l
f01077f5	obj/kern/kernel.asm	/^f01077f5:	81 cb 00 00 00 80    	or     $0x80000000,%ebx$/;"	l
f01077fb	obj/kern/kernel.asm	/^f01077fb:	c1 e1 08             	shl    $0x8,%ecx$/;"	l
f01077fe	obj/kern/kernel.asm	/^f01077fe:	09 cb                	or     %ecx,%ebx$/;"	l
f0107800	obj/kern/kernel.asm	/^f0107800:	89 d6                	mov    %edx,%esi$/;"	l
f0107802	obj/kern/kernel.asm	/^f0107802:	c1 e6 0b             	shl    $0xb,%esi$/;"	l
f0107805	obj/kern/kernel.asm	/^f0107805:	09 f3                	or     %esi,%ebx$/;"	l
f0107807	obj/kern/kernel.asm	/^f0107807:	c1 e0 10             	shl    $0x10,%eax$/;"	l
f010780a	obj/kern/kernel.asm	/^f010780a:	89 c6                	mov    %eax,%esi$/;"	l
f010780c	obj/kern/kernel.asm	/^f010780c:	89 d8                	mov    %ebx,%eax$/;"	l
f010780e	obj/kern/kernel.asm	/^f010780e:	09 f0                	or     %esi,%eax$/;"	l
f0107810	obj/kern/kernel.asm	/^f0107810:	ba f8 0c 00 00       	mov    $0xcf8,%edx$/;"	l
f0107815	obj/kern/kernel.asm	/^f0107815:	ef                   	out    %eax,(%dx)$/;"	l
f0107816	obj/kern/kernel.asm	/^f0107816:	83 c4 10             	add    $0x10,%esp$/;"	l
f0107819	obj/kern/kernel.asm	/^f0107819:	5b                   	pop    %ebx$/;"	l
f010781a	obj/kern/kernel.asm	/^f010781a:	5e                   	pop    %esi$/;"	l
f010781b	obj/kern/kernel.asm	/^f010781b:	5d                   	pop    %ebp$/;"	l
f010781c	obj/kern/kernel.asm	/^f010781c:	c3                   	ret    $/;"	l
f010781d	obj/kern/kernel.asm	/^f010781d <pci_conf_read>:$/;"	l
f010781d	obj/kern/kernel.asm	/^f010781d:	55                   	push   %ebp$/;"	l
f010781e	obj/kern/kernel.asm	/^f010781e:	89 e5                	mov    %esp,%ebp$/;"	l
f0107820	obj/kern/kernel.asm	/^f0107820:	53                   	push   %ebx$/;"	l
f0107821	obj/kern/kernel.asm	/^f0107821:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0107824	obj/kern/kernel.asm	/^f0107824:	8b 48 08             	mov    0x8(%eax),%ecx$/;"	l
f0107827	obj/kern/kernel.asm	/^f0107827:	8b 58 04             	mov    0x4(%eax),%ebx$/;"	l
f010782a	obj/kern/kernel.asm	/^f010782a:	8b 00                	mov    (%eax),%eax$/;"	l
f010782c	obj/kern/kernel.asm	/^f010782c:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f010782f	obj/kern/kernel.asm	/^f010782f:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0107832	obj/kern/kernel.asm	/^f0107832:	89 da                	mov    %ebx,%edx$/;"	l
f0107834	obj/kern/kernel.asm	/^f0107834:	e8 df fe ff ff       	call   f0107718 <pci_conf1_set_addr>$/;"	l
f0107839	obj/kern/kernel.asm	/^f0107839:	ba fc 0c 00 00       	mov    $0xcfc,%edx$/;"	l
f010783e	obj/kern/kernel.asm	/^f010783e:	ed                   	in     (%dx),%eax$/;"	l
f010783f	obj/kern/kernel.asm	/^f010783f:	83 c4 14             	add    $0x14,%esp$/;"	l
f0107842	obj/kern/kernel.asm	/^f0107842:	5b                   	pop    %ebx$/;"	l
f0107843	obj/kern/kernel.asm	/^f0107843:	5d                   	pop    %ebp$/;"	l
f0107844	obj/kern/kernel.asm	/^f0107844:	c3                   	ret    $/;"	l
f0107845	obj/kern/kernel.asm	/^f0107845 <pci_scan_bus>:$/;"	l
f0107845	obj/kern/kernel.asm	/^f0107845:	55                   	push   %ebp$/;"	l
f0107846	obj/kern/kernel.asm	/^f0107846:	89 e5                	mov    %esp,%ebp$/;"	l
f0107848	obj/kern/kernel.asm	/^f0107848:	57                   	push   %edi$/;"	l
f0107849	obj/kern/kernel.asm	/^f0107849:	56                   	push   %esi$/;"	l
f010784a	obj/kern/kernel.asm	/^f010784a:	53                   	push   %ebx$/;"	l
f010784b	obj/kern/kernel.asm	/^f010784b:	81 ec 1c 01 00 00    	sub    $0x11c,%esp$/;"	l
f0107851	obj/kern/kernel.asm	/^f0107851:	89 c3                	mov    %eax,%ebx$/;"	l
f0107853	obj/kern/kernel.asm	/^f0107853:	c7 44 24 08 48 00 00 	movl   $0x48,0x8(%esp)$/;"	l
f010785a	obj/kern/kernel.asm	/^f010785a:	00 $/;"	l
f010785b	obj/kern/kernel.asm	/^f010785b:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0107862	obj/kern/kernel.asm	/^f0107862:	00 $/;"	l
f0107863	obj/kern/kernel.asm	/^f0107863:	8d 45 a0             	lea    -0x60(%ebp),%eax$/;"	l
f0107866	obj/kern/kernel.asm	/^f0107866:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0107869	obj/kern/kernel.asm	/^f0107869:	e8 99 ec ff ff       	call   f0106507 <memset>$/;"	l
f010786e	obj/kern/kernel.asm	/^f010786e:	89 5d a0             	mov    %ebx,-0x60(%ebp)$/;"	l
f0107871	obj/kern/kernel.asm	/^f0107871:	c7 45 a4 00 00 00 00 	movl   $0x0,-0x5c(%ebp)$/;"	l
f0107878	obj/kern/kernel.asm	/^f0107878:	c7 85 00 ff ff ff 00 	movl   $0x0,-0x100(%ebp)$/;"	l
f010787f	obj/kern/kernel.asm	/^f010787f:	00 00 00 $/;"	l
f0107882	obj/kern/kernel.asm	/^f0107882:	ba 0c 00 00 00       	mov    $0xc,%edx$/;"	l
f0107887	obj/kern/kernel.asm	/^f0107887:	8d 45 a0             	lea    -0x60(%ebp),%eax$/;"	l
f010788a	obj/kern/kernel.asm	/^f010788a:	e8 8e ff ff ff       	call   f010781d <pci_conf_read>$/;"	l
f010788f	obj/kern/kernel.asm	/^f010788f:	89 c2                	mov    %eax,%edx$/;"	l
f0107891	obj/kern/kernel.asm	/^f0107891:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0107894	obj/kern/kernel.asm	/^f0107894:	83 e2 7f             	and    $0x7f,%edx$/;"	l
f0107897	obj/kern/kernel.asm	/^f0107897:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f010789a	obj/kern/kernel.asm	/^f010789a:	0f 87 6f 01 00 00    	ja     f0107a0f <pci_scan_bus+0x1ca>$/;"	l
f01078a0	obj/kern/kernel.asm	/^f01078a0:	83 85 00 ff ff ff 01 	addl   $0x1,-0x100(%ebp)$/;"	l
f01078a7	obj/kern/kernel.asm	/^f01078a7:	b9 12 00 00 00       	mov    $0x12,%ecx$/;"	l
f01078ac	obj/kern/kernel.asm	/^f01078ac:	8d bd 10 ff ff ff    	lea    -0xf0(%ebp),%edi$/;"	l
f01078b2	obj/kern/kernel.asm	/^f01078b2:	8d 75 a0             	lea    -0x60(%ebp),%esi$/;"	l
f01078b5	obj/kern/kernel.asm	/^f01078b5:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f01078b7	obj/kern/kernel.asm	/^f01078b7:	c7 85 18 ff ff ff 00 	movl   $0x0,-0xe8(%ebp)$/;"	l
f01078be	obj/kern/kernel.asm	/^f01078be:	00 00 00 $/;"	l
f01078c1	obj/kern/kernel.asm	/^f01078c1:	25 00 00 80 00       	and    $0x800000,%eax$/;"	l
f01078c6	obj/kern/kernel.asm	/^f01078c6:	89 85 04 ff ff ff    	mov    %eax,-0xfc(%ebp)$/;"	l
f01078cc	obj/kern/kernel.asm	/^f01078cc:	8d 9d 58 ff ff ff    	lea    -0xa8(%ebp),%ebx$/;"	l
f01078d2	obj/kern/kernel.asm	/^f01078d2:	e9 1d 01 00 00       	jmp    f01079f4 <pci_scan_bus+0x1af>$/;"	l
f01078d7	obj/kern/kernel.asm	/^f01078d7:	b9 12 00 00 00       	mov    $0x12,%ecx$/;"	l
f01078dc	obj/kern/kernel.asm	/^f01078dc:	89 df                	mov    %ebx,%edi$/;"	l
f01078de	obj/kern/kernel.asm	/^f01078de:	8d b5 10 ff ff ff    	lea    -0xf0(%ebp),%esi$/;"	l
f01078e4	obj/kern/kernel.asm	/^f01078e4:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f01078e6	obj/kern/kernel.asm	/^f01078e6:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01078eb	obj/kern/kernel.asm	/^f01078eb:	8d 85 10 ff ff ff    	lea    -0xf0(%ebp),%eax$/;"	l
f01078f1	obj/kern/kernel.asm	/^f01078f1:	e8 27 ff ff ff       	call   f010781d <pci_conf_read>$/;"	l
f01078f6	obj/kern/kernel.asm	/^f01078f6:	89 85 64 ff ff ff    	mov    %eax,-0x9c(%ebp)$/;"	l
f01078fc	obj/kern/kernel.asm	/^f01078fc:	66 83 f8 ff          	cmp    $0xffff,%ax$/;"	l
f0107900	obj/kern/kernel.asm	/^f0107900:	0f 84 e7 00 00 00    	je     f01079ed <pci_scan_bus+0x1a8>$/;"	l
f0107906	obj/kern/kernel.asm	/^f0107906:	ba 3c 00 00 00       	mov    $0x3c,%edx$/;"	l
f010790b	obj/kern/kernel.asm	/^f010790b:	89 d8                	mov    %ebx,%eax$/;"	l
f010790d	obj/kern/kernel.asm	/^f010790d:	e8 0b ff ff ff       	call   f010781d <pci_conf_read>$/;"	l
f0107912	obj/kern/kernel.asm	/^f0107912:	88 45 9c             	mov    %al,-0x64(%ebp)$/;"	l
f0107915	obj/kern/kernel.asm	/^f0107915:	ba 08 00 00 00       	mov    $0x8,%edx$/;"	l
f010791a	obj/kern/kernel.asm	/^f010791a:	89 d8                	mov    %ebx,%eax$/;"	l
f010791c	obj/kern/kernel.asm	/^f010791c:	e8 fc fe ff ff       	call   f010781d <pci_conf_read>$/;"	l
f0107921	obj/kern/kernel.asm	/^f0107921:	89 85 68 ff ff ff    	mov    %eax,-0x98(%ebp)$/;"	l
f0107927	obj/kern/kernel.asm	/^f0107927:	89 c2                	mov    %eax,%edx$/;"	l
f0107929	obj/kern/kernel.asm	/^f0107929:	c1 ea 18             	shr    $0x18,%edx$/;"	l
f010792c	obj/kern/kernel.asm	/^f010792c:	b9 b0 a1 10 f0       	mov    $0xf010a1b0,%ecx$/;"	l
f0107931	obj/kern/kernel.asm	/^f0107931:	83 fa 06             	cmp    $0x6,%edx$/;"	l
f0107934	obj/kern/kernel.asm	/^f0107934:	77 07                	ja     f010793d <pci_scan_bus+0xf8>$/;"	l
f0107936	obj/kern/kernel.asm	/^f0107936:	8b 0c 95 24 a2 10 f0 	mov    -0xfef5ddc(,%edx,4),%ecx$/;"	l
f010793d	obj/kern/kernel.asm	/^f010793d:	8b b5 64 ff ff ff    	mov    -0x9c(%ebp),%esi$/;"	l
f0107943	obj/kern/kernel.asm	/^f0107943:	0f b6 7d 9c          	movzbl -0x64(%ebp),%edi$/;"	l
f0107947	obj/kern/kernel.asm	/^f0107947:	89 7c 24 24          	mov    %edi,0x24(%esp)$/;"	l
f010794b	obj/kern/kernel.asm	/^f010794b:	89 4c 24 20          	mov    %ecx,0x20(%esp)$/;"	l
f010794f	obj/kern/kernel.asm	/^f010794f:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0107952	obj/kern/kernel.asm	/^f0107952:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0107955	obj/kern/kernel.asm	/^f0107955:	89 44 24 1c          	mov    %eax,0x1c(%esp)$/;"	l
f0107959	obj/kern/kernel.asm	/^f0107959:	89 54 24 18          	mov    %edx,0x18(%esp)$/;"	l
f010795d	obj/kern/kernel.asm	/^f010795d:	89 f0                	mov    %esi,%eax$/;"	l
f010795f	obj/kern/kernel.asm	/^f010795f:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0107962	obj/kern/kernel.asm	/^f0107962:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
f0107966	obj/kern/kernel.asm	/^f0107966:	0f b7 f6             	movzwl %si,%esi$/;"	l
f0107969	obj/kern/kernel.asm	/^f0107969:	89 74 24 10          	mov    %esi,0x10(%esp)$/;"	l
f010796d	obj/kern/kernel.asm	/^f010796d:	8b 85 60 ff ff ff    	mov    -0xa0(%ebp),%eax$/;"	l
f0107973	obj/kern/kernel.asm	/^f0107973:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0107977	obj/kern/kernel.asm	/^f0107977:	8b 85 5c ff ff ff    	mov    -0xa4(%ebp),%eax$/;"	l
f010797d	obj/kern/kernel.asm	/^f010797d:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0107981	obj/kern/kernel.asm	/^f0107981:	8b 85 58 ff ff ff    	mov    -0xa8(%ebp),%eax$/;"	l
f0107987	obj/kern/kernel.asm	/^f0107987:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f010798a	obj/kern/kernel.asm	/^f010798a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010798e	obj/kern/kernel.asm	/^f010798e:	c7 04 24 3c a0 10 f0 	movl   $0xf010a03c,(%esp)$/;"	l
f0107995	obj/kern/kernel.asm	/^f0107995:	e8 52 c6 ff ff       	call   f0103fec <cprintf>$/;"	l
f010799a	obj/kern/kernel.asm	/^f010799a:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax$/;"	l
f01079a0	obj/kern/kernel.asm	/^f01079a0:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f01079a4	obj/kern/kernel.asm	/^f01079a4:	c7 44 24 08 10 54 12 	movl   $0xf0125410,0x8(%esp)$/;"	l
f01079ab	obj/kern/kernel.asm	/^f01079ab:	f0 $/;"	l
f01079ac	obj/kern/kernel.asm	/^f01079ac:	89 c2                	mov    %eax,%edx$/;"	l
f01079ae	obj/kern/kernel.asm	/^f01079ae:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f01079b1	obj/kern/kernel.asm	/^f01079b1:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f01079b4	obj/kern/kernel.asm	/^f01079b4:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01079b8	obj/kern/kernel.asm	/^f01079b8:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f01079bb	obj/kern/kernel.asm	/^f01079bb:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01079be	obj/kern/kernel.asm	/^f01079be:	e8 f2 fc ff ff       	call   f01076b5 <pci_attach_match>$/;"	l
f01079c3	obj/kern/kernel.asm	/^f01079c3:	85 c0                	test   %eax,%eax$/;"	l
f01079c5	obj/kern/kernel.asm	/^f01079c5:	75 26                	jne    f01079ed <pci_scan_bus+0x1a8>$/;"	l
f01079c7	obj/kern/kernel.asm	/^f01079c7:	8b 85 64 ff ff ff    	mov    -0x9c(%ebp),%eax$/;"	l
f01079cd	obj/kern/kernel.asm	/^f01079cd:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f01079d1	obj/kern/kernel.asm	/^f01079d1:	c7 44 24 08 f8 53 12 	movl   $0xf01253f8,0x8(%esp)$/;"	l
f01079d8	obj/kern/kernel.asm	/^f01079d8:	f0 $/;"	l
f01079d9	obj/kern/kernel.asm	/^f01079d9:	89 c2                	mov    %eax,%edx$/;"	l
f01079db	obj/kern/kernel.asm	/^f01079db:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f01079de	obj/kern/kernel.asm	/^f01079de:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01079e2	obj/kern/kernel.asm	/^f01079e2:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f01079e5	obj/kern/kernel.asm	/^f01079e5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01079e8	obj/kern/kernel.asm	/^f01079e8:	e8 c8 fc ff ff       	call   f01076b5 <pci_attach_match>$/;"	l
f01079ed	obj/kern/kernel.asm	/^f01079ed:	83 85 18 ff ff ff 01 	addl   $0x1,-0xe8(%ebp)$/;"	l
f01079f4	obj/kern/kernel.asm	/^f01079f4:	83 bd 04 ff ff ff 01 	cmpl   $0x1,-0xfc(%ebp)$/;"	l
f01079fb	obj/kern/kernel.asm	/^f01079fb:	19 c0                	sbb    %eax,%eax$/;"	l
f01079fd	obj/kern/kernel.asm	/^f01079fd:	83 e0 f9             	and    $0xfffffff9,%eax$/;"	l
f0107a00	obj/kern/kernel.asm	/^f0107a00:	83 c0 08             	add    $0x8,%eax$/;"	l
f0107a03	obj/kern/kernel.asm	/^f0107a03:	3b 85 18 ff ff ff    	cmp    -0xe8(%ebp),%eax$/;"	l
f0107a09	obj/kern/kernel.asm	/^f0107a09:	0f 87 c8 fe ff ff    	ja     f01078d7 <pci_scan_bus+0x92>$/;"	l
f0107a0f	obj/kern/kernel.asm	/^f0107a0f:	8b 45 a4             	mov    -0x5c(%ebp),%eax$/;"	l
f0107a12	obj/kern/kernel.asm	/^f0107a12:	83 c0 01             	add    $0x1,%eax$/;"	l
f0107a15	obj/kern/kernel.asm	/^f0107a15:	89 45 a4             	mov    %eax,-0x5c(%ebp)$/;"	l
f0107a18	obj/kern/kernel.asm	/^f0107a18:	83 f8 1f             	cmp    $0x1f,%eax$/;"	l
f0107a1b	obj/kern/kernel.asm	/^f0107a1b:	0f 86 61 fe ff ff    	jbe    f0107882 <pci_scan_bus+0x3d>$/;"	l
f0107a21	obj/kern/kernel.asm	/^f0107a21:	8b 85 00 ff ff ff    	mov    -0x100(%ebp),%eax$/;"	l
f0107a27	obj/kern/kernel.asm	/^f0107a27:	81 c4 1c 01 00 00    	add    $0x11c,%esp$/;"	l
f0107a2d	obj/kern/kernel.asm	/^f0107a2d:	5b                   	pop    %ebx$/;"	l
f0107a2e	obj/kern/kernel.asm	/^f0107a2e:	5e                   	pop    %esi$/;"	l
f0107a2f	obj/kern/kernel.asm	/^f0107a2f:	5f                   	pop    %edi$/;"	l
f0107a30	obj/kern/kernel.asm	/^f0107a30:	5d                   	pop    %ebp$/;"	l
f0107a31	obj/kern/kernel.asm	/^f0107a31:	c3                   	ret    $/;"	l
f0107a32	obj/kern/kernel.asm	/^f0107a32 <pci_bridge_attach>:$/;"	l
f0107a32	obj/kern/kernel.asm	/^f0107a32:	55                   	push   %ebp$/;"	l
f0107a33	obj/kern/kernel.asm	/^f0107a33:	89 e5                	mov    %esp,%ebp$/;"	l
f0107a35	obj/kern/kernel.asm	/^f0107a35:	57                   	push   %edi$/;"	l
f0107a36	obj/kern/kernel.asm	/^f0107a36:	56                   	push   %esi$/;"	l
f0107a37	obj/kern/kernel.asm	/^f0107a37:	53                   	push   %ebx$/;"	l
f0107a38	obj/kern/kernel.asm	/^f0107a38:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0107a3b	obj/kern/kernel.asm	/^f0107a3b:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0107a3e	obj/kern/kernel.asm	/^f0107a3e:	ba 1c 00 00 00       	mov    $0x1c,%edx$/;"	l
f0107a43	obj/kern/kernel.asm	/^f0107a43:	89 d8                	mov    %ebx,%eax$/;"	l
f0107a45	obj/kern/kernel.asm	/^f0107a45:	e8 d3 fd ff ff       	call   f010781d <pci_conf_read>$/;"	l
f0107a4a	obj/kern/kernel.asm	/^f0107a4a:	89 c7                	mov    %eax,%edi$/;"	l
f0107a4c	obj/kern/kernel.asm	/^f0107a4c:	ba 18 00 00 00       	mov    $0x18,%edx$/;"	l
f0107a51	obj/kern/kernel.asm	/^f0107a51:	89 d8                	mov    %ebx,%eax$/;"	l
f0107a53	obj/kern/kernel.asm	/^f0107a53:	e8 c5 fd ff ff       	call   f010781d <pci_conf_read>$/;"	l
f0107a58	obj/kern/kernel.asm	/^f0107a58:	83 e7 0f             	and    $0xf,%edi$/;"	l
f0107a5b	obj/kern/kernel.asm	/^f0107a5b:	83 ff 01             	cmp    $0x1,%edi$/;"	l
f0107a5e	obj/kern/kernel.asm	/^f0107a5e:	75 2a                	jne    f0107a8a <pci_bridge_attach+0x58>$/;"	l
f0107a60	obj/kern/kernel.asm	/^f0107a60:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0107a63	obj/kern/kernel.asm	/^f0107a63:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0107a67	obj/kern/kernel.asm	/^f0107a67:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f0107a6a	obj/kern/kernel.asm	/^f0107a6a:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0107a6e	obj/kern/kernel.asm	/^f0107a6e:	8b 03                	mov    (%ebx),%eax$/;"	l
f0107a70	obj/kern/kernel.asm	/^f0107a70:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0107a73	obj/kern/kernel.asm	/^f0107a73:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0107a77	obj/kern/kernel.asm	/^f0107a77:	c7 04 24 78 a0 10 f0 	movl   $0xf010a078,(%esp)$/;"	l
f0107a7e	obj/kern/kernel.asm	/^f0107a7e:	e8 69 c5 ff ff       	call   f0103fec <cprintf>$/;"	l
f0107a83	obj/kern/kernel.asm	/^f0107a83:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0107a88	obj/kern/kernel.asm	/^f0107a88:	eb 67                	jmp    f0107af1 <pci_bridge_attach+0xbf>$/;"	l
f0107a8a	obj/kern/kernel.asm	/^f0107a8a:	89 c6                	mov    %eax,%esi$/;"	l
f0107a8c	obj/kern/kernel.asm	/^f0107a8c:	c7 44 24 08 08 00 00 	movl   $0x8,0x8(%esp)$/;"	l
f0107a93	obj/kern/kernel.asm	/^f0107a93:	00 $/;"	l
f0107a94	obj/kern/kernel.asm	/^f0107a94:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0107a9b	obj/kern/kernel.asm	/^f0107a9b:	00 $/;"	l
f0107a9c	obj/kern/kernel.asm	/^f0107a9c:	8d 7d e0             	lea    -0x20(%ebp),%edi$/;"	l
f0107a9f	obj/kern/kernel.asm	/^f0107a9f:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0107aa2	obj/kern/kernel.asm	/^f0107aa2:	e8 60 ea ff ff       	call   f0106507 <memset>$/;"	l
f0107aa7	obj/kern/kernel.asm	/^f0107aa7:	89 5d e0             	mov    %ebx,-0x20(%ebp)$/;"	l
f0107aaa	obj/kern/kernel.asm	/^f0107aaa:	89 f0                	mov    %esi,%eax$/;"	l
f0107aac	obj/kern/kernel.asm	/^f0107aac:	0f b6 c4             	movzbl %ah,%eax$/;"	l
f0107aaf	obj/kern/kernel.asm	/^f0107aaf:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0107ab2	obj/kern/kernel.asm	/^f0107ab2:	89 f2                	mov    %esi,%edx$/;"	l
f0107ab4	obj/kern/kernel.asm	/^f0107ab4:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0107ab7	obj/kern/kernel.asm	/^f0107ab7:	0f b6 f2             	movzbl %dl,%esi$/;"	l
f0107aba	obj/kern/kernel.asm	/^f0107aba:	89 74 24 14          	mov    %esi,0x14(%esp)$/;"	l
f0107abe	obj/kern/kernel.asm	/^f0107abe:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f0107ac2	obj/kern/kernel.asm	/^f0107ac2:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0107ac5	obj/kern/kernel.asm	/^f0107ac5:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0107ac9	obj/kern/kernel.asm	/^f0107ac9:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f0107acc	obj/kern/kernel.asm	/^f0107acc:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0107ad0	obj/kern/kernel.asm	/^f0107ad0:	8b 03                	mov    (%ebx),%eax$/;"	l
f0107ad2	obj/kern/kernel.asm	/^f0107ad2:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0107ad5	obj/kern/kernel.asm	/^f0107ad5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0107ad9	obj/kern/kernel.asm	/^f0107ad9:	c7 04 24 ac a0 10 f0 	movl   $0xf010a0ac,(%esp)$/;"	l
f0107ae0	obj/kern/kernel.asm	/^f0107ae0:	e8 07 c5 ff ff       	call   f0103fec <cprintf>$/;"	l
f0107ae5	obj/kern/kernel.asm	/^f0107ae5:	89 f8                	mov    %edi,%eax$/;"	l
f0107ae7	obj/kern/kernel.asm	/^f0107ae7:	e8 59 fd ff ff       	call   f0107845 <pci_scan_bus>$/;"	l
f0107aec	obj/kern/kernel.asm	/^f0107aec:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0107af1	obj/kern/kernel.asm	/^f0107af1:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f0107af4	obj/kern/kernel.asm	/^f0107af4:	5b                   	pop    %ebx$/;"	l
f0107af5	obj/kern/kernel.asm	/^f0107af5:	5e                   	pop    %esi$/;"	l
f0107af6	obj/kern/kernel.asm	/^f0107af6:	5f                   	pop    %edi$/;"	l
f0107af7	obj/kern/kernel.asm	/^f0107af7:	5d                   	pop    %ebp$/;"	l
f0107af8	obj/kern/kernel.asm	/^f0107af8:	c3                   	ret    $/;"	l
f0107af9	obj/kern/kernel.asm	/^f0107af9 <pci_conf_write>:$/;"	l
f0107af9	obj/kern/kernel.asm	/^f0107af9:	55                   	push   %ebp$/;"	l
f0107afa	obj/kern/kernel.asm	/^f0107afa:	89 e5                	mov    %esp,%ebp$/;"	l
f0107afc	obj/kern/kernel.asm	/^f0107afc:	56                   	push   %esi$/;"	l
f0107afd	obj/kern/kernel.asm	/^f0107afd:	53                   	push   %ebx$/;"	l
f0107afe	obj/kern/kernel.asm	/^f0107afe:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0107b01	obj/kern/kernel.asm	/^f0107b01:	89 cb                	mov    %ecx,%ebx$/;"	l
f0107b03	obj/kern/kernel.asm	/^f0107b03:	8b 48 08             	mov    0x8(%eax),%ecx$/;"	l
f0107b06	obj/kern/kernel.asm	/^f0107b06:	8b 70 04             	mov    0x4(%eax),%esi$/;"	l
f0107b09	obj/kern/kernel.asm	/^f0107b09:	8b 00                	mov    (%eax),%eax$/;"	l
f0107b0b	obj/kern/kernel.asm	/^f0107b0b:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0107b0e	obj/kern/kernel.asm	/^f0107b0e:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0107b11	obj/kern/kernel.asm	/^f0107b11:	89 f2                	mov    %esi,%edx$/;"	l
f0107b13	obj/kern/kernel.asm	/^f0107b13:	e8 00 fc ff ff       	call   f0107718 <pci_conf1_set_addr>$/;"	l
f0107b18	obj/kern/kernel.asm	/^f0107b18:	ba fc 0c 00 00       	mov    $0xcfc,%edx$/;"	l
f0107b1d	obj/kern/kernel.asm	/^f0107b1d:	89 d8                	mov    %ebx,%eax$/;"	l
f0107b1f	obj/kern/kernel.asm	/^f0107b1f:	ef                   	out    %eax,(%dx)$/;"	l
f0107b20	obj/kern/kernel.asm	/^f0107b20:	83 c4 10             	add    $0x10,%esp$/;"	l
f0107b23	obj/kern/kernel.asm	/^f0107b23:	5b                   	pop    %ebx$/;"	l
f0107b24	obj/kern/kernel.asm	/^f0107b24:	5e                   	pop    %esi$/;"	l
f0107b25	obj/kern/kernel.asm	/^f0107b25:	5d                   	pop    %ebp$/;"	l
f0107b26	obj/kern/kernel.asm	/^f0107b26:	c3                   	ret    $/;"	l
f0107b27	obj/kern/kernel.asm	/^f0107b27 <pci_func_enable>:$/;"	l
f0107b27	obj/kern/kernel.asm	/^f0107b27:	55                   	push   %ebp$/;"	l
f0107b28	obj/kern/kernel.asm	/^f0107b28:	89 e5                	mov    %esp,%ebp$/;"	l
f0107b2a	obj/kern/kernel.asm	/^f0107b2a:	57                   	push   %edi$/;"	l
f0107b2b	obj/kern/kernel.asm	/^f0107b2b:	56                   	push   %esi$/;"	l
f0107b2c	obj/kern/kernel.asm	/^f0107b2c:	53                   	push   %ebx$/;"	l
f0107b2d	obj/kern/kernel.asm	/^f0107b2d:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f0107b30	obj/kern/kernel.asm	/^f0107b30:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0107b33	obj/kern/kernel.asm	/^f0107b33:	b9 07 00 00 00       	mov    $0x7,%ecx$/;"	l
f0107b38	obj/kern/kernel.asm	/^f0107b38:	ba 04 00 00 00       	mov    $0x4,%edx$/;"	l
f0107b3d	obj/kern/kernel.asm	/^f0107b3d:	89 f8                	mov    %edi,%eax$/;"	l
f0107b3f	obj/kern/kernel.asm	/^f0107b3f:	e8 b5 ff ff ff       	call   f0107af9 <pci_conf_write>$/;"	l
f0107b44	obj/kern/kernel.asm	/^f0107b44:	be 10 00 00 00       	mov    $0x10,%esi$/;"	l
f0107b49	obj/kern/kernel.asm	/^f0107b49:	89 f2                	mov    %esi,%edx$/;"	l
f0107b4b	obj/kern/kernel.asm	/^f0107b4b:	89 f8                	mov    %edi,%eax$/;"	l
f0107b4d	obj/kern/kernel.asm	/^f0107b4d:	e8 cb fc ff ff       	call   f010781d <pci_conf_read>$/;"	l
f0107b52	obj/kern/kernel.asm	/^f0107b52:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0107b55	obj/kern/kernel.asm	/^f0107b55:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx$/;"	l
f0107b5a	obj/kern/kernel.asm	/^f0107b5a:	89 f2                	mov    %esi,%edx$/;"	l
f0107b5c	obj/kern/kernel.asm	/^f0107b5c:	89 f8                	mov    %edi,%eax$/;"	l
f0107b5e	obj/kern/kernel.asm	/^f0107b5e:	e8 96 ff ff ff       	call   f0107af9 <pci_conf_write>$/;"	l
f0107b63	obj/kern/kernel.asm	/^f0107b63:	89 f2                	mov    %esi,%edx$/;"	l
f0107b65	obj/kern/kernel.asm	/^f0107b65:	89 f8                	mov    %edi,%eax$/;"	l
f0107b67	obj/kern/kernel.asm	/^f0107b67:	e8 b1 fc ff ff       	call   f010781d <pci_conf_read>$/;"	l
f0107b6c	obj/kern/kernel.asm	/^f0107b6c:	bb 04 00 00 00       	mov    $0x4,%ebx$/;"	l
f0107b71	obj/kern/kernel.asm	/^f0107b71:	85 c0                	test   %eax,%eax$/;"	l
f0107b73	obj/kern/kernel.asm	/^f0107b73:	0f 84 c1 00 00 00    	je     f0107c3a <pci_func_enable+0x113>$/;"	l
f0107b79	obj/kern/kernel.asm	/^f0107b79:	8d 56 f0             	lea    -0x10(%esi),%edx$/;"	l
f0107b7c	obj/kern/kernel.asm	/^f0107b7c:	c1 ea 02             	shr    $0x2,%edx$/;"	l
f0107b7f	obj/kern/kernel.asm	/^f0107b7f:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f0107b82	obj/kern/kernel.asm	/^f0107b82:	a8 01                	test   $0x1,%al$/;"	l
f0107b84	obj/kern/kernel.asm	/^f0107b84:	75 2c                	jne    f0107bb2 <pci_func_enable+0x8b>$/;"	l
f0107b86	obj/kern/kernel.asm	/^f0107b86:	89 c2                	mov    %eax,%edx$/;"	l
f0107b88	obj/kern/kernel.asm	/^f0107b88:	83 e2 06             	and    $0x6,%edx$/;"	l
f0107b8b	obj/kern/kernel.asm	/^f0107b8b:	83 fa 04             	cmp    $0x4,%edx$/;"	l
f0107b8e	obj/kern/kernel.asm	/^f0107b8e:	0f 94 c3             	sete   %bl$/;"	l
f0107b91	obj/kern/kernel.asm	/^f0107b91:	0f b6 db             	movzbl %bl,%ebx$/;"	l
f0107b94	obj/kern/kernel.asm	/^f0107b94:	8d 1c 9d 04 00 00 00 	lea    0x4(,%ebx,4),%ebx$/;"	l
f0107b9b	obj/kern/kernel.asm	/^f0107b9b:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
f0107b9e	obj/kern/kernel.asm	/^f0107b9e:	89 c2                	mov    %eax,%edx$/;"	l
f0107ba0	obj/kern/kernel.asm	/^f0107ba0:	f7 da                	neg    %edx$/;"	l
f0107ba2	obj/kern/kernel.asm	/^f0107ba2:	21 d0                	and    %edx,%eax$/;"	l
f0107ba4	obj/kern/kernel.asm	/^f0107ba4:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0107ba7	obj/kern/kernel.asm	/^f0107ba7:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0107baa	obj/kern/kernel.asm	/^f0107baa:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
f0107bad	obj/kern/kernel.asm	/^f0107bad:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0107bb0	obj/kern/kernel.asm	/^f0107bb0:	eb 1a                	jmp    f0107bcc <pci_func_enable+0xa5>$/;"	l
f0107bb2	obj/kern/kernel.asm	/^f0107bb2:	83 e0 fc             	and    $0xfffffffc,%eax$/;"	l
f0107bb5	obj/kern/kernel.asm	/^f0107bb5:	89 c2                	mov    %eax,%edx$/;"	l
f0107bb7	obj/kern/kernel.asm	/^f0107bb7:	f7 da                	neg    %edx$/;"	l
f0107bb9	obj/kern/kernel.asm	/^f0107bb9:	21 d0                	and    %edx,%eax$/;"	l
f0107bbb	obj/kern/kernel.asm	/^f0107bbb:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0107bbe	obj/kern/kernel.asm	/^f0107bbe:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0107bc1	obj/kern/kernel.asm	/^f0107bc1:	83 e0 fc             	and    $0xfffffffc,%eax$/;"	l
f0107bc4	obj/kern/kernel.asm	/^f0107bc4:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0107bc7	obj/kern/kernel.asm	/^f0107bc7:	bb 04 00 00 00       	mov    $0x4,%ebx$/;"	l
f0107bcc	obj/kern/kernel.asm	/^f0107bcc:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f0107bcf	obj/kern/kernel.asm	/^f0107bcf:	89 f2                	mov    %esi,%edx$/;"	l
f0107bd1	obj/kern/kernel.asm	/^f0107bd1:	89 f8                	mov    %edi,%eax$/;"	l
f0107bd3	obj/kern/kernel.asm	/^f0107bd3:	e8 21 ff ff ff       	call   f0107af9 <pci_conf_write>$/;"	l
f0107bd8	obj/kern/kernel.asm	/^f0107bd8:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0107bdb	obj/kern/kernel.asm	/^f0107bdb:	8d 04 87             	lea    (%edi,%eax,4),%eax$/;"	l
f0107bde	obj/kern/kernel.asm	/^f0107bde:	8b 4d d8             	mov    -0x28(%ebp),%ecx$/;"	l
f0107be1	obj/kern/kernel.asm	/^f0107be1:	89 48 14             	mov    %ecx,0x14(%eax)$/;"	l
f0107be4	obj/kern/kernel.asm	/^f0107be4:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0107be7	obj/kern/kernel.asm	/^f0107be7:	89 50 2c             	mov    %edx,0x2c(%eax)$/;"	l
f0107bea	obj/kern/kernel.asm	/^f0107bea:	85 c9                	test   %ecx,%ecx$/;"	l
f0107bec	obj/kern/kernel.asm	/^f0107bec:	75 4c                	jne    f0107c3a <pci_func_enable+0x113>$/;"	l
f0107bee	obj/kern/kernel.asm	/^f0107bee:	85 d2                	test   %edx,%edx$/;"	l
f0107bf0	obj/kern/kernel.asm	/^f0107bf0:	74 48                	je     f0107c3a <pci_func_enable+0x113>$/;"	l
f0107bf2	obj/kern/kernel.asm	/^f0107bf2:	8b 47 0c             	mov    0xc(%edi),%eax$/;"	l
f0107bf5	obj/kern/kernel.asm	/^f0107bf5:	89 54 24 20          	mov    %edx,0x20(%esp)$/;"	l
f0107bf9	obj/kern/kernel.asm	/^f0107bf9:	8b 4d d8             	mov    -0x28(%ebp),%ecx$/;"	l
f0107bfc	obj/kern/kernel.asm	/^f0107bfc:	89 4c 24 1c          	mov    %ecx,0x1c(%esp)$/;"	l
f0107c00	obj/kern/kernel.asm	/^f0107c00:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
f0107c03	obj/kern/kernel.asm	/^f0107c03:	89 4c 24 18          	mov    %ecx,0x18(%esp)$/;"	l
f0107c07	obj/kern/kernel.asm	/^f0107c07:	89 c2                	mov    %eax,%edx$/;"	l
f0107c09	obj/kern/kernel.asm	/^f0107c09:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0107c0c	obj/kern/kernel.asm	/^f0107c0c:	89 54 24 14          	mov    %edx,0x14(%esp)$/;"	l
f0107c10	obj/kern/kernel.asm	/^f0107c10:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0107c13	obj/kern/kernel.asm	/^f0107c13:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f0107c17	obj/kern/kernel.asm	/^f0107c17:	8b 47 08             	mov    0x8(%edi),%eax$/;"	l
f0107c1a	obj/kern/kernel.asm	/^f0107c1a:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0107c1e	obj/kern/kernel.asm	/^f0107c1e:	8b 47 04             	mov    0x4(%edi),%eax$/;"	l
f0107c21	obj/kern/kernel.asm	/^f0107c21:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0107c25	obj/kern/kernel.asm	/^f0107c25:	8b 07                	mov    (%edi),%eax$/;"	l
f0107c27	obj/kern/kernel.asm	/^f0107c27:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0107c2a	obj/kern/kernel.asm	/^f0107c2a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0107c2e	obj/kern/kernel.asm	/^f0107c2e:	c7 04 24 dc a0 10 f0 	movl   $0xf010a0dc,(%esp)$/;"	l
f0107c35	obj/kern/kernel.asm	/^f0107c35:	e8 b2 c3 ff ff       	call   f0103fec <cprintf>$/;"	l
f0107c3a	obj/kern/kernel.asm	/^f0107c3a:	01 de                	add    %ebx,%esi$/;"	l
f0107c3c	obj/kern/kernel.asm	/^f0107c3c:	83 fe 27             	cmp    $0x27,%esi$/;"	l
f0107c3f	obj/kern/kernel.asm	/^f0107c3f:	0f 86 04 ff ff ff    	jbe    f0107b49 <pci_func_enable+0x22>$/;"	l
f0107c45	obj/kern/kernel.asm	/^f0107c45:	8b 47 0c             	mov    0xc(%edi),%eax$/;"	l
f0107c48	obj/kern/kernel.asm	/^f0107c48:	89 c2                	mov    %eax,%edx$/;"	l
f0107c4a	obj/kern/kernel.asm	/^f0107c4a:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0107c4d	obj/kern/kernel.asm	/^f0107c4d:	89 54 24 14          	mov    %edx,0x14(%esp)$/;"	l
f0107c51	obj/kern/kernel.asm	/^f0107c51:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0107c54	obj/kern/kernel.asm	/^f0107c54:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f0107c58	obj/kern/kernel.asm	/^f0107c58:	8b 47 08             	mov    0x8(%edi),%eax$/;"	l
f0107c5b	obj/kern/kernel.asm	/^f0107c5b:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0107c5f	obj/kern/kernel.asm	/^f0107c5f:	8b 47 04             	mov    0x4(%edi),%eax$/;"	l
f0107c62	obj/kern/kernel.asm	/^f0107c62:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0107c66	obj/kern/kernel.asm	/^f0107c66:	8b 07                	mov    (%edi),%eax$/;"	l
f0107c68	obj/kern/kernel.asm	/^f0107c68:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0107c6b	obj/kern/kernel.asm	/^f0107c6b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0107c6f	obj/kern/kernel.asm	/^f0107c6f:	c7 04 24 38 a1 10 f0 	movl   $0xf010a138,(%esp)$/;"	l
f0107c76	obj/kern/kernel.asm	/^f0107c76:	e8 71 c3 ff ff       	call   f0103fec <cprintf>$/;"	l
f0107c7b	obj/kern/kernel.asm	/^f0107c7b:	83 c4 4c             	add    $0x4c,%esp$/;"	l
f0107c7e	obj/kern/kernel.asm	/^f0107c7e:	5b                   	pop    %ebx$/;"	l
f0107c7f	obj/kern/kernel.asm	/^f0107c7f:	5e                   	pop    %esi$/;"	l
f0107c80	obj/kern/kernel.asm	/^f0107c80:	5f                   	pop    %edi$/;"	l
f0107c81	obj/kern/kernel.asm	/^f0107c81:	5d                   	pop    %ebp$/;"	l
f0107c82	obj/kern/kernel.asm	/^f0107c82:	c3                   	ret    $/;"	l
f0107c83	obj/kern/kernel.asm	/^f0107c83 <pci_init>:$/;"	l
f0107c83	obj/kern/kernel.asm	/^f0107c83:	55                   	push   %ebp$/;"	l
f0107c84	obj/kern/kernel.asm	/^f0107c84:	89 e5                	mov    %esp,%ebp$/;"	l
f0107c86	obj/kern/kernel.asm	/^f0107c86:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0107c89	obj/kern/kernel.asm	/^f0107c89:	c7 44 24 08 08 00 00 	movl   $0x8,0x8(%esp)$/;"	l
f0107c90	obj/kern/kernel.asm	/^f0107c90:	00 $/;"	l
f0107c91	obj/kern/kernel.asm	/^f0107c91:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0107c98	obj/kern/kernel.asm	/^f0107c98:	00 $/;"	l
f0107c99	obj/kern/kernel.asm	/^f0107c99:	c7 04 24 80 9e 2b f0 	movl   $0xf02b9e80,(%esp)$/;"	l
f0107ca0	obj/kern/kernel.asm	/^f0107ca0:	e8 62 e8 ff ff       	call   f0106507 <memset>$/;"	l
f0107ca5	obj/kern/kernel.asm	/^f0107ca5:	b8 80 9e 2b f0       	mov    $0xf02b9e80,%eax$/;"	l
f0107caa	obj/kern/kernel.asm	/^f0107caa:	e8 96 fb ff ff       	call   f0107845 <pci_scan_bus>$/;"	l
f0107caf	obj/kern/kernel.asm	/^f0107caf:	c9                   	leave  $/;"	l
f0107cb0	obj/kern/kernel.asm	/^f0107cb0:	c3                   	ret    $/;"	l
f0107cb1	obj/kern/kernel.asm	/^f0107cb1 <time_init>:$/;"	l
f0107cb1	obj/kern/kernel.asm	/^f0107cb1:	55                   	push   %ebp$/;"	l
f0107cb2	obj/kern/kernel.asm	/^f0107cb2:	89 e5                	mov    %esp,%ebp$/;"	l
f0107cb4	obj/kern/kernel.asm	/^f0107cb4:	c7 05 88 9e 2b f0 00 	movl   $0x0,0xf02b9e88$/;"	l
f0107cbb	obj/kern/kernel.asm	/^f0107cbb:	00 00 00 $/;"	l
f0107cbe	obj/kern/kernel.asm	/^f0107cbe:	5d                   	pop    %ebp$/;"	l
f0107cbf	obj/kern/kernel.asm	/^f0107cbf:	c3                   	ret    $/;"	l
f0107cc0	obj/kern/kernel.asm	/^f0107cc0 <time_tick>:$/;"	l
f0107cc0	obj/kern/kernel.asm	/^f0107cc0:	a1 88 9e 2b f0       	mov    0xf02b9e88,%eax$/;"	l
f0107cc5	obj/kern/kernel.asm	/^f0107cc5:	83 c0 01             	add    $0x1,%eax$/;"	l
f0107cc8	obj/kern/kernel.asm	/^f0107cc8:	a3 88 9e 2b f0       	mov    %eax,0xf02b9e88$/;"	l
f0107ccd	obj/kern/kernel.asm	/^f0107ccd:	8d 14 80             	lea    (%eax,%eax,4),%edx$/;"	l
f0107cd0	obj/kern/kernel.asm	/^f0107cd0:	01 d2                	add    %edx,%edx$/;"	l
f0107cd2	obj/kern/kernel.asm	/^f0107cd2:	39 d0                	cmp    %edx,%eax$/;"	l
f0107cd4	obj/kern/kernel.asm	/^f0107cd4:	76 22                	jbe    f0107cf8 <time_tick+0x38>$/;"	l
f0107cd6	obj/kern/kernel.asm	/^f0107cd6:	55                   	push   %ebp$/;"	l
f0107cd7	obj/kern/kernel.asm	/^f0107cd7:	89 e5                	mov    %esp,%ebp$/;"	l
f0107cd9	obj/kern/kernel.asm	/^f0107cd9:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0107cdc	obj/kern/kernel.asm	/^f0107cdc:	c7 44 24 08 40 a2 10 	movl   $0xf010a240,0x8(%esp)$/;"	l
f0107ce3	obj/kern/kernel.asm	/^f0107ce3:	f0 $/;"	l
f0107ce4	obj/kern/kernel.asm	/^f0107ce4:	c7 44 24 04 13 00 00 	movl   $0x13,0x4(%esp)$/;"	l
f0107ceb	obj/kern/kernel.asm	/^f0107ceb:	00 $/;"	l
f0107cec	obj/kern/kernel.asm	/^f0107cec:	c7 04 24 5b a2 10 f0 	movl   $0xf010a25b,(%esp)$/;"	l
f0107cf3	obj/kern/kernel.asm	/^f0107cf3:	e8 48 83 ff ff       	call   f0100040 <_panic>$/;"	l
f0107cf8	obj/kern/kernel.asm	/^f0107cf8:	f3 c3                	repz ret $/;"	l
f0107cfa	obj/kern/kernel.asm	/^f0107cfa <time_msec>:$/;"	l
f0107cfa	obj/kern/kernel.asm	/^f0107cfa:	55                   	push   %ebp$/;"	l
f0107cfb	obj/kern/kernel.asm	/^f0107cfb:	89 e5                	mov    %esp,%ebp$/;"	l
f0107cfd	obj/kern/kernel.asm	/^f0107cfd:	a1 88 9e 2b f0       	mov    0xf02b9e88,%eax$/;"	l
f0107d02	obj/kern/kernel.asm	/^f0107d02:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f0107d05	obj/kern/kernel.asm	/^f0107d05:	01 c0                	add    %eax,%eax$/;"	l
f0107d07	obj/kern/kernel.asm	/^f0107d07:	5d                   	pop    %ebp$/;"	l
f0107d08	obj/kern/kernel.asm	/^f0107d08:	c3                   	ret    $/;"	l
f0107d09	obj/kern/kernel.asm	/^f0107d09:	66 90                	xchg   %ax,%ax$/;"	l
f0107d0b	obj/kern/kernel.asm	/^f0107d0b:	66 90                	xchg   %ax,%ax$/;"	l
f0107d0d	obj/kern/kernel.asm	/^f0107d0d:	66 90                	xchg   %ax,%ax$/;"	l
f0107d0f	obj/kern/kernel.asm	/^f0107d0f:	90                   	nop$/;"	l
f0107d10	obj/kern/kernel.asm	/^f0107d10 <__udivdi3>:$/;"	l
f0107d10	obj/kern/kernel.asm	/^f0107d10:	55                   	push   %ebp$/;"	l
f0107d11	obj/kern/kernel.asm	/^f0107d11:	57                   	push   %edi$/;"	l
f0107d12	obj/kern/kernel.asm	/^f0107d12:	56                   	push   %esi$/;"	l
f0107d13	obj/kern/kernel.asm	/^f0107d13:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0107d16	obj/kern/kernel.asm	/^f0107d16:	8b 44 24 28          	mov    0x28(%esp),%eax$/;"	l
f0107d1a	obj/kern/kernel.asm	/^f0107d1a:	8b 7c 24 1c          	mov    0x1c(%esp),%edi$/;"	l
f0107d1e	obj/kern/kernel.asm	/^f0107d1e:	8b 6c 24 20          	mov    0x20(%esp),%ebp$/;"	l
f0107d22	obj/kern/kernel.asm	/^f0107d22:	8b 4c 24 24          	mov    0x24(%esp),%ecx$/;"	l
f0107d26	obj/kern/kernel.asm	/^f0107d26:	85 c0                	test   %eax,%eax$/;"	l
f0107d28	obj/kern/kernel.asm	/^f0107d28:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0107d2c	obj/kern/kernel.asm	/^f0107d2c:	89 ea                	mov    %ebp,%edx$/;"	l
f0107d2e	obj/kern/kernel.asm	/^f0107d2e:	89 0c 24             	mov    %ecx,(%esp)$/;"	l
f0107d31	obj/kern/kernel.asm	/^f0107d31:	75 2d                	jne    f0107d60 <__udivdi3+0x50>$/;"	l
f0107d33	obj/kern/kernel.asm	/^f0107d33:	39 e9                	cmp    %ebp,%ecx$/;"	l
f0107d35	obj/kern/kernel.asm	/^f0107d35:	77 61                	ja     f0107d98 <__udivdi3+0x88>$/;"	l
f0107d37	obj/kern/kernel.asm	/^f0107d37:	85 c9                	test   %ecx,%ecx$/;"	l
f0107d39	obj/kern/kernel.asm	/^f0107d39:	89 ce                	mov    %ecx,%esi$/;"	l
f0107d3b	obj/kern/kernel.asm	/^f0107d3b:	75 0b                	jne    f0107d48 <__udivdi3+0x38>$/;"	l
f0107d3d	obj/kern/kernel.asm	/^f0107d3d:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0107d42	obj/kern/kernel.asm	/^f0107d42:	31 d2                	xor    %edx,%edx$/;"	l
f0107d44	obj/kern/kernel.asm	/^f0107d44:	f7 f1                	div    %ecx$/;"	l
f0107d46	obj/kern/kernel.asm	/^f0107d46:	89 c6                	mov    %eax,%esi$/;"	l
f0107d48	obj/kern/kernel.asm	/^f0107d48:	31 d2                	xor    %edx,%edx$/;"	l
f0107d4a	obj/kern/kernel.asm	/^f0107d4a:	89 e8                	mov    %ebp,%eax$/;"	l
f0107d4c	obj/kern/kernel.asm	/^f0107d4c:	f7 f6                	div    %esi$/;"	l
f0107d4e	obj/kern/kernel.asm	/^f0107d4e:	89 c5                	mov    %eax,%ebp$/;"	l
f0107d50	obj/kern/kernel.asm	/^f0107d50:	89 f8                	mov    %edi,%eax$/;"	l
f0107d52	obj/kern/kernel.asm	/^f0107d52:	f7 f6                	div    %esi$/;"	l
f0107d54	obj/kern/kernel.asm	/^f0107d54:	89 ea                	mov    %ebp,%edx$/;"	l
f0107d56	obj/kern/kernel.asm	/^f0107d56:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0107d59	obj/kern/kernel.asm	/^f0107d59:	5e                   	pop    %esi$/;"	l
f0107d5a	obj/kern/kernel.asm	/^f0107d5a:	5f                   	pop    %edi$/;"	l
f0107d5b	obj/kern/kernel.asm	/^f0107d5b:	5d                   	pop    %ebp$/;"	l
f0107d5c	obj/kern/kernel.asm	/^f0107d5c:	c3                   	ret    $/;"	l
f0107d5d	obj/kern/kernel.asm	/^f0107d5d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0107d60	obj/kern/kernel.asm	/^f0107d60:	39 e8                	cmp    %ebp,%eax$/;"	l
f0107d62	obj/kern/kernel.asm	/^f0107d62:	77 24                	ja     f0107d88 <__udivdi3+0x78>$/;"	l
f0107d64	obj/kern/kernel.asm	/^f0107d64:	0f bd e8             	bsr    %eax,%ebp$/;"	l
f0107d67	obj/kern/kernel.asm	/^f0107d67:	83 f5 1f             	xor    $0x1f,%ebp$/;"	l
f0107d6a	obj/kern/kernel.asm	/^f0107d6a:	75 3c                	jne    f0107da8 <__udivdi3+0x98>$/;"	l
f0107d6c	obj/kern/kernel.asm	/^f0107d6c:	8b 74 24 04          	mov    0x4(%esp),%esi$/;"	l
f0107d70	obj/kern/kernel.asm	/^f0107d70:	39 34 24             	cmp    %esi,(%esp)$/;"	l
f0107d73	obj/kern/kernel.asm	/^f0107d73:	0f 86 9f 00 00 00    	jbe    f0107e18 <__udivdi3+0x108>$/;"	l
f0107d79	obj/kern/kernel.asm	/^f0107d79:	39 d0                	cmp    %edx,%eax$/;"	l
f0107d7b	obj/kern/kernel.asm	/^f0107d7b:	0f 82 97 00 00 00    	jb     f0107e18 <__udivdi3+0x108>$/;"	l
f0107d81	obj/kern/kernel.asm	/^f0107d81:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0107d88	obj/kern/kernel.asm	/^f0107d88:	31 d2                	xor    %edx,%edx$/;"	l
f0107d8a	obj/kern/kernel.asm	/^f0107d8a:	31 c0                	xor    %eax,%eax$/;"	l
f0107d8c	obj/kern/kernel.asm	/^f0107d8c:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0107d8f	obj/kern/kernel.asm	/^f0107d8f:	5e                   	pop    %esi$/;"	l
f0107d90	obj/kern/kernel.asm	/^f0107d90:	5f                   	pop    %edi$/;"	l
f0107d91	obj/kern/kernel.asm	/^f0107d91:	5d                   	pop    %ebp$/;"	l
f0107d92	obj/kern/kernel.asm	/^f0107d92:	c3                   	ret    $/;"	l
f0107d93	obj/kern/kernel.asm	/^f0107d93:	90                   	nop$/;"	l
f0107d94	obj/kern/kernel.asm	/^f0107d94:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0107d98	obj/kern/kernel.asm	/^f0107d98:	89 f8                	mov    %edi,%eax$/;"	l
f0107d9a	obj/kern/kernel.asm	/^f0107d9a:	f7 f1                	div    %ecx$/;"	l
f0107d9c	obj/kern/kernel.asm	/^f0107d9c:	31 d2                	xor    %edx,%edx$/;"	l
f0107d9e	obj/kern/kernel.asm	/^f0107d9e:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0107da1	obj/kern/kernel.asm	/^f0107da1:	5e                   	pop    %esi$/;"	l
f0107da2	obj/kern/kernel.asm	/^f0107da2:	5f                   	pop    %edi$/;"	l
f0107da3	obj/kern/kernel.asm	/^f0107da3:	5d                   	pop    %ebp$/;"	l
f0107da4	obj/kern/kernel.asm	/^f0107da4:	c3                   	ret    $/;"	l
f0107da5	obj/kern/kernel.asm	/^f0107da5:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0107da8	obj/kern/kernel.asm	/^f0107da8:	89 e9                	mov    %ebp,%ecx$/;"	l
f0107daa	obj/kern/kernel.asm	/^f0107daa:	8b 3c 24             	mov    (%esp),%edi$/;"	l
f0107dad	obj/kern/kernel.asm	/^f0107dad:	d3 e0                	shl    %cl,%eax$/;"	d
f0107daf	obj/kern/kernel.asm	/^f0107daf:	89 c6                	mov    %eax,%esi$/;"	l
f0107db1	obj/kern/kernel.asm	/^f0107db1:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0107db6	obj/kern/kernel.asm	/^f0107db6:	29 e8                	sub    %ebp,%eax$/;"	l
f0107db8	obj/kern/kernel.asm	/^f0107db8:	89 c1                	mov    %eax,%ecx$/;"	l
f0107dba	obj/kern/kernel.asm	/^f0107dba:	d3 ef                	shr    %cl,%edi$/;"	d
f0107dbc	obj/kern/kernel.asm	/^f0107dbc:	89 e9                	mov    %ebp,%ecx$/;"	l
f0107dbe	obj/kern/kernel.asm	/^f0107dbe:	89 7c 24 08          	mov    %edi,0x8(%esp)$/;"	l
f0107dc2	obj/kern/kernel.asm	/^f0107dc2:	8b 3c 24             	mov    (%esp),%edi$/;"	l
f0107dc5	obj/kern/kernel.asm	/^f0107dc5:	09 74 24 08          	or     %esi,0x8(%esp)$/;"	l
f0107dc9	obj/kern/kernel.asm	/^f0107dc9:	89 d6                	mov    %edx,%esi$/;"	l
f0107dcb	obj/kern/kernel.asm	/^f0107dcb:	d3 e7                	shl    %cl,%edi$/;"	d
f0107dcd	obj/kern/kernel.asm	/^f0107dcd:	89 c1                	mov    %eax,%ecx$/;"	l
f0107dcf	obj/kern/kernel.asm	/^f0107dcf:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0107dd2	obj/kern/kernel.asm	/^f0107dd2:	8b 7c 24 04          	mov    0x4(%esp),%edi$/;"	l
f0107dd6	obj/kern/kernel.asm	/^f0107dd6:	d3 ee                	shr    %cl,%esi$/;"	d
f0107dd8	obj/kern/kernel.asm	/^f0107dd8:	89 e9                	mov    %ebp,%ecx$/;"	l
f0107dda	obj/kern/kernel.asm	/^f0107dda:	d3 e2                	shl    %cl,%edx$/;"	d
f0107ddc	obj/kern/kernel.asm	/^f0107ddc:	89 c1                	mov    %eax,%ecx$/;"	l
f0107dde	obj/kern/kernel.asm	/^f0107dde:	d3 ef                	shr    %cl,%edi$/;"	d
f0107de0	obj/kern/kernel.asm	/^f0107de0:	09 d7                	or     %edx,%edi$/;"	l
f0107de2	obj/kern/kernel.asm	/^f0107de2:	89 f2                	mov    %esi,%edx$/;"	l
f0107de4	obj/kern/kernel.asm	/^f0107de4:	89 f8                	mov    %edi,%eax$/;"	l
f0107de6	obj/kern/kernel.asm	/^f0107de6:	f7 74 24 08          	divl   0x8(%esp)$/;"	l
f0107dea	obj/kern/kernel.asm	/^f0107dea:	89 d6                	mov    %edx,%esi$/;"	l
f0107dec	obj/kern/kernel.asm	/^f0107dec:	89 c7                	mov    %eax,%edi$/;"	l
f0107dee	obj/kern/kernel.asm	/^f0107dee:	f7 24 24             	mull   (%esp)$/;"	l
f0107df1	obj/kern/kernel.asm	/^f0107df1:	39 d6                	cmp    %edx,%esi$/;"	l
f0107df3	obj/kern/kernel.asm	/^f0107df3:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0107df6	obj/kern/kernel.asm	/^f0107df6:	72 30                	jb     f0107e28 <__udivdi3+0x118>$/;"	l
f0107df8	obj/kern/kernel.asm	/^f0107df8:	8b 54 24 04          	mov    0x4(%esp),%edx$/;"	l
f0107dfc	obj/kern/kernel.asm	/^f0107dfc:	89 e9                	mov    %ebp,%ecx$/;"	l
f0107dfe	obj/kern/kernel.asm	/^f0107dfe:	d3 e2                	shl    %cl,%edx$/;"	d
f0107e00	obj/kern/kernel.asm	/^f0107e00:	39 c2                	cmp    %eax,%edx$/;"	l
f0107e02	obj/kern/kernel.asm	/^f0107e02:	73 05                	jae    f0107e09 <__udivdi3+0xf9>$/;"	l
f0107e04	obj/kern/kernel.asm	/^f0107e04:	3b 34 24             	cmp    (%esp),%esi$/;"	l
f0107e07	obj/kern/kernel.asm	/^f0107e07:	74 1f                	je     f0107e28 <__udivdi3+0x118>$/;"	l
f0107e09	obj/kern/kernel.asm	/^f0107e09:	89 f8                	mov    %edi,%eax$/;"	l
f0107e0b	obj/kern/kernel.asm	/^f0107e0b:	31 d2                	xor    %edx,%edx$/;"	l
f0107e0d	obj/kern/kernel.asm	/^f0107e0d:	e9 7a ff ff ff       	jmp    f0107d8c <__udivdi3+0x7c>$/;"	l
f0107e12	obj/kern/kernel.asm	/^f0107e12:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
f0107e18	obj/kern/kernel.asm	/^f0107e18:	31 d2                	xor    %edx,%edx$/;"	l
f0107e1a	obj/kern/kernel.asm	/^f0107e1a:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0107e1f	obj/kern/kernel.asm	/^f0107e1f:	e9 68 ff ff ff       	jmp    f0107d8c <__udivdi3+0x7c>$/;"	l
f0107e24	obj/kern/kernel.asm	/^f0107e24:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0107e28	obj/kern/kernel.asm	/^f0107e28:	8d 47 ff             	lea    -0x1(%edi),%eax$/;"	l
f0107e2b	obj/kern/kernel.asm	/^f0107e2b:	31 d2                	xor    %edx,%edx$/;"	l
f0107e2d	obj/kern/kernel.asm	/^f0107e2d:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0107e30	obj/kern/kernel.asm	/^f0107e30:	5e                   	pop    %esi$/;"	l
f0107e31	obj/kern/kernel.asm	/^f0107e31:	5f                   	pop    %edi$/;"	l
f0107e32	obj/kern/kernel.asm	/^f0107e32:	5d                   	pop    %ebp$/;"	l
f0107e33	obj/kern/kernel.asm	/^f0107e33:	c3                   	ret    $/;"	l
f0107e34	obj/kern/kernel.asm	/^f0107e34:	66 90                	xchg   %ax,%ax$/;"	l
f0107e36	obj/kern/kernel.asm	/^f0107e36:	66 90                	xchg   %ax,%ax$/;"	l
f0107e38	obj/kern/kernel.asm	/^f0107e38:	66 90                	xchg   %ax,%ax$/;"	l
f0107e3a	obj/kern/kernel.asm	/^f0107e3a:	66 90                	xchg   %ax,%ax$/;"	l
f0107e3c	obj/kern/kernel.asm	/^f0107e3c:	66 90                	xchg   %ax,%ax$/;"	l
f0107e3e	obj/kern/kernel.asm	/^f0107e3e:	66 90                	xchg   %ax,%ax$/;"	l
f0107e40	obj/kern/kernel.asm	/^f0107e40 <__umoddi3>:$/;"	l
f0107e40	obj/kern/kernel.asm	/^f0107e40:	55                   	push   %ebp$/;"	l
f0107e41	obj/kern/kernel.asm	/^f0107e41:	57                   	push   %edi$/;"	l
f0107e42	obj/kern/kernel.asm	/^f0107e42:	56                   	push   %esi$/;"	l
f0107e43	obj/kern/kernel.asm	/^f0107e43:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0107e46	obj/kern/kernel.asm	/^f0107e46:	8b 44 24 28          	mov    0x28(%esp),%eax$/;"	l
f0107e4a	obj/kern/kernel.asm	/^f0107e4a:	8b 4c 24 24          	mov    0x24(%esp),%ecx$/;"	l
f0107e4e	obj/kern/kernel.asm	/^f0107e4e:	8b 74 24 2c          	mov    0x2c(%esp),%esi$/;"	l
f0107e52	obj/kern/kernel.asm	/^f0107e52:	89 c7                	mov    %eax,%edi$/;"	l
f0107e54	obj/kern/kernel.asm	/^f0107e54:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0107e58	obj/kern/kernel.asm	/^f0107e58:	8b 44 24 30          	mov    0x30(%esp),%eax$/;"	l
f0107e5c	obj/kern/kernel.asm	/^f0107e5c:	89 4c 24 10          	mov    %ecx,0x10(%esp)$/;"	l
f0107e60	obj/kern/kernel.asm	/^f0107e60:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0107e63	obj/kern/kernel.asm	/^f0107e63:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0107e67	obj/kern/kernel.asm	/^f0107e67:	85 c0                	test   %eax,%eax$/;"	l
f0107e69	obj/kern/kernel.asm	/^f0107e69:	89 c2                	mov    %eax,%edx$/;"	l
f0107e6b	obj/kern/kernel.asm	/^f0107e6b:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f0107e6f	obj/kern/kernel.asm	/^f0107e6f:	75 17                	jne    f0107e88 <__umoddi3+0x48>$/;"	l
f0107e71	obj/kern/kernel.asm	/^f0107e71:	39 fe                	cmp    %edi,%esi$/;"	l
f0107e73	obj/kern/kernel.asm	/^f0107e73:	76 4b                	jbe    f0107ec0 <__umoddi3+0x80>$/;"	l
f0107e75	obj/kern/kernel.asm	/^f0107e75:	89 c8                	mov    %ecx,%eax$/;"	l
f0107e77	obj/kern/kernel.asm	/^f0107e77:	89 fa                	mov    %edi,%edx$/;"	l
f0107e79	obj/kern/kernel.asm	/^f0107e79:	f7 f6                	div    %esi$/;"	l
f0107e7b	obj/kern/kernel.asm	/^f0107e7b:	89 d0                	mov    %edx,%eax$/;"	l
f0107e7d	obj/kern/kernel.asm	/^f0107e7d:	31 d2                	xor    %edx,%edx$/;"	l
f0107e7f	obj/kern/kernel.asm	/^f0107e7f:	83 c4 14             	add    $0x14,%esp$/;"	l
f0107e82	obj/kern/kernel.asm	/^f0107e82:	5e                   	pop    %esi$/;"	l
f0107e83	obj/kern/kernel.asm	/^f0107e83:	5f                   	pop    %edi$/;"	l
f0107e84	obj/kern/kernel.asm	/^f0107e84:	5d                   	pop    %ebp$/;"	l
f0107e85	obj/kern/kernel.asm	/^f0107e85:	c3                   	ret    $/;"	l
f0107e86	obj/kern/kernel.asm	/^f0107e86:	66 90                	xchg   %ax,%ax$/;"	l
f0107e88	obj/kern/kernel.asm	/^f0107e88:	39 f8                	cmp    %edi,%eax$/;"	l
f0107e8a	obj/kern/kernel.asm	/^f0107e8a:	77 54                	ja     f0107ee0 <__umoddi3+0xa0>$/;"	l
f0107e8c	obj/kern/kernel.asm	/^f0107e8c:	0f bd e8             	bsr    %eax,%ebp$/;"	l
f0107e8f	obj/kern/kernel.asm	/^f0107e8f:	83 f5 1f             	xor    $0x1f,%ebp$/;"	l
f0107e92	obj/kern/kernel.asm	/^f0107e92:	75 5c                	jne    f0107ef0 <__umoddi3+0xb0>$/;"	l
f0107e94	obj/kern/kernel.asm	/^f0107e94:	8b 7c 24 08          	mov    0x8(%esp),%edi$/;"	l
f0107e98	obj/kern/kernel.asm	/^f0107e98:	39 3c 24             	cmp    %edi,(%esp)$/;"	l
f0107e9b	obj/kern/kernel.asm	/^f0107e9b:	0f 87 e7 00 00 00    	ja     f0107f88 <__umoddi3+0x148>$/;"	l
f0107ea1	obj/kern/kernel.asm	/^f0107ea1:	8b 7c 24 04          	mov    0x4(%esp),%edi$/;"	l
f0107ea5	obj/kern/kernel.asm	/^f0107ea5:	29 f1                	sub    %esi,%ecx$/;"	l
f0107ea7	obj/kern/kernel.asm	/^f0107ea7:	19 c7                	sbb    %eax,%edi$/;"	l
f0107ea9	obj/kern/kernel.asm	/^f0107ea9:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0107ead	obj/kern/kernel.asm	/^f0107ead:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f0107eb1	obj/kern/kernel.asm	/^f0107eb1:	8b 44 24 08          	mov    0x8(%esp),%eax$/;"	l
f0107eb5	obj/kern/kernel.asm	/^f0107eb5:	8b 54 24 0c          	mov    0xc(%esp),%edx$/;"	l
f0107eb9	obj/kern/kernel.asm	/^f0107eb9:	83 c4 14             	add    $0x14,%esp$/;"	l
f0107ebc	obj/kern/kernel.asm	/^f0107ebc:	5e                   	pop    %esi$/;"	l
f0107ebd	obj/kern/kernel.asm	/^f0107ebd:	5f                   	pop    %edi$/;"	l
f0107ebe	obj/kern/kernel.asm	/^f0107ebe:	5d                   	pop    %ebp$/;"	l
f0107ebf	obj/kern/kernel.asm	/^f0107ebf:	c3                   	ret    $/;"	l
f0107ec0	obj/kern/kernel.asm	/^f0107ec0:	85 f6                	test   %esi,%esi$/;"	l
f0107ec2	obj/kern/kernel.asm	/^f0107ec2:	89 f5                	mov    %esi,%ebp$/;"	l
f0107ec4	obj/kern/kernel.asm	/^f0107ec4:	75 0b                	jne    f0107ed1 <__umoddi3+0x91>$/;"	l
f0107ec6	obj/kern/kernel.asm	/^f0107ec6:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0107ecb	obj/kern/kernel.asm	/^f0107ecb:	31 d2                	xor    %edx,%edx$/;"	l
f0107ecd	obj/kern/kernel.asm	/^f0107ecd:	f7 f6                	div    %esi$/;"	l
f0107ecf	obj/kern/kernel.asm	/^f0107ecf:	89 c5                	mov    %eax,%ebp$/;"	l
f0107ed1	obj/kern/kernel.asm	/^f0107ed1:	8b 44 24 04          	mov    0x4(%esp),%eax$/;"	l
f0107ed5	obj/kern/kernel.asm	/^f0107ed5:	31 d2                	xor    %edx,%edx$/;"	l
f0107ed7	obj/kern/kernel.asm	/^f0107ed7:	f7 f5                	div    %ebp$/;"	l
f0107ed9	obj/kern/kernel.asm	/^f0107ed9:	89 c8                	mov    %ecx,%eax$/;"	l
f0107edb	obj/kern/kernel.asm	/^f0107edb:	f7 f5                	div    %ebp$/;"	l
f0107edd	obj/kern/kernel.asm	/^f0107edd:	eb 9c                	jmp    f0107e7b <__umoddi3+0x3b>$/;"	l
f0107edf	obj/kern/kernel.asm	/^f0107edf:	90                   	nop$/;"	l
f0107ee0	obj/kern/kernel.asm	/^f0107ee0:	89 c8                	mov    %ecx,%eax$/;"	l
f0107ee2	obj/kern/kernel.asm	/^f0107ee2:	89 fa                	mov    %edi,%edx$/;"	l
f0107ee4	obj/kern/kernel.asm	/^f0107ee4:	83 c4 14             	add    $0x14,%esp$/;"	l
f0107ee7	obj/kern/kernel.asm	/^f0107ee7:	5e                   	pop    %esi$/;"	l
f0107ee8	obj/kern/kernel.asm	/^f0107ee8:	5f                   	pop    %edi$/;"	l
f0107ee9	obj/kern/kernel.asm	/^f0107ee9:	5d                   	pop    %ebp$/;"	l
f0107eea	obj/kern/kernel.asm	/^f0107eea:	c3                   	ret    $/;"	l
f0107eeb	obj/kern/kernel.asm	/^f0107eeb:	90                   	nop$/;"	l
f0107eec	obj/kern/kernel.asm	/^f0107eec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0107ef0	obj/kern/kernel.asm	/^f0107ef0:	8b 04 24             	mov    (%esp),%eax$/;"	l
f0107ef3	obj/kern/kernel.asm	/^f0107ef3:	be 20 00 00 00       	mov    $0x20,%esi$/;"	l
f0107ef8	obj/kern/kernel.asm	/^f0107ef8:	89 e9                	mov    %ebp,%ecx$/;"	l
f0107efa	obj/kern/kernel.asm	/^f0107efa:	29 ee                	sub    %ebp,%esi$/;"	l
f0107efc	obj/kern/kernel.asm	/^f0107efc:	d3 e2                	shl    %cl,%edx$/;"	d
f0107efe	obj/kern/kernel.asm	/^f0107efe:	89 f1                	mov    %esi,%ecx$/;"	l
f0107f00	obj/kern/kernel.asm	/^f0107f00:	d3 e8                	shr    %cl,%eax$/;"	d
f0107f02	obj/kern/kernel.asm	/^f0107f02:	89 e9                	mov    %ebp,%ecx$/;"	l
f0107f04	obj/kern/kernel.asm	/^f0107f04:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0107f08	obj/kern/kernel.asm	/^f0107f08:	8b 04 24             	mov    (%esp),%eax$/;"	l
f0107f0b	obj/kern/kernel.asm	/^f0107f0b:	09 54 24 04          	or     %edx,0x4(%esp)$/;"	l
f0107f0f	obj/kern/kernel.asm	/^f0107f0f:	89 fa                	mov    %edi,%edx$/;"	l
f0107f11	obj/kern/kernel.asm	/^f0107f11:	d3 e0                	shl    %cl,%eax$/;"	d
f0107f13	obj/kern/kernel.asm	/^f0107f13:	89 f1                	mov    %esi,%ecx$/;"	l
f0107f15	obj/kern/kernel.asm	/^f0107f15:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0107f19	obj/kern/kernel.asm	/^f0107f19:	8b 44 24 10          	mov    0x10(%esp),%eax$/;"	l
f0107f1d	obj/kern/kernel.asm	/^f0107f1d:	d3 ea                	shr    %cl,%edx$/;"	d
f0107f1f	obj/kern/kernel.asm	/^f0107f1f:	89 e9                	mov    %ebp,%ecx$/;"	l
f0107f21	obj/kern/kernel.asm	/^f0107f21:	d3 e7                	shl    %cl,%edi$/;"	d
f0107f23	obj/kern/kernel.asm	/^f0107f23:	89 f1                	mov    %esi,%ecx$/;"	l
f0107f25	obj/kern/kernel.asm	/^f0107f25:	d3 e8                	shr    %cl,%eax$/;"	d
f0107f27	obj/kern/kernel.asm	/^f0107f27:	89 e9                	mov    %ebp,%ecx$/;"	l
f0107f29	obj/kern/kernel.asm	/^f0107f29:	09 f8                	or     %edi,%eax$/;"	l
f0107f2b	obj/kern/kernel.asm	/^f0107f2b:	8b 7c 24 10          	mov    0x10(%esp),%edi$/;"	l
f0107f2f	obj/kern/kernel.asm	/^f0107f2f:	f7 74 24 04          	divl   0x4(%esp)$/;"	l
f0107f33	obj/kern/kernel.asm	/^f0107f33:	d3 e7                	shl    %cl,%edi$/;"	d
f0107f35	obj/kern/kernel.asm	/^f0107f35:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f0107f39	obj/kern/kernel.asm	/^f0107f39:	89 d7                	mov    %edx,%edi$/;"	l
f0107f3b	obj/kern/kernel.asm	/^f0107f3b:	f7 64 24 08          	mull   0x8(%esp)$/;"	l
f0107f3f	obj/kern/kernel.asm	/^f0107f3f:	39 d7                	cmp    %edx,%edi$/;"	l
f0107f41	obj/kern/kernel.asm	/^f0107f41:	89 c1                	mov    %eax,%ecx$/;"	l
f0107f43	obj/kern/kernel.asm	/^f0107f43:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0107f46	obj/kern/kernel.asm	/^f0107f46:	72 2c                	jb     f0107f74 <__umoddi3+0x134>$/;"	l
f0107f48	obj/kern/kernel.asm	/^f0107f48:	39 44 24 0c          	cmp    %eax,0xc(%esp)$/;"	l
f0107f4c	obj/kern/kernel.asm	/^f0107f4c:	72 22                	jb     f0107f70 <__umoddi3+0x130>$/;"	l
f0107f4e	obj/kern/kernel.asm	/^f0107f4e:	8b 44 24 0c          	mov    0xc(%esp),%eax$/;"	l
f0107f52	obj/kern/kernel.asm	/^f0107f52:	29 c8                	sub    %ecx,%eax$/;"	l
f0107f54	obj/kern/kernel.asm	/^f0107f54:	19 d7                	sbb    %edx,%edi$/;"	l
f0107f56	obj/kern/kernel.asm	/^f0107f56:	89 e9                	mov    %ebp,%ecx$/;"	l
f0107f58	obj/kern/kernel.asm	/^f0107f58:	89 fa                	mov    %edi,%edx$/;"	l
f0107f5a	obj/kern/kernel.asm	/^f0107f5a:	d3 e8                	shr    %cl,%eax$/;"	d
f0107f5c	obj/kern/kernel.asm	/^f0107f5c:	89 f1                	mov    %esi,%ecx$/;"	l
f0107f5e	obj/kern/kernel.asm	/^f0107f5e:	d3 e2                	shl    %cl,%edx$/;"	d
f0107f60	obj/kern/kernel.asm	/^f0107f60:	89 e9                	mov    %ebp,%ecx$/;"	l
f0107f62	obj/kern/kernel.asm	/^f0107f62:	d3 ef                	shr    %cl,%edi$/;"	d
f0107f64	obj/kern/kernel.asm	/^f0107f64:	09 d0                	or     %edx,%eax$/;"	l
f0107f66	obj/kern/kernel.asm	/^f0107f66:	89 fa                	mov    %edi,%edx$/;"	l
f0107f68	obj/kern/kernel.asm	/^f0107f68:	83 c4 14             	add    $0x14,%esp$/;"	l
f0107f6b	obj/kern/kernel.asm	/^f0107f6b:	5e                   	pop    %esi$/;"	l
f0107f6c	obj/kern/kernel.asm	/^f0107f6c:	5f                   	pop    %edi$/;"	l
f0107f6d	obj/kern/kernel.asm	/^f0107f6d:	5d                   	pop    %ebp$/;"	l
f0107f6e	obj/kern/kernel.asm	/^f0107f6e:	c3                   	ret    $/;"	l
f0107f6f	obj/kern/kernel.asm	/^f0107f6f:	90                   	nop$/;"	l
f0107f70	obj/kern/kernel.asm	/^f0107f70:	39 d7                	cmp    %edx,%edi$/;"	l
f0107f72	obj/kern/kernel.asm	/^f0107f72:	75 da                	jne    f0107f4e <__umoddi3+0x10e>$/;"	l
f0107f74	obj/kern/kernel.asm	/^f0107f74:	8b 14 24             	mov    (%esp),%edx$/;"	l
f0107f77	obj/kern/kernel.asm	/^f0107f77:	89 c1                	mov    %eax,%ecx$/;"	l
f0107f79	obj/kern/kernel.asm	/^f0107f79:	2b 4c 24 08          	sub    0x8(%esp),%ecx$/;"	l
f0107f7d	obj/kern/kernel.asm	/^f0107f7d:	1b 54 24 04          	sbb    0x4(%esp),%edx$/;"	l
f0107f81	obj/kern/kernel.asm	/^f0107f81:	eb cb                	jmp    f0107f4e <__umoddi3+0x10e>$/;"	l
f0107f83	obj/kern/kernel.asm	/^f0107f83:	90                   	nop$/;"	l
f0107f84	obj/kern/kernel.asm	/^f0107f84:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0107f88	obj/kern/kernel.asm	/^f0107f88:	3b 44 24 0c          	cmp    0xc(%esp),%eax$/;"	l
f0107f8c	obj/kern/kernel.asm	/^f0107f8c:	0f 82 0f ff ff ff    	jb     f0107ea1 <__umoddi3+0x61>$/;"	l
f0107f92	obj/kern/kernel.asm	/^f0107f92:	e9 1a ff ff ff       	jmp    f0107eb1 <__umoddi3+0x71>$/;"	l
fault_va	obj/kern/kernel.asm	/^	fault_va = rcr2();$/;"	d
first_free_page	obj/kern/kernel.asm	/^	first_free_page = (char *) boot_alloc(0);$/;"	d
firstround_t	obj/kern/kernel.asm	/^		firstround_t = 0;$/;"	d
fl	obj/kern/kernel.asm	/^	fl = page_free_list;$/;"	d
generation	obj/kern/kernel.asm	/^		generation = 1 << ENVGENSHIFT;$/;"	d
generation	obj/kern/kernel.asm	/^	generation = (e->env_id + (1 << ENVGENSHIFT)) & ~(NENV - 1);$/;"	d
i	obj/kern/kernel.asm	/^			i = conf->entry;$/;"	d
i	obj/kern/kernel.asm	/^	i = 0;$/;"	d
int	obj/kern/kernel.asm	/^int $/;"	l
int	obj/kern/kernel.asm	/^int color;$/;"	l
int	obj/kern/kernel.asm	/^int x = 1, y = 3, z = 4;$/;"	l
int	obj/kern/kernel.asm	/^int$/;"	l
int32_t	obj/kern/kernel.asm	/^int32_t$/;"	l
irq_mask_8259A	obj/kern/kernel.asm	/^	irq_mask_8259A = mask;$/;"	d
ismp	obj/kern/kernel.asm	/^			ismp = 0;$/;"	d
ismp	obj/kern/kernel.asm	/^	ismp = 1;$/;"	d
kern_pgdir	obj/kern/kernel.asm	/^	kern_pgdir = (pde_t *) boot_alloc(PGSIZE);$/;"	d
l	obj/kern/kernel.asm	/^			l = m;$/;"	d
l	obj/kern/kernel.asm	/^			l = true_m + 1;$/;"	d
lapic	obj/kern/kernel.asm	/^	lapic = mmio_map_region(lapicaddr, 4096);$/;"	d
lapicaddr	obj/kern/kernel.asm	/^		lapicaddr = 0;$/;"	d
lapicaddr	obj/kern/kernel.asm	/^	lapicaddr = conf->lapicaddr;$/;"	d
last_tf	obj/kern/kernel.asm	/^	last_tf = tf;$/;"	d
lfile	obj/kern/kernel.asm	/^	lfile = 0;$/;"	d
lflag	obj/kern/kernel.asm	/^		lflag = 0;$/;"	d
lfun	obj/kern/kernel.asm	/^	lfun = lfile;$/;"	d
lline	obj/kern/kernel.asm	/^		lline = lfile;$/;"	d
lline	obj/kern/kernel.asm	/^		lline = lfun;$/;"	d
long	obj/kern/kernel.asm	/^long$/;"	l
mm1	obj/kern/kernel.asm	/^	mm1 = (uintptr_t) mmio_map_region(0, 4097);$/;"	d
mm2	obj/kern/kernel.asm	/^	mm2 = (uintptr_t) mmio_map_region(0, 4096);$/;"	d
mpentry_end	obj/kern/kernel.asm	/^mpentry_end:$/;"	l
mpentry_kstack	obj/kern/kernel.asm	/^		mpentry_kstack = percpu_kstacks[c - cpus] + KSTKSIZE;$/;"	d
mpentry_start	obj/kern/kernel.asm	/^mpentry_start:$/;"	l
n	obj/kern/kernel.asm	/^	n = PGNUM(ROUNDUP(len, PGSIZE));$/;"	d
n	obj/kern/kernel.asm	/^	n = ROUNDUP(NENV*sizeof(struct Env), PGSIZE);$/;"	d
n	obj/kern/kernel.asm	/^	n = ROUNDUP(npages*sizeof(struct PageInfo), PGSIZE);$/;"	d
ncpu	obj/kern/kernel.asm	/^		ncpu = 1;$/;"	d
ndesc	obj/kern/kernel.asm	/^	ndesc = PGSIZE\/sizeof(struct e1000_rx_desc);$/;"	d
newPage	obj/kern/kernel.asm	/^		newPage = page_alloc(0);$/;"	d
nextfree	obj/kern/kernel.asm	/^		nextfree = ROUNDUP((char *) end, PGSIZE);$/;"	d
nextfree	obj/kern/kernel.asm	/^	nextfree = ROUNDUP((char *) nextfree, PGSIZE);$/;"	d
nextfree	obj/kern/kernel.asm	/^	nextfree = nextfree + n;$/;"	d
npages	obj/kern/kernel.asm	/^		npages = (EXTPHYSMEM \/ PGSIZE) + npages_extmem;$/;"	d
npages	obj/kern/kernel.asm	/^		npages = npages_basemem;$/;"	d
npages_basemem	obj/kern/kernel.asm	/^	npages_basemem = (nvram_read(NVRAM_BASELO) * 1024) \/ PGSIZE;$/;"	d
npages_extmem	obj/kern/kernel.asm	/^	npages_extmem = (nvram_read(NVRAM_EXTLO) * 1024) \/ PGSIZE;$/;"	d
num	obj/kern/kernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/kern/kernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/kern/kernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/kern/kernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/kern/kernel.asm	/^		number:$/;"	l
p	obj/kern/kernel.asm	/^				p = "(null)";$/;"	d
p	obj/kern/kernel.asm	/^		p = *(uint16_t *) (bda + 0x13) * 1024;$/;"	d
p	obj/kern/kernel.asm	/^		p = envs;$/;"	d
p	obj/kern/kernel.asm	/^	p = (pte_t*) KADDR(PTE_ADDR(*pgdir));$/;"	d
pa	obj/kern/kernel.asm	/^		pa = PTE_ADDR(e->env_pgdir[pdeno]);$/;"	d
pa	obj/kern/kernel.asm	/^	pa = PADDR(e->env_pgdir);$/;"	d
pa	obj/kern/kernel.asm	/^	pa = PTE_ADDR(*pte) | PGOFF(va);$/;"	d
padc	obj/kern/kernel.asm	/^			padc = '-';$/;"	d
padc	obj/kern/kernel.asm	/^			padc = '0';$/;"	d
page_free_list	obj/kern/kernel.asm	/^		page_free_list = &pages[i];$/;"	d
page_free_list	obj/kern/kernel.asm	/^		page_free_list = pp1;$/;"	d
page_free_list	obj/kern/kernel.asm	/^		page_free_list = pp;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = 0;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = fl;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = page_free_list->pp_link; $/;"	d
pages	obj/kern/kernel.asm	/^	pages = (struct PageInfo *)boot_alloc(sizeof(struct PageInfo) * npages);$/;"	d
panicstr	obj/kern/kernel.asm	/^	panicstr = fmt;$/;"	d
pgdir	obj/kern/kernel.asm	/^	pgdir = &pgdir[PDX(va)];$/;"	d
pgdir	obj/kern/kernel.asm	/^	pgdir = kern_pgdir;$/;"	d
ph	obj/kern/kernel.asm	/^	ph = (struct Proghdr *) ((char *)elfhdr + elfhdr->e_phoff);$/;"	d
physaddr_t	obj/kern/kernel.asm	/^physaddr_t lapicaddr;        \/\/ Initialized in mpconfig.c$/;"	l
pos	obj/kern/kernel.asm	/^	pos = inb(addr_6845 + 1) << 8;$/;"	d
pp0	obj/kern/kernel.asm	/^	pp0 = pp1 = pp2 = 0;$/;"	d
pp1	obj/kern/kernel.asm	/^	pp1 = pp2 = 0;$/;"	d
precision	obj/kern/kernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/kern/kernel.asm	/^			precision = va_arg(ap, int);$/;"	d
proc	obj/kern/kernel.asm	/^			proc = (struct mpproc *)p;$/;"	d
process_precision	obj/kern/kernel.asm	/^		process_precision:$/;"	l
pt	obj/kern/kernel.asm	/^		pt = (pte_t*) KADDR(pa);$/;"	d
pte	obj/kern/kernel.asm	/^		pte = (pte_t *)(physaddr_t)pgdir_walk(pgdir, va + PGADDR(0, i, 0), true);$/;"	d
pte_t	obj/kern/kernel.asm	/^pte_t *$/;"	l
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(PGSIZE)]));$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) page2kva(pp0);$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = pgdir_walk(kern_pgdir, va, 1);$/;"	d
ptep1	obj/kern/kernel.asm	/^	ptep1 = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(va)]));$/;"	d
r	obj/kern/kernel.asm	/^			r = m - 1;$/;"	d
rc	obj/kern/kernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
recvqueue	obj/kern/kernel.asm	/^	recvqueue = (struct e1000_rx_desc *)page2kva(pp);$/;"	d
relocated	obj/kern/kernel.asm	/^relocated:$/;"	l
result	obj/kern/kernel.asm	/^	result = nextfree;$/;"	d
result	obj/kern/kernel.asm	/^	result = page_free_list;$/;"	d
reswitch	obj/kern/kernel.asm	/^	reswitch:$/;"	l
ret	obj/kern/kernel.asm	/^			ret = syscall(	$/;"	d
ret	obj/kern/kernel.asm	/^	ret = dst;$/;"	d
rfile	obj/kern/kernel.asm	/^	rfile = (stab_end - stabs) - 1;$/;"	d
rfun	obj/kern/kernel.asm	/^	rfun = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfun;$/;"	d
s	obj/kern/kernel.asm	/^	s = src;$/;"	d
serial_exists	obj/kern/kernel.asm	/^	serial_exists = (inb(COM1+COM_LSR) != 0xFF);$/;"	d
size	obj/kern/kernel.asm	/^			size = PCI_MAPREG_IO_SIZE(rv);$/;"	d
size	obj/kern/kernel.asm	/^			size = PCI_MAPREG_MEM_SIZE(rv);$/;"	d
size	obj/kern/kernel.asm	/^	size = ROUNDUP(size, PGSIZE);$/;"	d
size_t	obj/kern/kernel.asm	/^size_t$/;"	l
spin	obj/kern/kernel.asm	/^spin:	jmp	spin$/;"	l
spin	obj/kern/kernel.asm	/^spin:$/;"	l
stab_end	obj/kern/kernel.asm	/^		stab_end = __STAB_END__;$/;"	d
stab_end	obj/kern/kernel.asm	/^		stab_end = usd->stab_end;$/;"	d
stabs	obj/kern/kernel.asm	/^		stabs = __STAB_BEGIN__;$/;"	d
stabs	obj/kern/kernel.asm	/^		stabs = usd->stabs;$/;"	d
stabstr	obj/kern/kernel.asm	/^		stabstr = __STABSTR_BEGIN__;$/;"	d
stabstr	obj/kern/kernel.asm	/^		stabstr = usd->stabstr;$/;"	d
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = __STABSTR_END__;$/;"	d
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = usd->stabstr_end;$/;"	d
start	obj/kern/kernel.asm	/^	start = PGNUM(ROUNDDOWN(IOPHYSMEM, PGSIZE));$/;"	d
start32	obj/kern/kernel.asm	/^start32:$/;"	l
static	obj/kern/kernel.asm	/^	static struct pci_bus root_bus;$/;"	t
static	obj/kern/kernel.asm	/^static __inline uint32_t$/;"	l
static	obj/kern/kernel.asm	/^static __inline uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static __inline void$/;"	l
static	obj/kern/kernel.asm	/^static bool didinit;$/;"	l
static	obj/kern/kernel.asm	/^static bool serial_exists;$/;"	l
static	obj/kern/kernel.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/kern/kernel.asm	/^static envid_t$/;"	l
static	obj/kern/kernel.asm	/^static inline physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static inline struct PageInfo*$/;"	l
static	obj/kern/kernel.asm	/^static inline void$/;"	l
static	obj/kern/kernel.asm	/^static inline void*$/;"	l
static	obj/kern/kernel.asm	/^static int __attribute__((warn_unused_result))$/;"	l
static	obj/kern/kernel.asm	/^static int$/;"	l
static	obj/kern/kernel.asm	/^static long long$/;"	l
static	obj/kern/kernel.asm	/^static physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static struct mp *$/;"	t
static	obj/kern/kernel.asm	/^static uint32_t$/;"	l
static	obj/kern/kernel.asm	/^static uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static unsigned int ticks;$/;"	l
static	obj/kern/kernel.asm	/^static unsigned long long$/;"	l
static	obj/kern/kernel.asm	/^static void *$/;"	l
static	obj/kern/kernel.asm	/^static void boot_aps(void);$/;"	l
static	obj/kern/kernel.asm	/^static void$/;"	l
sum	obj/kern/kernel.asm	/^	sum = 0;$/;"	d
tf	obj/kern/kernel.asm	/^		tf = &curenv->env_tf;$/;"	d
ticks	obj/kern/kernel.asm	/^	ticks = 0;$/;"	d
tsmitqueue	obj/kern/kernel.asm	/^	tsmitqueue = (struct e1000_tx_desc *)page2kva(pp);$/;"	d
uint32_t	obj/kern/kernel.asm	/^uint32_t receive_buf[PGSIZE\/sizeof(struct e1000_rx_desc)];$/;"	l
unsigned	obj/kern/kernel.asm	/^unsigned int$/;"	l
unsigned	obj/kern/kernel.asm	/^unsigned$/;"	l
user_mem_check_addr	obj/kern/kernel.asm	/^	user_mem_check_addr = (start == ROUNDDOWN((uint32_t)va, PGSIZE)) ? (uint32_t)va : start;$/;"	d
utf	obj/kern/kernel.asm	/^			utf = (struct UTrapframe *)((uint32_t)(tf->tf_esp) - 4 - sizeof(struct UTrapframe));$/;"	d
utf	obj/kern/kernel.asm	/^			utf = (struct UTrapframe *)(UXSTACKTOP - sizeof(struct UTrapframe));$/;"	d
va	obj/kern/kernel.asm	/^	va = (void*)(PGSIZE * NPDENTRIES + PGSIZE);$/;"	d
void	obj/kern/kernel.asm	/^void	user_mem_assert(struct Env *env, const void *va, size_t len, int perm);$/;"	l
void	obj/kern/kernel.asm	/^void $/;"	l
void	obj/kern/kernel.asm	/^void *$/;"	l
void	obj/kern/kernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/kern/kernel.asm	/^void sched_halt(void);$/;"	l
void	obj/kern/kernel.asm	/^void$/;"	l
volatile	obj/kern/kernel.asm	/^volatile uint32_t *lapic;$/;"	l
was	obj/kern/kernel.asm	/^	was = *cp;$/;"	d
width	obj/kern/kernel.asm	/^				width = 0;$/;"	d
width	obj/kern/kernel.asm	/^				width = precision, precision = -1;$/;"	d
wrv	obj/kern/kernel.asm	/^	wrv = (uint16_t *)KADDR((0x40 << 4 | 0x67));  \/\/ Warm reset vector$/;"	d
ASM	obj/net/ns.asm	/^#define ASM 1$/;"	d
Disassembly	obj/net/ns.asm	/^Disassembly of section .text:$/;"	l
ENTRY	obj/net/ns.asm	/^#define ENTRY(x) \\$/;"	d
TCP_LOCAL_PORT_RANGE_END	obj/net/ns.asm	/^#define TCP_LOCAL_PORT_RANGE_END   0x7fff$/;"	d
UDP_LOCAL_PORT_RANGE_END	obj/net/ns.asm	/^#define UDP_LOCAL_PORT_RANGE_END   0x7fff$/;"	d
UDP_LOCAL_PORT_RANGE_START	obj/net/ns.asm	/^#define UDP_LOCAL_PORT_RANGE_START 4096$/;"	d
_pgfault_handler	obj/net/ns.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	obj/net/ns.asm	/^_pgfault_upcall:$/;"	l
_start	obj/net/ns.asm	/^_start:$/;"	l
acc	obj/net/ns.asm	/^      acc = SWAP_BYTES_IN_WORD(acc);$/;"	d
acc	obj/net/ns.asm	/^    acc = (acc >> 16) + (acc & 0x0000ffffUL);$/;"	d
acc	obj/net/ns.asm	/^    acc = FOLD_U32T(acc);$/;"	d
acc	obj/net/ns.asm	/^    acc = SWAP_BYTES_IN_WORD(acc);$/;"	d
acc	obj/net/ns.asm	/^  acc = (acc >> 16) + (acc & 0x0000ffffUL);$/;"	d
acc	obj/net/ns.asm	/^  acc = 0;$/;"	d
acc	obj/net/ns.asm	/^  acc = FOLD_U32T(acc);$/;"	d
acceptable	obj/net/ns.asm	/^        acceptable = 1;$/;"	d
accepted_inseq	obj/net/ns.asm	/^        accepted_inseq = 1; $/;"	d
accepted_inseq	obj/net/ns.asm	/^        accepted_inseq = tcp_receive(pcb);$/;"	d
accepted_inseq	obj/net/ns.asm	/^    accepted_inseq = tcp_receive(pcb);$/;"	d
ackno	obj/net/ns.asm	/^    ackno = pcb->rcv_nxt;$/;"	d
ackno	obj/net/ns.asm	/^  ackno = tcphdr->ackno = ntohl(tcphdr->ackno);$/;"	d
addr	obj/net/ns.asm	/^	addr = (void *)ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/net/ns.asm	/^      addr = (struct ip_addr*)&(sin.sin_addr.s_addr);$/;"	d
addr	obj/net/ns.asm	/^      addr = netbuf_fromaddr(buf);$/;"	d
addr2test	obj/net/ns.asm	/^  addr2test = addr->addr;$/;"	d
again	obj/net/ns.asm	/^ again:$/;"	l
age_pending	obj/net/ns.asm	/^          age_pending = arp_table[i].ctime;$/;"	d
age_queue	obj/net/ns.asm	/^          age_queue = arp_table[i].ctime;$/;"	d
age_stable	obj/net/ns.asm	/^        age_stable = arp_table[i].ctime;$/;"	d
altflag	obj/net/ns.asm	/^			altflag = 1;$/;"	d
altflag	obj/net/ns.asm	/^		altflag = 0;$/;"	d
ap	obj/net/ns.asm	/^  ap = (u8_t *)&s_addr;$/;"	d
arg	obj/net/ns.asm	/^      arg = tmptimeout->arg;$/;"	d
arg	obj/net/ns.asm	/^  arg = arg;$/;"	d
args_exist	obj/net/ns.asm	/^args_exist:$/;"	l
available	obj/net/ns.asm	/^  available = tcp_sndbuf(conn->pcb.tcp);$/;"	d
backlog	obj/net/ns.asm	/^    backlog = 0xff;$/;"	d
base	obj/net/ns.asm	/^			base = 10;$/;"	d
base	obj/net/ns.asm	/^			base = 16;$/;"	d
base	obj/net/ns.asm	/^			base = 8;$/;"	d
base	obj/net/ns.asm	/^		base = 10;$/;"	d
base	obj/net/ns.asm	/^        base = 16;$/;"	d
base	obj/net/ns.asm	/^        base = 8;$/;"	d
base	obj/net/ns.asm	/^    base = 10;$/;"	d
binaryname	obj/net/ns.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/net/ns.asm	/^	binaryname = "ns";$/;"	d
binaryname	obj/net/ns.asm	/^	binaryname = "ns_input";$/;"	d
binaryname	obj/net/ns.asm	/^	binaryname = "ns_output";$/;"	d
binaryname	obj/net/ns.asm	/^	binaryname = "ns_timer";$/;"	d
buf	obj/net/ns.asm	/^	buf = vbuf;$/;"	d
buf	obj/net/ns.asm	/^      buf = NULL;$/;"	d
buf	obj/net/ns.asm	/^      buf = memp_malloc(MEMP_NETBUF);$/;"	d
buf	obj/net/ns.asm	/^      buf = sock->lastdata;$/;"	d
buf	obj/net/ns.asm	/^    buf = memp_malloc(MEMP_NETBUF);$/;"	d
buf	obj/net/ns.asm	/^  buf = memp_malloc(MEMP_NETBUF);$/;"	d
buf_copy_len	obj/net/ns.asm	/^          buf_copy_len = len;$/;"	d
buf_copy_len	obj/net/ns.asm	/^      buf_copy_len = p->len - offset;$/;"	d
buflen	obj/net/ns.asm	/^      buflen = netbuf_len(sock->lastdata);$/;"	d
buflen	obj/net/ns.asm	/^    buflen = netbuf_len(buf);$/;"	d
bytes	obj/net/ns.asm	/^	    bytes = len - copied;$/;"	d
c	obj/net/ns.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/net/ns.asm	/^	c = ROUNDDOWN(v, PGSIZE);$/;"	d
c	obj/net/ns.asm	/^        c = *++cp;$/;"	d
c	obj/net/ns.asm	/^      c = *++cp;$/;"	d
c	obj/net/ns.asm	/^  c = *cp;$/;"	d
ch	obj/net/ns.asm	/^				ch = *fmt;$/;"	d
char	obj/net/ns.asm	/^char *$/;"	l
chklen	obj/net/ns.asm	/^      chklen = chksum_len;$/;"	d
chklen	obj/net/ns.asm	/^    chklen = q->len;$/;"	d
clen	obj/net/ns.asm	/^  clen = pbuf_clen(p);$/;"	d
clrflag	obj/net/ns.asm	/^		clrflag = 0;$/;"	d
cnt	obj/net/ns.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
code	obj/net/ns.asm	/^  code = *(((u8_t *)p->payload)+1);$/;"	d
color	obj/net/ns.asm	/^				color = 0;$/;"	d
color	obj/net/ns.asm	/^			color = 0;$/;"	d
colorswitch	obj/net/ns.asm	/^	colorswitch:$/;"	l
conn	obj/net/ns.asm	/^    conn = netconn_new_with_callback( (protocol == IPPROTO_UDPLITE) ?$/;"	d
conn	obj/net/ns.asm	/^    conn = netconn_new_with_callback(NETCONN_TCP, event_callback);$/;"	d
conn	obj/net/ns.asm	/^    conn = netconn_new_with_proto_and_callback(NETCONN_RAW, (u8_t)protocol, event_callback);$/;"	d
conn	obj/net/ns.asm	/^  conn = (struct netconn *)arg;$/;"	d
conn	obj/net/ns.asm	/^  conn = arg;$/;"	d
conn	obj/net/ns.asm	/^  conn = memp_malloc(MEMP_NETCONN);$/;"	d
conn	obj/net/ns.asm	/^  conn = netconn_alloc(t, callback);$/;"	d
const	obj/net/ns.asm	/^const char *$/;"	l
const	obj/net/ns.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/net/ns.asm	/^const volatile struct Env *thisenv;$/;"	l
cont	obj/net/ns.asm	/^		cont = (i + PGSIZE < n + 4) ? PTE_CONTINUED : 0;$/;"	d
cop	obj/net/ns.asm	/^    cop = last ? left : nfb * 8;$/;"	d
copy_needed	obj/net/ns.asm	/^          copy_needed = 1;$/;"	d
copylen	obj/net/ns.asm	/^      copylen = buflen;$/;"	d
copylen	obj/net/ns.asm	/^      copylen = len;$/;"	d
count	obj/net/ns.asm	/^      count = pbuf_free(seg->p);$/;"	d
count	obj/net/ns.asm	/^  count = 0;$/;"	d
cseg	obj/net/ns.asm	/^                  cseg = tcp_seg_copy(&inseg);$/;"	d
cseg	obj/net/ns.asm	/^                cseg = tcp_seg_copy(&inseg);$/;"	d
cseg	obj/net/ns.asm	/^          cseg = pcb->ooseq;$/;"	d
cseg	obj/net/ns.asm	/^  cseg = memp_malloc(MEMP_TCP_SEG);$/;"	d
cur_tc	obj/net/ns.asm	/^    cur_tc = NULL;$/;"	d
cur_tc	obj/net/ns.asm	/^    cur_tc = next_tc;$/;"	d
d	obj/net/ns.asm	/^	d = dst;$/;"	d
data	obj/net/ns.asm	/^  data = (struct lwip_setgetsockopt_data*)arg;$/;"	d
dataptr	obj/net/ns.asm	/^  dataptr = (u8_t*)conn->write_msg->msg.w.dataptr + conn->write_offset;$/;"	d
default	obj/net/ns.asm	/^		default:$/;"	l
default	obj/net/ns.asm	/^	default:$/;"	l
default	obj/net/ns.asm	/^      default: \/* unrecognized socket type *\/$/;"	l
default	obj/net/ns.asm	/^      default:$/;"	l
default	obj/net/ns.asm	/^    default:$/;"	l
default	obj/net/ns.asm	/^   default:$/;"	l
default	obj/net/ns.asm	/^  default:$/;"	l
dest	obj/net/ns.asm	/^    dest = &(iphdr->dest);$/;"	d
dest	obj/net/ns.asm	/^    dest = &mcastaddr;$/;"	d
dest	obj/net/ns.asm	/^    dest = (struct eth_addr *)&ethbroadcast;$/;"	d
dest	obj/net/ns.asm	/^  dest = NULL;$/;"	d
dest	obj/net/ns.asm	/^  dest = ntohs(udphdr->dest);$/;"	d
dhcp	obj/net/ns.asm	/^    dhcp = mem_malloc(sizeof(struct dhcp));$/;"	d
dhcp	obj/net/ns.asm	/^  dhcp = mem_malloc(sizeof(struct dhcp));$/;"	d
dhcp	obj/net/ns.asm	/^  dhcp = netif->dhcp;$/;"	d
dig	obj/net/ns.asm	/^			dig = *s - '0';$/;"	d
dig	obj/net/ns.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/net/ns.asm	/^			dig = *s - 'a' + 10;$/;"	d
done	obj/net/ns.asm	/^        done = 1;$/;"	d
done	obj/net/ns.asm	/^      done = 1;$/;"	d
done	obj/net/ns.asm	/^ done:$/;"	l
dst_in	obj/net/ns.asm	/^	dst_in = dst;$/;"	d
eaten	obj/net/ns.asm	/^          eaten = 1;$/;"	d
eff_wnd	obj/net/ns.asm	/^          eff_wnd = LWIP_MIN(pcb->cwnd, pcb->snd_wnd);$/;"	d
empty	obj/net/ns.asm	/^      empty = i;$/;"	d
enum	obj/net/ns.asm	/^enum netconn_type$/;"	l
enum	obj/net/ns.asm	/^enum { thread_hash_size = 257 };$/;"	l
envid_t	obj/net/ns.asm	/^envid_t$/;"	l
err	obj/net/ns.asm	/^				err = -err;$/;"	d
err	obj/net/ns.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/net/ns.asm	/^        err = EAFNOSUPPORT;$/;"	d
err	obj/net/ns.asm	/^        err = EINVAL;$/;"	d
err	obj/net/ns.asm	/^        err = ENOPROTOOPT;$/;"	d
err	obj/net/ns.asm	/^        err = ERR_OK;$/;"	d
err	obj/net/ns.asm	/^      err = EINVAL;$/;"	d
err	obj/net/ns.asm	/^      err = ENOPROTOOPT;$/;"	d
err	obj/net/ns.asm	/^    err = ENOPROTOOPT;$/;"	d
err	obj/net/ns.asm	/^    err = ERR_OK;$/;"	d
err	obj/net/ns.asm	/^    err = ip_output_if(q, src_ip, dst_ip, pcb->ttl, pcb->tos, IP_PROTO_UDP, netif);    $/;"	d
err	obj/net/ns.asm	/^    err = netconn_connect(sock->conn, &remote_addr, ntohs(remote_port));$/;"	d
err	obj/net/ns.asm	/^    err = netconn_disconnect(sock->conn);$/;"	d
err	obj/net/ns.asm	/^    err = netconn_send(sock->conn, &buf);$/;"	d
err	obj/net/ns.asm	/^    err = tcp_output(conn->pcb.tcp);$/;"	d
err	obj/net/ns.asm	/^    err = tcp_output_nagle(conn->pcb.tcp);$/;"	d
err	obj/net/ns.asm	/^    err = tcp_process(pcb);$/;"	d
err	obj/net/ns.asm	/^    err = tcp_send_ctrl(pcb, TCP_FIN);$/;"	d
err	obj/net/ns.asm	/^    err = udp_bind(pcb, &pcb->local_ip, pcb->local_port);$/;"	d
err	obj/net/ns.asm	/^    err:$/;"	l
err	obj/net/ns.asm	/^  err = ERR_OK;$/;"	d
err	obj/net/ns.asm	/^  err = data.err;$/;"	d
err	obj/net/ns.asm	/^  err = ip_output_if (q, src_ip, ipaddr, pcb->ttl, pcb->tos, pcb->protocol, netif);$/;"	d
err	obj/net/ns.asm	/^  err = netconn_bind(sock->conn, &local_addr, ntohs(local_port));$/;"	d
err	obj/net/ns.asm	/^  err = netconn_listen_with_backlog(sock->conn, backlog);$/;"	d
err	obj/net/ns.asm	/^  err = netconn_peer(newconn, &naddr, &port);$/;"	d
err	obj/net/ns.asm	/^  err = netconn_write(sock->conn, data, size, NETCONN_COPY | ((flags & MSG_MORE)?NETCONN_MORE:0));$/;"	d
err	obj/net/ns.asm	/^  err = tcp_close(conn->pcb.tcp);$/;"	d
err	obj/net/ns.asm	/^  err = tcp_write(conn->pcb.tcp, dataptr, len, conn->write_msg->msg.w.apiflags);$/;"	d
err	obj/net/ns.asm	/^err:$/;"	l
err1	obj/net/ns.asm	/^    err1:$/;"	l
err2	obj/net/ns.asm	/^    err2:$/;"	l
err3	obj/net/ns.asm	/^    err3:$/;"	l
err_t	obj/net/ns.asm	/^err_t $/;"	l
err_t	obj/net/ns.asm	/^err_t$/;"	l
errf	obj/net/ns.asm	/^    errf = pcb->errf;$/;"	d
errf_arg	obj/net/ns.asm	/^    errf_arg = pcb->callback_arg;$/;"	d
etharp_cached_entry	obj/net/ns.asm	/^        etharp_cached_entry = i;$/;"	d
etharp_cached_entry	obj/net/ns.asm	/^  etharp_cached_entry = i;$/;"	d
ethdst_hwaddr	obj/net/ns.asm	/^      ethdst_hwaddr = ((netif->autoip != NULL) && (netif->autoip->state != AUTOIP_STATE_OFF)) ? (u8_t*)(ethbroadcast.addr) : hdr->shwaddr.addr;$/;"	d
ethdst_hwaddr	obj/net/ns.asm	/^  ethdst_hwaddr = ((netif->autoip != NULL) && (netif->autoip->state != AUTOIP_STATE_OFF)) ? (u8_t*)(ethbroadcast.addr) : ethdst_addr->addr;$/;"	d
ethhdr	obj/net/ns.asm	/^    ethhdr = p->payload;$/;"	d
extern	obj/net/ns.asm	/^extern union Nsipc nsipcbuf;$/;"	l
fd	obj/net/ns.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/net/ns.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
field_len	obj/net/ns.asm	/^        field_len = DHCP_FILE_LEN + DHCP_SNAME_LEN;$/;"	d
field_len	obj/net/ns.asm	/^        field_len = DHCP_FILE_LEN;$/;"	d
field_len	obj/net/ns.asm	/^        field_len = DHCP_SNAME_LEN;$/;"	d
first	obj/net/ns.asm	/^        first = 0;$/;"	d
flags	obj/net/ns.asm	/^  flags = TCPH_FLAGS(tcphdr) & TCP_FLAGS;$/;"	d
for_us	obj/net/ns.asm	/^    for_us = 0;$/;"	d
for_us	obj/net/ns.asm	/^    for_us = ip_addr_cmp(&dipaddr, &(netif->ip_addr));$/;"	d
fraghdr	obj/net/ns.asm	/^    fraghdr = (struct ip_hdr*)(ipr->p->payload);$/;"	d
fraghdr	obj/net/ns.asm	/^  fraghdr = (struct ip_hdr*)new_p->payload; $/;"	d
fraghdr	obj/net/ns.asm	/^  fraghdr = (struct ip_hdr*)p->payload;$/;"	d
free_pbuf_and_return	obj/net/ns.asm	/^free_pbuf_and_return:$/;"	l
freepbuf	obj/net/ns.asm	/^freepbuf:$/;"	l
fsenv	obj/net/ns.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
grow	obj/net/ns.asm	/^  grow = new_len - p->tot_len;$/;"	d
h	obj/net/ns.asm	/^      h   = tmptimeout->h;$/;"	d
h	obj/net/ns.asm	/^      h = tmptimeout->h;$/;"	d
hdr	obj/net/ns.asm	/^  hdr = p->payload;$/;"	d
hdrlen	obj/net/ns.asm	/^  hdrlen = TCPH_HDRLEN(tcphdr);$/;"	d
header	obj/net/ns.asm	/^    header = pbuf_alloc(PBUF_LINK, 0, PBUF_RAM);$/;"	d
hlen	obj/net/ns.asm	/^  hlen = IPH_HL(iphdr) * 4;$/;"	d
i	obj/net/ns.asm	/^    i = 0;$/;"	d
i	obj/net/ns.asm	/^    i = empty;$/;"	d
i	obj/net/ns.asm	/^    i = old_pending;$/;"	d
i	obj/net/ns.asm	/^    i = old_queue;$/;"	d
i	obj/net/ns.asm	/^    i = old_stable;$/;"	d
i	obj/net/ns.asm	/^    i = sys_sem_wait_timeout(select_cb.sem, msectimeout);$/;"	d
i	obj/net/ns.asm	/^  i = alloc_socket(conn);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, ETHARP_FIND_ONLY);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, ETHARP_FIND_ONLY, NULL);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, ETHARP_TRY_HARD);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, ETHARP_TRY_HARD, netif);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, flags);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, flags, netif);$/;"	d
idur	obj/net/ns.asm	/^  idur = q->payload;$/;"	d
iecho	obj/net/ns.asm	/^    iecho = p->payload;$/;"	d
inactive	obj/net/ns.asm	/^      inactive = pcb;$/;"	d
inactive	obj/net/ns.asm	/^  inactive = NULL;$/;"	d
inactivity	obj/net/ns.asm	/^      inactivity = tcp_ticks - pcb->tmr;$/;"	d
inactivity	obj/net/ns.asm	/^  inactivity = 0;$/;"	d
increment_magnitude	obj/net/ns.asm	/^    increment_magnitude = -header_size_increment;$/;"	d
increment_magnitude	obj/net/ns.asm	/^    increment_magnitude = header_size_increment;$/;"	d
input_envid	obj/net/ns.asm	/^	input_envid = fork();$/;"	d
int	obj/net/ns.asm	/^int $/;"	l
int	obj/net/ns.asm	/^int color;$/;"	l
int	obj/net/ns.asm	/^int$/;"	l
int32_t	obj/net/ns.asm	/^int32_t$/;"	l
ipaddr	obj/net/ns.asm	/^        ipaddr = &(netif->gw);$/;"	d
ipcb	obj/net/ns.asm	/^        ipcb = ipcb->next;$/;"	d
ipcb	obj/net/ns.asm	/^        ipcb = udp_pcbs;$/;"	d
ipcb	obj/net/ns.asm	/^    ipcb = udp_pcbs;$/;"	d
ipcbuf	obj/net/ns.asm	/^		ipcbuf = (union Nsipc *)va;$/;"	d
iphdr	obj/net/ns.asm	/^      iphdr = r->payload;$/;"	d
iphdr	obj/net/ns.asm	/^    iphdr = p->payload;$/;"	d
iphdr	obj/net/ns.asm	/^  iphdr = original_iphdr;$/;"	d
iphdr	obj/net/ns.asm	/^  iphdr = p->payload;$/;"	d
iphdr	obj/net/ns.asm	/^  iphdr = rambuf->payload;$/;"	d
iphdr_hlen	obj/net/ns.asm	/^  iphdr_hlen = IPH_HL(iphdr);$/;"	d
iphdr_len	obj/net/ns.asm	/^  iphdr_len = ntohs(IPH_LEN(iphdr));$/;"	d
ipr	obj/net/ns.asm	/^      ipr = memp_malloc(MEMP_REASSDATA);$/;"	d
ipr	obj/net/ns.asm	/^  ipr = memp_malloc(MEMP_REASSDATA);$/;"	d
iprh	obj/net/ns.asm	/^          iprh = (struct ip_reass_helper*)q->payload;$/;"	d
iprh	obj/net/ns.asm	/^      iprh = (struct ip_reass_helper*)r->payload;$/;"	d
iprh	obj/net/ns.asm	/^    iprh = (struct ip_reass_helper *)p->payload;$/;"	d
iprh	obj/net/ns.asm	/^  iprh = (struct ip_reass_helper *)ipr->p->payload;$/;"	d
iprh	obj/net/ns.asm	/^  iprh = (struct ip_reass_helper*)new_p->payload;$/;"	d
iprh_prev	obj/net/ns.asm	/^          iprh_prev = iprh;$/;"	d
iprh_prev	obj/net/ns.asm	/^        iprh_prev = iprh;$/;"	d
iprh_prev	obj/net/ns.asm	/^    iprh_prev = iprh_tmp;$/;"	d
iprh_tmp	obj/net/ns.asm	/^    iprh_tmp = (struct ip_reass_helper*)q->payload;$/;"	d
iss	obj/net/ns.asm	/^    iss = tcp_next_iss();$/;"	d
iss	obj/net/ns.asm	/^  iss = tcp_next_iss();$/;"	d
jif	obj/net/ns.asm	/^    jif = mem_malloc(sizeof(struct jif));$/;"	d
jif	obj/net/ns.asm	/^    jif = netif->state;$/;"	d
k	obj/net/ns.asm	/^  k = ETHARP_HWADDR_LEN;$/;"	d
last	obj/net/ns.asm	/^    last = (left <= mtu - IP_HLEN);$/;"	d
left	obj/net/ns.asm	/^  left = len;$/;"	d
left	obj/net/ns.asm	/^  left = p->tot_len - IP_HLEN;$/;"	d
len	obj/net/ns.asm	/^      len = 0;$/;"	d
len	obj/net/ns.asm	/^      len = p->tot_len;$/;"	d
len	obj/net/ns.asm	/^      len = p_from->len - offset_from;$/;"	d
len	obj/net/ns.asm	/^      len = p_to->len - offset_to;$/;"	d
len	obj/net/ns.asm	/^    len = 0;$/;"	d
len	obj/net/ns.asm	/^    len = 0xffff;$/;"	d
len	obj/net/ns.asm	/^    len = conn->write_msg->msg.w.len - conn->write_offset;$/;"	d
len	obj/net/ns.asm	/^    len = p->tot_len;$/;"	d
len	obj/net/ns.asm	/^  len = (u16_t)((u8_t *)seg->tcphdr - (u8_t *)seg->p->payload);$/;"	d
len	obj/net/ns.asm	/^  len = 0;$/;"	d
len	obj/net/ns.asm	/^  len = ntohs(IPH_LEN(fraghdr)) - IPH_HL(fraghdr) * 4;$/;"	d
lenerr	obj/net/ns.asm	/^lenerr:$/;"	l
level	obj/net/ns.asm	/^  level = data->level;$/;"	d
lexceptset	obj/net/ns.asm	/^      lexceptset = *exceptset;$/;"	d
lexceptset	obj/net/ns.asm	/^    lexceptset = *exceptset;$/;"	d
lflag	obj/net/ns.asm	/^		lflag = 0;$/;"	d
lfree	obj/net/ns.asm	/^            lfree = (struct mem *)&ram[lfree->next];$/;"	d
lfree	obj/net/ns.asm	/^      lfree = (struct mem *)&ram[ptr2];$/;"	d
lfree	obj/net/ns.asm	/^      lfree = mem2;$/;"	d
lfree	obj/net/ns.asm	/^      lfree = mem;$/;"	d
lfree	obj/net/ns.asm	/^      lfree = pmem;$/;"	d
lfree	obj/net/ns.asm	/^    lfree = mem;$/;"	d
lfree	obj/net/ns.asm	/^  lfree = (struct mem *)ram;$/;"	d
local_match	obj/net/ns.asm	/^        local_match = 1;$/;"	d
local_match	obj/net/ns.asm	/^    local_match = 0;$/;"	d
local_mem_free_count	obj/net/ns.asm	/^        local_mem_free_count = mem_free_count;$/;"	d
local_port	obj/net/ns.asm	/^    local_port = pcb->local_port;$/;"	d
lock_tcpip_core	obj/net/ns.asm	/^  lock_tcpip_core = sys_sem_new(1);$/;"	d
long	obj/net/ns.asm	/^long$/;"	l
lpcb	obj/net/ns.asm	/^  lpcb = memp_malloc(MEMP_TCP_PCB_LISTEN);$/;"	d
lreadset	obj/net/ns.asm	/^      lreadset = *readset;$/;"	d
lreadset	obj/net/ns.asm	/^    lreadset = *readset;$/;"	d
lwriteset	obj/net/ns.asm	/^      lwriteset = *writeset;$/;"	d
lwriteset	obj/net/ns.asm	/^    lwriteset = *writeset;$/;"	d
m	obj/net/ns.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/net/ns.asm	/^		m = n - tot;$/;"	d
m	obj/net/ns.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/net/ns.asm	/^        m = -m;$/;"	d
m	obj/net/ns.asm	/^      m = (s16_t)(tcp_ticks - pcb->rttest);$/;"	d
m	obj/net/ns.asm	/^      m = m - (pcb->sa >> 3);$/;"	d
m	obj/net/ns.asm	/^      m = m - (pcb->sv >> 2);$/;"	d
max_tid	obj/net/ns.asm	/^    max_tid = 0;$/;"	d
mbox	obj/net/ns.asm	/^  mbox = sys_mbox_new(TCPIP_MBOX_SIZE);$/;"	d
mem	obj/net/ns.asm	/^      mem = (struct mem *)&ram[ptr];$/;"	d
mem	obj/net/ns.asm	/^  mem = (struct mem *)((u8_t *)rmem - SIZEOF_STRUCT_MEM);$/;"	d
mem	obj/net/ns.asm	/^  mem = (struct mem *)ram;$/;"	d
mem2	obj/net/ns.asm	/^          mem2 = (struct mem *)&ram[ptr2];$/;"	d
mem2	obj/net/ns.asm	/^    mem2 = (struct mem *)&ram[ptr2];$/;"	d
mem2	obj/net/ns.asm	/^  mem2 = (struct mem *)&ram[mem->next];$/;"	d
mem_free_count	obj/net/ns.asm	/^      mem_free_count = 0;$/;"	d
mem_free_count	obj/net/ns.asm	/^  mem_free_count = 1;$/;"	d
mem_sem	obj/net/ns.asm	/^  mem_sem = sys_sem_new(1);$/;"	d
memerr	obj/net/ns.asm	/^memerr:$/;"	l
memp	obj/net/ns.asm	/^      memp = (struct memp *)((u8_t *)memp + MEMP_SIZE + memp_sizes[i]);$/;"	d
memp	obj/net/ns.asm	/^  memp = LWIP_MEM_ALIGN(memp_memory);$/;"	d
memp	obj/net/ns.asm	/^  memp = memp_tab[type];$/;"	d
mprio	obj/net/ns.asm	/^      mprio = pcb->prio;$/;"	d
mprio	obj/net/ns.asm	/^  mprio = TCP_PRIO_MAX;$/;"	d
mptr	obj/net/ns.asm	/^			mptr = mbegin;$/;"	d
mptr	obj/net/ns.asm	/^		mptr = ROUNDDOWN(mptr + PGSIZE, PGSIZE);$/;"	d
mptr	obj/net/ns.asm	/^		mptr = mbegin;$/;"	d
msecs	obj/net/ns.asm	/^  msecs = 10*1000;$/;"	d
msecs	obj/net/ns.asm	/^  msecs = 500;$/;"	d
msecs	obj/net/ns.asm	/^  msecs = dhcp->tries < 10 ? dhcp->tries * 1000 : 10 * 1000;$/;"	d
msecs	obj/net/ns.asm	/^  msecs = dhcp->tries < 10 ? dhcp->tries * 2000 : 20 * 1000;$/;"	d
msecs	obj/net/ns.asm	/^  msecs = dhcp->tries < 4 ? (dhcp->tries + 1) * 1000 : 10 * 1000;$/;"	d
msecs	obj/net/ns.asm	/^  msecs = dhcp->tries < 4 ? dhcp->tries * 1000 : 4 * 1000;$/;"	d
msectimeout	obj/net/ns.asm	/^        msectimeout = 1;$/;"	d
msectimeout	obj/net/ns.asm	/^      msectimeout =  ((timeout->tv_sec * 1000) + ((timeout->tv_usec + 500)\/1000));$/;"	d
msectimeout	obj/net/ns.asm	/^      msectimeout = 0;$/;"	d
msg	obj/net/ns.asm	/^    msg = memp_malloc(MEMP_TCPIP_MSG_API);$/;"	d
msg	obj/net/ns.asm	/^    msg = memp_malloc(MEMP_TCPIP_MSG_INPKT);$/;"	d
msg_type	obj/net/ns.asm	/^  msg_type = dhcp_get_option_byte(options_ptr + 2);$/;"	d
mss	obj/net/ns.asm	/^        mss = (opts[c + 2] << 8) | opts[c + 3];$/;"	d
mss_s	obj/net/ns.asm	/^    mss_s = outif->mtu - IP_HLEN - TCP_HLEN;$/;"	d
n	obj/net/ns.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/net/ns.asm	/^	n = ROUNDUP(n, 4);$/;"	d
n	obj/net/ns.asm	/^  n = pp - parts + 1;$/;"	d
netbuf	obj/net/ns.asm	/^netbuf *netbuf_new(void)$/;"	l
netif	obj/net/ns.asm	/^        netif = inp;$/;"	d
netif	obj/net/ns.asm	/^        netif = netif->next;$/;"	d
netif	obj/net/ns.asm	/^        netif = netif_list;$/;"	d
netif	obj/net/ns.asm	/^    netif = inp;$/;"	d
netif	obj/net/ns.asm	/^    netif = ip_route(&(pcb->remote_ip));$/;"	d
netif	obj/net/ns.asm	/^    netif = netif->next;$/;"	d
netif	obj/net/ns.asm	/^  netif = ip_route((ip_addr_ismulticast(dst_ip))?(&(pcb->multicast_ip)):(dst_ip));$/;"	d
netif	obj/net/ns.asm	/^  netif = ip_route(dst_ip);$/;"	d
netif_default	obj/net/ns.asm	/^  netif_default = netif;$/;"	d
netif_list	obj/net/ns.asm	/^    netif_list = netif->next;$/;"	d
netif_list	obj/net/ns.asm	/^  netif_list = netif;$/;"	d
new_entry	obj/net/ns.asm	/^        new_entry = memp_malloc(MEMP_ARP_QUEUE);$/;"	d
new_tot_len	obj/net/ns.asm	/^        new_tot_len = (u16_t)(inseg.p->tot_len - off);$/;"	d
newconn	obj/net/ns.asm	/^    newconn = NULL;$/;"	d
newconn	obj/net/ns.asm	/^  newconn = netconn_accept(sock->conn);$/;"	d
newconn	obj/net/ns.asm	/^  newconn = netconn_alloc(conn->type, conn->callback);$/;"	d
newfd	obj/net/ns.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newsize	obj/net/ns.asm	/^    newsize = MIN_SIZE_ALIGNED;$/;"	d
newsize	obj/net/ns.asm	/^  newsize = LWIP_MEM_ALIGN_SIZE(newsize);$/;"	d
newsock	obj/net/ns.asm	/^  newsock = alloc_socket(newconn);$/;"	d
next	obj/net/ns.asm	/^                    next = cseg->next;$/;"	d
next	obj/net/ns.asm	/^        next = pcb->unacked;$/;"	d
next	obj/net/ns.asm	/^      next = pcb->unsent;$/;"	d
next	obj/net/ns.asm	/^    next = mem2->next;$/;"	d
next	obj/net/ns.asm	/^    next = seg->next;$/;"	d
nfb	obj/net/ns.asm	/^  nfb = (mtu - IP_HLEN) \/ 8;$/;"	d
nmem	obj/net/ns.asm	/^  nmem = (struct mem *)&ram[mem->next];$/;"	d
nn	obj/net/ns.asm	/^		nn = thisenv->env_runs;$/;"	d
now	obj/net/ns.asm	/^	now = sys_time_msec();$/;"	d
npcb	obj/net/ns.asm	/^    npcb = tcp_alloc(pcb->prio);$/;"	d
nready	obj/net/ns.asm	/^    nready = lwip_selscan(maxfdp1, &lreadset, &lwriteset, &lexceptset);$/;"	d
nready	obj/net/ns.asm	/^  nready = lwip_selscan(maxfdp1, &lreadset, &lwriteset, &lexceptset);$/;"	d
nsenv	obj/net/ns.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsock	obj/net/ns.asm	/^  nsock = &sockets[newsock];$/;"	d
nullreturn	obj/net/ns.asm	/^nullreturn:$/;"	l
num	obj/net/ns.asm	/^				num = -(long long) num;$/;"	d
num	obj/net/ns.asm	/^			num = (unsigned long long)$/;"	d
num	obj/net/ns.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/net/ns.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/net/ns.asm	/^  num = name[2] - '0';$/;"	d
number	obj/net/ns.asm	/^		number:$/;"	l
nva	obj/net/ns.asm	/^	nva = fd2data(newfd);$/;"	d
nwrap	obj/net/ns.asm	/^	nwrap = 0;$/;"	d
octetptr	obj/net/ns.asm	/^  octetptr = (u8_t*)dataptr;$/;"	d
off	obj/net/ns.asm	/^      off = pcb->rcv_nxt - seqno;$/;"	d
offset	obj/net/ns.asm	/^      offset = 0;$/;"	d
offset	obj/net/ns.asm	/^  offset = (ntohs(IPH_OFFSET(fraghdr)) & IP_OFFMASK) * 8;$/;"	d
offset	obj/net/ns.asm	/^  offset = 0;$/;"	d
offset_from	obj/net/ns.asm	/^      offset_from = 0;$/;"	d
offset_to	obj/net/ns.asm	/^      offset_to = 0;$/;"	d
ofo	obj/net/ns.asm	/^  ofo = tmp & IP_OFFMASK;$/;"	d
old_cwnd	obj/net/ns.asm	/^        old_cwnd = pcb->cwnd;$/;"	d
old_pending	obj/net/ns.asm	/^          old_pending = i;$/;"	d
old_queue	obj/net/ns.asm	/^          old_queue = i;$/;"	d
old_stable	obj/net/ns.asm	/^        old_stable = i;$/;"	d
oldest	obj/net/ns.asm	/^          oldest = r;$/;"	d
oldest	obj/net/ns.asm	/^    oldest = NULL;$/;"	d
omf	obj/net/ns.asm	/^  omf = tmp & IP_MF;$/;"	d
opt	obj/net/ns.asm	/^      opt = opts[c];$/;"	d
optdata	obj/net/ns.asm	/^    optdata = TCP_BUILD_MSS_OPTION();$/;"	d
optdata	obj/net/ns.asm	/^  optdata = TCP_BUILD_MSS_OPTION();$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_BROADCAST);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_DNS_SERVER);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_LEASE_TIME);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_ROUTER);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_SUBNET_MASK);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_T1);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_T2);$/;"	d
options	obj/net/ns.asm	/^        options = (u8_t *)&dhcp->msg_in->file;$/;"	d
options	obj/net/ns.asm	/^        options = (u8_t *)&dhcp->msg_in->sname;$/;"	d
options_ptr	obj/net/ns.asm	/^  options_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_MESSAGE_TYPE);$/;"	d
optname	obj/net/ns.asm	/^  optname = data->optname;$/;"	d
opts	obj/net/ns.asm	/^  opts = (u8_t *)tcphdr + TCP_HLEN;$/;"	d
optval	obj/net/ns.asm	/^  optval = data->optval;$/;"	d
original_iphdr	obj/net/ns.asm	/^  original_iphdr = p->payload;$/;"	d
other_datagrams	obj/net/ns.asm	/^    other_datagrams = 0;$/;"	d
out	obj/net/ns.asm	/^out:$/;"	l
outif	obj/net/ns.asm	/^  outif = ip_route(addr);$/;"	d
output_envid	obj/net/ns.asm	/^	output_envid = fork();$/;"	d
output_envid	obj/net/ns.asm	/^    output_envid = (envid_t *)netif->state;$/;"	d
ova	obj/net/ns.asm	/^	ova = fd2data(oldfd);$/;"	d
overload	obj/net/ns.asm	/^        overload = options[offset++];$/;"	d
p	obj/net/ns.asm	/^				p = "(null)";$/;"	d
p	obj/net/ns.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/net/ns.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/net/ns.asm	/^	p = sys_time_msec();$/;"	d
p	obj/net/ns.asm	/^          p = NULL;$/;"	d
p	obj/net/ns.asm	/^          p = p->next;$/;"	d
p	obj/net/ns.asm	/^        p = NULL;$/;"	d
p	obj/net/ns.asm	/^        p = p->next;$/;"	d
p	obj/net/ns.asm	/^        p = pbuf_alloc(PBUF_RAW, p->tot_len, PBUF_RAM);$/;"	d
p	obj/net/ns.asm	/^        p = q;$/;"	d
p	obj/net/ns.asm	/^      p = NULL;$/;"	d
p	obj/net/ns.asm	/^      p = inseg.p;$/;"	d
p	obj/net/ns.asm	/^      p = memp_malloc(MEMP_PBUF_POOL);$/;"	d
p	obj/net/ns.asm	/^      p = q;$/;"	d
p	obj/net/ns.asm	/^      p = r;$/;"	d
p	obj/net/ns.asm	/^    p = (struct pbuf*)mem_malloc(LWIP_MEM_ALIGN_SIZE(SIZEOF_STRUCT_PBUF + offset) + LWIP_MEM_ALIGN_SIZE(length));$/;"	d
p	obj/net/ns.asm	/^    p = ip_reass(p);$/;"	d
p	obj/net/ns.asm	/^    p = ipr->p;$/;"	d
p	obj/net/ns.asm	/^    p = iprh->next_pbuf;$/;"	d
p	obj/net/ns.asm	/^    p = memp_malloc(MEMP_PBUF);$/;"	d
p	obj/net/ns.asm	/^    p = p->next;$/;"	d
p	obj/net/ns.asm	/^    p = pbuf_alloc(PBUF_IP, TCP_HLEN, PBUF_RAM);$/;"	d
p	obj/net/ns.asm	/^    p = q->p;$/;"	d
p	obj/net/ns.asm	/^  p = NULL;$/;"	d
p	obj/net/ns.asm	/^  p = ipr->p;$/;"	d
p	obj/net/ns.asm	/^  p = mem_malloc(count * size);$/;"	d
p	obj/net/ns.asm	/^  p = pbuf_alloc(PBUF_IP, TCP_HLEN + 1, PBUF_RAM);$/;"	d
p	obj/net/ns.asm	/^  p = pbuf_alloc(PBUF_IP, TCP_HLEN, PBUF_RAM);$/;"	d
p	obj/net/ns.asm	/^  p = pbuf_alloc(PBUF_LINK, sizeof(struct etharp_hdr), PBUF_RAM);$/;"	d
p_from	obj/net/ns.asm	/^      p_from = p_from->next;$/;"	d
p_sock	obj/net/ns.asm	/^      p_sock = get_socket(i);$/;"	d
p_to	obj/net/ns.asm	/^      p_to = p_to->next;$/;"	d
padc	obj/net/ns.asm	/^			padc = '-';$/;"	d
padc	obj/net/ns.asm	/^			padc = '0';$/;"	d
payload	obj/net/ns.asm	/^  payload = p->payload;$/;"	d
pbufs_freed_current	obj/net/ns.asm	/^      pbufs_freed_current = ip_reass_free_complete_datagram(oldest, prev);$/;"	d
pcb	obj/net/ns.asm	/^        pcb = next;$/;"	d
pcb	obj/net/ns.asm	/^        pcb = pcb->next;$/;"	d
pcb	obj/net/ns.asm	/^      pcb = memp_malloc(MEMP_TCP_PCB);$/;"	d
pcb	obj/net/ns.asm	/^      pcb = pcb->next;$/;"	d
pcb	obj/net/ns.asm	/^      pcb = pcb2;$/;"	d
pcb	obj/net/ns.asm	/^      pcb = uncon_pcb;$/;"	d
pcb	obj/net/ns.asm	/^    pcb = NULL;$/;"	d
pcb	obj/net/ns.asm	/^    pcb = memp_malloc(MEMP_TCP_PCB);$/;"	d
pcb	obj/net/ns.asm	/^    pcb = pcb->next;$/;"	d
pcb	obj/net/ns.asm	/^    pcb = tcp_active_pcbs;$/;"	d
pcb	obj/net/ns.asm	/^  pcb = NULL;$/;"	d
pcb	obj/net/ns.asm	/^  pcb = conn->pcb.tcp;$/;"	d
pcb	obj/net/ns.asm	/^  pcb = memp_malloc(MEMP_RAW_PCB);$/;"	d
pcb	obj/net/ns.asm	/^  pcb = memp_malloc(MEMP_TCP_PCB);$/;"	d
pcb	obj/net/ns.asm	/^  pcb = memp_malloc(MEMP_UDP_PCB);$/;"	d
pcb	obj/net/ns.asm	/^  pcb = raw_pcbs;$/;"	d
pcb	obj/net/ns.asm	/^  pcb = tcp_active_pcbs;$/;"	d
pcb	obj/net/ns.asm	/^  pcb = tcp_tw_pcbs;$/;"	d
pcb2	obj/net/ns.asm	/^      pcb2 = pcb->next;$/;"	d
pcb_remove	obj/net/ns.asm	/^    pcb_remove = 0;$/;"	d
pcur	obj/net/ns.asm	/^    pcur = p;$/;"	d
perm	obj/net/ns.asm	/^		perm = 0;$/;"	d
perm	obj/net/ns.asm	/^	perm = PTE_P | PTE_U | PTE_W;$/;"	d
pg	obj/net/ns.asm	/^		pg = NULL;$/;"	d
pmem	obj/net/ns.asm	/^  pmem = (struct mem *)&ram[mem->prev];$/;"	d
poff	obj/net/ns.asm	/^    poff = newpbuflen;$/;"	d
port	obj/net/ns.asm	/^      port = netbuf_fromport(buf);$/;"	d
port	obj/net/ns.asm	/^    port = TCP_LOCAL_PORT_RANGE_START;$/;"	d
port	obj/net/ns.asm	/^    port = UDP_LOCAL_PORT_RANGE_START;$/;"	d
port	obj/net/ns.asm	/^    port = tcp_new_port();$/;"	d
precision	obj/net/ns.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/net/ns.asm	/^			precision = va_arg(ap, int);$/;"	d
prev	obj/net/ns.asm	/^          prev = NULL;$/;"	d
prev	obj/net/ns.asm	/^        prev = r;$/;"	d
prev	obj/net/ns.asm	/^      prev = pcb;$/;"	d
prev	obj/net/ns.asm	/^      prev = r;$/;"	d
prev	obj/net/ns.asm	/^    prev = NULL;$/;"	d
prev	obj/net/ns.asm	/^    prev = pcb;$/;"	d
prev	obj/net/ns.asm	/^  prev = NULL;    $/;"	d
prev	obj/net/ns.asm	/^  prev = NULL;$/;"	d
process_precision	obj/net/ns.asm	/^		process_precision:$/;"	l
proto	obj/net/ns.asm	/^  proto = IPH_PROTO(iphdr);$/;"	d
pte	obj/net/ns.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
ptr	obj/net/ns.asm	/^         ptr = ((struct mem *)&ram[ptr])->next) {$/;"	d
ptr	obj/net/ns.asm	/^    ptr = (void *)((u8_t *)ptr + seglen);$/;"	d
ptr	obj/net/ns.asm	/^  ptr = (u8_t *)mem - ram;$/;"	d
ptr	obj/net/ns.asm	/^  ptr = arg;$/;"	d
ptr2	obj/net/ns.asm	/^          ptr2 = ptr + SIZEOF_STRUCT_MEM + size;$/;"	d
ptr2	obj/net/ns.asm	/^    ptr2 = ptr + SIZEOF_STRUCT_MEM + newsize;$/;"	d
q	obj/net/ns.asm	/^          q = iprh->next_pbuf;$/;"	d
q	obj/net/ns.asm	/^        q = NULL;$/;"	d
q	obj/net/ns.asm	/^        q = iprh->next_pbuf;$/;"	d
q	obj/net/ns.asm	/^      q = memp_malloc(MEMP_PBUF_POOL);$/;"	d
q	obj/net/ns.asm	/^      q = p->next;$/;"	d
q	obj/net/ns.asm	/^    q = NULL;$/;"	d
q	obj/net/ns.asm	/^    q = iprh_tmp->next_pbuf;$/;"	d
q	obj/net/ns.asm	/^    q = mem_realloc(q, (u8_t *)q->payload - (u8_t *)q + rem_len);$/;"	d
q	obj/net/ns.asm	/^    q = p;$/;"	d
q	obj/net/ns.asm	/^    q = pbuf_alloc(PBUF_IP, 0, PBUF_RAM);$/;"	d
q	obj/net/ns.asm	/^    q = pbuf_alloc(PBUF_IP, UDP_HLEN, PBUF_RAM);$/;"	d
q	obj/net/ns.asm	/^    q = pbuf_alloc(PBUF_RAW, p->tot_len, PBUF_RAM);$/;"	d
q	obj/net/ns.asm	/^    q = q->next;$/;"	d
q	obj/net/ns.asm	/^  q = p->next;$/;"	d
q	obj/net/ns.asm	/^  q = p;$/;"	d
q	obj/net/ns.asm	/^  q = pbuf_alloc(PBUF_IP, sizeof(struct icmp_dur_hdr) + IP_HLEN + ICMP_DEST_UNREACH_DATASIZE,$/;"	d
queue	obj/net/ns.asm	/^      queue = seg;$/;"	d
queuelen	obj/net/ns.asm	/^  queuelen = pcb->snd_queuelen;$/;"	d
r	obj/net/ns.asm	/^				r = -E_TX_BAD_LEN;$/;"	d
r	obj/net/ns.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/net/ns.asm	/^			r = -E_INVAL;$/;"	d
r	obj/net/ns.asm	/^			r = 0;$/;"	d
r	obj/net/ns.asm	/^		r = -E_INVAL;$/;"	d
r	obj/net/ns.asm	/^		r = 0;$/;"	d
r	obj/net/ns.asm	/^		r = lwip_accept(req->accept.req_s, &ret.ret_addr,$/;"	d
r	obj/net/ns.asm	/^		r = lwip_bind(req->bind.req_s, &req->bind.req_name,$/;"	d
r	obj/net/ns.asm	/^		r = lwip_close(req->close.req_s);$/;"	d
r	obj/net/ns.asm	/^		r = lwip_connect(req->connect.req_s, &req->connect.req_name,$/;"	d
r	obj/net/ns.asm	/^		r = lwip_listen(req->listen.req_s, req->listen.req_backlog);$/;"	d
r	obj/net/ns.asm	/^		r = lwip_recv(req->recv.req_s, req->recvRet.ret_buf,$/;"	d
r	obj/net/ns.asm	/^		r = lwip_send(req->send.req_s, &req->send.req_buf,$/;"	d
r	obj/net/ns.asm	/^		r = lwip_shutdown(req->shutdown.req_s, req->shutdown.req_how);$/;"	d
r	obj/net/ns.asm	/^		r = lwip_socket(req->socket.req_domain, req->socket.req_type,$/;"	d
r	obj/net/ns.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/net/ns.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/net/ns.asm	/^              r = r->next;$/;"	d
r	obj/net/ns.asm	/^            r = arp_table[i].q;$/;"	d
r	obj/net/ns.asm	/^      r = iprh->next_pbuf;$/;"	d
r	obj/net/ns.asm	/^      r = pbuf_alloc(PBUF_LINK, p->tot_len, PBUF_RAM);$/;"	d
r	obj/net/ns.asm	/^      r = q;$/;"	d
r	obj/net/ns.asm	/^      r = r->next;$/;"	d
r	obj/net/ns.asm	/^    r = ((struct ip_reass_helper*)ipr->p->payload)->next_pbuf;$/;"	d
r	obj/net/ns.asm	/^    r = p;$/;"	d
r	obj/net/ns.asm	/^    r = q;$/;"	d
r	obj/net/ns.asm	/^    r = reassdatagrams;$/;"	d
r	obj/net/ns.asm	/^  r = reassdatagrams;$/;"	d
ram	obj/net/ns.asm	/^  ram = LWIP_MEM_ALIGN(ram_heap);$/;"	d
ram_end	obj/net/ns.asm	/^  ram_end = (struct mem *)&ram[MEM_SIZE_ALIGNED];$/;"	d
rambuf	obj/net/ns.asm	/^  rambuf = pbuf_alloc(PBUF_LINK, 0, PBUF_REF);$/;"	d
raw_pcbs	obj/net/ns.asm	/^            raw_pcbs = pcb;$/;"	d
raw_pcbs	obj/net/ns.asm	/^    raw_pcbs = pcb;$/;"	d
raw_pcbs	obj/net/ns.asm	/^    raw_pcbs = raw_pcbs->next;$/;"	d
rc	obj/net/ns.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reassdatagrams	obj/net/ns.asm	/^    reassdatagrams = ipr->next;$/;"	d
reassdatagrams	obj/net/ns.asm	/^  reassdatagrams = ipr;$/;"	d
rebind	obj/net/ns.asm	/^      rebind = 1;$/;"	d
rebind	obj/net/ns.asm	/^  rebind = 0;$/;"	d
recv_data	obj/net/ns.asm	/^              recv_data = cseg->p;$/;"	d
recv_data	obj/net/ns.asm	/^          recv_data = inseg.p;$/;"	d
recv_data	obj/net/ns.asm	/^    recv_data = NULL;$/;"	d
recv_flags	obj/net/ns.asm	/^            recv_flags = TF_GOT_FIN;$/;"	d
recv_flags	obj/net/ns.asm	/^          recv_flags = TF_GOT_FIN;$/;"	d
recv_flags	obj/net/ns.asm	/^      recv_flags = TF_CLOSED;$/;"	d
recv_flags	obj/net/ns.asm	/^      recv_flags = TF_RESET;$/;"	d
recv_flags	obj/net/ns.asm	/^    recv_flags = 0;$/;"	d
ref	obj/net/ns.asm	/^		ref = (uint32_t*) (ROUNDUP(mptr, PGSIZE) - 4);$/;"	d
ref	obj/net/ns.asm	/^	ref = (uint32_t*) (c + PGSIZE - 4);$/;"	d
ref	obj/net/ns.asm	/^	ref = (uint32_t*) (mptr + i - 4);$/;"	d
ref	obj/net/ns.asm	/^    ref = --(p->ref);$/;"	d
rem	obj/net/ns.asm	/^      rem = *ap % (u8_t)10;$/;"	d
rem_len	obj/net/ns.asm	/^    rem_len = length - p->len;$/;"	d
rem_len	obj/net/ns.asm	/^  rem_len = new_len;$/;"	d
remote_port	obj/net/ns.asm	/^    remote_port      = 0;$/;"	d
remote_port	obj/net/ns.asm	/^    remote_port      = ntohs(((struct sockaddr_in *)to)->sin_port);$/;"	d
remote_port	obj/net/ns.asm	/^    remote_port = pcb->remote_port;$/;"	d
req	obj/net/ns.asm	/^		req = ipc_recv((int32_t *) &whom, nsoutreq, &perm);$/;"	d
reqno	obj/net/ns.asm	/^		reqno = ipc_recv((int32_t *) &whom, (void *) va, &perm);$/;"	d
result	obj/net/ns.asm	/^          result = ERR_OK;$/;"	d
result	obj/net/ns.asm	/^      result = etharp_send_ip(netif, q, srcaddr, &(arp_table[i].ethaddr));$/;"	d
result	obj/net/ns.asm	/^    result = etharp_request(netif, ipaddr);$/;"	d
result	obj/net/ns.asm	/^  result = dhcp_create_request(netif);$/;"	d
result	obj/net/ns.asm	/^  result = dhcp_discover(netif);$/;"	d
result	obj/net/ns.asm	/^  result = etharp_query(netif, &dhcp->offered_ip_addr, NULL);$/;"	d
result	obj/net/ns.asm	/^  result = netif->linkoutput(netif, p);$/;"	d
reswitch	obj/net/ns.asm	/^	reswitch:$/;"	l
ret	obj/net/ns.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/net/ns.asm	/^	ret = dst;$/;"	d
ret	obj/net/ns.asm	/^      ret = ip_output_if(p, &(iphdr->src), IP_HDRINCL,$/;"	d
ret	obj/net/ns.asm	/^    ret = pbuf_copy_partial(dhcp->p, dhcp->options_in, dhcp->options_in_len, sizeof(struct dhcp_msg) - DHCP_OPTIONS_LEN);$/;"	d
ret	obj/net/ns.asm	/^  ret = pbuf_copy_partial(dhcp->p, dhcp->msg_in, sizeof(struct dhcp_msg) - DHCP_OPTIONS_LEN, 0);$/;"	d
ret	obj/net/ns.asm	/^  ret = tcp_enqueue(pcb, NULL, 0, TCP_SYN, 0, (u8_t *)&optdata, 4);$/;"	d
right_wnd_edge	obj/net/ns.asm	/^    right_wnd_edge = pcb->snd_wnd + pcb->snd_wl1;$/;"	d
rp	obj/net/ns.asm	/^  rp = str;$/;"	d
rseg	obj/net/ns.asm	/^      rseg = pcb->unacked;$/;"	d
s	obj/net/ns.asm	/^	s = src;$/;"	d
s	obj/net/ns.asm	/^    s = conn->socket;$/;"	d
s	obj/net/ns.asm	/^  s = data->s;$/;"	d
s8_t	obj/net/ns.asm	/^s8_t$/;"	l
seg	obj/net/ns.asm	/^      seg = NULL;$/;"	d
seg	obj/net/ns.asm	/^    seg = memp_malloc(MEMP_TCP_SEG);$/;"	d
seg	obj/net/ns.asm	/^    seg = next;$/;"	d
seg	obj/net/ns.asm	/^    seg = pcb->unsent;$/;"	d
seg	obj/net/ns.asm	/^  seg = pcb->unacked->next;$/;"	d
seg	obj/net/ns.asm	/^  seg = pcb->unacked;$/;"	d
seg	obj/net/ns.asm	/^  seg = pcb->unsent;$/;"	d
seglen	obj/net/ns.asm	/^    seglen = left > pcb->mss? pcb->mss: left;$/;"	d
seglen	obj/net/ns.asm	/^  seglen = 0;$/;"	d
select_cb_list	obj/net/ns.asm	/^      select_cb_list = select_cb.next;$/;"	d
select_cb_list	obj/net/ns.asm	/^    select_cb_list = &select_cb;$/;"	d
selectsem	obj/net/ns.asm	/^  selectsem = sys_sem_new(1);$/;"	d
sendmss	obj/net/ns.asm	/^    sendmss = LWIP_MIN(sendmss, mss_s);$/;"	d
seqno	obj/net/ns.asm	/^          seqno = pcb->ooseq->tcphdr->seqno;$/;"	d
seqno	obj/net/ns.asm	/^    seqno = pcb->snd_nxt;$/;"	d
seqno	obj/net/ns.asm	/^  seqno = pcb->snd_lbb;$/;"	d
seqno	obj/net/ns.asm	/^  seqno = tcphdr->seqno = ntohl(tcphdr->seqno);$/;"	d
size	obj/net/ns.asm	/^    size = MIN_SIZE_ALIGNED;$/;"	d
size	obj/net/ns.asm	/^  size = LWIP_MEM_ALIGN_SIZE(size);$/;"	d
size	obj/net/ns.asm	/^  size = mem->next - ptr - SIZEOF_STRUCT_MEM;$/;"	d
size_t	obj/net/ns.asm	/^size_t$/;"	l
so	obj/net/ns.asm	/^       so do nothing here! *\/$/;"	d
sock	obj/net/ns.asm	/^    sock = get_socket(s);$/;"	d
sock	obj/net/ns.asm	/^  sock = &sockets[s];$/;"	d
sock	obj/net/ns.asm	/^  sock = data->sock;$/;"	d
sock	obj/net/ns.asm	/^  sock = get_socket(s);$/;"	d
socksem	obj/net/ns.asm	/^  socksem   = sys_sem_new(1);$/;"	d
src	obj/net/ns.asm	/^    src = (*octetptr) << 8;$/;"	d
src	obj/net/ns.asm	/^  src = ntohs(udphdr->src);$/;"	d
src_ip	obj/net/ns.asm	/^    src_ip = &(netif->ip_addr);$/;"	d
ssize_t	obj/net/ns.asm	/^ssize_t$/;"	l
stacktop	obj/net/ns.asm	/^    stacktop = stacktop - 4;$/;"	d
start	obj/net/ns.asm	/^	start = sys_time_msec();$/;"	d
static	obj/net/ns.asm	/^static LIST_HEAD(thread_list, sys_thread) threads[thread_hash_size];$/;"	l
static	obj/net/ns.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/net/ns.asm	/^static err_t$/;"	l
static	obj/net/ns.asm	/^static inline struct thread_context *$/;"	l
static	obj/net/ns.asm	/^static inline void $/;"	l
static	obj/net/ns.asm	/^static inline void$/;"	l
static	obj/net/ns.asm	/^static int$/;"	l
static	obj/net/ns.asm	/^static long long$/;"	l
static	obj/net/ns.asm	/^static ssize_t$/;"	l
static	obj/net/ns.asm	/^static struct ip_reassdata*$/;"	t
static	obj/net/ns.asm	/^static struct lwip_socket *$/;"	t
static	obj/net/ns.asm	/^static struct pbuf *$/;"	t
static	obj/net/ns.asm	/^static struct thread_queue kill_queue;$/;"	t
static	obj/net/ns.asm	/^static struct thread_queue thread_queue;$/;"	t
static	obj/net/ns.asm	/^static thread_id_t$/;"	l
static	obj/net/ns.asm	/^static u16_t$/;"	l
static	obj/net/ns.asm	/^static u32_t dhcp_get_option_long(u8_t *ptr)$/;"	l
static	obj/net/ns.asm	/^static u8_t *dhcp_get_option_ptr(struct dhcp *dhcp, u8_t option_type)$/;"	l
static	obj/net/ns.asm	/^static u8_t$/;"	l
static	obj/net/ns.asm	/^static unsigned long long$/;"	l
static	obj/net/ns.asm	/^static void *$/;"	l
static	obj/net/ns.asm	/^static void __attribute__((noreturn))$/;"	l
static	obj/net/ns.asm	/^static void dhcp_free_reply(struct dhcp *dhcp)$/;"	l
static	obj/net/ns.asm	/^static void dhcp_recv(void *arg, struct udp_pcb *pcb, struct pbuf *p, struct ip_addr *addr, u16_t port)$/;"	l
static	obj/net/ns.asm	/^static void$/;"	l
stop	obj/net/ns.asm	/^			stop = sys_time_msec() + to;$/;"	d
swapped	obj/net/ns.asm	/^      swapped = 1 - swapped;$/;"	d
swapped	obj/net/ns.asm	/^  swapped = 0;$/;"	d
sys_mbox_t	obj/net/ns.asm	/^sys_mbox_t$/;"	l
sys_sem_t	obj/net/ns.asm	/^sys_sem_t$/;"	l
sys_thread_t	obj/net/ns.asm	/^sys_thread_t$/;"	l
t	obj/net/ns.asm	/^    t = malloc(sizeof(*t));$/;"	d
tail_gone	obj/net/ns.asm	/^    tail_gone = pbuf_free(q);$/;"	d
tc	obj/net/ns.asm	/^	tc = tc->tc_queue_link;$/;"	d
tcp_active_pcbs	obj/net/ns.asm	/^        tcp_active_pcbs = pcb->next;$/;"	d
tcp_active_pcbs	obj/net/ns.asm	/^        tcp_active_pcbs = pcb;$/;"	d
tcp_input_pcb	obj/net/ns.asm	/^    tcp_input_pcb = NULL;$/;"	d
tcp_input_pcb	obj/net/ns.asm	/^    tcp_input_pcb = pcb;$/;"	d
tcp_tw_pcbs	obj/net/ns.asm	/^        tcp_tw_pcbs = pcb->next;$/;"	d
tcphdr	obj/net/ns.asm	/^    tcphdr = p->payload;$/;"	d
tcphdr	obj/net/ns.asm	/^  tcphdr = (struct tcp_hdr *)((u8_t *)p->payload + IPH_HL(iphdr) * 4);$/;"	d
tcphdr	obj/net/ns.asm	/^  tcphdr = p->payload;$/;"	d
tcpip_init_done	obj/net/ns.asm	/^  tcpip_init_done = initfunc;$/;"	d
tcpip_init_done_arg	obj/net/ns.asm	/^  tcpip_init_done_arg = arg;$/;"	d
tcpip_tcp_timer_active	obj/net/ns.asm	/^    tcpip_tcp_timer_active = 0;$/;"	d
tcpip_tcp_timer_active	obj/net/ns.asm	/^    tcpip_tcp_timer_active = 1;$/;"	d
tcplen	obj/net/ns.asm	/^        tcplen = TCP_TCPLEN(&inseg);$/;"	d
tcplen	obj/net/ns.asm	/^  tcplen = p->tot_len + ((flags & TCP_FIN || flags & TCP_SYN)? 1: 0);$/;"	d
tehdr	obj/net/ns.asm	/^  tehdr = q->payload;$/;"	d
thisenv	obj/net/ns.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/net/ns.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
time_needed	obj/net/ns.asm	/^      time_needed = SYS_ARCH_TIMEOUT;$/;"	d
time_needed	obj/net/ns.asm	/^      time_needed = sys_arch_mbox_fetch(mbox, msg, timeouts->next->time);$/;"	d
time_needed	obj/net/ns.asm	/^      time_needed = sys_arch_sem_wait(sem, timeouts->next->time);$/;"	d
time_needed	obj/net/ns.asm	/^    time_needed = sys_arch_mbox_fetch(mbox, msg, 0);$/;"	d
timeout	obj/net/ns.asm	/^      timeout = 0xffff;$/;"	d
timeout	obj/net/ns.asm	/^    timeout = (dhcp->offered_t1_renew + DHCP_COARSE_TIMER_SECS \/ 2) \/ DHCP_COARSE_TIMER_SECS;$/;"	d
timeout	obj/net/ns.asm	/^    timeout = (dhcp->offered_t2_rebind + DHCP_COARSE_TIMER_SECS \/ 2) \/ DHCP_COARSE_TIMER_SECS;$/;"	d
timeout	obj/net/ns.asm	/^  timeout = memp_malloc(MEMP_SYS_TIMEOUT);$/;"	d
timeouts	obj/net/ns.asm	/^  timeouts = sys_arch_timeouts();$/;"	d
timer_envid	obj/net/ns.asm	/^	timer_envid = fork();$/;"	d
tmp	obj/net/ns.asm	/^      tmp = r;$/;"	d
tmp	obj/net/ns.asm	/^      tmp = tmp | IP_MF;$/;"	d
tmp	obj/net/ns.asm	/^    tmp = omf | (IP_OFFMASK & (ofo));$/;"	d
tmp	obj/net/ns.asm	/^  tmp = ntohs(IPH_OFFSET(iphdr));$/;"	d
tmptimeout	obj/net/ns.asm	/^      tmptimeout = timeouts->next;$/;"	d
to	obj/net/ns.asm	/^			to = ipc_recv((int32_t *) &whom, 0, 0);$/;"	d
to	obj/net/ns.asm	/^	to = TIMER_INTERVAL - (now - start);$/;"	d
type	obj/net/ns.asm	/^      type = p->type;$/;"	d
type	obj/net/ns.asm	/^  type = *((u8_t *)p->payload);$/;"	d
type	obj/net/ns.asm	/^  type = p->type;$/;"	d
u16_t	obj/net/ns.asm	/^u16_t$/;"	l
u32_t	obj/net/ns.asm	/^u32_t $/;"	l
u32_t	obj/net/ns.asm	/^u32_t$/;"	l
u8_t	obj/net/ns.asm	/^u8_t ip_addr_isbroadcast(struct ip_addr *addr, struct netif *netif)$/;"	l
u8_t	obj/net/ns.asm	/^u8_t netif_is_up(struct netif *netif)$/;"	l
u8_t	obj/net/ns.asm	/^u8_t$/;"	l
udp_pcbs	obj/net/ns.asm	/^          udp_pcbs = pcb;$/;"	d
udp_pcbs	obj/net/ns.asm	/^    udp_pcbs = pcb;$/;"	d
udp_pcbs	obj/net/ns.asm	/^    udp_pcbs = udp_pcbs->next;$/;"	d
udp_pcbs	obj/net/ns.asm	/^  udp_pcbs = pcb;$/;"	d
udphdr	obj/net/ns.asm	/^  udphdr = (struct udp_hdr *)p->payload;$/;"	d
udphdr	obj/net/ns.asm	/^  udphdr = q->payload;$/;"	d
uint32_t	obj/net/ns.asm	/^uint32_t va = 0x0fffa000;$/;"	l
uint32_t	obj/net/ns.asm	/^uint32_t$/;"	l
uncon_pcb	obj/net/ns.asm	/^          uncon_pcb = pcb;$/;"	d
uncon_pcb	obj/net/ns.asm	/^    uncon_pcb = NULL;$/;"	d
union	obj/net/ns.asm	/^union Nsipc *ipcbuf;$/;"	l
union	obj/net/ns.asm	/^union Nsipc *nsoutreq = (union Nsipc *)0x0ffff000;$/;"	l
unsigned	obj/net/ns.asm	/^unsigned int$/;"	l
useg	obj/net/ns.asm	/^          useg = useg->next;$/;"	d
useg	obj/net/ns.asm	/^    useg = NULL;$/;"	d
useg	obj/net/ns.asm	/^  useg = pcb->unacked;$/;"	d
useg	obj/net/ns.asm	/^  useg = queue = seg = NULL;$/;"	d
v	obj/net/ns.asm	/^			v = mptr;$/;"	d
v	obj/net/ns.asm	/^	v = mptr;$/;"	d
va	obj/net/ns.asm	/^				va = nsoutreq->pkt.jp_data;$/;"	d
va	obj/net/ns.asm	/^		va = get_buffer();$/;"	d
va	obj/net/ns.asm	/^	va = (void *)(REQVA + i * PGSIZE);$/;"	d
va	obj/net/ns.asm	/^	va = fd2data(fd0);$/;"	d
val	obj/net/ns.asm	/^        val = (val * base) + (int)(c - '0');$/;"	d
val	obj/net/ns.asm	/^        val = (val << 4) | (int)(c + 10 - (islower(c) ? 'a' : 'A'));$/;"	d
val	obj/net/ns.asm	/^    val = 0;$/;"	d
valid	obj/net/ns.asm	/^            valid = 0;$/;"	d
valid	obj/net/ns.asm	/^          valid = 0;$/;"	d
valid	obj/net/ns.asm	/^        valid = 0;$/;"	d
value	obj/net/ns.asm	/^  value = (u32_t)(*ptr++) << 24;$/;"	d
void	obj/net/ns.asm	/^void *$/;"	l
void	obj/net/ns.asm	/^void *mem_calloc(mem_size_t count, mem_size_t size)$/;"	l
void	obj/net/ns.asm	/^void dhcp_arp_reply(struct netif *netif, struct ip_addr *addr)$/;"	l
void	obj/net/ns.asm	/^void netif_remove(struct netif * netif)$/;"	l
void	obj/net/ns.asm	/^void netif_set_down(struct netif *netif)$/;"	l
void	obj/net/ns.asm	/^void netif_set_up(struct netif *netif)$/;"	l
void	obj/net/ns.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/net/ns.asm	/^void$/;"	l
we	obj/net/ns.asm	/^       we do NOT return to the application thread, since ERR_MEM is$/;"	d
width	obj/net/ns.asm	/^				width = 0;$/;"	d
width	obj/net/ns.asm	/^				width = precision, precision = -1;$/;"	d
wnd	obj/net/ns.asm	/^  wnd = LWIP_MIN(pcb->snd_wnd, pcb->cwnd);$/;"	d
write_finished	obj/net/ns.asm	/^      write_finished = 1;$/;"	d
write_finished	obj/net/ns.asm	/^    write_finished = 1;$/;"	d
ASM	obj/net/testinput.asm	/^#define ASM 1$/;"	d
Disassembly	obj/net/testinput.asm	/^Disassembly of section .text:$/;"	l
_pgfault_handler	obj/net/testinput.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	obj/net/testinput.asm	/^_pgfault_upcall:$/;"	l
_start	obj/net/testinput.asm	/^_start:$/;"	l
addr	obj/net/testinput.asm	/^	addr = (void *)ROUNDDOWN(addr, PGSIZE);$/;"	d
altflag	obj/net/testinput.asm	/^			altflag = 1;$/;"	d
altflag	obj/net/testinput.asm	/^		altflag = 0;$/;"	d
ap	obj/net/testinput.asm	/^  ap = (u8_t *)&s_addr;$/;"	d
args_exist	obj/net/testinput.asm	/^args_exist:$/;"	l
base	obj/net/testinput.asm	/^			base = 10;$/;"	d
base	obj/net/testinput.asm	/^			base = 16;$/;"	d
base	obj/net/testinput.asm	/^			base = 8;$/;"	d
base	obj/net/testinput.asm	/^		base = 10;$/;"	d
base	obj/net/testinput.asm	/^        base = 16;$/;"	d
base	obj/net/testinput.asm	/^        base = 8;$/;"	d
base	obj/net/testinput.asm	/^    base = 10;$/;"	d
binaryname	obj/net/testinput.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/net/testinput.asm	/^	binaryname = "ns_input";$/;"	d
binaryname	obj/net/testinput.asm	/^	binaryname = "ns_output";$/;"	d
binaryname	obj/net/testinput.asm	/^	binaryname = "ns_timer";$/;"	d
binaryname	obj/net/testinput.asm	/^	binaryname = "testinput";$/;"	d
buf	obj/net/testinput.asm	/^	buf = vbuf;$/;"	d
c	obj/net/testinput.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/net/testinput.asm	/^        c = *++cp;$/;"	d
c	obj/net/testinput.asm	/^      c = *++cp;$/;"	d
c	obj/net/testinput.asm	/^  c = *cp;$/;"	d
ch	obj/net/testinput.asm	/^				ch = *fmt;$/;"	d
char	obj/net/testinput.asm	/^char *$/;"	l
clrflag	obj/net/testinput.asm	/^		clrflag = 0;$/;"	d
cnt	obj/net/testinput.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/net/testinput.asm	/^				color = 0;$/;"	d
color	obj/net/testinput.asm	/^			color = 0;$/;"	d
colorswitch	obj/net/testinput.asm	/^	colorswitch:$/;"	l
const	obj/net/testinput.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/net/testinput.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/net/testinput.asm	/^	d = dst;$/;"	d
default	obj/net/testinput.asm	/^		default:$/;"	l
dig	obj/net/testinput.asm	/^			dig = *s - '0';$/;"	d
dig	obj/net/testinput.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/net/testinput.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/net/testinput.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/net/testinput.asm	/^envid_t$/;"	l
err	obj/net/testinput.asm	/^				err = -err;$/;"	d
err	obj/net/testinput.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/net/testinput.asm	/^    err:$/;"	l
err	obj/net/testinput.asm	/^err:$/;"	l
err1	obj/net/testinput.asm	/^    err1:$/;"	l
err2	obj/net/testinput.asm	/^    err2:$/;"	l
err3	obj/net/testinput.asm	/^    err3:$/;"	l
extern	obj/net/testinput.asm	/^extern union Nsipc nsipcbuf;$/;"	l
fd	obj/net/testinput.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/net/testinput.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
first	obj/net/testinput.asm	/^		first = 0;$/;"	d
fsenv	obj/net/testinput.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
i	obj/net/testinput.asm	/^    i = 0;$/;"	d
input_envid	obj/net/testinput.asm	/^	input_envid = fork();$/;"	d
int	obj/net/testinput.asm	/^int $/;"	l
int	obj/net/testinput.asm	/^int color;$/;"	l
int	obj/net/testinput.asm	/^int$/;"	l
int32_t	obj/net/testinput.asm	/^int32_t$/;"	l
ipcbuf	obj/net/testinput.asm	/^		ipcbuf = (union Nsipc *)va;$/;"	d
lflag	obj/net/testinput.asm	/^		lflag = 0;$/;"	d
long	obj/net/testinput.asm	/^long$/;"	l
m	obj/net/testinput.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/net/testinput.asm	/^		m = n - tot;$/;"	d
m	obj/net/testinput.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/net/testinput.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/net/testinput.asm	/^  n = pp - parts + 1;$/;"	d
newfd	obj/net/testinput.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/net/testinput.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/net/testinput.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/net/testinput.asm	/^				num = -(long long) num;$/;"	d
num	obj/net/testinput.asm	/^			num = (unsigned long long)$/;"	d
num	obj/net/testinput.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/net/testinput.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/net/testinput.asm	/^		number:$/;"	l
nva	obj/net/testinput.asm	/^	nva = fd2data(newfd);$/;"	d
out	obj/net/testinput.asm	/^			out = buf + snprintf(buf, end - buf,$/;"	d
output_envid	obj/net/testinput.asm	/^	output_envid = fork();$/;"	d
ova	obj/net/testinput.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/net/testinput.asm	/^				p = "(null)";$/;"	d
p	obj/net/testinput.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/net/testinput.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/net/testinput.asm	/^			padc = '-';$/;"	d
padc	obj/net/testinput.asm	/^			padc = '0';$/;"	d
perm	obj/net/testinput.asm	/^		perm = 0;$/;"	d
perm	obj/net/testinput.asm	/^	perm = PTE_P | PTE_U | PTE_W;$/;"	d
pg	obj/net/testinput.asm	/^		pg = NULL;$/;"	d
precision	obj/net/testinput.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/net/testinput.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/net/testinput.asm	/^		process_precision:$/;"	l
pte	obj/net/testinput.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/net/testinput.asm	/^				r = -E_TX_BAD_LEN;$/;"	d
r	obj/net/testinput.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/net/testinput.asm	/^			r = -E_INVAL;$/;"	d
r	obj/net/testinput.asm	/^			r = 0;$/;"	d
r	obj/net/testinput.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/net/testinput.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/net/testinput.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rem	obj/net/testinput.asm	/^      rem = *ap % (u8_t)10;$/;"	d
req	obj/net/testinput.asm	/^		req = ipc_recv((int32_t *) &whom, nsoutreq, &perm);$/;"	d
reswitch	obj/net/testinput.asm	/^	reswitch:$/;"	l
ret	obj/net/testinput.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/net/testinput.asm	/^	ret = dst;$/;"	d
rp	obj/net/testinput.asm	/^  rp = str;$/;"	d
s	obj/net/testinput.asm	/^	s = src;$/;"	d
size_t	obj/net/testinput.asm	/^size_t$/;"	l
ssize_t	obj/net/testinput.asm	/^ssize_t$/;"	l
static	obj/net/testinput.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/net/testinput.asm	/^static int$/;"	l
static	obj/net/testinput.asm	/^static long long$/;"	l
static	obj/net/testinput.asm	/^static ssize_t$/;"	l
static	obj/net/testinput.asm	/^static unsigned long long$/;"	l
static	obj/net/testinput.asm	/^static void$/;"	l
stop	obj/net/testinput.asm	/^			stop = sys_time_msec() + to;$/;"	d
thisenv	obj/net/testinput.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/net/testinput.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
to	obj/net/testinput.asm	/^			to = ipc_recv((int32_t *) &whom, 0, 0);$/;"	d
u16_t	obj/net/testinput.asm	/^u16_t$/;"	l
u32_t	obj/net/testinput.asm	/^u32_t$/;"	l
uint32_t	obj/net/testinput.asm	/^uint32_t va = 0x0fffa000;$/;"	l
union	obj/net/testinput.asm	/^union Nsipc *ipcbuf;$/;"	l
union	obj/net/testinput.asm	/^union Nsipc *nsoutreq = (union Nsipc *)0x0ffff000;$/;"	l
unsigned	obj/net/testinput.asm	/^unsigned int$/;"	l
va	obj/net/testinput.asm	/^				va = nsoutreq->pkt.jp_data;$/;"	d
va	obj/net/testinput.asm	/^	va = fd2data(fd0);$/;"	d
val	obj/net/testinput.asm	/^        val = (val * base) + (int)(c - '0');$/;"	d
val	obj/net/testinput.asm	/^        val = (val << 4) | (int)(c + 10 - (islower(c) ? 'a' : 'A'));$/;"	d
val	obj/net/testinput.asm	/^    val = 0;$/;"	d
void	obj/net/testinput.asm	/^void *$/;"	l
void	obj/net/testinput.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/net/testinput.asm	/^void$/;"	l
width	obj/net/testinput.asm	/^				width = 0;$/;"	d
width	obj/net/testinput.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/net/testoutput.asm	/^#define ASM 1$/;"	d
Disassembly	obj/net/testoutput.asm	/^Disassembly of section .text:$/;"	l
_pgfault_handler	obj/net/testoutput.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	obj/net/testoutput.asm	/^_pgfault_upcall:$/;"	l
_start	obj/net/testoutput.asm	/^_start:$/;"	l
addr	obj/net/testoutput.asm	/^	addr = (void *)ROUNDDOWN(addr, PGSIZE);$/;"	d
altflag	obj/net/testoutput.asm	/^			altflag = 1;$/;"	d
altflag	obj/net/testoutput.asm	/^		altflag = 0;$/;"	d
args_exist	obj/net/testoutput.asm	/^args_exist:$/;"	l
base	obj/net/testoutput.asm	/^			base = 10;$/;"	d
base	obj/net/testoutput.asm	/^			base = 16;$/;"	d
base	obj/net/testoutput.asm	/^			base = 8;$/;"	d
base	obj/net/testoutput.asm	/^		base = 10;$/;"	d
binaryname	obj/net/testoutput.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/net/testoutput.asm	/^	binaryname = "ns_input";$/;"	d
binaryname	obj/net/testoutput.asm	/^	binaryname = "ns_output";$/;"	d
binaryname	obj/net/testoutput.asm	/^	binaryname = "ns_timer";$/;"	d
binaryname	obj/net/testoutput.asm	/^	binaryname = "testoutput";$/;"	d
buf	obj/net/testoutput.asm	/^	buf = vbuf;$/;"	d
c	obj/net/testoutput.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/net/testoutput.asm	/^				ch = *fmt;$/;"	d
char	obj/net/testoutput.asm	/^char *$/;"	l
clrflag	obj/net/testoutput.asm	/^		clrflag = 0;$/;"	d
cnt	obj/net/testoutput.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/net/testoutput.asm	/^				color = 0;$/;"	d
color	obj/net/testoutput.asm	/^			color = 0;$/;"	d
colorswitch	obj/net/testoutput.asm	/^	colorswitch:$/;"	l
const	obj/net/testoutput.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/net/testoutput.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/net/testoutput.asm	/^	d = dst;$/;"	d
default	obj/net/testoutput.asm	/^		default:$/;"	l
dig	obj/net/testoutput.asm	/^			dig = *s - '0';$/;"	d
dig	obj/net/testoutput.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/net/testoutput.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/net/testoutput.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/net/testoutput.asm	/^envid_t$/;"	l
err	obj/net/testoutput.asm	/^				err = -err;$/;"	d
err	obj/net/testoutput.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/net/testoutput.asm	/^    err:$/;"	l
err	obj/net/testoutput.asm	/^err:$/;"	l
err1	obj/net/testoutput.asm	/^    err1:$/;"	l
err2	obj/net/testoutput.asm	/^    err2:$/;"	l
err3	obj/net/testoutput.asm	/^    err3:$/;"	l
extern	obj/net/testoutput.asm	/^extern union Nsipc nsipcbuf;$/;"	l
fd	obj/net/testoutput.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/net/testoutput.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/net/testoutput.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/net/testoutput.asm	/^int $/;"	l
int	obj/net/testoutput.asm	/^int color;$/;"	l
int	obj/net/testoutput.asm	/^int$/;"	l
int32_t	obj/net/testoutput.asm	/^int32_t$/;"	l
ipcbuf	obj/net/testoutput.asm	/^		ipcbuf = (union Nsipc *)va;$/;"	d
lflag	obj/net/testoutput.asm	/^		lflag = 0;$/;"	d
long	obj/net/testoutput.asm	/^long$/;"	l
m	obj/net/testoutput.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/net/testoutput.asm	/^		m = n - tot;$/;"	d
m	obj/net/testoutput.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/net/testoutput.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/net/testoutput.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/net/testoutput.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/net/testoutput.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/net/testoutput.asm	/^				num = -(long long) num;$/;"	d
num	obj/net/testoutput.asm	/^			num = (unsigned long long)$/;"	d
num	obj/net/testoutput.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/net/testoutput.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/net/testoutput.asm	/^		number:$/;"	l
nva	obj/net/testoutput.asm	/^	nva = fd2data(newfd);$/;"	d
output_envid	obj/net/testoutput.asm	/^	output_envid = fork();$/;"	d
ova	obj/net/testoutput.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/net/testoutput.asm	/^				p = "(null)";$/;"	d
p	obj/net/testoutput.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/net/testoutput.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/net/testoutput.asm	/^			padc = '-';$/;"	d
padc	obj/net/testoutput.asm	/^			padc = '0';$/;"	d
perm	obj/net/testoutput.asm	/^		perm = 0;$/;"	d
perm	obj/net/testoutput.asm	/^	perm = PTE_P | PTE_U | PTE_W;$/;"	d
pg	obj/net/testoutput.asm	/^		pg = NULL;$/;"	d
precision	obj/net/testoutput.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/net/testoutput.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/net/testoutput.asm	/^		process_precision:$/;"	l
pte	obj/net/testoutput.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/net/testoutput.asm	/^				r = -E_TX_BAD_LEN;$/;"	d
r	obj/net/testoutput.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/net/testoutput.asm	/^			r = -E_INVAL;$/;"	d
r	obj/net/testoutput.asm	/^			r = 0;$/;"	d
r	obj/net/testoutput.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/net/testoutput.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/net/testoutput.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
req	obj/net/testoutput.asm	/^		req = ipc_recv((int32_t *) &whom, nsoutreq, &perm);$/;"	d
reswitch	obj/net/testoutput.asm	/^	reswitch:$/;"	l
ret	obj/net/testoutput.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/net/testoutput.asm	/^	ret = dst;$/;"	d
s	obj/net/testoutput.asm	/^	s = src;$/;"	d
size_t	obj/net/testoutput.asm	/^size_t$/;"	l
ssize_t	obj/net/testoutput.asm	/^ssize_t$/;"	l
static	obj/net/testoutput.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/net/testoutput.asm	/^static int$/;"	l
static	obj/net/testoutput.asm	/^static long long$/;"	l
static	obj/net/testoutput.asm	/^static ssize_t$/;"	l
static	obj/net/testoutput.asm	/^static struct jif_pkt *pkt = (struct jif_pkt*)REQVA;$/;"	t
static	obj/net/testoutput.asm	/^static unsigned long long$/;"	l
static	obj/net/testoutput.asm	/^static void$/;"	l
stop	obj/net/testoutput.asm	/^			stop = sys_time_msec() + to;$/;"	d
thisenv	obj/net/testoutput.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/net/testoutput.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
to	obj/net/testoutput.asm	/^			to = ipc_recv((int32_t *) &whom, 0, 0);$/;"	d
uint32_t	obj/net/testoutput.asm	/^uint32_t va = 0x0fffa000;$/;"	l
union	obj/net/testoutput.asm	/^union Nsipc *ipcbuf;$/;"	l
union	obj/net/testoutput.asm	/^union Nsipc *nsoutreq = (union Nsipc *)0x0ffff000;$/;"	l
unsigned	obj/net/testoutput.asm	/^unsigned int$/;"	l
va	obj/net/testoutput.asm	/^				va = nsoutreq->pkt.jp_data;$/;"	d
va	obj/net/testoutput.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/net/testoutput.asm	/^void *$/;"	l
void	obj/net/testoutput.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/net/testoutput.asm	/^void$/;"	l
width	obj/net/testoutput.asm	/^				width = 0;$/;"	d
width	obj/net/testoutput.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/badsegment.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/badsegment.asm	/^Disassembly of section .text:$/;"	l
_start	obj/user/badsegment.asm	/^_start:$/;"	l
altflag	obj/user/badsegment.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/badsegment.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/badsegment.asm	/^args_exist:$/;"	l
base	obj/user/badsegment.asm	/^			base = 10;$/;"	d
base	obj/user/badsegment.asm	/^			base = 16;$/;"	d
base	obj/user/badsegment.asm	/^			base = 8;$/;"	d
base	obj/user/badsegment.asm	/^		base = 10;$/;"	d
binaryname	obj/user/badsegment.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/badsegment.asm	/^	buf = vbuf;$/;"	d
c	obj/user/badsegment.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/badsegment.asm	/^				ch = *fmt;$/;"	d
char	obj/user/badsegment.asm	/^char *$/;"	l
clrflag	obj/user/badsegment.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/badsegment.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/badsegment.asm	/^				color = 0;$/;"	d
color	obj/user/badsegment.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/badsegment.asm	/^	colorswitch:$/;"	l
const	obj/user/badsegment.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/badsegment.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/badsegment.asm	/^	d = dst;$/;"	d
default	obj/user/badsegment.asm	/^		default:$/;"	l
dig	obj/user/badsegment.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/badsegment.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/badsegment.asm	/^envid_t$/;"	l
err	obj/user/badsegment.asm	/^				err = -err;$/;"	d
err	obj/user/badsegment.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/badsegment.asm	/^    err:$/;"	l
err	obj/user/badsegment.asm	/^err:$/;"	l
err1	obj/user/badsegment.asm	/^    err1:$/;"	l
err2	obj/user/badsegment.asm	/^    err2:$/;"	l
err3	obj/user/badsegment.asm	/^    err3:$/;"	l
fd	obj/user/badsegment.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/badsegment.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/badsegment.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/badsegment.asm	/^int $/;"	l
int	obj/user/badsegment.asm	/^int color;$/;"	l
int	obj/user/badsegment.asm	/^int$/;"	l
int32_t	obj/user/badsegment.asm	/^int32_t$/;"	l
lflag	obj/user/badsegment.asm	/^		lflag = 0;$/;"	d
long	obj/user/badsegment.asm	/^long$/;"	l
m	obj/user/badsegment.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/badsegment.asm	/^		m = n - tot;$/;"	d
m	obj/user/badsegment.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/badsegment.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/badsegment.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/badsegment.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/badsegment.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/badsegment.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/badsegment.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/badsegment.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/badsegment.asm	/^		number:$/;"	l
nva	obj/user/badsegment.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/badsegment.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/badsegment.asm	/^				p = "(null)";$/;"	d
p	obj/user/badsegment.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/badsegment.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/badsegment.asm	/^			padc = '-';$/;"	d
padc	obj/user/badsegment.asm	/^			padc = '0';$/;"	d
precision	obj/user/badsegment.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/badsegment.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/badsegment.asm	/^		process_precision:$/;"	l
pte	obj/user/badsegment.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/badsegment.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/badsegment.asm	/^			r = 0;$/;"	d
r	obj/user/badsegment.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/badsegment.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/badsegment.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/badsegment.asm	/^	reswitch:$/;"	l
ret	obj/user/badsegment.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/badsegment.asm	/^	ret = dst;$/;"	d
s	obj/user/badsegment.asm	/^	s = src;$/;"	d
size_t	obj/user/badsegment.asm	/^size_t$/;"	l
ssize_t	obj/user/badsegment.asm	/^ssize_t$/;"	l
static	obj/user/badsegment.asm	/^static int$/;"	l
static	obj/user/badsegment.asm	/^static long long$/;"	l
static	obj/user/badsegment.asm	/^static ssize_t$/;"	l
static	obj/user/badsegment.asm	/^static unsigned long long$/;"	l
static	obj/user/badsegment.asm	/^static void$/;"	l
thisenv	obj/user/badsegment.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/badsegment.asm	/^unsigned int$/;"	l
va	obj/user/badsegment.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/badsegment.asm	/^void *$/;"	l
void	obj/user/badsegment.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/badsegment.asm	/^void$/;"	l
width	obj/user/badsegment.asm	/^				width = 0;$/;"	d
width	obj/user/badsegment.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/breakpoint.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/breakpoint.asm	/^Disassembly of section .text:$/;"	l
_start	obj/user/breakpoint.asm	/^_start:$/;"	l
altflag	obj/user/breakpoint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/breakpoint.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/breakpoint.asm	/^args_exist:$/;"	l
base	obj/user/breakpoint.asm	/^			base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 16;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 8;$/;"	d
base	obj/user/breakpoint.asm	/^		base = 10;$/;"	d
binaryname	obj/user/breakpoint.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/breakpoint.asm	/^	buf = vbuf;$/;"	d
c	obj/user/breakpoint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/breakpoint.asm	/^				ch = *fmt;$/;"	d
char	obj/user/breakpoint.asm	/^char *$/;"	l
clrflag	obj/user/breakpoint.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/breakpoint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/breakpoint.asm	/^				color = 0;$/;"	d
color	obj/user/breakpoint.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/breakpoint.asm	/^	colorswitch:$/;"	l
const	obj/user/breakpoint.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/breakpoint.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/breakpoint.asm	/^	d = dst;$/;"	d
default	obj/user/breakpoint.asm	/^		default:$/;"	l
dig	obj/user/breakpoint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/breakpoint.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/breakpoint.asm	/^envid_t$/;"	l
err	obj/user/breakpoint.asm	/^				err = -err;$/;"	d
err	obj/user/breakpoint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/breakpoint.asm	/^    err:$/;"	l
err	obj/user/breakpoint.asm	/^err:$/;"	l
err1	obj/user/breakpoint.asm	/^    err1:$/;"	l
err2	obj/user/breakpoint.asm	/^    err2:$/;"	l
err3	obj/user/breakpoint.asm	/^    err3:$/;"	l
fd	obj/user/breakpoint.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/breakpoint.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/breakpoint.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/breakpoint.asm	/^int $/;"	l
int	obj/user/breakpoint.asm	/^int color;$/;"	l
int	obj/user/breakpoint.asm	/^int$/;"	l
int32_t	obj/user/breakpoint.asm	/^int32_t$/;"	l
lflag	obj/user/breakpoint.asm	/^		lflag = 0;$/;"	d
long	obj/user/breakpoint.asm	/^long$/;"	l
m	obj/user/breakpoint.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/breakpoint.asm	/^		m = n - tot;$/;"	d
m	obj/user/breakpoint.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/breakpoint.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/breakpoint.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/breakpoint.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/breakpoint.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/breakpoint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/breakpoint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/breakpoint.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/breakpoint.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/breakpoint.asm	/^		number:$/;"	l
nva	obj/user/breakpoint.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/breakpoint.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/breakpoint.asm	/^				p = "(null)";$/;"	d
p	obj/user/breakpoint.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/breakpoint.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/breakpoint.asm	/^			padc = '-';$/;"	d
padc	obj/user/breakpoint.asm	/^			padc = '0';$/;"	d
precision	obj/user/breakpoint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/breakpoint.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/breakpoint.asm	/^		process_precision:$/;"	l
pte	obj/user/breakpoint.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/breakpoint.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/breakpoint.asm	/^			r = 0;$/;"	d
r	obj/user/breakpoint.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/breakpoint.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/breakpoint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/breakpoint.asm	/^	reswitch:$/;"	l
ret	obj/user/breakpoint.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/breakpoint.asm	/^	ret = dst;$/;"	d
s	obj/user/breakpoint.asm	/^	s = src;$/;"	d
size_t	obj/user/breakpoint.asm	/^size_t$/;"	l
ssize_t	obj/user/breakpoint.asm	/^ssize_t$/;"	l
static	obj/user/breakpoint.asm	/^static int$/;"	l
static	obj/user/breakpoint.asm	/^static long long$/;"	l
static	obj/user/breakpoint.asm	/^static ssize_t$/;"	l
static	obj/user/breakpoint.asm	/^static unsigned long long$/;"	l
static	obj/user/breakpoint.asm	/^static void$/;"	l
thisenv	obj/user/breakpoint.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/breakpoint.asm	/^unsigned int$/;"	l
va	obj/user/breakpoint.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/breakpoint.asm	/^void *$/;"	l
void	obj/user/breakpoint.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/breakpoint.asm	/^void$/;"	l
width	obj/user/breakpoint.asm	/^				width = 0;$/;"	d
width	obj/user/breakpoint.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/buggyhello.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/buggyhello.asm	/^Disassembly of section .text:$/;"	l
_start	obj/user/buggyhello.asm	/^_start:$/;"	l
altflag	obj/user/buggyhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/buggyhello.asm	/^args_exist:$/;"	l
base	obj/user/buggyhello.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 8;$/;"	d
base	obj/user/buggyhello.asm	/^		base = 10;$/;"	d
binaryname	obj/user/buggyhello.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/buggyhello.asm	/^	buf = vbuf;$/;"	d
c	obj/user/buggyhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/buggyhello.asm	/^				ch = *fmt;$/;"	d
char	obj/user/buggyhello.asm	/^char *$/;"	l
clrflag	obj/user/buggyhello.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/buggyhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/buggyhello.asm	/^				color = 0;$/;"	d
color	obj/user/buggyhello.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/buggyhello.asm	/^	colorswitch:$/;"	l
const	obj/user/buggyhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/buggyhello.asm	/^	d = dst;$/;"	d
default	obj/user/buggyhello.asm	/^		default:$/;"	l
dig	obj/user/buggyhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/buggyhello.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/buggyhello.asm	/^envid_t$/;"	l
err	obj/user/buggyhello.asm	/^				err = -err;$/;"	d
err	obj/user/buggyhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello.asm	/^    err:$/;"	l
err	obj/user/buggyhello.asm	/^err:$/;"	l
err1	obj/user/buggyhello.asm	/^    err1:$/;"	l
err2	obj/user/buggyhello.asm	/^    err2:$/;"	l
err3	obj/user/buggyhello.asm	/^    err3:$/;"	l
fd	obj/user/buggyhello.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/buggyhello.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/buggyhello.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/buggyhello.asm	/^int $/;"	l
int	obj/user/buggyhello.asm	/^int color;$/;"	l
int	obj/user/buggyhello.asm	/^int$/;"	l
int32_t	obj/user/buggyhello.asm	/^int32_t$/;"	l
lflag	obj/user/buggyhello.asm	/^		lflag = 0;$/;"	d
long	obj/user/buggyhello.asm	/^long$/;"	l
m	obj/user/buggyhello.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/buggyhello.asm	/^		m = n - tot;$/;"	d
m	obj/user/buggyhello.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/buggyhello.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/buggyhello.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/buggyhello.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/buggyhello.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/buggyhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/buggyhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/buggyhello.asm	/^		number:$/;"	l
nva	obj/user/buggyhello.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/buggyhello.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/buggyhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/buggyhello.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/buggyhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/buggyhello.asm	/^			padc = '0';$/;"	d
precision	obj/user/buggyhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/buggyhello.asm	/^		process_precision:$/;"	l
pte	obj/user/buggyhello.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/buggyhello.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/buggyhello.asm	/^			r = 0;$/;"	d
r	obj/user/buggyhello.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/buggyhello.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/buggyhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/buggyhello.asm	/^	reswitch:$/;"	l
ret	obj/user/buggyhello.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/buggyhello.asm	/^	ret = dst;$/;"	d
s	obj/user/buggyhello.asm	/^	s = src;$/;"	d
size_t	obj/user/buggyhello.asm	/^size_t$/;"	l
ssize_t	obj/user/buggyhello.asm	/^ssize_t$/;"	l
static	obj/user/buggyhello.asm	/^static int$/;"	l
static	obj/user/buggyhello.asm	/^static long long$/;"	l
static	obj/user/buggyhello.asm	/^static ssize_t$/;"	l
static	obj/user/buggyhello.asm	/^static unsigned long long$/;"	l
static	obj/user/buggyhello.asm	/^static void$/;"	l
thisenv	obj/user/buggyhello.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/buggyhello.asm	/^unsigned int$/;"	l
va	obj/user/buggyhello.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/buggyhello.asm	/^void *$/;"	l
void	obj/user/buggyhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/buggyhello.asm	/^void$/;"	l
width	obj/user/buggyhello.asm	/^				width = 0;$/;"	d
width	obj/user/buggyhello.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/buggyhello2.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/buggyhello2.asm	/^Disassembly of section .text:$/;"	l
_start	obj/user/buggyhello2.asm	/^_start:$/;"	l
altflag	obj/user/buggyhello2.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello2.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/buggyhello2.asm	/^args_exist:$/;"	l
base	obj/user/buggyhello2.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 8;$/;"	d
base	obj/user/buggyhello2.asm	/^		base = 10;$/;"	d
binaryname	obj/user/buggyhello2.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/buggyhello2.asm	/^	buf = vbuf;$/;"	d
c	obj/user/buggyhello2.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/buggyhello2.asm	/^				ch = *fmt;$/;"	d
char	obj/user/buggyhello2.asm	/^char *$/;"	l
clrflag	obj/user/buggyhello2.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/buggyhello2.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/buggyhello2.asm	/^				color = 0;$/;"	d
color	obj/user/buggyhello2.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/buggyhello2.asm	/^	colorswitch:$/;"	l
const	obj/user/buggyhello2.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello2.asm	/^const char *hello = "hello, world\\n";$/;"	l
const	obj/user/buggyhello2.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/buggyhello2.asm	/^	d = dst;$/;"	d
default	obj/user/buggyhello2.asm	/^		default:$/;"	l
dig	obj/user/buggyhello2.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/buggyhello2.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/buggyhello2.asm	/^envid_t$/;"	l
err	obj/user/buggyhello2.asm	/^				err = -err;$/;"	d
err	obj/user/buggyhello2.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello2.asm	/^    err:$/;"	l
err	obj/user/buggyhello2.asm	/^err:$/;"	l
err1	obj/user/buggyhello2.asm	/^    err1:$/;"	l
err2	obj/user/buggyhello2.asm	/^    err2:$/;"	l
err3	obj/user/buggyhello2.asm	/^    err3:$/;"	l
fd	obj/user/buggyhello2.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/buggyhello2.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/buggyhello2.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/buggyhello2.asm	/^int $/;"	l
int	obj/user/buggyhello2.asm	/^int color;$/;"	l
int	obj/user/buggyhello2.asm	/^int$/;"	l
int32_t	obj/user/buggyhello2.asm	/^int32_t$/;"	l
lflag	obj/user/buggyhello2.asm	/^		lflag = 0;$/;"	d
long	obj/user/buggyhello2.asm	/^long$/;"	l
m	obj/user/buggyhello2.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/buggyhello2.asm	/^		m = n - tot;$/;"	d
m	obj/user/buggyhello2.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/buggyhello2.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/buggyhello2.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/buggyhello2.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/buggyhello2.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/buggyhello2.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello2.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello2.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/buggyhello2.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/buggyhello2.asm	/^		number:$/;"	l
nva	obj/user/buggyhello2.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/buggyhello2.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/buggyhello2.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello2.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/buggyhello2.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/buggyhello2.asm	/^			padc = '-';$/;"	d
padc	obj/user/buggyhello2.asm	/^			padc = '0';$/;"	d
precision	obj/user/buggyhello2.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello2.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/buggyhello2.asm	/^		process_precision:$/;"	l
pte	obj/user/buggyhello2.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/buggyhello2.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/buggyhello2.asm	/^			r = 0;$/;"	d
r	obj/user/buggyhello2.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/buggyhello2.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/buggyhello2.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/buggyhello2.asm	/^	reswitch:$/;"	l
ret	obj/user/buggyhello2.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/buggyhello2.asm	/^	ret = dst;$/;"	d
s	obj/user/buggyhello2.asm	/^	s = src;$/;"	d
size_t	obj/user/buggyhello2.asm	/^size_t$/;"	l
ssize_t	obj/user/buggyhello2.asm	/^ssize_t$/;"	l
static	obj/user/buggyhello2.asm	/^static int$/;"	l
static	obj/user/buggyhello2.asm	/^static long long$/;"	l
static	obj/user/buggyhello2.asm	/^static ssize_t$/;"	l
static	obj/user/buggyhello2.asm	/^static unsigned long long$/;"	l
static	obj/user/buggyhello2.asm	/^static void$/;"	l
thisenv	obj/user/buggyhello2.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/buggyhello2.asm	/^unsigned int$/;"	l
va	obj/user/buggyhello2.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/buggyhello2.asm	/^void *$/;"	l
void	obj/user/buggyhello2.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/buggyhello2.asm	/^void$/;"	l
width	obj/user/buggyhello2.asm	/^				width = 0;$/;"	d
width	obj/user/buggyhello2.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/cat.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/cat.asm	/^Disassembly of section .text:$/;"	l
_start	obj/user/cat.asm	/^_start:$/;"	l
altflag	obj/user/cat.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/cat.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/cat.asm	/^args_exist:$/;"	l
base	obj/user/cat.asm	/^			base = 10;$/;"	d
base	obj/user/cat.asm	/^			base = 16;$/;"	d
base	obj/user/cat.asm	/^			base = 8;$/;"	d
base	obj/user/cat.asm	/^		base = 10;$/;"	d
binaryname	obj/user/cat.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/cat.asm	/^	binaryname = "cat";$/;"	d
buf	obj/user/cat.asm	/^	buf = vbuf;$/;"	d
c	obj/user/cat.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/cat.asm	/^				ch = *fmt;$/;"	d
char	obj/user/cat.asm	/^char *$/;"	l
char	obj/user/cat.asm	/^char buf[8192];$/;"	l
clrflag	obj/user/cat.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/cat.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/cat.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/cat.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
color	obj/user/cat.asm	/^				color = 0;$/;"	d
color	obj/user/cat.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/cat.asm	/^	colorswitch:$/;"	l
const	obj/user/cat.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/cat.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/cat.asm	/^	d = dst;$/;"	d
default	obj/user/cat.asm	/^		default:$/;"	l
dig	obj/user/cat.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/cat.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/cat.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/cat.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/cat.asm	/^envid_t$/;"	l
err	obj/user/cat.asm	/^				err = -err;$/;"	d
err	obj/user/cat.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/cat.asm	/^    err:$/;"	l
err	obj/user/cat.asm	/^err:$/;"	l
err1	obj/user/cat.asm	/^    err1:$/;"	l
err2	obj/user/cat.asm	/^    err2:$/;"	l
err3	obj/user/cat.asm	/^    err3:$/;"	l
f	obj/user/cat.asm	/^			f = open(argv[i], O_RDONLY);$/;"	d
fd	obj/user/cat.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/cat.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/cat.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/cat.asm	/^int $/;"	l
int	obj/user/cat.asm	/^int color;$/;"	l
int	obj/user/cat.asm	/^int$/;"	l
int32_t	obj/user/cat.asm	/^int32_t$/;"	l
lflag	obj/user/cat.asm	/^		lflag = 0;$/;"	d
long	obj/user/cat.asm	/^long$/;"	l
m	obj/user/cat.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/cat.asm	/^		m = n - tot;$/;"	d
m	obj/user/cat.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/cat.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/cat.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/cat.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/cat.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/cat.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/cat.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/cat.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/cat.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/cat.asm	/^		number:$/;"	l
nva	obj/user/cat.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/cat.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/cat.asm	/^				p = "(null)";$/;"	d
p	obj/user/cat.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/cat.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/cat.asm	/^			padc = '-';$/;"	d
padc	obj/user/cat.asm	/^			padc = '0';$/;"	d
precision	obj/user/cat.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/cat.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/cat.asm	/^		process_precision:$/;"	l
pte	obj/user/cat.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/cat.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/cat.asm	/^			r = 0;$/;"	d
r	obj/user/cat.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/cat.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/cat.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/cat.asm	/^	reswitch:$/;"	l
ret	obj/user/cat.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/cat.asm	/^	ret = dst;$/;"	d
s	obj/user/cat.asm	/^	s = src;$/;"	d
size_t	obj/user/cat.asm	/^size_t$/;"	l
ssize_t	obj/user/cat.asm	/^ssize_t$/;"	l
static	obj/user/cat.asm	/^static int$/;"	l
static	obj/user/cat.asm	/^static long long$/;"	l
static	obj/user/cat.asm	/^static ssize_t$/;"	l
static	obj/user/cat.asm	/^static unsigned long long$/;"	l
static	obj/user/cat.asm	/^static void$/;"	l
thisenv	obj/user/cat.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/cat.asm	/^unsigned int$/;"	l
va	obj/user/cat.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/cat.asm	/^void *$/;"	l
void	obj/user/cat.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/cat.asm	/^void$/;"	l
width	obj/user/cat.asm	/^				width = 0;$/;"	d
width	obj/user/cat.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/divzero.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/divzero.asm	/^Disassembly of section .text:$/;"	l
_start	obj/user/divzero.asm	/^_start:$/;"	l
altflag	obj/user/divzero.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/divzero.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/divzero.asm	/^args_exist:$/;"	l
base	obj/user/divzero.asm	/^			base = 10;$/;"	d
base	obj/user/divzero.asm	/^			base = 16;$/;"	d
base	obj/user/divzero.asm	/^			base = 8;$/;"	d
base	obj/user/divzero.asm	/^		base = 10;$/;"	d
binaryname	obj/user/divzero.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/divzero.asm	/^	buf = vbuf;$/;"	d
c	obj/user/divzero.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/divzero.asm	/^				ch = *fmt;$/;"	d
char	obj/user/divzero.asm	/^char *$/;"	l
clrflag	obj/user/divzero.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/divzero.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/divzero.asm	/^				color = 0;$/;"	d
color	obj/user/divzero.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/divzero.asm	/^	colorswitch:$/;"	l
const	obj/user/divzero.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/divzero.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/divzero.asm	/^	d = dst;$/;"	d
default	obj/user/divzero.asm	/^		default:$/;"	l
dig	obj/user/divzero.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/divzero.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/divzero.asm	/^envid_t$/;"	l
err	obj/user/divzero.asm	/^				err = -err;$/;"	d
err	obj/user/divzero.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/divzero.asm	/^    err:$/;"	l
err	obj/user/divzero.asm	/^err:$/;"	l
err1	obj/user/divzero.asm	/^    err1:$/;"	l
err2	obj/user/divzero.asm	/^    err2:$/;"	l
err3	obj/user/divzero.asm	/^    err3:$/;"	l
fd	obj/user/divzero.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/divzero.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/divzero.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/divzero.asm	/^int $/;"	l
int	obj/user/divzero.asm	/^int color;$/;"	l
int	obj/user/divzero.asm	/^int zero;$/;"	l
int	obj/user/divzero.asm	/^int$/;"	l
int32_t	obj/user/divzero.asm	/^int32_t$/;"	l
lflag	obj/user/divzero.asm	/^		lflag = 0;$/;"	d
long	obj/user/divzero.asm	/^long$/;"	l
m	obj/user/divzero.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/divzero.asm	/^		m = n - tot;$/;"	d
m	obj/user/divzero.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/divzero.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/divzero.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/divzero.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/divzero.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/divzero.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/divzero.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/divzero.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/divzero.asm	/^		number:$/;"	l
nva	obj/user/divzero.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/divzero.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/divzero.asm	/^				p = "(null)";$/;"	d
p	obj/user/divzero.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/divzero.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/divzero.asm	/^			padc = '-';$/;"	d
padc	obj/user/divzero.asm	/^			padc = '0';$/;"	d
precision	obj/user/divzero.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/divzero.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/divzero.asm	/^		process_precision:$/;"	l
pte	obj/user/divzero.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/divzero.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/divzero.asm	/^			r = 0;$/;"	d
r	obj/user/divzero.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/divzero.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/divzero.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/divzero.asm	/^	reswitch:$/;"	l
ret	obj/user/divzero.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/divzero.asm	/^	ret = dst;$/;"	d
s	obj/user/divzero.asm	/^	s = src;$/;"	d
size_t	obj/user/divzero.asm	/^size_t$/;"	l
ssize_t	obj/user/divzero.asm	/^ssize_t$/;"	l
static	obj/user/divzero.asm	/^static int$/;"	l
static	obj/user/divzero.asm	/^static long long$/;"	l
static	obj/user/divzero.asm	/^static ssize_t$/;"	l
static	obj/user/divzero.asm	/^static unsigned long long$/;"	l
static	obj/user/divzero.asm	/^static void$/;"	l
thisenv	obj/user/divzero.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/divzero.asm	/^unsigned int$/;"	l
va	obj/user/divzero.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/divzero.asm	/^void *$/;"	l
void	obj/user/divzero.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/divzero.asm	/^void$/;"	l
width	obj/user/divzero.asm	/^				width = 0;$/;"	d
width	obj/user/divzero.asm	/^				width = precision, precision = -1;$/;"	d
zero	obj/user/divzero.asm	/^	zero = 0;$/;"	d
ASM	obj/user/dumbfork.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/dumbfork.asm	/^Disassembly of section .text:$/;"	l
_start	obj/user/dumbfork.asm	/^_start:$/;"	l
altflag	obj/user/dumbfork.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/dumbfork.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/dumbfork.asm	/^args_exist:$/;"	l
base	obj/user/dumbfork.asm	/^			base = 10;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 16;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 8;$/;"	d
base	obj/user/dumbfork.asm	/^		base = 10;$/;"	d
binaryname	obj/user/dumbfork.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/dumbfork.asm	/^	buf = vbuf;$/;"	d
c	obj/user/dumbfork.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/dumbfork.asm	/^				ch = *fmt;$/;"	d
char	obj/user/dumbfork.asm	/^char *$/;"	l
clrflag	obj/user/dumbfork.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/dumbfork.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/dumbfork.asm	/^				color = 0;$/;"	d
color	obj/user/dumbfork.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/dumbfork.asm	/^	colorswitch:$/;"	l
const	obj/user/dumbfork.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/dumbfork.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/dumbfork.asm	/^	d = dst;$/;"	d
default	obj/user/dumbfork.asm	/^		default:$/;"	l
dig	obj/user/dumbfork.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/dumbfork.asm	/^	dst_in = dst;$/;"	d
envid	obj/user/dumbfork.asm	/^	envid = sys_exofork();$/;"	d
envid_t	obj/user/dumbfork.asm	/^envid_t dumbfork(void);$/;"	l
envid_t	obj/user/dumbfork.asm	/^envid_t$/;"	l
err	obj/user/dumbfork.asm	/^				err = -err;$/;"	d
err	obj/user/dumbfork.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/dumbfork.asm	/^    err:$/;"	l
err	obj/user/dumbfork.asm	/^err:$/;"	l
err1	obj/user/dumbfork.asm	/^    err1:$/;"	l
err2	obj/user/dumbfork.asm	/^    err2:$/;"	l
err3	obj/user/dumbfork.asm	/^    err3:$/;"	l
fd	obj/user/dumbfork.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/dumbfork.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/dumbfork.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/dumbfork.asm	/^int $/;"	l
int	obj/user/dumbfork.asm	/^int color;$/;"	l
int	obj/user/dumbfork.asm	/^int$/;"	l
int32_t	obj/user/dumbfork.asm	/^int32_t$/;"	l
lflag	obj/user/dumbfork.asm	/^		lflag = 0;$/;"	d
long	obj/user/dumbfork.asm	/^long$/;"	l
m	obj/user/dumbfork.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/dumbfork.asm	/^		m = n - tot;$/;"	d
m	obj/user/dumbfork.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/dumbfork.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/dumbfork.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/dumbfork.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/dumbfork.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/dumbfork.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/dumbfork.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/dumbfork.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/dumbfork.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/dumbfork.asm	/^		number:$/;"	l
nva	obj/user/dumbfork.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/dumbfork.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/dumbfork.asm	/^				p = "(null)";$/;"	d
p	obj/user/dumbfork.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/dumbfork.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/dumbfork.asm	/^			padc = '-';$/;"	d
padc	obj/user/dumbfork.asm	/^			padc = '0';$/;"	d
precision	obj/user/dumbfork.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/dumbfork.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/dumbfork.asm	/^		process_precision:$/;"	l
pte	obj/user/dumbfork.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/dumbfork.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/dumbfork.asm	/^			r = 0;$/;"	d
r	obj/user/dumbfork.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/dumbfork.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/dumbfork.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/dumbfork.asm	/^	reswitch:$/;"	l
ret	obj/user/dumbfork.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/dumbfork.asm	/^	ret = dst;$/;"	d
s	obj/user/dumbfork.asm	/^	s = src;$/;"	d
size_t	obj/user/dumbfork.asm	/^size_t$/;"	l
ssize_t	obj/user/dumbfork.asm	/^ssize_t$/;"	l
static	obj/user/dumbfork.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/dumbfork.asm	/^static int$/;"	l
static	obj/user/dumbfork.asm	/^static long long$/;"	l
static	obj/user/dumbfork.asm	/^static ssize_t$/;"	l
static	obj/user/dumbfork.asm	/^static unsigned long long$/;"	l
static	obj/user/dumbfork.asm	/^static void$/;"	l
thisenv	obj/user/dumbfork.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/dumbfork.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/dumbfork.asm	/^unsigned int$/;"	l
va	obj/user/dumbfork.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/dumbfork.asm	/^void *$/;"	l
void	obj/user/dumbfork.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/dumbfork.asm	/^void$/;"	l
who	obj/user/dumbfork.asm	/^	who = dumbfork();$/;"	d
width	obj/user/dumbfork.asm	/^				width = 0;$/;"	d
width	obj/user/dumbfork.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/echo.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/echo.asm	/^Disassembly of section .text:$/;"	l
_start	obj/user/echo.asm	/^_start:$/;"	l
altflag	obj/user/echo.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/echo.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/echo.asm	/^args_exist:$/;"	l
base	obj/user/echo.asm	/^			base = 10;$/;"	d
base	obj/user/echo.asm	/^			base = 16;$/;"	d
base	obj/user/echo.asm	/^			base = 8;$/;"	d
base	obj/user/echo.asm	/^		base = 10;$/;"	d
binaryname	obj/user/echo.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/echo.asm	/^	buf = vbuf;$/;"	d
c	obj/user/echo.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/echo.asm	/^				ch = *fmt;$/;"	d
char	obj/user/echo.asm	/^char *$/;"	l
clrflag	obj/user/echo.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/echo.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/echo.asm	/^				color = 0;$/;"	d
color	obj/user/echo.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/echo.asm	/^	colorswitch:$/;"	l
const	obj/user/echo.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/echo.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/echo.asm	/^	d = dst;$/;"	d
default	obj/user/echo.asm	/^		default:$/;"	l
dig	obj/user/echo.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/echo.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/echo.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/echo.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/echo.asm	/^envid_t$/;"	l
err	obj/user/echo.asm	/^				err = -err;$/;"	d
err	obj/user/echo.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/echo.asm	/^    err:$/;"	l
err	obj/user/echo.asm	/^err:$/;"	l
err1	obj/user/echo.asm	/^    err1:$/;"	l
err2	obj/user/echo.asm	/^    err2:$/;"	l
err3	obj/user/echo.asm	/^    err3:$/;"	l
fd	obj/user/echo.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/echo.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/echo.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/echo.asm	/^int $/;"	l
int	obj/user/echo.asm	/^int color;$/;"	l
int	obj/user/echo.asm	/^int$/;"	l
int32_t	obj/user/echo.asm	/^int32_t$/;"	l
lflag	obj/user/echo.asm	/^		lflag = 0;$/;"	d
long	obj/user/echo.asm	/^long$/;"	l
m	obj/user/echo.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/echo.asm	/^		m = n - tot;$/;"	d
m	obj/user/echo.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/echo.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/echo.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nflag	obj/user/echo.asm	/^		nflag = 1;$/;"	d
nflag	obj/user/echo.asm	/^	nflag = 0;$/;"	d
nn	obj/user/echo.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/echo.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/echo.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/echo.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/echo.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/echo.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/echo.asm	/^		number:$/;"	l
nva	obj/user/echo.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/echo.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/echo.asm	/^				p = "(null)";$/;"	d
p	obj/user/echo.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/echo.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/echo.asm	/^			padc = '-';$/;"	d
padc	obj/user/echo.asm	/^			padc = '0';$/;"	d
precision	obj/user/echo.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/echo.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/echo.asm	/^		process_precision:$/;"	l
pte	obj/user/echo.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/echo.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/echo.asm	/^			r = 0;$/;"	d
r	obj/user/echo.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/echo.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/echo.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/echo.asm	/^	reswitch:$/;"	l
ret	obj/user/echo.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/echo.asm	/^	ret = dst;$/;"	d
s	obj/user/echo.asm	/^	s = src;$/;"	d
size_t	obj/user/echo.asm	/^size_t$/;"	l
ssize_t	obj/user/echo.asm	/^ssize_t$/;"	l
static	obj/user/echo.asm	/^static int$/;"	l
static	obj/user/echo.asm	/^static long long$/;"	l
static	obj/user/echo.asm	/^static ssize_t$/;"	l
static	obj/user/echo.asm	/^static unsigned long long$/;"	l
static	obj/user/echo.asm	/^static void$/;"	l
thisenv	obj/user/echo.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/echo.asm	/^unsigned int$/;"	l
va	obj/user/echo.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/echo.asm	/^void *$/;"	l
void	obj/user/echo.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/echo.asm	/^void$/;"	l
width	obj/user/echo.asm	/^				width = 0;$/;"	d
width	obj/user/echo.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/echosrv.asm	/^#define ASM 1$/;"	d
BUFFSIZE	obj/user/echosrv.asm	/^#define BUFFSIZE 32$/;"	d
Disassembly	obj/user/echosrv.asm	/^Disassembly of section .text:$/;"	l
MAXPENDING	obj/user/echosrv.asm	/^#define MAXPENDING 5    \/\/ Max connection requests$/;"	d
_start	obj/user/echosrv.asm	/^_start:$/;"	l
altflag	obj/user/echosrv.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/echosrv.asm	/^		altflag = 0;$/;"	d
ap	obj/user/echosrv.asm	/^  ap = (u8_t *)&s_addr;$/;"	d
args_exist	obj/user/echosrv.asm	/^args_exist:$/;"	l
base	obj/user/echosrv.asm	/^			base = 10;$/;"	d
base	obj/user/echosrv.asm	/^			base = 16;$/;"	d
base	obj/user/echosrv.asm	/^			base = 8;$/;"	d
base	obj/user/echosrv.asm	/^		base = 10;$/;"	d
base	obj/user/echosrv.asm	/^        base = 16;$/;"	d
base	obj/user/echosrv.asm	/^        base = 8;$/;"	d
base	obj/user/echosrv.asm	/^    base = 10;$/;"	d
binaryname	obj/user/echosrv.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/echosrv.asm	/^	buf = vbuf;$/;"	d
c	obj/user/echosrv.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/echosrv.asm	/^        c = *++cp;$/;"	d
c	obj/user/echosrv.asm	/^      c = *++cp;$/;"	d
c	obj/user/echosrv.asm	/^  c = *cp;$/;"	d
ch	obj/user/echosrv.asm	/^				ch = *fmt;$/;"	d
char	obj/user/echosrv.asm	/^char *$/;"	l
clrflag	obj/user/echosrv.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/echosrv.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/echosrv.asm	/^				color = 0;$/;"	d
color	obj/user/echosrv.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/echosrv.asm	/^	colorswitch:$/;"	l
const	obj/user/echosrv.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/echosrv.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/echosrv.asm	/^	d = dst;$/;"	d
default	obj/user/echosrv.asm	/^		default:$/;"	l
dig	obj/user/echosrv.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/echosrv.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/echosrv.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/echosrv.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/echosrv.asm	/^envid_t$/;"	l
err	obj/user/echosrv.asm	/^				err = -err;$/;"	d
err	obj/user/echosrv.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/echosrv.asm	/^    err:$/;"	l
err	obj/user/echosrv.asm	/^err:$/;"	l
err1	obj/user/echosrv.asm	/^    err1:$/;"	l
err2	obj/user/echosrv.asm	/^    err2:$/;"	l
err3	obj/user/echosrv.asm	/^    err3:$/;"	l
fd	obj/user/echosrv.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/echosrv.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/echosrv.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
i	obj/user/echosrv.asm	/^    i = 0;$/;"	d
int	obj/user/echosrv.asm	/^int $/;"	l
int	obj/user/echosrv.asm	/^int color;$/;"	l
int	obj/user/echosrv.asm	/^int$/;"	l
int32_t	obj/user/echosrv.asm	/^int32_t$/;"	l
lflag	obj/user/echosrv.asm	/^		lflag = 0;$/;"	d
long	obj/user/echosrv.asm	/^long$/;"	l
m	obj/user/echosrv.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/echosrv.asm	/^		m = n - tot;$/;"	d
m	obj/user/echosrv.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/echosrv.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/echosrv.asm	/^  n = pp - parts + 1;$/;"	d
newfd	obj/user/echosrv.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/echosrv.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/echosrv.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/echosrv.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/echosrv.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/echosrv.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/echosrv.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/echosrv.asm	/^		number:$/;"	l
nva	obj/user/echosrv.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/echosrv.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/echosrv.asm	/^				p = "(null)";$/;"	d
p	obj/user/echosrv.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/echosrv.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/echosrv.asm	/^			padc = '-';$/;"	d
padc	obj/user/echosrv.asm	/^			padc = '0';$/;"	d
precision	obj/user/echosrv.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/echosrv.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/echosrv.asm	/^		process_precision:$/;"	l
pte	obj/user/echosrv.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/echosrv.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/echosrv.asm	/^			r = 0;$/;"	d
r	obj/user/echosrv.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/echosrv.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/echosrv.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rem	obj/user/echosrv.asm	/^      rem = *ap % (u8_t)10;$/;"	d
reswitch	obj/user/echosrv.asm	/^	reswitch:$/;"	l
ret	obj/user/echosrv.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/echosrv.asm	/^	ret = dst;$/;"	d
rp	obj/user/echosrv.asm	/^  rp = str;$/;"	d
s	obj/user/echosrv.asm	/^	s = src;$/;"	d
size_t	obj/user/echosrv.asm	/^size_t$/;"	l
ssize_t	obj/user/echosrv.asm	/^ssize_t$/;"	l
static	obj/user/echosrv.asm	/^static int$/;"	l
static	obj/user/echosrv.asm	/^static long long$/;"	l
static	obj/user/echosrv.asm	/^static ssize_t$/;"	l
static	obj/user/echosrv.asm	/^static unsigned long long$/;"	l
static	obj/user/echosrv.asm	/^static void$/;"	l
thisenv	obj/user/echosrv.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
u16_t	obj/user/echosrv.asm	/^u16_t$/;"	l
u32_t	obj/user/echosrv.asm	/^u32_t$/;"	l
unsigned	obj/user/echosrv.asm	/^unsigned int$/;"	l
va	obj/user/echosrv.asm	/^	va = fd2data(fd0);$/;"	d
val	obj/user/echosrv.asm	/^        val = (val * base) + (int)(c - '0');$/;"	d
val	obj/user/echosrv.asm	/^        val = (val << 4) | (int)(c + 10 - (islower(c) ? 'a' : 'A'));$/;"	d
val	obj/user/echosrv.asm	/^    val = 0;$/;"	d
void	obj/user/echosrv.asm	/^void *$/;"	l
void	obj/user/echosrv.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/echosrv.asm	/^void$/;"	l
width	obj/user/echosrv.asm	/^				width = 0;$/;"	d
width	obj/user/echosrv.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/echotest.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/echotest.asm	/^Disassembly of section .text:$/;"	l
_start	obj/user/echotest.asm	/^_start:$/;"	l
altflag	obj/user/echotest.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/echotest.asm	/^		altflag = 0;$/;"	d
ap	obj/user/echotest.asm	/^  ap = (u8_t *)&s_addr;$/;"	d
args_exist	obj/user/echotest.asm	/^args_exist:$/;"	l
base	obj/user/echotest.asm	/^			base = 10;$/;"	d
base	obj/user/echotest.asm	/^			base = 16;$/;"	d
base	obj/user/echotest.asm	/^			base = 8;$/;"	d
base	obj/user/echotest.asm	/^		base = 10;$/;"	d
base	obj/user/echotest.asm	/^        base = 16;$/;"	d
base	obj/user/echotest.asm	/^        base = 8;$/;"	d
base	obj/user/echotest.asm	/^    base = 10;$/;"	d
binaryname	obj/user/echotest.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/echotest.asm	/^	buf = vbuf;$/;"	d
c	obj/user/echotest.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/echotest.asm	/^        c = *++cp;$/;"	d
c	obj/user/echotest.asm	/^      c = *++cp;$/;"	d
c	obj/user/echotest.asm	/^  c = *cp;$/;"	d
ch	obj/user/echotest.asm	/^				ch = *fmt;$/;"	d
char	obj/user/echotest.asm	/^char *$/;"	l
clrflag	obj/user/echotest.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/echotest.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/echotest.asm	/^				color = 0;$/;"	d
color	obj/user/echotest.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/echotest.asm	/^	colorswitch:$/;"	l
const	obj/user/echotest.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/echotest.asm	/^const char *msg = "Hello world!\\n";$/;"	l
const	obj/user/echotest.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/echotest.asm	/^	d = dst;$/;"	d
default	obj/user/echotest.asm	/^		default:$/;"	l
dig	obj/user/echotest.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/echotest.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/echotest.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/echotest.asm	/^	dst_in = dst;$/;"	d
echolen	obj/user/echotest.asm	/^	echolen = strlen(msg);$/;"	d
envid_t	obj/user/echotest.asm	/^envid_t$/;"	l
err	obj/user/echotest.asm	/^				err = -err;$/;"	d
err	obj/user/echotest.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/echotest.asm	/^    err:$/;"	l
err	obj/user/echotest.asm	/^err:$/;"	l
err1	obj/user/echotest.asm	/^    err1:$/;"	l
err2	obj/user/echotest.asm	/^    err2:$/;"	l
err3	obj/user/echotest.asm	/^    err3:$/;"	l
fd	obj/user/echotest.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/echotest.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/echotest.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
i	obj/user/echotest.asm	/^    i = 0;$/;"	d
int	obj/user/echotest.asm	/^int $/;"	l
int	obj/user/echotest.asm	/^int color;$/;"	l
int	obj/user/echotest.asm	/^int$/;"	l
int32_t	obj/user/echotest.asm	/^int32_t$/;"	l
lflag	obj/user/echotest.asm	/^		lflag = 0;$/;"	d
long	obj/user/echotest.asm	/^long$/;"	l
m	obj/user/echotest.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/echotest.asm	/^		m = n - tot;$/;"	d
m	obj/user/echotest.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/echotest.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/echotest.asm	/^  n = pp - parts + 1;$/;"	d
newfd	obj/user/echotest.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/echotest.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/echotest.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/echotest.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/echotest.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/echotest.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/echotest.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/echotest.asm	/^		number:$/;"	l
nva	obj/user/echotest.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/echotest.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/echotest.asm	/^				p = "(null)";$/;"	d
p	obj/user/echotest.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/echotest.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/echotest.asm	/^			padc = '-';$/;"	d
padc	obj/user/echotest.asm	/^			padc = '0';$/;"	d
precision	obj/user/echotest.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/echotest.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/echotest.asm	/^		process_precision:$/;"	l
pte	obj/user/echotest.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/echotest.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/echotest.asm	/^			r = 0;$/;"	d
r	obj/user/echotest.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/echotest.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/echotest.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rem	obj/user/echotest.asm	/^      rem = *ap % (u8_t)10;$/;"	d
reswitch	obj/user/echotest.asm	/^	reswitch:$/;"	l
ret	obj/user/echotest.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/echotest.asm	/^	ret = dst;$/;"	d
rp	obj/user/echotest.asm	/^  rp = str;$/;"	d
s	obj/user/echotest.asm	/^	s = src;$/;"	d
size_t	obj/user/echotest.asm	/^size_t$/;"	l
ssize_t	obj/user/echotest.asm	/^ssize_t$/;"	l
static	obj/user/echotest.asm	/^static int$/;"	l
static	obj/user/echotest.asm	/^static long long$/;"	l
static	obj/user/echotest.asm	/^static ssize_t$/;"	l
static	obj/user/echotest.asm	/^static unsigned long long$/;"	l
static	obj/user/echotest.asm	/^static void$/;"	l
thisenv	obj/user/echotest.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
u16_t	obj/user/echotest.asm	/^u16_t$/;"	l
u32_t	obj/user/echotest.asm	/^u32_t$/;"	l
unsigned	obj/user/echotest.asm	/^unsigned int$/;"	l
va	obj/user/echotest.asm	/^	va = fd2data(fd0);$/;"	d
val	obj/user/echotest.asm	/^        val = (val * base) + (int)(c - '0');$/;"	d
val	obj/user/echotest.asm	/^        val = (val << 4) | (int)(c + 10 - (islower(c) ? 'a' : 'A'));$/;"	d
val	obj/user/echotest.asm	/^    val = 0;$/;"	d
void	obj/user/echotest.asm	/^void *$/;"	l
void	obj/user/echotest.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/echotest.asm	/^void umain(int argc, char **argv)$/;"	l
void	obj/user/echotest.asm	/^void$/;"	l
width	obj/user/echotest.asm	/^				width = 0;$/;"	d
width	obj/user/echotest.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/evilhello.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/evilhello.asm	/^Disassembly of section .text:$/;"	l
_start	obj/user/evilhello.asm	/^_start:$/;"	l
altflag	obj/user/evilhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/evilhello.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/evilhello.asm	/^args_exist:$/;"	l
base	obj/user/evilhello.asm	/^			base = 10;$/;"	d
base	obj/user/evilhello.asm	/^			base = 16;$/;"	d
base	obj/user/evilhello.asm	/^			base = 8;$/;"	d
base	obj/user/evilhello.asm	/^		base = 10;$/;"	d
binaryname	obj/user/evilhello.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/evilhello.asm	/^	buf = vbuf;$/;"	d
c	obj/user/evilhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/evilhello.asm	/^				ch = *fmt;$/;"	d
char	obj/user/evilhello.asm	/^char *$/;"	l
clrflag	obj/user/evilhello.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/evilhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/evilhello.asm	/^				color = 0;$/;"	d
color	obj/user/evilhello.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/evilhello.asm	/^	colorswitch:$/;"	l
const	obj/user/evilhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/evilhello.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/evilhello.asm	/^	d = dst;$/;"	d
default	obj/user/evilhello.asm	/^		default:$/;"	l
dig	obj/user/evilhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/evilhello.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/evilhello.asm	/^envid_t$/;"	l
err	obj/user/evilhello.asm	/^				err = -err;$/;"	d
err	obj/user/evilhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/evilhello.asm	/^    err:$/;"	l
err	obj/user/evilhello.asm	/^err:$/;"	l
err1	obj/user/evilhello.asm	/^    err1:$/;"	l
err2	obj/user/evilhello.asm	/^    err2:$/;"	l
err3	obj/user/evilhello.asm	/^    err3:$/;"	l
fd	obj/user/evilhello.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/evilhello.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/evilhello.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/evilhello.asm	/^int $/;"	l
int	obj/user/evilhello.asm	/^int color;$/;"	l
int	obj/user/evilhello.asm	/^int$/;"	l
int32_t	obj/user/evilhello.asm	/^int32_t$/;"	l
lflag	obj/user/evilhello.asm	/^		lflag = 0;$/;"	d
long	obj/user/evilhello.asm	/^long$/;"	l
m	obj/user/evilhello.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/evilhello.asm	/^		m = n - tot;$/;"	d
m	obj/user/evilhello.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/evilhello.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/evilhello.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/evilhello.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/evilhello.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/evilhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/evilhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/evilhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/evilhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/evilhello.asm	/^		number:$/;"	l
nva	obj/user/evilhello.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/evilhello.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/evilhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/evilhello.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/evilhello.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/evilhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/evilhello.asm	/^			padc = '0';$/;"	d
precision	obj/user/evilhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/evilhello.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/evilhello.asm	/^		process_precision:$/;"	l
pte	obj/user/evilhello.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/evilhello.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/evilhello.asm	/^			r = 0;$/;"	d
r	obj/user/evilhello.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/evilhello.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/evilhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/evilhello.asm	/^	reswitch:$/;"	l
ret	obj/user/evilhello.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/evilhello.asm	/^	ret = dst;$/;"	d
s	obj/user/evilhello.asm	/^	s = src;$/;"	d
size_t	obj/user/evilhello.asm	/^size_t$/;"	l
ssize_t	obj/user/evilhello.asm	/^ssize_t$/;"	l
static	obj/user/evilhello.asm	/^static int$/;"	l
static	obj/user/evilhello.asm	/^static long long$/;"	l
static	obj/user/evilhello.asm	/^static ssize_t$/;"	l
static	obj/user/evilhello.asm	/^static unsigned long long$/;"	l
static	obj/user/evilhello.asm	/^static void$/;"	l
thisenv	obj/user/evilhello.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/evilhello.asm	/^unsigned int$/;"	l
va	obj/user/evilhello.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/evilhello.asm	/^void *$/;"	l
void	obj/user/evilhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/evilhello.asm	/^void$/;"	l
width	obj/user/evilhello.asm	/^				width = 0;$/;"	d
width	obj/user/evilhello.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/fairness.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/fairness.asm	/^Disassembly of section .text:$/;"	l
_start	obj/user/fairness.asm	/^_start:$/;"	l
altflag	obj/user/fairness.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/fairness.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/fairness.asm	/^args_exist:$/;"	l
base	obj/user/fairness.asm	/^			base = 10;$/;"	d
base	obj/user/fairness.asm	/^			base = 16;$/;"	d
base	obj/user/fairness.asm	/^			base = 8;$/;"	d
base	obj/user/fairness.asm	/^		base = 10;$/;"	d
binaryname	obj/user/fairness.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/fairness.asm	/^	buf = vbuf;$/;"	d
c	obj/user/fairness.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/fairness.asm	/^				ch = *fmt;$/;"	d
char	obj/user/fairness.asm	/^char *$/;"	l
clrflag	obj/user/fairness.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/fairness.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/fairness.asm	/^				color = 0;$/;"	d
color	obj/user/fairness.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/fairness.asm	/^	colorswitch:$/;"	l
const	obj/user/fairness.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/fairness.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/fairness.asm	/^	d = dst;$/;"	d
default	obj/user/fairness.asm	/^		default:$/;"	l
dig	obj/user/fairness.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/fairness.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/fairness.asm	/^envid_t$/;"	l
err	obj/user/fairness.asm	/^				err = -err;$/;"	d
err	obj/user/fairness.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/fairness.asm	/^    err:$/;"	l
err	obj/user/fairness.asm	/^err:$/;"	l
err1	obj/user/fairness.asm	/^    err1:$/;"	l
err2	obj/user/fairness.asm	/^    err2:$/;"	l
err3	obj/user/fairness.asm	/^    err3:$/;"	l
fd	obj/user/fairness.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/fairness.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/fairness.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
id	obj/user/fairness.asm	/^	id = sys_getenvid();$/;"	d
int	obj/user/fairness.asm	/^int $/;"	l
int	obj/user/fairness.asm	/^int color;$/;"	l
int	obj/user/fairness.asm	/^int$/;"	l
int32_t	obj/user/fairness.asm	/^int32_t$/;"	l
lflag	obj/user/fairness.asm	/^		lflag = 0;$/;"	d
long	obj/user/fairness.asm	/^long$/;"	l
m	obj/user/fairness.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/fairness.asm	/^		m = n - tot;$/;"	d
m	obj/user/fairness.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/fairness.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/fairness.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/fairness.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/fairness.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/fairness.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/fairness.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/fairness.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/fairness.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/fairness.asm	/^		number:$/;"	l
nva	obj/user/fairness.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/fairness.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/fairness.asm	/^				p = "(null)";$/;"	d
p	obj/user/fairness.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/fairness.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/fairness.asm	/^			padc = '-';$/;"	d
padc	obj/user/fairness.asm	/^			padc = '0';$/;"	d
precision	obj/user/fairness.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/fairness.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/fairness.asm	/^		process_precision:$/;"	l
pte	obj/user/fairness.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/fairness.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/fairness.asm	/^			r = 0;$/;"	d
r	obj/user/fairness.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/fairness.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/fairness.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/fairness.asm	/^	reswitch:$/;"	l
ret	obj/user/fairness.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/fairness.asm	/^	ret = dst;$/;"	d
s	obj/user/fairness.asm	/^	s = src;$/;"	d
size_t	obj/user/fairness.asm	/^size_t$/;"	l
ssize_t	obj/user/fairness.asm	/^ssize_t$/;"	l
static	obj/user/fairness.asm	/^static int$/;"	l
static	obj/user/fairness.asm	/^static long long$/;"	l
static	obj/user/fairness.asm	/^static ssize_t$/;"	l
static	obj/user/fairness.asm	/^static unsigned long long$/;"	l
static	obj/user/fairness.asm	/^static void$/;"	l
thisenv	obj/user/fairness.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/fairness.asm	/^unsigned int$/;"	l
va	obj/user/fairness.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/fairness.asm	/^void *$/;"	l
void	obj/user/fairness.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/fairness.asm	/^void$/;"	l
width	obj/user/fairness.asm	/^				width = 0;$/;"	d
width	obj/user/fairness.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/faultalloc.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/faultalloc.asm	/^Disassembly of section .text:$/;"	l
_pgfault_handler	obj/user/faultalloc.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	obj/user/faultalloc.asm	/^_pgfault_upcall:$/;"	l
_start	obj/user/faultalloc.asm	/^_start:$/;"	l
altflag	obj/user/faultalloc.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultalloc.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/faultalloc.asm	/^args_exist:$/;"	l
base	obj/user/faultalloc.asm	/^			base = 10;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 16;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 8;$/;"	d
base	obj/user/faultalloc.asm	/^		base = 10;$/;"	d
binaryname	obj/user/faultalloc.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/faultalloc.asm	/^	buf = vbuf;$/;"	d
c	obj/user/faultalloc.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/faultalloc.asm	/^				ch = *fmt;$/;"	d
char	obj/user/faultalloc.asm	/^char *$/;"	l
clrflag	obj/user/faultalloc.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/faultalloc.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/faultalloc.asm	/^				color = 0;$/;"	d
color	obj/user/faultalloc.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/faultalloc.asm	/^	colorswitch:$/;"	l
const	obj/user/faultalloc.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultalloc.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/faultalloc.asm	/^	d = dst;$/;"	d
default	obj/user/faultalloc.asm	/^		default:$/;"	l
dig	obj/user/faultalloc.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/faultalloc.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/faultalloc.asm	/^envid_t$/;"	l
err	obj/user/faultalloc.asm	/^				err = -err;$/;"	d
err	obj/user/faultalloc.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultalloc.asm	/^    err:$/;"	l
err	obj/user/faultalloc.asm	/^err:$/;"	l
err1	obj/user/faultalloc.asm	/^    err1:$/;"	l
err2	obj/user/faultalloc.asm	/^    err2:$/;"	l
err3	obj/user/faultalloc.asm	/^    err3:$/;"	l
fd	obj/user/faultalloc.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultalloc.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/faultalloc.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/faultalloc.asm	/^int $/;"	l
int	obj/user/faultalloc.asm	/^int color;$/;"	l
int	obj/user/faultalloc.asm	/^int$/;"	l
int32_t	obj/user/faultalloc.asm	/^int32_t$/;"	l
lflag	obj/user/faultalloc.asm	/^		lflag = 0;$/;"	d
long	obj/user/faultalloc.asm	/^long$/;"	l
m	obj/user/faultalloc.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultalloc.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultalloc.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/faultalloc.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/faultalloc.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/faultalloc.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/faultalloc.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/faultalloc.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultalloc.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultalloc.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultalloc.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/faultalloc.asm	/^		number:$/;"	l
nva	obj/user/faultalloc.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/faultalloc.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/faultalloc.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultalloc.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultalloc.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/faultalloc.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultalloc.asm	/^			padc = '0';$/;"	d
precision	obj/user/faultalloc.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultalloc.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/faultalloc.asm	/^		process_precision:$/;"	l
pte	obj/user/faultalloc.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/faultalloc.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultalloc.asm	/^			r = 0;$/;"	d
r	obj/user/faultalloc.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultalloc.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/faultalloc.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/faultalloc.asm	/^	reswitch:$/;"	l
ret	obj/user/faultalloc.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultalloc.asm	/^	ret = dst;$/;"	d
s	obj/user/faultalloc.asm	/^	s = src;$/;"	d
size_t	obj/user/faultalloc.asm	/^size_t$/;"	l
ssize_t	obj/user/faultalloc.asm	/^ssize_t$/;"	l
static	obj/user/faultalloc.asm	/^static int$/;"	l
static	obj/user/faultalloc.asm	/^static long long$/;"	l
static	obj/user/faultalloc.asm	/^static ssize_t$/;"	l
static	obj/user/faultalloc.asm	/^static unsigned long long$/;"	l
static	obj/user/faultalloc.asm	/^static void$/;"	l
thisenv	obj/user/faultalloc.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/faultalloc.asm	/^unsigned int$/;"	l
va	obj/user/faultalloc.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/faultalloc.asm	/^void *$/;"	l
void	obj/user/faultalloc.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultalloc.asm	/^void$/;"	l
width	obj/user/faultalloc.asm	/^				width = 0;$/;"	d
width	obj/user/faultalloc.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/faultallocbad.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/faultallocbad.asm	/^Disassembly of section .text:$/;"	l
_pgfault_handler	obj/user/faultallocbad.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	obj/user/faultallocbad.asm	/^_pgfault_upcall:$/;"	l
_start	obj/user/faultallocbad.asm	/^_start:$/;"	l
altflag	obj/user/faultallocbad.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultallocbad.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/faultallocbad.asm	/^args_exist:$/;"	l
base	obj/user/faultallocbad.asm	/^			base = 10;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 16;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 8;$/;"	d
base	obj/user/faultallocbad.asm	/^		base = 10;$/;"	d
binaryname	obj/user/faultallocbad.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/faultallocbad.asm	/^	buf = vbuf;$/;"	d
c	obj/user/faultallocbad.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/faultallocbad.asm	/^				ch = *fmt;$/;"	d
char	obj/user/faultallocbad.asm	/^char *$/;"	l
clrflag	obj/user/faultallocbad.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/faultallocbad.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/faultallocbad.asm	/^				color = 0;$/;"	d
color	obj/user/faultallocbad.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/faultallocbad.asm	/^	colorswitch:$/;"	l
const	obj/user/faultallocbad.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultallocbad.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/faultallocbad.asm	/^	d = dst;$/;"	d
default	obj/user/faultallocbad.asm	/^		default:$/;"	l
dig	obj/user/faultallocbad.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/faultallocbad.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/faultallocbad.asm	/^envid_t$/;"	l
err	obj/user/faultallocbad.asm	/^				err = -err;$/;"	d
err	obj/user/faultallocbad.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultallocbad.asm	/^    err:$/;"	l
err	obj/user/faultallocbad.asm	/^err:$/;"	l
err1	obj/user/faultallocbad.asm	/^    err1:$/;"	l
err2	obj/user/faultallocbad.asm	/^    err2:$/;"	l
err3	obj/user/faultallocbad.asm	/^    err3:$/;"	l
fd	obj/user/faultallocbad.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultallocbad.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/faultallocbad.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/faultallocbad.asm	/^int $/;"	l
int	obj/user/faultallocbad.asm	/^int color;$/;"	l
int	obj/user/faultallocbad.asm	/^int$/;"	l
int32_t	obj/user/faultallocbad.asm	/^int32_t$/;"	l
lflag	obj/user/faultallocbad.asm	/^		lflag = 0;$/;"	d
long	obj/user/faultallocbad.asm	/^long$/;"	l
m	obj/user/faultallocbad.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultallocbad.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultallocbad.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/faultallocbad.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/faultallocbad.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/faultallocbad.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/faultallocbad.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/faultallocbad.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultallocbad.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultallocbad.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultallocbad.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/faultallocbad.asm	/^		number:$/;"	l
nva	obj/user/faultallocbad.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/faultallocbad.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/faultallocbad.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultallocbad.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultallocbad.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/faultallocbad.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultallocbad.asm	/^			padc = '0';$/;"	d
precision	obj/user/faultallocbad.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultallocbad.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/faultallocbad.asm	/^		process_precision:$/;"	l
pte	obj/user/faultallocbad.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/faultallocbad.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultallocbad.asm	/^			r = 0;$/;"	d
r	obj/user/faultallocbad.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultallocbad.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/faultallocbad.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/faultallocbad.asm	/^	reswitch:$/;"	l
ret	obj/user/faultallocbad.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultallocbad.asm	/^	ret = dst;$/;"	d
s	obj/user/faultallocbad.asm	/^	s = src;$/;"	d
size_t	obj/user/faultallocbad.asm	/^size_t$/;"	l
ssize_t	obj/user/faultallocbad.asm	/^ssize_t$/;"	l
static	obj/user/faultallocbad.asm	/^static int$/;"	l
static	obj/user/faultallocbad.asm	/^static long long$/;"	l
static	obj/user/faultallocbad.asm	/^static ssize_t$/;"	l
static	obj/user/faultallocbad.asm	/^static unsigned long long$/;"	l
static	obj/user/faultallocbad.asm	/^static void$/;"	l
thisenv	obj/user/faultallocbad.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/faultallocbad.asm	/^unsigned int$/;"	l
va	obj/user/faultallocbad.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/faultallocbad.asm	/^void *$/;"	l
void	obj/user/faultallocbad.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultallocbad.asm	/^void$/;"	l
width	obj/user/faultallocbad.asm	/^				width = 0;$/;"	d
width	obj/user/faultallocbad.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/faultbadhandler.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/faultbadhandler.asm	/^Disassembly of section .text:$/;"	l
_start	obj/user/faultbadhandler.asm	/^_start:$/;"	l
altflag	obj/user/faultbadhandler.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultbadhandler.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/faultbadhandler.asm	/^args_exist:$/;"	l
base	obj/user/faultbadhandler.asm	/^			base = 10;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 16;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 8;$/;"	d
base	obj/user/faultbadhandler.asm	/^		base = 10;$/;"	d
binaryname	obj/user/faultbadhandler.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/faultbadhandler.asm	/^	buf = vbuf;$/;"	d
c	obj/user/faultbadhandler.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/faultbadhandler.asm	/^				ch = *fmt;$/;"	d
char	obj/user/faultbadhandler.asm	/^char *$/;"	l
clrflag	obj/user/faultbadhandler.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/faultbadhandler.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/faultbadhandler.asm	/^				color = 0;$/;"	d
color	obj/user/faultbadhandler.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/faultbadhandler.asm	/^	colorswitch:$/;"	l
const	obj/user/faultbadhandler.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultbadhandler.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/faultbadhandler.asm	/^	d = dst;$/;"	d
default	obj/user/faultbadhandler.asm	/^		default:$/;"	l
dig	obj/user/faultbadhandler.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/faultbadhandler.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/faultbadhandler.asm	/^envid_t$/;"	l
err	obj/user/faultbadhandler.asm	/^				err = -err;$/;"	d
err	obj/user/faultbadhandler.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultbadhandler.asm	/^    err:$/;"	l
err	obj/user/faultbadhandler.asm	/^err:$/;"	l
err1	obj/user/faultbadhandler.asm	/^    err1:$/;"	l
err2	obj/user/faultbadhandler.asm	/^    err2:$/;"	l
err3	obj/user/faultbadhandler.asm	/^    err3:$/;"	l
fd	obj/user/faultbadhandler.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultbadhandler.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/faultbadhandler.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/faultbadhandler.asm	/^int $/;"	l
int	obj/user/faultbadhandler.asm	/^int color;$/;"	l
int	obj/user/faultbadhandler.asm	/^int$/;"	l
int32_t	obj/user/faultbadhandler.asm	/^int32_t$/;"	l
lflag	obj/user/faultbadhandler.asm	/^		lflag = 0;$/;"	d
long	obj/user/faultbadhandler.asm	/^long$/;"	l
m	obj/user/faultbadhandler.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultbadhandler.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultbadhandler.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/faultbadhandler.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/faultbadhandler.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/faultbadhandler.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/faultbadhandler.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/faultbadhandler.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/faultbadhandler.asm	/^		number:$/;"	l
nva	obj/user/faultbadhandler.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/faultbadhandler.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/faultbadhandler.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultbadhandler.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultbadhandler.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/faultbadhandler.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultbadhandler.asm	/^			padc = '0';$/;"	d
precision	obj/user/faultbadhandler.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultbadhandler.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/faultbadhandler.asm	/^		process_precision:$/;"	l
pte	obj/user/faultbadhandler.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/faultbadhandler.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultbadhandler.asm	/^			r = 0;$/;"	d
r	obj/user/faultbadhandler.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultbadhandler.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/faultbadhandler.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/faultbadhandler.asm	/^	reswitch:$/;"	l
ret	obj/user/faultbadhandler.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultbadhandler.asm	/^	ret = dst;$/;"	d
s	obj/user/faultbadhandler.asm	/^	s = src;$/;"	d
size_t	obj/user/faultbadhandler.asm	/^size_t$/;"	l
ssize_t	obj/user/faultbadhandler.asm	/^ssize_t$/;"	l
static	obj/user/faultbadhandler.asm	/^static int$/;"	l
static	obj/user/faultbadhandler.asm	/^static long long$/;"	l
static	obj/user/faultbadhandler.asm	/^static ssize_t$/;"	l
static	obj/user/faultbadhandler.asm	/^static unsigned long long$/;"	l
static	obj/user/faultbadhandler.asm	/^static void$/;"	l
thisenv	obj/user/faultbadhandler.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/faultbadhandler.asm	/^unsigned int$/;"	l
va	obj/user/faultbadhandler.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/faultbadhandler.asm	/^void *$/;"	l
void	obj/user/faultbadhandler.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultbadhandler.asm	/^void$/;"	l
width	obj/user/faultbadhandler.asm	/^				width = 0;$/;"	d
width	obj/user/faultbadhandler.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/faultdie.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/faultdie.asm	/^Disassembly of section .text:$/;"	l
_pgfault_handler	obj/user/faultdie.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	obj/user/faultdie.asm	/^_pgfault_upcall:$/;"	l
_start	obj/user/faultdie.asm	/^_start:$/;"	l
altflag	obj/user/faultdie.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultdie.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/faultdie.asm	/^args_exist:$/;"	l
base	obj/user/faultdie.asm	/^			base = 10;$/;"	d
base	obj/user/faultdie.asm	/^			base = 16;$/;"	d
base	obj/user/faultdie.asm	/^			base = 8;$/;"	d
base	obj/user/faultdie.asm	/^		base = 10;$/;"	d
binaryname	obj/user/faultdie.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/faultdie.asm	/^	buf = vbuf;$/;"	d
c	obj/user/faultdie.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/faultdie.asm	/^				ch = *fmt;$/;"	d
char	obj/user/faultdie.asm	/^char *$/;"	l
clrflag	obj/user/faultdie.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/faultdie.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/faultdie.asm	/^				color = 0;$/;"	d
color	obj/user/faultdie.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/faultdie.asm	/^	colorswitch:$/;"	l
const	obj/user/faultdie.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultdie.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/faultdie.asm	/^	d = dst;$/;"	d
default	obj/user/faultdie.asm	/^		default:$/;"	l
dig	obj/user/faultdie.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/faultdie.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/faultdie.asm	/^envid_t$/;"	l
err	obj/user/faultdie.asm	/^				err = -err;$/;"	d
err	obj/user/faultdie.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultdie.asm	/^    err:$/;"	l
err	obj/user/faultdie.asm	/^err:$/;"	l
err1	obj/user/faultdie.asm	/^    err1:$/;"	l
err2	obj/user/faultdie.asm	/^    err2:$/;"	l
err3	obj/user/faultdie.asm	/^    err3:$/;"	l
fd	obj/user/faultdie.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultdie.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/faultdie.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/faultdie.asm	/^int $/;"	l
int	obj/user/faultdie.asm	/^int color;$/;"	l
int	obj/user/faultdie.asm	/^int$/;"	l
int32_t	obj/user/faultdie.asm	/^int32_t$/;"	l
lflag	obj/user/faultdie.asm	/^		lflag = 0;$/;"	d
long	obj/user/faultdie.asm	/^long$/;"	l
m	obj/user/faultdie.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultdie.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultdie.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/faultdie.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/faultdie.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/faultdie.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/faultdie.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/faultdie.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultdie.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultdie.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultdie.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/faultdie.asm	/^		number:$/;"	l
nva	obj/user/faultdie.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/faultdie.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/faultdie.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultdie.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultdie.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/faultdie.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultdie.asm	/^			padc = '0';$/;"	d
precision	obj/user/faultdie.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultdie.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/faultdie.asm	/^		process_precision:$/;"	l
pte	obj/user/faultdie.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/faultdie.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultdie.asm	/^			r = 0;$/;"	d
r	obj/user/faultdie.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultdie.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/faultdie.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/faultdie.asm	/^	reswitch:$/;"	l
ret	obj/user/faultdie.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultdie.asm	/^	ret = dst;$/;"	d
s	obj/user/faultdie.asm	/^	s = src;$/;"	d
size_t	obj/user/faultdie.asm	/^size_t$/;"	l
ssize_t	obj/user/faultdie.asm	/^ssize_t$/;"	l
static	obj/user/faultdie.asm	/^static int$/;"	l
static	obj/user/faultdie.asm	/^static long long$/;"	l
static	obj/user/faultdie.asm	/^static ssize_t$/;"	l
static	obj/user/faultdie.asm	/^static unsigned long long$/;"	l
static	obj/user/faultdie.asm	/^static void$/;"	l
thisenv	obj/user/faultdie.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/faultdie.asm	/^unsigned int$/;"	l
va	obj/user/faultdie.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/faultdie.asm	/^void *$/;"	l
void	obj/user/faultdie.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultdie.asm	/^void$/;"	l
width	obj/user/faultdie.asm	/^				width = 0;$/;"	d
width	obj/user/faultdie.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/faultevilhandler.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/faultevilhandler.asm	/^Disassembly of section .text:$/;"	l
_start	obj/user/faultevilhandler.asm	/^_start:$/;"	l
altflag	obj/user/faultevilhandler.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultevilhandler.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/faultevilhandler.asm	/^args_exist:$/;"	l
base	obj/user/faultevilhandler.asm	/^			base = 10;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 16;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 8;$/;"	d
base	obj/user/faultevilhandler.asm	/^		base = 10;$/;"	d
binaryname	obj/user/faultevilhandler.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/faultevilhandler.asm	/^	buf = vbuf;$/;"	d
c	obj/user/faultevilhandler.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/faultevilhandler.asm	/^				ch = *fmt;$/;"	d
char	obj/user/faultevilhandler.asm	/^char *$/;"	l
clrflag	obj/user/faultevilhandler.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/faultevilhandler.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/faultevilhandler.asm	/^				color = 0;$/;"	d
color	obj/user/faultevilhandler.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/faultevilhandler.asm	/^	colorswitch:$/;"	l
const	obj/user/faultevilhandler.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultevilhandler.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/faultevilhandler.asm	/^	d = dst;$/;"	d
default	obj/user/faultevilhandler.asm	/^		default:$/;"	l
dig	obj/user/faultevilhandler.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/faultevilhandler.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/faultevilhandler.asm	/^envid_t$/;"	l
err	obj/user/faultevilhandler.asm	/^				err = -err;$/;"	d
err	obj/user/faultevilhandler.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultevilhandler.asm	/^    err:$/;"	l
err	obj/user/faultevilhandler.asm	/^err:$/;"	l
err1	obj/user/faultevilhandler.asm	/^    err1:$/;"	l
err2	obj/user/faultevilhandler.asm	/^    err2:$/;"	l
err3	obj/user/faultevilhandler.asm	/^    err3:$/;"	l
fd	obj/user/faultevilhandler.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultevilhandler.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/faultevilhandler.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/faultevilhandler.asm	/^int $/;"	l
int	obj/user/faultevilhandler.asm	/^int color;$/;"	l
int	obj/user/faultevilhandler.asm	/^int$/;"	l
int32_t	obj/user/faultevilhandler.asm	/^int32_t$/;"	l
lflag	obj/user/faultevilhandler.asm	/^		lflag = 0;$/;"	d
long	obj/user/faultevilhandler.asm	/^long$/;"	l
m	obj/user/faultevilhandler.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultevilhandler.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultevilhandler.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/faultevilhandler.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/faultevilhandler.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/faultevilhandler.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/faultevilhandler.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/faultevilhandler.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/faultevilhandler.asm	/^		number:$/;"	l
nva	obj/user/faultevilhandler.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/faultevilhandler.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/faultevilhandler.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultevilhandler.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultevilhandler.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/faultevilhandler.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultevilhandler.asm	/^			padc = '0';$/;"	d
precision	obj/user/faultevilhandler.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultevilhandler.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/faultevilhandler.asm	/^		process_precision:$/;"	l
pte	obj/user/faultevilhandler.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/faultevilhandler.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultevilhandler.asm	/^			r = 0;$/;"	d
r	obj/user/faultevilhandler.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultevilhandler.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/faultevilhandler.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/faultevilhandler.asm	/^	reswitch:$/;"	l
ret	obj/user/faultevilhandler.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultevilhandler.asm	/^	ret = dst;$/;"	d
s	obj/user/faultevilhandler.asm	/^	s = src;$/;"	d
size_t	obj/user/faultevilhandler.asm	/^size_t$/;"	l
ssize_t	obj/user/faultevilhandler.asm	/^ssize_t$/;"	l
static	obj/user/faultevilhandler.asm	/^static int$/;"	l
static	obj/user/faultevilhandler.asm	/^static long long$/;"	l
static	obj/user/faultevilhandler.asm	/^static ssize_t$/;"	l
static	obj/user/faultevilhandler.asm	/^static unsigned long long$/;"	l
static	obj/user/faultevilhandler.asm	/^static void$/;"	l
thisenv	obj/user/faultevilhandler.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/faultevilhandler.asm	/^unsigned int$/;"	l
va	obj/user/faultevilhandler.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/faultevilhandler.asm	/^void *$/;"	l
void	obj/user/faultevilhandler.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultevilhandler.asm	/^void$/;"	l
width	obj/user/faultevilhandler.asm	/^				width = 0;$/;"	d
width	obj/user/faultevilhandler.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/faultnostack.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/faultnostack.asm	/^Disassembly of section .text:$/;"	l
_pgfault_handler	obj/user/faultnostack.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	obj/user/faultnostack.asm	/^_pgfault_upcall:$/;"	l
_start	obj/user/faultnostack.asm	/^_start:$/;"	l
altflag	obj/user/faultnostack.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultnostack.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/faultnostack.asm	/^args_exist:$/;"	l
base	obj/user/faultnostack.asm	/^			base = 10;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 16;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 8;$/;"	d
base	obj/user/faultnostack.asm	/^		base = 10;$/;"	d
binaryname	obj/user/faultnostack.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/faultnostack.asm	/^	buf = vbuf;$/;"	d
c	obj/user/faultnostack.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/faultnostack.asm	/^				ch = *fmt;$/;"	d
char	obj/user/faultnostack.asm	/^char *$/;"	l
clrflag	obj/user/faultnostack.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/faultnostack.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/faultnostack.asm	/^				color = 0;$/;"	d
color	obj/user/faultnostack.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/faultnostack.asm	/^	colorswitch:$/;"	l
const	obj/user/faultnostack.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultnostack.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/faultnostack.asm	/^	d = dst;$/;"	d
default	obj/user/faultnostack.asm	/^		default:$/;"	l
dig	obj/user/faultnostack.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/faultnostack.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/faultnostack.asm	/^envid_t$/;"	l
err	obj/user/faultnostack.asm	/^				err = -err;$/;"	d
err	obj/user/faultnostack.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultnostack.asm	/^    err:$/;"	l
err	obj/user/faultnostack.asm	/^err:$/;"	l
err1	obj/user/faultnostack.asm	/^    err1:$/;"	l
err2	obj/user/faultnostack.asm	/^    err2:$/;"	l
err3	obj/user/faultnostack.asm	/^    err3:$/;"	l
fd	obj/user/faultnostack.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultnostack.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/faultnostack.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/faultnostack.asm	/^int $/;"	l
int	obj/user/faultnostack.asm	/^int color;$/;"	l
int	obj/user/faultnostack.asm	/^int$/;"	l
int32_t	obj/user/faultnostack.asm	/^int32_t$/;"	l
lflag	obj/user/faultnostack.asm	/^		lflag = 0;$/;"	d
long	obj/user/faultnostack.asm	/^long$/;"	l
m	obj/user/faultnostack.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultnostack.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultnostack.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/faultnostack.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/faultnostack.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/faultnostack.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/faultnostack.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/faultnostack.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultnostack.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultnostack.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultnostack.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/faultnostack.asm	/^		number:$/;"	l
nva	obj/user/faultnostack.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/faultnostack.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/faultnostack.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultnostack.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultnostack.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/faultnostack.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultnostack.asm	/^			padc = '0';$/;"	d
precision	obj/user/faultnostack.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultnostack.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/faultnostack.asm	/^		process_precision:$/;"	l
pte	obj/user/faultnostack.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/faultnostack.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultnostack.asm	/^			r = 0;$/;"	d
r	obj/user/faultnostack.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultnostack.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/faultnostack.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/faultnostack.asm	/^	reswitch:$/;"	l
ret	obj/user/faultnostack.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultnostack.asm	/^	ret = dst;$/;"	d
s	obj/user/faultnostack.asm	/^	s = src;$/;"	d
size_t	obj/user/faultnostack.asm	/^size_t$/;"	l
ssize_t	obj/user/faultnostack.asm	/^ssize_t$/;"	l
static	obj/user/faultnostack.asm	/^static int$/;"	l
static	obj/user/faultnostack.asm	/^static long long$/;"	l
static	obj/user/faultnostack.asm	/^static ssize_t$/;"	l
static	obj/user/faultnostack.asm	/^static unsigned long long$/;"	l
static	obj/user/faultnostack.asm	/^static void$/;"	l
thisenv	obj/user/faultnostack.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/faultnostack.asm	/^unsigned int$/;"	l
va	obj/user/faultnostack.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/faultnostack.asm	/^void *$/;"	l
void	obj/user/faultnostack.asm	/^void _pgfault_upcall();$/;"	l
void	obj/user/faultnostack.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultnostack.asm	/^void$/;"	l
width	obj/user/faultnostack.asm	/^				width = 0;$/;"	d
width	obj/user/faultnostack.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/faultread.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/faultread.asm	/^Disassembly of section .text:$/;"	l
_start	obj/user/faultread.asm	/^_start:$/;"	l
altflag	obj/user/faultread.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultread.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/faultread.asm	/^args_exist:$/;"	l
base	obj/user/faultread.asm	/^			base = 10;$/;"	d
base	obj/user/faultread.asm	/^			base = 16;$/;"	d
base	obj/user/faultread.asm	/^			base = 8;$/;"	d
base	obj/user/faultread.asm	/^		base = 10;$/;"	d
binaryname	obj/user/faultread.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/faultread.asm	/^	buf = vbuf;$/;"	d
c	obj/user/faultread.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/faultread.asm	/^				ch = *fmt;$/;"	d
char	obj/user/faultread.asm	/^char *$/;"	l
clrflag	obj/user/faultread.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/faultread.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/faultread.asm	/^				color = 0;$/;"	d
color	obj/user/faultread.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/faultread.asm	/^	colorswitch:$/;"	l
const	obj/user/faultread.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultread.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/faultread.asm	/^	d = dst;$/;"	d
default	obj/user/faultread.asm	/^		default:$/;"	l
dig	obj/user/faultread.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/faultread.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/faultread.asm	/^envid_t$/;"	l
err	obj/user/faultread.asm	/^				err = -err;$/;"	d
err	obj/user/faultread.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultread.asm	/^    err:$/;"	l
err	obj/user/faultread.asm	/^err:$/;"	l
err1	obj/user/faultread.asm	/^    err1:$/;"	l
err2	obj/user/faultread.asm	/^    err2:$/;"	l
err3	obj/user/faultread.asm	/^    err3:$/;"	l
fd	obj/user/faultread.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultread.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/faultread.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/faultread.asm	/^int $/;"	l
int	obj/user/faultread.asm	/^int color;$/;"	l
int	obj/user/faultread.asm	/^int$/;"	l
int32_t	obj/user/faultread.asm	/^int32_t$/;"	l
lflag	obj/user/faultread.asm	/^		lflag = 0;$/;"	d
long	obj/user/faultread.asm	/^long$/;"	l
m	obj/user/faultread.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultread.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultread.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/faultread.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/faultread.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/faultread.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/faultread.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/faultread.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultread.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultread.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/faultread.asm	/^		number:$/;"	l
nva	obj/user/faultread.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/faultread.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/faultread.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultread.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultread.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/faultread.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultread.asm	/^			padc = '0';$/;"	d
precision	obj/user/faultread.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultread.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/faultread.asm	/^		process_precision:$/;"	l
pte	obj/user/faultread.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/faultread.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultread.asm	/^			r = 0;$/;"	d
r	obj/user/faultread.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultread.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/faultread.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/faultread.asm	/^	reswitch:$/;"	l
ret	obj/user/faultread.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultread.asm	/^	ret = dst;$/;"	d
s	obj/user/faultread.asm	/^	s = src;$/;"	d
size_t	obj/user/faultread.asm	/^size_t$/;"	l
ssize_t	obj/user/faultread.asm	/^ssize_t$/;"	l
static	obj/user/faultread.asm	/^static int$/;"	l
static	obj/user/faultread.asm	/^static long long$/;"	l
static	obj/user/faultread.asm	/^static ssize_t$/;"	l
static	obj/user/faultread.asm	/^static unsigned long long$/;"	l
static	obj/user/faultread.asm	/^static void$/;"	l
thisenv	obj/user/faultread.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/faultread.asm	/^unsigned int$/;"	l
va	obj/user/faultread.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/faultread.asm	/^void *$/;"	l
void	obj/user/faultread.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultread.asm	/^void$/;"	l
width	obj/user/faultread.asm	/^				width = 0;$/;"	d
width	obj/user/faultread.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/faultreadkernel.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/faultreadkernel.asm	/^Disassembly of section .text:$/;"	l
_start	obj/user/faultreadkernel.asm	/^_start:$/;"	l
altflag	obj/user/faultreadkernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/faultreadkernel.asm	/^args_exist:$/;"	l
base	obj/user/faultreadkernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 8;$/;"	d
base	obj/user/faultreadkernel.asm	/^		base = 10;$/;"	d
binaryname	obj/user/faultreadkernel.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/faultreadkernel.asm	/^	buf = vbuf;$/;"	d
c	obj/user/faultreadkernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/faultreadkernel.asm	/^				ch = *fmt;$/;"	d
char	obj/user/faultreadkernel.asm	/^char *$/;"	l
clrflag	obj/user/faultreadkernel.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/faultreadkernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/faultreadkernel.asm	/^				color = 0;$/;"	d
color	obj/user/faultreadkernel.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/faultreadkernel.asm	/^	colorswitch:$/;"	l
const	obj/user/faultreadkernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultreadkernel.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/faultreadkernel.asm	/^	d = dst;$/;"	d
default	obj/user/faultreadkernel.asm	/^		default:$/;"	l
dig	obj/user/faultreadkernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/faultreadkernel.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/faultreadkernel.asm	/^envid_t$/;"	l
err	obj/user/faultreadkernel.asm	/^				err = -err;$/;"	d
err	obj/user/faultreadkernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultreadkernel.asm	/^    err:$/;"	l
err	obj/user/faultreadkernel.asm	/^err:$/;"	l
err1	obj/user/faultreadkernel.asm	/^    err1:$/;"	l
err2	obj/user/faultreadkernel.asm	/^    err2:$/;"	l
err3	obj/user/faultreadkernel.asm	/^    err3:$/;"	l
fd	obj/user/faultreadkernel.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultreadkernel.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/faultreadkernel.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/faultreadkernel.asm	/^int $/;"	l
int	obj/user/faultreadkernel.asm	/^int color;$/;"	l
int	obj/user/faultreadkernel.asm	/^int$/;"	l
int32_t	obj/user/faultreadkernel.asm	/^int32_t$/;"	l
lflag	obj/user/faultreadkernel.asm	/^		lflag = 0;$/;"	d
long	obj/user/faultreadkernel.asm	/^long$/;"	l
m	obj/user/faultreadkernel.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultreadkernel.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultreadkernel.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/faultreadkernel.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/faultreadkernel.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/faultreadkernel.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/faultreadkernel.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/faultreadkernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/faultreadkernel.asm	/^		number:$/;"	l
nva	obj/user/faultreadkernel.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/faultreadkernel.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/faultreadkernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultreadkernel.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultreadkernel.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/faultreadkernel.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultreadkernel.asm	/^			padc = '0';$/;"	d
precision	obj/user/faultreadkernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultreadkernel.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/faultreadkernel.asm	/^		process_precision:$/;"	l
pte	obj/user/faultreadkernel.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/faultreadkernel.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultreadkernel.asm	/^			r = 0;$/;"	d
r	obj/user/faultreadkernel.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultreadkernel.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/faultreadkernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/faultreadkernel.asm	/^	reswitch:$/;"	l
ret	obj/user/faultreadkernel.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultreadkernel.asm	/^	ret = dst;$/;"	d
s	obj/user/faultreadkernel.asm	/^	s = src;$/;"	d
size_t	obj/user/faultreadkernel.asm	/^size_t$/;"	l
ssize_t	obj/user/faultreadkernel.asm	/^ssize_t$/;"	l
static	obj/user/faultreadkernel.asm	/^static int$/;"	l
static	obj/user/faultreadkernel.asm	/^static long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static ssize_t$/;"	l
static	obj/user/faultreadkernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static void$/;"	l
thisenv	obj/user/faultreadkernel.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/faultreadkernel.asm	/^unsigned int$/;"	l
va	obj/user/faultreadkernel.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/faultreadkernel.asm	/^void *$/;"	l
void	obj/user/faultreadkernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultreadkernel.asm	/^void$/;"	l
width	obj/user/faultreadkernel.asm	/^				width = 0;$/;"	d
width	obj/user/faultreadkernel.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/faultregs.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/faultregs.asm	/^Disassembly of section .text:$/;"	l
_pgfault_handler	obj/user/faultregs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	obj/user/faultregs.asm	/^_pgfault_upcall:$/;"	l
_start	obj/user/faultregs.asm	/^_start:$/;"	l
altflag	obj/user/faultregs.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultregs.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/faultregs.asm	/^args_exist:$/;"	l
base	obj/user/faultregs.asm	/^			base = 10;$/;"	d
base	obj/user/faultregs.asm	/^			base = 16;$/;"	d
base	obj/user/faultregs.asm	/^			base = 8;$/;"	d
base	obj/user/faultregs.asm	/^		base = 10;$/;"	d
binaryname	obj/user/faultregs.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/faultregs.asm	/^	buf = vbuf;$/;"	d
c	obj/user/faultregs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/faultregs.asm	/^				ch = *fmt;$/;"	d
char	obj/user/faultregs.asm	/^char *$/;"	l
clrflag	obj/user/faultregs.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/faultregs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/faultregs.asm	/^				color = 0;$/;"	d
color	obj/user/faultregs.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/faultregs.asm	/^	colorswitch:$/;"	l
const	obj/user/faultregs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultregs.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/faultregs.asm	/^	d = dst;$/;"	d
default	obj/user/faultregs.asm	/^		default:$/;"	l
dig	obj/user/faultregs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/faultregs.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/faultregs.asm	/^envid_t$/;"	l
err	obj/user/faultregs.asm	/^				err = -err;$/;"	d
err	obj/user/faultregs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultregs.asm	/^    err:$/;"	l
err	obj/user/faultregs.asm	/^err:$/;"	l
err1	obj/user/faultregs.asm	/^    err1:$/;"	l
err2	obj/user/faultregs.asm	/^    err2:$/;"	l
err3	obj/user/faultregs.asm	/^    err3:$/;"	l
fd	obj/user/faultregs.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultregs.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/faultregs.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/faultregs.asm	/^int $/;"	l
int	obj/user/faultregs.asm	/^int color;$/;"	l
int	obj/user/faultregs.asm	/^int$/;"	l
int32_t	obj/user/faultregs.asm	/^int32_t$/;"	l
lflag	obj/user/faultregs.asm	/^		lflag = 0;$/;"	d
long	obj/user/faultregs.asm	/^long$/;"	l
m	obj/user/faultregs.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultregs.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultregs.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
mismatch	obj/user/faultregs.asm	/^			mismatch = 1;					\\$/;"	d
n	obj/user/faultregs.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/faultregs.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/faultregs.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/faultregs.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/faultregs.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultregs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultregs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultregs.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/faultregs.asm	/^		number:$/;"	l
nva	obj/user/faultregs.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/faultregs.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/faultregs.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultregs.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultregs.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/faultregs.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultregs.asm	/^			padc = '0';$/;"	d
precision	obj/user/faultregs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultregs.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/faultregs.asm	/^		process_precision:$/;"	l
pte	obj/user/faultregs.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/faultregs.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultregs.asm	/^			r = 0;$/;"	d
r	obj/user/faultregs.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultregs.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/faultregs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/faultregs.asm	/^	reswitch:$/;"	l
ret	obj/user/faultregs.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultregs.asm	/^	ret = dst;$/;"	d
s	obj/user/faultregs.asm	/^	s = src;$/;"	d
size_t	obj/user/faultregs.asm	/^size_t$/;"	l
ssize_t	obj/user/faultregs.asm	/^ssize_t$/;"	l
static	obj/user/faultregs.asm	/^static int$/;"	l
static	obj/user/faultregs.asm	/^static long long$/;"	l
static	obj/user/faultregs.asm	/^static ssize_t$/;"	l
static	obj/user/faultregs.asm	/^static struct regs before, during, after;$/;"	t
static	obj/user/faultregs.asm	/^static unsigned long long$/;"	l
static	obj/user/faultregs.asm	/^static void$/;"	l
thisenv	obj/user/faultregs.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/faultregs.asm	/^unsigned int$/;"	l
va	obj/user/faultregs.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/faultregs.asm	/^void *$/;"	l
void	obj/user/faultregs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultregs.asm	/^void$/;"	l
width	obj/user/faultregs.asm	/^				width = 0;$/;"	d
width	obj/user/faultregs.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/faultwrite.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/faultwrite.asm	/^Disassembly of section .text:$/;"	l
_start	obj/user/faultwrite.asm	/^_start:$/;"	l
altflag	obj/user/faultwrite.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwrite.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/faultwrite.asm	/^args_exist:$/;"	l
base	obj/user/faultwrite.asm	/^			base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 16;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 8;$/;"	d
base	obj/user/faultwrite.asm	/^		base = 10;$/;"	d
binaryname	obj/user/faultwrite.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/faultwrite.asm	/^	buf = vbuf;$/;"	d
c	obj/user/faultwrite.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/faultwrite.asm	/^				ch = *fmt;$/;"	d
char	obj/user/faultwrite.asm	/^char *$/;"	l
clrflag	obj/user/faultwrite.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/faultwrite.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/faultwrite.asm	/^				color = 0;$/;"	d
color	obj/user/faultwrite.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/faultwrite.asm	/^	colorswitch:$/;"	l
const	obj/user/faultwrite.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultwrite.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/faultwrite.asm	/^	d = dst;$/;"	d
default	obj/user/faultwrite.asm	/^		default:$/;"	l
dig	obj/user/faultwrite.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/faultwrite.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/faultwrite.asm	/^envid_t$/;"	l
err	obj/user/faultwrite.asm	/^				err = -err;$/;"	d
err	obj/user/faultwrite.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwrite.asm	/^    err:$/;"	l
err	obj/user/faultwrite.asm	/^err:$/;"	l
err1	obj/user/faultwrite.asm	/^    err1:$/;"	l
err2	obj/user/faultwrite.asm	/^    err2:$/;"	l
err3	obj/user/faultwrite.asm	/^    err3:$/;"	l
fd	obj/user/faultwrite.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultwrite.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/faultwrite.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/faultwrite.asm	/^int $/;"	l
int	obj/user/faultwrite.asm	/^int color;$/;"	l
int	obj/user/faultwrite.asm	/^int$/;"	l
int32_t	obj/user/faultwrite.asm	/^int32_t$/;"	l
lflag	obj/user/faultwrite.asm	/^		lflag = 0;$/;"	d
long	obj/user/faultwrite.asm	/^long$/;"	l
m	obj/user/faultwrite.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultwrite.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultwrite.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/faultwrite.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/faultwrite.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/faultwrite.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/faultwrite.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/faultwrite.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwrite.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwrite.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultwrite.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/faultwrite.asm	/^		number:$/;"	l
nva	obj/user/faultwrite.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/faultwrite.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/faultwrite.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwrite.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultwrite.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/faultwrite.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultwrite.asm	/^			padc = '0';$/;"	d
precision	obj/user/faultwrite.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwrite.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/faultwrite.asm	/^		process_precision:$/;"	l
pte	obj/user/faultwrite.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/faultwrite.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultwrite.asm	/^			r = 0;$/;"	d
r	obj/user/faultwrite.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultwrite.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/faultwrite.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/faultwrite.asm	/^	reswitch:$/;"	l
ret	obj/user/faultwrite.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultwrite.asm	/^	ret = dst;$/;"	d
s	obj/user/faultwrite.asm	/^	s = src;$/;"	d
size_t	obj/user/faultwrite.asm	/^size_t$/;"	l
ssize_t	obj/user/faultwrite.asm	/^ssize_t$/;"	l
static	obj/user/faultwrite.asm	/^static int$/;"	l
static	obj/user/faultwrite.asm	/^static long long$/;"	l
static	obj/user/faultwrite.asm	/^static ssize_t$/;"	l
static	obj/user/faultwrite.asm	/^static unsigned long long$/;"	l
static	obj/user/faultwrite.asm	/^static void$/;"	l
thisenv	obj/user/faultwrite.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/faultwrite.asm	/^unsigned int$/;"	l
va	obj/user/faultwrite.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/faultwrite.asm	/^void *$/;"	l
void	obj/user/faultwrite.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultwrite.asm	/^void$/;"	l
width	obj/user/faultwrite.asm	/^				width = 0;$/;"	d
width	obj/user/faultwrite.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/faultwritekernel.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/faultwritekernel.asm	/^Disassembly of section .text:$/;"	l
_start	obj/user/faultwritekernel.asm	/^_start:$/;"	l
altflag	obj/user/faultwritekernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/faultwritekernel.asm	/^args_exist:$/;"	l
base	obj/user/faultwritekernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 8;$/;"	d
base	obj/user/faultwritekernel.asm	/^		base = 10;$/;"	d
binaryname	obj/user/faultwritekernel.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/faultwritekernel.asm	/^	buf = vbuf;$/;"	d
c	obj/user/faultwritekernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/faultwritekernel.asm	/^				ch = *fmt;$/;"	d
char	obj/user/faultwritekernel.asm	/^char *$/;"	l
clrflag	obj/user/faultwritekernel.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/faultwritekernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/faultwritekernel.asm	/^				color = 0;$/;"	d
color	obj/user/faultwritekernel.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/faultwritekernel.asm	/^	colorswitch:$/;"	l
const	obj/user/faultwritekernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultwritekernel.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/faultwritekernel.asm	/^	d = dst;$/;"	d
default	obj/user/faultwritekernel.asm	/^		default:$/;"	l
dig	obj/user/faultwritekernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/faultwritekernel.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/faultwritekernel.asm	/^envid_t$/;"	l
err	obj/user/faultwritekernel.asm	/^				err = -err;$/;"	d
err	obj/user/faultwritekernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwritekernel.asm	/^    err:$/;"	l
err	obj/user/faultwritekernel.asm	/^err:$/;"	l
err1	obj/user/faultwritekernel.asm	/^    err1:$/;"	l
err2	obj/user/faultwritekernel.asm	/^    err2:$/;"	l
err3	obj/user/faultwritekernel.asm	/^    err3:$/;"	l
fd	obj/user/faultwritekernel.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultwritekernel.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/faultwritekernel.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/faultwritekernel.asm	/^int $/;"	l
int	obj/user/faultwritekernel.asm	/^int color;$/;"	l
int	obj/user/faultwritekernel.asm	/^int$/;"	l
int32_t	obj/user/faultwritekernel.asm	/^int32_t$/;"	l
lflag	obj/user/faultwritekernel.asm	/^		lflag = 0;$/;"	d
long	obj/user/faultwritekernel.asm	/^long$/;"	l
m	obj/user/faultwritekernel.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultwritekernel.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultwritekernel.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/faultwritekernel.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/faultwritekernel.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/faultwritekernel.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/faultwritekernel.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/faultwritekernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/faultwritekernel.asm	/^		number:$/;"	l
nva	obj/user/faultwritekernel.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/faultwritekernel.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/faultwritekernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwritekernel.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultwritekernel.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/faultwritekernel.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultwritekernel.asm	/^			padc = '0';$/;"	d
precision	obj/user/faultwritekernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwritekernel.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/faultwritekernel.asm	/^		process_precision:$/;"	l
pte	obj/user/faultwritekernel.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/faultwritekernel.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultwritekernel.asm	/^			r = 0;$/;"	d
r	obj/user/faultwritekernel.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultwritekernel.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/faultwritekernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/faultwritekernel.asm	/^	reswitch:$/;"	l
ret	obj/user/faultwritekernel.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultwritekernel.asm	/^	ret = dst;$/;"	d
s	obj/user/faultwritekernel.asm	/^	s = src;$/;"	d
size_t	obj/user/faultwritekernel.asm	/^size_t$/;"	l
ssize_t	obj/user/faultwritekernel.asm	/^ssize_t$/;"	l
static	obj/user/faultwritekernel.asm	/^static int$/;"	l
static	obj/user/faultwritekernel.asm	/^static long long$/;"	l
static	obj/user/faultwritekernel.asm	/^static ssize_t$/;"	l
static	obj/user/faultwritekernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultwritekernel.asm	/^static void$/;"	l
thisenv	obj/user/faultwritekernel.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/faultwritekernel.asm	/^unsigned int$/;"	l
va	obj/user/faultwritekernel.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/faultwritekernel.asm	/^void *$/;"	l
void	obj/user/faultwritekernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultwritekernel.asm	/^void$/;"	l
width	obj/user/faultwritekernel.asm	/^				width = 0;$/;"	d
width	obj/user/faultwritekernel.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/forktree.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/forktree.asm	/^Disassembly of section .text:$/;"	l
_pgfault_handler	obj/user/forktree.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	obj/user/forktree.asm	/^_pgfault_upcall:$/;"	l
_start	obj/user/forktree.asm	/^_start:$/;"	l
addr	obj/user/forktree.asm	/^	addr = (void *)ROUNDDOWN(addr, PGSIZE);$/;"	d
altflag	obj/user/forktree.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/forktree.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/forktree.asm	/^args_exist:$/;"	l
base	obj/user/forktree.asm	/^			base = 10;$/;"	d
base	obj/user/forktree.asm	/^			base = 16;$/;"	d
base	obj/user/forktree.asm	/^			base = 8;$/;"	d
base	obj/user/forktree.asm	/^		base = 10;$/;"	d
binaryname	obj/user/forktree.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/forktree.asm	/^	buf = vbuf;$/;"	d
c	obj/user/forktree.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/forktree.asm	/^				ch = *fmt;$/;"	d
char	obj/user/forktree.asm	/^char *$/;"	l
clrflag	obj/user/forktree.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/forktree.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/forktree.asm	/^				color = 0;$/;"	d
color	obj/user/forktree.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/forktree.asm	/^	colorswitch:$/;"	l
const	obj/user/forktree.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/forktree.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/forktree.asm	/^	d = dst;$/;"	d
default	obj/user/forktree.asm	/^		default:$/;"	l
dig	obj/user/forktree.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/forktree.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/forktree.asm	/^envid_t$/;"	l
err	obj/user/forktree.asm	/^				err = -err;$/;"	d
err	obj/user/forktree.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/forktree.asm	/^    err:$/;"	l
err	obj/user/forktree.asm	/^err:$/;"	l
err1	obj/user/forktree.asm	/^    err1:$/;"	l
err2	obj/user/forktree.asm	/^    err2:$/;"	l
err3	obj/user/forktree.asm	/^    err3:$/;"	l
fd	obj/user/forktree.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/forktree.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/forktree.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/forktree.asm	/^int $/;"	l
int	obj/user/forktree.asm	/^int color;$/;"	l
int	obj/user/forktree.asm	/^int$/;"	l
int32_t	obj/user/forktree.asm	/^int32_t$/;"	l
lflag	obj/user/forktree.asm	/^		lflag = 0;$/;"	d
long	obj/user/forktree.asm	/^long$/;"	l
m	obj/user/forktree.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/forktree.asm	/^		m = n - tot;$/;"	d
m	obj/user/forktree.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/forktree.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/forktree.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/forktree.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/forktree.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/forktree.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/forktree.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/forktree.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/forktree.asm	/^		number:$/;"	l
nva	obj/user/forktree.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/forktree.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/forktree.asm	/^				p = "(null)";$/;"	d
p	obj/user/forktree.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/forktree.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/forktree.asm	/^			padc = '-';$/;"	d
padc	obj/user/forktree.asm	/^			padc = '0';$/;"	d
precision	obj/user/forktree.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/forktree.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/forktree.asm	/^		process_precision:$/;"	l
pte	obj/user/forktree.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/forktree.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/forktree.asm	/^			r = 0;$/;"	d
r	obj/user/forktree.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/forktree.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/forktree.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/forktree.asm	/^	reswitch:$/;"	l
ret	obj/user/forktree.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/forktree.asm	/^	ret = dst;$/;"	d
s	obj/user/forktree.asm	/^	s = src;$/;"	d
size_t	obj/user/forktree.asm	/^size_t$/;"	l
ssize_t	obj/user/forktree.asm	/^ssize_t$/;"	l
static	obj/user/forktree.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/forktree.asm	/^static int$/;"	l
static	obj/user/forktree.asm	/^static long long$/;"	l
static	obj/user/forktree.asm	/^static ssize_t$/;"	l
static	obj/user/forktree.asm	/^static unsigned long long$/;"	l
static	obj/user/forktree.asm	/^static void$/;"	l
thisenv	obj/user/forktree.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/forktree.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/forktree.asm	/^unsigned int$/;"	l
va	obj/user/forktree.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/forktree.asm	/^void *$/;"	l
void	obj/user/forktree.asm	/^void forktree(const char *cur);$/;"	l
void	obj/user/forktree.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/forktree.asm	/^void$/;"	l
width	obj/user/forktree.asm	/^				width = 0;$/;"	d
width	obj/user/forktree.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/hello.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/hello.asm	/^Disassembly of section .text:$/;"	l
_start	obj/user/hello.asm	/^_start:$/;"	l
altflag	obj/user/hello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/hello.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/hello.asm	/^args_exist:$/;"	l
base	obj/user/hello.asm	/^			base = 10;$/;"	d
base	obj/user/hello.asm	/^			base = 16;$/;"	d
base	obj/user/hello.asm	/^			base = 8;$/;"	d
base	obj/user/hello.asm	/^		base = 10;$/;"	d
binaryname	obj/user/hello.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/hello.asm	/^	buf = vbuf;$/;"	d
c	obj/user/hello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/hello.asm	/^				ch = *fmt;$/;"	d
char	obj/user/hello.asm	/^char *$/;"	l
clrflag	obj/user/hello.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/hello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/hello.asm	/^				color = 0;$/;"	d
color	obj/user/hello.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/hello.asm	/^	colorswitch:$/;"	l
const	obj/user/hello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/hello.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/hello.asm	/^	d = dst;$/;"	d
default	obj/user/hello.asm	/^		default:$/;"	l
dig	obj/user/hello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/hello.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/hello.asm	/^envid_t$/;"	l
err	obj/user/hello.asm	/^				err = -err;$/;"	d
err	obj/user/hello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/hello.asm	/^    err:$/;"	l
err	obj/user/hello.asm	/^err:$/;"	l
err1	obj/user/hello.asm	/^    err1:$/;"	l
err2	obj/user/hello.asm	/^    err2:$/;"	l
err3	obj/user/hello.asm	/^    err3:$/;"	l
fd	obj/user/hello.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/hello.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/hello.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/hello.asm	/^int $/;"	l
int	obj/user/hello.asm	/^int color;$/;"	l
int	obj/user/hello.asm	/^int$/;"	l
int32_t	obj/user/hello.asm	/^int32_t$/;"	l
lflag	obj/user/hello.asm	/^		lflag = 0;$/;"	d
long	obj/user/hello.asm	/^long$/;"	l
m	obj/user/hello.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/hello.asm	/^		m = n - tot;$/;"	d
m	obj/user/hello.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/hello.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/hello.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/hello.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/hello.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/hello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/hello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/hello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/hello.asm	/^		number:$/;"	l
nva	obj/user/hello.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/hello.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/hello.asm	/^				p = "(null)";$/;"	d
p	obj/user/hello.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/hello.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/hello.asm	/^			padc = '-';$/;"	d
padc	obj/user/hello.asm	/^			padc = '0';$/;"	d
precision	obj/user/hello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/hello.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/hello.asm	/^		process_precision:$/;"	l
pte	obj/user/hello.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/hello.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/hello.asm	/^			r = 0;$/;"	d
r	obj/user/hello.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/hello.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/hello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/hello.asm	/^	reswitch:$/;"	l
ret	obj/user/hello.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/hello.asm	/^	ret = dst;$/;"	d
s	obj/user/hello.asm	/^	s = src;$/;"	d
size_t	obj/user/hello.asm	/^size_t$/;"	l
ssize_t	obj/user/hello.asm	/^ssize_t$/;"	l
static	obj/user/hello.asm	/^static int$/;"	l
static	obj/user/hello.asm	/^static long long$/;"	l
static	obj/user/hello.asm	/^static ssize_t$/;"	l
static	obj/user/hello.asm	/^static unsigned long long$/;"	l
static	obj/user/hello.asm	/^static void$/;"	l
thisenv	obj/user/hello.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/hello.asm	/^unsigned int$/;"	l
va	obj/user/hello.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/hello.asm	/^void *$/;"	l
void	obj/user/hello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/hello.asm	/^void$/;"	l
width	obj/user/hello.asm	/^				width = 0;$/;"	d
width	obj/user/hello.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/httpd.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/httpd.asm	/^Disassembly of section .text:$/;"	l
_start	obj/user/httpd.asm	/^_start:$/;"	l
altflag	obj/user/httpd.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/httpd.asm	/^		altflag = 0;$/;"	d
ap	obj/user/httpd.asm	/^  ap = (u8_t *)&s_addr;$/;"	d
args_exist	obj/user/httpd.asm	/^args_exist:$/;"	l
base	obj/user/httpd.asm	/^			base = 10;$/;"	d
base	obj/user/httpd.asm	/^			base = 16;$/;"	d
base	obj/user/httpd.asm	/^			base = 8;$/;"	d
base	obj/user/httpd.asm	/^		base = 10;$/;"	d
base	obj/user/httpd.asm	/^        base = 16;$/;"	d
base	obj/user/httpd.asm	/^        base = 8;$/;"	d
base	obj/user/httpd.asm	/^    base = 10;$/;"	d
binaryname	obj/user/httpd.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/httpd.asm	/^	binaryname = "jhttpd";$/;"	d
buf	obj/user/httpd.asm	/^	buf = vbuf;$/;"	d
c	obj/user/httpd.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/httpd.asm	/^	c = ROUNDDOWN(v, PGSIZE);$/;"	d
c	obj/user/httpd.asm	/^        c = *++cp;$/;"	d
c	obj/user/httpd.asm	/^      c = *++cp;$/;"	d
c	obj/user/httpd.asm	/^  c = *cp;$/;"	d
ch	obj/user/httpd.asm	/^				ch = *fmt;$/;"	d
char	obj/user/httpd.asm	/^char *$/;"	l
clrflag	obj/user/httpd.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/httpd.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/httpd.asm	/^				color = 0;$/;"	d
color	obj/user/httpd.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/httpd.asm	/^	colorswitch:$/;"	l
const	obj/user/httpd.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/httpd.asm	/^const volatile struct Env *thisenv;$/;"	l
cont	obj/user/httpd.asm	/^		cont = (i + PGSIZE < n + 4) ? PTE_CONTINUED : 0;$/;"	d
d	obj/user/httpd.asm	/^	d = dst;$/;"	d
default	obj/user/httpd.asm	/^		default:$/;"	l
dig	obj/user/httpd.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/httpd.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/httpd.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/httpd.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/httpd.asm	/^envid_t$/;"	l
err	obj/user/httpd.asm	/^				err = -err;$/;"	d
err	obj/user/httpd.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/httpd.asm	/^    err:$/;"	l
err	obj/user/httpd.asm	/^err:$/;"	l
err1	obj/user/httpd.asm	/^    err1:$/;"	l
err2	obj/user/httpd.asm	/^    err2:$/;"	l
err3	obj/user/httpd.asm	/^    err3:$/;"	l
fd	obj/user/httpd.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/httpd.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
file_size	obj/user/httpd.asm	/^	file_size = stat.st_size;$/;"	d
fsenv	obj/user/httpd.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
i	obj/user/httpd.asm	/^    i = 0;$/;"	d
int	obj/user/httpd.asm	/^int $/;"	l
int	obj/user/httpd.asm	/^int color;$/;"	l
int	obj/user/httpd.asm	/^int$/;"	l
int32_t	obj/user/httpd.asm	/^int32_t$/;"	l
lflag	obj/user/httpd.asm	/^		lflag = 0;$/;"	d
long	obj/user/httpd.asm	/^long$/;"	l
m	obj/user/httpd.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/httpd.asm	/^		m = n - tot;$/;"	d
m	obj/user/httpd.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
mptr	obj/user/httpd.asm	/^			mptr = mbegin;$/;"	d
mptr	obj/user/httpd.asm	/^		mptr = ROUNDDOWN(mptr + PGSIZE, PGSIZE);$/;"	d
mptr	obj/user/httpd.asm	/^		mptr = mbegin;$/;"	d
n	obj/user/httpd.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/httpd.asm	/^	n = ROUNDUP(n, 4);$/;"	d
n	obj/user/httpd.asm	/^  n = pp - parts + 1;$/;"	d
newfd	obj/user/httpd.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/httpd.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/httpd.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/httpd.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/httpd.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/httpd.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/httpd.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/httpd.asm	/^		number:$/;"	l
nva	obj/user/httpd.asm	/^	nva = fd2data(newfd);$/;"	d
nwrap	obj/user/httpd.asm	/^	nwrap = 0;$/;"	d
ova	obj/user/httpd.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/httpd.asm	/^				p = "(null)";$/;"	d
p	obj/user/httpd.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/httpd.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/httpd.asm	/^			padc = '-';$/;"	d
padc	obj/user/httpd.asm	/^			padc = '0';$/;"	d
precision	obj/user/httpd.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/httpd.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/httpd.asm	/^		process_precision:$/;"	l
pte	obj/user/httpd.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/httpd.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/httpd.asm	/^			r = 0;$/;"	d
r	obj/user/httpd.asm	/^		r = http_request_parse(req, buffer);$/;"	d
r	obj/user/httpd.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/httpd.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/httpd.asm	/^	r = send_data(req, fd);$/;"	d
r	obj/user/httpd.asm	/^	r = snprintf(buf, 128, "Content-Type: %s\\r\\n", type);$/;"	d
r	obj/user/httpd.asm	/^	r = snprintf(buf, 512, "HTTP\/" HTTP_VERSION" %d %s\\r\\n"$/;"	d
r	obj/user/httpd.asm	/^	r = snprintf(buf, 64, "Content-Length: %ld\\r\\n", (long)size);$/;"	d
rc	obj/user/httpd.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
ref	obj/user/httpd.asm	/^		ref = (uint32_t*) (ROUNDUP(mptr, PGSIZE) - 4);$/;"	d
ref	obj/user/httpd.asm	/^	ref = (uint32_t*) (c + PGSIZE - 4);$/;"	d
ref	obj/user/httpd.asm	/^	ref = (uint32_t*) (mptr + i - 4);$/;"	d
rem	obj/user/httpd.asm	/^      rem = *ap % (u8_t)10;$/;"	d
reswitch	obj/user/httpd.asm	/^	reswitch:$/;"	l
ret	obj/user/httpd.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/httpd.asm	/^	ret = dst;$/;"	d
rp	obj/user/httpd.asm	/^  rp = str;$/;"	d
s	obj/user/httpd.asm	/^	s = src;$/;"	d
size_t	obj/user/httpd.asm	/^size_t$/;"	l
ssize_t	obj/user/httpd.asm	/^ssize_t$/;"	l
static	obj/user/httpd.asm	/^static int$/;"	l
static	obj/user/httpd.asm	/^static long long$/;"	l
static	obj/user/httpd.asm	/^static ssize_t$/;"	l
static	obj/user/httpd.asm	/^static unsigned long long$/;"	l
static	obj/user/httpd.asm	/^static void$/;"	l
thisenv	obj/user/httpd.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
type	obj/user/httpd.asm	/^	type = mime_type(req->url);$/;"	d
u16_t	obj/user/httpd.asm	/^u16_t$/;"	l
u32_t	obj/user/httpd.asm	/^u32_t$/;"	l
unsigned	obj/user/httpd.asm	/^unsigned int$/;"	l
url	obj/user/httpd.asm	/^	url = request;$/;"	d
url_len	obj/user/httpd.asm	/^	url_len = request - url;$/;"	d
v	obj/user/httpd.asm	/^			v = mptr;$/;"	d
v	obj/user/httpd.asm	/^	v = mptr;$/;"	d
va	obj/user/httpd.asm	/^	va = fd2data(fd0);$/;"	d
val	obj/user/httpd.asm	/^        val = (val * base) + (int)(c - '0');$/;"	d
val	obj/user/httpd.asm	/^        val = (val << 4) | (int)(c + 10 - (islower(c) ? 'a' : 'A'));$/;"	d
val	obj/user/httpd.asm	/^    val = 0;$/;"	d
version	obj/user/httpd.asm	/^	version = request;$/;"	d
version_len	obj/user/httpd.asm	/^	version_len = request - version;$/;"	d
void	obj/user/httpd.asm	/^void *$/;"	l
void	obj/user/httpd.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/httpd.asm	/^void$/;"	l
width	obj/user/httpd.asm	/^				width = 0;$/;"	d
width	obj/user/httpd.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/icode.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/icode.asm	/^Disassembly of section .text:$/;"	l
_start	obj/user/icode.asm	/^_start:$/;"	l
altflag	obj/user/icode.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/icode.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/icode.asm	/^args_exist:$/;"	l
argv_store	obj/user/icode.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
base	obj/user/icode.asm	/^			base = 10;$/;"	d
base	obj/user/icode.asm	/^			base = 16;$/;"	d
base	obj/user/icode.asm	/^			base = 8;$/;"	d
base	obj/user/icode.asm	/^		base = 10;$/;"	d
binaryname	obj/user/icode.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/icode.asm	/^	binaryname = "icode";$/;"	d
buf	obj/user/icode.asm	/^	buf = vbuf;$/;"	d
c	obj/user/icode.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/icode.asm	/^				ch = *fmt;$/;"	d
char	obj/user/icode.asm	/^char *$/;"	l
child	obj/user/icode.asm	/^	child = r;$/;"	d
child_tf	obj/user/icode.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
clrflag	obj/user/icode.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/icode.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/icode.asm	/^				color = 0;$/;"	d
color	obj/user/icode.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/icode.asm	/^	colorswitch:$/;"	l
const	obj/user/icode.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/icode.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/icode.asm	/^	d = dst;$/;"	d
default	obj/user/icode.asm	/^		default:$/;"	l
dig	obj/user/icode.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/icode.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/icode.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/icode.asm	/^	dst_in = dst;$/;"	d
elf	obj/user/icode.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
envid_t	obj/user/icode.asm	/^envid_t$/;"	l
err	obj/user/icode.asm	/^				err = -err;$/;"	d
err	obj/user/icode.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/icode.asm	/^    err:$/;"	l
err	obj/user/icode.asm	/^err:$/;"	l
err1	obj/user/icode.asm	/^    err1:$/;"	l
err2	obj/user/icode.asm	/^    err2:$/;"	l
err3	obj/user/icode.asm	/^    err3:$/;"	l
error	obj/user/icode.asm	/^error:$/;"	l
fd	obj/user/icode.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/icode.asm	/^	fd = -1;$/;"	d
fd	obj/user/icode.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/icode.asm	/^	fd = r;$/;"	d
fsenv	obj/user/icode.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/icode.asm	/^int $/;"	l
int	obj/user/icode.asm	/^int color;$/;"	l
int	obj/user/icode.asm	/^int$/;"	l
int32_t	obj/user/icode.asm	/^int32_t$/;"	l
lflag	obj/user/icode.asm	/^		lflag = 0;$/;"	d
long	obj/user/icode.asm	/^long$/;"	l
m	obj/user/icode.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/icode.asm	/^		m = n - tot;$/;"	d
m	obj/user/icode.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/icode.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/icode.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/icode.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/icode.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/icode.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/icode.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/icode.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/icode.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/icode.asm	/^		number:$/;"	l
nva	obj/user/icode.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/icode.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/icode.asm	/^				p = "(null)";$/;"	d
p	obj/user/icode.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/icode.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/icode.asm	/^			padc = '-';$/;"	d
padc	obj/user/icode.asm	/^			padc = '0';$/;"	d
perm	obj/user/icode.asm	/^		perm = PTE_P | PTE_U;$/;"	d
ph	obj/user/icode.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
precision	obj/user/icode.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/icode.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/icode.asm	/^		process_precision:$/;"	l
pte	obj/user/icode.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/icode.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/icode.asm	/^			r = 0;$/;"	d
r	obj/user/icode.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/icode.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/icode.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/icode.asm	/^	reswitch:$/;"	l
ret	obj/user/icode.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/icode.asm	/^	ret = dst;$/;"	d
s	obj/user/icode.asm	/^	s = src;$/;"	d
size_t	obj/user/icode.asm	/^size_t$/;"	l
ssize_t	obj/user/icode.asm	/^ssize_t$/;"	l
static	obj/user/icode.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/icode.asm	/^static int$/;"	l
static	obj/user/icode.asm	/^static long long$/;"	l
static	obj/user/icode.asm	/^static ssize_t$/;"	l
static	obj/user/icode.asm	/^static unsigned long long$/;"	l
static	obj/user/icode.asm	/^static void$/;"	l
string_size	obj/user/icode.asm	/^	string_size = 0;$/;"	d
string_store	obj/user/icode.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
thisenv	obj/user/icode.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/icode.asm	/^unsigned int$/;"	l
va	obj/user/icode.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/icode.asm	/^void *$/;"	l
void	obj/user/icode.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/icode.asm	/^void$/;"	l
width	obj/user/icode.asm	/^				width = 0;$/;"	d
width	obj/user/icode.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/idle.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/idle.asm	/^Disassembly of section .text:$/;"	l
_start	obj/user/idle.asm	/^_start:$/;"	l
altflag	obj/user/idle.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/idle.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/idle.asm	/^args_exist:$/;"	l
base	obj/user/idle.asm	/^			base = 10;$/;"	d
base	obj/user/idle.asm	/^			base = 16;$/;"	d
base	obj/user/idle.asm	/^			base = 8;$/;"	d
base	obj/user/idle.asm	/^		base = 10;$/;"	d
binaryname	obj/user/idle.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/idle.asm	/^	binaryname = "idle";$/;"	d
buf	obj/user/idle.asm	/^	buf = vbuf;$/;"	d
c	obj/user/idle.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/idle.asm	/^				ch = *fmt;$/;"	d
char	obj/user/idle.asm	/^char *$/;"	l
clrflag	obj/user/idle.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/idle.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/idle.asm	/^				color = 0;$/;"	d
color	obj/user/idle.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/idle.asm	/^	colorswitch:$/;"	l
const	obj/user/idle.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/idle.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/idle.asm	/^	d = dst;$/;"	d
default	obj/user/idle.asm	/^		default:$/;"	l
dig	obj/user/idle.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/idle.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/idle.asm	/^envid_t$/;"	l
err	obj/user/idle.asm	/^				err = -err;$/;"	d
err	obj/user/idle.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/idle.asm	/^    err:$/;"	l
err	obj/user/idle.asm	/^err:$/;"	l
err1	obj/user/idle.asm	/^    err1:$/;"	l
err2	obj/user/idle.asm	/^    err2:$/;"	l
err3	obj/user/idle.asm	/^    err3:$/;"	l
fd	obj/user/idle.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/idle.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/idle.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/idle.asm	/^int $/;"	l
int	obj/user/idle.asm	/^int color;$/;"	l
int	obj/user/idle.asm	/^int$/;"	l
int32_t	obj/user/idle.asm	/^int32_t$/;"	l
lflag	obj/user/idle.asm	/^		lflag = 0;$/;"	d
long	obj/user/idle.asm	/^long$/;"	l
m	obj/user/idle.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/idle.asm	/^		m = n - tot;$/;"	d
m	obj/user/idle.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/idle.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/idle.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/idle.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/idle.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/idle.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/idle.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/idle.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/idle.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/idle.asm	/^		number:$/;"	l
nva	obj/user/idle.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/idle.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/idle.asm	/^				p = "(null)";$/;"	d
p	obj/user/idle.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/idle.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/idle.asm	/^			padc = '-';$/;"	d
padc	obj/user/idle.asm	/^			padc = '0';$/;"	d
precision	obj/user/idle.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/idle.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/idle.asm	/^		process_precision:$/;"	l
pte	obj/user/idle.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/idle.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/idle.asm	/^			r = 0;$/;"	d
r	obj/user/idle.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/idle.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/idle.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/idle.asm	/^	reswitch:$/;"	l
ret	obj/user/idle.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/idle.asm	/^	ret = dst;$/;"	d
s	obj/user/idle.asm	/^	s = src;$/;"	d
size_t	obj/user/idle.asm	/^size_t$/;"	l
ssize_t	obj/user/idle.asm	/^ssize_t$/;"	l
static	obj/user/idle.asm	/^static int$/;"	l
static	obj/user/idle.asm	/^static long long$/;"	l
static	obj/user/idle.asm	/^static ssize_t$/;"	l
static	obj/user/idle.asm	/^static unsigned long long$/;"	l
static	obj/user/idle.asm	/^static void$/;"	l
thisenv	obj/user/idle.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/idle.asm	/^unsigned int$/;"	l
va	obj/user/idle.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/idle.asm	/^void *$/;"	l
void	obj/user/idle.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/idle.asm	/^void$/;"	l
width	obj/user/idle.asm	/^				width = 0;$/;"	d
width	obj/user/idle.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/init.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/init.asm	/^Disassembly of section .text:$/;"	l
_start	obj/user/init.asm	/^_start:$/;"	l
altflag	obj/user/init.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/init.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/init.asm	/^args_exist:$/;"	l
argv_store	obj/user/init.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
base	obj/user/init.asm	/^			base = 10;$/;"	d
base	obj/user/init.asm	/^			base = 16;$/;"	d
base	obj/user/init.asm	/^			base = 8;$/;"	d
base	obj/user/init.asm	/^		base = 10;$/;"	d
binaryname	obj/user/init.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/init.asm	/^	buf = vbuf;$/;"	d
c	obj/user/init.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/init.asm	/^				ch = *fmt;$/;"	d
char	obj/user/init.asm	/^char *$/;"	l
char	obj/user/init.asm	/^char bss[6000];$/;"	l
child	obj/user/init.asm	/^	child = r;$/;"	d
child_tf	obj/user/init.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
clrflag	obj/user/init.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/init.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/init.asm	/^				color = 0;$/;"	d
color	obj/user/init.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/init.asm	/^	colorswitch:$/;"	l
const	obj/user/init.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/init.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/init.asm	/^	d = dst;$/;"	d
default	obj/user/init.asm	/^		default:$/;"	l
dig	obj/user/init.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/init.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/init.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/init.asm	/^	dst_in = dst;$/;"	d
e	obj/user/init.asm	/^	e = &envs[ENVX(envid)];$/;"	d
elf	obj/user/init.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
envid_t	obj/user/init.asm	/^envid_t$/;"	l
err	obj/user/init.asm	/^				err = -err;$/;"	d
err	obj/user/init.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/init.asm	/^    err:$/;"	l
err	obj/user/init.asm	/^err:$/;"	l
err1	obj/user/init.asm	/^    err1:$/;"	l
err2	obj/user/init.asm	/^    err2:$/;"	l
err3	obj/user/init.asm	/^    err3:$/;"	l
error	obj/user/init.asm	/^error:$/;"	l
fd	obj/user/init.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/init.asm	/^	fd = -1;$/;"	d
fd	obj/user/init.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/init.asm	/^	fd = r;$/;"	d
fsenv	obj/user/init.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/init.asm	/^int $/;"	l
int	obj/user/init.asm	/^int color;$/;"	l
int	obj/user/init.asm	/^int$/;"	l
int32_t	obj/user/init.asm	/^int32_t$/;"	l
lflag	obj/user/init.asm	/^		lflag = 0;$/;"	d
long	obj/user/init.asm	/^long$/;"	l
m	obj/user/init.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/init.asm	/^		m = n - tot;$/;"	d
m	obj/user/init.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/init.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/init.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/init.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/init.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/init.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/init.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/init.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/init.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/init.asm	/^		number:$/;"	l
nva	obj/user/init.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/init.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/init.asm	/^				p = "(null)";$/;"	d
p	obj/user/init.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/init.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/init.asm	/^			padc = '-';$/;"	d
padc	obj/user/init.asm	/^			padc = '0';$/;"	d
perm	obj/user/init.asm	/^		perm = PTE_P | PTE_U;$/;"	d
ph	obj/user/init.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
precision	obj/user/init.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/init.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/init.asm	/^		process_precision:$/;"	l
pte	obj/user/init.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/init.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/init.asm	/^			r = 0;$/;"	d
r	obj/user/init.asm	/^		r = spawnl("\/sh", "sh", (char*)0);$/;"	d
r	obj/user/init.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/init.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/init.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/init.asm	/^	reswitch:$/;"	l
ret	obj/user/init.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/init.asm	/^	ret = dst;$/;"	d
s	obj/user/init.asm	/^	s = src;$/;"	d
size_t	obj/user/init.asm	/^size_t$/;"	l
ssize_t	obj/user/init.asm	/^ssize_t$/;"	l
static	obj/user/init.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/init.asm	/^static int$/;"	l
static	obj/user/init.asm	/^static long long$/;"	l
static	obj/user/init.asm	/^static ssize_t$/;"	l
static	obj/user/init.asm	/^static unsigned long long$/;"	l
static	obj/user/init.asm	/^static void$/;"	l
string_size	obj/user/init.asm	/^	string_size = 0;$/;"	d
string_store	obj/user/init.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
thisenv	obj/user/init.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/init.asm	/^unsigned int$/;"	l
va	obj/user/init.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/init.asm	/^void *$/;"	l
void	obj/user/init.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/init.asm	/^void$/;"	l
want	obj/user/init.asm	/^	want = 0xf989e;$/;"	d
width	obj/user/init.asm	/^				width = 0;$/;"	d
width	obj/user/init.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/ls.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/ls.asm	/^Disassembly of section .text:$/;"	l
_start	obj/user/ls.asm	/^_start:$/;"	l
altflag	obj/user/ls.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/ls.asm	/^		altflag = 0;$/;"	d
arg	obj/user/ls.asm	/^	arg = (unsigned char) *args->curarg;$/;"	d
args_exist	obj/user/ls.asm	/^args_exist:$/;"	l
base	obj/user/ls.asm	/^			base = 10;$/;"	d
base	obj/user/ls.asm	/^			base = 16;$/;"	d
base	obj/user/ls.asm	/^			base = 8;$/;"	d
base	obj/user/ls.asm	/^		base = 10;$/;"	d
binaryname	obj/user/ls.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/ls.asm	/^	buf = vbuf;$/;"	d
c	obj/user/ls.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/ls.asm	/^				ch = *fmt;$/;"	d
char	obj/user/ls.asm	/^char *$/;"	l
clrflag	obj/user/ls.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/ls.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/ls.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/ls.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
color	obj/user/ls.asm	/^				color = 0;$/;"	d
color	obj/user/ls.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/ls.asm	/^	colorswitch:$/;"	l
const	obj/user/ls.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/ls.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/ls.asm	/^	d = dst;$/;"	d
default	obj/user/ls.asm	/^		default:$/;"	l
dig	obj/user/ls.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/ls.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/ls.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/ls.asm	/^	dst_in = dst;$/;"	d
endofargs	obj/user/ls.asm	/^    endofargs:$/;"	l
envid_t	obj/user/ls.asm	/^envid_t$/;"	l
err	obj/user/ls.asm	/^				err = -err;$/;"	d
err	obj/user/ls.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/ls.asm	/^    err:$/;"	l
err	obj/user/ls.asm	/^err:$/;"	l
err1	obj/user/ls.asm	/^    err1:$/;"	l
err2	obj/user/ls.asm	/^    err2:$/;"	l
err3	obj/user/ls.asm	/^    err3:$/;"	l
fd	obj/user/ls.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/ls.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/ls.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/ls.asm	/^int $/;"	l
int	obj/user/ls.asm	/^int color;$/;"	l
int	obj/user/ls.asm	/^int$/;"	l
int32_t	obj/user/ls.asm	/^int32_t$/;"	l
lflag	obj/user/ls.asm	/^		lflag = 0;$/;"	d
long	obj/user/ls.asm	/^long$/;"	l
m	obj/user/ls.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/ls.asm	/^		m = n - tot;$/;"	d
m	obj/user/ls.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/ls.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/ls.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/ls.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/ls.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/ls.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/ls.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/ls.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/ls.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/ls.asm	/^		number:$/;"	l
nva	obj/user/ls.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/ls.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/ls.asm	/^				p = "(null)";$/;"	d
p	obj/user/ls.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/ls.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/ls.asm	/^			padc = '-';$/;"	d
padc	obj/user/ls.asm	/^			padc = '0';$/;"	d
precision	obj/user/ls.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/ls.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/ls.asm	/^		process_precision:$/;"	l
pte	obj/user/ls.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/ls.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/ls.asm	/^			r = 0;$/;"	d
r	obj/user/ls.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/ls.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/ls.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/ls.asm	/^	reswitch:$/;"	l
ret	obj/user/ls.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/ls.asm	/^	ret = dst;$/;"	d
s	obj/user/ls.asm	/^	s = src;$/;"	d
sep	obj/user/ls.asm	/^			sep = "";$/;"	d
sep	obj/user/ls.asm	/^			sep = "\/";$/;"	d
size_t	obj/user/ls.asm	/^size_t$/;"	l
ssize_t	obj/user/ls.asm	/^ssize_t$/;"	l
static	obj/user/ls.asm	/^static int$/;"	l
static	obj/user/ls.asm	/^static long long$/;"	l
static	obj/user/ls.asm	/^static ssize_t$/;"	l
static	obj/user/ls.asm	/^static unsigned long long$/;"	l
static	obj/user/ls.asm	/^static void$/;"	l
thisenv	obj/user/ls.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/ls.asm	/^unsigned int$/;"	l
va	obj/user/ls.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/ls.asm	/^void *$/;"	l
void	obj/user/ls.asm	/^void ls1(const char*, bool, off_t, const char*);$/;"	l
void	obj/user/ls.asm	/^void lsdir(const char*, const char*);$/;"	l
void	obj/user/ls.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/ls.asm	/^void$/;"	l
width	obj/user/ls.asm	/^				width = 0;$/;"	d
width	obj/user/ls.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/lsfd.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/lsfd.asm	/^Disassembly of section .text:$/;"	l
_start	obj/user/lsfd.asm	/^_start:$/;"	l
altflag	obj/user/lsfd.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/lsfd.asm	/^		altflag = 0;$/;"	d
arg	obj/user/lsfd.asm	/^	arg = (unsigned char) *args->curarg;$/;"	d
args_exist	obj/user/lsfd.asm	/^args_exist:$/;"	l
base	obj/user/lsfd.asm	/^			base = 10;$/;"	d
base	obj/user/lsfd.asm	/^			base = 16;$/;"	d
base	obj/user/lsfd.asm	/^			base = 8;$/;"	d
base	obj/user/lsfd.asm	/^		base = 10;$/;"	d
binaryname	obj/user/lsfd.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/lsfd.asm	/^	buf = vbuf;$/;"	d
c	obj/user/lsfd.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/lsfd.asm	/^				ch = *fmt;$/;"	d
char	obj/user/lsfd.asm	/^char *$/;"	l
clrflag	obj/user/lsfd.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/lsfd.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/lsfd.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/lsfd.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
color	obj/user/lsfd.asm	/^				color = 0;$/;"	d
color	obj/user/lsfd.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/lsfd.asm	/^	colorswitch:$/;"	l
const	obj/user/lsfd.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/lsfd.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/lsfd.asm	/^	d = dst;$/;"	d
default	obj/user/lsfd.asm	/^		default:$/;"	l
dig	obj/user/lsfd.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/lsfd.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/lsfd.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/lsfd.asm	/^	dst_in = dst;$/;"	d
endofargs	obj/user/lsfd.asm	/^    endofargs:$/;"	l
envid_t	obj/user/lsfd.asm	/^envid_t$/;"	l
err	obj/user/lsfd.asm	/^				err = -err;$/;"	d
err	obj/user/lsfd.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/lsfd.asm	/^    err:$/;"	l
err	obj/user/lsfd.asm	/^err:$/;"	l
err1	obj/user/lsfd.asm	/^    err1:$/;"	l
err2	obj/user/lsfd.asm	/^    err2:$/;"	l
err3	obj/user/lsfd.asm	/^    err3:$/;"	l
fd	obj/user/lsfd.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/lsfd.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/lsfd.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/lsfd.asm	/^int $/;"	l
int	obj/user/lsfd.asm	/^int color;$/;"	l
int	obj/user/lsfd.asm	/^int$/;"	l
int32_t	obj/user/lsfd.asm	/^int32_t$/;"	l
lflag	obj/user/lsfd.asm	/^		lflag = 0;$/;"	d
long	obj/user/lsfd.asm	/^long$/;"	l
m	obj/user/lsfd.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/lsfd.asm	/^		m = n - tot;$/;"	d
m	obj/user/lsfd.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/lsfd.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/lsfd.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/lsfd.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/lsfd.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/lsfd.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/lsfd.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/lsfd.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/lsfd.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/lsfd.asm	/^		number:$/;"	l
nva	obj/user/lsfd.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/lsfd.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/lsfd.asm	/^				p = "(null)";$/;"	d
p	obj/user/lsfd.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/lsfd.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/lsfd.asm	/^			padc = '-';$/;"	d
padc	obj/user/lsfd.asm	/^			padc = '0';$/;"	d
precision	obj/user/lsfd.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/lsfd.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/lsfd.asm	/^		process_precision:$/;"	l
pte	obj/user/lsfd.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/lsfd.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/lsfd.asm	/^			r = 0;$/;"	d
r	obj/user/lsfd.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/lsfd.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/lsfd.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/lsfd.asm	/^	reswitch:$/;"	l
ret	obj/user/lsfd.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/lsfd.asm	/^	ret = dst;$/;"	d
s	obj/user/lsfd.asm	/^	s = src;$/;"	d
size_t	obj/user/lsfd.asm	/^size_t$/;"	l
ssize_t	obj/user/lsfd.asm	/^ssize_t$/;"	l
static	obj/user/lsfd.asm	/^static int$/;"	l
static	obj/user/lsfd.asm	/^static long long$/;"	l
static	obj/user/lsfd.asm	/^static ssize_t$/;"	l
static	obj/user/lsfd.asm	/^static unsigned long long$/;"	l
static	obj/user/lsfd.asm	/^static void$/;"	l
thisenv	obj/user/lsfd.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/lsfd.asm	/^unsigned int$/;"	l
usefprint	obj/user/lsfd.asm	/^			usefprint = 1;$/;"	d
va	obj/user/lsfd.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/lsfd.asm	/^void *$/;"	l
void	obj/user/lsfd.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/lsfd.asm	/^void$/;"	l
width	obj/user/lsfd.asm	/^				width = 0;$/;"	d
width	obj/user/lsfd.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/num.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/num.asm	/^Disassembly of section .text:$/;"	l
_start	obj/user/num.asm	/^_start:$/;"	l
altflag	obj/user/num.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/num.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/num.asm	/^args_exist:$/;"	l
base	obj/user/num.asm	/^			base = 10;$/;"	d
base	obj/user/num.asm	/^			base = 16;$/;"	d
base	obj/user/num.asm	/^			base = 8;$/;"	d
base	obj/user/num.asm	/^		base = 10;$/;"	d
binaryname	obj/user/num.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/num.asm	/^	binaryname = "num";$/;"	d
bol	obj/user/num.asm	/^			bol = 0;$/;"	d
bol	obj/user/num.asm	/^			bol = 1;$/;"	d
buf	obj/user/num.asm	/^	buf = vbuf;$/;"	d
c	obj/user/num.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/num.asm	/^				ch = *fmt;$/;"	d
char	obj/user/num.asm	/^char *$/;"	l
clrflag	obj/user/num.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/num.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/num.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/num.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
color	obj/user/num.asm	/^				color = 0;$/;"	d
color	obj/user/num.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/num.asm	/^	colorswitch:$/;"	l
const	obj/user/num.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/num.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/num.asm	/^	d = dst;$/;"	d
default	obj/user/num.asm	/^		default:$/;"	l
dig	obj/user/num.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/num.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/num.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/num.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/num.asm	/^envid_t$/;"	l
err	obj/user/num.asm	/^				err = -err;$/;"	d
err	obj/user/num.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/num.asm	/^    err:$/;"	l
err	obj/user/num.asm	/^err:$/;"	l
err1	obj/user/num.asm	/^    err1:$/;"	l
err2	obj/user/num.asm	/^    err2:$/;"	l
err3	obj/user/num.asm	/^    err3:$/;"	l
f	obj/user/num.asm	/^			f = open(argv[i], O_RDONLY);$/;"	d
fd	obj/user/num.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/num.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/num.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/num.asm	/^int $/;"	l
int	obj/user/num.asm	/^int bol = 1;$/;"	l
int	obj/user/num.asm	/^int color;$/;"	l
int	obj/user/num.asm	/^int line = 0;$/;"	l
int	obj/user/num.asm	/^int$/;"	l
int32_t	obj/user/num.asm	/^int32_t$/;"	l
lflag	obj/user/num.asm	/^		lflag = 0;$/;"	d
long	obj/user/num.asm	/^long$/;"	l
m	obj/user/num.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/num.asm	/^		m = n - tot;$/;"	d
m	obj/user/num.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/num.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/num.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/num.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/num.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/num.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/num.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/num.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/num.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/num.asm	/^		number:$/;"	l
nva	obj/user/num.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/num.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/num.asm	/^				p = "(null)";$/;"	d
p	obj/user/num.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/num.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/num.asm	/^			padc = '-';$/;"	d
padc	obj/user/num.asm	/^			padc = '0';$/;"	d
precision	obj/user/num.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/num.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/num.asm	/^		process_precision:$/;"	l
pte	obj/user/num.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/num.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/num.asm	/^			r = 0;$/;"	d
r	obj/user/num.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/num.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/num.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/num.asm	/^	reswitch:$/;"	l
ret	obj/user/num.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/num.asm	/^	ret = dst;$/;"	d
s	obj/user/num.asm	/^	s = src;$/;"	d
size_t	obj/user/num.asm	/^size_t$/;"	l
ssize_t	obj/user/num.asm	/^ssize_t$/;"	l
static	obj/user/num.asm	/^static int$/;"	l
static	obj/user/num.asm	/^static long long$/;"	l
static	obj/user/num.asm	/^static ssize_t$/;"	l
static	obj/user/num.asm	/^static unsigned long long$/;"	l
static	obj/user/num.asm	/^static void$/;"	l
thisenv	obj/user/num.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/num.asm	/^unsigned int$/;"	l
va	obj/user/num.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/num.asm	/^void *$/;"	l
void	obj/user/num.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/num.asm	/^void$/;"	l
width	obj/user/num.asm	/^				width = 0;$/;"	d
width	obj/user/num.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/pingpong.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/pingpong.asm	/^Disassembly of section .text:$/;"	l
_pgfault_handler	obj/user/pingpong.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	obj/user/pingpong.asm	/^_pgfault_upcall:$/;"	l
_start	obj/user/pingpong.asm	/^_start:$/;"	l
addr	obj/user/pingpong.asm	/^	addr = (void *)ROUNDDOWN(addr, PGSIZE);$/;"	d
altflag	obj/user/pingpong.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/pingpong.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/pingpong.asm	/^args_exist:$/;"	l
base	obj/user/pingpong.asm	/^			base = 10;$/;"	d
base	obj/user/pingpong.asm	/^			base = 16;$/;"	d
base	obj/user/pingpong.asm	/^			base = 8;$/;"	d
base	obj/user/pingpong.asm	/^		base = 10;$/;"	d
binaryname	obj/user/pingpong.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/pingpong.asm	/^	buf = vbuf;$/;"	d
c	obj/user/pingpong.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/pingpong.asm	/^				ch = *fmt;$/;"	d
char	obj/user/pingpong.asm	/^char *$/;"	l
clrflag	obj/user/pingpong.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/pingpong.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/pingpong.asm	/^				color = 0;$/;"	d
color	obj/user/pingpong.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/pingpong.asm	/^	colorswitch:$/;"	l
const	obj/user/pingpong.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/pingpong.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/pingpong.asm	/^	d = dst;$/;"	d
default	obj/user/pingpong.asm	/^		default:$/;"	l
dig	obj/user/pingpong.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/pingpong.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/pingpong.asm	/^envid_t$/;"	l
err	obj/user/pingpong.asm	/^				err = -err;$/;"	d
err	obj/user/pingpong.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/pingpong.asm	/^    err:$/;"	l
err	obj/user/pingpong.asm	/^err:$/;"	l
err1	obj/user/pingpong.asm	/^    err1:$/;"	l
err2	obj/user/pingpong.asm	/^    err2:$/;"	l
err3	obj/user/pingpong.asm	/^    err3:$/;"	l
fd	obj/user/pingpong.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/pingpong.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/pingpong.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/pingpong.asm	/^int $/;"	l
int	obj/user/pingpong.asm	/^int color;$/;"	l
int	obj/user/pingpong.asm	/^int$/;"	l
int32_t	obj/user/pingpong.asm	/^int32_t$/;"	l
lflag	obj/user/pingpong.asm	/^		lflag = 0;$/;"	d
long	obj/user/pingpong.asm	/^long$/;"	l
m	obj/user/pingpong.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/pingpong.asm	/^		m = n - tot;$/;"	d
m	obj/user/pingpong.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/pingpong.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/pingpong.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/pingpong.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/pingpong.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/pingpong.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/pingpong.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/pingpong.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/pingpong.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/pingpong.asm	/^		number:$/;"	l
nva	obj/user/pingpong.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/pingpong.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/pingpong.asm	/^				p = "(null)";$/;"	d
p	obj/user/pingpong.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/pingpong.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/pingpong.asm	/^			padc = '-';$/;"	d
padc	obj/user/pingpong.asm	/^			padc = '0';$/;"	d
precision	obj/user/pingpong.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pingpong.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/pingpong.asm	/^		process_precision:$/;"	l
pte	obj/user/pingpong.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/pingpong.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/pingpong.asm	/^			r = 0;$/;"	d
r	obj/user/pingpong.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/pingpong.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/pingpong.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/pingpong.asm	/^	reswitch:$/;"	l
ret	obj/user/pingpong.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/pingpong.asm	/^	ret = dst;$/;"	d
s	obj/user/pingpong.asm	/^	s = src;$/;"	d
size_t	obj/user/pingpong.asm	/^size_t$/;"	l
ssize_t	obj/user/pingpong.asm	/^ssize_t$/;"	l
static	obj/user/pingpong.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/pingpong.asm	/^static int$/;"	l
static	obj/user/pingpong.asm	/^static long long$/;"	l
static	obj/user/pingpong.asm	/^static ssize_t$/;"	l
static	obj/user/pingpong.asm	/^static unsigned long long$/;"	l
static	obj/user/pingpong.asm	/^static void$/;"	l
thisenv	obj/user/pingpong.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpong.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/pingpong.asm	/^unsigned int$/;"	l
va	obj/user/pingpong.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/pingpong.asm	/^void *$/;"	l
void	obj/user/pingpong.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/pingpong.asm	/^void$/;"	l
width	obj/user/pingpong.asm	/^				width = 0;$/;"	d
width	obj/user/pingpong.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/pingpongs.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/pingpongs.asm	/^Disassembly of section .text:$/;"	l
_pgfault_handler	obj/user/pingpongs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	obj/user/pingpongs.asm	/^_pgfault_upcall:$/;"	l
_start	obj/user/pingpongs.asm	/^_start:$/;"	l
addr	obj/user/pingpongs.asm	/^	addr = (void *)ROUNDDOWN(addr, PGSIZE);$/;"	d
altflag	obj/user/pingpongs.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/pingpongs.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/pingpongs.asm	/^args_exist:$/;"	l
base	obj/user/pingpongs.asm	/^			base = 10;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 16;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 8;$/;"	d
base	obj/user/pingpongs.asm	/^		base = 10;$/;"	d
binaryname	obj/user/pingpongs.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/pingpongs.asm	/^	buf = vbuf;$/;"	d
c	obj/user/pingpongs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/pingpongs.asm	/^				ch = *fmt;$/;"	d
char	obj/user/pingpongs.asm	/^char *$/;"	l
clrflag	obj/user/pingpongs.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/pingpongs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/pingpongs.asm	/^				color = 0;$/;"	d
color	obj/user/pingpongs.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/pingpongs.asm	/^	colorswitch:$/;"	l
const	obj/user/pingpongs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/pingpongs.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/pingpongs.asm	/^	d = dst;$/;"	d
default	obj/user/pingpongs.asm	/^		default:$/;"	l
dig	obj/user/pingpongs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/pingpongs.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/pingpongs.asm	/^envid_t$/;"	l
err	obj/user/pingpongs.asm	/^				err = -err;$/;"	d
err	obj/user/pingpongs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/pingpongs.asm	/^    err:$/;"	l
err	obj/user/pingpongs.asm	/^err:$/;"	l
err1	obj/user/pingpongs.asm	/^    err1:$/;"	l
err2	obj/user/pingpongs.asm	/^    err2:$/;"	l
err3	obj/user/pingpongs.asm	/^    err3:$/;"	l
fd	obj/user/pingpongs.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/pingpongs.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/pingpongs.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
i	obj/user/pingpongs.asm	/^	i = 0;$/;"	d
int	obj/user/pingpongs.asm	/^int $/;"	l
int	obj/user/pingpongs.asm	/^int color;$/;"	l
int	obj/user/pingpongs.asm	/^int$/;"	l
int32_t	obj/user/pingpongs.asm	/^int32_t$/;"	l
lflag	obj/user/pingpongs.asm	/^		lflag = 0;$/;"	d
long	obj/user/pingpongs.asm	/^long$/;"	l
m	obj/user/pingpongs.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/pingpongs.asm	/^		m = n - tot;$/;"	d
m	obj/user/pingpongs.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/pingpongs.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/pingpongs.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/pingpongs.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/pingpongs.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/pingpongs.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/pingpongs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/pingpongs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/pingpongs.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/pingpongs.asm	/^		number:$/;"	l
nva	obj/user/pingpongs.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/pingpongs.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/pingpongs.asm	/^				p = "(null)";$/;"	d
p	obj/user/pingpongs.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/pingpongs.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/pingpongs.asm	/^			padc = '-';$/;"	d
padc	obj/user/pingpongs.asm	/^			padc = '0';$/;"	d
precision	obj/user/pingpongs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pingpongs.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/pingpongs.asm	/^		process_precision:$/;"	l
pte	obj/user/pingpongs.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/pingpongs.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/pingpongs.asm	/^			r = 0;$/;"	d
r	obj/user/pingpongs.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/pingpongs.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/pingpongs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/pingpongs.asm	/^	reswitch:$/;"	l
ret	obj/user/pingpongs.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/pingpongs.asm	/^	ret = dst;$/;"	d
s	obj/user/pingpongs.asm	/^	s = src;$/;"	d
size_t	obj/user/pingpongs.asm	/^size_t$/;"	l
ssize_t	obj/user/pingpongs.asm	/^ssize_t$/;"	l
static	obj/user/pingpongs.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/pingpongs.asm	/^static int$/;"	l
static	obj/user/pingpongs.asm	/^static long long$/;"	l
static	obj/user/pingpongs.asm	/^static ssize_t$/;"	l
static	obj/user/pingpongs.asm	/^static unsigned long long$/;"	l
static	obj/user/pingpongs.asm	/^static void$/;"	l
thisenv	obj/user/pingpongs.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpongs.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
uint32_t	obj/user/pingpongs.asm	/^uint32_t val;$/;"	l
unsigned	obj/user/pingpongs.asm	/^unsigned int$/;"	l
va	obj/user/pingpongs.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/pingpongs.asm	/^void *$/;"	l
void	obj/user/pingpongs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/pingpongs.asm	/^void$/;"	l
width	obj/user/pingpongs.asm	/^				width = 0;$/;"	d
width	obj/user/pingpongs.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/primes.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/primes.asm	/^Disassembly of section .text:$/;"	l
_pgfault_handler	obj/user/primes.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	obj/user/primes.asm	/^_pgfault_upcall:$/;"	l
_start	obj/user/primes.asm	/^_start:$/;"	l
addr	obj/user/primes.asm	/^	addr = (void *)ROUNDDOWN(addr, PGSIZE);$/;"	d
altflag	obj/user/primes.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/primes.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/primes.asm	/^args_exist:$/;"	l
base	obj/user/primes.asm	/^			base = 10;$/;"	d
base	obj/user/primes.asm	/^			base = 16;$/;"	d
base	obj/user/primes.asm	/^			base = 8;$/;"	d
base	obj/user/primes.asm	/^		base = 10;$/;"	d
binaryname	obj/user/primes.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/primes.asm	/^	buf = vbuf;$/;"	d
c	obj/user/primes.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/primes.asm	/^				ch = *fmt;$/;"	d
char	obj/user/primes.asm	/^char *$/;"	l
clrflag	obj/user/primes.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/primes.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/primes.asm	/^				color = 0;$/;"	d
color	obj/user/primes.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/primes.asm	/^	colorswitch:$/;"	l
const	obj/user/primes.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/primes.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/primes.asm	/^	d = dst;$/;"	d
default	obj/user/primes.asm	/^		default:$/;"	l
dig	obj/user/primes.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/primes.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/primes.asm	/^envid_t$/;"	l
err	obj/user/primes.asm	/^				err = -err;$/;"	d
err	obj/user/primes.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/primes.asm	/^    err:$/;"	l
err	obj/user/primes.asm	/^err:$/;"	l
err1	obj/user/primes.asm	/^    err1:$/;"	l
err2	obj/user/primes.asm	/^    err2:$/;"	l
err3	obj/user/primes.asm	/^    err3:$/;"	l
fd	obj/user/primes.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/primes.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/primes.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
i	obj/user/primes.asm	/^		i = ipc_recv(&envid, 0, 0);$/;"	d
int	obj/user/primes.asm	/^int $/;"	l
int	obj/user/primes.asm	/^int color;$/;"	l
int	obj/user/primes.asm	/^int$/;"	l
int32_t	obj/user/primes.asm	/^int32_t$/;"	l
lflag	obj/user/primes.asm	/^		lflag = 0;$/;"	d
long	obj/user/primes.asm	/^long$/;"	l
m	obj/user/primes.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/primes.asm	/^		m = n - tot;$/;"	d
m	obj/user/primes.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/primes.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/primes.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/primes.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/primes.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/primes.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/primes.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/primes.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/primes.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/primes.asm	/^		number:$/;"	l
nva	obj/user/primes.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/primes.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/primes.asm	/^				p = "(null)";$/;"	d
p	obj/user/primes.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/primes.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/primes.asm	/^	p = ipc_recv(&envid, 0, 0);$/;"	d
padc	obj/user/primes.asm	/^			padc = '-';$/;"	d
padc	obj/user/primes.asm	/^			padc = '0';$/;"	d
precision	obj/user/primes.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/primes.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/primes.asm	/^		process_precision:$/;"	l
pte	obj/user/primes.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/primes.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/primes.asm	/^			r = 0;$/;"	d
r	obj/user/primes.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/primes.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/primes.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/primes.asm	/^	reswitch:$/;"	l
ret	obj/user/primes.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/primes.asm	/^	ret = dst;$/;"	d
s	obj/user/primes.asm	/^	s = src;$/;"	d
size_t	obj/user/primes.asm	/^size_t$/;"	l
ssize_t	obj/user/primes.asm	/^ssize_t$/;"	l
static	obj/user/primes.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/primes.asm	/^static int$/;"	l
static	obj/user/primes.asm	/^static long long$/;"	l
static	obj/user/primes.asm	/^static ssize_t$/;"	l
static	obj/user/primes.asm	/^static unsigned long long$/;"	l
static	obj/user/primes.asm	/^static void$/;"	l
thisenv	obj/user/primes.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/primes.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
top	obj/user/primes.asm	/^top:$/;"	l
unsigned	obj/user/primes.asm	/^unsigned int$/;"	l
unsigned	obj/user/primes.asm	/^unsigned$/;"	l
va	obj/user/primes.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/primes.asm	/^void *$/;"	l
void	obj/user/primes.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/primes.asm	/^void$/;"	l
width	obj/user/primes.asm	/^				width = 0;$/;"	d
width	obj/user/primes.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/primespipe.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/primespipe.asm	/^Disassembly of section .text:$/;"	l
_pgfault_handler	obj/user/primespipe.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	obj/user/primespipe.asm	/^_pgfault_upcall:$/;"	l
_start	obj/user/primespipe.asm	/^_start:$/;"	l
addr	obj/user/primespipe.asm	/^	addr = (void *)ROUNDDOWN(addr, PGSIZE);$/;"	d
altflag	obj/user/primespipe.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/primespipe.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/primespipe.asm	/^args_exist:$/;"	l
base	obj/user/primespipe.asm	/^			base = 10;$/;"	d
base	obj/user/primespipe.asm	/^			base = 16;$/;"	d
base	obj/user/primespipe.asm	/^			base = 8;$/;"	d
base	obj/user/primespipe.asm	/^		base = 10;$/;"	d
binaryname	obj/user/primespipe.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/primespipe.asm	/^	binaryname = "primespipe";$/;"	d
buf	obj/user/primespipe.asm	/^	buf = vbuf;$/;"	d
c	obj/user/primespipe.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/primespipe.asm	/^				ch = *fmt;$/;"	d
char	obj/user/primespipe.asm	/^char *$/;"	l
clrflag	obj/user/primespipe.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/primespipe.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/primespipe.asm	/^				color = 0;$/;"	d
color	obj/user/primespipe.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/primespipe.asm	/^	colorswitch:$/;"	l
const	obj/user/primespipe.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/primespipe.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/primespipe.asm	/^	d = dst;$/;"	d
default	obj/user/primespipe.asm	/^		default:$/;"	l
dig	obj/user/primespipe.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/primespipe.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/primespipe.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/primespipe.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/primespipe.asm	/^envid_t$/;"	l
err	obj/user/primespipe.asm	/^				err = -err;$/;"	d
err	obj/user/primespipe.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/primespipe.asm	/^    err:$/;"	l
err	obj/user/primespipe.asm	/^err:$/;"	l
err1	obj/user/primespipe.asm	/^    err1:$/;"	l
err2	obj/user/primespipe.asm	/^    err2:$/;"	l
err3	obj/user/primespipe.asm	/^    err3:$/;"	l
fd	obj/user/primespipe.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/primespipe.asm	/^		fd = pfd[0];$/;"	d
fd	obj/user/primespipe.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/primespipe.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/primespipe.asm	/^int $/;"	l
int	obj/user/primespipe.asm	/^int color;$/;"	l
int	obj/user/primespipe.asm	/^int$/;"	l
int32_t	obj/user/primespipe.asm	/^int32_t$/;"	l
lflag	obj/user/primespipe.asm	/^		lflag = 0;$/;"	d
long	obj/user/primespipe.asm	/^long$/;"	l
m	obj/user/primespipe.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/primespipe.asm	/^		m = n - tot;$/;"	d
m	obj/user/primespipe.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/primespipe.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/primespipe.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/primespipe.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/primespipe.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/primespipe.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/primespipe.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/primespipe.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/primespipe.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/primespipe.asm	/^		number:$/;"	l
nva	obj/user/primespipe.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/primespipe.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/primespipe.asm	/^				p = "(null)";$/;"	d
p	obj/user/primespipe.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/primespipe.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/primespipe.asm	/^			padc = '-';$/;"	d
padc	obj/user/primespipe.asm	/^			padc = '0';$/;"	d
precision	obj/user/primespipe.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/primespipe.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/primespipe.asm	/^		process_precision:$/;"	l
pte	obj/user/primespipe.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/primespipe.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/primespipe.asm	/^			r = 0;$/;"	d
r	obj/user/primespipe.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/primespipe.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/primespipe.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/primespipe.asm	/^	reswitch:$/;"	l
ret	obj/user/primespipe.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/primespipe.asm	/^	ret = dst;$/;"	d
s	obj/user/primespipe.asm	/^	s = src;$/;"	d
size_t	obj/user/primespipe.asm	/^size_t$/;"	l
ssize_t	obj/user/primespipe.asm	/^ssize_t$/;"	l
static	obj/user/primespipe.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/primespipe.asm	/^static int$/;"	l
static	obj/user/primespipe.asm	/^static long long$/;"	l
static	obj/user/primespipe.asm	/^static ssize_t$/;"	l
static	obj/user/primespipe.asm	/^static unsigned long long$/;"	l
static	obj/user/primespipe.asm	/^static void$/;"	l
thisenv	obj/user/primespipe.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/primespipe.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
top	obj/user/primespipe.asm	/^top:$/;"	l
unsigned	obj/user/primespipe.asm	/^unsigned int$/;"	l
unsigned	obj/user/primespipe.asm	/^unsigned$/;"	l
va	obj/user/primespipe.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/primespipe.asm	/^void *$/;"	l
void	obj/user/primespipe.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/primespipe.asm	/^void$/;"	l
wfd	obj/user/primespipe.asm	/^	wfd = pfd[1];$/;"	d
width	obj/user/primespipe.asm	/^				width = 0;$/;"	d
width	obj/user/primespipe.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/sendpage.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/sendpage.asm	/^Disassembly of section .text:$/;"	l
TEMP_ADDR	obj/user/sendpage.asm	/^#define TEMP_ADDR	((char*)0xa00000)$/;"	d
TEMP_ADDR_CHILD	obj/user/sendpage.asm	/^#define TEMP_ADDR_CHILD	((char*)0xb00000)$/;"	d
_pgfault_handler	obj/user/sendpage.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	obj/user/sendpage.asm	/^_pgfault_upcall:$/;"	l
_start	obj/user/sendpage.asm	/^_start:$/;"	l
addr	obj/user/sendpage.asm	/^	addr = (void *)ROUNDDOWN(addr, PGSIZE);$/;"	d
altflag	obj/user/sendpage.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/sendpage.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/sendpage.asm	/^args_exist:$/;"	l
base	obj/user/sendpage.asm	/^			base = 10;$/;"	d
base	obj/user/sendpage.asm	/^			base = 16;$/;"	d
base	obj/user/sendpage.asm	/^			base = 8;$/;"	d
base	obj/user/sendpage.asm	/^		base = 10;$/;"	d
binaryname	obj/user/sendpage.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/sendpage.asm	/^	buf = vbuf;$/;"	d
c	obj/user/sendpage.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/sendpage.asm	/^				ch = *fmt;$/;"	d
char	obj/user/sendpage.asm	/^char *$/;"	l
clrflag	obj/user/sendpage.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/sendpage.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/sendpage.asm	/^				color = 0;$/;"	d
color	obj/user/sendpage.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/sendpage.asm	/^	colorswitch:$/;"	l
const	obj/user/sendpage.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/sendpage.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/sendpage.asm	/^	d = dst;$/;"	d
default	obj/user/sendpage.asm	/^		default:$/;"	l
dig	obj/user/sendpage.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/sendpage.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/sendpage.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/sendpage.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/sendpage.asm	/^envid_t$/;"	l
err	obj/user/sendpage.asm	/^				err = -err;$/;"	d
err	obj/user/sendpage.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/sendpage.asm	/^    err:$/;"	l
err	obj/user/sendpage.asm	/^err:$/;"	l
err1	obj/user/sendpage.asm	/^    err1:$/;"	l
err2	obj/user/sendpage.asm	/^    err2:$/;"	l
err3	obj/user/sendpage.asm	/^    err3:$/;"	l
fd	obj/user/sendpage.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/sendpage.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/sendpage.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/sendpage.asm	/^int $/;"	l
int	obj/user/sendpage.asm	/^int color;$/;"	l
int	obj/user/sendpage.asm	/^int$/;"	l
int32_t	obj/user/sendpage.asm	/^int32_t$/;"	l
lflag	obj/user/sendpage.asm	/^		lflag = 0;$/;"	d
long	obj/user/sendpage.asm	/^long$/;"	l
m	obj/user/sendpage.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/sendpage.asm	/^		m = n - tot;$/;"	d
m	obj/user/sendpage.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/sendpage.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/sendpage.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/sendpage.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/sendpage.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/sendpage.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/sendpage.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/sendpage.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/sendpage.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/sendpage.asm	/^		number:$/;"	l
nva	obj/user/sendpage.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/sendpage.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/sendpage.asm	/^				p = "(null)";$/;"	d
p	obj/user/sendpage.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/sendpage.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/sendpage.asm	/^			padc = '-';$/;"	d
padc	obj/user/sendpage.asm	/^			padc = '0';$/;"	d
precision	obj/user/sendpage.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/sendpage.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/sendpage.asm	/^		process_precision:$/;"	l
pte	obj/user/sendpage.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/sendpage.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/sendpage.asm	/^			r = 0;$/;"	d
r	obj/user/sendpage.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/sendpage.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/sendpage.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/sendpage.asm	/^	reswitch:$/;"	l
ret	obj/user/sendpage.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/sendpage.asm	/^	ret = dst;$/;"	d
s	obj/user/sendpage.asm	/^	s = src;$/;"	d
size_t	obj/user/sendpage.asm	/^size_t$/;"	l
ssize_t	obj/user/sendpage.asm	/^ssize_t$/;"	l
static	obj/user/sendpage.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/sendpage.asm	/^static int$/;"	l
static	obj/user/sendpage.asm	/^static long long$/;"	l
static	obj/user/sendpage.asm	/^static ssize_t$/;"	l
static	obj/user/sendpage.asm	/^static unsigned long long$/;"	l
static	obj/user/sendpage.asm	/^static void$/;"	l
thisenv	obj/user/sendpage.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/sendpage.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/sendpage.asm	/^unsigned int$/;"	l
va	obj/user/sendpage.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/sendpage.asm	/^void *$/;"	l
void	obj/user/sendpage.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/sendpage.asm	/^void$/;"	l
width	obj/user/sendpage.asm	/^				width = 0;$/;"	d
width	obj/user/sendpage.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/sh.asm	/^#define ASM 1$/;"	d
BUFLEN	obj/user/sh.asm	/^#define BUFLEN 1024$/;"	d
Disassembly	obj/user/sh.asm	/^Disassembly of section .text:$/;"	l
MAXARGS	obj/user/sh.asm	/^#define MAXARGS 16$/;"	d
SYMBOLS	obj/user/sh.asm	/^#define SYMBOLS "<|>&;()"$/;"	d
WHITESPACE	obj/user/sh.asm	/^#define WHITESPACE " \\t\\r\\n"$/;"	d
_pgfault_handler	obj/user/sh.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	obj/user/sh.asm	/^_pgfault_upcall:$/;"	l
_start	obj/user/sh.asm	/^_start:$/;"	l
addr	obj/user/sh.asm	/^	addr = (void *)ROUNDDOWN(addr, PGSIZE);$/;"	d
again	obj/user/sh.asm	/^again:$/;"	l
altflag	obj/user/sh.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/sh.asm	/^		altflag = 0;$/;"	d
arg	obj/user/sh.asm	/^	arg = (unsigned char) *args->curarg;$/;"	d
argc	obj/user/sh.asm	/^	argc = 0;$/;"	d
args_exist	obj/user/sh.asm	/^args_exist:$/;"	l
argv_store	obj/user/sh.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
base	obj/user/sh.asm	/^			base = 10;$/;"	d
base	obj/user/sh.asm	/^			base = 16;$/;"	d
base	obj/user/sh.asm	/^			base = 8;$/;"	d
base	obj/user/sh.asm	/^		base = 10;$/;"	d
binaryname	obj/user/sh.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/sh.asm	/^		buf = readline(interactive ? "$ " : NULL);$/;"	d
buf	obj/user/sh.asm	/^	buf = vbuf;$/;"	d
c	obj/user/sh.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/sh.asm	/^		c = getchar();$/;"	d
c	obj/user/sh.asm	/^	c = nc;$/;"	d
ch	obj/user/sh.asm	/^				ch = *fmt;$/;"	d
char	obj/user/sh.asm	/^char *$/;"	l
child	obj/user/sh.asm	/^	child = r;$/;"	d
child_tf	obj/user/sh.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
clrflag	obj/user/sh.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/sh.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/sh.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/sh.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
color	obj/user/sh.asm	/^				color = 0;$/;"	d
color	obj/user/sh.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/sh.asm	/^	colorswitch:$/;"	l
const	obj/user/sh.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/sh.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/sh.asm	/^	d = dst;$/;"	d
default	obj/user/sh.asm	/^		default:$/;"	l
dig	obj/user/sh.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/sh.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/sh.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/sh.asm	/^	dst_in = dst;$/;"	d
e	obj/user/sh.asm	/^	e = &envs[ENVX(envid)];$/;"	d
echocmds	obj/user/sh.asm	/^			echocmds = 1;$/;"	d
echocmds	obj/user/sh.asm	/^	echocmds = 0;$/;"	d
echoing	obj/user/sh.asm	/^	echoing = iscons(0);$/;"	d
elf	obj/user/sh.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
endofargs	obj/user/sh.asm	/^    endofargs:$/;"	l
envid_t	obj/user/sh.asm	/^envid_t$/;"	l
err	obj/user/sh.asm	/^				err = -err;$/;"	d
err	obj/user/sh.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/sh.asm	/^    err:$/;"	l
err	obj/user/sh.asm	/^err:$/;"	l
err1	obj/user/sh.asm	/^    err1:$/;"	l
err2	obj/user/sh.asm	/^    err2:$/;"	l
err3	obj/user/sh.asm	/^    err3:$/;"	l
error	obj/user/sh.asm	/^error:$/;"	l
fd	obj/user/sh.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/sh.asm	/^	fd = -1;$/;"	d
fd	obj/user/sh.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/sh.asm	/^	fd = r;$/;"	d
fsenv	obj/user/sh.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
i	obj/user/sh.asm	/^	i = 0;$/;"	d
int	obj/user/sh.asm	/^int $/;"	l
int	obj/user/sh.asm	/^int color;$/;"	l
int	obj/user/sh.asm	/^int$/;"	l
int32_t	obj/user/sh.asm	/^int32_t$/;"	l
interactive	obj/user/sh.asm	/^			interactive = 1;$/;"	d
interactive	obj/user/sh.asm	/^		interactive = iscons(0);$/;"	d
interactive	obj/user/sh.asm	/^	interactive = '?';$/;"	d
lflag	obj/user/sh.asm	/^		lflag = 0;$/;"	d
long	obj/user/sh.asm	/^long$/;"	l
m	obj/user/sh.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/sh.asm	/^		m = n - tot;$/;"	d
m	obj/user/sh.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/sh.asm	/^		n = thisenv->env_runs;$/;"	d
nc	obj/user/sh.asm	/^		nc = _gettoken(s, &np1, &np2);$/;"	d
nc	obj/user/sh.asm	/^	nc = _gettoken(np2, &np1, &np2);$/;"	d
newfd	obj/user/sh.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/sh.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/sh.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/sh.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/sh.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/sh.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/sh.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/sh.asm	/^		number:$/;"	l
nva	obj/user/sh.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/sh.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/sh.asm	/^				p = "(null)";$/;"	d
p	obj/user/sh.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/sh.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/sh.asm	/^			padc = '-';$/;"	d
padc	obj/user/sh.asm	/^			padc = '0';$/;"	d
perm	obj/user/sh.asm	/^		perm = PTE_P | PTE_U;$/;"	d
ph	obj/user/sh.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
pipe_child	obj/user/sh.asm	/^				pipe_child = r;$/;"	d
pipe_child	obj/user/sh.asm	/^	pipe_child = 0;$/;"	d
precision	obj/user/sh.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/sh.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/sh.asm	/^		process_precision:$/;"	l
pte	obj/user/sh.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/sh.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/sh.asm	/^			r = 0;$/;"	d
r	obj/user/sh.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/sh.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/sh.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/sh.asm	/^	reswitch:$/;"	l
ret	obj/user/sh.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/sh.asm	/^	ret = dst;$/;"	d
runit	obj/user/sh.asm	/^runit:$/;"	l
s	obj/user/sh.asm	/^	s = src;$/;"	d
size_t	obj/user/sh.asm	/^size_t$/;"	l
ssize_t	obj/user/sh.asm	/^ssize_t$/;"	l
static	obj/user/sh.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/sh.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/user/sh.asm	/^static int$/;"	l
static	obj/user/sh.asm	/^static long long$/;"	l
static	obj/user/sh.asm	/^static ssize_t$/;"	l
static	obj/user/sh.asm	/^static unsigned long long$/;"	l
static	obj/user/sh.asm	/^static void$/;"	l
string_size	obj/user/sh.asm	/^	string_size = 0;$/;"	d
string_store	obj/user/sh.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
t	obj/user/sh.asm	/^		t = **p2;$/;"	d
t	obj/user/sh.asm	/^		t = *s;$/;"	d
thisenv	obj/user/sh.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/sh.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/sh.asm	/^unsigned int$/;"	l
va	obj/user/sh.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/sh.asm	/^void *$/;"	l
void	obj/user/sh.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/sh.asm	/^void$/;"	l
width	obj/user/sh.asm	/^				width = 0;$/;"	d
width	obj/user/sh.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/softint.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/softint.asm	/^Disassembly of section .text:$/;"	l
_start	obj/user/softint.asm	/^_start:$/;"	l
altflag	obj/user/softint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/softint.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/softint.asm	/^args_exist:$/;"	l
base	obj/user/softint.asm	/^			base = 10;$/;"	d
base	obj/user/softint.asm	/^			base = 16;$/;"	d
base	obj/user/softint.asm	/^			base = 8;$/;"	d
base	obj/user/softint.asm	/^		base = 10;$/;"	d
binaryname	obj/user/softint.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/softint.asm	/^	buf = vbuf;$/;"	d
c	obj/user/softint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/softint.asm	/^				ch = *fmt;$/;"	d
char	obj/user/softint.asm	/^char *$/;"	l
clrflag	obj/user/softint.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/softint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/softint.asm	/^				color = 0;$/;"	d
color	obj/user/softint.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/softint.asm	/^	colorswitch:$/;"	l
const	obj/user/softint.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/softint.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/softint.asm	/^	d = dst;$/;"	d
default	obj/user/softint.asm	/^		default:$/;"	l
dig	obj/user/softint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/softint.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/softint.asm	/^envid_t$/;"	l
err	obj/user/softint.asm	/^				err = -err;$/;"	d
err	obj/user/softint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/softint.asm	/^    err:$/;"	l
err	obj/user/softint.asm	/^err:$/;"	l
err1	obj/user/softint.asm	/^    err1:$/;"	l
err2	obj/user/softint.asm	/^    err2:$/;"	l
err3	obj/user/softint.asm	/^    err3:$/;"	l
fd	obj/user/softint.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/softint.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/softint.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/softint.asm	/^int $/;"	l
int	obj/user/softint.asm	/^int color;$/;"	l
int	obj/user/softint.asm	/^int$/;"	l
int32_t	obj/user/softint.asm	/^int32_t$/;"	l
lflag	obj/user/softint.asm	/^		lflag = 0;$/;"	d
long	obj/user/softint.asm	/^long$/;"	l
m	obj/user/softint.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/softint.asm	/^		m = n - tot;$/;"	d
m	obj/user/softint.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/softint.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/softint.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/softint.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/softint.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/softint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/softint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/softint.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/softint.asm	/^		number:$/;"	l
nva	obj/user/softint.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/softint.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/softint.asm	/^				p = "(null)";$/;"	d
p	obj/user/softint.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/softint.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/softint.asm	/^			padc = '-';$/;"	d
padc	obj/user/softint.asm	/^			padc = '0';$/;"	d
precision	obj/user/softint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/softint.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/softint.asm	/^		process_precision:$/;"	l
pte	obj/user/softint.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/softint.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/softint.asm	/^			r = 0;$/;"	d
r	obj/user/softint.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/softint.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/softint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/softint.asm	/^	reswitch:$/;"	l
ret	obj/user/softint.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/softint.asm	/^	ret = dst;$/;"	d
s	obj/user/softint.asm	/^	s = src;$/;"	d
size_t	obj/user/softint.asm	/^size_t$/;"	l
ssize_t	obj/user/softint.asm	/^ssize_t$/;"	l
static	obj/user/softint.asm	/^static int$/;"	l
static	obj/user/softint.asm	/^static long long$/;"	l
static	obj/user/softint.asm	/^static ssize_t$/;"	l
static	obj/user/softint.asm	/^static unsigned long long$/;"	l
static	obj/user/softint.asm	/^static void$/;"	l
thisenv	obj/user/softint.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/softint.asm	/^unsigned int$/;"	l
va	obj/user/softint.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/softint.asm	/^void *$/;"	l
void	obj/user/softint.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/softint.asm	/^void$/;"	l
width	obj/user/softint.asm	/^				width = 0;$/;"	d
width	obj/user/softint.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/spawnhello.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/spawnhello.asm	/^Disassembly of section .text:$/;"	l
_start	obj/user/spawnhello.asm	/^_start:$/;"	l
altflag	obj/user/spawnhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/spawnhello.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/spawnhello.asm	/^args_exist:$/;"	l
argv_store	obj/user/spawnhello.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
base	obj/user/spawnhello.asm	/^			base = 10;$/;"	d
base	obj/user/spawnhello.asm	/^			base = 16;$/;"	d
base	obj/user/spawnhello.asm	/^			base = 8;$/;"	d
base	obj/user/spawnhello.asm	/^		base = 10;$/;"	d
binaryname	obj/user/spawnhello.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/spawnhello.asm	/^	buf = vbuf;$/;"	d
c	obj/user/spawnhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/spawnhello.asm	/^				ch = *fmt;$/;"	d
char	obj/user/spawnhello.asm	/^char *$/;"	l
child	obj/user/spawnhello.asm	/^	child = r;$/;"	d
child_tf	obj/user/spawnhello.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
clrflag	obj/user/spawnhello.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/spawnhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/spawnhello.asm	/^				color = 0;$/;"	d
color	obj/user/spawnhello.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/spawnhello.asm	/^	colorswitch:$/;"	l
const	obj/user/spawnhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/spawnhello.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/spawnhello.asm	/^	d = dst;$/;"	d
default	obj/user/spawnhello.asm	/^		default:$/;"	l
dig	obj/user/spawnhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/spawnhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/spawnhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/spawnhello.asm	/^	dst_in = dst;$/;"	d
elf	obj/user/spawnhello.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
envid_t	obj/user/spawnhello.asm	/^envid_t$/;"	l
err	obj/user/spawnhello.asm	/^				err = -err;$/;"	d
err	obj/user/spawnhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/spawnhello.asm	/^    err:$/;"	l
err	obj/user/spawnhello.asm	/^err:$/;"	l
err1	obj/user/spawnhello.asm	/^    err1:$/;"	l
err2	obj/user/spawnhello.asm	/^    err2:$/;"	l
err3	obj/user/spawnhello.asm	/^    err3:$/;"	l
error	obj/user/spawnhello.asm	/^error:$/;"	l
fd	obj/user/spawnhello.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/spawnhello.asm	/^	fd = -1;$/;"	d
fd	obj/user/spawnhello.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/spawnhello.asm	/^	fd = r;$/;"	d
fsenv	obj/user/spawnhello.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/spawnhello.asm	/^int $/;"	l
int	obj/user/spawnhello.asm	/^int color;$/;"	l
int	obj/user/spawnhello.asm	/^int$/;"	l
int32_t	obj/user/spawnhello.asm	/^int32_t$/;"	l
lflag	obj/user/spawnhello.asm	/^		lflag = 0;$/;"	d
long	obj/user/spawnhello.asm	/^long$/;"	l
m	obj/user/spawnhello.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/spawnhello.asm	/^		m = n - tot;$/;"	d
m	obj/user/spawnhello.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/spawnhello.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/spawnhello.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/spawnhello.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/spawnhello.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/spawnhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/spawnhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/spawnhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/spawnhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/spawnhello.asm	/^		number:$/;"	l
nva	obj/user/spawnhello.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/spawnhello.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/spawnhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/spawnhello.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/spawnhello.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/spawnhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/spawnhello.asm	/^			padc = '0';$/;"	d
perm	obj/user/spawnhello.asm	/^		perm = PTE_P | PTE_U;$/;"	d
ph	obj/user/spawnhello.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
precision	obj/user/spawnhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/spawnhello.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/spawnhello.asm	/^		process_precision:$/;"	l
pte	obj/user/spawnhello.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/spawnhello.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/spawnhello.asm	/^			r = 0;$/;"	d
r	obj/user/spawnhello.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/spawnhello.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/spawnhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/spawnhello.asm	/^	reswitch:$/;"	l
ret	obj/user/spawnhello.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/spawnhello.asm	/^	ret = dst;$/;"	d
s	obj/user/spawnhello.asm	/^	s = src;$/;"	d
size_t	obj/user/spawnhello.asm	/^size_t$/;"	l
ssize_t	obj/user/spawnhello.asm	/^ssize_t$/;"	l
static	obj/user/spawnhello.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/spawnhello.asm	/^static int$/;"	l
static	obj/user/spawnhello.asm	/^static long long$/;"	l
static	obj/user/spawnhello.asm	/^static ssize_t$/;"	l
static	obj/user/spawnhello.asm	/^static unsigned long long$/;"	l
static	obj/user/spawnhello.asm	/^static void$/;"	l
string_size	obj/user/spawnhello.asm	/^	string_size = 0;$/;"	d
string_store	obj/user/spawnhello.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
thisenv	obj/user/spawnhello.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/spawnhello.asm	/^unsigned int$/;"	l
va	obj/user/spawnhello.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/spawnhello.asm	/^void *$/;"	l
void	obj/user/spawnhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/spawnhello.asm	/^void$/;"	l
width	obj/user/spawnhello.asm	/^				width = 0;$/;"	d
width	obj/user/spawnhello.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/spin.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/spin.asm	/^Disassembly of section .text:$/;"	l
_pgfault_handler	obj/user/spin.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	obj/user/spin.asm	/^_pgfault_upcall:$/;"	l
_start	obj/user/spin.asm	/^_start:$/;"	l
addr	obj/user/spin.asm	/^	addr = (void *)ROUNDDOWN(addr, PGSIZE);$/;"	d
altflag	obj/user/spin.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/spin.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/spin.asm	/^args_exist:$/;"	l
base	obj/user/spin.asm	/^			base = 10;$/;"	d
base	obj/user/spin.asm	/^			base = 16;$/;"	d
base	obj/user/spin.asm	/^			base = 8;$/;"	d
base	obj/user/spin.asm	/^		base = 10;$/;"	d
binaryname	obj/user/spin.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/spin.asm	/^	buf = vbuf;$/;"	d
c	obj/user/spin.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/spin.asm	/^				ch = *fmt;$/;"	d
char	obj/user/spin.asm	/^char *$/;"	l
clrflag	obj/user/spin.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/spin.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/spin.asm	/^				color = 0;$/;"	d
color	obj/user/spin.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/spin.asm	/^	colorswitch:$/;"	l
const	obj/user/spin.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/spin.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/spin.asm	/^	d = dst;$/;"	d
default	obj/user/spin.asm	/^		default:$/;"	l
dig	obj/user/spin.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/spin.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/spin.asm	/^envid_t$/;"	l
err	obj/user/spin.asm	/^				err = -err;$/;"	d
err	obj/user/spin.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/spin.asm	/^    err:$/;"	l
err	obj/user/spin.asm	/^err:$/;"	l
err1	obj/user/spin.asm	/^    err1:$/;"	l
err2	obj/user/spin.asm	/^    err2:$/;"	l
err3	obj/user/spin.asm	/^    err3:$/;"	l
fd	obj/user/spin.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/spin.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/spin.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/spin.asm	/^int $/;"	l
int	obj/user/spin.asm	/^int color;$/;"	l
int	obj/user/spin.asm	/^int$/;"	l
int32_t	obj/user/spin.asm	/^int32_t$/;"	l
lflag	obj/user/spin.asm	/^		lflag = 0;$/;"	d
long	obj/user/spin.asm	/^long$/;"	l
m	obj/user/spin.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/spin.asm	/^		m = n - tot;$/;"	d
m	obj/user/spin.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/spin.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/spin.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/spin.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/spin.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/spin.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/spin.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/spin.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/spin.asm	/^		number:$/;"	l
nva	obj/user/spin.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/spin.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/spin.asm	/^				p = "(null)";$/;"	d
p	obj/user/spin.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/spin.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/spin.asm	/^			padc = '-';$/;"	d
padc	obj/user/spin.asm	/^			padc = '0';$/;"	d
precision	obj/user/spin.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/spin.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/spin.asm	/^		process_precision:$/;"	l
pte	obj/user/spin.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/spin.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/spin.asm	/^			r = 0;$/;"	d
r	obj/user/spin.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/spin.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/spin.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/spin.asm	/^	reswitch:$/;"	l
ret	obj/user/spin.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/spin.asm	/^	ret = dst;$/;"	d
s	obj/user/spin.asm	/^	s = src;$/;"	d
size_t	obj/user/spin.asm	/^size_t$/;"	l
ssize_t	obj/user/spin.asm	/^ssize_t$/;"	l
static	obj/user/spin.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/spin.asm	/^static int$/;"	l
static	obj/user/spin.asm	/^static long long$/;"	l
static	obj/user/spin.asm	/^static ssize_t$/;"	l
static	obj/user/spin.asm	/^static unsigned long long$/;"	l
static	obj/user/spin.asm	/^static void$/;"	l
thisenv	obj/user/spin.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/spin.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/spin.asm	/^unsigned int$/;"	l
va	obj/user/spin.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/spin.asm	/^void *$/;"	l
void	obj/user/spin.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/spin.asm	/^void$/;"	l
width	obj/user/spin.asm	/^				width = 0;$/;"	d
width	obj/user/spin.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/stresssched.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/stresssched.asm	/^Disassembly of section .text:$/;"	l
_pgfault_handler	obj/user/stresssched.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	obj/user/stresssched.asm	/^_pgfault_upcall:$/;"	l
_start	obj/user/stresssched.asm	/^_start:$/;"	l
addr	obj/user/stresssched.asm	/^	addr = (void *)ROUNDDOWN(addr, PGSIZE);$/;"	d
altflag	obj/user/stresssched.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/stresssched.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/stresssched.asm	/^args_exist:$/;"	l
base	obj/user/stresssched.asm	/^			base = 10;$/;"	d
base	obj/user/stresssched.asm	/^			base = 16;$/;"	d
base	obj/user/stresssched.asm	/^			base = 8;$/;"	d
base	obj/user/stresssched.asm	/^		base = 10;$/;"	d
binaryname	obj/user/stresssched.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/stresssched.asm	/^	buf = vbuf;$/;"	d
c	obj/user/stresssched.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/stresssched.asm	/^				ch = *fmt;$/;"	d
char	obj/user/stresssched.asm	/^char *$/;"	l
clrflag	obj/user/stresssched.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/stresssched.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/stresssched.asm	/^				color = 0;$/;"	d
color	obj/user/stresssched.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/stresssched.asm	/^	colorswitch:$/;"	l
const	obj/user/stresssched.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/stresssched.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/stresssched.asm	/^	d = dst;$/;"	d
default	obj/user/stresssched.asm	/^		default:$/;"	l
dig	obj/user/stresssched.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/stresssched.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/stresssched.asm	/^envid_t$/;"	l
err	obj/user/stresssched.asm	/^				err = -err;$/;"	d
err	obj/user/stresssched.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/stresssched.asm	/^    err:$/;"	l
err	obj/user/stresssched.asm	/^err:$/;"	l
err1	obj/user/stresssched.asm	/^    err1:$/;"	l
err2	obj/user/stresssched.asm	/^    err2:$/;"	l
err3	obj/user/stresssched.asm	/^    err3:$/;"	l
fd	obj/user/stresssched.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/stresssched.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/stresssched.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/stresssched.asm	/^int $/;"	l
int	obj/user/stresssched.asm	/^int color;$/;"	l
int	obj/user/stresssched.asm	/^int$/;"	l
int32_t	obj/user/stresssched.asm	/^int32_t$/;"	l
lflag	obj/user/stresssched.asm	/^		lflag = 0;$/;"	d
long	obj/user/stresssched.asm	/^long$/;"	l
m	obj/user/stresssched.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/stresssched.asm	/^		m = n - tot;$/;"	d
m	obj/user/stresssched.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/stresssched.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/stresssched.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/stresssched.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/stresssched.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/stresssched.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/stresssched.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/stresssched.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/stresssched.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/stresssched.asm	/^		number:$/;"	l
nva	obj/user/stresssched.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/stresssched.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/stresssched.asm	/^				p = "(null)";$/;"	d
p	obj/user/stresssched.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/stresssched.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/stresssched.asm	/^			padc = '-';$/;"	d
padc	obj/user/stresssched.asm	/^			padc = '0';$/;"	d
precision	obj/user/stresssched.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/stresssched.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/stresssched.asm	/^		process_precision:$/;"	l
pte	obj/user/stresssched.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/stresssched.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/stresssched.asm	/^			r = 0;$/;"	d
r	obj/user/stresssched.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/stresssched.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/stresssched.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/stresssched.asm	/^	reswitch:$/;"	l
ret	obj/user/stresssched.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/stresssched.asm	/^	ret = dst;$/;"	d
s	obj/user/stresssched.asm	/^	s = src;$/;"	d
size_t	obj/user/stresssched.asm	/^size_t$/;"	l
ssize_t	obj/user/stresssched.asm	/^ssize_t$/;"	l
static	obj/user/stresssched.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/stresssched.asm	/^static int$/;"	l
static	obj/user/stresssched.asm	/^static long long$/;"	l
static	obj/user/stresssched.asm	/^static ssize_t$/;"	l
static	obj/user/stresssched.asm	/^static unsigned long long$/;"	l
static	obj/user/stresssched.asm	/^static void$/;"	l
thisenv	obj/user/stresssched.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/stresssched.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/stresssched.asm	/^unsigned int$/;"	l
va	obj/user/stresssched.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/stresssched.asm	/^void *$/;"	l
void	obj/user/stresssched.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/stresssched.asm	/^void$/;"	l
volatile	obj/user/stresssched.asm	/^volatile int counter;$/;"	l
width	obj/user/stresssched.asm	/^				width = 0;$/;"	d
width	obj/user/stresssched.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/testbss.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/testbss.asm	/^Disassembly of section .text:$/;"	l
_start	obj/user/testbss.asm	/^_start:$/;"	l
altflag	obj/user/testbss.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testbss.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/testbss.asm	/^args_exist:$/;"	l
base	obj/user/testbss.asm	/^			base = 10;$/;"	d
base	obj/user/testbss.asm	/^			base = 16;$/;"	d
base	obj/user/testbss.asm	/^			base = 8;$/;"	d
base	obj/user/testbss.asm	/^		base = 10;$/;"	d
binaryname	obj/user/testbss.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/testbss.asm	/^	buf = vbuf;$/;"	d
c	obj/user/testbss.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/testbss.asm	/^				ch = *fmt;$/;"	d
char	obj/user/testbss.asm	/^char *$/;"	l
clrflag	obj/user/testbss.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/testbss.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/testbss.asm	/^				color = 0;$/;"	d
color	obj/user/testbss.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/testbss.asm	/^	colorswitch:$/;"	l
const	obj/user/testbss.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testbss.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/testbss.asm	/^	d = dst;$/;"	d
default	obj/user/testbss.asm	/^		default:$/;"	l
dig	obj/user/testbss.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/testbss.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/testbss.asm	/^envid_t$/;"	l
err	obj/user/testbss.asm	/^				err = -err;$/;"	d
err	obj/user/testbss.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testbss.asm	/^    err:$/;"	l
err	obj/user/testbss.asm	/^err:$/;"	l
err1	obj/user/testbss.asm	/^    err1:$/;"	l
err2	obj/user/testbss.asm	/^    err2:$/;"	l
err3	obj/user/testbss.asm	/^    err3:$/;"	l
fd	obj/user/testbss.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testbss.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/testbss.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/testbss.asm	/^int $/;"	l
int	obj/user/testbss.asm	/^int color;$/;"	l
int	obj/user/testbss.asm	/^int$/;"	l
int32_t	obj/user/testbss.asm	/^int32_t$/;"	l
lflag	obj/user/testbss.asm	/^		lflag = 0;$/;"	d
long	obj/user/testbss.asm	/^long$/;"	l
m	obj/user/testbss.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testbss.asm	/^		m = n - tot;$/;"	d
m	obj/user/testbss.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/testbss.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/testbss.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/testbss.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/testbss.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/testbss.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testbss.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testbss.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/testbss.asm	/^		number:$/;"	l
nva	obj/user/testbss.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/testbss.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/testbss.asm	/^				p = "(null)";$/;"	d
p	obj/user/testbss.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testbss.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/testbss.asm	/^			padc = '-';$/;"	d
padc	obj/user/testbss.asm	/^			padc = '0';$/;"	d
precision	obj/user/testbss.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testbss.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/testbss.asm	/^		process_precision:$/;"	l
pte	obj/user/testbss.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/testbss.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testbss.asm	/^			r = 0;$/;"	d
r	obj/user/testbss.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testbss.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/testbss.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/testbss.asm	/^	reswitch:$/;"	l
ret	obj/user/testbss.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testbss.asm	/^	ret = dst;$/;"	d
s	obj/user/testbss.asm	/^	s = src;$/;"	d
size_t	obj/user/testbss.asm	/^size_t$/;"	l
ssize_t	obj/user/testbss.asm	/^ssize_t$/;"	l
static	obj/user/testbss.asm	/^static int$/;"	l
static	obj/user/testbss.asm	/^static long long$/;"	l
static	obj/user/testbss.asm	/^static ssize_t$/;"	l
static	obj/user/testbss.asm	/^static unsigned long long$/;"	l
static	obj/user/testbss.asm	/^static void$/;"	l
thisenv	obj/user/testbss.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
uint32_t	obj/user/testbss.asm	/^uint32_t bigarray[ARRAYSIZE];$/;"	l
unsigned	obj/user/testbss.asm	/^unsigned int$/;"	l
va	obj/user/testbss.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/testbss.asm	/^void *$/;"	l
void	obj/user/testbss.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testbss.asm	/^void$/;"	l
width	obj/user/testbss.asm	/^				width = 0;$/;"	d
width	obj/user/testbss.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/testfdsharing.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/testfdsharing.asm	/^Disassembly of section .text:$/;"	l
_pgfault_handler	obj/user/testfdsharing.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	obj/user/testfdsharing.asm	/^_pgfault_upcall:$/;"	l
_start	obj/user/testfdsharing.asm	/^_start:$/;"	l
addr	obj/user/testfdsharing.asm	/^	addr = (void *)ROUNDDOWN(addr, PGSIZE);$/;"	d
altflag	obj/user/testfdsharing.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testfdsharing.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/testfdsharing.asm	/^args_exist:$/;"	l
base	obj/user/testfdsharing.asm	/^			base = 10;$/;"	d
base	obj/user/testfdsharing.asm	/^			base = 16;$/;"	d
base	obj/user/testfdsharing.asm	/^			base = 8;$/;"	d
base	obj/user/testfdsharing.asm	/^		base = 10;$/;"	d
binaryname	obj/user/testfdsharing.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/testfdsharing.asm	/^	buf = vbuf;$/;"	d
c	obj/user/testfdsharing.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/testfdsharing.asm	/^				ch = *fmt;$/;"	d
char	obj/user/testfdsharing.asm	/^char *$/;"	l
char	obj/user/testfdsharing.asm	/^char buf[512], buf2[512];$/;"	l
clrflag	obj/user/testfdsharing.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/testfdsharing.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/testfdsharing.asm	/^				color = 0;$/;"	d
color	obj/user/testfdsharing.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/testfdsharing.asm	/^	colorswitch:$/;"	l
const	obj/user/testfdsharing.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testfdsharing.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/testfdsharing.asm	/^	d = dst;$/;"	d
default	obj/user/testfdsharing.asm	/^		default:$/;"	l
dig	obj/user/testfdsharing.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testfdsharing.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testfdsharing.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/testfdsharing.asm	/^	dst_in = dst;$/;"	d
e	obj/user/testfdsharing.asm	/^	e = &envs[ENVX(envid)];$/;"	d
envid_t	obj/user/testfdsharing.asm	/^envid_t$/;"	l
err	obj/user/testfdsharing.asm	/^				err = -err;$/;"	d
err	obj/user/testfdsharing.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testfdsharing.asm	/^    err:$/;"	l
err	obj/user/testfdsharing.asm	/^err:$/;"	l
err1	obj/user/testfdsharing.asm	/^    err1:$/;"	l
err2	obj/user/testfdsharing.asm	/^    err2:$/;"	l
err3	obj/user/testfdsharing.asm	/^    err3:$/;"	l
fd	obj/user/testfdsharing.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testfdsharing.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/testfdsharing.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/testfdsharing.asm	/^int $/;"	l
int	obj/user/testfdsharing.asm	/^int color;$/;"	l
int	obj/user/testfdsharing.asm	/^int$/;"	l
int32_t	obj/user/testfdsharing.asm	/^int32_t$/;"	l
lflag	obj/user/testfdsharing.asm	/^		lflag = 0;$/;"	d
long	obj/user/testfdsharing.asm	/^long$/;"	l
m	obj/user/testfdsharing.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testfdsharing.asm	/^		m = n - tot;$/;"	d
m	obj/user/testfdsharing.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/testfdsharing.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/testfdsharing.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/testfdsharing.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/testfdsharing.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/testfdsharing.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testfdsharing.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testfdsharing.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testfdsharing.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/testfdsharing.asm	/^		number:$/;"	l
nva	obj/user/testfdsharing.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/testfdsharing.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/testfdsharing.asm	/^				p = "(null)";$/;"	d
p	obj/user/testfdsharing.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testfdsharing.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/testfdsharing.asm	/^			padc = '-';$/;"	d
padc	obj/user/testfdsharing.asm	/^			padc = '0';$/;"	d
precision	obj/user/testfdsharing.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testfdsharing.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/testfdsharing.asm	/^		process_precision:$/;"	l
pte	obj/user/testfdsharing.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/testfdsharing.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testfdsharing.asm	/^			r = 0;$/;"	d
r	obj/user/testfdsharing.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testfdsharing.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/testfdsharing.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/testfdsharing.asm	/^	reswitch:$/;"	l
ret	obj/user/testfdsharing.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testfdsharing.asm	/^	ret = dst;$/;"	d
s	obj/user/testfdsharing.asm	/^	s = src;$/;"	d
size_t	obj/user/testfdsharing.asm	/^size_t$/;"	l
ssize_t	obj/user/testfdsharing.asm	/^ssize_t$/;"	l
static	obj/user/testfdsharing.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testfdsharing.asm	/^static __inline uint64_t read_tsc(void) __attribute__((always_inline));$/;"	l
static	obj/user/testfdsharing.asm	/^static __inline void$/;"	l
static	obj/user/testfdsharing.asm	/^static int$/;"	l
static	obj/user/testfdsharing.asm	/^static long long$/;"	l
static	obj/user/testfdsharing.asm	/^static ssize_t$/;"	l
static	obj/user/testfdsharing.asm	/^static unsigned long long$/;"	l
static	obj/user/testfdsharing.asm	/^static void$/;"	l
thisenv	obj/user/testfdsharing.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testfdsharing.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/testfdsharing.asm	/^unsigned int$/;"	l
va	obj/user/testfdsharing.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/testfdsharing.asm	/^void *$/;"	l
void	obj/user/testfdsharing.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testfdsharing.asm	/^void$/;"	l
width	obj/user/testfdsharing.asm	/^				width = 0;$/;"	d
width	obj/user/testfdsharing.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/testfile.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/testfile.asm	/^Disassembly of section .text:$/;"	l
FVA	obj/user/testfile.asm	/^#define FVA ((struct Fd*)0xCCCCC000)$/;"	d
_start	obj/user/testfile.asm	/^_start:$/;"	l
altflag	obj/user/testfile.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testfile.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/testfile.asm	/^args_exist:$/;"	l
base	obj/user/testfile.asm	/^			base = 10;$/;"	d
base	obj/user/testfile.asm	/^			base = 16;$/;"	d
base	obj/user/testfile.asm	/^			base = 8;$/;"	d
base	obj/user/testfile.asm	/^		base = 10;$/;"	d
binaryname	obj/user/testfile.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/testfile.asm	/^	buf = vbuf;$/;"	d
c	obj/user/testfile.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/testfile.asm	/^				ch = *fmt;$/;"	d
char	obj/user/testfile.asm	/^char *$/;"	l
clrflag	obj/user/testfile.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/testfile.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/testfile.asm	/^				color = 0;$/;"	d
color	obj/user/testfile.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/testfile.asm	/^	colorswitch:$/;"	l
const	obj/user/testfile.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testfile.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/testfile.asm	/^	d = dst;$/;"	d
default	obj/user/testfile.asm	/^		default:$/;"	l
dig	obj/user/testfile.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testfile.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testfile.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/testfile.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/testfile.asm	/^envid_t$/;"	l
err	obj/user/testfile.asm	/^				err = -err;$/;"	d
err	obj/user/testfile.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testfile.asm	/^    err:$/;"	l
err	obj/user/testfile.asm	/^err:$/;"	l
err1	obj/user/testfile.asm	/^    err1:$/;"	l
err2	obj/user/testfile.asm	/^    err2:$/;"	l
err3	obj/user/testfile.asm	/^    err3:$/;"	l
fd	obj/user/testfile.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testfile.asm	/^	fd = (struct Fd*) (0xD0000000 + r*PGSIZE);$/;"	d
fd	obj/user/testfile.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fdcopy	obj/user/testfile.asm	/^	fdcopy = *FVA;$/;"	d
fsenv	obj/user/testfile.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testfile.asm	/^	fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/testfile.asm	/^int $/;"	l
int	obj/user/testfile.asm	/^int color;$/;"	l
int	obj/user/testfile.asm	/^int$/;"	l
int32_t	obj/user/testfile.asm	/^int32_t$/;"	l
lflag	obj/user/testfile.asm	/^		lflag = 0;$/;"	d
long	obj/user/testfile.asm	/^long$/;"	l
m	obj/user/testfile.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testfile.asm	/^		m = n - tot;$/;"	d
m	obj/user/testfile.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/testfile.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/testfile.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/testfile.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/testfile.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/testfile.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testfile.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testfile.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testfile.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/testfile.asm	/^		number:$/;"	l
nva	obj/user/testfile.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/testfile.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/testfile.asm	/^				p = "(null)";$/;"	d
p	obj/user/testfile.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testfile.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/testfile.asm	/^			padc = '-';$/;"	d
padc	obj/user/testfile.asm	/^			padc = '0';$/;"	d
precision	obj/user/testfile.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testfile.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/testfile.asm	/^		process_precision:$/;"	l
pte	obj/user/testfile.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/testfile.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testfile.asm	/^			r = 0;$/;"	d
r	obj/user/testfile.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testfile.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/testfile.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/testfile.asm	/^	reswitch:$/;"	l
ret	obj/user/testfile.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testfile.asm	/^	ret = dst;$/;"	d
s	obj/user/testfile.asm	/^	s = src;$/;"	d
size_t	obj/user/testfile.asm	/^size_t$/;"	l
ssize_t	obj/user/testfile.asm	/^ssize_t$/;"	l
static	obj/user/testfile.asm	/^static int$/;"	l
static	obj/user/testfile.asm	/^static long long$/;"	l
static	obj/user/testfile.asm	/^static ssize_t$/;"	l
static	obj/user/testfile.asm	/^static unsigned long long$/;"	l
static	obj/user/testfile.asm	/^static void$/;"	l
thisenv	obj/user/testfile.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/testfile.asm	/^unsigned int$/;"	l
va	obj/user/testfile.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/testfile.asm	/^void *$/;"	l
void	obj/user/testfile.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testfile.asm	/^void$/;"	l
width	obj/user/testfile.asm	/^				width = 0;$/;"	d
width	obj/user/testfile.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/testkbd.asm	/^#define ASM 1$/;"	d
BUFLEN	obj/user/testkbd.asm	/^#define BUFLEN 1024$/;"	d
Disassembly	obj/user/testkbd.asm	/^Disassembly of section .text:$/;"	l
_start	obj/user/testkbd.asm	/^_start:$/;"	l
altflag	obj/user/testkbd.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testkbd.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/testkbd.asm	/^args_exist:$/;"	l
base	obj/user/testkbd.asm	/^			base = 10;$/;"	d
base	obj/user/testkbd.asm	/^			base = 16;$/;"	d
base	obj/user/testkbd.asm	/^			base = 8;$/;"	d
base	obj/user/testkbd.asm	/^		base = 10;$/;"	d
binaryname	obj/user/testkbd.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/testkbd.asm	/^		buf = readline("Type a line: ");$/;"	d
buf	obj/user/testkbd.asm	/^	buf = vbuf;$/;"	d
c	obj/user/testkbd.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testkbd.asm	/^		c = getchar();$/;"	d
ch	obj/user/testkbd.asm	/^				ch = *fmt;$/;"	d
char	obj/user/testkbd.asm	/^char *$/;"	l
clrflag	obj/user/testkbd.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/testkbd.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testkbd.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/testkbd.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
color	obj/user/testkbd.asm	/^				color = 0;$/;"	d
color	obj/user/testkbd.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/testkbd.asm	/^	colorswitch:$/;"	l
const	obj/user/testkbd.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testkbd.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/testkbd.asm	/^	d = dst;$/;"	d
default	obj/user/testkbd.asm	/^		default:$/;"	l
dig	obj/user/testkbd.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testkbd.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testkbd.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/testkbd.asm	/^	dst_in = dst;$/;"	d
echoing	obj/user/testkbd.asm	/^	echoing = iscons(0);$/;"	d
envid_t	obj/user/testkbd.asm	/^envid_t$/;"	l
err	obj/user/testkbd.asm	/^				err = -err;$/;"	d
err	obj/user/testkbd.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testkbd.asm	/^    err:$/;"	l
err	obj/user/testkbd.asm	/^err:$/;"	l
err1	obj/user/testkbd.asm	/^    err1:$/;"	l
err2	obj/user/testkbd.asm	/^    err2:$/;"	l
err3	obj/user/testkbd.asm	/^    err3:$/;"	l
fd	obj/user/testkbd.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testkbd.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/testkbd.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
i	obj/user/testkbd.asm	/^	i = 0;$/;"	d
int	obj/user/testkbd.asm	/^int $/;"	l
int	obj/user/testkbd.asm	/^int color;$/;"	l
int	obj/user/testkbd.asm	/^int$/;"	l
int32_t	obj/user/testkbd.asm	/^int32_t$/;"	l
lflag	obj/user/testkbd.asm	/^		lflag = 0;$/;"	d
long	obj/user/testkbd.asm	/^long$/;"	l
m	obj/user/testkbd.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testkbd.asm	/^		m = n - tot;$/;"	d
m	obj/user/testkbd.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/testkbd.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/testkbd.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/testkbd.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/testkbd.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/testkbd.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testkbd.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testkbd.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testkbd.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/testkbd.asm	/^		number:$/;"	l
nva	obj/user/testkbd.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/testkbd.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/testkbd.asm	/^				p = "(null)";$/;"	d
p	obj/user/testkbd.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testkbd.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/testkbd.asm	/^			padc = '-';$/;"	d
padc	obj/user/testkbd.asm	/^			padc = '0';$/;"	d
precision	obj/user/testkbd.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testkbd.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/testkbd.asm	/^		process_precision:$/;"	l
pte	obj/user/testkbd.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/testkbd.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testkbd.asm	/^			r = 0;$/;"	d
r	obj/user/testkbd.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testkbd.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/testkbd.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/testkbd.asm	/^	reswitch:$/;"	l
ret	obj/user/testkbd.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testkbd.asm	/^	ret = dst;$/;"	d
s	obj/user/testkbd.asm	/^	s = src;$/;"	d
size_t	obj/user/testkbd.asm	/^size_t$/;"	l
ssize_t	obj/user/testkbd.asm	/^ssize_t$/;"	l
static	obj/user/testkbd.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/user/testkbd.asm	/^static int$/;"	l
static	obj/user/testkbd.asm	/^static long long$/;"	l
static	obj/user/testkbd.asm	/^static ssize_t$/;"	l
static	obj/user/testkbd.asm	/^static unsigned long long$/;"	l
static	obj/user/testkbd.asm	/^static void$/;"	l
thisenv	obj/user/testkbd.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/testkbd.asm	/^unsigned int$/;"	l
va	obj/user/testkbd.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/testkbd.asm	/^void *$/;"	l
void	obj/user/testkbd.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testkbd.asm	/^void$/;"	l
width	obj/user/testkbd.asm	/^				width = 0;$/;"	d
width	obj/user/testkbd.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/testpipe.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/testpipe.asm	/^Disassembly of section .text:$/;"	l
_pgfault_handler	obj/user/testpipe.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	obj/user/testpipe.asm	/^_pgfault_upcall:$/;"	l
_start	obj/user/testpipe.asm	/^_start:$/;"	l
addr	obj/user/testpipe.asm	/^	addr = (void *)ROUNDDOWN(addr, PGSIZE);$/;"	d
altflag	obj/user/testpipe.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testpipe.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/testpipe.asm	/^args_exist:$/;"	l
base	obj/user/testpipe.asm	/^			base = 10;$/;"	d
base	obj/user/testpipe.asm	/^			base = 16;$/;"	d
base	obj/user/testpipe.asm	/^			base = 8;$/;"	d
base	obj/user/testpipe.asm	/^		base = 10;$/;"	d
binaryname	obj/user/testpipe.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testpipe.asm	/^	binaryname = "pipereadeof";$/;"	d
binaryname	obj/user/testpipe.asm	/^	binaryname = "pipewriteeof";$/;"	d
buf	obj/user/testpipe.asm	/^	buf = vbuf;$/;"	d
c	obj/user/testpipe.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/testpipe.asm	/^				ch = *fmt;$/;"	d
char	obj/user/testpipe.asm	/^char *$/;"	l
char	obj/user/testpipe.asm	/^char *msg = "Now is the time for all good men to come to the aid of their party.";$/;"	l
clrflag	obj/user/testpipe.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/testpipe.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/testpipe.asm	/^				color = 0;$/;"	d
color	obj/user/testpipe.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/testpipe.asm	/^	colorswitch:$/;"	l
const	obj/user/testpipe.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testpipe.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/testpipe.asm	/^	d = dst;$/;"	d
default	obj/user/testpipe.asm	/^		default:$/;"	l
dig	obj/user/testpipe.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testpipe.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testpipe.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/testpipe.asm	/^	dst_in = dst;$/;"	d
e	obj/user/testpipe.asm	/^	e = &envs[ENVX(envid)];$/;"	d
envid_t	obj/user/testpipe.asm	/^envid_t$/;"	l
err	obj/user/testpipe.asm	/^				err = -err;$/;"	d
err	obj/user/testpipe.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testpipe.asm	/^    err:$/;"	l
err	obj/user/testpipe.asm	/^err:$/;"	l
err1	obj/user/testpipe.asm	/^    err1:$/;"	l
err2	obj/user/testpipe.asm	/^    err2:$/;"	l
err3	obj/user/testpipe.asm	/^    err3:$/;"	l
fd	obj/user/testpipe.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testpipe.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/testpipe.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
i	obj/user/testpipe.asm	/^		i = readn(p[0], buf, sizeof buf-1);$/;"	d
int	obj/user/testpipe.asm	/^int $/;"	l
int	obj/user/testpipe.asm	/^int color;$/;"	l
int	obj/user/testpipe.asm	/^int$/;"	l
int32_t	obj/user/testpipe.asm	/^int32_t$/;"	l
lflag	obj/user/testpipe.asm	/^		lflag = 0;$/;"	d
long	obj/user/testpipe.asm	/^long$/;"	l
m	obj/user/testpipe.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testpipe.asm	/^		m = n - tot;$/;"	d
m	obj/user/testpipe.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/testpipe.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/testpipe.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/testpipe.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/testpipe.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/testpipe.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testpipe.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testpipe.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testpipe.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/testpipe.asm	/^		number:$/;"	l
nva	obj/user/testpipe.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/testpipe.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/testpipe.asm	/^				p = "(null)";$/;"	d
p	obj/user/testpipe.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testpipe.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/testpipe.asm	/^			padc = '-';$/;"	d
padc	obj/user/testpipe.asm	/^			padc = '0';$/;"	d
precision	obj/user/testpipe.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testpipe.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/testpipe.asm	/^		process_precision:$/;"	l
pte	obj/user/testpipe.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/testpipe.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testpipe.asm	/^			r = 0;$/;"	d
r	obj/user/testpipe.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testpipe.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/testpipe.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/testpipe.asm	/^	reswitch:$/;"	l
ret	obj/user/testpipe.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testpipe.asm	/^	ret = dst;$/;"	d
s	obj/user/testpipe.asm	/^	s = src;$/;"	d
size_t	obj/user/testpipe.asm	/^size_t$/;"	l
ssize_t	obj/user/testpipe.asm	/^ssize_t$/;"	l
static	obj/user/testpipe.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testpipe.asm	/^static int$/;"	l
static	obj/user/testpipe.asm	/^static long long$/;"	l
static	obj/user/testpipe.asm	/^static ssize_t$/;"	l
static	obj/user/testpipe.asm	/^static unsigned long long$/;"	l
static	obj/user/testpipe.asm	/^static void$/;"	l
thisenv	obj/user/testpipe.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpipe.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/testpipe.asm	/^unsigned int$/;"	l
va	obj/user/testpipe.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/testpipe.asm	/^void *$/;"	l
void	obj/user/testpipe.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testpipe.asm	/^void$/;"	l
width	obj/user/testpipe.asm	/^				width = 0;$/;"	d
width	obj/user/testpipe.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/testpiperace.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/testpiperace.asm	/^Disassembly of section .text:$/;"	l
_pgfault_handler	obj/user/testpiperace.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	obj/user/testpiperace.asm	/^_pgfault_upcall:$/;"	l
_start	obj/user/testpiperace.asm	/^_start:$/;"	l
addr	obj/user/testpiperace.asm	/^	addr = (void *)ROUNDDOWN(addr, PGSIZE);$/;"	d
altflag	obj/user/testpiperace.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testpiperace.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/testpiperace.asm	/^args_exist:$/;"	l
base	obj/user/testpiperace.asm	/^			base = 10;$/;"	d
base	obj/user/testpiperace.asm	/^			base = 16;$/;"	d
base	obj/user/testpiperace.asm	/^			base = 8;$/;"	d
base	obj/user/testpiperace.asm	/^		base = 10;$/;"	d
binaryname	obj/user/testpiperace.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/testpiperace.asm	/^	buf = vbuf;$/;"	d
c	obj/user/testpiperace.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/testpiperace.asm	/^				ch = *fmt;$/;"	d
char	obj/user/testpiperace.asm	/^char *$/;"	l
clrflag	obj/user/testpiperace.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/testpiperace.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/testpiperace.asm	/^				color = 0;$/;"	d
color	obj/user/testpiperace.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/testpiperace.asm	/^	colorswitch:$/;"	l
const	obj/user/testpiperace.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testpiperace.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/testpiperace.asm	/^	d = dst;$/;"	d
default	obj/user/testpiperace.asm	/^		default:$/;"	l
dig	obj/user/testpiperace.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testpiperace.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testpiperace.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/testpiperace.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/testpiperace.asm	/^envid_t$/;"	l
err	obj/user/testpiperace.asm	/^				err = -err;$/;"	d
err	obj/user/testpiperace.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testpiperace.asm	/^    err:$/;"	l
err	obj/user/testpiperace.asm	/^err:$/;"	l
err1	obj/user/testpiperace.asm	/^    err1:$/;"	l
err2	obj/user/testpiperace.asm	/^    err2:$/;"	l
err3	obj/user/testpiperace.asm	/^    err3:$/;"	l
fd	obj/user/testpiperace.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testpiperace.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/testpiperace.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/testpiperace.asm	/^int $/;"	l
int	obj/user/testpiperace.asm	/^int color;$/;"	l
int	obj/user/testpiperace.asm	/^int$/;"	l
int32_t	obj/user/testpiperace.asm	/^int32_t$/;"	l
kid	obj/user/testpiperace.asm	/^	kid = &envs[ENVX(pid)];$/;"	d
lflag	obj/user/testpiperace.asm	/^		lflag = 0;$/;"	d
long	obj/user/testpiperace.asm	/^long$/;"	l
m	obj/user/testpiperace.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testpiperace.asm	/^		m = n - tot;$/;"	d
m	obj/user/testpiperace.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
max	obj/user/testpiperace.asm	/^	max = 200;$/;"	d
n	obj/user/testpiperace.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/testpiperace.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/testpiperace.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/testpiperace.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/testpiperace.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testpiperace.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testpiperace.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testpiperace.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/testpiperace.asm	/^		number:$/;"	l
nva	obj/user/testpiperace.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/testpiperace.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/testpiperace.asm	/^				p = "(null)";$/;"	d
p	obj/user/testpiperace.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testpiperace.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/testpiperace.asm	/^			padc = '-';$/;"	d
padc	obj/user/testpiperace.asm	/^			padc = '0';$/;"	d
pid	obj/user/testpiperace.asm	/^	pid = r;$/;"	d
precision	obj/user/testpiperace.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testpiperace.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/testpiperace.asm	/^		process_precision:$/;"	l
pte	obj/user/testpiperace.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/testpiperace.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testpiperace.asm	/^			r = 0;$/;"	d
r	obj/user/testpiperace.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testpiperace.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/testpiperace.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/testpiperace.asm	/^	reswitch:$/;"	l
ret	obj/user/testpiperace.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testpiperace.asm	/^	ret = dst;$/;"	d
s	obj/user/testpiperace.asm	/^	s = src;$/;"	d
size_t	obj/user/testpiperace.asm	/^size_t$/;"	l
ssize_t	obj/user/testpiperace.asm	/^ssize_t$/;"	l
static	obj/user/testpiperace.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testpiperace.asm	/^static int$/;"	l
static	obj/user/testpiperace.asm	/^static long long$/;"	l
static	obj/user/testpiperace.asm	/^static ssize_t$/;"	l
static	obj/user/testpiperace.asm	/^static unsigned long long$/;"	l
static	obj/user/testpiperace.asm	/^static void$/;"	l
thisenv	obj/user/testpiperace.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpiperace.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/testpiperace.asm	/^unsigned int$/;"	l
va	obj/user/testpiperace.asm	/^	va = 0;$/;"	d
va	obj/user/testpiperace.asm	/^	va = fd2data(fd);$/;"	d
va	obj/user/testpiperace.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/testpiperace.asm	/^void *$/;"	l
void	obj/user/testpiperace.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testpiperace.asm	/^void$/;"	l
width	obj/user/testpiperace.asm	/^				width = 0;$/;"	d
width	obj/user/testpiperace.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/testpiperace2.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/testpiperace2.asm	/^Disassembly of section .text:$/;"	l
_pgfault_handler	obj/user/testpiperace2.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	obj/user/testpiperace2.asm	/^_pgfault_upcall:$/;"	l
_start	obj/user/testpiperace2.asm	/^_start:$/;"	l
addr	obj/user/testpiperace2.asm	/^	addr = (void *)ROUNDDOWN(addr, PGSIZE);$/;"	d
altflag	obj/user/testpiperace2.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testpiperace2.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/testpiperace2.asm	/^args_exist:$/;"	l
base	obj/user/testpiperace2.asm	/^			base = 10;$/;"	d
base	obj/user/testpiperace2.asm	/^			base = 16;$/;"	d
base	obj/user/testpiperace2.asm	/^			base = 8;$/;"	d
base	obj/user/testpiperace2.asm	/^		base = 10;$/;"	d
binaryname	obj/user/testpiperace2.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/testpiperace2.asm	/^	buf = vbuf;$/;"	d
c	obj/user/testpiperace2.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/testpiperace2.asm	/^				ch = *fmt;$/;"	d
char	obj/user/testpiperace2.asm	/^char *$/;"	l
clrflag	obj/user/testpiperace2.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/testpiperace2.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/testpiperace2.asm	/^				color = 0;$/;"	d
color	obj/user/testpiperace2.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/testpiperace2.asm	/^	colorswitch:$/;"	l
const	obj/user/testpiperace2.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testpiperace2.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/testpiperace2.asm	/^	d = dst;$/;"	d
default	obj/user/testpiperace2.asm	/^		default:$/;"	l
dig	obj/user/testpiperace2.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testpiperace2.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testpiperace2.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/testpiperace2.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/testpiperace2.asm	/^envid_t$/;"	l
err	obj/user/testpiperace2.asm	/^				err = -err;$/;"	d
err	obj/user/testpiperace2.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testpiperace2.asm	/^    err:$/;"	l
err	obj/user/testpiperace2.asm	/^err:$/;"	l
err1	obj/user/testpiperace2.asm	/^    err1:$/;"	l
err2	obj/user/testpiperace2.asm	/^    err2:$/;"	l
err3	obj/user/testpiperace2.asm	/^    err3:$/;"	l
fd	obj/user/testpiperace2.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testpiperace2.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/testpiperace2.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/testpiperace2.asm	/^int $/;"	l
int	obj/user/testpiperace2.asm	/^int color;$/;"	l
int	obj/user/testpiperace2.asm	/^int$/;"	l
int32_t	obj/user/testpiperace2.asm	/^int32_t$/;"	l
kid	obj/user/testpiperace2.asm	/^	kid = &envs[ENVX(r)];$/;"	d
lflag	obj/user/testpiperace2.asm	/^		lflag = 0;$/;"	d
long	obj/user/testpiperace2.asm	/^long$/;"	l
m	obj/user/testpiperace2.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testpiperace2.asm	/^		m = n - tot;$/;"	d
m	obj/user/testpiperace2.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/testpiperace2.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/testpiperace2.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/testpiperace2.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/testpiperace2.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/testpiperace2.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testpiperace2.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testpiperace2.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testpiperace2.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/testpiperace2.asm	/^		number:$/;"	l
nva	obj/user/testpiperace2.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/testpiperace2.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/testpiperace2.asm	/^				p = "(null)";$/;"	d
p	obj/user/testpiperace2.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testpiperace2.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/testpiperace2.asm	/^			padc = '-';$/;"	d
padc	obj/user/testpiperace2.asm	/^			padc = '0';$/;"	d
precision	obj/user/testpiperace2.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testpiperace2.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/testpiperace2.asm	/^		process_precision:$/;"	l
pte	obj/user/testpiperace2.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/testpiperace2.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testpiperace2.asm	/^			r = 0;$/;"	d
r	obj/user/testpiperace2.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testpiperace2.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/testpiperace2.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/testpiperace2.asm	/^	reswitch:$/;"	l
ret	obj/user/testpiperace2.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testpiperace2.asm	/^	ret = dst;$/;"	d
s	obj/user/testpiperace2.asm	/^	s = src;$/;"	d
size_t	obj/user/testpiperace2.asm	/^size_t$/;"	l
ssize_t	obj/user/testpiperace2.asm	/^ssize_t$/;"	l
static	obj/user/testpiperace2.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testpiperace2.asm	/^static int$/;"	l
static	obj/user/testpiperace2.asm	/^static long long$/;"	l
static	obj/user/testpiperace2.asm	/^static ssize_t$/;"	l
static	obj/user/testpiperace2.asm	/^static unsigned long long$/;"	l
static	obj/user/testpiperace2.asm	/^static void$/;"	l
thisenv	obj/user/testpiperace2.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpiperace2.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/testpiperace2.asm	/^unsigned int$/;"	l
va	obj/user/testpiperace2.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/testpiperace2.asm	/^void *$/;"	l
void	obj/user/testpiperace2.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testpiperace2.asm	/^void$/;"	l
width	obj/user/testpiperace2.asm	/^				width = 0;$/;"	d
width	obj/user/testpiperace2.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/testpteshare.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/testpteshare.asm	/^Disassembly of section .text:$/;"	l
_pgfault_handler	obj/user/testpteshare.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	obj/user/testpteshare.asm	/^_pgfault_upcall:$/;"	l
_start	obj/user/testpteshare.asm	/^_start:$/;"	l
addr	obj/user/testpteshare.asm	/^	addr = (void *)ROUNDDOWN(addr, PGSIZE);$/;"	d
altflag	obj/user/testpteshare.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testpteshare.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/testpteshare.asm	/^args_exist:$/;"	l
argv_store	obj/user/testpteshare.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
base	obj/user/testpteshare.asm	/^			base = 10;$/;"	d
base	obj/user/testpteshare.asm	/^			base = 16;$/;"	d
base	obj/user/testpteshare.asm	/^			base = 8;$/;"	d
base	obj/user/testpteshare.asm	/^		base = 10;$/;"	d
binaryname	obj/user/testpteshare.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/testpteshare.asm	/^	buf = vbuf;$/;"	d
c	obj/user/testpteshare.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/testpteshare.asm	/^				ch = *fmt;$/;"	d
char	obj/user/testpteshare.asm	/^char *$/;"	l
child	obj/user/testpteshare.asm	/^	child = r;$/;"	d
child_tf	obj/user/testpteshare.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
clrflag	obj/user/testpteshare.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/testpteshare.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/testpteshare.asm	/^				color = 0;$/;"	d
color	obj/user/testpteshare.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/testpteshare.asm	/^	colorswitch:$/;"	l
const	obj/user/testpteshare.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testpteshare.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/testpteshare.asm	/^	d = dst;$/;"	d
default	obj/user/testpteshare.asm	/^		default:$/;"	l
dig	obj/user/testpteshare.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testpteshare.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testpteshare.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/testpteshare.asm	/^	dst_in = dst;$/;"	d
e	obj/user/testpteshare.asm	/^	e = &envs[ENVX(envid)];$/;"	d
elf	obj/user/testpteshare.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
envid_t	obj/user/testpteshare.asm	/^envid_t$/;"	l
err	obj/user/testpteshare.asm	/^				err = -err;$/;"	d
err	obj/user/testpteshare.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testpteshare.asm	/^    err:$/;"	l
err	obj/user/testpteshare.asm	/^err:$/;"	l
err1	obj/user/testpteshare.asm	/^    err1:$/;"	l
err2	obj/user/testpteshare.asm	/^    err2:$/;"	l
err3	obj/user/testpteshare.asm	/^    err3:$/;"	l
error	obj/user/testpteshare.asm	/^error:$/;"	l
fd	obj/user/testpteshare.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testpteshare.asm	/^	fd = -1;$/;"	d
fd	obj/user/testpteshare.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpteshare.asm	/^	fd = r;$/;"	d
fsenv	obj/user/testpteshare.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/testpteshare.asm	/^int $/;"	l
int	obj/user/testpteshare.asm	/^int color;$/;"	l
int	obj/user/testpteshare.asm	/^int$/;"	l
int32_t	obj/user/testpteshare.asm	/^int32_t$/;"	l
lflag	obj/user/testpteshare.asm	/^		lflag = 0;$/;"	d
long	obj/user/testpteshare.asm	/^long$/;"	l
m	obj/user/testpteshare.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testpteshare.asm	/^		m = n - tot;$/;"	d
m	obj/user/testpteshare.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/testpteshare.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/testpteshare.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/testpteshare.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/testpteshare.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/testpteshare.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testpteshare.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testpteshare.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testpteshare.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/testpteshare.asm	/^		number:$/;"	l
nva	obj/user/testpteshare.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/testpteshare.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/testpteshare.asm	/^				p = "(null)";$/;"	d
p	obj/user/testpteshare.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testpteshare.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/testpteshare.asm	/^			padc = '-';$/;"	d
padc	obj/user/testpteshare.asm	/^			padc = '0';$/;"	d
perm	obj/user/testpteshare.asm	/^		perm = PTE_P | PTE_U;$/;"	d
ph	obj/user/testpteshare.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
precision	obj/user/testpteshare.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testpteshare.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/testpteshare.asm	/^		process_precision:$/;"	l
pte	obj/user/testpteshare.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/testpteshare.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testpteshare.asm	/^			r = 0;$/;"	d
r	obj/user/testpteshare.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testpteshare.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/testpteshare.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/testpteshare.asm	/^	reswitch:$/;"	l
ret	obj/user/testpteshare.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testpteshare.asm	/^	ret = dst;$/;"	d
s	obj/user/testpteshare.asm	/^	s = src;$/;"	d
size_t	obj/user/testpteshare.asm	/^size_t$/;"	l
ssize_t	obj/user/testpteshare.asm	/^ssize_t$/;"	l
static	obj/user/testpteshare.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testpteshare.asm	/^static __inline uint64_t read_tsc(void) __attribute__((always_inline));$/;"	l
static	obj/user/testpteshare.asm	/^static __inline void$/;"	l
static	obj/user/testpteshare.asm	/^static int$/;"	l
static	obj/user/testpteshare.asm	/^static long long$/;"	l
static	obj/user/testpteshare.asm	/^static ssize_t$/;"	l
static	obj/user/testpteshare.asm	/^static unsigned long long$/;"	l
static	obj/user/testpteshare.asm	/^static void$/;"	l
string_size	obj/user/testpteshare.asm	/^	string_size = 0;$/;"	d
string_store	obj/user/testpteshare.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
thisenv	obj/user/testpteshare.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpteshare.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/testpteshare.asm	/^unsigned int$/;"	l
va	obj/user/testpteshare.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/testpteshare.asm	/^void *$/;"	l
void	obj/user/testpteshare.asm	/^void childofspawn(void);$/;"	l
void	obj/user/testpteshare.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testpteshare.asm	/^void$/;"	l
width	obj/user/testpteshare.asm	/^				width = 0;$/;"	d
width	obj/user/testpteshare.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/testshell.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/testshell.asm	/^Disassembly of section .text:$/;"	l
_pgfault_handler	obj/user/testshell.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	obj/user/testshell.asm	/^_pgfault_upcall:$/;"	l
_start	obj/user/testshell.asm	/^_start:$/;"	l
addr	obj/user/testshell.asm	/^	addr = (void *)ROUNDDOWN(addr, PGSIZE);$/;"	d
altflag	obj/user/testshell.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testshell.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/testshell.asm	/^args_exist:$/;"	l
argv_store	obj/user/testshell.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
base	obj/user/testshell.asm	/^			base = 10;$/;"	d
base	obj/user/testshell.asm	/^			base = 16;$/;"	d
base	obj/user/testshell.asm	/^			base = 8;$/;"	d
base	obj/user/testshell.asm	/^		base = 10;$/;"	d
binaryname	obj/user/testshell.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/testshell.asm	/^	buf = vbuf;$/;"	d
c	obj/user/testshell.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/testshell.asm	/^				ch = *fmt;$/;"	d
char	obj/user/testshell.asm	/^char *$/;"	l
child	obj/user/testshell.asm	/^	child = r;$/;"	d
child_tf	obj/user/testshell.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
clrflag	obj/user/testshell.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/testshell.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/testshell.asm	/^				color = 0;$/;"	d
color	obj/user/testshell.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/testshell.asm	/^	colorswitch:$/;"	l
const	obj/user/testshell.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testshell.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/testshell.asm	/^	d = dst;$/;"	d
default	obj/user/testshell.asm	/^		default:$/;"	l
dig	obj/user/testshell.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testshell.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testshell.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/testshell.asm	/^	dst_in = dst;$/;"	d
e	obj/user/testshell.asm	/^	e = &envs[ENVX(envid)];$/;"	d
elf	obj/user/testshell.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
envid_t	obj/user/testshell.asm	/^envid_t$/;"	l
err	obj/user/testshell.asm	/^				err = -err;$/;"	d
err	obj/user/testshell.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testshell.asm	/^    err:$/;"	l
err	obj/user/testshell.asm	/^err:$/;"	l
err1	obj/user/testshell.asm	/^    err1:$/;"	l
err2	obj/user/testshell.asm	/^    err2:$/;"	l
err3	obj/user/testshell.asm	/^    err3:$/;"	l
error	obj/user/testshell.asm	/^error:$/;"	l
fd	obj/user/testshell.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testshell.asm	/^	fd = -1;$/;"	d
fd	obj/user/testshell.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testshell.asm	/^	fd = r;$/;"	d
fsenv	obj/user/testshell.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/testshell.asm	/^int $/;"	l
int	obj/user/testshell.asm	/^int color;$/;"	l
int	obj/user/testshell.asm	/^int$/;"	l
int32_t	obj/user/testshell.asm	/^int32_t$/;"	l
lflag	obj/user/testshell.asm	/^		lflag = 0;$/;"	d
long	obj/user/testshell.asm	/^long$/;"	l
m	obj/user/testshell.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testshell.asm	/^		m = n - tot;$/;"	d
m	obj/user/testshell.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/testshell.asm	/^		n = thisenv->env_runs;$/;"	d
n1	obj/user/testshell.asm	/^		n1 = read(rfd, &c1, 1);$/;"	d
n2	obj/user/testshell.asm	/^		n2 = read(kfd, &c2, 1);$/;"	d
newfd	obj/user/testshell.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nloff	obj/user/testshell.asm	/^			nloff = off+1;$/;"	d
nloff	obj/user/testshell.asm	/^	nloff = 0;$/;"	d
nn	obj/user/testshell.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/testshell.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/testshell.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testshell.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testshell.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testshell.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/testshell.asm	/^		number:$/;"	l
nva	obj/user/testshell.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/testshell.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/testshell.asm	/^				p = "(null)";$/;"	d
p	obj/user/testshell.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testshell.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/testshell.asm	/^			padc = '-';$/;"	d
padc	obj/user/testshell.asm	/^			padc = '0';$/;"	d
perm	obj/user/testshell.asm	/^		perm = PTE_P | PTE_U;$/;"	d
ph	obj/user/testshell.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
precision	obj/user/testshell.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testshell.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/testshell.asm	/^		process_precision:$/;"	l
pte	obj/user/testshell.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/testshell.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testshell.asm	/^			r = 0;$/;"	d
r	obj/user/testshell.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testshell.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/testshell.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/testshell.asm	/^	reswitch:$/;"	l
ret	obj/user/testshell.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testshell.asm	/^	ret = dst;$/;"	d
rfd	obj/user/testshell.asm	/^	rfd = pfds[0];$/;"	d
s	obj/user/testshell.asm	/^	s = src;$/;"	d
size_t	obj/user/testshell.asm	/^size_t$/;"	l
ssize_t	obj/user/testshell.asm	/^ssize_t$/;"	l
static	obj/user/testshell.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testshell.asm	/^static __inline uint64_t read_tsc(void) __attribute__((always_inline));$/;"	l
static	obj/user/testshell.asm	/^static __inline void$/;"	l
static	obj/user/testshell.asm	/^static int$/;"	l
static	obj/user/testshell.asm	/^static long long$/;"	l
static	obj/user/testshell.asm	/^static ssize_t$/;"	l
static	obj/user/testshell.asm	/^static unsigned long long$/;"	l
static	obj/user/testshell.asm	/^static void$/;"	l
string_size	obj/user/testshell.asm	/^	string_size = 0;$/;"	d
string_store	obj/user/testshell.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
thisenv	obj/user/testshell.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testshell.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/testshell.asm	/^unsigned int$/;"	l
va	obj/user/testshell.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/testshell.asm	/^void *$/;"	l
void	obj/user/testshell.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testshell.asm	/^void wrong(int, int, int);$/;"	l
void	obj/user/testshell.asm	/^void$/;"	l
wfd	obj/user/testshell.asm	/^	wfd = pfds[1];$/;"	d
width	obj/user/testshell.asm	/^				width = 0;$/;"	d
width	obj/user/testshell.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/testtime.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/testtime.asm	/^Disassembly of section .text:$/;"	l
_start	obj/user/testtime.asm	/^_start:$/;"	l
altflag	obj/user/testtime.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testtime.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/testtime.asm	/^args_exist:$/;"	l
base	obj/user/testtime.asm	/^			base = 10;$/;"	d
base	obj/user/testtime.asm	/^			base = 16;$/;"	d
base	obj/user/testtime.asm	/^			base = 8;$/;"	d
base	obj/user/testtime.asm	/^		base = 10;$/;"	d
binaryname	obj/user/testtime.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/testtime.asm	/^	buf = vbuf;$/;"	d
c	obj/user/testtime.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/testtime.asm	/^				ch = *fmt;$/;"	d
char	obj/user/testtime.asm	/^char *$/;"	l
clrflag	obj/user/testtime.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/testtime.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/testtime.asm	/^				color = 0;$/;"	d
color	obj/user/testtime.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/testtime.asm	/^	colorswitch:$/;"	l
const	obj/user/testtime.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testtime.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/testtime.asm	/^	d = dst;$/;"	d
default	obj/user/testtime.asm	/^		default:$/;"	l
dig	obj/user/testtime.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testtime.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testtime.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/testtime.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/testtime.asm	/^envid_t$/;"	l
err	obj/user/testtime.asm	/^				err = -err;$/;"	d
err	obj/user/testtime.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testtime.asm	/^    err:$/;"	l
err	obj/user/testtime.asm	/^err:$/;"	l
err1	obj/user/testtime.asm	/^    err1:$/;"	l
err2	obj/user/testtime.asm	/^    err2:$/;"	l
err3	obj/user/testtime.asm	/^    err3:$/;"	l
fd	obj/user/testtime.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testtime.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/testtime.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/testtime.asm	/^int $/;"	l
int	obj/user/testtime.asm	/^int color;$/;"	l
int	obj/user/testtime.asm	/^int$/;"	l
int32_t	obj/user/testtime.asm	/^int32_t$/;"	l
lflag	obj/user/testtime.asm	/^		lflag = 0;$/;"	d
long	obj/user/testtime.asm	/^long$/;"	l
m	obj/user/testtime.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testtime.asm	/^		m = n - tot;$/;"	d
m	obj/user/testtime.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/testtime.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/testtime.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/testtime.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/testtime.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/testtime.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testtime.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testtime.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testtime.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/testtime.asm	/^		number:$/;"	l
nva	obj/user/testtime.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/testtime.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/testtime.asm	/^				p = "(null)";$/;"	d
p	obj/user/testtime.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testtime.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/testtime.asm	/^			padc = '-';$/;"	d
padc	obj/user/testtime.asm	/^			padc = '0';$/;"	d
precision	obj/user/testtime.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testtime.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/testtime.asm	/^		process_precision:$/;"	l
pte	obj/user/testtime.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/testtime.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testtime.asm	/^			r = 0;$/;"	d
r	obj/user/testtime.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testtime.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/testtime.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/testtime.asm	/^	reswitch:$/;"	l
ret	obj/user/testtime.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testtime.asm	/^	ret = dst;$/;"	d
s	obj/user/testtime.asm	/^	s = src;$/;"	d
size_t	obj/user/testtime.asm	/^size_t$/;"	l
ssize_t	obj/user/testtime.asm	/^ssize_t$/;"	l
static	obj/user/testtime.asm	/^static __inline uint64_t read_tsc(void) __attribute__((always_inline));$/;"	l
static	obj/user/testtime.asm	/^static __inline void$/;"	l
static	obj/user/testtime.asm	/^static int$/;"	l
static	obj/user/testtime.asm	/^static long long$/;"	l
static	obj/user/testtime.asm	/^static ssize_t$/;"	l
static	obj/user/testtime.asm	/^static unsigned long long$/;"	l
static	obj/user/testtime.asm	/^static void$/;"	l
thisenv	obj/user/testtime.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/testtime.asm	/^unsigned int$/;"	l
va	obj/user/testtime.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/testtime.asm	/^void *$/;"	l
void	obj/user/testtime.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testtime.asm	/^void$/;"	l
width	obj/user/testtime.asm	/^				width = 0;$/;"	d
width	obj/user/testtime.asm	/^				width = precision, precision = -1;$/;"	d
ASM	obj/user/yield.asm	/^#define ASM 1$/;"	d
Disassembly	obj/user/yield.asm	/^Disassembly of section .text:$/;"	l
_start	obj/user/yield.asm	/^_start:$/;"	l
altflag	obj/user/yield.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/yield.asm	/^		altflag = 0;$/;"	d
args_exist	obj/user/yield.asm	/^args_exist:$/;"	l
base	obj/user/yield.asm	/^			base = 10;$/;"	d
base	obj/user/yield.asm	/^			base = 16;$/;"	d
base	obj/user/yield.asm	/^			base = 8;$/;"	d
base	obj/user/yield.asm	/^		base = 10;$/;"	d
binaryname	obj/user/yield.asm	/^		binaryname = argv[0];$/;"	d
buf	obj/user/yield.asm	/^	buf = vbuf;$/;"	d
c	obj/user/yield.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
ch	obj/user/yield.asm	/^				ch = *fmt;$/;"	d
char	obj/user/yield.asm	/^char *$/;"	l
clrflag	obj/user/yield.asm	/^		clrflag = 0;$/;"	d
cnt	obj/user/yield.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	obj/user/yield.asm	/^				color = 0;$/;"	d
color	obj/user/yield.asm	/^			color = 0;$/;"	d
colorswitch	obj/user/yield.asm	/^	colorswitch:$/;"	l
const	obj/user/yield.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/yield.asm	/^const volatile struct Env *thisenv;$/;"	l
d	obj/user/yield.asm	/^	d = dst;$/;"	d
default	obj/user/yield.asm	/^		default:$/;"	l
dig	obj/user/yield.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/yield.asm	/^	dst_in = dst;$/;"	d
envid_t	obj/user/yield.asm	/^envid_t$/;"	l
err	obj/user/yield.asm	/^				err = -err;$/;"	d
err	obj/user/yield.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/yield.asm	/^    err:$/;"	l
err	obj/user/yield.asm	/^err:$/;"	l
err1	obj/user/yield.asm	/^    err1:$/;"	l
err2	obj/user/yield.asm	/^    err2:$/;"	l
err3	obj/user/yield.asm	/^    err3:$/;"	l
fd	obj/user/yield.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/yield.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fsenv	obj/user/yield.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
int	obj/user/yield.asm	/^int $/;"	l
int	obj/user/yield.asm	/^int color;$/;"	l
int	obj/user/yield.asm	/^int$/;"	l
int32_t	obj/user/yield.asm	/^int32_t$/;"	l
lflag	obj/user/yield.asm	/^		lflag = 0;$/;"	d
long	obj/user/yield.asm	/^long$/;"	l
m	obj/user/yield.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/yield.asm	/^		m = n - tot;$/;"	d
m	obj/user/yield.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
n	obj/user/yield.asm	/^		n = thisenv->env_runs;$/;"	d
newfd	obj/user/yield.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nn	obj/user/yield.asm	/^		nn = thisenv->env_runs;$/;"	d
nsenv	obj/user/yield.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
num	obj/user/yield.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/yield.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/yield.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/user/yield.asm	/^		number:$/;"	l
nva	obj/user/yield.asm	/^	nva = fd2data(newfd);$/;"	d
ova	obj/user/yield.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/user/yield.asm	/^				p = "(null)";$/;"	d
p	obj/user/yield.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/yield.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
padc	obj/user/yield.asm	/^			padc = '-';$/;"	d
padc	obj/user/yield.asm	/^			padc = '0';$/;"	d
precision	obj/user/yield.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/yield.asm	/^			precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/yield.asm	/^		process_precision:$/;"	l
pte	obj/user/yield.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
r	obj/user/yield.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/yield.asm	/^			r = 0;$/;"	d
r	obj/user/yield.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/yield.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/user/yield.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
reswitch	obj/user/yield.asm	/^	reswitch:$/;"	l
ret	obj/user/yield.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/yield.asm	/^	ret = dst;$/;"	d
s	obj/user/yield.asm	/^	s = src;$/;"	d
size_t	obj/user/yield.asm	/^size_t$/;"	l
ssize_t	obj/user/yield.asm	/^ssize_t$/;"	l
static	obj/user/yield.asm	/^static int$/;"	l
static	obj/user/yield.asm	/^static long long$/;"	l
static	obj/user/yield.asm	/^static ssize_t$/;"	l
static	obj/user/yield.asm	/^static unsigned long long$/;"	l
static	obj/user/yield.asm	/^static void$/;"	l
thisenv	obj/user/yield.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
unsigned	obj/user/yield.asm	/^unsigned int$/;"	l
va	obj/user/yield.asm	/^	va = fd2data(fd0);$/;"	d
void	obj/user/yield.asm	/^void *$/;"	l
void	obj/user/yield.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/yield.asm	/^void$/;"	l
width	obj/user/yield.asm	/^				width = 0;$/;"	d
width	obj/user/yield.asm	/^				width = precision, precision = -1;$/;"	d
TEMP_ADDR	user/sendpage.c	9;"	d	file:
TEMP_ADDR_CHILD	user/sendpage.c	10;"	d	file:
str1	user/sendpage.c	/^const char *str1 = "hello child environment! how are you?";$/;"	v
str2	user/sendpage.c	/^const char *str2 = "hello parent environment! I'm good.";$/;"	v
umain	user/sendpage.c	/^umain(int argc, char **argv)$/;"	f
