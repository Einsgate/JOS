!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
-format	GNUmakefile	/^	git archive --format=tar HEAD | gzip > lab$(LAB)-handin.tar.gz$/;"	m
ACKCIADDR	net/lwip/netif/ppp/ipcp.c	495;"	d	file:
ACKCICHAP	net/lwip/netif/ppp/lcp.c	653;"	d	file:
ACKCICHAR	net/lwip/netif/ppp/lcp.c	641;"	d	file:
ACKCIDNS	net/lwip/netif/ppp/ipcp.c	522;"	d	file:
ACKCILONG	net/lwip/netif/ppp/lcp.c	668;"	d	file:
ACKCILQR	net/lwip/netif/ppp/lcp.c	680;"	d	file:
ACKCISHORT	net/lwip/netif/ppp/lcp.c	629;"	d	file:
ACKCIVJ	net/lwip/netif/ppp/ipcp.c	467;"	d	file:
ACKCIVOID	net/lwip/netif/ppp/lcp.c	620;"	d	file:
ADDCIADDR	net/lwip/netif/ppp/ipcp.c	399;"	d	file:
ADDCICHAP	net/lwip/netif/ppp/lcp.c	551;"	d	file:
ADDCICHAR	net/lwip/netif/ppp/lcp.c	574;"	d	file:
ADDCIDNS	net/lwip/netif/ppp/ipcp.c	418;"	d	file:
ADDCILONG	net/lwip/netif/ppp/lcp.c	559;"	d	file:
ADDCILQR	net/lwip/netif/ppp/lcp.c	566;"	d	file:
ADDCISHORT	net/lwip/netif/ppp/lcp.c	544;"	d	file:
ADDCIVJ	net/lwip/netif/ppp/ipcp.c	382;"	d	file:
ADDCIVOID	net/lwip/netif/ppp/lcp.c	538;"	d	file:
AF_INET	net/lwip/include/lwip/sockets.h	118;"	d
AF_UNSPEC	net/lwip/include/lwip/sockets.h	117;"	d
ALLOC_ZERO	kern/pmap.h	/^	ALLOC_ZERO = 1<<0,$/;"	e	enum:__anon35
ALT	kern/console.c	223;"	d	file:
ANNOUNCE_INTERVAL	net/lwip/include/ipv4/lwip/autoip.h	65;"	d
ANNOUNCE_NUM	net/lwip/include/ipv4/lwip/autoip.h	64;"	d
ANNOUNCE_WAIT	net/lwip/include/ipv4/lwip/autoip.h	66;"	d
API_EVENT	net/lwip/include/lwip/api.h	158;"	d
API_LIB_DEBUG	net/lwip/include/lwip/opt.h	1497;"	d
API_MSG_DEBUG	net/lwip/include/lwip/opt.h	1504;"	d
AR	GNUmakefile	/^AR	:= $(GCCPREFIX)ar$/;"	m
ARPH_HWLEN	net/lwip/netif/etharp.c	81;"	d	file:
ARPH_HWLEN_SET	net/lwip/netif/etharp.c	84;"	d	file:
ARPH_PROTOLEN	net/lwip/netif/etharp.c	82;"	d	file:
ARPH_PROTOLEN_SET	net/lwip/netif/etharp.c	85;"	d	file:
ARP_MAXAGE	net/lwip/netif/etharp.c	69;"	d	file:
ARP_MAXPENDING	net/lwip/netif/etharp.c	77;"	d	file:
ARP_QUEUEING	net/lwip/include/lwip/opt.h	336;"	d
ARP_REPLY	net/lwip/include/netif/etharp.h	132;"	d
ARP_REQUEST	net/lwip/include/netif/etharp.h	131;"	d
ARP_TABLE_SIZE	net/lwip/include/lwip/opt.h	328;"	d
ARP_TMR_INTERVAL	net/lwip/include/netif/etharp.h	123;"	d
ARRAYSIZE	user/testbss.c	5;"	d	file:
AS	GNUmakefile	/^AS	:= $(GCCPREFIX)as$/;"	m
ASM	lib/string.c	9;"	d	file:
ASM	obj/fs/fs.asm	/^#define ASM 1$/;"	d
ASM	obj/kern/kernel.asm	/^#define ASM 1$/;"	d
ASM	obj/net/ns.asm	/^#define ASM 1$/;"	d
ASM	obj/net/testinput.asm	/^#define ASM 1$/;"	d
ASM	obj/net/testoutput.asm	/^#define ASM 1$/;"	d
ASM	obj/user/badsegment.asm	/^#define ASM 1$/;"	d
ASM	obj/user/breakpoint.asm	/^#define ASM 1$/;"	d
ASM	obj/user/buggyhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/buggyhello2.asm	/^#define ASM 1$/;"	d
ASM	obj/user/cat.asm	/^#define ASM 1$/;"	d
ASM	obj/user/divzero.asm	/^#define ASM 1$/;"	d
ASM	obj/user/dumbfork.asm	/^#define ASM 1$/;"	d
ASM	obj/user/echo.asm	/^#define ASM 1$/;"	d
ASM	obj/user/echosrv.asm	/^#define ASM 1$/;"	d
ASM	obj/user/echotest.asm	/^#define ASM 1$/;"	d
ASM	obj/user/evilhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/fairness.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultalloc.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultallocbad.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultbadhandler.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultdie.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultevilhandler.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultnostack.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultread.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultreadkernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultregs.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultwrite.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultwritekernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/forktree.asm	/^#define ASM 1$/;"	d
ASM	obj/user/hello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/httpd.asm	/^#define ASM 1$/;"	d
ASM	obj/user/icode.asm	/^#define ASM 1$/;"	d
ASM	obj/user/idle.asm	/^#define ASM 1$/;"	d
ASM	obj/user/init.asm	/^#define ASM 1$/;"	d
ASM	obj/user/ls.asm	/^#define ASM 1$/;"	d
ASM	obj/user/lsfd.asm	/^#define ASM 1$/;"	d
ASM	obj/user/num.asm	/^#define ASM 1$/;"	d
ASM	obj/user/pingpong.asm	/^#define ASM 1$/;"	d
ASM	obj/user/pingpongs.asm	/^#define ASM 1$/;"	d
ASM	obj/user/primes.asm	/^#define ASM 1$/;"	d
ASM	obj/user/primespipe.asm	/^#define ASM 1$/;"	d
ASM	obj/user/sendpage.asm	/^#define ASM 1$/;"	d
ASM	obj/user/sh.asm	/^#define ASM 1$/;"	d
ASM	obj/user/softint.asm	/^#define ASM 1$/;"	d
ASM	obj/user/spawnhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/spin.asm	/^#define ASM 1$/;"	d
ASM	obj/user/stresssched.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testbss.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testfdsharing.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testfile.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testkbd.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testpipe.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testpiperace.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testpiperace2.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testpteshare.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testshell.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testtime.asm	/^#define ASM 1$/;"	d
ASM	obj/user/yield.asm	/^#define ASM 1$/;"	d
ASSERT	kern/lapic.c	25;"	d	file:
AUTHDEBUG	net/lwip/netif/ppp/pppdebug.h	66;"	d
AUTHDEBUG	net/lwip/netif/ppp/pppdebug.h	76;"	d
AUTH_H	net/lwip/netif/ppp/auth.h	54;"	d
AUTOIP_DEBUG	net/lwip/include/lwip/opt.h	1680;"	d
AUTOIP_STATE_ANNOUNCING	net/lwip/include/ipv4/lwip/autoip.h	74;"	d
AUTOIP_STATE_BOUND	net/lwip/include/ipv4/lwip/autoip.h	75;"	d
AUTOIP_STATE_OFF	net/lwip/include/ipv4/lwip/autoip.h	72;"	d
AUTOIP_STATE_PROBING	net/lwip/include/ipv4/lwip/autoip.h	73;"	d
AUTOIP_TICKS_PER_SECOND	net/lwip/include/ipv4/lwip/autoip.h	57;"	d
AUTOIP_TMR_INTERVAL	net/lwip/include/ipv4/lwip/autoip.h	56;"	d
Argstate	inc/args.h	/^struct Argstate {$/;"	s
BACKTRACE_RE	grade-lab1	/^BACKTRACE_RE = r"^ *ebp +f01[0-9a-z]{5} +eip +f0100[0-9a-z]{3} +args +([0-9a-z]+)"$/;"	v
BCAST	kern/lapic.c	28;"	d	file:
BCMP	net/lwip/netif/ppp/ppp.h	210;"	d
BCOPY	net/lwip/netif/ppp/ppp.h	211;"	d
BIG_ENDIAN	net/lwip/include/lwip/arch.h	40;"	d
BLKBITSIZE	inc/fs.h	13;"	d
BLKFILES	inc/fs.h	45;"	d
BLKSECTS	fs/fs.h	5;"	d
BLKSIZE	inc/fs.h	12;"	d
BUFFSIZE	obj/user/echosrv.asm	/^#define BUFFSIZE 32$/;"	d
BUFFSIZE	user/echosrv.c	7;"	d	file:
BUFFSIZE	user/echotest.c	5;"	d	file:
BUFFSIZE	user/httpd.c	11;"	d	file:
BUFLEN	lib/readline.c	4;"	d	file:
BUFLEN	obj/kern/kernel.asm	/^#define BUFLEN 1024$/;"	d
BUFLEN	obj/user/sh.asm	/^#define BUFLEN 1024$/;"	d
BUFLEN	obj/user/testkbd.asm	/^#define BUFLEN 1024$/;"	d
BUFSIZ	user/sh.c	3;"	d	file:
BUSY	kern/lapic.c	30;"	d	file:
BYTE_ORDER	net/lwip/jos/arch/cc.h	38;"	d
BZERO	net/lwip/netif/ppp/ppp.h	212;"	d
C	kern/console.c	290;"	d	file:
CAPSLOCK	kern/console.c	225;"	d	file:
CBCP_OPT	net/lwip/netif/ppp/lcp.h	82;"	d
CBCP_SUPPORT	net/lwip/include/lwip/opt.h	1302;"	d
CC	GNUmakefile	/^CC	:= $(GCCPREFIX)gcc -pipe$/;"	m
CCP_SUPPORT	net/lwip/include/lwip/opt.h	1309;"	d
CFLAGS	GNUmakefile	/^CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -O1 -fno-builtin -I$(TOP) -MD$/;"	m
CGA_BASE	kern/console.h	13;"	d
CGA_BUF	kern/console.h	14;"	d
CHAPCS_CLOSED	net/lwip/netif/ppp/chap.h	103;"	d
CHAPCS_INITIAL	net/lwip/netif/ppp/chap.h	102;"	d
CHAPCS_LISTEN	net/lwip/netif/ppp/chap.h	105;"	d
CHAPCS_OPEN	net/lwip/netif/ppp/chap.h	107;"	d
CHAPCS_PENDING	net/lwip/netif/ppp/chap.h	104;"	d
CHAPCS_RESPONSE	net/lwip/netif/ppp/chap.h	106;"	d
CHAPDEBUG	net/lwip/netif/ppp/pppdebug.h	71;"	d
CHAPDEBUG	net/lwip/netif/ppp/pppdebug.h	81;"	d
CHAPSS_BADAUTH	net/lwip/netif/ppp/chap.h	118;"	d
CHAPSS_CLOSED	net/lwip/netif/ppp/chap.h	113;"	d
CHAPSS_INITIAL	net/lwip/netif/ppp/chap.h	112;"	d
CHAPSS_INITIAL_CHAL	net/lwip/netif/ppp/chap.h	115;"	d
CHAPSS_OPEN	net/lwip/netif/ppp/chap.h	116;"	d
CHAPSS_PENDING	net/lwip/netif/ppp/chap.h	114;"	d
CHAPSS_RECHALLENGE	net/lwip/netif/ppp/chap.h	117;"	d
CHAP_CHALLENGE	net/lwip/netif/ppp/chap.h	87;"	d
CHAP_DEFTIMEOUT	net/lwip/include/lwip/opt.h	1354;"	d
CHAP_DEFTRANSMITS	net/lwip/include/lwip/opt.h	1358;"	d
CHAP_DIGEST_MD5	net/lwip/netif/ppp/chap.h	82;"	d
CHAP_FAILURE	net/lwip/netif/ppp/chap.h	90;"	d
CHAP_H	net/lwip/netif/ppp/chap.h	69;"	d
CHAP_HEADERLEN	net/lwip/netif/ppp/chap.h	76;"	d
CHAP_MICROSOFT	net/lwip/netif/ppp/chap.h	84;"	d
CHAP_PEER	net/lwip/netif/ppp/auth.c	93;"	d	file:
CHAP_RESPONSE	net/lwip/netif/ppp/chap.h	88;"	d
CHAP_SUCCESS	net/lwip/netif/ppp/chap.h	89;"	d
CHAP_SUPPORT	net/lwip/include/lwip/opt.h	1288;"	d
CHAP_WITHPEER	net/lwip/netif/ppp/auth.c	92;"	d	file:
CHECK	user/faultregs.c	43;"	d	file:
CHECK	user/faultregs.c	65;"	d	file:
CHECKSUM	kern/entry.S	/^#define CHECKSUM (-(MULTIBOOT_HEADER_MAGIC + MULTIBOOT_HEADER_FLAGS))$/;"	d
CHECKSUM_CHECK_IP	net/lwip/include/lwip/opt.h	1433;"	d
CHECKSUM_CHECK_TCP	net/lwip/include/lwip/opt.h	1447;"	d
CHECKSUM_CHECK_UDP	net/lwip/include/lwip/opt.h	1440;"	d
CHECKSUM_GEN_IP	net/lwip/include/lwip/opt.h	1412;"	d
CHECKSUM_GEN_TCP	net/lwip/include/lwip/opt.h	1426;"	d
CHECKSUM_GEN_UDP	net/lwip/include/lwip/opt.h	1419;"	d
CHPMS_H	net/lwip/netif/ppp/chpms.h	58;"	d
CILEN_ADDR	net/lwip/netif/ppp/ipcp.c	77;"	d	file:
CILEN_ADDRS	net/lwip/netif/ppp/ipcp.c	78;"	d	file:
CILEN_CBCP	net/lwip/netif/ppp/lcp.c	88;"	d	file:
CILEN_CHAP	net/lwip/netif/ppp/lcp.c	85;"	d	file:
CILEN_CHAR	net/lwip/netif/ppp/lcp.c	83;"	d	file:
CILEN_COMPRESS	net/lwip/netif/ppp/ipcp.c	75;"	d	file:
CILEN_LONG	net/lwip/netif/ppp/lcp.c	86;"	d	file:
CILEN_LQR	net/lwip/netif/ppp/lcp.c	87;"	d	file:
CILEN_SHORT	net/lwip/netif/ppp/lcp.c	84;"	d	file:
CILEN_VJ	net/lwip/netif/ppp/ipcp.c	76;"	d	file:
CILEN_VOID	net/lwip/netif/ppp/ipcp.c	74;"	d	file:
CILEN_VOID	net/lwip/netif/ppp/lcp.c	82;"	d	file:
CI_ACCOMPRESSION	net/lwip/netif/ppp/lcp.h	69;"	d
CI_ADDR	net/lwip/netif/ppp/ipcp.h	65;"	d
CI_ADDRS	net/lwip/netif/ppp/ipcp.h	63;"	d
CI_ASYNCMAP	net/lwip/netif/ppp/lcp.h	64;"	d
CI_AUTHTYPE	net/lwip/netif/ppp/lcp.h	65;"	d
CI_CALLBACK	net/lwip/netif/ppp/lcp.h	70;"	d
CI_COMPRESSTYPE	net/lwip/netif/ppp/ipcp.h	64;"	d
CI_EPDISC	net/lwip/netif/ppp/lcp.h	73;"	d
CI_MAGICNUMBER	net/lwip/netif/ppp/lcp.h	67;"	d
CI_MRRU	net/lwip/netif/ppp/lcp.h	71;"	d
CI_MRU	net/lwip/netif/ppp/lcp.h	63;"	d
CI_MS_DNS1	net/lwip/netif/ppp/ipcp.h	68;"	d
CI_MS_DNS2	net/lwip/netif/ppp/ipcp.h	70;"	d
CI_MS_WINS1	net/lwip/netif/ppp/ipcp.h	67;"	d
CI_MS_WINS2	net/lwip/netif/ppp/ipcp.h	69;"	d
CI_PCOMPRESSION	net/lwip/netif/ppp/lcp.h	68;"	d
CI_QUALITY	net/lwip/netif/ppp/lcp.h	66;"	d
CI_SSNHF	net/lwip/netif/ppp/lcp.h	72;"	d
CLOSED	net/lwip/include/lwip/tcp.h	/^  CLOSED      = 0,$/;"	e	enum:tcp_state
CLOSE_WAIT	net/lwip/include/lwip/tcp.h	/^  CLOSE_WAIT  = 7,$/;"	e	enum:tcp_state
CLOSING	net/lwip/include/lwip/tcp.h	/^  CLOSING     = 8,$/;"	e	enum:tcp_state
CMDBUF_SIZE	kern/monitor.c	15;"	d	file:
CMDBYTE	inc/kbdreg.h	60;"	d
CODENAME	net/lwip/netif/ppp/ipcp.c	115;"	d	file:
CODENAME	net/lwip/netif/ppp/lcp.c	130;"	d	file:
CODEREJ	net/lwip/netif/ppp/fsm.h	75;"	d
COLORS	gradelib.py	/^COLORS = {"default": "\\033[0m", "red": "\\033[31m", "green": "\\033[32m"}$/;"	v
COM1	kern/console.c	27;"	d	file:
COM_DLL	kern/console.c	31;"	d	file:
COM_DLM	kern/console.c	32;"	d	file:
COM_FCR	kern/console.c	36;"	d	file:
COM_IER	kern/console.c	33;"	d	file:
COM_IER_RDI	kern/console.c	34;"	d	file:
COM_IIR	kern/console.c	35;"	d	file:
COM_LCR	kern/console.c	37;"	d	file:
COM_LCR_DLAB	kern/console.c	38;"	d	file:
COM_LCR_WLEN8	kern/console.c	39;"	d	file:
COM_LSR	kern/console.c	44;"	d	file:
COM_LSR_DATA	kern/console.c	45;"	d	file:
COM_LSR_TSRE	kern/console.c	47;"	d	file:
COM_LSR_TXRDY	kern/console.c	46;"	d	file:
COM_MCR	kern/console.c	40;"	d	file:
COM_MCR_DTR	kern/console.c	42;"	d	file:
COM_MCR_OUT2	kern/console.c	43;"	d	file:
COM_MCR_RTS	kern/console.c	41;"	d	file:
COM_RX	kern/console.c	29;"	d	file:
COM_TX	kern/console.c	30;"	d	file:
CONFACK	net/lwip/netif/ppp/fsm.h	70;"	d
CONFNAK	net/lwip/netif/ppp/fsm.h	71;"	d
CONFREJ	net/lwip/netif/ppp/fsm.h	72;"	d
CONFREQ	net/lwip/netif/ppp/fsm.h	69;"	d
CONSBUFSIZE	kern/console.c	389;"	d	file:
CPUS	GNUmakefile	/^CPUS ?= 1$/;"	m
CPU_HALTED	kern/cpu.h	/^	CPU_HALTED,$/;"	e	enum:__anon33
CPU_STARTED	kern/cpu.h	/^	CPU_STARTED,$/;"	e	enum:__anon33
CPU_UNUSED	kern/cpu.h	/^	CPU_UNUSED = 0,$/;"	e	enum:__anon33
CR0_AM	inc/mmu.h	86;"	d
CR0_CD	inc/mmu.h	88;"	d
CR0_EM	inc/mmu.h	81;"	d
CR0_ET	inc/mmu.h	83;"	d
CR0_MP	inc/mmu.h	80;"	d
CR0_NE	inc/mmu.h	84;"	d
CR0_NW	inc/mmu.h	87;"	d
CR0_PE	inc/mmu.h	79;"	d
CR0_PG	inc/mmu.h	89;"	d
CR0_TS	inc/mmu.h	82;"	d
CR0_WP	inc/mmu.h	85;"	d
CR4_DE	inc/mmu.h	94;"	d
CR4_MCE	inc/mmu.h	92;"	d
CR4_PCE	inc/mmu.h	91;"	d
CR4_PSE	inc/mmu.h	93;"	d
CR4_PVI	inc/mmu.h	96;"	d
CR4_TSD	inc/mmu.h	95;"	d
CR4_VME	inc/mmu.h	97;"	d
CRT_COLS	kern/console.h	17;"	d
CRT_ROWS	kern/console.h	16;"	d
CRT_SIZE	kern/console.h	18;"	d
CTL	kern/console.c	222;"	d	file:
CURRENT_TEST	gradelib.py	/^CURRENT_TEST = None$/;"	v
ChallengeResponse	net/lwip/netif/ppp/chpms.c	/^ChallengeResponse( u_char *challenge, \/* IN   8 octets *\/$/;"	f	file:
ChapAuthPeer	net/lwip/netif/ppp/chap.c	/^ChapAuthPeer(int unit, char *our_name, int digest)$/;"	f
ChapAuthWithPeer	net/lwip/netif/ppp/chap.c	/^ChapAuthWithPeer(int unit, char *our_name, int digest)$/;"	f
ChapChallengeTimeout	net/lwip/netif/ppp/chap.c	/^ChapChallengeTimeout(void *arg)$/;"	f	file:
ChapGenChallenge	net/lwip/netif/ppp/chap.c	/^ChapGenChallenge(chap_state *cstate)$/;"	f	file:
ChapInit	net/lwip/netif/ppp/chap.c	/^ChapInit(int unit)$/;"	f	file:
ChapInput	net/lwip/netif/ppp/chap.c	/^ChapInput(int unit, u_char *inpacket, int packet_len)$/;"	f	file:
ChapLowerDown	net/lwip/netif/ppp/chap.c	/^ChapLowerDown(int unit)$/;"	f	file:
ChapLowerUp	net/lwip/netif/ppp/chap.c	/^ChapLowerUp(int unit)$/;"	f	file:
ChapMS	net/lwip/netif/ppp/chpms.c	/^ChapMS( chap_state *cstate, char *rchallenge, int rchallenge_len, char *secret, int secret_len)$/;"	f
ChapMS_LANMan	net/lwip/netif/ppp/chpms.c	/^ChapMS_LANMan( char *rchallenge,$/;"	f	file:
ChapMS_NT	net/lwip/netif/ppp/chpms.c	/^ChapMS_NT( char *rchallenge,$/;"	f	file:
ChapProtocolReject	net/lwip/netif/ppp/chap.c	/^ChapProtocolReject(int unit)$/;"	f	file:
ChapReceiveChallenge	net/lwip/netif/ppp/chap.c	/^ChapReceiveChallenge(chap_state *cstate, u_char *inp, int id, int len)$/;"	f	file:
ChapReceiveFailure	net/lwip/netif/ppp/chap.c	/^ChapReceiveFailure(chap_state *cstate, u_char *inp, u_char id, int len)$/;"	f	file:
ChapReceiveResponse	net/lwip/netif/ppp/chap.c	/^ChapReceiveResponse(chap_state *cstate, u_char *inp, int id, int len)$/;"	f	file:
ChapReceiveSuccess	net/lwip/netif/ppp/chap.c	/^ChapReceiveSuccess(chap_state *cstate, u_char *inp, u_char id, int len)$/;"	f	file:
ChapRechallenge	net/lwip/netif/ppp/chap.c	/^ChapRechallenge(void *arg)$/;"	f	file:
ChapResponseTimeout	net/lwip/netif/ppp/chap.c	/^ChapResponseTimeout(void *arg)$/;"	f	file:
ChapSendChallenge	net/lwip/netif/ppp/chap.c	/^ChapSendChallenge(chap_state *cstate)$/;"	f	file:
ChapSendResponse	net/lwip/netif/ppp/chap.c	/^ChapSendResponse(chap_state *cstate)$/;"	f	file:
ChapSendStatus	net/lwip/netif/ppp/chap.c	/^ChapSendStatus(chap_state *cstate, int code)$/;"	f	file:
Collapse	net/lwip/netif/ppp/chpms.c	/^Collapse(u_char *in, u_char *out)$/;"	f	file:
Command	kern/monitor.c	/^struct Command {$/;"	s	file:
CpuInfo	kern/cpu.h	/^struct CpuInfo {$/;"	s
DBG_MIN_LEVEL	net/lwip/jos/lwipopts.h	57;"	d
DEASSERT	kern/lapic.c	26;"	d	file:
DEBUG_SPINLOCK	kern/spinlock.h	7;"	d
DECODEL	net/lwip/netif/ppp/vj.c	107;"	d	file:
DECODES	net/lwip/netif/ppp/vj.c	118;"	d	file:
DECODEU	net/lwip/netif/ppp/vj.c	129;"	d	file:
DECPTR	net/lwip/netif/ppp/ppp.h	208;"	d
DEFAULT	net/ns.h	6;"	d
DEFAULT_ACCEPTMBOX_SIZE	net/lwip/include/lwip/opt.h	1043;"	d
DEFAULT_RAW_RECVMBOX_SIZE	net/lwip/include/lwip/opt.h	1016;"	d
DEFAULT_TCP_RECVMBOX_SIZE	net/lwip/include/lwip/opt.h	1034;"	d
DEFAULT_THREAD_NAME	net/lwip/include/lwip/opt.h	989;"	d
DEFAULT_THREAD_PRIO	net/lwip/include/lwip/opt.h	1007;"	d
DEFAULT_THREAD_STACKSIZE	net/lwip/include/lwip/opt.h	998;"	d
DEFAULT_UDP_RECVMBOX_SIZE	net/lwip/include/lwip/opt.h	1025;"	d
DEFEND_INTERVAL	net/lwip/include/ipv4/lwip/autoip.h	69;"	d
DEFLOOPBACKFAIL	net/lwip/netif/ppp/lcp.h	165;"	d
DELIVS	kern/lapic.c	24;"	d	file:
DEPTH	user/forktree.c	5;"	d	file:
DHCP_ACK	net/lwip/include/lwip/dhcp.h	188;"	d
DHCP_AUTOIP_COOP_STATE_OFF	net/lwip/include/lwip/dhcp.h	178;"	d
DHCP_AUTOIP_COOP_STATE_ON	net/lwip/include/lwip/dhcp.h	179;"	d
DHCP_BACKING_OFF	net/lwip/include/lwip/dhcp.h	174;"	d
DHCP_BOOTREPLY	net/lwip/include/lwip/dhcp.h	182;"	d
DHCP_BOOTREQUEST	net/lwip/include/lwip/dhcp.h	181;"	d
DHCP_BOUND	net/lwip/include/lwip/dhcp.h	172;"	d
DHCP_BROADCAST_FLAG	net/lwip/include/lwip/dhcp.h	197;"	d
DHCP_BROADCAST_MASK	net/lwip/include/lwip/dhcp.h	198;"	d
DHCP_CHADDR_LEN	net/lwip/include/lwip/dhcp.h	93;"	d
DHCP_CHADDR_OFS	net/lwip/include/lwip/dhcp.h	151;"	d
DHCP_CHECKING	net/lwip/include/lwip/dhcp.h	170;"	d
DHCP_CIADDR_OFS	net/lwip/include/lwip/dhcp.h	147;"	d
DHCP_CLIENT_PORT	net/lwip/include/lwip/dhcp.h	159;"	d
DHCP_COARSE_TIMER_MSECS	net/lwip/include/lwip/dhcp.h	21;"	d
DHCP_COARSE_TIMER_SECS	net/lwip/include/lwip/dhcp.h	19;"	d
DHCP_COOKIE_OFS	net/lwip/include/lwip/dhcp.h	156;"	d
DHCP_DEBUG	net/lwip/include/lwip/opt.h	1673;"	d
DHCP_DECLINE	net/lwip/include/lwip/dhcp.h	187;"	d
DHCP_DISCOVER	net/lwip/include/lwip/dhcp.h	184;"	d
DHCP_DOES_ARP_CHECK	net/lwip/include/lwip/opt.h	490;"	d
DHCP_FILE_LEN	net/lwip/include/lwip/dhcp.h	97;"	d
DHCP_FILE_OFS	net/lwip/include/lwip/dhcp.h	153;"	d
DHCP_FINE_TIMER_MSECS	net/lwip/include/lwip/dhcp.h	23;"	d
DHCP_FLAGS_OFS	net/lwip/include/lwip/dhcp.h	146;"	d
DHCP_GIADDR_OFS	net/lwip/include/lwip/dhcp.h	150;"	d
DHCP_HLEN_ETH	net/lwip/include/lwip/dhcp.h	195;"	d
DHCP_HLEN_OFS	net/lwip/include/lwip/dhcp.h	142;"	d
DHCP_HOPS_OFS	net/lwip/include/lwip/dhcp.h	143;"	d
DHCP_HTYPE_ETH	net/lwip/include/lwip/dhcp.h	193;"	d
DHCP_HTYPE_OFS	net/lwip/include/lwip/dhcp.h	141;"	d
DHCP_INFORM	net/lwip/include/lwip/dhcp.h	191;"	d
DHCP_INFORMING	net/lwip/include/lwip/dhcp.h	169;"	d
DHCP_INIT	net/lwip/include/lwip/dhcp.h	164;"	d
DHCP_MAX_DNS	net/lwip/include/lwip/dhcp.h	55;"	d
DHCP_MIN_OPTIONS_LEN	net/lwip/include/lwip/dhcp.h	100;"	d
DHCP_MSG_LEN	net/lwip/include/lwip/dhcp.h	154;"	d
DHCP_MSG_OFS	net/lwip/include/lwip/dhcp.h	139;"	d
DHCP_NAK	net/lwip/include/lwip/dhcp.h	189;"	d
DHCP_OFF	net/lwip/include/lwip/dhcp.h	175;"	d
DHCP_OFFER	net/lwip/include/lwip/dhcp.h	185;"	d
DHCP_OPTIONS_LEN	net/lwip/include/lwip/dhcp.h	103;"	d
DHCP_OPTIONS_LEN	net/lwip/include/lwip/dhcp.h	108;"	d
DHCP_OPTIONS_OFS	net/lwip/include/lwip/dhcp.h	157;"	d
DHCP_OPTION_BOOTFILE	net/lwip/include/lwip/dhcp.h	232;"	d
DHCP_OPTION_BROADCAST	net/lwip/include/lwip/dhcp.h	208;"	d
DHCP_OPTION_CLIENT_ID	net/lwip/include/lwip/dhcp.h	230;"	d
DHCP_OPTION_DNS_SERVER	net/lwip/include/lwip/dhcp.h	204;"	d
DHCP_OPTION_END	net/lwip/include/lwip/dhcp.h	210;"	d
DHCP_OPTION_HOSTNAME	net/lwip/include/lwip/dhcp.h	205;"	d
DHCP_OPTION_IP_TTL	net/lwip/include/lwip/dhcp.h	206;"	d
DHCP_OPTION_LEASE_TIME	net/lwip/include/lwip/dhcp.h	214;"	d
DHCP_OPTION_MAX_MSG_SIZE	net/lwip/include/lwip/dhcp.h	224;"	d
DHCP_OPTION_MAX_MSG_SIZE_LEN	net/lwip/include/lwip/dhcp.h	225;"	d
DHCP_OPTION_MESSAGE_TYPE	net/lwip/include/lwip/dhcp.h	217;"	d
DHCP_OPTION_MESSAGE_TYPE_LEN	net/lwip/include/lwip/dhcp.h	218;"	d
DHCP_OPTION_MTU	net/lwip/include/lwip/dhcp.h	207;"	d
DHCP_OPTION_OVERLOAD	net/lwip/include/lwip/dhcp.h	215;"	d
DHCP_OPTION_PAD	net/lwip/include/lwip/dhcp.h	201;"	d
DHCP_OPTION_PARAMETER_REQUEST_LIST	net/lwip/include/lwip/dhcp.h	222;"	d
DHCP_OPTION_REQUESTED_IP	net/lwip/include/lwip/dhcp.h	213;"	d
DHCP_OPTION_ROUTER	net/lwip/include/lwip/dhcp.h	203;"	d
DHCP_OPTION_SERVER_ID	net/lwip/include/lwip/dhcp.h	221;"	d
DHCP_OPTION_SUBNET_MASK	net/lwip/include/lwip/dhcp.h	202;"	d
DHCP_OPTION_T1	net/lwip/include/lwip/dhcp.h	227;"	d
DHCP_OPTION_T2	net/lwip/include/lwip/dhcp.h	228;"	d
DHCP_OPTION_TCP_TTL	net/lwip/include/lwip/dhcp.h	209;"	d
DHCP_OPTION_TFTP_SERVERNAME	net/lwip/include/lwip/dhcp.h	231;"	d
DHCP_OPTION_US	net/lwip/include/lwip/dhcp.h	229;"	d
DHCP_OP_OFS	net/lwip/include/lwip/dhcp.h	140;"	d
DHCP_OVERLOAD_FILE	net/lwip/include/lwip/dhcp.h	236;"	d
DHCP_OVERLOAD_NONE	net/lwip/include/lwip/dhcp.h	235;"	d
DHCP_OVERLOAD_SNAME	net/lwip/include/lwip/dhcp.h	237;"	d
DHCP_OVERLOAD_SNAME_FILE	net/lwip/include/lwip/dhcp.h	238;"	d
DHCP_PERMANENT	net/lwip/include/lwip/dhcp.h	171;"	d
DHCP_REBINDING	net/lwip/include/lwip/dhcp.h	166;"	d
DHCP_REBOOTING	net/lwip/include/lwip/dhcp.h	165;"	d
DHCP_RELEASE	net/lwip/include/lwip/dhcp.h	190;"	d
DHCP_RENEWING	net/lwip/include/lwip/dhcp.h	167;"	d
DHCP_REQUEST	net/lwip/include/lwip/dhcp.h	186;"	d
DHCP_REQUESTING	net/lwip/include/lwip/dhcp.h	163;"	d
DHCP_SECS_OFS	net/lwip/include/lwip/dhcp.h	145;"	d
DHCP_SELECTING	net/lwip/include/lwip/dhcp.h	168;"	d
DHCP_SERVER_PORT	net/lwip/include/lwip/dhcp.h	160;"	d
DHCP_SIADDR_OFS	net/lwip/include/lwip/dhcp.h	149;"	d
DHCP_SNAME_LEN	net/lwip/include/lwip/dhcp.h	95;"	d
DHCP_SNAME_OFS	net/lwip/include/lwip/dhcp.h	152;"	d
DHCP_XID_OFS	net/lwip/include/lwip/dhcp.h	144;"	d
DHCP_YIADDR_OFS	net/lwip/include/lwip/dhcp.h	148;"	d
DISCREQ	net/lwip/netif/ppp/lcp.h	81;"	d
DISKMAP	fs/fs.h	9;"	d
DISKSIZE	fs/fs.h	12;"	d
DNS_DEBUG	net/lwip/include/lwip/opt.h	1701;"	d
DNS_DOES_NAME_CHECK	net/lwip/include/lwip/opt.h	600;"	d
DNS_FLAG1_AUTHORATIVE	net/lwip/core/dns.c	110;"	d	file:
DNS_FLAG1_OPCODE_INVERSE	net/lwip/core/dns.c	108;"	d	file:
DNS_FLAG1_OPCODE_STANDARD	net/lwip/core/dns.c	109;"	d	file:
DNS_FLAG1_OPCODE_STATUS	net/lwip/core/dns.c	107;"	d	file:
DNS_FLAG1_RD	net/lwip/core/dns.c	112;"	d	file:
DNS_FLAG1_RESPONSE	net/lwip/core/dns.c	106;"	d	file:
DNS_FLAG1_TRUNC	net/lwip/core/dns.c	111;"	d	file:
DNS_FLAG2_ERR_MASK	net/lwip/core/dns.c	114;"	d	file:
DNS_FLAG2_ERR_NAME	net/lwip/core/dns.c	116;"	d	file:
DNS_FLAG2_ERR_NONE	net/lwip/core/dns.c	115;"	d	file:
DNS_FLAG2_RA	net/lwip/core/dns.c	113;"	d	file:
DNS_MAX_NAME_LENGTH	net/lwip/include/lwip/opt.h	590;"	d
DNS_MAX_RETRIES	net/lwip/core/dns.c	97;"	d	file:
DNS_MAX_SERVERS	net/lwip/include/lwip/opt.h	595;"	d
DNS_MAX_TTL	net/lwip/core/dns.c	102;"	d	file:
DNS_MSG_SIZE	net/lwip/include/lwip/opt.h	612;"	d
DNS_RRCLASS_CH	net/lwip/include/lwip/dns.h	65;"	d
DNS_RRCLASS_CS	net/lwip/include/lwip/dns.h	64;"	d
DNS_RRCLASS_FLUSH	net/lwip/include/lwip/dns.h	67;"	d
DNS_RRCLASS_HS	net/lwip/include/lwip/dns.h	66;"	d
DNS_RRCLASS_IN	net/lwip/include/lwip/dns.h	63;"	d
DNS_RRTYPE_A	net/lwip/include/lwip/dns.h	45;"	d
DNS_RRTYPE_CNAME	net/lwip/include/lwip/dns.h	49;"	d
DNS_RRTYPE_HINFO	net/lwip/include/lwip/dns.h	57;"	d
DNS_RRTYPE_MB	net/lwip/include/lwip/dns.h	51;"	d
DNS_RRTYPE_MD	net/lwip/include/lwip/dns.h	47;"	d
DNS_RRTYPE_MF	net/lwip/include/lwip/dns.h	48;"	d
DNS_RRTYPE_MG	net/lwip/include/lwip/dns.h	52;"	d
DNS_RRTYPE_MINFO	net/lwip/include/lwip/dns.h	58;"	d
DNS_RRTYPE_MR	net/lwip/include/lwip/dns.h	53;"	d
DNS_RRTYPE_MX	net/lwip/include/lwip/dns.h	59;"	d
DNS_RRTYPE_NS	net/lwip/include/lwip/dns.h	46;"	d
DNS_RRTYPE_NULL	net/lwip/include/lwip/dns.h	54;"	d
DNS_RRTYPE_PTR	net/lwip/include/lwip/dns.h	56;"	d
DNS_RRTYPE_SOA	net/lwip/include/lwip/dns.h	50;"	d
DNS_RRTYPE_TXT	net/lwip/include/lwip/dns.h	60;"	d
DNS_RRTYPE_WKS	net/lwip/include/lwip/dns.h	55;"	d
DNS_SERVER_ADDRESS	net/lwip/core/dns.c	87;"	d	file:
DNS_SERVER_PORT	net/lwip/core/dns.c	92;"	d	file:
DNS_STATE_ASKING	net/lwip/core/dns.c	121;"	d	file:
DNS_STATE_DONE	net/lwip/core/dns.c	122;"	d	file:
DNS_STATE_NEW	net/lwip/core/dns.c	120;"	d	file:
DNS_STATE_UNUSED	net/lwip/core/dns.c	119;"	d	file:
DNS_TABLE_SIZE	net/lwip/include/lwip/opt.h	585;"	d
DNS_TMR_INTERVAL	net/lwip/include/lwip/dns.h	42;"	d
DNS_USES_STATIC_BUF	net/lwip/include/lwip/opt.h	607;"	d
DesEncrypt	net/lwip/netif/ppp/chpms.c	/^DesEncrypt( u_char *clear, \/* IN  8 octets *\/$/;"	f	file:
Dev	inc/fd.h	/^struct Dev {$/;"	s
Dir	fs/fsformat.c	/^struct Dir$/;"	s	file:
Disassembly	obj/boot/boot.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/fs/fs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/kern/kernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/net/ns.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/net/testinput.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/net/testoutput.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/badsegment.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/breakpoint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/buggyhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/buggyhello2.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/cat.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/divzero.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/dumbfork.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/echo.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/echosrv.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/echotest.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/evilhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/fairness.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultalloc.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultallocbad.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultbadhandler.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultdie.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultevilhandler.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultnostack.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultread.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultreadkernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultregs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultwrite.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultwritekernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/forktree.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/hello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/httpd.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/icode.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/idle.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/init.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/ls.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/lsfd.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/num.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pingpong.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pingpongs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/primes.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/primespipe.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/sendpage.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/sh.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/softint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/spawnhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/spin.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/stresssched.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testbss.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testfdsharing.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testfile.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testkbd.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testpipe.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testpiperace.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testpiperace2.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testpteshare.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testshell.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testtime.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/yield.asm	/^Disassembly of section .text:$/;"	l
E	grade-lab4	/^def E(s, trim=False):$/;"	f
E0ESC	kern/console.c	229;"	d	file:
E1000_DEV_ID_82540EM	kern/e1000.h	21;"	d
E1000_ICR_ACK	kern/e1000.h	75;"	d
E1000_ICR_ALL_PARITY	kern/e1000.h	85;"	d
E1000_ICR_DOCK	kern/e1000.h	77;"	d
E1000_ICR_DSW	kern/e1000.h	86;"	d
E1000_ICR_EPRST	kern/e1000.h	88;"	d
E1000_ICR_GPI_EN0	kern/e1000.h	69;"	d
E1000_ICR_GPI_EN1	kern/e1000.h	70;"	d
E1000_ICR_GPI_EN2	kern/e1000.h	71;"	d
E1000_ICR_GPI_EN3	kern/e1000.h	72;"	d
E1000_ICR_HOST_ARB_PAR	kern/e1000.h	81;"	d
E1000_ICR_INT_ASSERTED	kern/e1000.h	78;"	d
E1000_ICR_LSC	kern/e1000.h	62;"	d
E1000_ICR_MDAC	kern/e1000.h	67;"	d
E1000_ICR_MNG	kern/e1000.h	76;"	d
E1000_ICR_PB_PAR	kern/e1000.h	82;"	d
E1000_ICR_PHYINT	kern/e1000.h	87;"	d
E1000_ICR_RXCFG	kern/e1000.h	68;"	d
E1000_ICR_RXDMT0	kern/e1000.h	64;"	d
E1000_ICR_RXD_FIFO_PAR0	kern/e1000.h	79;"	d
E1000_ICR_RXD_FIFO_PAR1	kern/e1000.h	83;"	d
E1000_ICR_RXO	kern/e1000.h	65;"	d
E1000_ICR_RXSEQ	kern/e1000.h	63;"	d
E1000_ICR_RXT0	kern/e1000.h	66;"	d
E1000_ICR_SRPD	kern/e1000.h	74;"	d
E1000_ICR_TXDW	kern/e1000.h	60;"	d
E1000_ICR_TXD_FIFO_PAR0	kern/e1000.h	80;"	d
E1000_ICR_TXD_FIFO_PAR1	kern/e1000.h	84;"	d
E1000_ICR_TXD_LOW	kern/e1000.h	73;"	d
E1000_ICR_TXQE	kern/e1000.h	61;"	d
E1000_ICS_ACK	kern/e1000.h	106;"	d
E1000_ICS_DOCK	kern/e1000.h	108;"	d
E1000_ICS_DSW	kern/e1000.h	115;"	d
E1000_ICS_EPRST	kern/e1000.h	117;"	d
E1000_ICS_GPI_EN0	kern/e1000.h	100;"	d
E1000_ICS_GPI_EN1	kern/e1000.h	101;"	d
E1000_ICS_GPI_EN2	kern/e1000.h	102;"	d
E1000_ICS_GPI_EN3	kern/e1000.h	103;"	d
E1000_ICS_HOST_ARB_PAR	kern/e1000.h	111;"	d
E1000_ICS_LSC	kern/e1000.h	93;"	d
E1000_ICS_MDAC	kern/e1000.h	98;"	d
E1000_ICS_MNG	kern/e1000.h	107;"	d
E1000_ICS_PB_PAR	kern/e1000.h	112;"	d
E1000_ICS_PHYINT	kern/e1000.h	116;"	d
E1000_ICS_RXCFG	kern/e1000.h	99;"	d
E1000_ICS_RXDMT0	kern/e1000.h	95;"	d
E1000_ICS_RXD_FIFO_PAR0	kern/e1000.h	109;"	d
E1000_ICS_RXD_FIFO_PAR1	kern/e1000.h	113;"	d
E1000_ICS_RXO	kern/e1000.h	96;"	d
E1000_ICS_RXSEQ	kern/e1000.h	94;"	d
E1000_ICS_RXT0	kern/e1000.h	97;"	d
E1000_ICS_SRPD	kern/e1000.h	105;"	d
E1000_ICS_TXDW	kern/e1000.h	91;"	d
E1000_ICS_TXD_FIFO_PAR0	kern/e1000.h	110;"	d
E1000_ICS_TXD_FIFO_PAR1	kern/e1000.h	114;"	d
E1000_ICS_TXD_LOW	kern/e1000.h	104;"	d
E1000_ICS_TXQE	kern/e1000.h	92;"	d
E1000_IMS	kern/e1000.h	39;"	d
E1000_IMS_ACK	kern/e1000.h	135;"	d
E1000_IMS_DOCK	kern/e1000.h	137;"	d
E1000_IMS_DSW	kern/e1000.h	144;"	d
E1000_IMS_EPRST	kern/e1000.h	146;"	d
E1000_IMS_GPI_EN0	kern/e1000.h	129;"	d
E1000_IMS_GPI_EN1	kern/e1000.h	130;"	d
E1000_IMS_GPI_EN2	kern/e1000.h	131;"	d
E1000_IMS_GPI_EN3	kern/e1000.h	132;"	d
E1000_IMS_HOST_ARB_PAR	kern/e1000.h	140;"	d
E1000_IMS_LSC	kern/e1000.h	122;"	d
E1000_IMS_MDAC	kern/e1000.h	127;"	d
E1000_IMS_MNG	kern/e1000.h	136;"	d
E1000_IMS_PB_PAR	kern/e1000.h	141;"	d
E1000_IMS_PHYINT	kern/e1000.h	145;"	d
E1000_IMS_RXCFG	kern/e1000.h	128;"	d
E1000_IMS_RXDMT0	kern/e1000.h	124;"	d
E1000_IMS_RXD_FIFO_PAR0	kern/e1000.h	138;"	d
E1000_IMS_RXD_FIFO_PAR1	kern/e1000.h	142;"	d
E1000_IMS_RXO	kern/e1000.h	125;"	d
E1000_IMS_RXSEQ	kern/e1000.h	123;"	d
E1000_IMS_RXT0	kern/e1000.h	126;"	d
E1000_IMS_SRPD	kern/e1000.h	134;"	d
E1000_IMS_TXDW	kern/e1000.h	120;"	d
E1000_IMS_TXD_FIFO_PAR0	kern/e1000.h	139;"	d
E1000_IMS_TXD_FIFO_PAR1	kern/e1000.h	143;"	d
E1000_IMS_TXD_LOW	kern/e1000.h	133;"	d
E1000_IMS_TXQE	kern/e1000.h	121;"	d
E1000_MTA	kern/e1000.h	55;"	d
E1000_RAH	kern/e1000.h	57;"	d
E1000_RAL	kern/e1000.h	56;"	d
E1000_RCTL	kern/e1000.h	40;"	d
E1000_RCTL_BAM	kern/e1000.h	183;"	d
E1000_RCTL_BSEX	kern/e1000.h	198;"	d
E1000_RCTL_CFI	kern/e1000.h	195;"	d
E1000_RCTL_CFIEN	kern/e1000.h	194;"	d
E1000_RCTL_DPF	kern/e1000.h	196;"	d
E1000_RCTL_DTYP_MASK	kern/e1000.h	171;"	d
E1000_RCTL_DTYP_PS	kern/e1000.h	172;"	d
E1000_RCTL_EN	kern/e1000.h	161;"	d
E1000_RCTL_FLXBUF_MASK	kern/e1000.h	200;"	d
E1000_RCTL_FLXBUF_SHIFT	kern/e1000.h	201;"	d
E1000_RCTL_LBM	kern/e1000.h	166;"	d
E1000_RCTL_LBM_MAC	kern/e1000.h	168;"	d
E1000_RCTL_LBM_NO	kern/e1000.h	167;"	d
E1000_RCTL_LBM_SLP	kern/e1000.h	169;"	d
E1000_RCTL_LBM_TCVR	kern/e1000.h	170;"	d
E1000_RCTL_LPE	kern/e1000.h	165;"	d
E1000_RCTL_MDR	kern/e1000.h	182;"	d
E1000_RCTL_MO_0	kern/e1000.h	178;"	d
E1000_RCTL_MO_1	kern/e1000.h	179;"	d
E1000_RCTL_MO_2	kern/e1000.h	180;"	d
E1000_RCTL_MO_3	kern/e1000.h	181;"	d
E1000_RCTL_MO_SHIFT	kern/e1000.h	177;"	d
E1000_RCTL_MPE	kern/e1000.h	164;"	d
E1000_RCTL_PMCF	kern/e1000.h	197;"	d
E1000_RCTL_RDMTS	kern/e1000.h	176;"	d
E1000_RCTL_RDMTS_EIGTH	kern/e1000.h	175;"	d
E1000_RCTL_RDMTS_HALF	kern/e1000.h	173;"	d
E1000_RCTL_RDMTS_QUAT	kern/e1000.h	174;"	d
E1000_RCTL_RST	kern/e1000.h	160;"	d
E1000_RCTL_SBP	kern/e1000.h	162;"	d
E1000_RCTL_SECRC	kern/e1000.h	199;"	d
E1000_RCTL_SZ_1024	kern/e1000.h	186;"	d
E1000_RCTL_SZ_16384	kern/e1000.h	190;"	d
E1000_RCTL_SZ_2048	kern/e1000.h	185;"	d
E1000_RCTL_SZ_256	kern/e1000.h	188;"	d
E1000_RCTL_SZ_4096	kern/e1000.h	192;"	d
E1000_RCTL_SZ_512	kern/e1000.h	187;"	d
E1000_RCTL_SZ_8192	kern/e1000.h	191;"	d
E1000_RCTL_UPE	kern/e1000.h	163;"	d
E1000_RCTL_VFE	kern/e1000.h	193;"	d
E1000_RDBAH	kern/e1000.h	44;"	d
E1000_RDBAL	kern/e1000.h	43;"	d
E1000_RDH	kern/e1000.h	46;"	d
E1000_RDLEN	kern/e1000.h	45;"	d
E1000_RDT	kern/e1000.h	47;"	d
E1000_RXD_ERR_CE	kern/e1000.h	301;"	d
E1000_RXD_ERR_CXE	kern/e1000.h	304;"	d
E1000_RXD_ERR_IPE	kern/e1000.h	306;"	d
E1000_RXD_ERR_RXE	kern/e1000.h	307;"	d
E1000_RXD_ERR_SE	kern/e1000.h	302;"	d
E1000_RXD_ERR_SEQ	kern/e1000.h	303;"	d
E1000_RXD_ERR_TCPE	kern/e1000.h	305;"	d
E1000_RXD_SPC_CFI_MASK	kern/e1000.h	311;"	d
E1000_RXD_SPC_CFI_SHIFT	kern/e1000.h	312;"	d
E1000_RXD_SPC_PRI_MASK	kern/e1000.h	309;"	d
E1000_RXD_SPC_PRI_SHIFT	kern/e1000.h	310;"	d
E1000_RXD_SPC_VLAN_MASK	kern/e1000.h	308;"	d
E1000_RXD_STAT_ACK	kern/e1000.h	300;"	d
E1000_RXD_STAT_DD	kern/e1000.h	290;"	d
E1000_RXD_STAT_EOP	kern/e1000.h	291;"	d
E1000_RXD_STAT_IPCS	kern/e1000.h	296;"	d
E1000_RXD_STAT_IPIDV	kern/e1000.h	298;"	d
E1000_RXD_STAT_IXSM	kern/e1000.h	292;"	d
E1000_RXD_STAT_PIF	kern/e1000.h	297;"	d
E1000_RXD_STAT_TCPCS	kern/e1000.h	295;"	d
E1000_RXD_STAT_UDPCS	kern/e1000.h	294;"	d
E1000_RXD_STAT_UDPV	kern/e1000.h	299;"	d
E1000_RXD_STAT_VP	kern/e1000.h	293;"	d
E1000_STATUS	kern/e1000.h	38;"	d
E1000_TCTL	kern/e1000.h	41;"	d
E1000_TCTL_BCE	kern/e1000.h	206;"	d
E1000_TCTL_COLD	kern/e1000.h	209;"	d
E1000_TCTL_COLD_SHIFT	kern/e1000.h	221;"	d
E1000_TCTL_CT	kern/e1000.h	208;"	d
E1000_TCTL_CT_SHIFT	kern/e1000.h	220;"	d
E1000_TCTL_EN	kern/e1000.h	205;"	d
E1000_TCTL_MULR	kern/e1000.h	214;"	d
E1000_TCTL_NRTU	kern/e1000.h	213;"	d
E1000_TCTL_PBE	kern/e1000.h	211;"	d
E1000_TCTL_PSP	kern/e1000.h	207;"	d
E1000_TCTL_RST	kern/e1000.h	204;"	d
E1000_TCTL_RTLC	kern/e1000.h	212;"	d
E1000_TCTL_SWXOFF	kern/e1000.h	210;"	d
E1000_TDBAH	kern/e1000.h	49;"	d
E1000_TDBAL	kern/e1000.h	48;"	d
E1000_TDH	kern/e1000.h	51;"	d
E1000_TDLEN	kern/e1000.h	50;"	d
E1000_TDT	kern/e1000.h	52;"	d
E1000_TIDV	kern/e1000.h	53;"	d
E1000_TIPG	kern/e1000.h	42;"	d
E1000_TIPG_IPGR1	kern/e1000.h	155;"	d
E1000_TIPG_IPGR1_SHIFT	kern/e1000.h	150;"	d
E1000_TIPG_IPGR2	kern/e1000.h	156;"	d
E1000_TIPG_IPGR2_SHIFT	kern/e1000.h	151;"	d
E1000_TIPG_IPGT	kern/e1000.h	154;"	d
E1000_TIPG_IPGT_SHIFT	kern/e1000.h	149;"	d
E1000_TIPG_RESV	kern/e1000.h	157;"	d
E1000_TIPG_RESV_SHIFT	kern/e1000.h	152;"	d
E1000_TXD_CMD_DEXT	kern/e1000.h	267;"	d
E1000_TXD_CMD_EOP	kern/e1000.h	262;"	d
E1000_TXD_CMD_IC	kern/e1000.h	264;"	d
E1000_TXD_CMD_IDE	kern/e1000.h	269;"	d
E1000_TXD_CMD_IFCS	kern/e1000.h	263;"	d
E1000_TXD_CMD_IP	kern/e1000.h	275;"	d
E1000_TXD_CMD_RPS	kern/e1000.h	266;"	d
E1000_TXD_CMD_RS	kern/e1000.h	265;"	d
E1000_TXD_CMD_TCP	kern/e1000.h	274;"	d
E1000_TXD_CMD_TSE	kern/e1000.h	276;"	d
E1000_TXD_CMD_VLE	kern/e1000.h	268;"	d
E1000_TXD_DTYP_C	kern/e1000.h	259;"	d
E1000_TXD_DTYP_D	kern/e1000.h	258;"	d
E1000_TXD_POPTS_IXSM	kern/e1000.h	260;"	d
E1000_TXD_POPTS_TXSM	kern/e1000.h	261;"	d
E1000_TXD_STAT_DD	kern/e1000.h	270;"	d
E1000_TXD_STAT_EC	kern/e1000.h	271;"	d
E1000_TXD_STAT_LC	kern/e1000.h	272;"	d
E1000_TXD_STAT_TC	kern/e1000.h	277;"	d
E1000_TXD_STAT_TU	kern/e1000.h	273;"	d
E1000_VDR_ID	kern/e1000.h	19;"	d
E2BIG	net/lwip/include/lwip/arch.h	75;"	d
EACCES	net/lwip/include/lwip/arch.h	81;"	d
EADDRINUSE	net/lwip/include/lwip/arch.h	168;"	d
EADDRNOTAVAIL	net/lwip/include/lwip/arch.h	169;"	d
EADV	net/lwip/include/lwip/arch.h	138;"	d
EAFNOSUPPORT	net/lwip/include/lwip/arch.h	167;"	d
EAGAIN	net/lwip/include/lwip/arch.h	79;"	d
EAI_FAIL	net/lwip/include/lwip/netdb.h	53;"	d
EAI_MEMORY	net/lwip/include/lwip/netdb.h	54;"	d
EAI_NONAME	net/lwip/include/lwip/netdb.h	51;"	d
EAI_SERVICE	net/lwip/include/lwip/netdb.h	52;"	d
EALREADY	net/lwip/include/lwip/arch.h	184;"	d
EBADE	net/lwip/include/lwip/arch.h	120;"	d
EBADF	net/lwip/include/lwip/arch.h	77;"	d
EBADFD	net/lwip/include/lwip/arch.h	147;"	d
EBADMSG	net/lwip/include/lwip/arch.h	144;"	d
EBADR	net/lwip/include/lwip/arch.h	121;"	d
EBADRQC	net/lwip/include/lwip/arch.h	124;"	d
EBADSLT	net/lwip/include/lwip/arch.h	125;"	d
EBFONT	net/lwip/include/lwip/arch.h	129;"	d
EBUSY	net/lwip/include/lwip/arch.h	84;"	d
ECHILD	net/lwip/include/lwip/arch.h	78;"	d
ECHOREP	net/lwip/netif/ppp/lcp.h	80;"	d
ECHOREQ	net/lwip/netif/ppp/lcp.h	79;"	d
ECHRNG	net/lwip/include/lwip/arch.h	112;"	d
ECOMM	net/lwip/include/lwip/arch.h	140;"	d
ECONNABORTED	net/lwip/include/lwip/arch.h	173;"	d
ECONNREFUSED	net/lwip/include/lwip/arch.h	181;"	d
ECONNRESET	net/lwip/include/lwip/arch.h	174;"	d
EDEADLK	net/lwip/include/lwip/arch.h	103;"	d
EDEADLOCK	net/lwip/include/lwip/arch.h	127;"	d
EDESTADDRREQ	net/lwip/include/lwip/arch.h	159;"	d
EDOM	net/lwip/include/lwip/arch.h	101;"	d
EDOTDOT	net/lwip/include/lwip/arch.h	143;"	d
EDQUOT	net/lwip/include/lwip/arch.h	192;"	d
EEXIST	net/lwip/include/lwip/arch.h	85;"	d
EFAULT	net/lwip/include/lwip/arch.h	82;"	d
EFBIG	net/lwip/include/lwip/arch.h	95;"	d
EHOSTDOWN	net/lwip/include/lwip/arch.h	182;"	d
EHOSTUNREACH	net/lwip/include/lwip/arch.h	183;"	d
EIDRM	net/lwip/include/lwip/arch.h	111;"	d
EILSEQ	net/lwip/include/lwip/arch.h	154;"	d
EINPROGRESS	net/lwip/include/lwip/arch.h	185;"	d
EINTR	net/lwip/include/lwip/arch.h	72;"	d
EINVAL	net/lwip/include/lwip/arch.h	90;"	d
EIO	net/lwip/include/lwip/arch.h	73;"	d
EISCONN	net/lwip/include/lwip/arch.h	176;"	d
EISDIR	net/lwip/include/lwip/arch.h	89;"	d
EISNAM	net/lwip/include/lwip/arch.h	190;"	d
EL2HLT	net/lwip/include/lwip/arch.h	119;"	d
EL2NSYNC	net/lwip/include/lwip/arch.h	113;"	d
EL3HLT	net/lwip/include/lwip/arch.h	114;"	d
EL3RST	net/lwip/include/lwip/arch.h	115;"	d
ELFHDR	boot/main.c	33;"	d	file:
ELF_MAGIC	inc/elf.h	4;"	d
ELF_PROG_FLAG_EXEC	inc/elf.h	52;"	d
ELF_PROG_FLAG_READ	inc/elf.h	54;"	d
ELF_PROG_FLAG_WRITE	inc/elf.h	53;"	d
ELF_PROG_LOAD	inc/elf.h	49;"	d
ELF_SHN_UNDEF	inc/elf.h	63;"	d
ELF_SHT_NULL	inc/elf.h	57;"	d
ELF_SHT_PROGBITS	inc/elf.h	58;"	d
ELF_SHT_STRTAB	inc/elf.h	60;"	d
ELF_SHT_SYMTAB	inc/elf.h	59;"	d
ELIBACC	net/lwip/include/lwip/arch.h	149;"	d
ELIBBAD	net/lwip/include/lwip/arch.h	150;"	d
ELIBEXEC	net/lwip/include/lwip/arch.h	153;"	d
ELIBMAX	net/lwip/include/lwip/arch.h	152;"	d
ELIBSCN	net/lwip/include/lwip/arch.h	151;"	d
ELNRNG	net/lwip/include/lwip/arch.h	116;"	d
ELOOP	net/lwip/include/lwip/arch.h	108;"	d
EMEDIUMTYPE	net/lwip/include/lwip/arch.h	195;"	d
EMFILE	net/lwip/include/lwip/arch.h	92;"	d
EMLINK	net/lwip/include/lwip/arch.h	99;"	d
EMSGSIZE	net/lwip/include/lwip/arch.h	160;"	d
EMULTIHOP	net/lwip/include/lwip/arch.h	142;"	d
ENABLE	kern/lapic.c	19;"	d	file:
ENABLE_LOOPBACK	net/lwip/include/lwip/netif.h	37;"	d
ENAMETOOLONG	net/lwip/include/lwip/arch.h	104;"	d
ENAVAIL	net/lwip/include/lwip/arch.h	189;"	d
ENCODE	net/lwip/netif/ppp/vj.c	86;"	d	file:
ENCODEZ	net/lwip/netif/ppp/vj.c	96;"	d	file:
ENETDOWN	net/lwip/include/lwip/arch.h	170;"	d
ENETRESET	net/lwip/include/lwip/arch.h	172;"	d
ENETUNREACH	net/lwip/include/lwip/arch.h	171;"	d
ENFILE	net/lwip/include/lwip/arch.h	91;"	d
ENOANO	net/lwip/include/lwip/arch.h	123;"	d
ENOBUFS	net/lwip/include/lwip/arch.h	175;"	d
ENOCSI	net/lwip/include/lwip/arch.h	118;"	d
ENODATA	net/lwip/include/lwip/arch.h	131;"	d
ENODEV	net/lwip/include/lwip/arch.h	87;"	d
ENOENT	net/lwip/include/lwip/arch.h	70;"	d
ENOEXEC	net/lwip/include/lwip/arch.h	76;"	d
ENOLCK	net/lwip/include/lwip/arch.h	105;"	d
ENOLINK	net/lwip/include/lwip/arch.h	137;"	d
ENOMEDIUM	net/lwip/include/lwip/arch.h	194;"	d
ENOMEM	net/lwip/include/lwip/arch.h	80;"	d
ENOMSG	net/lwip/include/lwip/arch.h	110;"	d
ENONET	net/lwip/include/lwip/arch.h	134;"	d
ENOPKG	net/lwip/include/lwip/arch.h	135;"	d
ENOPROTOOPT	net/lwip/include/lwip/arch.h	162;"	d
ENOSPC	net/lwip/include/lwip/arch.h	96;"	d
ENOSR	net/lwip/include/lwip/arch.h	133;"	d
ENOSTR	net/lwip/include/lwip/arch.h	130;"	d
ENOSYS	net/lwip/include/lwip/arch.h	106;"	d
ENOTBLK	net/lwip/include/lwip/arch.h	83;"	d
ENOTCONN	net/lwip/include/lwip/arch.h	177;"	d
ENOTDIR	net/lwip/include/lwip/arch.h	88;"	d
ENOTEMPTY	net/lwip/include/lwip/arch.h	107;"	d
ENOTNAM	net/lwip/include/lwip/arch.h	188;"	d
ENOTSOCK	net/lwip/include/lwip/arch.h	158;"	d
ENOTTY	net/lwip/include/lwip/arch.h	93;"	d
ENOTUNIQ	net/lwip/include/lwip/arch.h	146;"	d
ENSRBADFAMILY	net/lwip/include/lwip/arch.h	207;"	d
ENSRBADNAME	net/lwip/include/lwip/arch.h	206;"	d
ENSRBADQUERY	net/lwip/include/lwip/arch.h	205;"	d
ENSRBADRESP	net/lwip/include/lwip/arch.h	208;"	d
ENSRCNAMELOOP	net/lwip/include/lwip/arch.h	216;"	d
ENSRCONNREFUSED	net/lwip/include/lwip/arch.h	209;"	d
ENSRDESTRUCTION	net/lwip/include/lwip/arch.h	214;"	d
ENSRFILE	net/lwip/include/lwip/arch.h	212;"	d
ENSRFORMERR	net/lwip/include/lwip/arch.h	200;"	d
ENSRNODATA	net/lwip/include/lwip/arch.h	199;"	d
ENSRNOMEM	net/lwip/include/lwip/arch.h	213;"	d
ENSRNOTFOUND	net/lwip/include/lwip/arch.h	202;"	d
ENSRNOTIMP	net/lwip/include/lwip/arch.h	203;"	d
ENSROF	net/lwip/include/lwip/arch.h	211;"	d
ENSROK	net/lwip/include/lwip/arch.h	198;"	d
ENSRQUERYDOMAINTOOLONG	net/lwip/include/lwip/arch.h	215;"	d
ENSRREFUSED	net/lwip/include/lwip/arch.h	204;"	d
ENSRSERVFAIL	net/lwip/include/lwip/arch.h	201;"	d
ENSRTIMEOUT	net/lwip/include/lwip/arch.h	210;"	d
ENTRY	net/lwip/jos/arch/longjmp.S	/^#define ENTRY(x) \\$/;"	d
ENTRY	obj/net/ns.asm	/^#define ENTRY(x) \\$/;"	d
ENVGENSHIFT	kern/env.c	22;"	d	file:
ENVX	inc/env.h	30;"	d
ENV_CREATE	kern/env.h	29;"	d
ENV_DYING	inc/env.h	/^	ENV_DYING,$/;"	e	enum:__anon43
ENV_FREE	inc/env.h	/^	ENV_FREE = 0,$/;"	e	enum:__anon43
ENV_NOT_RUNNABLE	inc/env.h	/^	ENV_NOT_RUNNABLE$/;"	e	enum:__anon43
ENV_PASTE3	kern/env.h	27;"	d
ENV_RUNNABLE	inc/env.h	/^	ENV_RUNNABLE,$/;"	e	enum:__anon43
ENV_RUNNING	inc/env.h	/^	ENV_RUNNING,$/;"	e	enum:__anon43
ENV_TYPE_FS	inc/env.h	/^	ENV_TYPE_FS,		\/\/ File system server$/;"	e	enum:EnvType
ENV_TYPE_NS	inc/env.h	/^	ENV_TYPE_NS,		\/\/ Network server$/;"	e	enum:EnvType
ENV_TYPE_USER	inc/env.h	/^	ENV_TYPE_USER = 0,$/;"	e	enum:EnvType
ENXIO	net/lwip/include/lwip/arch.h	74;"	d
EOI	kern/lapic.c	17;"	d	file:
EOPNOTSUPP	net/lwip/include/lwip/arch.h	165;"	d
EOVERFLOW	net/lwip/include/lwip/arch.h	145;"	d
EPERM	net/lwip/include/lwip/arch.h	69;"	d
EPFNOSUPPORT	net/lwip/include/lwip/arch.h	166;"	d
EPIPE	net/lwip/include/lwip/arch.h	100;"	d
EPROTO	net/lwip/include/lwip/arch.h	141;"	d
EPROTONOSUPPORT	net/lwip/include/lwip/arch.h	163;"	d
EPROTOTYPE	net/lwip/include/lwip/arch.h	161;"	d
ERANGE	net/lwip/include/lwip/arch.h	102;"	d
EREMCHG	net/lwip/include/lwip/arch.h	148;"	d
EREMOTE	net/lwip/include/lwip/arch.h	136;"	d
EREMOTEIO	net/lwip/include/lwip/arch.h	191;"	d
ERESTART	net/lwip/include/lwip/arch.h	155;"	d
EROFS	net/lwip/include/lwip/arch.h	98;"	d
ERRNO	net/lwip/jos/lwipopts.h	61;"	d
ERROR	kern/lapic.c	39;"	d	file:
ERR_ABRT	net/lwip/include/lwip/err.h	60;"	d
ERR_ARG	net/lwip/include/lwip/err.h	67;"	d
ERR_BUF	net/lwip/include/lwip/err.h	54;"	d
ERR_CLSD	net/lwip/include/lwip/err.h	62;"	d
ERR_CONN	net/lwip/include/lwip/err.h	63;"	d
ERR_IF	net/lwip/include/lwip/err.h	71;"	d
ERR_INPROGRESS	net/lwip/include/lwip/err.h	74;"	d
ERR_ISCONN	net/lwip/include/lwip/err.h	72;"	d
ERR_IS_FATAL	net/lwip/include/lwip/err.h	58;"	d
ERR_MEM	net/lwip/include/lwip/err.h	53;"	d
ERR_OK	net/lwip/include/lwip/err.h	52;"	d
ERR_RST	net/lwip/include/lwip/err.h	61;"	d
ERR_RTE	net/lwip/include/lwip/err.h	56;"	d
ERR_TIMEOUT	net/lwip/include/lwip/err.h	55;"	d
ERR_TO_ERRNO_TABLE_SIZE	net/lwip/api/sockets.c	145;"	d	file:
ERR_USE	net/lwip/include/lwip/err.h	69;"	d
ERR_VAL	net/lwip/include/lwip/err.h	65;"	d
ESCAPE_P	net/lwip/netif/ppp/ppp.c	135;"	d	file:
ESHUTDOWN	net/lwip/include/lwip/arch.h	178;"	d
ESOCKTNOSUPPORT	net/lwip/include/lwip/arch.h	164;"	d
ESPIPE	net/lwip/include/lwip/arch.h	97;"	d
ESR	kern/lapic.c	20;"	d	file:
ESRCH	net/lwip/include/lwip/arch.h	71;"	d
ESRMNT	net/lwip/include/lwip/arch.h	139;"	d
ESTABLISHED	net/lwip/include/lwip/tcp.h	/^  ESTABLISHED = 4,$/;"	e	enum:tcp_state
ESTALE	net/lwip/include/lwip/arch.h	186;"	d
ESTRPIPE	net/lwip/include/lwip/arch.h	156;"	d
ETHARP_DEBUG	net/lwip/include/lwip/opt.h	1476;"	d
ETHARP_FIND_ONLY	net/lwip/netif/etharp.c	118;"	d	file:
ETHARP_HWADDR_LEN	net/lwip/include/netif/etharp.h	56;"	d
ETHARP_STATE_EMPTY	net/lwip/netif/etharp.c	/^  ETHARP_STATE_EMPTY = 0,$/;"	e	enum:etharp_state	file:
ETHARP_STATE_PENDING	net/lwip/netif/etharp.c	/^  ETHARP_STATE_PENDING,$/;"	e	enum:etharp_state	file:
ETHARP_STATE_STABLE	net/lwip/netif/etharp.c	/^  ETHARP_STATE_STABLE$/;"	e	enum:etharp_state	file:
ETHARP_STATS	net/lwip/include/lwip/opt.h	1157;"	d
ETHARP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	202;"	d
ETHARP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	205;"	d
ETHARP_STATS_INC	net/lwip/include/lwip/stats.h	201;"	d
ETHARP_STATS_INC	net/lwip/include/lwip/stats.h	204;"	d
ETHARP_TRUST_IP_MAC	net/lwip/include/lwip/opt.h	348;"	d
ETHARP_TRY_HARD	net/lwip/netif/etharp.c	117;"	d	file:
ETHERMTU	net/lwip/include/netif/ppp_oe.h	135;"	d
ETHTYPE_ARP	net/lwip/include/netif/etharp.h	125;"	d
ETHTYPE_IP	net/lwip/include/netif/etharp.h	126;"	d
ETHTYPE_PPPOE	net/lwip/include/netif/etharp.h	128;"	d
ETHTYPE_PPPOEDISC	net/lwip/include/netif/etharp.h	127;"	d
ETH_PAD_SIZE	net/lwip/include/netif/etharp.h	52;"	d
ETIME	net/lwip/include/lwip/arch.h	132;"	d
ETIMEDOUT	net/lwip/include/lwip/arch.h	180;"	d
ETOOMANYREFS	net/lwip/include/lwip/arch.h	179;"	d
ETXTBSY	net/lwip/include/lwip/arch.h	94;"	d
EUCLEAN	net/lwip/include/lwip/arch.h	187;"	d
EUNATCH	net/lwip/include/lwip/arch.h	117;"	d
EUSERS	net/lwip/include/lwip/arch.h	157;"	d
EWOULDBLOCK	net/lwip/include/lwip/arch.h	109;"	d
EXDEV	net/lwip/include/lwip/arch.h	86;"	d
EXFULL	net/lwip/include/lwip/arch.h	122;"	d
EXTPHYSMEM	inc/memlayout.h	93;"	d
E_BAD_ENV	inc/error.h	/^	E_BAD_ENV	,	\/\/ Environment doesn't exist or otherwise$/;"	e	enum:__anon44
E_BAD_PATH	inc/error.h	/^	E_BAD_PATH	,	\/\/ Bad path$/;"	e	enum:__anon44
E_BAD_REQ	user/httpd.c	9;"	d	file:
E_EOF	inc/error.h	/^	E_EOF		,	\/\/ Unexpected end of file$/;"	e	enum:__anon44
E_FAULT	inc/error.h	/^	E_FAULT		,	\/\/ Memory fault$/;"	e	enum:__anon44
E_FILE_EXISTS	inc/error.h	/^	E_FILE_EXISTS	,	\/\/ File already exists$/;"	e	enum:__anon44
E_INVAL	inc/error.h	/^	E_INVAL		,	\/\/ Invalid parameter$/;"	e	enum:__anon44
E_IPC_NOT_RECV	inc/error.h	/^	E_IPC_NOT_RECV	,	\/\/ Attempt to send to env that is not recving$/;"	e	enum:__anon44
E_MAX_OPEN	inc/error.h	/^	E_MAX_OPEN	,	\/\/ Too many files are open$/;"	e	enum:__anon44
E_NOT_EXEC	inc/error.h	/^	E_NOT_EXEC	,	\/\/ File not a valid executable$/;"	e	enum:__anon44
E_NOT_FOUND	inc/error.h	/^	E_NOT_FOUND	, 	\/\/ File or block not found$/;"	e	enum:__anon44
E_NOT_SUPP	inc/error.h	/^	E_NOT_SUPP	,	\/\/ Operation not supported$/;"	e	enum:__anon44
E_NO_DISK	inc/error.h	/^	E_NO_DISK	,	\/\/ No free space left on disk$/;"	e	enum:__anon44
E_NO_FREE_ENV	inc/error.h	/^	E_NO_FREE_ENV	,	\/\/ Attempt to create a new environment beyond$/;"	e	enum:__anon44
E_NO_MEM	inc/error.h	/^	E_NO_MEM	,	\/\/ Request failed due to memory shortage$/;"	e	enum:__anon44
E_RX_BAD_LEN	inc/error.h	/^	E_RX_BAD_LEN,		\/\/receive packet's length is out of range$/;"	e	enum:__anon44
E_RX_QUEUE_FULL	inc/error.h	/^	E_RX_QUEUE_FULL,	\/\/receive queue is full$/;"	e	enum:__anon44
E_TX_BAD_LEN	inc/error.h	/^	E_TX_BAD_LEN,		\/\/transmit packet's length is out of range$/;"	e	enum:__anon44
E_TX_QUEUE_FULL	inc/error.h	/^	E_TX_QUEUE_FULL,	\/\/transmit queue is full$/;"	e	enum:__anon44
E_UNSPECIFIED	inc/error.h	/^	E_UNSPECIFIED	= 1,	\/\/ Unspecified or unknown problem$/;"	e	enum:__anon44
Eipdebuginfo	kern/kdebug.h	/^struct Eipdebuginfo {$/;"	s
Elf	inc/elf.h	/^struct Elf {$/;"	s
Env	inc/env.h	/^struct Env {$/;"	s
EnvType	inc/env.h	/^enum EnvType {$/;"	g
Expand	net/lwip/netif/ppp/chpms.c	/^Expand(u_char *in, u_char *out)$/;"	f	file:
F	net/lwip/netif/ppp/md5.c	71;"	d	file:
FDTABLE	lib/fd.c	8;"	d	file:
FD_CLR	net/lwip/include/lwip/sockets.h	277;"	d
FD_ISSET	net/lwip/include/lwip/sockets.h	278;"	d
FD_SET	net/lwip/include/lwip/sockets.h	276;"	d
FD_SETSIZE	net/lwip/include/lwip/sockets.h	273;"	d
FD_SETSIZE	net/lwip/include/lwip/sockets.h	275;"	d
FD_ZERO	net/lwip/include/lwip/sockets.h	279;"	d
FEC_PR	inc/mmu.h	123;"	d
FEC_U	inc/mmu.h	125;"	d
FEC_WR	inc/mmu.h	124;"	d
FF	net/lwip/netif/ppp/md5.c	81;"	d	file:
FILEDATA	lib/fd.c	11;"	d	file:
FILEVA	fs/serv.c	41;"	d	file:
FIN_WAIT_1	net/lwip/include/lwip/tcp.h	/^  FIN_WAIT_1  = 5,$/;"	e	enum:tcp_state
FIN_WAIT_2	net/lwip/include/lwip/tcp.h	/^  FIN_WAIT_2  = 6,$/;"	e	enum:tcp_state
FIONBIO	net/lwip/include/lwip/sockets.h	254;"	d
FIONREAD	net/lwip/include/lwip/sockets.h	251;"	d
FIXED	kern/lapic.c	31;"	d	file:
FIXSEG	kern/e1000.h	230;"	d
FL_AC	inc/mmu.h	117;"	d
FL_AF	inc/mmu.h	102;"	d
FL_CF	inc/mmu.h	100;"	d
FL_DF	inc/mmu.h	107;"	d
FL_ID	inc/mmu.h	120;"	d
FL_IF	inc/mmu.h	106;"	d
FL_IOPL_0	inc/mmu.h	110;"	d
FL_IOPL_1	inc/mmu.h	111;"	d
FL_IOPL_2	inc/mmu.h	112;"	d
FL_IOPL_3	inc/mmu.h	113;"	d
FL_IOPL_MASK	inc/mmu.h	109;"	d
FL_NT	inc/mmu.h	114;"	d
FL_OF	inc/mmu.h	108;"	d
FL_PF	inc/mmu.h	101;"	d
FL_RF	inc/mmu.h	115;"	d
FL_SF	inc/mmu.h	104;"	d
FL_TF	inc/mmu.h	105;"	d
FL_VIF	inc/mmu.h	118;"	d
FL_VIP	inc/mmu.h	119;"	d
FL_VM	inc/mmu.h	116;"	d
FL_ZF	inc/mmu.h	103;"	d
FOLD_U32T	net/lwip/core/ipv4/inet_chksum.c	69;"	d	file:
FSMDEBUG	net/lwip/netif/ppp/pppdebug.h	70;"	d
FSMDEBUG	net/lwip/netif/ppp/pppdebug.h	80;"	d
FSM_DEFMAXCONFREQS	net/lwip/include/lwip/opt.h	1338;"	d
FSM_DEFMAXNAKLOOPS	net/lwip/include/lwip/opt.h	1342;"	d
FSM_DEFMAXTERMREQS	net/lwip/include/lwip/opt.h	1334;"	d
FSM_DEFTIMEOUT	net/lwip/include/lwip/opt.h	1330;"	d
FSM_H	net/lwip/netif/ppp/fsm.h	55;"	d
FSREQ_FLUSH	inc/fs.h	/^	FSREQ_FLUSH,$/;"	e	enum:__anon48
FSREQ_OPEN	inc/fs.h	/^	FSREQ_OPEN = 1,$/;"	e	enum:__anon48
FSREQ_READ	inc/fs.h	/^	FSREQ_READ,$/;"	e	enum:__anon48
FSREQ_REMOVE	inc/fs.h	/^	FSREQ_REMOVE,$/;"	e	enum:__anon48
FSREQ_SET_SIZE	inc/fs.h	/^	FSREQ_SET_SIZE,$/;"	e	enum:__anon48
FSREQ_STAT	inc/fs.h	/^	FSREQ_STAT,$/;"	e	enum:__anon48
FSREQ_SYNC	inc/fs.h	/^	FSREQ_SYNC$/;"	e	enum:__anon48
FSREQ_WRITE	inc/fs.h	/^	FSREQ_WRITE,$/;"	e	enum:__anon48
FS_MAGIC	inc/fs.h	54;"	d
FTYPE_DIR	inc/fs.h	49;"	d
FTYPE_REG	inc/fs.h	48;"	d
FVA	obj/user/testfile.asm	/^#define FVA ((struct Fd*)0xCCCCC000)$/;"	d
FVA	user/testfile.c	5;"	d	file:
Fd	inc/fd.h	/^struct Fd {$/;"	s
FdFile	inc/fd.h	/^struct FdFile {$/;"	s
FdSock	inc/fd.h	/^struct FdSock {$/;"	s
File	inc/fs.h	/^struct File {$/;"	s
Fsipc	inc/fs.h	/^union Fsipc {$/;"	u
Fsreq_flush	inc/fs.h	/^	struct Fsreq_flush {$/;"	s	union:Fsipc
Fsreq_open	inc/fs.h	/^	struct Fsreq_open {$/;"	s	union:Fsipc
Fsreq_read	inc/fs.h	/^	struct Fsreq_read {$/;"	s	union:Fsipc
Fsreq_remove	inc/fs.h	/^	struct Fsreq_remove {$/;"	s	union:Fsipc
Fsreq_set_size	inc/fs.h	/^	struct Fsreq_set_size {$/;"	s	union:Fsipc
Fsreq_stat	inc/fs.h	/^	struct Fsreq_stat {$/;"	s	union:Fsipc
Fsreq_write	inc/fs.h	/^	struct Fsreq_write {$/;"	s	union:Fsipc
Fsret_read	inc/fs.h	/^	struct Fsret_read {$/;"	s	union:Fsipc
Fsret_stat	inc/fs.h	/^	struct Fsret_stat {$/;"	s	union:Fsipc
G	net/lwip/netif/ppp/md5.c	72;"	d	file:
GCCPREFIX	GNUmakefile	/^GCCPREFIX := $(shell if i386-jos-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >\/dev\/null 2>&1; \\$/;"	m
GCC_LIB	GNUmakefile	/^GCC_LIB := $(shell $(CC) $(CFLAGS) -print-libgcc-file-name)$/;"	m
GDBClient	gradelib.py	/^class GDBClient(object):$/;"	c
GDBPORT	GNUmakefile	/^GDBPORT	:= $(shell expr `id -u` % 5000 + 25000)$/;"	m
GD_KD	inc/memlayout.h	16;"	d
GD_KT	inc/memlayout.h	15;"	d
GD_TSS0	inc/memlayout.h	19;"	d
GD_UD	inc/memlayout.h	18;"	d
GD_UT	inc/memlayout.h	17;"	d
GETCHAR	net/lwip/netif/ppp/ppp.h	176;"	d
GETLONG	net/lwip/netif/ppp/ppp.h	193;"	d
GETSHORT	net/lwip/netif/ppp/ppp.h	184;"	d
GG	net/lwip/netif/ppp/md5.c	86;"	d	file:
Gatedesc	inc/mmu.h	/^struct Gatedesc {$/;"	s
Get7Bits	net/lwip/netif/ppp/chpms.c	/^Get7Bits( u_char *input, int startBit)$/;"	f	file:
GetMask	net/lwip/netif/ppp/ppp.c	/^GetMask(u32_t addr)$/;"	f
H	net/lwip/netif/ppp/md5.c	73;"	d	file:
HEADERLEN	net/lwip/netif/ppp/fsm.h	63;"	d
HH	net/lwip/netif/ppp/md5.c	91;"	d	file:
HOSTENT_STORAGE	net/lwip/api/netdb.c	65;"	d	file:
HOSTENT_STORAGE	net/lwip/api/netdb.c	67;"	d	file:
HOST_NOT_FOUND	net/lwip/include/lwip/netdb.h	56;"	d
HTTP_VERSION	user/httpd.c	7;"	d	file:
HWTYPE_ETHERNET	net/lwip/netif/etharp.c	79;"	d	file:
I	net/lwip/netif/ppp/md5.c	74;"	d	file:
ICMP6_DUR	net/lwip/include/ipv6/lwip/icmp.h	46;"	d
ICMP6_ECHO	net/lwip/include/ipv6/lwip/icmp.h	48;"	d
ICMP6_ER	net/lwip/include/ipv6/lwip/icmp.h	49;"	d
ICMP6_TE	net/lwip/include/ipv6/lwip/icmp.h	47;"	d
ICMPH_CODE	net/lwip/include/ipv4/lwip/icmp.h	110;"	d
ICMPH_CODE_SET	net/lwip/include/ipv4/lwip/icmp.h	113;"	d
ICMPH_TYPE	net/lwip/include/ipv4/lwip/icmp.h	109;"	d
ICMPH_TYPE_SET	net/lwip/include/ipv4/lwip/icmp.h	112;"	d
ICMP_DEBUG	net/lwip/include/lwip/opt.h	1518;"	d
ICMP_DEST_UNREACH_DATASIZE	net/lwip/core/ipv4/icmp.c	57;"	d	file:
ICMP_DUR	net/lwip/include/ipv4/lwip/icmp.h	48;"	d
ICMP_DUR_FRAG	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_FRAG = 4,   \/* fragmentation needed and DF set *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_FRAG	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_FRAG = 4,   \/* fragmentation needed and DF set *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_HOST	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_HOST = 1,   \/* host unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_HOST	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_HOST = 1,   \/* host unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_NET	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_NET = 0,    \/* net unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_NET	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_NET = 0,    \/* net unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_PORT	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_PORT = 3,   \/* port unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_PORT	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_PORT = 3,   \/* port unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_PROTO	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_PROTO = 2,  \/* protocol unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_PROTO	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_PROTO = 2,  \/* protocol unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_SR	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_SR = 5      \/* source route failed *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_SR	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_SR = 5      \/* source route failed *\/$/;"	e	enum:icmp_dur_type
ICMP_ECHO	net/lwip/include/ipv4/lwip/icmp.h	51;"	d
ICMP_ER	net/lwip/include/ipv4/lwip/icmp.h	47;"	d
ICMP_IR	net/lwip/include/ipv4/lwip/icmp.h	57;"	d
ICMP_IRQ	net/lwip/include/ipv4/lwip/icmp.h	56;"	d
ICMP_PP	net/lwip/include/ipv4/lwip/icmp.h	53;"	d
ICMP_RD	net/lwip/include/ipv4/lwip/icmp.h	50;"	d
ICMP_SQ	net/lwip/include/ipv4/lwip/icmp.h	49;"	d
ICMP_STATS	net/lwip/include/lwip/opt.h	1179;"	d
ICMP_STATS	net/lwip/include/lwip/opt.h	1231;"	d
ICMP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	170;"	d
ICMP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	173;"	d
ICMP_STATS_INC	net/lwip/include/lwip/stats.h	169;"	d
ICMP_STATS_INC	net/lwip/include/lwip/stats.h	172;"	d
ICMP_TE	net/lwip/include/ipv4/lwip/icmp.h	52;"	d
ICMP_TE_FRAG	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_TE_FRAG = 1     \/* fragment reassembly time exceeded *\/$/;"	e	enum:icmp_te_type
ICMP_TE_FRAG	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_TE_FRAG = 1     \/* fragment reassembly time exceeded *\/$/;"	e	enum:icmp_te_type
ICMP_TE_TTL	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_TE_TTL = 0,     \/* time to live exceeded in transit *\/$/;"	e	enum:icmp_te_type
ICMP_TE_TTL	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_TE_TTL = 0,     \/* time to live exceeded in transit *\/$/;"	e	enum:icmp_te_type
ICMP_TS	net/lwip/include/ipv4/lwip/icmp.h	54;"	d
ICMP_TSR	net/lwip/include/ipv4/lwip/icmp.h	55;"	d
ICMP_TTL	net/lwip/include/lwip/opt.h	452;"	d
ICRHI	kern/lapic.c	32;"	d	file:
ICRLO	kern/lapic.c	21;"	d	file:
ID	kern/lapic.c	14;"	d	file:
IDE_BSY	fs/ide.c	10;"	d	file:
IDE_DF	fs/ide.c	12;"	d	file:
IDE_DRDY	fs/ide.c	11;"	d	file:
IDE_ERR	fs/ide.c	13;"	d	file:
IFF_PASSIVE	net/lwip/netif/ppp/ppp_oe.c	188;"	d	file:
IGMP_ADD_MAC_FILTER	net/lwip/include/ipv4/lwip/igmp.h	73;"	d
IGMP_DEBUG	net/lwip/include/lwip/opt.h	1525;"	d
IGMP_DEL_MAC_FILTER	net/lwip/include/ipv4/lwip/igmp.h	72;"	d
IGMP_GROUP_DELAYING_MEMBER	net/lwip/include/ipv4/lwip/igmp.h	77;"	d
IGMP_GROUP_IDLE_MEMBER	net/lwip/include/ipv4/lwip/igmp.h	78;"	d
IGMP_GROUP_NON_MEMBER	net/lwip/include/ipv4/lwip/igmp.h	76;"	d
IGMP_JOIN_DELAYING_MEMBER_TMR	net/lwip/include/ipv4/lwip/igmp.h	69;"	d
IGMP_LEAVE_GROUP	net/lwip/include/ipv4/lwip/igmp.h	64;"	d
IGMP_MEMB_QUERY	net/lwip/include/ipv4/lwip/igmp.h	61;"	d
IGMP_MINLEN	net/lwip/include/ipv4/lwip/igmp.h	54;"	d
IGMP_STATS	net/lwip/include/lwip/opt.h	1186;"	d
IGMP_STATS	net/lwip/include/lwip/opt.h	1232;"	d
IGMP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	178;"	d
IGMP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	181;"	d
IGMP_STATS_INC	net/lwip/include/lwip/stats.h	177;"	d
IGMP_STATS_INC	net/lwip/include/lwip/stats.h	180;"	d
IGMP_TMR_INTERVAL	net/lwip/include/ipv4/lwip/igmp.h	67;"	d
IGMP_TTL	net/lwip/include/ipv4/lwip/igmp.h	53;"	d
IGMP_V1_DELAYING_MEMBER_TMR	net/lwip/include/ipv4/lwip/igmp.h	68;"	d
IGMP_V1_MEMB_REPORT	net/lwip/include/ipv4/lwip/igmp.h	62;"	d
IGMP_V2_MEMB_REPORT	net/lwip/include/ipv4/lwip/igmp.h	63;"	d
II	net/lwip/netif/ppp/md5.c	96;"	d	file:
IMAGES	GNUmakefile	/^IMAGES = $(OBJDIR)\/kern\/kernel.img$/;"	m
INADDR_ANY	net/lwip/include/lwip/sockets.h	127;"	d
INADDR_BROADCAST	net/lwip/include/lwip/sockets.h	128;"	d
INADDR_LOOPBACK	net/lwip/include/ipv4/lwip/ip_addr.h	81;"	d
INADDR_NONE	net/lwip/include/ipv4/lwip/ip_addr.h	80;"	d
INCPTR	net/lwip/netif/ppp/ppp.h	207;"	d
INCR	net/lwip/netif/ppp/vj.c	45;"	d	file:
INCR	net/lwip/netif/ppp/vj.c	47;"	d	file:
INDEX2DATA	lib/fd.c	16;"	d	file:
INDEX2FD	lib/fd.c	14;"	d	file:
INET_DEBUG	net/lwip/include/lwip/opt.h	1532;"	d
INIT	kern/lapic.c	22;"	d	file:
IN_BADCLASS	net/lwip/include/ipv4/lwip/ip_addr.h	112;"	d
IN_CLASSA	net/lwip/include/ipv4/lwip/ip_addr.h	88;"	d
IN_CLASSA_HOST	net/lwip/include/ipv4/lwip/ip_addr.h	91;"	d
IN_CLASSA_MAX	net/lwip/include/ipv4/lwip/ip_addr.h	92;"	d
IN_CLASSA_NET	net/lwip/include/ipv4/lwip/ip_addr.h	89;"	d
IN_CLASSA_NSHIFT	net/lwip/include/ipv4/lwip/ip_addr.h	90;"	d
IN_CLASSB	net/lwip/include/ipv4/lwip/ip_addr.h	94;"	d
IN_CLASSB_HOST	net/lwip/include/ipv4/lwip/ip_addr.h	97;"	d
IN_CLASSB_MAX	net/lwip/include/ipv4/lwip/ip_addr.h	98;"	d
IN_CLASSB_NET	net/lwip/include/ipv4/lwip/ip_addr.h	95;"	d
IN_CLASSB_NSHIFT	net/lwip/include/ipv4/lwip/ip_addr.h	96;"	d
IN_CLASSC	net/lwip/include/ipv4/lwip/ip_addr.h	100;"	d
IN_CLASSC_HOST	net/lwip/include/ipv4/lwip/ip_addr.h	103;"	d
IN_CLASSC_NET	net/lwip/include/ipv4/lwip/ip_addr.h	101;"	d
IN_CLASSC_NSHIFT	net/lwip/include/ipv4/lwip/ip_addr.h	102;"	d
IN_CLASSD	net/lwip/include/ipv4/lwip/ip_addr.h	105;"	d
IN_CLASSD_HOST	net/lwip/include/ipv4/lwip/ip_addr.h	108;"	d
IN_CLASSD_NET	net/lwip/include/ipv4/lwip/ip_addr.h	106;"	d
IN_CLASSD_NSHIFT	net/lwip/include/ipv4/lwip/ip_addr.h	107;"	d
IN_EXPERIMENTAL	net/lwip/include/ipv4/lwip/ip_addr.h	111;"	d
IN_LOOPBACKNET	net/lwip/include/ipv4/lwip/ip_addr.h	114;"	d
IN_MULTICAST	net/lwip/include/ipv4/lwip/ip_addr.h	109;"	d
IOCPARM_MASK	net/lwip/include/lwip/sockets.h	236;"	d
IOC_IN	net/lwip/include/lwip/sockets.h	239;"	d
IOC_INOUT	net/lwip/include/lwip/sockets.h	240;"	d
IOC_OUT	net/lwip/include/lwip/sockets.h	238;"	d
IOC_VOID	net/lwip/include/lwip/sockets.h	237;"	d
IOPHYSMEM	inc/memlayout.h	92;"	d
IO_PIC1	kern/picirq.h	12;"	d
IO_PIC2	kern/picirq.h	13;"	d
IO_RTC	kern/kclock.h	9;"	d
IO_RTC	kern/lapic.c	137;"	d	file:
IP	net/ns.h	4;"	d
IP4_ADDR	net/lwip/include/ipv4/lwip/ip_addr.h	116;"	d
IP6_ADDR	net/lwip/include/ipv6/lwip/ip_addr.h	71;"	d
IPADDR	user/echotest.c	6;"	d	file:
IPCPDEBUG	net/lwip/netif/ppp/pppdebug.h	67;"	d
IPCPDEBUG	net/lwip/netif/ppp/pppdebug.h	77;"	d
IPCP_H	net/lwip/netif/ppp/ipcp.h	55;"	d
IPCP_VJMODE_OLD	net/lwip/netif/ppp/ipcp.h	72;"	d
IPCP_VJMODE_RFC1172	net/lwip/netif/ppp/ipcp.h	73;"	d
IPCP_VJMODE_RFC1332	net/lwip/netif/ppp/ipcp.h	74;"	d
IPCP_VJ_COMP	net/lwip/netif/ppp/ipcp.h	77;"	d
IPCP_VJ_COMP_OLD	net/lwip/netif/ppp/ipcp.h	78;"	d
IPFRAG_STATS	net/lwip/include/lwip/opt.h	1172;"	d
IPFRAG_STATS	net/lwip/include/lwip/opt.h	1230;"	d
IPFRAG_STATS_DISPLAY	net/lwip/include/lwip/stats.h	194;"	d
IPFRAG_STATS_DISPLAY	net/lwip/include/lwip/stats.h	197;"	d
IPFRAG_STATS_INC	net/lwip/include/lwip/stats.h	193;"	d
IPFRAG_STATS_INC	net/lwip/include/lwip/stats.h	196;"	d
IPH_CHKSUM	net/lwip/include/ipv4/lwip/ip.h	151;"	d
IPH_CHKSUM_SET	net/lwip/include/ipv4/lwip/ip.h	159;"	d
IPH_HL	net/lwip/include/ipv4/lwip/ip.h	144;"	d
IPH_ID	net/lwip/include/ipv4/lwip/ip.h	147;"	d
IPH_ID_SET	net/lwip/include/ipv4/lwip/ip.h	155;"	d
IPH_LEN	net/lwip/include/ipv4/lwip/ip.h	146;"	d
IPH_LEN_SET	net/lwip/include/ipv4/lwip/ip.h	154;"	d
IPH_OFFSET	net/lwip/include/ipv4/lwip/ip.h	148;"	d
IPH_OFFSET_SET	net/lwip/include/ipv4/lwip/ip.h	156;"	d
IPH_PROTO	net/lwip/include/ipv4/lwip/ip.h	150;"	d
IPH_PROTO	net/lwip/include/ipv6/lwip/ip.h	99;"	d
IPH_PROTO_SET	net/lwip/include/ipv4/lwip/ip.h	158;"	d
IPH_TOS	net/lwip/include/ipv4/lwip/ip.h	145;"	d
IPH_TTL	net/lwip/include/ipv4/lwip/ip.h	149;"	d
IPH_TTL_SET	net/lwip/include/ipv4/lwip/ip.h	157;"	d
IPH_V	net/lwip/include/ipv4/lwip/ip.h	143;"	d
IPH_VHLTOS_SET	net/lwip/include/ipv4/lwip/ip.h	153;"	d
IPPROTO_IP	net/lwip/include/lwip/sockets.h	122;"	d
IPPROTO_TCP	net/lwip/include/lwip/sockets.h	123;"	d
IPPROTO_UDP	net/lwip/include/lwip/sockets.h	124;"	d
IPPROTO_UDPLITE	net/lwip/include/lwip/sockets.h	125;"	d
IPTOS_LOWCOST	net/lwip/include/lwip/sockets.h	201;"	d
IPTOS_LOWDELAY	net/lwip/include/lwip/sockets.h	198;"	d
IPTOS_MINCOST	net/lwip/include/lwip/sockets.h	202;"	d
IPTOS_PREC	net/lwip/include/lwip/sockets.h	214;"	d
IPTOS_PREC_CRITIC_ECP	net/lwip/include/lwip/sockets.h	217;"	d
IPTOS_PREC_FLASH	net/lwip/include/lwip/sockets.h	219;"	d
IPTOS_PREC_FLASHOVERRIDE	net/lwip/include/lwip/sockets.h	218;"	d
IPTOS_PREC_IMMEDIATE	net/lwip/include/lwip/sockets.h	220;"	d
IPTOS_PREC_INTERNETCONTROL	net/lwip/include/lwip/sockets.h	216;"	d
IPTOS_PREC_MASK	net/lwip/include/lwip/sockets.h	213;"	d
IPTOS_PREC_NETCONTROL	net/lwip/include/lwip/sockets.h	215;"	d
IPTOS_PREC_PRIORITY	net/lwip/include/lwip/sockets.h	221;"	d
IPTOS_PREC_ROUTINE	net/lwip/include/lwip/sockets.h	222;"	d
IPTOS_RELIABILITY	net/lwip/include/lwip/sockets.h	200;"	d
IPTOS_THROUGHPUT	net/lwip/include/lwip/sockets.h	199;"	d
IPTOS_TOS	net/lwip/include/lwip/sockets.h	197;"	d
IPTOS_TOS_MASK	net/lwip/include/lwip/sockets.h	196;"	d
IP_ADDRESSES_AND_ID_MATCH	net/lwip/core/ipv4/ip_frag.c	91;"	d	file:
IP_ADDR_ANY	net/lwip/include/ipv4/lwip/ip_addr.h	77;"	d
IP_ADDR_ANY	net/lwip/include/ipv6/lwip/ip_addr.h	41;"	d
IP_ADDR_ANY_VALUE	net/lwip/core/ipv4/ip_addr.c	44;"	d	file:
IP_ADDR_BROADCAST	net/lwip/include/ipv4/lwip/ip_addr.h	78;"	d
IP_ADDR_BROADCAST_VALUE	net/lwip/core/ipv4/ip_addr.c	45;"	d	file:
IP_ADD_MEMBERSHIP	net/lwip/include/lwip/sockets.h	168;"	d
IP_DEBUG	net/lwip/include/lwip/opt.h	1539;"	d
IP_DEFAULT_TTL	net/lwip/include/lwip/opt.h	432;"	d
IP_DF	net/lwip/include/ipv4/lwip/ip.h	127;"	d
IP_DF	net/lwip/netif/ppp/vjbsdhdr.h	33;"	d
IP_DROP_MEMBERSHIP	net/lwip/include/lwip/sockets.h	169;"	d
IP_FORWARD	net/lwip/include/lwip/opt.h	362;"	d
IP_FRAG	net/lwip/include/lwip/opt.h	389;"	d
IP_FRAG_MAX_MTU	net/lwip/include/lwip/opt.h	425;"	d
IP_FRAG_USES_STATIC_BUF	net/lwip/include/lwip/opt.h	417;"	d
IP_HDRINCL	net/lwip/include/ipv4/lwip/ip.h	66;"	d
IP_HDRINCL	net/lwip/include/ipv4/lwip/ip.h	68;"	d
IP_HDRINCL	net/lwip/include/ipv6/lwip/ip.h	57;"	d
IP_HDRINCL	net/lwip/include/ipv6/lwip/ip.h	59;"	d
IP_HLEN	net/lwip/include/ipv4/lwip/ip.h	55;"	d
IP_HLEN	net/lwip/include/ipv6/lwip/ip.h	46;"	d
IP_MF	net/lwip/include/ipv4/lwip/ip.h	128;"	d
IP_MF	net/lwip/netif/ppp/vjbsdhdr.h	34;"	d
IP_MULTICAST_IF	net/lwip/include/lwip/sockets.h	171;"	d
IP_MULTICAST_LOOP	net/lwip/include/lwip/sockets.h	172;"	d
IP_MULTICAST_TTL	net/lwip/include/lwip/sockets.h	170;"	d
IP_OFFMASK	net/lwip/include/ipv4/lwip/ip.h	129;"	d
IP_OFFMASK	net/lwip/netif/ppp/vjbsdhdr.h	35;"	d
IP_OPTIONS_ALLOWED	net/lwip/include/lwip/opt.h	371;"	d
IP_PCB	net/lwip/include/ipv4/lwip/ip.h	/^  IP_PCB;$/;"	m	struct:ip_pcb
IP_PCB	net/lwip/include/ipv4/lwip/ip.h	80;"	d
IP_PCB	net/lwip/include/ipv6/lwip/ip.h	71;"	d
IP_PCB	net/lwip/include/lwip/raw.h	/^  IP_PCB;$/;"	m	struct:raw_pcb
IP_PCB	net/lwip/include/lwip/tcp.h	/^  IP_PCB;$/;"	m	struct:tcp_pcb
IP_PCB	net/lwip/include/lwip/tcp.h	/^  IP_PCB;$/;"	m	struct:tcp_pcb_listen
IP_PCB	net/lwip/include/lwip/udp.h	/^  IP_PCB;$/;"	m	struct:udp_pcb
IP_PCB_ADDRHINT	net/lwip/include/ipv4/lwip/ip.h	71;"	d
IP_PCB_ADDRHINT	net/lwip/include/ipv4/lwip/ip.h	73;"	d
IP_PCB_ADDRHINT	net/lwip/include/ipv6/lwip/ip.h	62;"	d
IP_PCB_ADDRHINT	net/lwip/include/ipv6/lwip/ip.h	64;"	d
IP_PROTO_ICMP	net/lwip/include/ipv4/lwip/ip.h	57;"	d
IP_PROTO_ICMP	net/lwip/include/ipv6/lwip/ip.h	48;"	d
IP_PROTO_IGMP	net/lwip/include/ipv4/lwip/igmp.h	52;"	d
IP_PROTO_TCP	net/lwip/include/ipv4/lwip/ip.h	60;"	d
IP_PROTO_TCP	net/lwip/include/ipv6/lwip/ip.h	51;"	d
IP_PROTO_UDP	net/lwip/include/ipv4/lwip/ip.h	58;"	d
IP_PROTO_UDP	net/lwip/include/ipv6/lwip/ip.h	49;"	d
IP_PROTO_UDPLITE	net/lwip/include/ipv4/lwip/ip.h	59;"	d
IP_PROTO_UDPLITE	net/lwip/include/ipv6/lwip/ip.h	50;"	d
IP_REASSEMBLY	net/lwip/include/lwip/opt.h	380;"	d
IP_REASS_CHECK_OVERLAP	net/lwip/core/ipv4/ip_frag.c	68;"	d	file:
IP_REASS_DEBUG	net/lwip/include/lwip/opt.h	1546;"	d
IP_REASS_FLAG_LASTFRAG	net/lwip/core/ipv4/ip_frag.c	79;"	d	file:
IP_REASS_FREE_OLDEST	net/lwip/core/ipv4/ip_frag.c	76;"	d	file:
IP_REASS_MAXAGE	net/lwip/include/lwip/opt.h	398;"	d
IP_REASS_MAX_PBUFS	net/lwip/include/lwip/opt.h	408;"	d
IP_RF	net/lwip/include/ipv4/lwip/ip.h	126;"	d
IP_STATS	net/lwip/include/lwip/opt.h	1164;"	d
IP_STATS	net/lwip/include/lwip/opt.h	1229;"	d
IP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	186;"	d
IP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	189;"	d
IP_STATS_INC	net/lwip/include/lwip/stats.h	185;"	d
IP_STATS_INC	net/lwip/include/lwip/stats.h	188;"	d
IP_TMR_INTERVAL	net/lwip/include/ipv4/lwip/ip_frag.h	49;"	d
IP_TOS	net/lwip/include/lwip/sockets.h	141;"	d
IP_TTL	net/lwip/include/lwip/sockets.h	142;"	d
IRQ_ERROR	inc/trap.h	40;"	d
IRQ_IDE	inc/trap.h	39;"	d
IRQ_KBD	inc/trap.h	36;"	d
IRQ_OFFSET	inc/trap.h	32;"	d
IRQ_SERIAL	inc/trap.h	37;"	d
IRQ_SLAVE	kern/picirq.h	15;"	d
IRQ_SPURIOUS	inc/trap.h	38;"	d
IRQ_TIMER	inc/trap.h	35;"	d
JOS_INC_ARGS_H	inc/args.h	2;"	d
JOS_INC_ASSERT_H	inc/assert.h	4;"	d
JOS_INC_CPU_H	kern/cpu.h	3;"	d
JOS_INC_ELF_H	inc/elf.h	2;"	d
JOS_INC_ENV_H	inc/env.h	4;"	d
JOS_INC_ERROR_H	inc/error.h	4;"	d
JOS_INC_FD_H	inc/fd.h	6;"	d
JOS_INC_FS_H	inc/fs.h	4;"	d
JOS_INC_LIB_H	inc/lib.h	8;"	d
JOS_INC_MALLOC_H	inc/malloc.h	2;"	d
JOS_INC_MEMLAYOUT_H	inc/memlayout.h	2;"	d
JOS_INC_MMU_H	inc/mmu.h	2;"	d
JOS_INC_NS_H	inc/ns.h	4;"	d
JOS_INC_PARTITION_H	inc/partition.h	2;"	d
JOS_INC_PERROR_H	net/lwip/jos/arch/perror.h	2;"	d
JOS_INC_SETJMP_H	net/lwip/jos/arch/setjmp.h	2;"	d
JOS_INC_SPINLOCK_H	kern/spinlock.h	2;"	d
JOS_INC_STDARG_H	inc/stdarg.h	4;"	d
JOS_INC_STDIO_H	inc/stdio.h	2;"	d
JOS_INC_STRING_H	inc/string.h	2;"	d
JOS_INC_SYSCALL_H	inc/syscall.h	2;"	d
JOS_INC_THREADQ_H	net/lwip/jos/arch/threadq.h	2;"	d
JOS_INC_TRAP_H	inc/trap.h	2;"	d
JOS_INC_TYPES_H	fs/fsformat.c	25;"	d	file:
JOS_INC_TYPES_H	inc/types.h	2;"	d
JOS_INC_X86_H	inc/x86.h	2;"	d
JOS_KBDREG_H	inc/kbdreg.h	2;"	d
JOS_KERN_E1000_H	kern/e1000.h	2;"	d
JOS_KERN_ENV_H	kern/env.h	4;"	d
JOS_KERN_KCLOCK_H	kern/kclock.h	4;"	d
JOS_KERN_KDEBUG_H	kern/kdebug.h	2;"	d
JOS_KERN_MONITOR_H	kern/monitor.h	2;"	d
JOS_KERN_PCI_H	kern/pci.h	2;"	d
JOS_KERN_PICIRQ_H	kern/picirq.h	4;"	d
JOS_KERN_PMAP_H	kern/pmap.h	4;"	d
JOS_KERN_SCHED_H	kern/sched.h	4;"	d
JOS_KERN_SYSCALL_H	kern/syscall.h	2;"	d
JOS_KERN_TIME_H	kern/time.h	2;"	d
JOS_KERN_TRAP_H	kern/trap.h	4;"	d
JOS_LONGJMP_GCCATTR	net/lwip/jos/arch/i386/setjmp.h	6;"	d
JOS_LWIP_LWIPOPTS_H	net/lwip/jos/lwipopts.h	2;"	d
JOS_MACHINE_SETJMP_H	net/lwip/jos/arch/i386/setjmp.h	2;"	d
JOS_STAB_H	inc/stab.h	2;"	d
KADDR	kern/pmap.h	38;"	d
KADDR	obj/kern/kernel.asm	/^#define KADDR(pa) _kaddr(__FILE__, __LINE__, pa)$/;"	d
KBCMDP	inc/kbdreg.h	29;"	d
KBC_AUXDISABLE	inc/kbdreg.h	32;"	d
KBC_AUXECHO	inc/kbdreg.h	36;"	d
KBC_AUXENABLE	inc/kbdreg.h	33;"	d
KBC_AUXTEST	inc/kbdreg.h	34;"	d
KBC_AUXWRITE	inc/kbdreg.h	37;"	d
KBC_DISABLE	inc/kbdreg.h	66;"	d
KBC_ECHO	inc/kbdreg.h	71;"	d
KBC_ENABLE	inc/kbdreg.h	67;"	d
KBC_KBDDISABLE	inc/kbdreg.h	40;"	d
KBC_KBDECHO	inc/kbdreg.h	35;"	d
KBC_KBDENABLE	inc/kbdreg.h	41;"	d
KBC_KBDTEST	inc/kbdreg.h	39;"	d
KBC_MODEIND	inc/kbdreg.h	70;"	d
KBC_PULSE0	inc/kbdreg.h	42;"	d
KBC_PULSE1	inc/kbdreg.h	43;"	d
KBC_PULSE2	inc/kbdreg.h	44;"	d
KBC_PULSE3	inc/kbdreg.h	45;"	d
KBC_RAMREAD	inc/kbdreg.h	30;"	d
KBC_RAMWRITE	inc/kbdreg.h	31;"	d
KBC_RESEND	inc/kbdreg.h	64;"	d
KBC_RESET	inc/kbdreg.h	63;"	d
KBC_SELFTEST	inc/kbdreg.h	38;"	d
KBC_SETDEFAULT	inc/kbdreg.h	65;"	d
KBC_SETTABLE	inc/kbdreg.h	69;"	d
KBC_TYPEMATIC	inc/kbdreg.h	68;"	d
KBDATAP	inc/kbdreg.h	47;"	d
KBOUTP	inc/kbdreg.h	48;"	d
KBR_ACK	inc/kbdreg.h	76;"	d
KBR_BREAK	inc/kbdreg.h	79;"	d
KBR_ECHO	inc/kbdreg.h	81;"	d
KBR_EXTENDED	inc/kbdreg.h	74;"	d
KBR_FAILURE	inc/kbdreg.h	78;"	d
KBR_OVERRUN	inc/kbdreg.h	77;"	d
KBR_RESEND	inc/kbdreg.h	75;"	d
KBR_RSTDONE	inc/kbdreg.h	80;"	d
KBSTATP	inc/kbdreg.h	19;"	d
KBS_DIB	inc/kbdreg.h	20;"	d
KBS_IBF	inc/kbdreg.h	21;"	d
KBS_NOSEC	inc/kbdreg.h	24;"	d
KBS_OCMD	inc/kbdreg.h	23;"	d
KBS_PERR	inc/kbdreg.h	27;"	d
KBS_RERR	inc/kbdreg.h	26;"	d
KBS_TERR	inc/kbdreg.h	25;"	d
KBS_WARM	inc/kbdreg.h	22;"	d
KC8_CPU	inc/kbdreg.h	57;"	d
KC8_IGNSEC	inc/kbdreg.h	56;"	d
KC8_KDISABLE	inc/kbdreg.h	55;"	d
KC8_KENABLE	inc/kbdreg.h	59;"	d
KC8_MDISABLE	inc/kbdreg.h	54;"	d
KC8_MENABLE	inc/kbdreg.h	58;"	d
KC8_TRANS	inc/kbdreg.h	53;"	d
KERNBASE	inc/memlayout.h	87;"	d
KERN_CFLAGS	GNUmakefile	/^KERN_CFLAGS := $(CFLAGS) -DJOS_KERNEL -gstabs$/;"	m
KEY_DEL	inc/kbdreg.h	14;"	d
KEY_DN	inc/kbdreg.h	8;"	d
KEY_END	inc/kbdreg.h	6;"	d
KEY_HOME	inc/kbdreg.h	5;"	d
KEY_INS	inc/kbdreg.h	13;"	d
KEY_LF	inc/kbdreg.h	9;"	d
KEY_PGDN	inc/kbdreg.h	12;"	d
KEY_PGUP	inc/kbdreg.h	11;"	d
KEY_RT	inc/kbdreg.h	10;"	d
KEY_UP	inc/kbdreg.h	7;"	d
KSTACKTOP	inc/memlayout.h	96;"	d
KSTKGAP	inc/memlayout.h	98;"	d
KSTKSIZE	inc/memlayout.h	97;"	d
K_LDCMDBYTE	inc/kbdreg.h	51;"	d
K_RDCMDBYTE	inc/kbdreg.h	50;"	d
LAB	conf/lab.mk	/^LAB=6$/;"	m
LABSETUP	GNUmakefile	/^LABSETUP ?= .\/$/;"	m
LANManResp	net/lwip/netif/ppp/chpms.c	/^    u_char LANManResp[24];$/;"	m	struct:__anon3	file:
LAST_ACK	net/lwip/include/lwip/tcp.h	/^  LAST_ACK    = 9,$/;"	e	enum:tcp_state
LCPDEBUG	net/lwip/netif/ppp/pppdebug.h	69;"	d
LCPDEBUG	net/lwip/netif/ppp/pppdebug.h	79;"	d
LCP_ECHOINTERVAL	net/lwip/include/lwip/opt.h	1363;"	d
LCP_H	net/lwip/netif/ppp/lcp.h	55;"	d
LCP_MAXECHOFAILS	net/lwip/include/lwip/opt.h	1368;"	d
LD	GNUmakefile	/^LD	:= $(GCCPREFIX)ld$/;"	m
LDFLAGS	GNUmakefile	/^LDFLAGS := -m elf_i386$/;"	m
LENCIADDR	net/lwip/netif/ppp/ipcp.c	339;"	d	file:
LENCICBCP	net/lwip/netif/ppp/lcp.c	512;"	d	file:
LENCICHAP	net/lwip/netif/ppp/lcp.c	508;"	d	file:
LENCIDNS	net/lwip/netif/ppp/ipcp.c	340;"	d	file:
LENCILONG	net/lwip/netif/ppp/lcp.c	510;"	d	file:
LENCILQR	net/lwip/netif/ppp/lcp.c	511;"	d	file:
LENCISHORT	net/lwip/netif/ppp/lcp.c	509;"	d	file:
LENCIVJ	net/lwip/netif/ppp/ipcp.c	338;"	d	file:
LENCIVOID	net/lwip/netif/ppp/lcp.c	507;"	d	file:
LEVEL	kern/lapic.c	27;"	d	file:
LINK_STATS	net/lwip/include/lwip/opt.h	1150;"	d
LINK_STATS	net/lwip/include/lwip/opt.h	1228;"	d
LINK_STATS_DISPLAY	net/lwip/include/lwip/stats.h	210;"	d
LINK_STATS_DISPLAY	net/lwip/include/lwip/stats.h	213;"	d
LINK_STATS_INC	net/lwip/include/lwip/stats.h	209;"	d
LINK_STATS_INC	net/lwip/include/lwip/stats.h	212;"	d
LINT0	kern/lapic.c	37;"	d	file:
LINT1	kern/lapic.c	38;"	d	file:
LISTEN	net/lwip/include/lwip/tcp.h	/^  LISTEN      = 1,$/;"	e	enum:tcp_state
LIST_EMPTY	net/lwip/jos/arch/queue.h	142;"	d
LIST_EMPTY	net/lwip/netif/ppp/ppp_oe.c	122;"	d	file:
LIST_ENTRY	net/lwip/jos/arch/queue.h	129;"	d
LIST_ENTRY	net/lwip/netif/ppp/ppp_oe.c	112;"	d	file:
LIST_FIRST	net/lwip/jos/arch/queue.h	147;"	d
LIST_FIRST	net/lwip/netif/ppp/ppp_oe.c	124;"	d	file:
LIST_FOREACH	net/lwip/jos/arch/queue.h	160;"	d
LIST_FOREACH	net/lwip/netif/ppp/ppp_oe.c	126;"	d	file:
LIST_HEAD	net/lwip/jos/arch/queue.h	109;"	d
LIST_HEAD	net/lwip/netif/ppp/ppp_oe.c	104;"	d	file:
LIST_HEAD_INITIALIZER	net/lwip/jos/arch/queue.h	118;"	d
LIST_HEAD_INITIALIZER	net/lwip/netif/ppp/ppp_oe.c	109;"	d	file:
LIST_INIT	net/lwip/jos/arch/queue.h	168;"	d
LIST_INIT	net/lwip/netif/ppp/ppp_oe.c	131;"	d	file:
LIST_INSERT_AFTER	net/lwip/jos/arch/queue.h	177;"	d
LIST_INSERT_AFTER	net/lwip/netif/ppp/ppp_oe.c	135;"	d	file:
LIST_INSERT_BEFORE	net/lwip/jos/arch/queue.h	190;"	d
LIST_INSERT_BEFORE	net/lwip/netif/ppp/ppp_oe.c	143;"	d	file:
LIST_INSERT_HEAD	net/lwip/jos/arch/queue.h	201;"	d
LIST_INSERT_HEAD	net/lwip/netif/ppp/ppp_oe.c	150;"	d	file:
LIST_NEXT	net/lwip/jos/arch/queue.h	153;"	d
LIST_NEXT	net/lwip/netif/ppp/ppp_oe.c	157;"	d	file:
LIST_REMOVE	net/lwip/jos/arch/queue.h	212;"	d
LIST_REMOVE	net/lwip/netif/ppp/ppp_oe.c	159;"	d	file:
LITTLE_ENDIAN	net/lwip/include/lwip/arch.h	36;"	d
LOAD_REGS	user/faultregs.c	23;"	d	file:
LOCK_TCPIP_CORE	net/lwip/include/lwip/tcpip.h	52;"	d
LOCK_TCPIP_CORE	net/lwip/include/lwip/tcpip.h	59;"	d
LOG2NENV	inc/env.h	28;"	d
LOG_CRITICAL	net/lwip/netif/ppp/pppdebug.h	/^LOG_CRITICAL = 0,$/;"	e	enum:__anon7
LOG_DEBUG	net/lwip/netif/ppp/pppdebug.h	/^LOG_DEBUG    = 7$/;"	e	enum:__anon7
LOG_DETAIL	net/lwip/netif/ppp/pppdebug.h	/^LOG_DETAIL   = 6,$/;"	e	enum:__anon7
LOG_ERR	net/lwip/netif/ppp/pppdebug.h	/^LOG_ERR      = 1,$/;"	e	enum:__anon7
LOG_INFO	net/lwip/netif/ppp/pppdebug.h	/^LOG_INFO     = 5,$/;"	e	enum:__anon7
LOG_NOTICE	net/lwip/netif/ppp/pppdebug.h	/^LOG_NOTICE   = 2,$/;"	e	enum:__anon7
LOG_WARNING	net/lwip/netif/ppp/pppdebug.h	/^LOG_WARNING  = 3,$/;"	e	enum:__anon7
LS_ACKRCVD	net/lwip/netif/ppp/fsm.h	87;"	d
LS_ACKSENT	net/lwip/netif/ppp/fsm.h	88;"	d
LS_CLOSED	net/lwip/netif/ppp/fsm.h	82;"	d
LS_CLOSING	net/lwip/netif/ppp/fsm.h	84;"	d
LS_INITIAL	net/lwip/netif/ppp/fsm.h	80;"	d
LS_OPENED	net/lwip/netif/ppp/fsm.h	89;"	d
LS_REQSENT	net/lwip/netif/ppp/fsm.h	86;"	d
LS_STARTING	net/lwip/netif/ppp/fsm.h	81;"	d
LS_STOPPED	net/lwip/netif/ppp/fsm.h	83;"	d
LS_STOPPING	net/lwip/netif/ppp/fsm.h	85;"	d
LWIP_ALLOW_MEM_FREE_FROM_OTHER_CONTEXT	net/lwip/include/lwip/opt.h	177;"	d
LWIP_ARCH_CC_H	net/lwip/jos/arch/cc.h	2;"	d
LWIP_ARCH_PERF_H	net/lwip/jos/arch/perf.h	2;"	d
LWIP_ARCH_QUEUE_H	net/lwip/jos/arch/queue.h	36;"	d
LWIP_ARCH_SYS_ARCH_H	net/lwip/jos/arch/sys_arch.h	2;"	d
LWIP_ARCH_THREAD_H	net/lwip/jos/arch/thread.h	2;"	d
LWIP_ARP	net/lwip/include/lwip/opt.h	321;"	d
LWIP_ASSERT	net/lwip/include/lwip/debug.h	64;"	d
LWIP_ASSERT	net/lwip/include/lwip/debug.h	67;"	d
LWIP_AUTOIP	net/lwip/include/lwip/opt.h	502;"	d
LWIP_AUTOIP_RAND	net/lwip/core/ipv4/autoip.c	82;"	d	file:
LWIP_CALLBACK_API	net/lwip/include/lwip/opt.h	762;"	d
LWIP_CALLBACK_API	net/lwip/include/lwip/opt.h	765;"	d
LWIP_CHKSUM	net/lwip/core/ipv4/inet_chksum.c	56;"	d	file:
LWIP_CHKSUM_ALGORITHM	net/lwip/core/ipv4/inet_chksum.c	58;"	d	file:
LWIP_CHKSUM_ALGORITHM	net/lwip/core/ipv4/inet_chksum.c	63;"	d	file:
LWIP_COMPAT_SOCKETS	net/lwip/include/lwip/opt.h	1083;"	d
LWIP_COMPAT_SOCKETS	net/lwip/jos/lwipopts.h	16;"	d
LWIP_DBG_FRESH	net/lwip/include/lwip/debug.h	59;"	d
LWIP_DBG_HALT	net/lwip/include/lwip/debug.h	61;"	d
LWIP_DBG_LEVEL_OFF	net/lwip/include/lwip/debug.h	43;"	d
LWIP_DBG_LEVEL_SERIOUS	net/lwip/include/lwip/debug.h	45;"	d
LWIP_DBG_LEVEL_SEVERE	net/lwip/include/lwip/debug.h	46;"	d
LWIP_DBG_LEVEL_WARNING	net/lwip/include/lwip/debug.h	44;"	d
LWIP_DBG_MASK_LEVEL	net/lwip/include/lwip/debug.h	47;"	d
LWIP_DBG_MIN_LEVEL	net/lwip/include/lwip/opt.h	1461;"	d
LWIP_DBG_MIN_LEVEL	net/lwip/jos/lwipopts.h	58;"	d
LWIP_DBG_OFF	net/lwip/include/lwip/debug.h	52;"	d
LWIP_DBG_ON	net/lwip/include/lwip/debug.h	50;"	d
LWIP_DBG_STATE	net/lwip/include/lwip/debug.h	57;"	d
LWIP_DBG_TRACE	net/lwip/include/lwip/debug.h	55;"	d
LWIP_DBG_TYPES_ON	net/lwip/include/lwip/opt.h	1469;"	d
LWIP_DEBUG	net/lwip/jos/lwipopts.h	49;"	d
LWIP_DEBUGF	net/lwip/include/lwip/debug.h	80;"	d
LWIP_DEBUGF	net/lwip/include/lwip/debug.h	93;"	d
LWIP_DHCP	net/lwip/include/lwip/opt.h	483;"	d
LWIP_DHCP	net/lwip/jos/lwipopts.h	15;"	d
LWIP_DHCP_AUTOIP_COOP	net/lwip/include/lwip/opt.h	510;"	d
LWIP_DNS	net/lwip/include/lwip/opt.h	580;"	d
LWIP_DNS_API_DECLARE_H_ERRNO	net/lwip/include/lwip/netdb.h	38;"	d
LWIP_DNS_API_DECLARE_STRUCTS	net/lwip/include/lwip/netdb.h	46;"	d
LWIP_DNS_API_DEFINE_ERRORS	net/lwip/include/lwip/netdb.h	42;"	d
LWIP_DNS_API_HOSTENT_STORAGE	net/lwip/api/netdb.c	60;"	d	file:
LWIP_ERROR	net/lwip/include/lwip/debug.h	72;"	d
LWIP_EVENT_ACCEPT	net/lwip/include/lwip/tcp.h	/^  LWIP_EVENT_ACCEPT,$/;"	e	enum:lwip_event
LWIP_EVENT_API	net/lwip/include/lwip/opt.h	761;"	d
LWIP_EVENT_API	net/lwip/include/lwip/opt.h	764;"	d
LWIP_EVENT_CONNECTED	net/lwip/include/lwip/tcp.h	/^  LWIP_EVENT_CONNECTED,$/;"	e	enum:lwip_event
LWIP_EVENT_ERR	net/lwip/include/lwip/tcp.h	/^  LWIP_EVENT_ERR$/;"	e	enum:lwip_event
LWIP_EVENT_POLL	net/lwip/include/lwip/tcp.h	/^  LWIP_EVENT_POLL,$/;"	e	enum:lwip_event
LWIP_EVENT_RECV	net/lwip/include/lwip/tcp.h	/^  LWIP_EVENT_RECV,$/;"	e	enum:lwip_event
LWIP_EVENT_SENT	net/lwip/include/lwip/tcp.h	/^  LWIP_EVENT_SENT,$/;"	e	enum:lwip_event
LWIP_HAVE_LOOPIF	net/lwip/include/lwip/opt.h	881;"	d
LWIP_HAVE_SLIPIF	net/lwip/include/lwip/opt.h	893;"	d
LWIP_ICMP	net/lwip/include/lwip/opt.h	445;"	d
LWIP_IGMP	net/lwip/include/lwip/opt.h	567;"	d
LWIP_LOOPBACK_MAX_PBUFS	net/lwip/include/lwip/opt.h	852;"	d
LWIP_MALLOC_MEMPOOL	net/lwip/include/lwip/memp.h	57;"	d
LWIP_MALLOC_MEMPOOL	net/lwip/include/lwip/memp.h	66;"	d
LWIP_MALLOC_MEMPOOL	net/lwip/include/lwip/memp_std.h	14;"	d
LWIP_MALLOC_MEMPOOL	net/lwip/include/lwip/memp_std.h	98;"	d
LWIP_MALLOC_MEMPOOL_END	net/lwip/include/lwip/memp.h	58;"	d
LWIP_MALLOC_MEMPOOL_END	net/lwip/include/lwip/memp.h	67;"	d
LWIP_MALLOC_MEMPOOL_END	net/lwip/include/lwip/memp_std.h	100;"	d
LWIP_MALLOC_MEMPOOL_END	net/lwip/include/lwip/memp_std.h	16;"	d
LWIP_MALLOC_MEMPOOL_START	net/lwip/include/lwip/memp.h	56;"	d
LWIP_MALLOC_MEMPOOL_START	net/lwip/include/lwip/memp.h	65;"	d
LWIP_MALLOC_MEMPOOL_START	net/lwip/include/lwip/memp_std.h	15;"	d
LWIP_MALLOC_MEMPOOL_START	net/lwip/include/lwip/memp_std.h	99;"	d
LWIP_MAX	net/lwip/include/lwip/def.h	38;"	d
LWIP_MEMPOOL	net/lwip/core/memp.c	117;"	d	file:
LWIP_MEMPOOL	net/lwip/core/memp.c	123;"	d	file:
LWIP_MEMPOOL	net/lwip/core/memp.c	130;"	d	file:
LWIP_MEMPOOL	net/lwip/core/memp.c	137;"	d	file:
LWIP_MEMPOOL	net/lwip/core/stats.c	103;"	d	file:
LWIP_MEMPOOL	net/lwip/include/lwip/memp.h	44;"	d
LWIP_MEMPOOL	net/lwip/include/lwip/memp.h	55;"	d
LWIP_MEMPOOL	net/lwip/include/lwip/memp.h	64;"	d
LWIP_MEMPOOL	net/lwip/include/lwip/memp_std.h	97;"	d
LWIP_MEM_ALIGN	net/lwip/include/lwip/mem.h	96;"	d
LWIP_MEM_ALIGN_SIZE	net/lwip/include/lwip/mem.h	92;"	d
LWIP_MEM_ALLOC_DECL_PROTECT	net/lwip/core/mem.c	192;"	d	file:
LWIP_MEM_ALLOC_DECL_PROTECT	net/lwip/core/mem.c	203;"	d	file:
LWIP_MEM_ALLOC_PROTECT	net/lwip/core/mem.c	193;"	d	file:
LWIP_MEM_ALLOC_PROTECT	net/lwip/core/mem.c	204;"	d	file:
LWIP_MEM_ALLOC_UNPROTECT	net/lwip/core/mem.c	194;"	d	file:
LWIP_MEM_ALLOC_UNPROTECT	net/lwip/core/mem.c	205;"	d	file:
LWIP_MEM_FREE_DECL_PROTECT	net/lwip/core/mem.c	189;"	d	file:
LWIP_MEM_FREE_DECL_PROTECT	net/lwip/core/mem.c	199;"	d	file:
LWIP_MEM_FREE_PROTECT	net/lwip/core/mem.c	190;"	d	file:
LWIP_MEM_FREE_PROTECT	net/lwip/core/mem.c	200;"	d	file:
LWIP_MEM_FREE_UNPROTECT	net/lwip/core/mem.c	191;"	d	file:
LWIP_MEM_FREE_UNPROTECT	net/lwip/core/mem.c	201;"	d	file:
LWIP_MIN	net/lwip/include/lwip/def.h	39;"	d
LWIP_NETCONN	net/lwip/include/lwip/opt.h	1063;"	d
LWIP_NETIF_API	net/lwip/include/lwip/opt.h	809;"	d
LWIP_NETIF_HOSTNAME	net/lwip/include/lwip/opt.h	802;"	d
LWIP_NETIF_HWADDRHINT	net/lwip/include/lwip/opt.h	836;"	d
LWIP_NETIF_LINK_CALLBACK	net/lwip/include/lwip/opt.h	825;"	d
LWIP_NETIF_LOOPBACK	net/lwip/include/lwip/opt.h	844;"	d
LWIP_NETIF_LOOPBACK_MULTITHREADING	net/lwip/include/lwip/opt.h	869;"	d
LWIP_NETIF_STATUS_CALLBACK	net/lwip/include/lwip/opt.h	817;"	d
LWIP_PBUF_MEMPOOL	net/lwip/include/lwip/memp_std.h	101;"	d
LWIP_PBUF_MEMPOOL	net/lwip/include/lwip/memp_std.h	22;"	d
LWIP_PLATFORM_ASSERT	net/lwip/jos/arch/cc.h	35;"	d
LWIP_PLATFORM_BYTESWAP	net/lwip/include/ipv4/lwip/inet.h	66;"	d
LWIP_PLATFORM_DIAG	net/lwip/jos/arch/cc.h	34;"	d
LWIP_POSIX_SOCKETS_IO_NAMES	net/lwip/include/lwip/opt.h	1092;"	d
LWIP_PROVIDE_ERRNO	net/lwip/jos/arch/perror.c	2;"	d	file:
LWIP_PROVIDE_ERRNO	net/lwip/jos/lwipopts.h	18;"	d
LWIP_RAW	net/lwip/include/lwip/opt.h	464;"	d
LWIP_SNMP	net/lwip/include/lwip/opt.h	523;"	d
LWIP_SNMP_OBJ_ID_LEN	net/lwip/include/lwip/snmp.h	88;"	d
LWIP_SOCKET	net/lwip/include/lwip/opt.h	1075;"	d
LWIP_SO_RCVBUF	net/lwip/include/lwip/opt.h	1115;"	d
LWIP_SO_RCVTIMEO	net/lwip/include/lwip/opt.h	1108;"	d
LWIP_STATS	net/lwip/include/lwip/opt.h	1134;"	d
LWIP_STATS	net/lwip/jos/lwipopts.h	13;"	d
LWIP_STATS_DISPLAY	net/lwip/include/lwip/opt.h	1143;"	d
LWIP_STATS_DISPLAY	net/lwip/include/lwip/opt.h	1238;"	d
LWIP_STATS_DISPLAY	net/lwip/jos/lwipopts.h	14;"	d
LWIP_STATS_LARGE	net/lwip/include/lwip/stats.h	47;"	d
LWIP_TCP	net/lwip/include/lwip/opt.h	650;"	d
LWIP_TCPIP_CORE_LOCKING	net/lwip/include/lwip/opt.h	1056;"	d
LWIP_TCP_KEEPALIVE	net/lwip/include/lwip/opt.h	1101;"	d
LWIP_TIMEVAL_PRIVATE	net/lwip/include/lwip/sockets.h	290;"	d
LWIP_UDP	net/lwip/include/lwip/opt.h	624;"	d
LWIP_UDPLITE	net/lwip/include/lwip/opt.h	631;"	d
LWIP_UNUSED_ARG	net/lwip/include/lwip/arch.h	63;"	d
LcpEchoCheck	net/lwip/netif/ppp/lcp.c	/^LcpEchoCheck (fsm *f)$/;"	f	file:
LcpEchoTimeout	net/lwip/netif/ppp/lcp.c	/^LcpEchoTimeout (void *arg)$/;"	f	file:
LcpLinkFailure	net/lwip/netif/ppp/lcp.c	/^LcpLinkFailure (fsm *f)$/;"	f	file:
LcpSendEchoRequest	net/lwip/netif/ppp/lcp.c	/^LcpSendEchoRequest (fsm *f)$/;"	f	file:
LinkPhase	net/lwip/netif/ppp/lcp.h	/^} LinkPhase;$/;"	t	typeref:enum:__anon6
LogCodes	net/lwip/netif/ppp/pppdebug.h	/^} LogCodes;$/;"	t	typeref:enum:__anon7
MAC_HIGH	kern/e1000.h	14;"	d
MAC_LOW	kern/e1000.h	13;"	d
MAGIC_H	net/lwip/netif/ppp/magic.h	55;"	d
MAKEHEADER	net/lwip/netif/ppp/ppp.h	223;"	d
MAKE_TIMESTAMP	gradelib.py	/^MAKE_TIMESTAMP = 0$/;"	v
MASK	net/ns.h	5;"	d
MASKED	kern/lapic.c	40;"	d	file:
MAX	inc/types.h	49;"	d
MAXARGS	kern/monitor.c	90;"	d	file:
MAXARGS	obj/user/sh.asm	/^#define MAXARGS 16$/;"	d
MAXARGS	user/sh.c	20;"	d	file:
MAXERROR	inc/error.h	/^	MAXERROR$/;"	e	enum:__anon44
MAXFD	lib/fd.c	6;"	d	file:
MAXFILESIZE	inc/fs.h	27;"	d
MAXMALLOC	lib/malloc.c	/^	MAXMALLOC = 1024*1024	\/* max size of one allocated chunk *\/$/;"	e	enum:__anon1	file:
MAXNAMELEN	inc/fs.h	17;"	d
MAXNAMELEN	net/lwip/include/lwip/opt.h	1398;"	d
MAXOPEN	fs/serv.c	40;"	d	file:
MAXPATHLEN	inc/fs.h	20;"	d
MAXPENDING	obj/user/echosrv.asm	/^#define MAXPENDING 5    \/\/ Max connection requests$/;"	d
MAXPENDING	user/echosrv.c	8;"	d	file:
MAXPENDING	user/httpd.c	12;"	d	file:
MAXSECRETLEN	net/lwip/include/lwip/opt.h	1399;"	d
MAX_CHALLENGE_LENGTH	net/lwip/netif/ppp/chap.h	96;"	d
MAX_CONFLICTS	net/lwip/include/ipv4/lwip/autoip.h	67;"	d
MAX_DIR_ENTS	fs/fsformat.c	35;"	d	file:
MAX_HDR	net/lwip/netif/ppp/vj.h	31;"	d
MAX_IRQS	kern/picirq.h	9;"	d
MAX_NT_PASSWORD	net/lwip/netif/ppp/chpms.h	60;"	d
MAX_RESPONSE_LENGTH	net/lwip/netif/ppp/chap.h	97;"	d
MAX_SIZE	net/lwip/netif/slipif.c	62;"	d	file:
MAX_SLOTS	net/lwip/netif/ppp/vj.h	30;"	d
MBOXSLOTS	net/lwip/jos/arch/sys_arch.c	14;"	d	file:
MC_NVRAM_SIZE	kern/kclock.h	12;"	d
MC_NVRAM_START	kern/kclock.h	11;"	d
MD5Final	net/lwip/netif/ppp/md5.c	/^MD5Final (unsigned char hash[], MD5_CTX *mdContext)$/;"	f
MD5Init	net/lwip/netif/ppp/md5.c	/^MD5Init (MD5_CTX *mdContext)$/;"	f
MD5Update	net/lwip/netif/ppp/md5.c	/^MD5Update(MD5_CTX *mdContext, unsigned char *inBuf, unsigned int inLen)$/;"	f
MD5_CTX	net/lwip/netif/ppp/md5.h	/^} MD5_CTX;$/;"	t	typeref:struct:__anon4
MD5_H	net/lwip/netif/ppp/md5.h	41;"	d
MD5_SIGNATURE_SIZE	net/lwip/netif/ppp/chap.h	83;"	d
MD5_SUPPORT	net/lwip/include/lwip/opt.h	1323;"	d
MEMCPY	net/lwip/include/lwip/opt.h	76;"	d
MEMP_ALIGN_SIZE	net/lwip/core/memp.c	104;"	d	file:
MEMP_ALIGN_SIZE	net/lwip/core/memp.c	95;"	d	file:
MEMP_DEBUG	net/lwip/include/lwip/opt.h	1567;"	d
MEMP_MAX	net/lwip/include/lwip/memp.h	/^  MEMP_MAX$/;"	e	enum:__anon15
MEMP_NUM_ARP_QUEUE	net/lwip/include/lwip/opt.h	250;"	d
MEMP_NUM_IGMP_GROUP	net/lwip/include/lwip/opt.h	260;"	d
MEMP_NUM_NETBUF	net/lwip/include/lwip/opt.h	276;"	d
MEMP_NUM_NETBUF	net/lwip/jos/lwipopts.h	30;"	d
MEMP_NUM_NETCONN	net/lwip/include/lwip/opt.h	284;"	d
MEMP_NUM_NETCONN	net/lwip/jos/lwipopts.h	31;"	d
MEMP_NUM_PBUF	net/lwip/include/lwip/opt.h	191;"	d
MEMP_NUM_PBUF	net/lwip/jos/lwipopts.h	25;"	d
MEMP_NUM_RAW_PCB	net/lwip/include/lwip/opt.h	199;"	d
MEMP_NUM_REASSDATA	net/lwip/include/lwip/opt.h	240;"	d
MEMP_NUM_SYS_TIMEOUT	net/lwip/include/lwip/opt.h	268;"	d
MEMP_NUM_SYS_TIMEOUT	net/lwip/jos/lwipopts.h	32;"	d
MEMP_NUM_TCPIP_MSG_API	net/lwip/include/lwip/opt.h	293;"	d
MEMP_NUM_TCPIP_MSG_INPKT	net/lwip/include/lwip/opt.h	302;"	d
MEMP_NUM_TCP_PCB	net/lwip/include/lwip/opt.h	216;"	d
MEMP_NUM_TCP_PCB	net/lwip/jos/lwipopts.h	27;"	d
MEMP_NUM_TCP_PCB_LISTEN	net/lwip/include/lwip/opt.h	224;"	d
MEMP_NUM_TCP_PCB_LISTEN	net/lwip/jos/lwipopts.h	28;"	d
MEMP_NUM_TCP_SEG	net/lwip/include/lwip/opt.h	232;"	d
MEMP_NUM_TCP_SEG	net/lwip/jos/lwipopts.h	29;"	d
MEMP_NUM_UDP_PCB	net/lwip/include/lwip/opt.h	208;"	d
MEMP_NUM_UDP_PCB	net/lwip/jos/lwipopts.h	26;"	d
MEMP_OVERFLOW_CHECK	net/lwip/include/lwip/opt.h	128;"	d
MEMP_POOL_FIRST	net/lwip/include/lwip/memp.h	74;"	d
MEMP_POOL_HELPER_FIRST	net/lwip/include/lwip/memp.h	/^    MEMP_POOL_HELPER_FIRST = ((u8_t)$/;"	e	enum:__anon16
MEMP_POOL_HELPER_LAST	net/lwip/include/lwip/memp.h	/^    MEMP_POOL_HELPER_LAST = ((u8_t)$/;"	e	enum:__anon16
MEMP_POOL_LAST	net/lwip/include/lwip/memp.h	75;"	d
MEMP_SANITY_CHECK	net/lwip/include/lwip/opt.h	136;"	d
MEMP_SANITY_CHECK	net/lwip/jos/lwipopts.h	59;"	d
MEMP_SANITY_REGION_AFTER	net/lwip/core/memp.c	85;"	d	file:
MEMP_SANITY_REGION_AFTER_ALIGNED	net/lwip/core/memp.c	88;"	d	file:
MEMP_SANITY_REGION_AFTER_ALIGNED	net/lwip/core/memp.c	90;"	d	file:
MEMP_SANITY_REGION_BEFORE	net/lwip/core/memp.c	77;"	d	file:
MEMP_SANITY_REGION_BEFORE_ALIGNED	net/lwip/core/memp.c	80;"	d	file:
MEMP_SANITY_REGION_BEFORE_ALIGNED	net/lwip/core/memp.c	82;"	d	file:
MEMP_SIZE	net/lwip/core/memp.c	103;"	d	file:
MEMP_SIZE	net/lwip/core/memp.c	94;"	d	file:
MEMP_STATS	net/lwip/include/lwip/opt.h	1216;"	d
MEMP_STATS	net/lwip/include/lwip/opt.h	1236;"	d
MEMP_STATS_AVAIL	net/lwip/include/lwip/stats.h	235;"	d
MEMP_STATS_AVAIL	net/lwip/include/lwip/stats.h	245;"	d
MEMP_STATS_DEC	net/lwip/include/lwip/stats.h	237;"	d
MEMP_STATS_DEC	net/lwip/include/lwip/stats.h	247;"	d
MEMP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	243;"	d
MEMP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	249;"	d
MEMP_STATS_INC	net/lwip/include/lwip/stats.h	236;"	d
MEMP_STATS_INC	net/lwip/include/lwip/stats.h	246;"	d
MEMP_STATS_INC_USED	net/lwip/include/lwip/stats.h	238;"	d
MEMP_STATS_INC_USED	net/lwip/include/lwip/stats.h	248;"	d
MEMP_USE_CUSTOM_POOLS	net/lwip/include/lwip/opt.h	155;"	d
MEM_ALIGNMENT	net/lwip/include/lwip/opt.h	107;"	d
MEM_ALIGNMENT	net/lwip/jos/lwipopts.h	23;"	d
MEM_DEBUG	net/lwip/include/lwip/opt.h	1560;"	d
MEM_LIBC_MALLOC	net/lwip/include/lwip/opt.h	98;"	d
MEM_SIZE	net/lwip/include/lwip/opt.h	115;"	d
MEM_SIZE	net/lwip/jos/lwipopts.h	35;"	d
MEM_SIZE_ALIGNED	net/lwip/core/mem.c	170;"	d	file:
MEM_STATS	net/lwip/include/lwip/opt.h	1209;"	d
MEM_STATS	net/lwip/include/lwip/opt.h	1235;"	d
MEM_STATS_AVAIL	net/lwip/include/lwip/stats.h	217;"	d
MEM_STATS_AVAIL	net/lwip/include/lwip/stats.h	227;"	d
MEM_STATS_DEC_USED	net/lwip/include/lwip/stats.h	224;"	d
MEM_STATS_DEC_USED	net/lwip/include/lwip/stats.h	230;"	d
MEM_STATS_DISPLAY	net/lwip/include/lwip/stats.h	225;"	d
MEM_STATS_DISPLAY	net/lwip/include/lwip/stats.h	231;"	d
MEM_STATS_INC	net/lwip/include/lwip/stats.h	218;"	d
MEM_STATS_INC	net/lwip/include/lwip/stats.h	228;"	d
MEM_STATS_INC_USED	net/lwip/include/lwip/stats.h	219;"	d
MEM_STATS_INC_USED	net/lwip/include/lwip/stats.h	229;"	d
MEM_USE_POOLS	net/lwip/include/lwip/opt.h	145;"	d
MIB2_GROUPS	net/lwip/core/snmp/mib2.c	677;"	d	file:
MIB2_GROUPS	net/lwip/core/snmp/mib2.c	679;"	d	file:
MIB_NODE_AR	net/lwip/include/lwip/snmp_structs.h	91;"	d
MIB_NODE_EX	net/lwip/include/lwip/snmp_structs.h	97;"	d
MIB_NODE_LR	net/lwip/include/lwip/snmp_structs.h	95;"	d
MIB_NODE_RA	net/lwip/include/lwip/snmp_structs.h	93;"	d
MIB_NODE_SC	net/lwip/include/lwip/snmp_structs.h	89;"	d
MIB_OBJECT_NONE	net/lwip/include/lwip/snmp_structs.h	55;"	d
MIB_OBJECT_NOT_ACCESSIBLE	net/lwip/include/lwip/snmp_structs.h	63;"	d
MIB_OBJECT_READ_ONLY	net/lwip/include/lwip/snmp_structs.h	60;"	d
MIB_OBJECT_READ_WRITE	net/lwip/include/lwip/snmp_structs.h	61;"	d
MIB_OBJECT_SCALAR	net/lwip/include/lwip/snmp_structs.h	56;"	d
MIB_OBJECT_TAB	net/lwip/include/lwip/snmp_structs.h	57;"	d
MIB_OBJECT_WRITE_ONLY	net/lwip/include/lwip/snmp_structs.h	62;"	d
MIN	inc/types.h	43;"	d
MIN_CHALLENGE_LENGTH	net/lwip/netif/ppp/chap.h	95;"	d
MIN_SIZE	net/lwip/core/mem.c	165;"	d	file:
MIN_SIZE_ALIGNED	net/lwip/core/mem.c	168;"	d	file:
MMIOBASE	inc/memlayout.h	102;"	d
MMIOLIM	inc/memlayout.h	101;"	d
MONO_BASE	kern/console.h	11;"	d
MONO_BUF	kern/console.h	12;"	d
MPBOOTPHYS	kern/mpentry.S	/^#define MPBOOTPHYS(s) ((s) - mpentry_start + MPENTRY_PADDR)$/;"	d
MPBUS	kern/mpconfig.c	67;"	d	file:
MPENTRY_PADDR	inc/memlayout.h	142;"	d
MPIOAPIC	kern/mpconfig.c	68;"	d	file:
MPIOINTR	kern/mpconfig.c	69;"	d	file:
MPLINTR	kern/mpconfig.c	70;"	d	file:
MPPROC	kern/mpconfig.c	66;"	d	file:
MPPROC_BOOT	kern/mpconfig.c	63;"	d	file:
MSCHAP_SUPPORT	net/lwip/include/lwip/opt.h	1295;"	d
MSG_DONTWAIT	net/lwip/include/lwip/sockets.h	134;"	d
MSG_MORE	net/lwip/include/lwip/sockets.h	135;"	d
MSG_OOB	net/lwip/include/lwip/sockets.h	133;"	d
MSG_PEEK	net/lwip/include/lwip/sockets.h	131;"	d
MSG_WAITALL	net/lwip/include/lwip/sockets.h	132;"	d
MS_CHAP_RESPONSE_LEN	net/lwip/netif/ppp/chap.h	85;"	d
MS_ChapResponse	net/lwip/netif/ppp/chpms.c	/^} MS_ChapResponse;$/;"	t	typeref:struct:__anon3	file:
MULTIBOOT_HEADER_FLAGS	kern/entry.S	/^#define MULTIBOOT_HEADER_FLAGS (0)$/;"	d
MULTIBOOT_HEADER_MAGIC	kern/entry.S	/^#define MULTIBOOT_HEADER_MAGIC (0x1BADB002)$/;"	d
MakeKey	net/lwip/netif/ppp/chpms.c	/^MakeKey( u_char *key,    \/* IN  56 bit DES key missing parity bits *\/$/;"	f	file:
NAKCIADDR	net/lwip/netif/ppp/ipcp.c	592;"	d	file:
NAKCICHAP	net/lwip/netif/ppp/lcp.c	760;"	d	file:
NAKCICHAR	net/lwip/netif/ppp/lcp.c	772;"	d	file:
NAKCIDNS	net/lwip/netif/ppp/ipcp.c	624;"	d	file:
NAKCILONG	net/lwip/netif/ppp/lcp.c	794;"	d	file:
NAKCILQR	net/lwip/netif/ppp/lcp.c	805;"	d	file:
NAKCISHORT	net/lwip/netif/ppp/lcp.c	783;"	d	file:
NAKCIVJ	net/lwip/netif/ppp/ipcp.c	612;"	d	file:
NAKCIVOID	net/lwip/netif/ppp/lcp.c	750;"	d	file:
NATIVE_CFLAGS	GNUmakefile	/^NATIVE_CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -I$(TOP) -MD -Wall$/;"	m
NCC	GNUmakefile	/^NCC	:= gcc $(CC_VER) -pipe$/;"	m
NCOMMANDS	kern/monitor.c	30;"	d	file:
NCPU	kern/cpu.h	11;"	d
NDIRECT	inc/fs.h	23;"	d
NENV	inc/env.h	29;"	d
NETCONNTYPE_DATAGRAM	net/lwip/include/lwip/api.h	60;"	d
NETCONNTYPE_GROUP	net/lwip/include/lwip/api.h	59;"	d
NETCONN_CLOSE	net/lwip/include/lwip/api.h	/^  NETCONN_CLOSE$/;"	e	enum:netconn_state
NETCONN_CONNECT	net/lwip/include/lwip/api.h	/^  NETCONN_CONNECT,$/;"	e	enum:netconn_state
NETCONN_COPY	net/lwip/include/lwip/api.h	55;"	d
NETCONN_EVT_RCVMINUS	net/lwip/include/lwip/api.h	/^  NETCONN_EVT_RCVMINUS,$/;"	e	enum:netconn_evt
NETCONN_EVT_RCVPLUS	net/lwip/include/lwip/api.h	/^  NETCONN_EVT_RCVPLUS,$/;"	e	enum:netconn_evt
NETCONN_EVT_SENDMINUS	net/lwip/include/lwip/api.h	/^  NETCONN_EVT_SENDMINUS$/;"	e	enum:netconn_evt
NETCONN_EVT_SENDPLUS	net/lwip/include/lwip/api.h	/^  NETCONN_EVT_SENDPLUS,$/;"	e	enum:netconn_evt
NETCONN_INVALID	net/lwip/include/lwip/api.h	/^  NETCONN_INVALID    = 0,$/;"	e	enum:netconn_type
NETCONN_JOIN	net/lwip/include/lwip/api.h	/^  NETCONN_JOIN,$/;"	e	enum:netconn_igmp
NETCONN_LEAVE	net/lwip/include/lwip/api.h	/^  NETCONN_LEAVE$/;"	e	enum:netconn_igmp
NETCONN_LISTEN	net/lwip/include/lwip/api.h	/^  NETCONN_LISTEN,$/;"	e	enum:netconn_state
NETCONN_MORE	net/lwip/include/lwip/api.h	56;"	d
NETCONN_NOCOPY	net/lwip/include/lwip/api.h	54;"	d
NETCONN_NOFLAG	net/lwip/include/lwip/api.h	53;"	d
NETCONN_NONE	net/lwip/include/lwip/api.h	/^  NETCONN_NONE,$/;"	e	enum:netconn_state
NETCONN_RAW	net/lwip/include/lwip/api.h	/^  NETCONN_RAW        = 0x40$/;"	e	enum:netconn_type
NETCONN_TCP	net/lwip/include/lwip/api.h	/^  NETCONN_TCP        = 0x10,$/;"	e	enum:netconn_type
NETCONN_UDP	net/lwip/include/lwip/api.h	/^  NETCONN_UDP        = 0x20,$/;"	e	enum:netconn_type
NETCONN_UDPLITE	net/lwip/include/lwip/api.h	/^  NETCONN_UDPLITE    = 0x21,$/;"	e	enum:netconn_type
NETCONN_UDPNOCHKSUM	net/lwip/include/lwip/api.h	/^  NETCONN_UDPNOCHKSUM= 0x22,$/;"	e	enum:netconn_type
NETCONN_WRITE	net/lwip/include/lwip/api.h	/^  NETCONN_WRITE,$/;"	e	enum:netconn_state
NETIF_DEBUG	net/lwip/include/lwip/opt.h	1483;"	d
NETIF_FLAG_BROADCAST	net/lwip/include/lwip/netif.h	71;"	d
NETIF_FLAG_DHCP	net/lwip/include/lwip/netif.h	75;"	d
NETIF_FLAG_ETHARP	net/lwip/include/lwip/netif.h	80;"	d
NETIF_FLAG_IGMP	net/lwip/include/lwip/netif.h	82;"	d
NETIF_FLAG_LINK_UP	net/lwip/include/lwip/netif.h	78;"	d
NETIF_FLAG_POINTTOPOINT	net/lwip/include/lwip/netif.h	73;"	d
NETIF_FLAG_UP	net/lwip/include/lwip/netif.h	69;"	d
NETIF_INIT_SNMP	net/lwip/include/lwip/netif.h	181;"	d
NETIF_INIT_SNMP	net/lwip/include/lwip/netif.h	196;"	d
NETIF_LINK_CALLBACK	net/lwip/core/netif.c	62;"	d	file:
NETIF_LINK_CALLBACK	net/lwip/core/netif.c	64;"	d	file:
NETIF_MAX_HWADDR_LEN	net/lwip/include/lwip/netif.h	61;"	d
NETIF_SET_HINT	net/lwip/netif/etharp.c	121;"	d	file:
NETIF_STATUS_CALLBACK	net/lwip/core/netif.c	56;"	d	file:
NETIF_STATUS_CALLBACK	net/lwip/core/netif.c	58;"	d	file:
NEW_A	net/lwip/netif/ppp/vj.h	86;"	d
NEW_C	net/lwip/netif/ppp/vj.h	83;"	d
NEW_I	net/lwip/netif/ppp/vj.h	84;"	d
NEW_S	net/lwip/netif/ppp/vj.h	85;"	d
NEW_U	net/lwip/netif/ppp/vj.h	88;"	d
NEW_W	net/lwip/netif/ppp/vj.h	87;"	d
NHANDLERS	fs/serv.c	312;"	d	file:
NHANDLERS	obj/fs/fs.asm	/^#define NHANDLERS (sizeof(handlers)\/sizeof(handlers[0]))$/;"	d
NINDIRECT	inc/fs.h	25;"	d
NM	GNUmakefile	/^NM	:= $(GCCPREFIX)nm$/;"	m
NMBOX	net/lwip/jos/arch/sys_arch.c	13;"	d	file:
NO	kern/console.c	219;"	d	file:
NODE_STACK_SIZE	net/lwip/core/snmp/mib_structs.c	45;"	d	file:
NO_DATA	net/lwip/include/lwip/netdb.h	57;"	d
NO_RECOVERY	net/lwip/include/lwip/netdb.h	58;"	d
NO_SYS	net/lwip/include/lwip/opt.h	68;"	d
NPDENTRIES	inc/mmu.h	45;"	d
NPMODE_DROP	net/lwip/netif/ppp/ppp.h	/^  NPMODE_DROP,        \/* silently drop the packet *\/$/;"	e	enum:NPmode
NPMODE_ERROR	net/lwip/netif/ppp/ppp.h	/^  NPMODE_ERROR,       \/* return an error *\/$/;"	e	enum:NPmode
NPMODE_PASS	net/lwip/netif/ppp/ppp.h	/^  NPMODE_PASS,        \/* pass the packet through *\/$/;"	e	enum:NPmode
NPMODE_QUEUE	net/lwip/netif/ppp/ppp.h	/^  NPMODE_QUEUE        \/* save it up for later. *\/$/;"	e	enum:NPmode
NPTENTRIES	inc/mmu.h	46;"	d
NPmode	net/lwip/netif/ppp/ppp.h	/^enum NPmode {$/;"	g
NSEM	net/lwip/jos/arch/sys_arch.c	12;"	d	file:
NSREQ_ACCEPT	inc/ns.h	/^	NSREQ_ACCEPT = 1,$/;"	e	enum:__anon42
NSREQ_BIND	inc/ns.h	/^	NSREQ_BIND,$/;"	e	enum:__anon42
NSREQ_CLOSE	inc/ns.h	/^	NSREQ_CLOSE,$/;"	e	enum:__anon42
NSREQ_CONNECT	inc/ns.h	/^	NSREQ_CONNECT,$/;"	e	enum:__anon42
NSREQ_INPUT	inc/ns.h	/^	NSREQ_INPUT,$/;"	e	enum:__anon42
NSREQ_LISTEN	inc/ns.h	/^	NSREQ_LISTEN,$/;"	e	enum:__anon42
NSREQ_OUTPUT	inc/ns.h	/^	NSREQ_OUTPUT,$/;"	e	enum:__anon42
NSREQ_RECV	inc/ns.h	/^	NSREQ_RECV,$/;"	e	enum:__anon42
NSREQ_SEND	inc/ns.h	/^	NSREQ_SEND,$/;"	e	enum:__anon42
NSREQ_SHUTDOWN	inc/ns.h	/^	NSREQ_SHUTDOWN,$/;"	e	enum:__anon42
NSREQ_SOCKET	inc/ns.h	/^	NSREQ_SOCKET,$/;"	e	enum:__anon42
NSREQ_TIMER	inc/ns.h	/^	NSREQ_TIMER,$/;"	e	enum:__anon42
NSYSCALLS	inc/syscall.h	/^	NSYSCALLS$/;"	e	enum:__anon45
NTResp	net/lwip/netif/ppp/chpms.c	/^    u_char NTResp[24];$/;"	m	struct:__anon3	file:
NULL	inc/stdio.h	7;"	d
NULL	inc/types.h	5;"	d
NULL	net/lwip/include/lwip/def.h	42;"	d
NUMLOCK	kern/console.c	226;"	d	file:
NUM_PPP	net/lwip/include/lwip/opt.h	1274;"	d
NUM_SOCKETS	net/lwip/api/sockets.c	57;"	d	file:
NVRAM_BASEHI	kern/kclock.h	16;"	d
NVRAM_BASELO	kern/kclock.h	15;"	d
NVRAM_CENTURY	kern/kclock.h	27;"	d
NVRAM_EXTHI	kern/kclock.h	20;"	d
NVRAM_EXTLO	kern/kclock.h	19;"	d
NVRAM_PEXTHI	kern/kclock.h	24;"	d
NVRAM_PEXTLO	kern/kclock.h	23;"	d
N_BCOMM	inc/stab.h	37;"	d
N_BINCL	inc/stab.h	29;"	d
N_BSLINE	inc/stab.h	25;"	d
N_DSLINE	inc/stab.h	24;"	d
N_ECOML	inc/stab.h	39;"	d
N_ECOMM	inc/stab.h	38;"	d
N_EINCL	inc/stab.h	32;"	d
N_ENTRY	inc/stab.h	33;"	d
N_EXCL	inc/stab.h	35;"	d
N_FNAME	inc/stab.h	16;"	d
N_FUN	inc/stab.h	17;"	d
N_GSYM	inc/stab.h	15;"	d
N_LBRAC	inc/stab.h	34;"	d
N_LCSYM	inc/stab.h	19;"	d
N_LENG	inc/stab.h	40;"	d
N_LSYM	inc/stab.h	28;"	d
N_MAIN	inc/stab.h	20;"	d
N_PC	inc/stab.h	21;"	d
N_PSYM	inc/stab.h	31;"	d
N_RBRAC	inc/stab.h	36;"	d
N_RSYM	inc/stab.h	22;"	d
N_SLINE	inc/stab.h	23;"	d
N_SO	inc/stab.h	27;"	d
N_SOL	inc/stab.h	30;"	d
N_SSYM	inc/stab.h	26;"	d
N_STSYM	inc/stab.h	18;"	d
Nsipc	inc/ns.h	/^union Nsipc {$/;"	u
Nsreq_accept	inc/ns.h	/^	struct Nsreq_accept {$/;"	s	union:Nsipc
Nsreq_bind	inc/ns.h	/^	struct Nsreq_bind {$/;"	s	union:Nsipc
Nsreq_close	inc/ns.h	/^	struct Nsreq_close {$/;"	s	union:Nsipc
Nsreq_connect	inc/ns.h	/^	struct Nsreq_connect {$/;"	s	union:Nsipc
Nsreq_listen	inc/ns.h	/^	struct Nsreq_listen {$/;"	s	union:Nsipc
Nsreq_recv	inc/ns.h	/^	struct Nsreq_recv {$/;"	s	union:Nsipc
Nsreq_send	inc/ns.h	/^	struct Nsreq_send {$/;"	s	union:Nsipc
Nsreq_shutdown	inc/ns.h	/^	struct Nsreq_shutdown {$/;"	s	union:Nsipc
Nsreq_socket	inc/ns.h	/^	struct Nsreq_socket {$/;"	s	union:Nsipc
Nsret_accept	inc/ns.h	/^	struct Nsret_accept {$/;"	s	union:Nsipc
Nsret_recv	inc/ns.h	/^	struct Nsret_recv {$/;"	s	union:Nsipc
OBJCOPY	GNUmakefile	/^OBJCOPY	:= $(GCCPREFIX)objcopy$/;"	m
OBJDIR	GNUmakefile	/^OBJDIR := obj$/;"	m
OBJDIRS	GNUmakefile	/^OBJDIRS :=$/;"	m
OBJDUMP	GNUmakefile	/^OBJDUMP	:= $(GCCPREFIX)objdump$/;"	m
OPT_PASSIVE	net/lwip/netif/ppp/fsm.h	94;"	d
OPT_RESTART	net/lwip/netif/ppp/fsm.h	95;"	d
OPT_SILENT	net/lwip/netif/ppp/fsm.h	96;"	d
OTHERS	kern/lapic.c	29;"	d	file:
O_ACCMODE	inc/lib.h	149;"	d
O_CREAT	inc/lib.h	151;"	d
O_EXCL	inc/lib.h	153;"	d
O_MKDIR	inc/lib.h	154;"	d
O_NONBLOCK	net/lwip/include/lwip/sockets.h	268;"	d
O_RDONLY	inc/lib.h	146;"	d
O_RDWR	inc/lib.h	148;"	d
O_TRUNC	inc/lib.h	152;"	d
O_WRONLY	inc/lib.h	147;"	d
OpenFile	fs/serv.c	/^struct OpenFile {$/;"	s	file:
PACKAGEDATE	conf/lab.mk	/^PACKAGEDATE=Mon Nov 17 18:30:59 EST 2014$/;"	m
PACKET_MAX_LEN	kern/e1000.h	256;"	d
PACKET_MIN_LEN	kern/e1000.h	255;"	d
PACK_STRUCT_BEGIN	net/lwip/include/lwip/arch.h	50;"	d
PACK_STRUCT_BEGIN	net/lwip/jos/arch/cc.h	23;"	d
PACK_STRUCT_END	net/lwip/include/lwip/arch.h	54;"	d
PACK_STRUCT_END	net/lwip/jos/arch/cc.h	24;"	d
PACK_STRUCT_FIELD	net/lwip/include/lwip/arch.h	58;"	d
PACK_STRUCT_FIELD	net/lwip/jos/arch/cc.h	21;"	d
PACK_STRUCT_STRUCT	net/lwip/core/dns.c	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:dns_answer
PACK_STRUCT_STRUCT	net/lwip/core/dns.c	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:dns_hdr
PACK_STRUCT_STRUCT	net/lwip/core/dns.c	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:dns_query
PACK_STRUCT_STRUCT	net/lwip/include/ipv4/lwip/icmp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:icmp_dur_hdr
PACK_STRUCT_STRUCT	net/lwip/include/ipv4/lwip/icmp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:icmp_echo_hdr
PACK_STRUCT_STRUCT	net/lwip/include/ipv4/lwip/icmp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:icmp_te_hdr
PACK_STRUCT_STRUCT	net/lwip/include/ipv4/lwip/igmp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:igmp_msg
PACK_STRUCT_STRUCT	net/lwip/include/ipv4/lwip/ip.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ip_hdr
PACK_STRUCT_STRUCT	net/lwip/include/ipv4/lwip/ip_addr.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ip_addr
PACK_STRUCT_STRUCT	net/lwip/include/ipv4/lwip/ip_addr.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ip_addr2
PACK_STRUCT_STRUCT	net/lwip/include/ipv6/lwip/ip_addr.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ip_addr
PACK_STRUCT_STRUCT	net/lwip/include/ipv6/lwip/ip_addr.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ip_addr2
PACK_STRUCT_STRUCT	net/lwip/include/lwip/dhcp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:dhcp_msg
PACK_STRUCT_STRUCT	net/lwip/include/lwip/tcp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:tcp_hdr
PACK_STRUCT_STRUCT	net/lwip/include/lwip/udp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:udp_hdr
PACK_STRUCT_STRUCT	net/lwip/include/netif/etharp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:eth_addr
PACK_STRUCT_STRUCT	net/lwip/include/netif/etharp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:eth_hdr
PACK_STRUCT_STRUCT	net/lwip/include/netif/etharp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:etharp_hdr
PACK_STRUCT_STRUCT	net/lwip/include/netif/etharp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ethip_hdr
PACK_STRUCT_STRUCT	net/lwip/include/netif/ppp_oe.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:pppoehdr
PACK_STRUCT_STRUCT	net/lwip/include/netif/ppp_oe.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:pppoetag
PACK_STRUCT_STRUCT	net/lwip/jos/arch/cc.h	22;"	d
PADDING	net/lwip/netif/ppp/md5.c	/^static unsigned char PADDING[64] = {$/;"	v	file:
PADDR	kern/pmap.h	26;"	d
PADDR	obj/kern/kernel.asm	/^#define PADDR(kva) _paddr(__FILE__, __LINE__, kva)$/;"	d
PAP_H	net/lwip/netif/ppp/pap.h	53;"	d
PAP_PEER	net/lwip/netif/ppp/auth.c	91;"	d	file:
PAP_SUPPORT	net/lwip/include/lwip/opt.h	1281;"	d
PAP_WITHPEER	net/lwip/netif/ppp/auth.c	90;"	d	file:
PBUF_DEBUG	net/lwip/include/lwip/opt.h	1490;"	d
PBUF_FLAG_PUSH	net/lwip/include/lwip/pbuf.h	62;"	d
PBUF_IP	net/lwip/include/lwip/pbuf.h	/^  PBUF_IP,$/;"	e	enum:__anon13
PBUF_IP_HLEN	net/lwip/include/lwip/pbuf.h	44;"	d
PBUF_LINK	net/lwip/include/lwip/pbuf.h	/^  PBUF_LINK,$/;"	e	enum:__anon13
PBUF_LINK_HLEN	net/lwip/include/lwip/opt.h	780;"	d
PBUF_POOL	net/lwip/include/lwip/pbuf.h	/^  PBUF_POOL \/* pbuf payload refers to RAM *\/$/;"	e	enum:__anon14
PBUF_POOL_BUFSIZE	net/lwip/include/lwip/opt.h	789;"	d
PBUF_POOL_BUFSIZE	net/lwip/jos/lwipopts.h	38;"	d
PBUF_POOL_BUFSIZE_ALIGNED	net/lwip/core/pbuf.c	79;"	d	file:
PBUF_POOL_SIZE	net/lwip/include/lwip/opt.h	309;"	d
PBUF_POOL_SIZE	net/lwip/jos/lwipopts.h	37;"	d
PBUF_RAM	net/lwip/include/lwip/pbuf.h	/^  PBUF_RAM, \/* pbuf data is stored in RAM *\/$/;"	e	enum:__anon14
PBUF_RAW	net/lwip/include/lwip/pbuf.h	/^  PBUF_RAW$/;"	e	enum:__anon13
PBUF_REF	net/lwip/include/lwip/pbuf.h	/^  PBUF_REF, \/* pbuf comes from the pbuf pool *\/$/;"	e	enum:__anon14
PBUF_ROM	net/lwip/include/lwip/pbuf.h	/^  PBUF_ROM, \/* pbuf data is stored in ROM *\/$/;"	e	enum:__anon14
PBUF_TRANSPORT	net/lwip/include/lwip/pbuf.h	/^  PBUF_TRANSPORT,$/;"	e	enum:__anon13
PBUF_TRANSPORT_HLEN	net/lwip/include/lwip/pbuf.h	43;"	d
PCI32_DMA_BOUNCE_THRESHOLD	kern/pcireg.h	708;"	d
PCINT	kern/lapic.c	36;"	d	file:
PCI_BHLC_CODE	kern/pcireg.h	329;"	d
PCI_BHLC_REG	kern/pcireg.h	302;"	d
PCI_BIST	kern/pcireg.h	306;"	d
PCI_BIST_MASK	kern/pcireg.h	305;"	d
PCI_BIST_SHIFT	kern/pcireg.h	304;"	d
PCI_BRIDGE_BUS_PRIMARY_SHIFT	kern/pcireg.h	590;"	d
PCI_BRIDGE_BUS_REG	kern/pcireg.h	589;"	d
PCI_BRIDGE_BUS_SECONDARY_SHIFT	kern/pcireg.h	591;"	d
PCI_BRIDGE_BUS_SUBORDINATE_SHIFT	kern/pcireg.h	592;"	d
PCI_BRIDGE_CONTROL_DISC_TIMER_SERR	kern/pcireg.h	639;"	d
PCI_BRIDGE_CONTROL_DISC_TIMER_STAT	kern/pcireg.h	638;"	d
PCI_BRIDGE_CONTROL_ISA	kern/pcireg.h	630;"	d
PCI_BRIDGE_CONTROL_MABRT	kern/pcireg.h	633;"	d
PCI_BRIDGE_CONTROL_MASK	kern/pcireg.h	627;"	d
PCI_BRIDGE_CONTROL_PERE	kern/pcireg.h	628;"	d
PCI_BRIDGE_CONTROL_PRI_DISC_TIMER	kern/pcireg.h	636;"	d
PCI_BRIDGE_CONTROL_REG	kern/pcireg.h	625;"	d
PCI_BRIDGE_CONTROL_SECBR	kern/pcireg.h	634;"	d
PCI_BRIDGE_CONTROL_SECFASTB2B	kern/pcireg.h	635;"	d
PCI_BRIDGE_CONTROL_SEC_DISC_TIMER	kern/pcireg.h	637;"	d
PCI_BRIDGE_CONTROL_SERR	kern/pcireg.h	629;"	d
PCI_BRIDGE_CONTROL_SHIFT	kern/pcireg.h	626;"	d
PCI_BRIDGE_CONTROL_VGA	kern/pcireg.h	631;"	d
PCI_BRIDGE_IOHIGH_BASE_MASK	kern/pcireg.h	622;"	d
PCI_BRIDGE_IOHIGH_BASE_SHIFT	kern/pcireg.h	620;"	d
PCI_BRIDGE_IOHIGH_LIMIT_MASK	kern/pcireg.h	623;"	d
PCI_BRIDGE_IOHIGH_LIMIT_SHIFT	kern/pcireg.h	621;"	d
PCI_BRIDGE_IOHIGH_REG	kern/pcireg.h	619;"	d
PCI_BRIDGE_IO_32BITS	kern/pcireg.h	601;"	d
PCI_BRIDGE_MEMORY_BASE_MASK	kern/pcireg.h	606;"	d
PCI_BRIDGE_MEMORY_BASE_SHIFT	kern/pcireg.h	604;"	d
PCI_BRIDGE_MEMORY_LIMIT_MASK	kern/pcireg.h	607;"	d
PCI_BRIDGE_MEMORY_LIMIT_SHIFT	kern/pcireg.h	605;"	d
PCI_BRIDGE_MEMORY_REG	kern/pcireg.h	603;"	d
PCI_BRIDGE_PREFETCHBASE32_REG	kern/pcireg.h	616;"	d
PCI_BRIDGE_PREFETCHLIMIT32_REG	kern/pcireg.h	617;"	d
PCI_BRIDGE_PREFETCHMEM_64BITS	kern/pcireg.h	614;"	d
PCI_BRIDGE_PREFETCHMEM_BASE_MASK	kern/pcireg.h	612;"	d
PCI_BRIDGE_PREFETCHMEM_BASE_SHIFT	kern/pcireg.h	610;"	d
PCI_BRIDGE_PREFETCHMEM_LIMIT_MASK	kern/pcireg.h	613;"	d
PCI_BRIDGE_PREFETCHMEM_LIMIT_SHIFT	kern/pcireg.h	611;"	d
PCI_BRIDGE_PREFETCHMEM_REG	kern/pcireg.h	609;"	d
PCI_BRIDGE_STATIO_IOBASE_MASK	kern/pcireg.h	598;"	d
PCI_BRIDGE_STATIO_IOBASE_SHIFT	kern/pcireg.h	595;"	d
PCI_BRIDGE_STATIO_IOLIMIT_MASK	kern/pcireg.h	599;"	d
PCI_BRIDGE_STATIO_IOLIMIT_SHIFT	kern/pcireg.h	596;"	d
PCI_BRIDGE_STATIO_REG	kern/pcireg.h	594;"	d
PCI_BRIDGE_STATIO_STATUS_MASK	kern/pcireg.h	600;"	d
PCI_BRIDGE_STATIO_STATUS_SHIFT	kern/pcireg.h	597;"	d
PCI_CACHELINE	kern/pcireg.h	326;"	d
PCI_CACHELINE_MASK	kern/pcireg.h	325;"	d
PCI_CACHELINE_SHIFT	kern/pcireg.h	324;"	d
PCI_CAPLISTPTR_REG	kern/pcireg.h	412;"	d
PCI_CAPLIST_CAP	kern/pcireg.h	416;"	d
PCI_CAPLIST_NEXT	kern/pcireg.h	415;"	d
PCI_CAPLIST_PTR	kern/pcireg.h	414;"	d
PCI_CAP_AGP	kern/pcireg.h	420;"	d
PCI_CAP_AGP8	kern/pcireg.h	433;"	d
PCI_CAP_AGP_MAJOR	kern/pcireg.h	421;"	d
PCI_CAP_AGP_MINOR	kern/pcireg.h	422;"	d
PCI_CAP_CPCI_HOTSWAP	kern/pcireg.h	426;"	d
PCI_CAP_CPCI_RSRCCTL	kern/pcireg.h	431;"	d
PCI_CAP_DEBUGPORT	kern/pcireg.h	430;"	d
PCI_CAP_HOTPLUG	kern/pcireg.h	432;"	d
PCI_CAP_LDT	kern/pcireg.h	428;"	d
PCI_CAP_MSI	kern/pcireg.h	425;"	d
PCI_CAP_MSIX	kern/pcireg.h	436;"	d
PCI_CAP_PCIEXPRESS	kern/pcireg.h	435;"	d
PCI_CAP_PCIX	kern/pcireg.h	427;"	d
PCI_CAP_PWRMGMT	kern/pcireg.h	419;"	d
PCI_CAP_RESERVED0	kern/pcireg.h	418;"	d
PCI_CAP_SECURE	kern/pcireg.h	434;"	d
PCI_CAP_SLOTID	kern/pcireg.h	424;"	d
PCI_CAP_VENDSPEC	kern/pcireg.h	429;"	d
PCI_CAP_VPD	kern/pcireg.h	423;"	d
PCI_CARDBUS_CAPLISTPTR_REG	kern/pcireg.h	413;"	d
PCI_CARDBUS_CIS_REG	kern/pcireg.h	400;"	d
PCI_CLASS	kern/pcireg.h	118;"	d
PCI_CLASS_BRIDGE	kern/pcireg.h	148;"	d
PCI_CLASS_CODE	kern/pcireg.h	136;"	d
PCI_CLASS_COMMUNICATIONS	kern/pcireg.h	149;"	d
PCI_CLASS_CRYPTO	kern/pcireg.h	158;"	d
PCI_CLASS_DASP	kern/pcireg.h	159;"	d
PCI_CLASS_DISPLAY	kern/pcireg.h	145;"	d
PCI_CLASS_DOCK	kern/pcireg.h	152;"	d
PCI_CLASS_I2O	kern/pcireg.h	156;"	d
PCI_CLASS_INPUT	kern/pcireg.h	151;"	d
PCI_CLASS_MASK	kern/pcireg.h	117;"	d
PCI_CLASS_MASS_STORAGE	kern/pcireg.h	143;"	d
PCI_CLASS_MEMORY	kern/pcireg.h	147;"	d
PCI_CLASS_MULTIMEDIA	kern/pcireg.h	146;"	d
PCI_CLASS_NETWORK	kern/pcireg.h	144;"	d
PCI_CLASS_PREHISTORIC	kern/pcireg.h	142;"	d
PCI_CLASS_PROCESSOR	kern/pcireg.h	153;"	d
PCI_CLASS_REG	kern/pcireg.h	109;"	d
PCI_CLASS_SATCOM	kern/pcireg.h	157;"	d
PCI_CLASS_SERIALBUS	kern/pcireg.h	154;"	d
PCI_CLASS_SHIFT	kern/pcireg.h	116;"	d
PCI_CLASS_SYSTEM	kern/pcireg.h	150;"	d
PCI_CLASS_UNDEFINED	kern/pcireg.h	160;"	d
PCI_CLASS_WIRELESS	kern/pcireg.h	155;"	d
PCI_COMMAND_BACKTOBACK_ENABLE	kern/pcireg.h	89;"	d
PCI_COMMAND_INVALIDATE_ENABLE	kern/pcireg.h	84;"	d
PCI_COMMAND_IO_ENABLE	kern/pcireg.h	80;"	d
PCI_COMMAND_MASK	kern/pcireg.h	72;"	d
PCI_COMMAND_MASTER_ENABLE	kern/pcireg.h	82;"	d
PCI_COMMAND_MEM_ENABLE	kern/pcireg.h	81;"	d
PCI_COMMAND_PALETTE_ENABLE	kern/pcireg.h	85;"	d
PCI_COMMAND_PARITY_ENABLE	kern/pcireg.h	86;"	d
PCI_COMMAND_SERR_ENABLE	kern/pcireg.h	88;"	d
PCI_COMMAND_SHIFT	kern/pcireg.h	71;"	d
PCI_COMMAND_SPECIAL_ENABLE	kern/pcireg.h	83;"	d
PCI_COMMAND_STATUS_CODE	kern/pcireg.h	76;"	d
PCI_COMMAND_STATUS_REG	kern/pcireg.h	70;"	d
PCI_COMMAND_STEPPING_ENABLE	kern/pcireg.h	87;"	d
PCI_HDRTYPE	kern/pcireg.h	311;"	d
PCI_HDRTYPE_DEVICE	kern/pcireg.h	339;"	d
PCI_HDRTYPE_MASK	kern/pcireg.h	310;"	d
PCI_HDRTYPE_MULTIFN	kern/pcireg.h	316;"	d
PCI_HDRTYPE_PCB	kern/pcireg.h	341;"	d
PCI_HDRTYPE_PPB	kern/pcireg.h	340;"	d
PCI_HDRTYPE_SHIFT	kern/pcireg.h	309;"	d
PCI_HDRTYPE_TYPE	kern/pcireg.h	314;"	d
PCI_ID_CODE	kern/pcireg.h	63;"	d
PCI_ID_REG	kern/pcireg.h	48;"	d
PCI_INTERFACE	kern/pcireg.h	128;"	d
PCI_INTERFACE_MASK	kern/pcireg.h	127;"	d
PCI_INTERFACE_SHIFT	kern/pcireg.h	126;"	d
PCI_INTERRUPT_CODE	kern/pcireg.h	575;"	d
PCI_INTERRUPT_GRANT	kern/pcireg.h	557;"	d
PCI_INTERRUPT_GRANT_MASK	kern/pcireg.h	556;"	d
PCI_INTERRUPT_GRANT_SHIFT	kern/pcireg.h	555;"	d
PCI_INTERRUPT_LATENCY	kern/pcireg.h	562;"	d
PCI_INTERRUPT_LATENCY_MASK	kern/pcireg.h	561;"	d
PCI_INTERRUPT_LATENCY_SHIFT	kern/pcireg.h	560;"	d
PCI_INTERRUPT_LINE	kern/pcireg.h	572;"	d
PCI_INTERRUPT_LINE_MASK	kern/pcireg.h	571;"	d
PCI_INTERRUPT_LINE_SHIFT	kern/pcireg.h	570;"	d
PCI_INTERRUPT_PIN	kern/pcireg.h	567;"	d
PCI_INTERRUPT_PIN_A	kern/pcireg.h	582;"	d
PCI_INTERRUPT_PIN_B	kern/pcireg.h	583;"	d
PCI_INTERRUPT_PIN_C	kern/pcireg.h	584;"	d
PCI_INTERRUPT_PIN_D	kern/pcireg.h	585;"	d
PCI_INTERRUPT_PIN_MASK	kern/pcireg.h	566;"	d
PCI_INTERRUPT_PIN_MAX	kern/pcireg.h	586;"	d
PCI_INTERRUPT_PIN_NONE	kern/pcireg.h	581;"	d
PCI_INTERRUPT_PIN_SHIFT	kern/pcireg.h	565;"	d
PCI_INTERRUPT_REG	kern/pcireg.h	538;"	d
PCI_LATTIMER	kern/pcireg.h	321;"	d
PCI_LATTIMER_MASK	kern/pcireg.h	320;"	d
PCI_LATTIMER_SHIFT	kern/pcireg.h	319;"	d
PCI_MAPREG_END	kern/pcireg.h	347;"	d
PCI_MAPREG_IO_ADDR	kern/pcireg.h	384;"	d
PCI_MAPREG_IO_ADDR_MASK	kern/pcireg.h	388;"	d
PCI_MAPREG_IO_SIZE	kern/pcireg.h	386;"	d
PCI_MAPREG_MEM64_ADDR	kern/pcireg.h	378;"	d
PCI_MAPREG_MEM64_ADDR_MASK	kern/pcireg.h	382;"	d
PCI_MAPREG_MEM64_SIZE	kern/pcireg.h	380;"	d
PCI_MAPREG_MEM_ADDR	kern/pcireg.h	372;"	d
PCI_MAPREG_MEM_ADDR_MASK	kern/pcireg.h	376;"	d
PCI_MAPREG_MEM_PREFETCHABLE	kern/pcireg.h	368;"	d
PCI_MAPREG_MEM_PREFETCHABLE_MASK	kern/pcireg.h	370;"	d
PCI_MAPREG_MEM_SIZE	kern/pcireg.h	374;"	d
PCI_MAPREG_MEM_TYPE	kern/pcireg.h	360;"	d
PCI_MAPREG_MEM_TYPE_32BIT	kern/pcireg.h	364;"	d
PCI_MAPREG_MEM_TYPE_32BIT_1M	kern/pcireg.h	365;"	d
PCI_MAPREG_MEM_TYPE_64BIT	kern/pcireg.h	366;"	d
PCI_MAPREG_MEM_TYPE_MASK	kern/pcireg.h	362;"	d
PCI_MAPREG_NUM	kern/pcireg.h	393;"	d
PCI_MAPREG_PCB_END	kern/pcireg.h	350;"	d
PCI_MAPREG_PPB_END	kern/pcireg.h	349;"	d
PCI_MAPREG_ROM	kern/pcireg.h	348;"	d
PCI_MAPREG_ROM_ENABLE	kern/pcireg.h	358;"	d
PCI_MAPREG_SIZE_TO_MASK	kern/pcireg.h	390;"	d
PCI_MAPREG_START	kern/pcireg.h	346;"	d
PCI_MAPREG_TYPE	kern/pcireg.h	352;"	d
PCI_MAPREG_TYPE_IO	kern/pcireg.h	357;"	d
PCI_MAPREG_TYPE_MASK	kern/pcireg.h	354;"	d
PCI_MAPREG_TYPE_MEM	kern/pcireg.h	356;"	d
PCI_MAX_LAT	kern/pcireg.h	547;"	d
PCI_MAX_LAT_MASK	kern/pcireg.h	546;"	d
PCI_MAX_LAT_SHIFT	kern/pcireg.h	545;"	d
PCI_MIN_GNT	kern/pcireg.h	552;"	d
PCI_MIN_GNT_MASK	kern/pcireg.h	551;"	d
PCI_MIN_GNT_SHIFT	kern/pcireg.h	550;"	d
PCI_PCIX_CMD	kern/pcireg.h	477;"	d
PCI_PCIX_CMD_BCNT_1024	kern/pcireg.h	483;"	d
PCI_PCIX_CMD_BCNT_2048	kern/pcireg.h	484;"	d
PCI_PCIX_CMD_BCNT_4096	kern/pcireg.h	485;"	d
PCI_PCIX_CMD_BCNT_512	kern/pcireg.h	482;"	d
PCI_PCIX_CMD_BYTECNT_MASK	kern/pcireg.h	480;"	d
PCI_PCIX_CMD_BYTECNT_SHIFT	kern/pcireg.h	481;"	d
PCI_PCIX_CMD_PERR_RECOVER	kern/pcireg.h	478;"	d
PCI_PCIX_CMD_RELAXED_ORDER	kern/pcireg.h	479;"	d
PCI_PCIX_CMD_SPLTRANS_1	kern/pcireg.h	487;"	d
PCI_PCIX_CMD_SPLTRANS_12	kern/pcireg.h	492;"	d
PCI_PCIX_CMD_SPLTRANS_16	kern/pcireg.h	493;"	d
PCI_PCIX_CMD_SPLTRANS_2	kern/pcireg.h	488;"	d
PCI_PCIX_CMD_SPLTRANS_3	kern/pcireg.h	489;"	d
PCI_PCIX_CMD_SPLTRANS_32	kern/pcireg.h	494;"	d
PCI_PCIX_CMD_SPLTRANS_4	kern/pcireg.h	490;"	d
PCI_PCIX_CMD_SPLTRANS_8	kern/pcireg.h	491;"	d
PCI_PCIX_CMD_SPLTRANS_MASK	kern/pcireg.h	486;"	d
PCI_PCIX_STATUS	kern/pcireg.h	499;"	d
PCI_PCIX_STATUS_133	kern/pcireg.h	504;"	d
PCI_PCIX_STATUS_64BIT	kern/pcireg.h	503;"	d
PCI_PCIX_STATUS_BUS_MASK	kern/pcireg.h	502;"	d
PCI_PCIX_STATUS_DEVCPLX	kern/pcireg.h	507;"	d
PCI_PCIX_STATUS_DEV_MASK	kern/pcireg.h	501;"	d
PCI_PCIX_STATUS_FN_MASK	kern/pcireg.h	500;"	d
PCI_PCIX_STATUS_MAXB_1024	kern/pcireg.h	511;"	d
PCI_PCIX_STATUS_MAXB_2048	kern/pcireg.h	512;"	d
PCI_PCIX_STATUS_MAXB_4096	kern/pcireg.h	513;"	d
PCI_PCIX_STATUS_MAXB_512	kern/pcireg.h	510;"	d
PCI_PCIX_STATUS_MAXB_MASK	kern/pcireg.h	508;"	d
PCI_PCIX_STATUS_MAXB_SHIFT	kern/pcireg.h	509;"	d
PCI_PCIX_STATUS_MAXRS_128K	kern/pcireg.h	531;"	d
PCI_PCIX_STATUS_MAXRS_16K	kern/pcireg.h	528;"	d
PCI_PCIX_STATUS_MAXRS_1K	kern/pcireg.h	524;"	d
PCI_PCIX_STATUS_MAXRS_2K	kern/pcireg.h	525;"	d
PCI_PCIX_STATUS_MAXRS_32K	kern/pcireg.h	529;"	d
PCI_PCIX_STATUS_MAXRS_4K	kern/pcireg.h	526;"	d
PCI_PCIX_STATUS_MAXRS_64K	kern/pcireg.h	530;"	d
PCI_PCIX_STATUS_MAXRS_8K	kern/pcireg.h	527;"	d
PCI_PCIX_STATUS_MAXRS_MASK	kern/pcireg.h	523;"	d
PCI_PCIX_STATUS_MAXST_1	kern/pcireg.h	515;"	d
PCI_PCIX_STATUS_MAXST_12	kern/pcireg.h	520;"	d
PCI_PCIX_STATUS_MAXST_16	kern/pcireg.h	521;"	d
PCI_PCIX_STATUS_MAXST_2	kern/pcireg.h	516;"	d
PCI_PCIX_STATUS_MAXST_3	kern/pcireg.h	517;"	d
PCI_PCIX_STATUS_MAXST_32	kern/pcireg.h	522;"	d
PCI_PCIX_STATUS_MAXST_4	kern/pcireg.h	518;"	d
PCI_PCIX_STATUS_MAXST_8	kern/pcireg.h	519;"	d
PCI_PCIX_STATUS_MAXST_MASK	kern/pcireg.h	514;"	d
PCI_PCIX_STATUS_SCERR	kern/pcireg.h	532;"	d
PCI_PCIX_STATUS_SPLDISC	kern/pcireg.h	505;"	d
PCI_PCIX_STATUS_SPLUNEX	kern/pcireg.h	506;"	d
PCI_PMCR	kern/pcireg.h	453;"	d
PCI_PMCR_D1SUPP	kern/pcireg.h	454;"	d
PCI_PMCR_D2SUPP	kern/pcireg.h	455;"	d
PCI_PMCSR	kern/pcireg.h	457;"	d
PCI_PMCSR_STATE_D0	kern/pcireg.h	459;"	d
PCI_PMCSR_STATE_D1	kern/pcireg.h	460;"	d
PCI_PMCSR_STATE_D2	kern/pcireg.h	461;"	d
PCI_PMCSR_STATE_D3	kern/pcireg.h	462;"	d
PCI_PMCSR_STATE_MASK	kern/pcireg.h	458;"	d
PCI_PRODUCT	kern/pcireg.h	60;"	d
PCI_PRODUCT_MASK	kern/pcireg.h	59;"	d
PCI_PRODUCT_SHIFT	kern/pcireg.h	58;"	d
PCI_REVISION	kern/pcireg.h	133;"	d
PCI_REVISION_MASK	kern/pcireg.h	132;"	d
PCI_REVISION_SHIFT	kern/pcireg.h	131;"	d
PCI_STATUS_66MHZ_SUPPORT	kern/pcireg.h	92;"	d
PCI_STATUS_BACKTOBACK_SUPPORT	kern/pcireg.h	94;"	d
PCI_STATUS_CAPLIST_SUPPORT	kern/pcireg.h	91;"	d
PCI_STATUS_DEVSEL_FAST	kern/pcireg.h	96;"	d
PCI_STATUS_DEVSEL_MASK	kern/pcireg.h	99;"	d
PCI_STATUS_DEVSEL_MEDIUM	kern/pcireg.h	97;"	d
PCI_STATUS_DEVSEL_SLOW	kern/pcireg.h	98;"	d
PCI_STATUS_MASK	kern/pcireg.h	74;"	d
PCI_STATUS_MASTER_ABORT	kern/pcireg.h	102;"	d
PCI_STATUS_MASTER_TARGET_ABORT	kern/pcireg.h	101;"	d
PCI_STATUS_PARITY_DETECT	kern/pcireg.h	104;"	d
PCI_STATUS_PARITY_ERROR	kern/pcireg.h	95;"	d
PCI_STATUS_SHIFT	kern/pcireg.h	73;"	d
PCI_STATUS_SPECIAL_ERROR	kern/pcireg.h	103;"	d
PCI_STATUS_TARGET_TARGET_ABORT	kern/pcireg.h	100;"	d
PCI_STATUS_UDF_SUPPORT	kern/pcireg.h	93;"	d
PCI_SUBCLASS	kern/pcireg.h	123;"	d
PCI_SUBCLASS_BRIDGE_CARDBUS	kern/pcireg.h	211;"	d
PCI_SUBCLASS_BRIDGE_EISA	kern/pcireg.h	206;"	d
PCI_SUBCLASS_BRIDGE_HOST	kern/pcireg.h	204;"	d
PCI_SUBCLASS_BRIDGE_INFINIBAND	kern/pcireg.h	214;"	d
PCI_SUBCLASS_BRIDGE_ISA	kern/pcireg.h	205;"	d
PCI_SUBCLASS_BRIDGE_MC	kern/pcireg.h	207;"	d
PCI_SUBCLASS_BRIDGE_MISC	kern/pcireg.h	215;"	d
PCI_SUBCLASS_BRIDGE_NUBUS	kern/pcireg.h	210;"	d
PCI_SUBCLASS_BRIDGE_PCI	kern/pcireg.h	208;"	d
PCI_SUBCLASS_BRIDGE_PCMCIA	kern/pcireg.h	209;"	d
PCI_SUBCLASS_BRIDGE_RACEWAY	kern/pcireg.h	212;"	d
PCI_SUBCLASS_BRIDGE_STPCI	kern/pcireg.h	213;"	d
PCI_SUBCLASS_COMMUNICATIONS_GPIB	kern/pcireg.h	222;"	d
PCI_SUBCLASS_COMMUNICATIONS_MISC	kern/pcireg.h	224;"	d
PCI_SUBCLASS_COMMUNICATIONS_MODEM	kern/pcireg.h	221;"	d
PCI_SUBCLASS_COMMUNICATIONS_MPSERIAL	kern/pcireg.h	220;"	d
PCI_SUBCLASS_COMMUNICATIONS_PARALLEL	kern/pcireg.h	219;"	d
PCI_SUBCLASS_COMMUNICATIONS_SERIAL	kern/pcireg.h	218;"	d
PCI_SUBCLASS_COMMUNICATIONS_SMARTCARD	kern/pcireg.h	223;"	d
PCI_SUBCLASS_CRYPTO_ENTERTAINMENT	kern/pcireg.h	289;"	d
PCI_SUBCLASS_CRYPTO_MISC	kern/pcireg.h	290;"	d
PCI_SUBCLASS_CRYPTO_NETCOMP	kern/pcireg.h	288;"	d
PCI_SUBCLASS_DASP_DPIO	kern/pcireg.h	293;"	d
PCI_SUBCLASS_DASP_MGMT	kern/pcireg.h	296;"	d
PCI_SUBCLASS_DASP_MISC	kern/pcireg.h	297;"	d
PCI_SUBCLASS_DASP_SYNC	kern/pcireg.h	295;"	d
PCI_SUBCLASS_DASP_TIMEFREQ	kern/pcireg.h	294;"	d
PCI_SUBCLASS_DISPLAY_3D	kern/pcireg.h	189;"	d
PCI_SUBCLASS_DISPLAY_MISC	kern/pcireg.h	190;"	d
PCI_SUBCLASS_DISPLAY_VGA	kern/pcireg.h	187;"	d
PCI_SUBCLASS_DISPLAY_XGA	kern/pcireg.h	188;"	d
PCI_SUBCLASS_DOCK_GENERIC	kern/pcireg.h	243;"	d
PCI_SUBCLASS_DOCK_MISC	kern/pcireg.h	244;"	d
PCI_SUBCLASS_I2O_STANDARD	kern/pcireg.h	278;"	d
PCI_SUBCLASS_INPUT_DIGITIZER	kern/pcireg.h	236;"	d
PCI_SUBCLASS_INPUT_GAMEPORT	kern/pcireg.h	239;"	d
PCI_SUBCLASS_INPUT_KEYBOARD	kern/pcireg.h	235;"	d
PCI_SUBCLASS_INPUT_MISC	kern/pcireg.h	240;"	d
PCI_SUBCLASS_INPUT_MOUSE	kern/pcireg.h	237;"	d
PCI_SUBCLASS_INPUT_SCANNER	kern/pcireg.h	238;"	d
PCI_SUBCLASS_MASK	kern/pcireg.h	122;"	d
PCI_SUBCLASS_MASS_STORAGE_ATA	kern/pcireg.h	172;"	d
PCI_SUBCLASS_MASS_STORAGE_FLOPPY	kern/pcireg.h	169;"	d
PCI_SUBCLASS_MASS_STORAGE_IDE	kern/pcireg.h	168;"	d
PCI_SUBCLASS_MASS_STORAGE_IPI	kern/pcireg.h	170;"	d
PCI_SUBCLASS_MASS_STORAGE_MISC	kern/pcireg.h	174;"	d
PCI_SUBCLASS_MASS_STORAGE_RAID	kern/pcireg.h	171;"	d
PCI_SUBCLASS_MASS_STORAGE_SATA	kern/pcireg.h	173;"	d
PCI_SUBCLASS_MASS_STORAGE_SCSI	kern/pcireg.h	167;"	d
PCI_SUBCLASS_MEMORY_FLASH	kern/pcireg.h	200;"	d
PCI_SUBCLASS_MEMORY_MISC	kern/pcireg.h	201;"	d
PCI_SUBCLASS_MEMORY_RAM	kern/pcireg.h	199;"	d
PCI_SUBCLASS_MULTIMEDIA_AUDIO	kern/pcireg.h	194;"	d
PCI_SUBCLASS_MULTIMEDIA_MISC	kern/pcireg.h	196;"	d
PCI_SUBCLASS_MULTIMEDIA_TELEPHONY	kern/pcireg.h	195;"	d
PCI_SUBCLASS_MULTIMEDIA_VIDEO	kern/pcireg.h	193;"	d
PCI_SUBCLASS_NETWORK_ATM	kern/pcireg.h	180;"	d
PCI_SUBCLASS_NETWORK_ETHERNET	kern/pcireg.h	177;"	d
PCI_SUBCLASS_NETWORK_FDDI	kern/pcireg.h	179;"	d
PCI_SUBCLASS_NETWORK_ISDN	kern/pcireg.h	181;"	d
PCI_SUBCLASS_NETWORK_MISC	kern/pcireg.h	184;"	d
PCI_SUBCLASS_NETWORK_PCIMGMULTICOMP	kern/pcireg.h	183;"	d
PCI_SUBCLASS_NETWORK_TOKENRING	kern/pcireg.h	178;"	d
PCI_SUBCLASS_NETWORK_WORLDFIP	kern/pcireg.h	182;"	d
PCI_SUBCLASS_PREHISTORIC_MISC	kern/pcireg.h	163;"	d
PCI_SUBCLASS_PREHISTORIC_VGA	kern/pcireg.h	164;"	d
PCI_SUBCLASS_PROCESSOR_386	kern/pcireg.h	247;"	d
PCI_SUBCLASS_PROCESSOR_486	kern/pcireg.h	248;"	d
PCI_SUBCLASS_PROCESSOR_ALPHA	kern/pcireg.h	250;"	d
PCI_SUBCLASS_PROCESSOR_COPROC	kern/pcireg.h	253;"	d
PCI_SUBCLASS_PROCESSOR_MIPS	kern/pcireg.h	252;"	d
PCI_SUBCLASS_PROCESSOR_PENTIUM	kern/pcireg.h	249;"	d
PCI_SUBCLASS_PROCESSOR_POWERPC	kern/pcireg.h	251;"	d
PCI_SUBCLASS_SATCOM_AUDIO	kern/pcireg.h	283;"	d
PCI_SUBCLASS_SATCOM_DATA	kern/pcireg.h	285;"	d
PCI_SUBCLASS_SATCOM_TV	kern/pcireg.h	282;"	d
PCI_SUBCLASS_SATCOM_VOICE	kern/pcireg.h	284;"	d
PCI_SUBCLASS_SERIALBUS_ACCESS	kern/pcireg.h	257;"	d
PCI_SUBCLASS_SERIALBUS_CANBUS	kern/pcireg.h	265;"	d
PCI_SUBCLASS_SERIALBUS_FIBER	kern/pcireg.h	260;"	d
PCI_SUBCLASS_SERIALBUS_FIREWIRE	kern/pcireg.h	256;"	d
PCI_SUBCLASS_SERIALBUS_INFINIBAND	kern/pcireg.h	262;"	d
PCI_SUBCLASS_SERIALBUS_IPMI	kern/pcireg.h	263;"	d
PCI_SUBCLASS_SERIALBUS_SERCOS	kern/pcireg.h	264;"	d
PCI_SUBCLASS_SERIALBUS_SMBUS	kern/pcireg.h	261;"	d
PCI_SUBCLASS_SERIALBUS_SSA	kern/pcireg.h	258;"	d
PCI_SUBCLASS_SERIALBUS_USB	kern/pcireg.h	259;"	d
PCI_SUBCLASS_SHIFT	kern/pcireg.h	121;"	d
PCI_SUBCLASS_SYSTEM_DMA	kern/pcireg.h	228;"	d
PCI_SUBCLASS_SYSTEM_MISC	kern/pcireg.h	232;"	d
PCI_SUBCLASS_SYSTEM_PCIHOTPLUG	kern/pcireg.h	231;"	d
PCI_SUBCLASS_SYSTEM_PIC	kern/pcireg.h	227;"	d
PCI_SUBCLASS_SYSTEM_RTC	kern/pcireg.h	230;"	d
PCI_SUBCLASS_SYSTEM_TIMER	kern/pcireg.h	229;"	d
PCI_SUBCLASS_WIRELESS_802_11A	kern/pcireg.h	273;"	d
PCI_SUBCLASS_WIRELESS_802_11B	kern/pcireg.h	274;"	d
PCI_SUBCLASS_WIRELESS_BLUETOOTH	kern/pcireg.h	271;"	d
PCI_SUBCLASS_WIRELESS_BROADBAND	kern/pcireg.h	272;"	d
PCI_SUBCLASS_WIRELESS_CONSUMERIR	kern/pcireg.h	269;"	d
PCI_SUBCLASS_WIRELESS_IRDA	kern/pcireg.h	268;"	d
PCI_SUBCLASS_WIRELESS_MISC	kern/pcireg.h	275;"	d
PCI_SUBCLASS_WIRELESS_RF	kern/pcireg.h	270;"	d
PCI_SUBSYS_ID_REG	kern/pcireg.h	407;"	d
PCI_VENDOR	kern/pcireg.h	55;"	d
PCI_VENDOR_MASK	kern/pcireg.h	54;"	d
PCI_VENDOR_SHIFT	kern/pcireg.h	53;"	d
PCI_VPDRES_ISLARGE	kern/pcireg.h	657;"	d
PCI_VPDRES_LARGE_NAME	kern/pcireg.h	662;"	d
PCI_VPDRES_SMALL_LENGTH	kern/pcireg.h	659;"	d
PCI_VPDRES_SMALL_NAME	kern/pcireg.h	660;"	d
PCI_VPDRES_TYPE_COMPATIBLE_DEVICE_ID	kern/pcireg.h	664;"	d
PCI_VPDRES_TYPE_END_TAG	kern/pcireg.h	666;"	d
PCI_VPDRES_TYPE_IDENTIFIER_STRING	kern/pcireg.h	668;"	d
PCI_VPDRES_TYPE_VENDOR_DEFINED	kern/pcireg.h	665;"	d
PCI_VPDRES_TYPE_VPD	kern/pcireg.h	669;"	d
PCI_VPD_ADDRESS	kern/pcireg.h	443;"	d
PCI_VPD_ADDRESS_MASK	kern/pcireg.h	441;"	d
PCI_VPD_ADDRESS_SHIFT	kern/pcireg.h	442;"	d
PCI_VPD_DATAREG	kern/pcireg.h	445;"	d
PCI_VPD_OPFLAG	kern/pcireg.h	446;"	d
PDADDRESS	net/lwip/netif/ppp/ppp.c	/^  PDADDRESS,   \/* Process address field. *\/$/;"	e	enum:__anon5	file:
PDCONTROL	net/lwip/netif/ppp/ppp.c	/^  PDCONTROL,   \/* Process control field. *\/$/;"	e	enum:__anon5	file:
PDDATA	net/lwip/netif/ppp/ppp.c	/^  PDDATA       \/* Process data byte. *\/$/;"	e	enum:__anon5	file:
PDIDLE	net/lwip/netif/ppp/ppp.c	/^  PDIDLE = 0,  \/* Idle state - waiting. *\/$/;"	e	enum:__anon5	file:
PDPROTOCOL1	net/lwip/netif/ppp/ppp.c	/^  PDPROTOCOL1, \/* Process protocol field 1. *\/$/;"	e	enum:__anon5	file:
PDPROTOCOL2	net/lwip/netif/ppp/ppp.c	/^  PDPROTOCOL2, \/* Process protocol field 2. *\/$/;"	e	enum:__anon5	file:
PDSTART	net/lwip/netif/ppp/ppp.c	/^  PDSTART,     \/* Process start flag. *\/$/;"	e	enum:__anon5	file:
PDX	inc/mmu.h	33;"	d
PDXSHIFT	inc/mmu.h	55;"	d
PERF_START	net/lwip/jos/arch/perf.h	4;"	d
PERF_STOP	net/lwip/jos/arch/perf.h	5;"	d
PERIODIC	kern/lapic.c	35;"	d	file:
PERL	GNUmakefile	/^PERL	:= perl$/;"	m
PER_TCP_PCB_BUFFER	net/lwip/jos/lwipopts.h	34;"	d
PFTEMP	inc/memlayout.h	137;"	d
PF_INET	net/lwip/include/lwip/sockets.h	119;"	d
PF_UNSPEC	net/lwip/include/lwip/sockets.h	120;"	d
PGADDR	inc/mmu.h	42;"	d
PGNUM	inc/mmu.h	30;"	d
PGOFF	inc/mmu.h	39;"	d
PGSHIFT	inc/mmu.h	49;"	d
PGSIZE	inc/mmu.h	48;"	d
PHASE_AUTHENTICATE	net/lwip/netif/ppp/lcp.h	/^  PHASE_AUTHENTICATE,$/;"	e	enum:__anon6
PHASE_CALLBACK	net/lwip/netif/ppp/lcp.h	/^  PHASE_CALLBACK,$/;"	e	enum:__anon6
PHASE_DEAD	net/lwip/netif/ppp/lcp.h	/^  PHASE_DEAD = 0,$/;"	e	enum:__anon6
PHASE_ESTABLISH	net/lwip/netif/ppp/lcp.h	/^  PHASE_ESTABLISH,$/;"	e	enum:__anon6
PHASE_INITIALIZE	net/lwip/netif/ppp/lcp.h	/^  PHASE_INITIALIZE,$/;"	e	enum:__anon6
PHASE_NETWORK	net/lwip/netif/ppp/lcp.h	/^  PHASE_NETWORK,$/;"	e	enum:__anon6
PHASE_TERMINATE	net/lwip/netif/ppp/lcp.h	/^  PHASE_TERMINATE$/;"	e	enum:__anon6
PIPEBUFSIZ	lib/pipe.c	20;"	d	file:
PKTMAP	net/lwip/jos/jif/jif.c	47;"	d	file:
PORT	user/echosrv.c	5;"	d	file:
PORT	user/echotest.c	7;"	d	file:
PORT	user/httpd.c	5;"	d	file:
PORT7	GNUmakefile	/^PORT7	:= $(shell expr $(GDBPORT) + 1)$/;"	m
PORT80	GNUmakefile	/^PORT80	:= $(shell expr $(GDBPORT) + 2)$/;"	m
PPPAUTHTYPE_ANY	net/lwip/netif/ppp/ppp.h	/^    PPPAUTHTYPE_ANY,$/;"	e	enum:pppAuthType
PPPAUTHTYPE_CHAP	net/lwip/netif/ppp/ppp.h	/^    PPPAUTHTYPE_CHAP$/;"	e	enum:pppAuthType
PPPAUTHTYPE_NONE	net/lwip/netif/ppp/ppp.h	/^    PPPAUTHTYPE_NONE,$/;"	e	enum:pppAuthType
PPPAUTHTYPE_PAP	net/lwip/netif/ppp/ppp.h	/^    PPPAUTHTYPE_PAP,$/;"	e	enum:pppAuthType
PPPCTLG_ERRCODE	net/lwip/netif/ppp/ppp.h	252;"	d
PPPCTLG_FD	net/lwip/netif/ppp/ppp.h	253;"	d
PPPCTLG_UPSTATUS	net/lwip/netif/ppp/ppp.h	250;"	d
PPPCTLS_ERRCODE	net/lwip/netif/ppp/ppp.h	251;"	d
PPPControl	net/lwip/netif/ppp/ppp.c	/^} PPPControl;$/;"	t	typeref:struct:PPPControl_s	file:
PPPControl_s	net/lwip/netif/ppp/ppp.c	/^typedef struct PPPControl_s {$/;"	s	file:
PPPDEBUG	net/lwip/netif/ppp/pppdebug.h	72;"	d
PPPDEBUG	net/lwip/netif/ppp/pppdebug.h	82;"	d
PPPDEBUG_H	net/lwip/netif/ppp/pppdebug.h	37;"	d
PPPDevStates	net/lwip/netif/ppp/ppp.c	/^} PPPDevStates;$/;"	t	typeref:enum:__anon5	file:
PPPERR_ALLOC	net/lwip/netif/ppp/ppp.h	237;"	d
PPPERR_AUTHFAIL	net/lwip/netif/ppp/ppp.h	240;"	d
PPPERR_CONNECT	net/lwip/netif/ppp/ppp.h	239;"	d
PPPERR_DEVICE	net/lwip/netif/ppp/ppp.h	236;"	d
PPPERR_NONE	net/lwip/netif/ppp/ppp.h	233;"	d
PPPERR_OPEN	net/lwip/netif/ppp/ppp.h	235;"	d
PPPERR_PARAM	net/lwip/netif/ppp/ppp.h	234;"	d
PPPERR_PROTOCOL	net/lwip/netif/ppp/ppp.h	241;"	d
PPPERR_USER	net/lwip/netif/ppp/ppp.h	238;"	d
PPPOE_ADD_16	net/lwip/netif/ppp/ppp_oe.c	170;"	d	file:
PPPOE_ADD_HEADER	net/lwip/netif/ppp/ppp_oe.c	175;"	d	file:
PPPOE_CODE_PADI	net/lwip/include/netif/ppp_oe.h	128;"	d
PPPOE_CODE_PADO	net/lwip/include/netif/ppp_oe.h	129;"	d
PPPOE_CODE_PADR	net/lwip/include/netif/ppp_oe.h	130;"	d
PPPOE_CODE_PADS	net/lwip/include/netif/ppp_oe.h	131;"	d
PPPOE_CODE_PADT	net/lwip/include/netif/ppp_oe.h	132;"	d
PPPOE_DISC_MAXPADI	net/lwip/netif/ppp/ppp_oe.c	183;"	d	file:
PPPOE_DISC_MAXPADR	net/lwip/netif/ppp/ppp_oe.c	184;"	d	file:
PPPOE_DISC_TIMEOUT	net/lwip/netif/ppp/ppp_oe.c	181;"	d	file:
PPPOE_HEADERLEN	net/lwip/include/netif/ppp_oe.h	114;"	d
PPPOE_MAXMTU	net/lwip/include/netif/ppp_oe.h	139;"	d
PPPOE_MAXMTU	net/lwip/netif/ppp/lcp.c	72;"	d	file:
PPPOE_SLOW_RETRY	net/lwip/netif/ppp/ppp_oe.c	182;"	d	file:
PPPOE_STATE_CLOSING	net/lwip/include/netif/ppp_oe.h	110;"	d
PPPOE_STATE_INITIAL	net/lwip/include/netif/ppp_oe.h	106;"	d
PPPOE_STATE_PADI_SENT	net/lwip/include/netif/ppp_oe.h	107;"	d
PPPOE_STATE_PADO_SENT	net/lwip/include/netif/ppp_oe.h	112;"	d
PPPOE_STATE_PADR_SENT	net/lwip/include/netif/ppp_oe.h	108;"	d
PPPOE_STATE_SESSION	net/lwip/include/netif/ppp_oe.h	109;"	d
PPPOE_SUPPORT	net/lwip/include/lwip/opt.h	1258;"	d
PPPOE_TAG_ACCOOKIE	net/lwip/include/netif/ppp_oe.h	121;"	d
PPPOE_TAG_ACNAME	net/lwip/include/netif/ppp_oe.h	119;"	d
PPPOE_TAG_ACSYS_ERR	net/lwip/include/netif/ppp_oe.h	125;"	d
PPPOE_TAG_EOL	net/lwip/include/netif/ppp_oe.h	117;"	d
PPPOE_TAG_GENERIC_ERR	net/lwip/include/netif/ppp_oe.h	126;"	d
PPPOE_TAG_HUNIQUE	net/lwip/include/netif/ppp_oe.h	120;"	d
PPPOE_TAG_RELAYSID	net/lwip/include/netif/ppp_oe.h	123;"	d
PPPOE_TAG_SNAME	net/lwip/include/netif/ppp_oe.h	118;"	d
PPPOE_TAG_SNAME_ERR	net/lwip/include/netif/ppp_oe.h	124;"	d
PPPOE_TAG_VENDOR	net/lwip/include/netif/ppp_oe.h	122;"	d
PPPOE_VERTYPE	net/lwip/include/netif/ppp_oe.h	115;"	d
PPPOS_SUPPORT	net/lwip/include/lwip/opt.h	1265;"	d
PPP_ADDRESS	net/lwip/netif/ppp/ppp.c	119;"	d	file:
PPP_ALLSTATIONS	net/lwip/netif/ppp/ppp.h	125;"	d
PPP_AT	net/lwip/netif/ppp/ppp.h	135;"	d
PPP_ATCP	net/lwip/netif/ppp/ppp.h	140;"	d
PPP_CBCP	net/lwip/netif/ppp/ppp.h	146;"	d
PPP_CCP	net/lwip/netif/ppp/ppp.h	141;"	d
PPP_CHAP	net/lwip/netif/ppp/ppp.h	145;"	d
PPP_COMP	net/lwip/netif/ppp/ppp.h	138;"	d
PPP_CONTROL	net/lwip/netif/ppp/ppp.c	120;"	d	file:
PPP_DEBUG	net/lwip/include/lwip/opt.h	1659;"	d
PPP_DEFMRU	net/lwip/include/lwip/opt.h	1393;"	d
PPP_ESCAPE	net/lwip/netif/ppp/ppp.h	128;"	d
PPP_FCS	net/lwip/netif/ppp/ppp.h	153;"	d
PPP_FCSLEN	net/lwip/netif/ppp/ppp.h	119;"	d
PPP_FLAG	net/lwip/netif/ppp/ppp.h	127;"	d
PPP_GOODFCS	net/lwip/netif/ppp/ppp.h	152;"	d
PPP_H	net/lwip/netif/ppp/ppp.h	35;"	d
PPP_HDRLEN	net/lwip/netif/ppp/ppp.h	118;"	d
PPP_INITFCS	net/lwip/netif/ppp/ppp.h	151;"	d
PPP_IP	net/lwip/netif/ppp/ppp.h	134;"	d
PPP_IPCP	net/lwip/netif/ppp/ppp.h	139;"	d
PPP_LCP	net/lwip/netif/ppp/ppp.h	142;"	d
PPP_LQR	net/lwip/netif/ppp/ppp.h	144;"	d
PPP_MAXIDLEFLAG	net/lwip/include/lwip/opt.h	1373;"	d
PPP_MAXMRU	net/lwip/include/lwip/opt.h	1391;"	d
PPP_MAXMTU	net/lwip/include/lwip/opt.h	1387;"	d
PPP_MINMRU	net/lwip/include/lwip/opt.h	1395;"	d
PPP_MINMTU	net/lwip/include/lwip/opt.h	1389;"	d
PPP_MRU	net/lwip/include/lwip/opt.h	1390;"	d
PPP_MTU	net/lwip/include/lwip/opt.h	1384;"	d
PPP_OE_H	net/lwip/include/netif/ppp_oe.h	71;"	d
PPP_PAP	net/lwip/netif/ppp/ppp.h	143;"	d
PPP_PROTOCOL	net/lwip/netif/ppp/ppp.c	121;"	d	file:
PPP_SUPPORT	net/lwip/include/lwip/opt.h	1251;"	d
PPP_THREAD_NAME	net/lwip/include/lwip/opt.h	964;"	d
PPP_THREAD_PRIO	net/lwip/include/lwip/opt.h	982;"	d
PPP_THREAD_STACKSIZE	net/lwip/include/lwip/opt.h	973;"	d
PPP_TRANS	net/lwip/netif/ppp/ppp.h	129;"	d
PPP_UI	net/lwip/netif/ppp/ppp.h	126;"	d
PPP_VJC_COMP	net/lwip/netif/ppp/ppp.h	136;"	d
PPP_VJC_UNCOMP	net/lwip/netif/ppp/ppp.h	137;"	d
PRINTMSG	net/lwip/netif/ppp/ppp.h	215;"	d
PRINTMSG	net/lwip/netif/ppp/ppp.h	217;"	d
PROBE_MAX	net/lwip/include/ipv4/lwip/autoip.h	62;"	d
PROBE_MIN	net/lwip/include/ipv4/lwip/autoip.h	61;"	d
PROBE_NUM	net/lwip/include/ipv4/lwip/autoip.h	63;"	d
PROBE_WAIT	net/lwip/include/ipv4/lwip/autoip.h	60;"	d
PROTO_NAME	net/lwip/netif/ppp/fsm.c	106;"	d	file:
PROTREJ	net/lwip/netif/ppp/lcp.h	78;"	d
PTABLE_MAGIC	inc/partition.h	14;"	d
PTABLE_MAGIC_OFFSET	inc/partition.h	13;"	d
PTABLE_OFFSET	inc/partition.h	11;"	d
PTE_A	inc/mmu.h	63;"	d
PTE_ADDR	inc/mmu.h	76;"	d
PTE_AVAIL	inc/mmu.h	70;"	d
PTE_CONTINUED	lib/malloc.c	23;"	d	file:
PTE_COW	lib/fork.c	8;"	d	file:
PTE_D	inc/mmu.h	64;"	d
PTE_G	inc/mmu.h	66;"	d
PTE_P	inc/mmu.h	58;"	d
PTE_PCD	inc/mmu.h	62;"	d
PTE_PS	inc/mmu.h	65;"	d
PTE_PWT	inc/mmu.h	61;"	d
PTE_SHARE	inc/lib.h	85;"	d
PTE_SYSCALL	inc/mmu.h	73;"	d
PTE_U	inc/mmu.h	60;"	d
PTE_W	inc/mmu.h	59;"	d
PTSHIFT	inc/mmu.h	52;"	d
PTSIZE	inc/mmu.h	51;"	d
PTX	inc/mmu.h	36;"	d
PTXSHIFT	inc/mmu.h	54;"	d
PTYPE_DOS_EXTENDED	inc/partition.h	20;"	d
PTYPE_JOSFS	inc/partition.h	18;"	d
PTYPE_JOS_KERN	inc/partition.h	17;"	d
PTYPE_LINUX_EXTENDED	inc/partition.h	22;"	d
PTYPE_W95_EXTENDED	inc/partition.h	21;"	d
PUTCHAR	net/lwip/netif/ppp/ppp.h	179;"	d
PUTLONG	net/lwip/netif/ppp/ppp.h	199;"	d
PUTSHORT	net/lwip/netif/ppp/ppp.h	188;"	d
PageInfo	inc/memlayout.h	/^struct PageInfo {$/;"	s
Partitiondesc	inc/partition.h	/^struct Partitiondesc {$/;"	s
Pipe	lib/pipe.c	/^struct Pipe {$/;"	s	file:
Proghdr	inc/elf.h	/^struct Proghdr {$/;"	s
Pseudodesc	inc/mmu.h	/^struct Pseudodesc {$/;"	s
PushRegs	inc/trap.h	/^struct PushRegs {$/;"	s
QEMU	GNUmakefile	/^QEMU := $(shell if which qemu > \/dev\/null; \\$/;"	m
QEMU	gradelib.py	/^class QEMU(object):$/;"	c
QEMUOPTS	GNUmakefile	/^QEMUOPTS = -hda $(OBJDIR)\/kern\/kernel.img -serial mon:stdio -gdb tcp::$(GDBPORT)$/;"	m
QUEUE_SIZE	net/ns.h	11;"	d
RAH_INIT	kern/e1000.h	16;"	d
RANDM_H	net/lwip/netif/ppp/randm.h	35;"	d
RANDPOOLSZ	net/lwip/netif/ppp/randm.c	46;"	d	file:
RATE_LIMIT_INTERVAL	net/lwip/include/ipv4/lwip/autoip.h	68;"	d
RAW_DEBUG	net/lwip/include/lwip/opt.h	1553;"	d
RAW_TTL	net/lwip/include/lwip/opt.h	471;"	d
RDLEN_ALIGN	kern/e1000.h	24;"	d
REJCIADDR	net/lwip/netif/ppp/ipcp.c	793;"	d	file:
REJCICBCP	net/lwip/netif/ppp/lcp.c	1138;"	d	file:
REJCICHAP	net/lwip/netif/ppp/lcp.c	1090;"	d	file:
REJCIDNS	net/lwip/netif/ppp/ipcp.c	843;"	d	file:
REJCILONG	net/lwip/netif/ppp/lcp.c	1107;"	d	file:
REJCILQR	net/lwip/netif/ppp/lcp.c	1122;"	d	file:
REJCISHORT	net/lwip/netif/ppp/lcp.c	1075;"	d	file:
REJCIVJ	net/lwip/netif/ppp/ipcp.c	818;"	d	file:
REJCIVOID	net/lwip/netif/ppp/lcp.c	1065;"	d	file:
RELOC	kern/entry.S	/^#define	RELOC(x) ((x) - KERNBASE)$/;"	d
RELOC	kern/mpentry.S	/^#define RELOC(x) ((x) - KERNBASE)$/;"	d
REQVA	lib/nsipc.c	8;"	d	file:
REQVA	net/ns.h	12;"	d
ROTATE_LEFT	net/lwip/netif/ppp/md5.c	77;"	d	file:
ROUNDDOWN	inc/types.h	58;"	d
ROUNDUP	fs/fsformat.c	34;"	d	file:
ROUNDUP	inc/types.h	64;"	d
ROUTER_ALERT	net/lwip/include/ipv4/lwip/igmp.h	55;"	d
ROUTER_ALERTLEN	net/lwip/include/ipv4/lwip/igmp.h	56;"	d
Runner	gradelib.py	/^class Runner():$/;"	c
S11	net/lwip/netif/ppp/md5.c	223;"	d	file:
S12	net/lwip/netif/ppp/md5.c	224;"	d	file:
S13	net/lwip/netif/ppp/md5.c	225;"	d	file:
S14	net/lwip/netif/ppp/md5.c	226;"	d	file:
S16_F	net/lwip/jos/arch/cc.h	26;"	d
S21	net/lwip/netif/ppp/md5.c	245;"	d	file:
S22	net/lwip/netif/ppp/md5.c	246;"	d	file:
S23	net/lwip/netif/ppp/md5.c	247;"	d	file:
S24	net/lwip/netif/ppp/md5.c	248;"	d	file:
S31	net/lwip/netif/ppp/md5.c	267;"	d	file:
S32	net/lwip/netif/ppp/md5.c	268;"	d	file:
S32_F	net/lwip/jos/arch/cc.h	30;"	d
S33	net/lwip/netif/ppp/md5.c	269;"	d	file:
S34	net/lwip/netif/ppp/md5.c	270;"	d	file:
S41	net/lwip/netif/ppp/md5.c	289;"	d	file:
S42	net/lwip/netif/ppp/md5.c	290;"	d	file:
S43	net/lwip/netif/ppp/md5.c	291;"	d	file:
S44	net/lwip/netif/ppp/md5.c	292;"	d	file:
SAVE_REGS	user/faultregs.c	13;"	d	file:
SCROLLLOCK	kern/console.c	227;"	d	file:
SECTSIZE	boot/main.c	32;"	d	file:
SECTSIZE	fs/fs.h	4;"	d
SEG	inc/mmu.h	142;"	d
SEG	inc/mmu.h	172;"	d
SEG16	inc/mmu.h	176;"	d
SEG_FAULT	inc/mmu.h	170;"	d
SEG_NULL	inc/mmu.h	139;"	d
SEG_NULL	inc/mmu.h	168;"	d
SETCALLGATE	inc/mmu.h	296;"	d
SETGATE	inc/mmu.h	282;"	d
SHIFT	kern/console.c	221;"	d	file:
SIOCATMARK	net/lwip/include/lwip/sockets.h	263;"	d
SIOCGHIWAT	net/lwip/include/lwip/sockets.h	260;"	d
SIOCGLOWAT	net/lwip/include/lwip/sockets.h	262;"	d
SIOCSHIWAT	net/lwip/include/lwip/sockets.h	259;"	d
SIOCSLOWAT	net/lwip/include/lwip/sockets.h	261;"	d
SIZEOF_STRUCT_MEM	net/lwip/core/mem.c	169;"	d	file:
SIZEOF_STRUCT_PBUF	net/lwip/core/pbuf.c	76;"	d	file:
SLIPIF_THREAD_NAME	net/lwip/include/lwip/opt.h	939;"	d
SLIPIF_THREAD_PRIO	net/lwip/include/lwip/opt.h	957;"	d
SLIPIF_THREAD_STACKSIZE	net/lwip/include/lwip/opt.h	948;"	d
SLIP_DEBUG	net/lwip/include/lwip/opt.h	1666;"	d
SLIP_END	net/lwip/netif/slipif.c	57;"	d	file:
SLIP_ESC	net/lwip/netif/slipif.c	58;"	d	file:
SLIP_ESC_END	net/lwip/netif/slipif.c	59;"	d	file:
SLIP_ESC_ESC	net/lwip/netif/slipif.c	60;"	d	file:
SMEMCPY	net/lwip/include/lwip/opt.h	84;"	d
SNMP_ASN1_APPLIC	net/lwip/include/lwip/snmp_asn1.h	48;"	d
SNMP_ASN1_CONSTR	net/lwip/include/lwip/snmp_asn1.h	51;"	d
SNMP_ASN1_CONTXT	net/lwip/include/lwip/snmp_asn1.h	49;"	d
SNMP_ASN1_COUNTER	net/lwip/include/lwip/snmp_asn1.h	63;"	d
SNMP_ASN1_GAUGE	net/lwip/include/lwip/snmp_asn1.h	64;"	d
SNMP_ASN1_INTEG	net/lwip/include/lwip/snmp_asn1.h	55;"	d
SNMP_ASN1_IPADDR	net/lwip/include/lwip/snmp_asn1.h	62;"	d
SNMP_ASN1_NUL	net/lwip/include/lwip/snmp_asn1.h	57;"	d
SNMP_ASN1_OBJ_ID	net/lwip/include/lwip/snmp_asn1.h	58;"	d
SNMP_ASN1_OC_STR	net/lwip/include/lwip/snmp_asn1.h	56;"	d
SNMP_ASN1_OPAQUE	net/lwip/include/lwip/snmp_asn1.h	66;"	d
SNMP_ASN1_PDU_GET_NEXT_REQ	net/lwip/include/lwip/snmp_asn1.h	70;"	d
SNMP_ASN1_PDU_GET_REQ	net/lwip/include/lwip/snmp_asn1.h	69;"	d
SNMP_ASN1_PDU_GET_RESP	net/lwip/include/lwip/snmp_asn1.h	71;"	d
SNMP_ASN1_PDU_SET_REQ	net/lwip/include/lwip/snmp_asn1.h	72;"	d
SNMP_ASN1_PDU_TRAP	net/lwip/include/lwip/snmp_asn1.h	73;"	d
SNMP_ASN1_PRIMIT	net/lwip/include/lwip/snmp_asn1.h	52;"	d
SNMP_ASN1_SEQ	net/lwip/include/lwip/snmp_asn1.h	59;"	d
SNMP_ASN1_TIMETICKS	net/lwip/include/lwip/snmp_asn1.h	65;"	d
SNMP_ASN1_UNIV	net/lwip/include/lwip/snmp_asn1.h	47;"	d
SNMP_COMMUNITY_STR_LEN	net/lwip/include/lwip/snmp_msg.h	214;"	d
SNMP_CONCURRENT_REQUESTS	net/lwip/include/lwip/opt.h	531;"	d
SNMP_ENTERPRISE_ID	net/lwip/core/snmp/mib2.c	65;"	d	file:
SNMP_ES_BADVALUE	net/lwip/include/lwip/snmp_msg.h	64;"	d
SNMP_ES_GENERROR	net/lwip/include/lwip/snmp_msg.h	66;"	d
SNMP_ES_NOERROR	net/lwip/include/lwip/snmp_msg.h	61;"	d
SNMP_ES_NOSUCHNAME	net/lwip/include/lwip/snmp_msg.h	63;"	d
SNMP_ES_READONLY	net/lwip/include/lwip/snmp_msg.h	65;"	d
SNMP_ES_TOOBIG	net/lwip/include/lwip/snmp_msg.h	62;"	d
SNMP_GENTRAP_AUTHFAIL	net/lwip/include/lwip/snmp_msg.h	70;"	d
SNMP_GENTRAP_COLDSTART	net/lwip/include/lwip/snmp_msg.h	68;"	d
SNMP_GENTRAP_ENTERPRISESPC	net/lwip/include/lwip/snmp_msg.h	71;"	d
SNMP_GENTRAP_WARMSTART	net/lwip/include/lwip/snmp_msg.h	69;"	d
SNMP_GET_SYSUPTIME	net/lwip/core/snmp/mib2.c	74;"	d	file:
SNMP_IN_PORT	net/lwip/include/lwip/snmp_msg.h	53;"	d
SNMP_MIB_DEBUG	net/lwip/include/lwip/opt.h	1694;"	d
SNMP_MSG_DEBUG	net/lwip/include/lwip/opt.h	1687;"	d
SNMP_MSG_EMPTY	net/lwip/include/lwip/snmp_msg.h	195;"	d
SNMP_MSG_EXTERNAL_GET_OBJDEF	net/lwip/include/lwip/snmp_msg.h	208;"	d
SNMP_MSG_EXTERNAL_GET_OBJDEF_S	net/lwip/include/lwip/snmp_msg.h	211;"	d
SNMP_MSG_EXTERNAL_GET_VALUE	net/lwip/include/lwip/snmp_msg.h	209;"	d
SNMP_MSG_EXTERNAL_SET_TEST	net/lwip/include/lwip/snmp_msg.h	210;"	d
SNMP_MSG_EXTERNAL_SET_VALUE	net/lwip/include/lwip/snmp_msg.h	212;"	d
SNMP_MSG_INTERNAL_GET_OBJDEF	net/lwip/include/lwip/snmp_msg.h	200;"	d
SNMP_MSG_INTERNAL_GET_OBJDEF_S	net/lwip/include/lwip/snmp_msg.h	203;"	d
SNMP_MSG_INTERNAL_GET_VALUE	net/lwip/include/lwip/snmp_msg.h	201;"	d
SNMP_MSG_INTERNAL_SET_TEST	net/lwip/include/lwip/snmp_msg.h	202;"	d
SNMP_MSG_INTERNAL_SET_VALUE	net/lwip/include/lwip/snmp_msg.h	204;"	d
SNMP_MSG_SEARCH_OBJ	net/lwip/include/lwip/snmp_msg.h	197;"	d
SNMP_PRIVATE_MIB	net/lwip/include/lwip/opt.h	546;"	d
SNMP_SAFE_REQUESTS	net/lwip/include/lwip/opt.h	555;"	d
SNMP_SYSOBJID	net/lwip/core/snmp/mib2.c	67;"	d	file:
SNMP_SYSOBJID_LEN	net/lwip/core/snmp/mib2.c	66;"	d	file:
SNMP_SYSSERVICES	net/lwip/core/snmp/mib2.c	70;"	d	file:
SNMP_SYSUPTIME_INTERVAL	net/lwip/include/lwip/snmp.h	85;"	d
SNMP_TRAP_DESTINATIONS	net/lwip/include/lwip/opt.h	539;"	d
SNMP_TRAP_PORT	net/lwip/include/lwip/snmp_msg.h	58;"	d
SOCKETS_DEBUG	net/lwip/include/lwip/opt.h	1511;"	d
SOCK_DGRAM	net/lwip/include/lwip/sockets.h	69;"	d
SOCK_RAW	net/lwip/include/lwip/sockets.h	70;"	d
SOCK_STREAM	net/lwip/include/lwip/sockets.h	68;"	d
SOF_ACCEPTCONN	net/lwip/include/ipv4/lwip/ip.h	102;"	d
SOF_BROADCAST	net/lwip/include/ipv4/lwip/ip.h	106;"	d
SOF_DEBUG	net/lwip/include/ipv4/lwip/ip.h	101;"	d
SOF_DONTROUTE	net/lwip/include/ipv4/lwip/ip.h	105;"	d
SOF_KEEPALIVE	net/lwip/include/ipv4/lwip/ip.h	104;"	d
SOF_LINGER	net/lwip/include/ipv4/lwip/ip.h	108;"	d
SOF_OOBINLINE	net/lwip/include/ipv4/lwip/ip.h	109;"	d
SOF_REUSEADDR	net/lwip/include/ipv4/lwip/ip.h	103;"	d
SOF_REUSEPORT	net/lwip/include/ipv4/lwip/ip.h	110;"	d
SOF_USELOOPBACK	net/lwip/include/ipv4/lwip/ip.h	107;"	d
SOL_SOCKET	net/lwip/include/lwip/sockets.h	114;"	d
SO_ACCEPTCONN	net/lwip/include/lwip/sockets.h	76;"	d
SO_BROADCAST	net/lwip/include/lwip/sockets.h	80;"	d
SO_CONTIMEO	net/lwip/include/lwip/sockets.h	99;"	d
SO_DEBUG	net/lwip/include/lwip/sockets.h	75;"	d
SO_DONTLINGER	net/lwip/include/lwip/sockets.h	86;"	d
SO_DONTROUTE	net/lwip/include/lwip/sockets.h	79;"	d
SO_ERROR	net/lwip/include/lwip/sockets.h	97;"	d
SO_KEEPALIVE	net/lwip/include/lwip/sockets.h	78;"	d
SO_LINGER	net/lwip/include/lwip/sockets.h	82;"	d
SO_NO_CHECK	net/lwip/include/lwip/sockets.h	100;"	d
SO_OOBINLINE	net/lwip/include/lwip/sockets.h	83;"	d
SO_RCVBUF	net/lwip/include/lwip/sockets.h	92;"	d
SO_RCVLOWAT	net/lwip/include/lwip/sockets.h	94;"	d
SO_RCVTIMEO	net/lwip/include/lwip/sockets.h	96;"	d
SO_REUSE	net/lwip/include/lwip/opt.h	1122;"	d
SO_REUSEADDR	net/lwip/include/lwip/sockets.h	77;"	d
SO_REUSEPORT	net/lwip/include/lwip/sockets.h	84;"	d
SO_SNDBUF	net/lwip/include/lwip/sockets.h	91;"	d
SO_SNDLOWAT	net/lwip/include/lwip/sockets.h	93;"	d
SO_SNDTIMEO	net/lwip/include/lwip/sockets.h	95;"	d
SO_TYPE	net/lwip/include/lwip/sockets.h	98;"	d
SO_USELOOPBACK	net/lwip/include/lwip/sockets.h	81;"	d
SPECIALS_MASK	net/lwip/netif/ppp/vj.h	93;"	d
SPECIAL_D	net/lwip/netif/ppp/vj.h	92;"	d
SPECIAL_I	net/lwip/netif/ppp/vj.h	91;"	d
SRL	kern/entry.S	/^#define SRL(val, shamt)		(((val) >> (shamt)) & ~(-1 << (32 - (shamt))))$/;"	d
STARTUP	kern/lapic.c	23;"	d	file:
STATS_DEC	net/lwip/include/lwip/stats.h	145;"	d
STATS_DEC	net/lwip/include/lwip/stats.h	149;"	d
STATS_INC	net/lwip/include/lwip/stats.h	144;"	d
STATS_INC	net/lwip/include/lwip/stats.h	148;"	d
STAT_COUNTER	net/lwip/include/lwip/stats.h	51;"	d
STAT_COUNTER	net/lwip/include/lwip/stats.h	54;"	d
STAT_COUNTER_F	net/lwip/include/lwip/stats.h	52;"	d
STAT_COUNTER_F	net/lwip/include/lwip/stats.h	55;"	d
STA_A	inc/mmu.h	189;"	d
STA_C	inc/mmu.h	186;"	d
STA_E	inc/mmu.h	185;"	d
STA_R	inc/mmu.h	188;"	d
STA_W	inc/mmu.h	187;"	d
STA_X	inc/mmu.h	184;"	d
STS_CG16	inc/mmu.h	195;"	d
STS_CG32	inc/mmu.h	201;"	d
STS_IG16	inc/mmu.h	197;"	d
STS_IG32	inc/mmu.h	202;"	d
STS_LDT	inc/mmu.h	193;"	d
STS_T16A	inc/mmu.h	192;"	d
STS_T16B	inc/mmu.h	194;"	d
STS_T32A	inc/mmu.h	199;"	d
STS_T32B	inc/mmu.h	200;"	d
STS_TG	inc/mmu.h	196;"	d
STS_TG16	inc/mmu.h	198;"	d
STS_TG32	inc/mmu.h	203;"	d
SVR	kern/lapic.c	18;"	d	file:
SWAP_BYTES_IN_WORD	net/lwip/core/ipv4/inet_chksum.c	67;"	d	file:
SYMBOLS	obj/user/sh.asm	/^#define SYMBOLS "<|>&;()"$/;"	d
SYMBOLS	user/sh.c	194;"	d	file:
SYN_RCVD	net/lwip/include/lwip/tcp.h	/^  SYN_RCVD    = 3,$/;"	e	enum:tcp_state
SYN_SENT	net/lwip/include/lwip/tcp.h	/^  SYN_SENT    = 2,$/;"	e	enum:tcp_state
SYS_ARCH_DEC	net/lwip/include/lwip/sys.h	215;"	d
SYS_ARCH_DECL_PROTECT	net/lwip/include/lwip/sys.h	167;"	d
SYS_ARCH_DECL_PROTECT	net/lwip/include/lwip/sys.h	192;"	d
SYS_ARCH_DECL_PROTECT	net/lwip/jos/arch/sys_arch.h	17;"	d
SYS_ARCH_GET	net/lwip/include/lwip/sys.h	224;"	d
SYS_ARCH_INC	net/lwip/include/lwip/sys.h	206;"	d
SYS_ARCH_NOWAIT	net/lwip/jos/arch/sys_arch.h	21;"	d
SYS_ARCH_PROTECT	net/lwip/include/lwip/sys.h	177;"	d
SYS_ARCH_PROTECT	net/lwip/include/lwip/sys.h	193;"	d
SYS_ARCH_PROTECT	net/lwip/jos/arch/sys_arch.h	18;"	d
SYS_ARCH_SET	net/lwip/include/lwip/sys.h	233;"	d
SYS_ARCH_TIMEOUT	net/lwip/include/lwip/sys.h	71;"	d
SYS_ARCH_UNPROTECT	net/lwip/include/lwip/sys.h	186;"	d
SYS_ARCH_UNPROTECT	net/lwip/include/lwip/sys.h	194;"	d
SYS_ARCH_UNPROTECT	net/lwip/jos/arch/sys_arch.h	19;"	d
SYS_DEBUG	net/lwip/include/lwip/opt.h	1574;"	d
SYS_LIGHTWEIGHT_PROT	net/lwip/include/lwip/opt.h	60;"	d
SYS_MBOX_EMPTY	net/lwip/include/lwip/sys.h	76;"	d
SYS_MBOX_NULL	net/lwip/jos/arch/sys_arch.h	10;"	d
SYS_SEM_NULL	net/lwip/jos/arch/sys_arch.h	11;"	d
SYS_STATS	net/lwip/include/lwip/opt.h	1223;"	d
SYS_STATS	net/lwip/include/lwip/opt.h	1237;"	d
SYS_STATS_DEC	net/lwip/include/lwip/stats.h	254;"	d
SYS_STATS_DEC	net/lwip/include/lwip/stats.h	258;"	d
SYS_STATS_DISPLAY	net/lwip/include/lwip/stats.h	255;"	d
SYS_STATS_DISPLAY	net/lwip/include/lwip/stats.h	259;"	d
SYS_STATS_INC	net/lwip/include/lwip/stats.h	253;"	d
SYS_STATS_INC	net/lwip/include/lwip/stats.h	257;"	d
SYS_cgetc	inc/syscall.h	/^	SYS_cgetc,$/;"	e	enum:__anon45
SYS_cputs	inc/syscall.h	/^	SYS_cputs = 0,$/;"	e	enum:__anon45
SYS_env_destroy	inc/syscall.h	/^	SYS_env_destroy,$/;"	e	enum:__anon45
SYS_env_set_pgfault_upcall	inc/syscall.h	/^	SYS_env_set_pgfault_upcall,$/;"	e	enum:__anon45
SYS_env_set_status	inc/syscall.h	/^	SYS_env_set_status,$/;"	e	enum:__anon45
SYS_env_set_trapframe	inc/syscall.h	/^	SYS_env_set_trapframe,$/;"	e	enum:__anon45
SYS_exofork	inc/syscall.h	/^	SYS_exofork,$/;"	e	enum:__anon45
SYS_getenvid	inc/syscall.h	/^	SYS_getenvid,$/;"	e	enum:__anon45
SYS_ipc_recv	inc/syscall.h	/^	SYS_ipc_recv,$/;"	e	enum:__anon45
SYS_ipc_try_send	inc/syscall.h	/^	SYS_ipc_try_send,$/;"	e	enum:__anon45
SYS_page_alloc	inc/syscall.h	/^	SYS_page_alloc,$/;"	e	enum:__anon45
SYS_page_map	inc/syscall.h	/^	SYS_page_map,$/;"	e	enum:__anon45
SYS_page_unmap	inc/syscall.h	/^	SYS_page_unmap,$/;"	e	enum:__anon45
SYS_receive_packet	inc/syscall.h	/^	SYS_receive_packet,$/;"	e	enum:__anon45
SYS_time_msec	inc/syscall.h	/^	SYS_time_msec,$/;"	e	enum:__anon45
SYS_transmit_packet	inc/syscall.h	/^	SYS_transmit_packet,$/;"	e	enum:__anon45
SYS_yield	inc/syscall.h	/^	SYS_yield,$/;"	e	enum:__anon45
Secthdr	inc/elf.h	/^struct Secthdr {$/;"	s
Segdesc	inc/mmu.h	/^struct Segdesc {$/;"	s
Stab	inc/stab.h	/^struct Stab {$/;"	s
Stat	inc/fd.h	/^struct Stat {$/;"	s
StdText	net/lwip/netif/ppp/chpms.c	/^static u_char *StdText = (u_char *)"KGS!@#$%"; \/* key from rasapi32.dll *\/$/;"	v	file:
Super	inc/fs.h	/^struct Super {$/;"	s
TAR	GNUmakefile	/^TAR	:= gtar$/;"	m
TCCR	kern/lapic.c	42;"	d	file:
TCPH_FLAGS	net/lwip/include/lwip/tcp.h	230;"	d
TCPH_FLAGS_SET	net/lwip/include/lwip/tcp.h	234;"	d
TCPH_HDRLEN	net/lwip/include/lwip/tcp.h	229;"	d
TCPH_HDRLEN_SET	net/lwip/include/lwip/tcp.h	233;"	d
TCPH_OFFSET	net/lwip/include/lwip/tcp.h	228;"	d
TCPH_OFFSET_SET	net/lwip/include/lwip/tcp.h	232;"	d
TCPH_SET_FLAG	net/lwip/include/lwip/tcp.h	235;"	d
TCPH_UNSET_FLAG	net/lwip/include/lwip/tcp.h	236;"	d
TCPIP_APIMSG	net/lwip/include/lwip/tcpip.h	54;"	d
TCPIP_APIMSG	net/lwip/include/lwip/tcpip.h	61;"	d
TCPIP_APIMSG_ACK	net/lwip/include/lwip/tcpip.h	55;"	d
TCPIP_APIMSG_ACK	net/lwip/include/lwip/tcpip.h	62;"	d
TCPIP_DEBUG	net/lwip/include/lwip/opt.h	1652;"	d
TCPIP_MBOX_SIZE	net/lwip/include/lwip/opt.h	932;"	d
TCPIP_MSG_API	net/lwip/include/lwip/tcpip.h	/^  TCPIP_MSG_API,$/;"	e	enum:tcpip_msg_type
TCPIP_MSG_CALLBACK	net/lwip/include/lwip/tcpip.h	/^  TCPIP_MSG_CALLBACK,$/;"	e	enum:tcpip_msg_type
TCPIP_MSG_INPKT	net/lwip/include/lwip/tcpip.h	/^  TCPIP_MSG_INPKT,$/;"	e	enum:tcpip_msg_type
TCPIP_MSG_NETIFAPI	net/lwip/include/lwip/tcpip.h	/^  TCPIP_MSG_NETIFAPI,$/;"	e	enum:tcpip_msg_type
TCPIP_MSG_TIMEOUT	net/lwip/include/lwip/tcpip.h	/^  TCPIP_MSG_TIMEOUT$/;"	e	enum:tcpip_msg_type
TCPIP_NETIFAPI	net/lwip/include/lwip/tcpip.h	56;"	d
TCPIP_NETIFAPI	net/lwip/include/lwip/tcpip.h	63;"	d
TCPIP_NETIFAPI_ACK	net/lwip/include/lwip/tcpip.h	57;"	d
TCPIP_NETIFAPI_ACK	net/lwip/include/lwip/tcpip.h	64;"	d
TCPIP_THREAD_NAME	net/lwip/include/lwip/opt.h	905;"	d
TCPIP_THREAD_PRIO	net/lwip/include/lwip/opt.h	923;"	d
TCPIP_THREAD_STACKSIZE	net/lwip/include/lwip/opt.h	914;"	d
TCP_ACK	net/lwip/include/lwip/tcp.h	160;"	d
TCP_BUILD_MSS_OPTION	net/lwip/include/lwip/tcp.h	142;"	d
TCP_CALCULATE_EFF_SEND_MSS	net/lwip/include/lwip/opt.h	709;"	d
TCP_CWND_DEBUG	net/lwip/include/lwip/opt.h	1610;"	d
TCP_CWR	net/lwip/include/lwip/tcp.h	163;"	d
TCP_DEBUG	net/lwip/include/lwip/opt.h	1581;"	d
TCP_DEFAULT_LISTEN_BACKLOG	net/lwip/include/lwip/opt.h	750;"	d
TCP_ECE	net/lwip/include/lwip/tcp.h	162;"	d
TCP_EVENT_ACCEPT	net/lwip/include/lwip/tcp.h	456;"	d
TCP_EVENT_ACCEPT	net/lwip/include/lwip/tcp.h	469;"	d
TCP_EVENT_CONNECTED	net/lwip/include/lwip/tcp.h	462;"	d
TCP_EVENT_CONNECTED	net/lwip/include/lwip/tcp.h	480;"	d
TCP_EVENT_ERR	net/lwip/include/lwip/tcp.h	466;"	d
TCP_EVENT_ERR	net/lwip/include/lwip/tcp.h	486;"	d
TCP_EVENT_POLL	net/lwip/include/lwip/tcp.h	464;"	d
TCP_EVENT_POLL	net/lwip/include/lwip/tcp.h	483;"	d
TCP_EVENT_RECV	net/lwip/include/lwip/tcp.h	460;"	d
TCP_EVENT_RECV	net/lwip/include/lwip/tcp.h	475;"	d
TCP_EVENT_SENT	net/lwip/include/lwip/tcp.h	458;"	d
TCP_EVENT_SENT	net/lwip/include/lwip/tcp.h	472;"	d
TCP_FAST_INTERVAL	net/lwip/include/lwip/tcp.h	175;"	d
TCP_FIN	net/lwip/include/lwip/tcp.h	156;"	d
TCP_FIN_WAIT_TIMEOUT	net/lwip/include/lwip/tcp.h	182;"	d
TCP_FLAGS	net/lwip/include/lwip/tcp.h	165;"	d
TCP_FR_DEBUG	net/lwip/include/lwip/opt.h	1595;"	d
TCP_HLEN	net/lwip/include/lwip/tcp.h	168;"	d
TCP_INPUT_DEBUG	net/lwip/include/lwip/opt.h	1588;"	d
TCP_KEEPALIVE	net/lwip/include/lwip/sockets.h	149;"	d
TCP_KEEPCNT	net/lwip/include/lwip/sockets.h	152;"	d
TCP_KEEPCNT_DEFAULT	net/lwip/include/lwip/tcp.h	201;"	d
TCP_KEEPIDLE	net/lwip/include/lwip/sockets.h	150;"	d
TCP_KEEPIDLE_DEFAULT	net/lwip/include/lwip/tcp.h	193;"	d
TCP_KEEPINTVL	net/lwip/include/lwip/sockets.h	151;"	d
TCP_KEEPINTVL_DEFAULT	net/lwip/include/lwip/tcp.h	197;"	d
TCP_LISTEN_BACKLOG	net/lwip/include/lwip/opt.h	741;"	d
TCP_LOCAL_PORT_RANGE_END	net/lwip/core/tcp.c	445;"	d	file:
TCP_LOCAL_PORT_RANGE_END	obj/net/ns.asm	/^#define TCP_LOCAL_PORT_RANGE_END   0x7fff$/;"	d
TCP_LOCAL_PORT_RANGE_START	net/lwip/core/tcp.c	444;"	d	file:
TCP_MAXIDLE	net/lwip/include/lwip/tcp.h	204;"	d
TCP_MAXRTX	net/lwip/include/lwip/opt.h	671;"	d
TCP_MSL	net/lwip/include/lwip/tcp.h	188;"	d
TCP_MSS	net/lwip/include/lwip/opt.h	697;"	d
TCP_MSS	net/lwip/jos/lwipopts.h	40;"	d
TCP_NODELAY	net/lwip/include/lwip/sockets.h	148;"	d
TCP_OOSEQ_TIMEOUT	net/lwip/include/lwip/tcp.h	185;"	d
TCP_OUTPUT_DEBUG	net/lwip/include/lwip/opt.h	1624;"	d
TCP_PCB_COMMON	net/lwip/include/lwip/tcp.h	264;"	d
TCP_PRIO_MAX	net/lwip/include/lwip/tcp.h	113;"	d
TCP_PRIO_MIN	net/lwip/include/lwip/tcp.h	111;"	d
TCP_PRIO_NORMAL	net/lwip/include/lwip/tcp.h	112;"	d
TCP_PSH	net/lwip/include/lwip/tcp.h	159;"	d
TCP_PUSH_BIT	net/lwip/netif/ppp/vj.h	95;"	d
TCP_QLEN_DEBUG	net/lwip/include/lwip/opt.h	1638;"	d
TCP_QUEUE_OOSEQ	net/lwip/include/lwip/opt.h	686;"	d
TCP_REG	net/lwip/include/lwip/tcp.h	617;"	d
TCP_RMV	net/lwip/include/lwip/tcp.h	622;"	d
TCP_RST	net/lwip/include/lwip/tcp.h	158;"	d
TCP_RST_DEBUG	net/lwip/include/lwip/opt.h	1631;"	d
TCP_RTO_DEBUG	net/lwip/include/lwip/opt.h	1603;"	d
TCP_SEQ_BETWEEN	net/lwip/include/lwip/tcp.h	155;"	d
TCP_SEQ_GEQ	net/lwip/include/lwip/tcp.h	150;"	d
TCP_SEQ_GT	net/lwip/include/lwip/tcp.h	149;"	d
TCP_SEQ_LEQ	net/lwip/include/lwip/tcp.h	148;"	d
TCP_SEQ_LT	net/lwip/include/lwip/tcp.h	147;"	d
TCP_SLOW_INTERVAL	net/lwip/include/lwip/tcp.h	179;"	d
TCP_SNDLOWAT	net/lwip/include/lwip/opt.h	734;"	d
TCP_SNDQUEUELEN_OVERFLOW	net/lwip/include/lwip/tcp.h	333;"	d
TCP_SND_BUF	net/lwip/include/lwip/opt.h	717;"	d
TCP_SND_BUF	net/lwip/jos/lwipopts.h	42;"	d
TCP_SND_QUEUELEN	net/lwip/include/lwip/opt.h	725;"	d
TCP_SND_QUEUELEN	net/lwip/jos/lwipopts.h	45;"	d
TCP_STATS	net/lwip/include/lwip/opt.h	1202;"	d
TCP_STATS	net/lwip/include/lwip/opt.h	1234;"	d
TCP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	154;"	d
TCP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	157;"	d
TCP_STATS_INC	net/lwip/include/lwip/stats.h	153;"	d
TCP_STATS_INC	net/lwip/include/lwip/stats.h	156;"	d
TCP_SYN	net/lwip/include/lwip/tcp.h	157;"	d
TCP_SYNMAXRTX	net/lwip/include/lwip/opt.h	678;"	d
TCP_SYN_RCVD_TIMEOUT	net/lwip/include/lwip/tcp.h	183;"	d
TCP_TCPLEN	net/lwip/include/lwip/tcp.h	238;"	d
TCP_TMR_INTERVAL	net/lwip/include/lwip/tcp.h	171;"	d
TCP_TTL	net/lwip/include/lwip/opt.h	657;"	d
TCP_URG	net/lwip/include/lwip/tcp.h	161;"	d
TCP_WND	net/lwip/include/lwip/opt.h	664;"	d
TCP_WND	net/lwip/jos/lwipopts.h	41;"	d
TCP_WND_DEBUG	net/lwip/include/lwip/opt.h	1617;"	d
TCP_WRITE_FLAG_COPY	net/lwip/include/lwip/tcp.h	103;"	d
TCP_WRITE_FLAG_MORE	net/lwip/include/lwip/tcp.h	104;"	d
TDCR	kern/lapic.c	43;"	d	file:
TDLEN_ALIGN	kern/e1000.h	23;"	d
TEMP_ADDR	obj/user/sendpage.asm	/^#define TEMP_ADDR	((char*)0xa00000)$/;"	d
TEMP_ADDR	user/sendpage.c	9;"	d	file:
TEMP_ADDR_CHILD	obj/user/sendpage.asm	/^#define TEMP_ADDR_CHILD	((char*)0xb00000)$/;"	d
TEMP_ADDR_CHILD	user/sendpage.c	10;"	d	file:
TERMACK	net/lwip/netif/ppp/fsm.h	74;"	d
TERMREQ	net/lwip/netif/ppp/fsm.h	73;"	d
TESTOUTPUT_COUNT	net/testoutput.c	4;"	d	file:
TESTS	gradelib.py	/^TESTS = []$/;"	v
TF_ACK_DELAY	net/lwip/include/lwip/tcp.h	283;"	d
TF_ACK_NOW	net/lwip/include/lwip/tcp.h	284;"	d
TF_CLOSED	net/lwip/include/lwip/tcp.h	258;"	d
TF_FIN	net/lwip/include/lwip/tcp.h	286;"	d
TF_GOT_FIN	net/lwip/include/lwip/tcp.h	259;"	d
TF_INFR	net/lwip/include/lwip/tcp.h	285;"	d
TF_NAGLEMEMERR	net/lwip/include/lwip/tcp.h	288;"	d
TF_NODELAY	net/lwip/include/lwip/tcp.h	287;"	d
TF_RESET	net/lwip/include/lwip/tcp.h	257;"	d
THREAD_NUM_ONHALT	net/lwip/jos/arch/threadq.h	7;"	d
TICR	kern/lapic.c	41;"	d	file:
TIMEOUT	net/lwip/netif/ppp/ppp.h	96;"	d
TIMER	kern/lapic.c	33;"	d	file:
TIMER_INTERVAL	net/ns.h	8;"	d
TIME_WAIT	net/lwip/include/lwip/tcp.h	/^  TIME_WAIT   = 10$/;"	e	enum:tcp_state
TOP	GNUmakefile	/^TOP = .$/;"	m
TPR	kern/lapic.c	16;"	d	file:
TRACELCP	net/lwip/netif/ppp/pppdebug.h	62;"	d
TRAPHANDLER	kern/trapentry.S	/^#define TRAPHANDLER(name, num)						\\$/;"	d
TRAPHANDLER_NOEC	kern/trapentry.S	/^#define TRAPHANDLER_NOEC(name, num)					\\$/;"	d
TRY_AGAIN	net/lwip/include/lwip/netdb.h	59;"	d
TYPE_COMPRESSED_TCP	net/lwip/netif/ppp/vj.h	79;"	d
TYPE_ERROR	net/lwip/netif/ppp/vj.h	80;"	d
TYPE_IP	net/lwip/netif/ppp/vj.h	77;"	d
TYPE_UNCOMPRESSED_TCP	net/lwip/netif/ppp/vj.h	78;"	d
T_ALIGN	inc/trap.h	23;"	d
T_BOUND	inc/trap.h	11;"	d
T_BRKPT	inc/trap.h	9;"	d
T_DBLFLT	inc/trap.h	14;"	d
T_DEBUG	inc/trap.h	7;"	d
T_DEFAULT	inc/trap.h	30;"	d
T_DEVICE	inc/trap.h	13;"	d
T_DIVIDE	inc/trap.h	6;"	d
T_FPERR	inc/trap.h	22;"	d
T_GPFLT	inc/trap.h	19;"	d
T_ILLOP	inc/trap.h	12;"	d
T_MCHK	inc/trap.h	24;"	d
T_NMI	inc/trap.h	8;"	d
T_OFLOW	inc/trap.h	10;"	d
T_PGFLT	inc/trap.h	20;"	d
T_SEGNP	inc/trap.h	17;"	d
T_SIMDERR	inc/trap.h	25;"	d
T_STACK	inc/trap.h	18;"	d
T_SYSCALL	inc/trap.h	29;"	d
T_TSS	inc/trap.h	16;"	d
Taskstate	inc/mmu.h	/^struct Taskstate {$/;"	s
TerminateTest	gradelib.py	/^class TerminateTest(Exception):$/;"	c
Transform	net/lwip/netif/ppp/md5.c	/^Transform (u32_t *buf, u32_t *in)$/;"	f	file:
Trapframe	inc/trap.h	/^struct Trapframe {$/;"	s
U16_F	net/lwip/jos/arch/cc.h	27;"	d
U32_F	net/lwip/jos/arch/cc.h	31;"	d
UDPLITE_RECV_CSCOV	net/lwip/include/lwip/sockets.h	160;"	d
UDPLITE_SEND_CSCOV	net/lwip/include/lwip/sockets.h	159;"	d
UDP_DEBUG	net/lwip/include/lwip/opt.h	1645;"	d
UDP_FLAGS_CONNECTED	net/lwip/include/lwip/udp.h	68;"	d
UDP_FLAGS_NOCHKSUM	net/lwip/include/lwip/udp.h	66;"	d
UDP_FLAGS_UDPLITE	net/lwip/include/lwip/udp.h	67;"	d
UDP_HLEN	net/lwip/include/lwip/udp.h	48;"	d
UDP_LOCAL_PORT_RANGE_END	net/lwip/core/udp.c	608;"	d	file:
UDP_LOCAL_PORT_RANGE_END	obj/net/ns.asm	/^#define UDP_LOCAL_PORT_RANGE_END   0x7fff$/;"	d
UDP_LOCAL_PORT_RANGE_START	net/lwip/core/udp.c	607;"	d	file:
UDP_LOCAL_PORT_RANGE_START	obj/net/ns.asm	/^#define UDP_LOCAL_PORT_RANGE_START 4096$/;"	d
UDP_STATS	net/lwip/include/lwip/opt.h	1194;"	d
UDP_STATS	net/lwip/include/lwip/opt.h	1233;"	d
UDP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	162;"	d
UDP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	165;"	d
UDP_STATS_INC	net/lwip/include/lwip/stats.h	161;"	d
UDP_STATS_INC	net/lwip/include/lwip/stats.h	164;"	d
UDP_TTL	net/lwip/include/lwip/opt.h	638;"	d
UENVS	inc/memlayout.h	116;"	d
UL	net/lwip/netif/ppp/md5.c	103;"	d	file:
UL	net/lwip/netif/ppp/md5.c	106;"	d	file:
UL	net/lwip/netif/ppp/md5.c	108;"	d	file:
ULDFLAGS	GNUmakefile	/^ULDFLAGS := -T user\/user.ld$/;"	m
ULIM	inc/memlayout.h	104;"	d
UNLOCK_TCPIP_CORE	net/lwip/include/lwip/tcpip.h	53;"	d
UNLOCK_TCPIP_CORE	net/lwip/include/lwip/tcpip.h	60;"	d
UNTIMEOUT	net/lwip/netif/ppp/ppp.h	97;"	d
UPAGES	inc/memlayout.h	114;"	d
UPAPCS_AUTHREQ	net/lwip/netif/ppp/pap.h	79;"	d
UPAPCS_BADAUTH	net/lwip/netif/ppp/pap.h	81;"	d
UPAPCS_CLOSED	net/lwip/netif/ppp/pap.h	77;"	d
UPAPCS_INITIAL	net/lwip/netif/ppp/pap.h	76;"	d
UPAPCS_OPEN	net/lwip/netif/ppp/pap.h	80;"	d
UPAPCS_PENDING	net/lwip/netif/ppp/pap.h	78;"	d
UPAPDEBUG	net/lwip/netif/ppp/pppdebug.h	68;"	d
UPAPDEBUG	net/lwip/netif/ppp/pppdebug.h	78;"	d
UPAPSS_BADAUTH	net/lwip/netif/ppp/pap.h	91;"	d
UPAPSS_CLOSED	net/lwip/netif/ppp/pap.h	87;"	d
UPAPSS_INITIAL	net/lwip/netif/ppp/pap.h	86;"	d
UPAPSS_LISTEN	net/lwip/netif/ppp/pap.h	89;"	d
UPAPSS_OPEN	net/lwip/netif/ppp/pap.h	90;"	d
UPAPSS_PENDING	net/lwip/netif/ppp/pap.h	88;"	d
UPAP_AUTHACK	net/lwip/netif/ppp/pap.h	70;"	d
UPAP_AUTHNAK	net/lwip/netif/ppp/pap.h	71;"	d
UPAP_AUTHREQ	net/lwip/netif/ppp/pap.h	69;"	d
UPAP_DEFREQTIME	net/lwip/include/lwip/opt.h	1350;"	d
UPAP_DEFTIMEOUT	net/lwip/include/lwip/opt.h	1346;"	d
UPAP_HEADERLEN	net/lwip/netif/ppp/pap.h	63;"	d
USED	inc/lib.h	26;"	d
USER_CFLAGS	GNUmakefile	/^USER_CFLAGS := $(CFLAGS) -DJOS_USER -gstabs$/;"	m
USE_CRYPT	net/lwip/netif/ppp/chpms.c	67;"	d	file:
USTABDATA	inc/memlayout.h	139;"	d
USTACKTOP	inc/memlayout.h	128;"	d
UTEMP	inc/memlayout.h	134;"	d
UTEMP2	lib/spawn.c	5;"	d	file:
UTEMP2USTACK	lib/spawn.c	4;"	d	file:
UTEMP3	lib/spawn.c	6;"	d	file:
UTEXT	inc/memlayout.h	131;"	d
UTOP	inc/memlayout.h	123;"	d
UTrapframe	inc/trap.h	/^struct UTrapframe {$/;"	s
UVPT	inc/memlayout.h	112;"	d
UXSTACKTOP	inc/memlayout.h	125;"	d
UseNT	net/lwip/netif/ppp/chpms.c	/^    u_char UseNT; \/* If 1, ignore the LANMan response field *\/$/;"	m	struct:__anon3	file:
UserStabData	kern/kdebug.c	/^struct UserStabData {$/;"	s	file:
V	conf/env.mk	/^V = @$/;"	m
VA	user/testptelibrary.c	3;"	d	file:
VA	user/testpteshare.c	4;"	d	file:
VER	kern/lapic.c	15;"	d	file:
VERSION	user/httpd.c	6;"	d	file:
VJBSDHDR_H	net/lwip/netif/ppp/vjbsdhdr.h	2;"	d
VJF_TOSS	net/lwip/netif/ppp/vj.h	147;"	d
VJ_H	net/lwip/netif/ppp/vj.h	26;"	d
VJ_SUPPORT	net/lwip/include/lwip/opt.h	1316;"	d
WEBSUB	GNUmakefile	/^WEBSUB = https:\/\/ccutler.scripts.mit.edu\/6.828\/handin.py$/;"	m
WHITESPACE	kern/monitor.c	89;"	d	file:
WHITESPACE	obj/user/sh.asm	/^#define WHITESPACE " \\t\\r\\n"$/;"	d
WHITESPACE	user/sh.c	193;"	d	file:
X1	kern/lapic.c	34;"	d	file:
X16_F	net/lwip/jos/arch/cc.h	28;"	d
X32_F	net/lwip/jos/arch/cc.h	32;"	d
_ALIGN_TEXT	net/lwip/jos/arch/longjmp.S	/^#define _ALIGN_TEXT .align 16, 0x90$/;"	d
_CONSOLE_H_	kern/console.h	4;"	d
_DEV_PCI_PCIREG_H_	kern/pcireg.h	35;"	d
_GDBPORT	gradelib.py	/^    _GDBPORT = None$/;"	v	class:QEMU
_IO	net/lwip/include/lwip/sockets.h	243;"	d
_IOR	net/lwip/include/lwip/sockets.h	245;"	d
_IOW	net/lwip/include/lwip/sockets.h	247;"	d
_SYS_QUEUE_H_	net/lwip/netif/ppp/ppp_oe.c	88;"	d	file:
__LWIP_API_H__	net/lwip/include/lwip/api.h	33;"	d
__LWIP_API_MSG_H__	net/lwip/include/lwip/api_msg.h	33;"	d
__LWIP_ARCH_H__	net/lwip/include/lwip/arch.h	33;"	d
__LWIP_AUTOIP_H__	net/lwip/include/ipv4/lwip/autoip.h	45;"	d
__LWIP_DEBUG_H__	net/lwip/include/lwip/debug.h	33;"	d
__LWIP_DEF_H__	net/lwip/include/lwip/def.h	33;"	d
__LWIP_DHCP_H__	net/lwip/include/lwip/dhcp.h	5;"	d
__LWIP_DNS_H__	net/lwip/include/lwip/dns.h	35;"	d
__LWIP_ERR_H__	net/lwip/include/lwip/err.h	33;"	d
__LWIP_ICMP_H__	net/lwip/include/ipv4/lwip/icmp.h	33;"	d
__LWIP_ICMP_H__	net/lwip/include/ipv6/lwip/icmp.h	33;"	d
__LWIP_IGMP_H__	net/lwip/include/ipv4/lwip/igmp.h	36;"	d
__LWIP_INET_CHKSUM_H__	net/lwip/include/ipv4/lwip/inet_chksum.h	33;"	d
__LWIP_INET_H__	net/lwip/include/ipv4/lwip/inet.h	33;"	d
__LWIP_INET_H__	net/lwip/include/ipv6/lwip/inet.h	33;"	d
__LWIP_INIT_H__	net/lwip/include/lwip/init.h	33;"	d
__LWIP_IP_ADDR_H__	net/lwip/include/ipv4/lwip/ip_addr.h	33;"	d
__LWIP_IP_ADDR_H__	net/lwip/include/ipv6/lwip/ip_addr.h	33;"	d
__LWIP_IP_FRAG_H__	net/lwip/include/ipv4/lwip/ip_frag.h	34;"	d
__LWIP_IP_H__	net/lwip/include/ipv4/lwip/ip.h	33;"	d
__LWIP_IP_H__	net/lwip/include/ipv6/lwip/ip.h	33;"	d
__LWIP_MEMP_H__	net/lwip/include/lwip/memp.h	34;"	d
__LWIP_MEM_H__	net/lwip/include/lwip/mem.h	33;"	d
__LWIP_NETBUF_H__	net/lwip/include/lwip/netbuf.h	33;"	d
__LWIP_NETIFAPI_H__	net/lwip/include/lwip/netifapi.h	29;"	d
__LWIP_NETIF_H__	net/lwip/include/lwip/netif.h	33;"	d
__LWIP_OPT_H__	net/lwip/include/lwip/opt.h	39;"	d
__LWIP_PBUF_H__	net/lwip/include/lwip/pbuf.h	34;"	d
__LWIP_RAW_H__	net/lwip/include/lwip/raw.h	33;"	d
__LWIP_SNMP_ASN1_H__	net/lwip/include/lwip/snmp_asn1.h	36;"	d
__LWIP_SNMP_H__	net/lwip/include/lwip/snmp.h	34;"	d
__LWIP_SNMP_MSG_H__	net/lwip/include/lwip/snmp_msg.h	36;"	d
__LWIP_SNMP_STRUCTS_H__	net/lwip/include/lwip/snmp_structs.h	38;"	d
__LWIP_SOCKETS_H__	net/lwip/include/lwip/sockets.h	35;"	d
__LWIP_STATS_H__	net/lwip/include/lwip/stats.h	33;"	d
__LWIP_SYS_H__	net/lwip/include/lwip/sys.h	33;"	d
__LWIP_TCPIP_H__	net/lwip/include/lwip/tcpip.h	33;"	d
__LWIP_TCP_H__	net/lwip/include/lwip/tcp.h	33;"	d
__LWIP_UDP_H__	net/lwip/include/lwip/udp.h	33;"	d
__NETIF_ETHARP_H__	net/lwip/include/netif/etharp.h	36;"	d
__NETIF_LOOPIF_H__	net/lwip/include/netif/loopif.h	33;"	d
__NETIF_SLIPIF_H__	net/lwip/include/netif/slipif.h	35;"	d
__SIO_H__	net/lwip/include/lwip/sio.h	36;"	d
__all__	gradelib.py	/^__all__ = []$/;"	v
__init__	gradelib.py	/^    def __init__(self, *default_monitors):$/;"	m	class:Runner
__init__	gradelib.py	/^    def __init__(self, *make_args):$/;"	m	class:QEMU
__init__	gradelib.py	/^    def __init__(self, port, timeout=15):$/;"	m	class:GDBClient
__monitor_start	gradelib.py	/^    def __monitor_start(self, output):$/;"	m	class:Runner	file:
__react	gradelib.py	/^    def __react(self, reactors, timeout):$/;"	m	class:Runner	file:
__send	gradelib.py	/^    def __send(self, cmd):$/;"	m	class:GDBClient	file:
__send_break	gradelib.py	/^    def __send_break(self):$/;"	m	class:GDBClient	file:
__spin_initlock	kern/spinlock.c	/^__spin_initlock(struct spinlock *lk, char *name)$/;"	f
_alltraps	kern/trapentry.S	/^ _alltraps:$/;"	l
_alltraps	obj/kern/kernel.asm	/^ _alltraps:$/;"	l
_gettoken	user/sh.c	/^_gettoken(char *s, char **p1, char **p2)$/;"	f
_inet_ntoa	net/lwip/netif/ppp/ipcp.c	/^_inet_ntoa(u32_t n)$/;"	f
_kaddr	kern/pmap.h	/^_kaddr(const char *file, int line, physaddr_t pa)$/;"	f
_pad	inc/fs.h	/^	char _pad[PGSIZE];$/;"	m	union:Fsipc
_pad	inc/ns.h	/^	char _pad[PGSIZE];$/;"	m	union:Nsipc
_paddr	kern/pmap.h	/^_paddr(const char *file, int line, void *kva)$/;"	f
_panic	init.s	/^_panic:$/;"	l
_panic	kern/init.c	/^_panic(const char *file, int line, const char *fmt,...)$/;"	f
_panic	lib/panic.c	/^_panic(const char *file, int line, const char *fmt, ...)$/;"	f
_pgfault_handler	lib/pgfault.c	/^void (*_pgfault_handler)(struct UTrapframe *utf);$/;"	v
_pgfault_handler	obj/fs/fs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/net/ns.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/net/testinput.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/net/testoutput.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultalloc.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultallocbad.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultdie.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultnostack.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultregs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/forktree.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/pingpong.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/pingpongs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/primes.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/primespipe.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/sendpage.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/sh.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/spin.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/stresssched.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testfdsharing.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testpipe.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testpiperace.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testpiperace2.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testpteshare.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testshell.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	lib/pfentry.S	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/fs/fs.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/net/ns.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/net/testinput.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/net/testoutput.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultalloc.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultallocbad.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultdie.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultnostack.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultregs.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/forktree.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/pingpong.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/pingpongs.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/primes.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/primespipe.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/sendpage.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/sh.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/spin.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/stresssched.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testfdsharing.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testpipe.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testpiperace.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testpiperace2.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testpteshare.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testshell.asm	/^_pgfault_upcall:$/;"	l
_pipeisclosed	lib/pipe.c	/^_pipeisclosed(struct Fd *fd, struct Pipe *p)$/;"	f	file:
_start	kern/entry.S	/^_start = RELOC(entry)$/;"	d
_start	lib/entry.S	/^_start:$/;"	l
_start	obj/fs/fs.asm	/^_start:$/;"	l
_start	obj/kern/kernel.asm	/^_start = RELOC(entry)$/;"	d
_start	obj/net/ns.asm	/^_start:$/;"	l
_start	obj/net/testinput.asm	/^_start:$/;"	l
_start	obj/net/testoutput.asm	/^_start:$/;"	l
_start	obj/user/badsegment.asm	/^_start:$/;"	l
_start	obj/user/breakpoint.asm	/^_start:$/;"	l
_start	obj/user/buggyhello.asm	/^_start:$/;"	l
_start	obj/user/buggyhello2.asm	/^_start:$/;"	l
_start	obj/user/cat.asm	/^_start:$/;"	l
_start	obj/user/divzero.asm	/^_start:$/;"	l
_start	obj/user/dumbfork.asm	/^_start:$/;"	l
_start	obj/user/echo.asm	/^_start:$/;"	l
_start	obj/user/echosrv.asm	/^_start:$/;"	l
_start	obj/user/echotest.asm	/^_start:$/;"	l
_start	obj/user/evilhello.asm	/^_start:$/;"	l
_start	obj/user/fairness.asm	/^_start:$/;"	l
_start	obj/user/faultalloc.asm	/^_start:$/;"	l
_start	obj/user/faultallocbad.asm	/^_start:$/;"	l
_start	obj/user/faultbadhandler.asm	/^_start:$/;"	l
_start	obj/user/faultdie.asm	/^_start:$/;"	l
_start	obj/user/faultevilhandler.asm	/^_start:$/;"	l
_start	obj/user/faultnostack.asm	/^_start:$/;"	l
_start	obj/user/faultread.asm	/^_start:$/;"	l
_start	obj/user/faultreadkernel.asm	/^_start:$/;"	l
_start	obj/user/faultregs.asm	/^_start:$/;"	l
_start	obj/user/faultwrite.asm	/^_start:$/;"	l
_start	obj/user/faultwritekernel.asm	/^_start:$/;"	l
_start	obj/user/forktree.asm	/^_start:$/;"	l
_start	obj/user/hello.asm	/^_start:$/;"	l
_start	obj/user/httpd.asm	/^_start:$/;"	l
_start	obj/user/icode.asm	/^_start:$/;"	l
_start	obj/user/idle.asm	/^_start:$/;"	l
_start	obj/user/init.asm	/^_start:$/;"	l
_start	obj/user/ls.asm	/^_start:$/;"	l
_start	obj/user/lsfd.asm	/^_start:$/;"	l
_start	obj/user/num.asm	/^_start:$/;"	l
_start	obj/user/pingpong.asm	/^_start:$/;"	l
_start	obj/user/pingpongs.asm	/^_start:$/;"	l
_start	obj/user/primes.asm	/^_start:$/;"	l
_start	obj/user/primespipe.asm	/^_start:$/;"	l
_start	obj/user/sendpage.asm	/^_start:$/;"	l
_start	obj/user/sh.asm	/^_start:$/;"	l
_start	obj/user/softint.asm	/^_start:$/;"	l
_start	obj/user/spawnhello.asm	/^_start:$/;"	l
_start	obj/user/spin.asm	/^_start:$/;"	l
_start	obj/user/stresssched.asm	/^_start:$/;"	l
_start	obj/user/testbss.asm	/^_start:$/;"	l
_start	obj/user/testfdsharing.asm	/^_start:$/;"	l
_start	obj/user/testfile.asm	/^_start:$/;"	l
_start	obj/user/testkbd.asm	/^_start:$/;"	l
_start	obj/user/testpipe.asm	/^_start:$/;"	l
_start	obj/user/testpiperace.asm	/^_start:$/;"	l
_start	obj/user/testpiperace2.asm	/^_start:$/;"	l
_start	obj/user/testpteshare.asm	/^_start:$/;"	l
_start	obj/user/testshell.asm	/^_start:$/;"	l
_start	obj/user/testtime.asm	/^_start:$/;"	l
_start	obj/user/yield.asm	/^_start:$/;"	l
_warn	init.s	/^_warn:$/;"	l
_warn	kern/init.c	/^_warn(const char *file, int line, const char *fmt,...)$/;"	f
aaddrlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t aaddrlen;$/;"	m	struct:snmp_trap_header_lengths
aaddrlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t aaddrlenlen;$/;"	m	struct:snmp_trap_header_lengths
acc	obj/net/ns.asm	/^      acc = SWAP_BYTES_IN_WORD(acc);$/;"	d
acc	obj/net/ns.asm	/^    acc = (acc >> 16) + (acc & 0x0000ffffUL);$/;"	d
acc	obj/net/ns.asm	/^    acc = FOLD_U32T(acc);$/;"	d
acc	obj/net/ns.asm	/^    acc = SWAP_BYTES_IN_WORD(acc);$/;"	d
acc	obj/net/ns.asm	/^  acc = (acc >> 16) + (acc & 0x0000ffffUL);$/;"	d
acc	obj/net/ns.asm	/^  acc = 0;$/;"	d
acc	obj/net/ns.asm	/^  acc = FOLD_U32T(acc);$/;"	d
accept	inc/ns.h	/^	} accept;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_accept
accept	lib/sockets.c	/^accept(int s, struct sockaddr *addr, socklen_t *addrlen)$/;"	f
accept	net/lwip/include/lwip/sockets.h	326;"	d
accept	net/lwip/include/lwip/tcp.h	/^  err_t (* accept)(void *arg, struct tcp_pcb *newpcb, err_t err);$/;"	m	struct:tcp_pcb
accept	net/lwip/include/lwip/tcp.h	/^  err_t (* accept)(void *arg, struct tcp_pcb *newpcb, err_t err);$/;"	m	struct:tcp_pcb_listen
acceptRet	inc/ns.h	/^	} acceptRet;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsret_accept
accept_function	net/lwip/api/api_msg.c	/^accept_function(void *arg, struct tcp_pcb *newpcb, err_t err)$/;"	f	file:
accept_local	net/lwip/netif/ppp/ipcp.h	/^  u_int   accept_local  : 1; \/* accept peer's value for ouraddr *\/$/;"	m	struct:ipcp_options
accept_remote	net/lwip/netif/ppp/ipcp.h	/^  u_int   accept_remote : 1; \/* accept peer's value for hisaddr *\/$/;"	m	struct:ipcp_options
acceptable	obj/net/ns.asm	/^        acceptable = 1;$/;"	d
accepted_inseq	obj/net/ns.asm	/^        accepted_inseq = 1; $/;"	d
accepted_inseq	obj/net/ns.asm	/^        accepted_inseq = tcp_receive(pcb);$/;"	d
accepted_inseq	obj/net/ns.asm	/^    accepted_inseq = tcp_receive(pcb);$/;"	d
acceptmbox	net/lwip/include/lwip/api.h	/^  sys_mbox_t acceptmbox;$/;"	m	struct:netconn
accepts_pending	net/lwip/include/lwip/tcp.h	/^  u8_t accepts_pending;$/;"	m	struct:tcp_pcb_listen
access	net/lwip/include/lwip/snmp_structs.h	/^  u8_t access;$/;"	m	struct:obj_def
accomp	net/lwip/netif/ppp/ppp.c	/^  int  accomp;                  \/* Does peer accept addr\/ctl compression? *\/$/;"	m	struct:PPPControl_s	file:
ackci	net/lwip/netif/ppp/fsm.h	/^  int  (*ackci)(fsm*, u_char*, int);                \/* ACK our Configuration Information *\/$/;"	m	struct:fsm_callbacks
acked	net/lwip/include/lwip/tcp.h	/^  u16_t acked;$/;"	m	struct:tcp_pcb
ackno	net/lwip/core/tcp_in.c	/^static u32_t seqno, ackno;$/;"	v	file:
ackno	obj/net/ns.asm	/^    ackno = pcb->rcv_nxt;$/;"	d
ackno	obj/net/ns.asm	/^  ackno = tcphdr->ackno = ntohl(tcphdr->ackno);$/;"	d
ad	net/lwip/include/lwip/api_msg.h	/^    } ad;$/;"	m	union:api_msg_msg::__anon25	typeref:struct:api_msg_msg::__anon25::__anon28
add	net/lwip/include/lwip/netifapi.h	/^    } add;$/;"	m	union:netifapi_msg_msg::__anon22	typeref:struct:netifapi_msg_msg::__anon22::__anon23
addci	net/lwip/netif/ppp/fsm.h	/^  void (*addci)(fsm*, u_char*, int*);               \/* Add our Configuration Information *\/$/;"	m	struct:fsm_callbacks
addr	net/lwip/api/netdb.c	/^  struct ip_addr addr;$/;"	m	struct:gethostbyname_r_helper	typeref:struct:gethostbyname_r_helper::ip_addr	file:
addr	net/lwip/include/lwip/api_msg.h	/^  struct ip_addr *addr;$/;"	m	struct:dns_api_msg	typeref:struct:dns_api_msg::ip_addr
addr	net/lwip/include/lwip/netbuf.h	/^  struct ip_addr *addr;$/;"	m	struct:netbuf	typeref:struct:netbuf::ip_addr
addr	obj/fs/fs.asm	/^	addr = (void *)ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/net/ns.asm	/^	addr = (void *)ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/net/ns.asm	/^      addr = (struct ip_addr*)&(sin.sin_addr.s_addr);$/;"	d
addr	obj/net/ns.asm	/^      addr = netbuf_fromaddr(buf);$/;"	d
addr	obj/net/testinput.asm	/^	addr = (void *)ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/net/testoutput.asm	/^	addr = (void *)ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/forktree.asm	/^	addr = (void *)ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/pingpong.asm	/^	addr = (void *)ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/pingpongs.asm	/^	addr = (void *)ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/primes.asm	/^	addr = (void *)ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/primespipe.asm	/^	addr = (void *)ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/sendpage.asm	/^	addr = (void *)ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/sh.asm	/^	addr = (void *)ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/spin.asm	/^	addr = (void *)ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/stresssched.asm	/^	addr = (void *)ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/testfdsharing.asm	/^	addr = (void *)ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/testpipe.asm	/^	addr = (void *)ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/testpiperace.asm	/^	addr = (void *)ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/testpiperace2.asm	/^	addr = (void *)ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/testpteshare.asm	/^	addr = (void *)ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/testshell.asm	/^	addr = (void *)ROUNDDOWN(addr, PGSIZE);$/;"	d
addr2test	obj/net/ns.asm	/^  addr2test = addr->addr;$/;"	d
addr_6845	kern/console.c	/^static unsigned addr_6845;$/;"	v	file:
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = CGA_BASE;$/;"	d
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = MONO_BASE;$/;"	d
addr_hint	net/lwip/include/lwip/netif.h	/^  u8_t *addr_hint;$/;"	m	struct:netif
addr_inf	net/lwip/include/lwip/snmp_structs.h	/^  void* addr_inf;$/;"	m	struct:mib_external_node
addresses	net/lwip/netif/ppp/auth.c	/^static struct wordlist *addresses[NUM_PPP];$/;"	v	typeref:struct:wordlist	file:
addrinfo	net/lwip/include/lwip/netdb.h	/^struct addrinfo {$/;"	s
addrs	net/lwip/api/netdb.c	/^  struct ip_addr *addrs;$/;"	m	struct:gethostbyname_r_helper	typeref:struct:gethostbyname_r_helper::ip_addr	file:
addrs	net/lwip/netif/ppp/ppp.c	/^  struct ppp_addrs addrs;$/;"	m	struct:PPPControl_s	typeref:struct:PPPControl_s::ppp_addrs	file:
after	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:	file:
again	obj/net/ns.asm	/^ again:$/;"	l
again	obj/user/sh.asm	/^again:$/;"	l
age_pending	obj/net/ns.asm	/^          age_pending = arp_table[i].ctime;$/;"	d
age_queue	obj/net/ns.asm	/^          age_queue = arp_table[i].ctime;$/;"	d
age_stable	obj/net/ns.asm	/^        age_stable = arp_table[i].ctime;$/;"	d
ai_addr	net/lwip/include/lwip/netdb.h	/^    struct sockaddr  *ai_addr;       \/* Socket address of socket. *\/$/;"	m	struct:addrinfo	typeref:struct:addrinfo::sockaddr
ai_addrlen	net/lwip/include/lwip/netdb.h	/^    socklen_t         ai_addrlen;    \/* Length of socket address. *\/$/;"	m	struct:addrinfo
ai_canonname	net/lwip/include/lwip/netdb.h	/^    char             *ai_canonname;  \/* Canonical name of service location. *\/$/;"	m	struct:addrinfo
ai_family	net/lwip/include/lwip/netdb.h	/^    int               ai_family;     \/* Address family of socket. *\/$/;"	m	struct:addrinfo
ai_flags	net/lwip/include/lwip/netdb.h	/^    int               ai_flags;      \/* Input flags. *\/$/;"	m	struct:addrinfo
ai_next	net/lwip/include/lwip/netdb.h	/^    struct addrinfo  *ai_next;       \/* Pointer to next in list. *\/$/;"	m	struct:addrinfo	typeref:struct:addrinfo::addrinfo
ai_protocol	net/lwip/include/lwip/netdb.h	/^    int               ai_protocol;   \/* Protocol of socket. *\/$/;"	m	struct:addrinfo
ai_socktype	net/lwip/include/lwip/netdb.h	/^    int               ai_socktype;   \/* Socket type. *\/$/;"	m	struct:addrinfo
aliases	net/lwip/api/netdb.c	/^  char *aliases;$/;"	m	struct:gethostbyname_r_helper	file:
alloc	fs/fsformat.c	/^alloc(uint32_t bytes)$/;"	f
alloc_block	fs/fs.c	/^alloc_block(void)$/;"	f
alloc_socket	net/lwip/api/sockets.c	/^alloc_socket(struct netconn *newconn)$/;"	f	file:
alloc_sockfd	lib/sockets.c	/^alloc_sockfd(int sockid)$/;"	f	file:
alloc_tid	net/lwip/jos/arch/thread.c	/^alloc_tid(void) {$/;"	f	file:
allrouters	net/lwip/core/ipv4/igmp.c	/^static struct ip_addr     allrouters;$/;"	v	typeref:struct:ip_addr	file:
allsystems	net/lwip/core/ipv4/igmp.c	/^static struct ip_addr     allsystems;$/;"	v	typeref:struct:ip_addr	file:
altflag	obj/fs/fs.asm	/^			altflag = 1;$/;"	d
altflag	obj/fs/fs.asm	/^		altflag = 0;$/;"	d
altflag	obj/kern/kernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/kern/kernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/net/ns.asm	/^			altflag = 1;$/;"	d
altflag	obj/net/ns.asm	/^		altflag = 0;$/;"	d
altflag	obj/net/testinput.asm	/^			altflag = 1;$/;"	d
altflag	obj/net/testinput.asm	/^		altflag = 0;$/;"	d
altflag	obj/net/testoutput.asm	/^			altflag = 1;$/;"	d
altflag	obj/net/testoutput.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/badsegment.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/badsegment.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/breakpoint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/breakpoint.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/buggyhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/buggyhello2.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello2.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/cat.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/cat.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/divzero.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/divzero.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/dumbfork.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/dumbfork.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/echo.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/echo.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/echosrv.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/echosrv.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/echotest.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/echotest.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/evilhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/evilhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/fairness.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/fairness.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultalloc.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultalloc.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultallocbad.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultallocbad.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultbadhandler.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultbadhandler.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultdie.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultdie.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultevilhandler.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultevilhandler.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultnostack.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultnostack.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultread.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultread.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultregs.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultregs.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultwrite.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwrite.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/forktree.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/forktree.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/hello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/hello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/httpd.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/httpd.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/icode.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/icode.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/idle.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/idle.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/init.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/init.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/ls.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/ls.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/lsfd.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/lsfd.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/num.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/num.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/pingpong.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/pingpong.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/pingpongs.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/pingpongs.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/primes.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/primes.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/primespipe.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/primespipe.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/sendpage.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/sendpage.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/sh.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/sh.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/softint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/softint.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/spawnhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/spawnhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/spin.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/spin.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/stresssched.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/stresssched.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testbss.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testbss.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testfdsharing.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testfdsharing.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testfile.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testfile.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testkbd.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testkbd.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testpipe.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testpipe.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testpiperace.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testpiperace.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testpiperace2.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testpiperace2.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testpteshare.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testpteshare.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testshell.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testshell.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testtime.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testtime.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/yield.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/yield.asm	/^		altflag = 0;$/;"	d
announce	net/testinput.c	/^announce(void)$/;"	f	file:
any_matches	obj/kern/kernel.asm	/^		any_matches = 1;$/;"	d
ap	obj/net/ns.asm	/^  ap = (u8_t *)&s_addr;$/;"	d
ap	obj/net/testinput.asm	/^  ap = (u8_t *)&s_addr;$/;"	d
ap	obj/user/echosrv.asm	/^  ap = (u8_t *)&s_addr;$/;"	d
ap	obj/user/echotest.asm	/^  ap = (u8_t *)&s_addr;$/;"	d
ap	obj/user/httpd.asm	/^  ap = (u8_t *)&s_addr;$/;"	d
api_msg	net/lwip/include/lwip/api_msg.h	/^struct api_msg {$/;"	s
api_msg_msg	net/lwip/include/lwip/api_msg.h	/^struct api_msg_msg {$/;"	s
apicid	kern/mpconfig.c	/^	uint8_t apicid;                 \/\/ local APIC id$/;"	m	struct:mpproc	file:
apiflags	net/lwip/include/lwip/api_msg.h	/^      u8_t apiflags;$/;"	m	struct:api_msg_msg::__anon25::__anon29
apimsg	net/lwip/include/lwip/tcpip.h	/^    struct api_msg *apimsg;$/;"	m	union:tcpip_msg::__anon17	typeref:struct:tcpip_msg::__anon17::api_msg
arg	net/lwip/core/dns.c	/^  void *arg;$/;"	m	struct:dns_table_entry	file:
arg	net/lwip/include/lwip/sys.h	/^  void *arg;$/;"	m	struct:sys_timeo
arg	net/lwip/include/lwip/tcpip.h	/^      void *arg;$/;"	m	struct:tcpip_msg::__anon17::__anon20
arg	net/lwip/jos/arch/sys_arch.c	/^    void *arg;$/;"	m	struct:lwip_thread	file:
arg	obj/net/ns.asm	/^      arg = tmptimeout->arg;$/;"	d
arg	obj/net/ns.asm	/^  arg = arg;$/;"	d
arg	obj/user/ls.asm	/^	arg = (unsigned char) *args->curarg;$/;"	d
arg	obj/user/lsfd.asm	/^	arg = (unsigned char) *args->curarg;$/;"	d
arg	obj/user/sh.asm	/^	arg = (unsigned char) *args->curarg;$/;"	d
argc	inc/args.h	/^	int *argc;$/;"	m	struct:Argstate
argc	obj/kern/kernel.asm	/^	argc = 0;$/;"	d
argc	obj/user/sh.asm	/^	argc = 0;$/;"	d
argnext	lib/args.c	/^argnext(struct Argstate *args)$/;"	f
argnextvalue	lib/args.c	/^argnextvalue(struct Argstate *args)$/;"	f
args_exist	lib/entry.S	/^args_exist:$/;"	l
args_exist	obj/fs/fs.asm	/^args_exist:$/;"	l
args_exist	obj/net/ns.asm	/^args_exist:$/;"	l
args_exist	obj/net/testinput.asm	/^args_exist:$/;"	l
args_exist	obj/net/testoutput.asm	/^args_exist:$/;"	l
args_exist	obj/user/badsegment.asm	/^args_exist:$/;"	l
args_exist	obj/user/breakpoint.asm	/^args_exist:$/;"	l
args_exist	obj/user/buggyhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/buggyhello2.asm	/^args_exist:$/;"	l
args_exist	obj/user/cat.asm	/^args_exist:$/;"	l
args_exist	obj/user/divzero.asm	/^args_exist:$/;"	l
args_exist	obj/user/dumbfork.asm	/^args_exist:$/;"	l
args_exist	obj/user/echo.asm	/^args_exist:$/;"	l
args_exist	obj/user/echosrv.asm	/^args_exist:$/;"	l
args_exist	obj/user/echotest.asm	/^args_exist:$/;"	l
args_exist	obj/user/evilhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/fairness.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultalloc.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultallocbad.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultbadhandler.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultdie.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultevilhandler.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultnostack.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultread.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultreadkernel.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultregs.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultwrite.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultwritekernel.asm	/^args_exist:$/;"	l
args_exist	obj/user/forktree.asm	/^args_exist:$/;"	l
args_exist	obj/user/hello.asm	/^args_exist:$/;"	l
args_exist	obj/user/httpd.asm	/^args_exist:$/;"	l
args_exist	obj/user/icode.asm	/^args_exist:$/;"	l
args_exist	obj/user/idle.asm	/^args_exist:$/;"	l
args_exist	obj/user/init.asm	/^args_exist:$/;"	l
args_exist	obj/user/ls.asm	/^args_exist:$/;"	l
args_exist	obj/user/lsfd.asm	/^args_exist:$/;"	l
args_exist	obj/user/num.asm	/^args_exist:$/;"	l
args_exist	obj/user/pingpong.asm	/^args_exist:$/;"	l
args_exist	obj/user/pingpongs.asm	/^args_exist:$/;"	l
args_exist	obj/user/primes.asm	/^args_exist:$/;"	l
args_exist	obj/user/primespipe.asm	/^args_exist:$/;"	l
args_exist	obj/user/sendpage.asm	/^args_exist:$/;"	l
args_exist	obj/user/sh.asm	/^args_exist:$/;"	l
args_exist	obj/user/softint.asm	/^args_exist:$/;"	l
args_exist	obj/user/spawnhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/spin.asm	/^args_exist:$/;"	l
args_exist	obj/user/stresssched.asm	/^args_exist:$/;"	l
args_exist	obj/user/testbss.asm	/^args_exist:$/;"	l
args_exist	obj/user/testfdsharing.asm	/^args_exist:$/;"	l
args_exist	obj/user/testfile.asm	/^args_exist:$/;"	l
args_exist	obj/user/testkbd.asm	/^args_exist:$/;"	l
args_exist	obj/user/testpipe.asm	/^args_exist:$/;"	l
args_exist	obj/user/testpiperace.asm	/^args_exist:$/;"	l
args_exist	obj/user/testpiperace2.asm	/^args_exist:$/;"	l
args_exist	obj/user/testpteshare.asm	/^args_exist:$/;"	l
args_exist	obj/user/testshell.asm	/^args_exist:$/;"	l
args_exist	obj/user/testtime.asm	/^args_exist:$/;"	l
args_exist	obj/user/yield.asm	/^args_exist:$/;"	l
argstart	lib/args.c	/^argstart(int *argc, char **argv, struct Argstate *args)$/;"	f
argv	inc/args.h	/^	const char **argv;$/;"	m	struct:Argstate
argv_store	obj/user/icode.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/init.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/sh.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/spawnhello.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/testpteshare.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/testshell.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argvalue	inc/args.h	/^	const char *argvalue;$/;"	m	struct:Argstate
argvalue	lib/args.c	/^argvalue(struct Argstate *args)$/;"	f
arp_table	net/lwip/netif/etharp.c	/^static struct etharp_entry arp_table[ARP_TABLE_SIZE];$/;"	v	typeref:struct:etharp_entry	file:
arp_timer	net/lwip/api/tcpip.c	/^arp_timer(void *arg)$/;"	f	file:
arptree_root	net/lwip/core/snmp/mib2.c	/^struct mib_list_rootnode arptree_root = {$/;"	v	typeref:struct:mib_list_rootnode
ascii_to_bytes	grade-lab6	/^def ascii_to_bytes(s):$/;"	f
asn_type	net/lwip/include/lwip/snmp_structs.h	/^  u8_t asn_type;$/;"	m	struct:obj_def
assert	inc/assert.h	14;"	d
assert_equal	gradelib.py	/^def assert_equal(got, expect, msg=""):$/;"	f
assert_lines_match	gradelib.py	/^def assert_lines_match(text, *regexps, **kw):$/;"	f
assert_lines_match_kw	gradelib.py	/^    def assert_lines_match_kw(no=[]):$/;"	f	function:assert_lines_match
asyncmap	net/lwip/netif/ppp/lcp.h	/^    u32_t asyncmap;              \/* Value of async map *\/$/;"	m	struct:lcp_options
at	net/lwip/core/snmp/mib2.c	/^struct mib_ram_array_node at = {$/;"	v	typeref:struct:mib_ram_array_node
at_id	net/lwip/core/snmp/mib2.c	/^s32_t at_id = 1;$/;"	v
atentry	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node atentry = {$/;"	v	typeref:struct:mib_array_node
atentry_get_object_def	net/lwip/core/snmp/mib2.c	/^atentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
atentry_get_value	net/lwip/core/snmp/mib2.c	/^atentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
atentry_ids	net/lwip/core/snmp/mib2.c	/^const s32_t atentry_ids[3] = { 1, 2, 3 };$/;"	v
atentry_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const atentry_nodes[3] = {$/;"	v
attable	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node attable = {$/;"	v	typeref:struct:mib_array_node
attable_id	net/lwip/core/snmp/mib2.c	/^const s32_t attable_id = 1;$/;"	v
attable_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* const attable_node = (struct mib_node* const)&atentry;$/;"	v
attachfn	kern/pci.c	/^	int (*attachfn) (struct pci_func *pcif);$/;"	m	struct:pci_driver	file:
auth_ip_addr	net/lwip/netif/ppp/auth.c	/^auth_ip_addr(int unit, u32_t addr)$/;"	f
auth_peer_fail	net/lwip/netif/ppp/auth.c	/^auth_peer_fail(int unit, u16_t protocol)$/;"	f
auth_peer_success	net/lwip/netif/ppp/auth.c	/^auth_peer_success(int unit, u16_t protocol, char *name, int namelen)$/;"	f
auth_pending	net/lwip/netif/ppp/auth.c	/^static int auth_pending[NUM_PPP];$/;"	v	file:
auth_required	net/lwip/netif/ppp/ppp.h	/^  u_int  auth_required     : 1;       \/* Peer is required to authenticate *\/$/;"	m	struct:ppp_settings
auth_reset	net/lwip/netif/ppp/auth.c	/^auth_reset(int unit)$/;"	f
auth_withpeer_fail	net/lwip/netif/ppp/auth.c	/^auth_withpeer_fail(int unit, u16_t protocol)$/;"	f
auth_withpeer_success	net/lwip/netif/ppp/auth.c	/^auth_withpeer_success(int unit, u16_t protocol)$/;"	f
autoip	net/lwip/include/ipv4/lwip/autoip.h	/^struct autoip$/;"	s
autoip	net/lwip/include/lwip/netif.h	/^  struct autoip *autoip;$/;"	m	struct:netif	typeref:struct:netif::autoip
autoip_arp_announce	net/lwip/core/ipv4/autoip.c	/^autoip_arp_announce(struct netif *netif)$/;"	f	file:
autoip_arp_reply	net/lwip/core/ipv4/autoip.c	/^autoip_arp_reply(struct netif *netif, struct etharp_hdr *hdr)$/;"	f
autoip_bind	net/lwip/core/ipv4/autoip.c	/^autoip_bind(struct netif *netif)$/;"	f	file:
autoip_coop_state	net/lwip/include/lwip/dhcp.h	/^  u8_t autoip_coop_state;$/;"	m	struct:dhcp
autoip_create_rand_addr	net/lwip/core/ipv4/autoip.c	/^autoip_create_rand_addr(struct netif *netif, struct ip_addr *RandomIPAddr)$/;"	f	file:
autoip_handle_arp_conflict	net/lwip/core/ipv4/autoip.c	/^autoip_handle_arp_conflict(struct netif *netif)$/;"	f	file:
autoip_init	net/lwip/core/ipv4/autoip.c	/^autoip_init(void)$/;"	f
autoip_start	net/lwip/core/ipv4/autoip.c	/^autoip_start(struct netif *netif)$/;"	f
autoip_stop	net/lwip/core/ipv4/autoip.c	/^autoip_stop(struct netif *netif)$/;"	f
autoip_timer	net/lwip/api/tcpip.c	/^autoip_timer(void *arg)$/;"	f	file:
autoip_tmr	net/lwip/core/ipv4/autoip.c	/^autoip_tmr()$/;"	f
avChurnRand	net/lwip/netif/ppp/randm.c	/^avChurnRand(char *randData, u32_t randLen)$/;"	f
avGenRand	net/lwip/netif/ppp/randm.c	/^avGenRand(char *buf, u32_t bufLen)$/;"	f
avRandom	net/lwip/netif/ppp/randm.c	/^avRandom()$/;"	f
avRandomInit	net/lwip/netif/ppp/randm.c	/^avRandomInit()$/;"	f
avRandomSeed	net/lwip/netif/ppp/randm.c	/^static u32_t avRandomSeed = 0;      \/* Seed used for random number generation. *\/$/;"	v	file:
avRandomize	net/lwip/netif/ppp/randm.c	/^avRandomize(void)$/;"	f
avRandomize	net/lwip/netif/ppp/randm.h	60;"	d
avRandomized	net/lwip/netif/ppp/randm.c	/^static int  avRandomized = 0;       \/* Set when truely randomized. *\/$/;"	v	file:
avail	net/lwip/include/lwip/stats.h	/^  mem_size_t avail;$/;"	m	struct:stats_mem
available	obj/net/ns.asm	/^  available = tcp_sndbuf(conn->pcb.tcp);$/;"	d
b	net/lwip/include/lwip/api_msg.h	/^    struct netbuf *b;$/;"	m	union:api_msg_msg::__anon25	typeref:struct:api_msg_msg::__anon25::netbuf
backlog	net/lwip/include/lwip/api_msg.h	/^      u8_t backlog;$/;"	m	struct:api_msg_msg::__anon25::__anon32
backlog	net/lwip/include/lwip/tcp.h	/^  u8_t backlog;$/;"	m	struct:tcp_pcb_listen
backlog	obj/net/ns.asm	/^    backlog = 0xff;$/;"	d
bad	obj/kern/kernel.asm	/^bad:$/;"	l
bad_ip_adrs	net/lwip/netif/ppp/auth.c	/^bad_ip_adrs(u32_t addr)$/;"	f
bar_width	obj/kern/kernel.asm	/^				bar_width = 8;$/;"	d
bar_width	obj/kern/kernel.asm	/^		bar_width = 4;$/;"	d
base	obj/fs/fs.asm	/^			base = 10;$/;"	d
base	obj/fs/fs.asm	/^			base = 16;$/;"	d
base	obj/fs/fs.asm	/^			base = 8;$/;"	d
base	obj/fs/fs.asm	/^		base = 10;$/;"	d
base	obj/kern/kernel.asm	/^			base = 10;$/;"	d
base	obj/kern/kernel.asm	/^			base = 16;$/;"	d
base	obj/kern/kernel.asm	/^			base = 8;$/;"	d
base	obj/kern/kernel.asm	/^			base = PCI_MAPREG_IO_ADDR(oldv);$/;"	d
base	obj/kern/kernel.asm	/^			base = PCI_MAPREG_MEM_ADDR(oldv);$/;"	d
base	obj/kern/kernel.asm	/^		base = 10;$/;"	d
base	obj/kern/kernel.asm	/^	base = (char *)ROUNDDOWN(va, PGSIZE);$/;"	d
base	obj/net/ns.asm	/^			base = 10;$/;"	d
base	obj/net/ns.asm	/^			base = 16;$/;"	d
base	obj/net/ns.asm	/^			base = 8;$/;"	d
base	obj/net/ns.asm	/^		base = 10;$/;"	d
base	obj/net/ns.asm	/^        base = 16;$/;"	d
base	obj/net/ns.asm	/^        base = 8;$/;"	d
base	obj/net/ns.asm	/^    base = 10;$/;"	d
base	obj/net/testinput.asm	/^			base = 10;$/;"	d
base	obj/net/testinput.asm	/^			base = 16;$/;"	d
base	obj/net/testinput.asm	/^			base = 8;$/;"	d
base	obj/net/testinput.asm	/^		base = 10;$/;"	d
base	obj/net/testinput.asm	/^        base = 16;$/;"	d
base	obj/net/testinput.asm	/^        base = 8;$/;"	d
base	obj/net/testinput.asm	/^    base = 10;$/;"	d
base	obj/net/testoutput.asm	/^			base = 10;$/;"	d
base	obj/net/testoutput.asm	/^			base = 16;$/;"	d
base	obj/net/testoutput.asm	/^			base = 8;$/;"	d
base	obj/net/testoutput.asm	/^		base = 10;$/;"	d
base	obj/user/badsegment.asm	/^			base = 10;$/;"	d
base	obj/user/badsegment.asm	/^			base = 16;$/;"	d
base	obj/user/badsegment.asm	/^			base = 8;$/;"	d
base	obj/user/badsegment.asm	/^		base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 16;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 8;$/;"	d
base	obj/user/breakpoint.asm	/^		base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 8;$/;"	d
base	obj/user/buggyhello.asm	/^		base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 8;$/;"	d
base	obj/user/buggyhello2.asm	/^		base = 10;$/;"	d
base	obj/user/cat.asm	/^			base = 10;$/;"	d
base	obj/user/cat.asm	/^			base = 16;$/;"	d
base	obj/user/cat.asm	/^			base = 8;$/;"	d
base	obj/user/cat.asm	/^		base = 10;$/;"	d
base	obj/user/divzero.asm	/^			base = 10;$/;"	d
base	obj/user/divzero.asm	/^			base = 16;$/;"	d
base	obj/user/divzero.asm	/^			base = 8;$/;"	d
base	obj/user/divzero.asm	/^		base = 10;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 10;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 16;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 8;$/;"	d
base	obj/user/dumbfork.asm	/^		base = 10;$/;"	d
base	obj/user/echo.asm	/^			base = 10;$/;"	d
base	obj/user/echo.asm	/^			base = 16;$/;"	d
base	obj/user/echo.asm	/^			base = 8;$/;"	d
base	obj/user/echo.asm	/^		base = 10;$/;"	d
base	obj/user/echosrv.asm	/^			base = 10;$/;"	d
base	obj/user/echosrv.asm	/^			base = 16;$/;"	d
base	obj/user/echosrv.asm	/^			base = 8;$/;"	d
base	obj/user/echosrv.asm	/^		base = 10;$/;"	d
base	obj/user/echosrv.asm	/^        base = 16;$/;"	d
base	obj/user/echosrv.asm	/^        base = 8;$/;"	d
base	obj/user/echosrv.asm	/^    base = 10;$/;"	d
base	obj/user/echotest.asm	/^			base = 10;$/;"	d
base	obj/user/echotest.asm	/^			base = 16;$/;"	d
base	obj/user/echotest.asm	/^			base = 8;$/;"	d
base	obj/user/echotest.asm	/^		base = 10;$/;"	d
base	obj/user/echotest.asm	/^        base = 16;$/;"	d
base	obj/user/echotest.asm	/^        base = 8;$/;"	d
base	obj/user/echotest.asm	/^    base = 10;$/;"	d
base	obj/user/evilhello.asm	/^			base = 10;$/;"	d
base	obj/user/evilhello.asm	/^			base = 16;$/;"	d
base	obj/user/evilhello.asm	/^			base = 8;$/;"	d
base	obj/user/evilhello.asm	/^		base = 10;$/;"	d
base	obj/user/fairness.asm	/^			base = 10;$/;"	d
base	obj/user/fairness.asm	/^			base = 16;$/;"	d
base	obj/user/fairness.asm	/^			base = 8;$/;"	d
base	obj/user/fairness.asm	/^		base = 10;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 10;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 16;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 8;$/;"	d
base	obj/user/faultalloc.asm	/^		base = 10;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 10;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 16;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 8;$/;"	d
base	obj/user/faultallocbad.asm	/^		base = 10;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 10;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 16;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 8;$/;"	d
base	obj/user/faultbadhandler.asm	/^		base = 10;$/;"	d
base	obj/user/faultdie.asm	/^			base = 10;$/;"	d
base	obj/user/faultdie.asm	/^			base = 16;$/;"	d
base	obj/user/faultdie.asm	/^			base = 8;$/;"	d
base	obj/user/faultdie.asm	/^		base = 10;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 10;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 16;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 8;$/;"	d
base	obj/user/faultevilhandler.asm	/^		base = 10;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 10;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 16;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 8;$/;"	d
base	obj/user/faultnostack.asm	/^		base = 10;$/;"	d
base	obj/user/faultread.asm	/^			base = 10;$/;"	d
base	obj/user/faultread.asm	/^			base = 16;$/;"	d
base	obj/user/faultread.asm	/^			base = 8;$/;"	d
base	obj/user/faultread.asm	/^		base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 8;$/;"	d
base	obj/user/faultreadkernel.asm	/^		base = 10;$/;"	d
base	obj/user/faultregs.asm	/^			base = 10;$/;"	d
base	obj/user/faultregs.asm	/^			base = 16;$/;"	d
base	obj/user/faultregs.asm	/^			base = 8;$/;"	d
base	obj/user/faultregs.asm	/^		base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 16;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 8;$/;"	d
base	obj/user/faultwrite.asm	/^		base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 8;$/;"	d
base	obj/user/faultwritekernel.asm	/^		base = 10;$/;"	d
base	obj/user/forktree.asm	/^			base = 10;$/;"	d
base	obj/user/forktree.asm	/^			base = 16;$/;"	d
base	obj/user/forktree.asm	/^			base = 8;$/;"	d
base	obj/user/forktree.asm	/^		base = 10;$/;"	d
base	obj/user/hello.asm	/^			base = 10;$/;"	d
base	obj/user/hello.asm	/^			base = 16;$/;"	d
base	obj/user/hello.asm	/^			base = 8;$/;"	d
base	obj/user/hello.asm	/^		base = 10;$/;"	d
base	obj/user/httpd.asm	/^			base = 10;$/;"	d
base	obj/user/httpd.asm	/^			base = 16;$/;"	d
base	obj/user/httpd.asm	/^			base = 8;$/;"	d
base	obj/user/httpd.asm	/^		base = 10;$/;"	d
base	obj/user/httpd.asm	/^        base = 16;$/;"	d
base	obj/user/httpd.asm	/^        base = 8;$/;"	d
base	obj/user/httpd.asm	/^    base = 10;$/;"	d
base	obj/user/icode.asm	/^			base = 10;$/;"	d
base	obj/user/icode.asm	/^			base = 16;$/;"	d
base	obj/user/icode.asm	/^			base = 8;$/;"	d
base	obj/user/icode.asm	/^		base = 10;$/;"	d
base	obj/user/idle.asm	/^			base = 10;$/;"	d
base	obj/user/idle.asm	/^			base = 16;$/;"	d
base	obj/user/idle.asm	/^			base = 8;$/;"	d
base	obj/user/idle.asm	/^		base = 10;$/;"	d
base	obj/user/init.asm	/^			base = 10;$/;"	d
base	obj/user/init.asm	/^			base = 16;$/;"	d
base	obj/user/init.asm	/^			base = 8;$/;"	d
base	obj/user/init.asm	/^		base = 10;$/;"	d
base	obj/user/ls.asm	/^			base = 10;$/;"	d
base	obj/user/ls.asm	/^			base = 16;$/;"	d
base	obj/user/ls.asm	/^			base = 8;$/;"	d
base	obj/user/ls.asm	/^		base = 10;$/;"	d
base	obj/user/lsfd.asm	/^			base = 10;$/;"	d
base	obj/user/lsfd.asm	/^			base = 16;$/;"	d
base	obj/user/lsfd.asm	/^			base = 8;$/;"	d
base	obj/user/lsfd.asm	/^		base = 10;$/;"	d
base	obj/user/num.asm	/^			base = 10;$/;"	d
base	obj/user/num.asm	/^			base = 16;$/;"	d
base	obj/user/num.asm	/^			base = 8;$/;"	d
base	obj/user/num.asm	/^		base = 10;$/;"	d
base	obj/user/pingpong.asm	/^			base = 10;$/;"	d
base	obj/user/pingpong.asm	/^			base = 16;$/;"	d
base	obj/user/pingpong.asm	/^			base = 8;$/;"	d
base	obj/user/pingpong.asm	/^		base = 10;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 10;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 16;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 8;$/;"	d
base	obj/user/pingpongs.asm	/^		base = 10;$/;"	d
base	obj/user/primes.asm	/^			base = 10;$/;"	d
base	obj/user/primes.asm	/^			base = 16;$/;"	d
base	obj/user/primes.asm	/^			base = 8;$/;"	d
base	obj/user/primes.asm	/^		base = 10;$/;"	d
base	obj/user/primespipe.asm	/^			base = 10;$/;"	d
base	obj/user/primespipe.asm	/^			base = 16;$/;"	d
base	obj/user/primespipe.asm	/^			base = 8;$/;"	d
base	obj/user/primespipe.asm	/^		base = 10;$/;"	d
base	obj/user/sendpage.asm	/^			base = 10;$/;"	d
base	obj/user/sendpage.asm	/^			base = 16;$/;"	d
base	obj/user/sendpage.asm	/^			base = 8;$/;"	d
base	obj/user/sendpage.asm	/^		base = 10;$/;"	d
base	obj/user/sh.asm	/^			base = 10;$/;"	d
base	obj/user/sh.asm	/^			base = 16;$/;"	d
base	obj/user/sh.asm	/^			base = 8;$/;"	d
base	obj/user/sh.asm	/^		base = 10;$/;"	d
base	obj/user/softint.asm	/^			base = 10;$/;"	d
base	obj/user/softint.asm	/^			base = 16;$/;"	d
base	obj/user/softint.asm	/^			base = 8;$/;"	d
base	obj/user/softint.asm	/^		base = 10;$/;"	d
base	obj/user/spawnhello.asm	/^			base = 10;$/;"	d
base	obj/user/spawnhello.asm	/^			base = 16;$/;"	d
base	obj/user/spawnhello.asm	/^			base = 8;$/;"	d
base	obj/user/spawnhello.asm	/^		base = 10;$/;"	d
base	obj/user/spin.asm	/^			base = 10;$/;"	d
base	obj/user/spin.asm	/^			base = 16;$/;"	d
base	obj/user/spin.asm	/^			base = 8;$/;"	d
base	obj/user/spin.asm	/^		base = 10;$/;"	d
base	obj/user/stresssched.asm	/^			base = 10;$/;"	d
base	obj/user/stresssched.asm	/^			base = 16;$/;"	d
base	obj/user/stresssched.asm	/^			base = 8;$/;"	d
base	obj/user/stresssched.asm	/^		base = 10;$/;"	d
base	obj/user/testbss.asm	/^			base = 10;$/;"	d
base	obj/user/testbss.asm	/^			base = 16;$/;"	d
base	obj/user/testbss.asm	/^			base = 8;$/;"	d
base	obj/user/testbss.asm	/^		base = 10;$/;"	d
base	obj/user/testfdsharing.asm	/^			base = 10;$/;"	d
base	obj/user/testfdsharing.asm	/^			base = 16;$/;"	d
base	obj/user/testfdsharing.asm	/^			base = 8;$/;"	d
base	obj/user/testfdsharing.asm	/^		base = 10;$/;"	d
base	obj/user/testfile.asm	/^			base = 10;$/;"	d
base	obj/user/testfile.asm	/^			base = 16;$/;"	d
base	obj/user/testfile.asm	/^			base = 8;$/;"	d
base	obj/user/testfile.asm	/^		base = 10;$/;"	d
base	obj/user/testkbd.asm	/^			base = 10;$/;"	d
base	obj/user/testkbd.asm	/^			base = 16;$/;"	d
base	obj/user/testkbd.asm	/^			base = 8;$/;"	d
base	obj/user/testkbd.asm	/^		base = 10;$/;"	d
base	obj/user/testpipe.asm	/^			base = 10;$/;"	d
base	obj/user/testpipe.asm	/^			base = 16;$/;"	d
base	obj/user/testpipe.asm	/^			base = 8;$/;"	d
base	obj/user/testpipe.asm	/^		base = 10;$/;"	d
base	obj/user/testpiperace.asm	/^			base = 10;$/;"	d
base	obj/user/testpiperace.asm	/^			base = 16;$/;"	d
base	obj/user/testpiperace.asm	/^			base = 8;$/;"	d
base	obj/user/testpiperace.asm	/^		base = 10;$/;"	d
base	obj/user/testpiperace2.asm	/^			base = 10;$/;"	d
base	obj/user/testpiperace2.asm	/^			base = 16;$/;"	d
base	obj/user/testpiperace2.asm	/^			base = 8;$/;"	d
base	obj/user/testpiperace2.asm	/^		base = 10;$/;"	d
base	obj/user/testpteshare.asm	/^			base = 10;$/;"	d
base	obj/user/testpteshare.asm	/^			base = 16;$/;"	d
base	obj/user/testpteshare.asm	/^			base = 8;$/;"	d
base	obj/user/testpteshare.asm	/^		base = 10;$/;"	d
base	obj/user/testshell.asm	/^			base = 10;$/;"	d
base	obj/user/testshell.asm	/^			base = 16;$/;"	d
base	obj/user/testshell.asm	/^			base = 8;$/;"	d
base	obj/user/testshell.asm	/^		base = 10;$/;"	d
base	obj/user/testtime.asm	/^			base = 10;$/;"	d
base	obj/user/testtime.asm	/^			base = 16;$/;"	d
base	obj/user/testtime.asm	/^			base = 8;$/;"	d
base	obj/user/testtime.asm	/^		base = 10;$/;"	d
base	obj/user/yield.asm	/^			base = 10;$/;"	d
base	obj/user/yield.asm	/^			base = 16;$/;"	d
base	obj/user/yield.asm	/^			base = 8;$/;"	d
base	obj/user/yield.asm	/^		base = 10;$/;"	d
bc	net/lwip/include/lwip/api_msg.h	/^    } bc;$/;"	m	union:api_msg_msg::__anon25	typeref:struct:api_msg_msg::__anon25::__anon27
bc_init	fs/bc.c	/^bc_init(void)$/;"	f
bc_pgfault	fs/bc.c	/^bc_pgfault(struct UTrapframe *utf)$/;"	f	file:
bda	obj/kern/kernel.asm	/^	bda = (uint8_t *) KADDR(0x40 << 4);$/;"	d
before	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:regs	file:
bigarray	user/testbss.c	/^uint32_t bigarray[ARRAYSIZE];$/;"	v
binaryname	lib/libmain.c	/^const char *binaryname = "<unknown>";$/;"	v
binaryname	obj/fs/fs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/fs/fs.asm	/^	binaryname = "fs";$/;"	d
binaryname	obj/net/ns.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/net/ns.asm	/^	binaryname = "ns";$/;"	d
binaryname	obj/net/ns.asm	/^	binaryname = "ns_input";$/;"	d
binaryname	obj/net/ns.asm	/^	binaryname = "ns_output";$/;"	d
binaryname	obj/net/ns.asm	/^	binaryname = "ns_timer";$/;"	d
binaryname	obj/net/testinput.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/net/testinput.asm	/^	binaryname = "ns_input";$/;"	d
binaryname	obj/net/testinput.asm	/^	binaryname = "ns_output";$/;"	d
binaryname	obj/net/testinput.asm	/^	binaryname = "ns_timer";$/;"	d
binaryname	obj/net/testinput.asm	/^	binaryname = "testinput";$/;"	d
binaryname	obj/net/testoutput.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/net/testoutput.asm	/^	binaryname = "ns_input";$/;"	d
binaryname	obj/net/testoutput.asm	/^	binaryname = "ns_output";$/;"	d
binaryname	obj/net/testoutput.asm	/^	binaryname = "ns_timer";$/;"	d
binaryname	obj/net/testoutput.asm	/^	binaryname = "testoutput";$/;"	d
binaryname	obj/user/badsegment.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/breakpoint.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/buggyhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/buggyhello2.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/cat.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/cat.asm	/^	binaryname = "cat";$/;"	d
binaryname	obj/user/divzero.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/dumbfork.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/echo.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/echosrv.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/echotest.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/evilhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/fairness.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultalloc.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultallocbad.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultbadhandler.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultdie.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultevilhandler.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultnostack.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultread.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultreadkernel.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultregs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultwrite.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultwritekernel.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/forktree.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/hello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/httpd.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/httpd.asm	/^	binaryname = "jhttpd";$/;"	d
binaryname	obj/user/icode.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/icode.asm	/^	binaryname = "icode";$/;"	d
binaryname	obj/user/idle.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/idle.asm	/^	binaryname = "idle";$/;"	d
binaryname	obj/user/init.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/ls.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/lsfd.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/num.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/num.asm	/^	binaryname = "num";$/;"	d
binaryname	obj/user/pingpong.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/pingpongs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/primes.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/primespipe.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/primespipe.asm	/^	binaryname = "primespipe";$/;"	d
binaryname	obj/user/sendpage.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/sh.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/softint.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/spawnhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/spin.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/stresssched.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testbss.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testfdsharing.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testfile.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testkbd.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testpipe.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testpipe.asm	/^	binaryname = "pipereadeof";$/;"	d
binaryname	obj/user/testpipe.asm	/^	binaryname = "pipewriteeof";$/;"	d
binaryname	obj/user/testpiperace.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testpiperace2.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testpteshare.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testshell.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testtime.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/yield.asm	/^		binaryname = argv[0];$/;"	d
bind	inc/ns.h	/^	} bind;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_bind
bind	lib/sockets.c	/^bind(int s, struct sockaddr *name, socklen_t namelen)$/;"	f
bind	net/lwip/include/lwip/sockets.h	327;"	d
bitmap	fs/fs.h	/^uint32_t *bitmap;		\/\/ bitmap blocks mapped in memory$/;"	v
bitmap	fs/fsformat.c	/^uint32_t *bitmap;$/;"	v
bitmap	obj/fs/fs.asm	/^	bitmap = diskaddr(2);$/;"	d
bits	obj/fs/fs.asm	/^	bits = (uint32_t*) PGSIZE;$/;"	d
block_is_free	fs/fs.c	/^block_is_free(uint32_t blockno)$/;"	f
blockof	fs/fsformat.c	/^blockof(void *pos)$/;"	f
bn	obj/fs/fs.asm	/^		bn = MIN(BLKSIZE - pos % BLKSIZE, offset + count - pos);$/;"	d
bol	obj/user/num.asm	/^			bol = 0;$/;"	d
bol	obj/user/num.asm	/^			bol = 1;$/;"	d
bol	user/num.c	/^int bol = 1;$/;"	v
bool	fs/fsformat.c	/^typedef int bool;$/;"	t	file:
bool	fs/fsformat.c	21;"	d	file:
bool	fs/fsformat.c	7;"	d	file:
bool	inc/types.h	/^typedef _Bool bool;$/;"	t
bool	obj/fs/fs.asm	/^bool$/;"	l
boot	inc/partition.h	/^	uint8_t boot;$/;"	m	struct:Partitiondesc
boot_alloc	kern/pmap.c	/^boot_alloc(uint32_t n)$/;"	f	file:
boot_aps	kern/init.c	/^boot_aps(void)$/;"	f	file:
boot_map_region	kern/pmap.c	/^boot_map_region(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)$/;"	f	file:
bootcpu	kern/mpconfig.c	/^struct CpuInfo *bootcpu;$/;"	v	typeref:struct:CpuInfo
bootcpu	obj/kern/kernel.asm	/^				bootcpu = &cpus[ncpu];$/;"	d
bootcpu	obj/kern/kernel.asm	/^	bootcpu = &cpus[0];$/;"	d
bootmain	boot/main.c	/^bootmain(void)$/;"	f
bootstack	kern/entry.S	/^bootstack:$/;"	l
bootstacktop	kern/entry.S	/^bootstacktop:$/;"	l
breakpoint	gradelib.py	/^    def breakpoint(self, addr):$/;"	m	class:GDBClient
breakpoint	inc/x86.h	/^breakpoint(void)$/;"	f
bss	user/init.c	/^char bss[6000];$/;"	v
buf	kern/console.c	/^	uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon34	file:
buf	lib/fprintf.c	/^	char buf[256];$/;"	m	struct:printbuf	file:
buf	lib/printf.c	/^	char buf[256];$/;"	m	struct:printbuf	file:
buf	lib/printfmt.c	/^	char *buf;$/;"	m	struct:sprintbuf	file:
buf	lib/readline.c	/^static char buf[BUFLEN];$/;"	v	file:
buf	net/lwip/core/ipv4/ip_frag.c	/^static u8_t buf[LWIP_MEM_ALIGN_SIZE(IP_FRAG_MAX_MTU)];$/;"	v	file:
buf	net/lwip/netif/ppp/md5.h	/^  u32_t buf[4];             \/* scratch buffer *\/$/;"	m	struct:__anon4
buf	obj/fs/fs.asm	/^	buf = vbuf;$/;"	d
buf	obj/kern/kernel.asm	/^		buf = readline("K> ");$/;"	d
buf	obj/net/ns.asm	/^	buf = vbuf;$/;"	d
buf	obj/net/ns.asm	/^      buf = NULL;$/;"	d
buf	obj/net/ns.asm	/^      buf = memp_malloc(MEMP_NETBUF);$/;"	d
buf	obj/net/ns.asm	/^      buf = sock->lastdata;$/;"	d
buf	obj/net/ns.asm	/^    buf = memp_malloc(MEMP_NETBUF);$/;"	d
buf	obj/net/ns.asm	/^  buf = memp_malloc(MEMP_NETBUF);$/;"	d
buf	obj/net/testinput.asm	/^	buf = vbuf;$/;"	d
buf	obj/net/testoutput.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/badsegment.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/breakpoint.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/buggyhello.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/buggyhello2.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/cat.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/divzero.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/dumbfork.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/echo.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/echosrv.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/echotest.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/evilhello.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/fairness.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultalloc.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultallocbad.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultbadhandler.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultdie.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultevilhandler.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultnostack.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultread.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultreadkernel.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultregs.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultwrite.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultwritekernel.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/forktree.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/hello.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/httpd.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/icode.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/idle.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/init.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/ls.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/lsfd.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/num.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/pingpong.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/pingpongs.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/primes.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/primespipe.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/sendpage.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/sh.asm	/^		buf = readline(interactive ? "$ " : NULL);$/;"	d
buf	obj/user/sh.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/softint.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/spawnhello.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/spin.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/stresssched.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testbss.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testfdsharing.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testfile.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testkbd.asm	/^		buf = readline("Type a line: ");$/;"	d
buf	obj/user/testkbd.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testpipe.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testpiperace.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testpiperace2.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testpteshare.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testshell.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testtime.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/yield.asm	/^	buf = vbuf;$/;"	d
buf	user/cat.c	/^char buf[8192];$/;"	v
buf	user/testfdsharing.c	/^char buf[512], buf2[512];$/;"	v
buf2	user/testfdsharing.c	/^char buf[512], buf2[512];$/;"	v
buf_copy_len	obj/net/ns.asm	/^          buf_copy_len = len;$/;"	d
buf_copy_len	obj/net/ns.asm	/^      buf_copy_len = p->len - offset;$/;"	d
buffer_addr	kern/e1000.h	/^	uint64_t buffer_addr;       \/* Address of the descriptor's data buffer *\/$/;"	m	struct:e1000_tx_desc
buffer_addr	kern/e1000.h	/^    uint64_t buffer_addr; \/* Address of the descriptor's data buffer *\/$/;"	m	struct:e1000_rx_desc
buflen	obj/net/ns.asm	/^      buflen = netbuf_len(sock->lastdata);$/;"	d
buflen	obj/net/ns.asm	/^    buflen = netbuf_len(buf);$/;"	d
bus	kern/pci.h	/^    struct pci_bus *bus;	\/\/ Primary bus for bridges$/;"	m	struct:pci_func	typeref:struct:pci_func::pci_bus
buse	net/serv.c	/^static bool buse[QUEUE_SIZE];$/;"	v	file:
busno	kern/pci.h	/^    uint32_t busno;$/;"	m	struct:pci_bus
bytes	obj/net/ns.asm	/^	    bytes = len - copied;$/;"	d
c	obj/fs/fs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/kern/kernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/kern/kernel.asm	/^		c = cons.buf[cons.rpos++];$/;"	d
c	obj/kern/kernel.asm	/^		c = getchar();$/;"	d
c	obj/kern/kernel.asm	/^	c = charcode[shift & (CTL | SHIFT)][data];$/;"	d
c	obj/kern/kernel.asm	/^	c = page2kva(pp);$/;"	d
c	obj/net/ns.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/net/ns.asm	/^	c = ROUNDDOWN(v, PGSIZE);$/;"	d
c	obj/net/ns.asm	/^        c = *++cp;$/;"	d
c	obj/net/ns.asm	/^      c = *++cp;$/;"	d
c	obj/net/ns.asm	/^  c = *cp;$/;"	d
c	obj/net/testinput.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/net/testinput.asm	/^        c = *++cp;$/;"	d
c	obj/net/testinput.asm	/^      c = *++cp;$/;"	d
c	obj/net/testinput.asm	/^  c = *cp;$/;"	d
c	obj/net/testoutput.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/badsegment.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/breakpoint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello2.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/cat.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/divzero.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/dumbfork.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/echo.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/echosrv.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/echosrv.asm	/^        c = *++cp;$/;"	d
c	obj/user/echosrv.asm	/^      c = *++cp;$/;"	d
c	obj/user/echosrv.asm	/^  c = *cp;$/;"	d
c	obj/user/echotest.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/echotest.asm	/^        c = *++cp;$/;"	d
c	obj/user/echotest.asm	/^      c = *++cp;$/;"	d
c	obj/user/echotest.asm	/^  c = *cp;$/;"	d
c	obj/user/evilhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/fairness.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultalloc.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultallocbad.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultbadhandler.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultdie.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultevilhandler.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultnostack.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultread.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultreadkernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultregs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwrite.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwritekernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/forktree.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/hello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/httpd.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/httpd.asm	/^	c = ROUNDDOWN(v, PGSIZE);$/;"	d
c	obj/user/httpd.asm	/^        c = *++cp;$/;"	d
c	obj/user/httpd.asm	/^      c = *++cp;$/;"	d
c	obj/user/httpd.asm	/^  c = *cp;$/;"	d
c	obj/user/icode.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/idle.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/init.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/ls.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/lsfd.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/num.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/pingpong.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/pingpongs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/primes.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/primespipe.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/sendpage.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/sh.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/sh.asm	/^		c = getchar();$/;"	d
c	obj/user/sh.asm	/^	c = nc;$/;"	d
c	obj/user/softint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/spawnhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/spin.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/stresssched.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testbss.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testfdsharing.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testfile.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testkbd.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testkbd.asm	/^		c = getchar();$/;"	d
c	obj/user/testpipe.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testpiperace.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testpiperace2.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testpteshare.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testshell.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testtime.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/yield.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
cachehit	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER cachehit;$/;"	m	struct:stats_proto
call_on_line	gradelib.py	/^def call_on_line(regexp, callback):$/;"	f
callback	net/lwip/include/lwip/api.h	/^  netconn_callback callback;$/;"	m	struct:netconn
callbacks	net/lwip/netif/ppp/fsm.h	/^  struct fsm_callbacks* callbacks; \/* Callback routines *\/$/;"	m	struct:fsm	typeref:struct:fsm::fsm_callbacks
cat	user/cat.c	/^cat(int f, char *s)$/;"	f
cb	net/lwip/include/lwip/tcpip.h	/^    } cb;$/;"	m	union:tcpip_msg::__anon17	typeref:struct:tcpip_msg::__anon17::__anon19
cflag	net/lwip/netif/ppp/ipcp.h	/^  u_char  cflag;             \/* VJ slot compression flag. *\/$/;"	m	struct:ipcp_options
cga_init	kern/console.c	/^cga_init(void)$/;"	f	file:
cga_putc	kern/console.c	/^cga_putc(int c)$/;"	f	file:
ch	obj/fs/fs.asm	/^				ch = *fmt;$/;"	d
ch	obj/kern/kernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/net/ns.asm	/^				ch = *fmt;$/;"	d
ch	obj/net/testinput.asm	/^				ch = *fmt;$/;"	d
ch	obj/net/testoutput.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/badsegment.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/breakpoint.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/buggyhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/buggyhello2.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/cat.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/divzero.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/dumbfork.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/echo.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/echosrv.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/echotest.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/evilhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/fairness.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultalloc.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultallocbad.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultbadhandler.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultdie.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultevilhandler.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultnostack.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultread.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultreadkernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultregs.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultwrite.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultwritekernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/forktree.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/hello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/httpd.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/icode.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/idle.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/init.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/ls.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/lsfd.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/num.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/pingpong.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/pingpongs.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/primes.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/primespipe.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/sendpage.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/sh.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/softint.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/spawnhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/spin.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/stresssched.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testbss.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testfdsharing.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testfile.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testkbd.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testpipe.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testpiperace.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testpiperace2.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testpteshare.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testshell.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testtime.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/yield.asm	/^				ch = *fmt;$/;"	d
chal_id	net/lwip/netif/ppp/chap.h	/^  u_char chal_id;                         \/* ID of last challenge *\/$/;"	m	struct:chap_state
chal_interval	net/lwip/netif/ppp/chap.h	/^  int chal_interval;                      \/* Time until we challenge peer again *\/$/;"	m	struct:chap_state
chal_len	net/lwip/netif/ppp/chap.h	/^  u_char chal_len;                        \/* challenge length *\/$/;"	m	struct:chap_state
chal_name	net/lwip/netif/ppp/chap.h	/^  char *chal_name;                        \/* Our name to use with challenge *\/$/;"	m	struct:chap_state
chal_transmits	net/lwip/netif/ppp/chap.h	/^  int chal_transmits;                     \/* Number of transmissions of challenge *\/$/;"	m	struct:chap_state
chal_type	net/lwip/netif/ppp/chap.h	/^  u_char chal_type;                       \/* hash algorithm for challenges *\/$/;"	m	struct:chap_state
challenge	net/lwip/netif/ppp/chap.h	/^  u_char challenge[MAX_CHALLENGE_LENGTH]; \/* last challenge string sent *\/$/;"	m	struct:chap_state
chap	net/lwip/netif/ppp/chap.c	/^chap_state chap[NUM_PPP]; \/* CHAP state; one for each unit *\/$/;"	v
chap_mdtype	net/lwip/netif/ppp/lcp.h	/^    u_char chap_mdtype;          \/* which MD type (hashing algorithm) *\/$/;"	m	struct:lcp_options
chap_protent	net/lwip/netif/ppp/chap.c	/^struct protent chap_protent = {$/;"	v	typeref:struct:protent
chap_state	net/lwip/netif/ppp/chap.h	/^typedef struct chap_state {$/;"	s
chap_state	net/lwip/netif/ppp/chap.h	/^} chap_state;$/;"	t	typeref:struct:chap_state
char	obj/fs/fs.asm	/^char *$/;"	l
char	obj/kern/kernel.asm	/^char *$/;"	l
char	obj/net/ns.asm	/^char *$/;"	l
char	obj/net/testinput.asm	/^char *$/;"	l
char	obj/net/testoutput.asm	/^char *$/;"	l
char	obj/user/badsegment.asm	/^char *$/;"	l
char	obj/user/breakpoint.asm	/^char *$/;"	l
char	obj/user/buggyhello.asm	/^char *$/;"	l
char	obj/user/buggyhello2.asm	/^char *$/;"	l
char	obj/user/cat.asm	/^char *$/;"	l
char	obj/user/cat.asm	/^char buf[8192];$/;"	l
char	obj/user/divzero.asm	/^char *$/;"	l
char	obj/user/dumbfork.asm	/^char *$/;"	l
char	obj/user/echo.asm	/^char *$/;"	l
char	obj/user/echosrv.asm	/^char *$/;"	l
char	obj/user/echotest.asm	/^char *$/;"	l
char	obj/user/evilhello.asm	/^char *$/;"	l
char	obj/user/fairness.asm	/^char *$/;"	l
char	obj/user/faultalloc.asm	/^char *$/;"	l
char	obj/user/faultallocbad.asm	/^char *$/;"	l
char	obj/user/faultbadhandler.asm	/^char *$/;"	l
char	obj/user/faultdie.asm	/^char *$/;"	l
char	obj/user/faultevilhandler.asm	/^char *$/;"	l
char	obj/user/faultnostack.asm	/^char *$/;"	l
char	obj/user/faultread.asm	/^char *$/;"	l
char	obj/user/faultreadkernel.asm	/^char *$/;"	l
char	obj/user/faultregs.asm	/^char *$/;"	l
char	obj/user/faultwrite.asm	/^char *$/;"	l
char	obj/user/faultwritekernel.asm	/^char *$/;"	l
char	obj/user/forktree.asm	/^char *$/;"	l
char	obj/user/hello.asm	/^char *$/;"	l
char	obj/user/httpd.asm	/^char *$/;"	l
char	obj/user/icode.asm	/^char *$/;"	l
char	obj/user/idle.asm	/^char *$/;"	l
char	obj/user/init.asm	/^char *$/;"	l
char	obj/user/init.asm	/^char bss[6000];$/;"	l
char	obj/user/ls.asm	/^char *$/;"	l
char	obj/user/lsfd.asm	/^char *$/;"	l
char	obj/user/num.asm	/^char *$/;"	l
char	obj/user/pingpong.asm	/^char *$/;"	l
char	obj/user/pingpongs.asm	/^char *$/;"	l
char	obj/user/primes.asm	/^char *$/;"	l
char	obj/user/primespipe.asm	/^char *$/;"	l
char	obj/user/sendpage.asm	/^char *$/;"	l
char	obj/user/sh.asm	/^char *$/;"	l
char	obj/user/softint.asm	/^char *$/;"	l
char	obj/user/spawnhello.asm	/^char *$/;"	l
char	obj/user/spin.asm	/^char *$/;"	l
char	obj/user/stresssched.asm	/^char *$/;"	l
char	obj/user/testbss.asm	/^char *$/;"	l
char	obj/user/testfdsharing.asm	/^char *$/;"	l
char	obj/user/testfdsharing.asm	/^char buf[512], buf2[512];$/;"	l
char	obj/user/testfile.asm	/^char *$/;"	l
char	obj/user/testkbd.asm	/^char *$/;"	l
char	obj/user/testpipe.asm	/^char *$/;"	l
char	obj/user/testpipe.asm	/^char *msg = "Now is the time for all good men to come to the aid of their party.";$/;"	l
char	obj/user/testpiperace.asm	/^char *$/;"	l
char	obj/user/testpiperace2.asm	/^char *$/;"	l
char	obj/user/testpteshare.asm	/^char *$/;"	l
char	obj/user/testshell.asm	/^char *$/;"	l
char	obj/user/testtime.asm	/^char *$/;"	l
char	obj/user/yield.asm	/^char *$/;"	l
charcode	kern/console.c	/^static uint8_t *charcode[4] = {$/;"	v	file:
check_bc	fs/bc.c	/^check_bc(void)$/;"	f	file:
check_bitmap	fs/fs.c	/^check_bitmap(void)$/;"	f
check_idle	net/lwip/netif/ppp/auth.c	/^check_idle(void *arg)$/;"	f	file:
check_kern_pgdir	kern/pmap.c	/^check_kern_pgdir(void)$/;"	f	file:
check_page	kern/pmap.c	/^check_page(void)$/;"	f	file:
check_page_alloc	kern/pmap.c	/^check_page_alloc(void)$/;"	f	file:
check_page_free_list	kern/pmap.c	/^check_page_free_list(bool only_low_memory)$/;"	f	file:
check_page_installed_pgdir	kern/pmap.c	/^check_page_installed_pgdir(void)$/;"	f	file:
check_passwd	net/lwip/netif/ppp/auth.c	/^check_passwd( int unit, char *auser, int userlen, char *apasswd, int passwdlen, char **msg, int *msglen)$/;"	f
check_regs	user/faultregs.c	/^check_regs(struct regs* a, const char *an, struct regs* b, const char *bn,$/;"	f	file:
check_super	fs/fs.c	/^check_super(void)$/;"	f
check_va2pa	kern/pmap.c	/^check_va2pa(pde_t *pgdir, uintptr_t va)$/;"	f	file:
checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mp	file:
checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mpconf	file:
child	obj/user/icode.asm	/^	child = r;$/;"	d
child	obj/user/init.asm	/^	child = r;$/;"	d
child	obj/user/sh.asm	/^	child = r;$/;"	d
child	obj/user/spawnhello.asm	/^	child = r;$/;"	d
child	obj/user/testpteshare.asm	/^	child = r;$/;"	d
child	obj/user/testshell.asm	/^	child = r;$/;"	d
child_tf	obj/user/icode.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/init.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/sh.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/spawnhello.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/testpteshare.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/testshell.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
childofspawn	user/testptelibrary.c	/^childofspawn(void)$/;"	f
childofspawn	user/testpteshare.c	/^childofspawn(void)$/;"	f
chkerr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER chkerr;           \/* Checksum error. *\/$/;"	m	struct:stats_igmp
chkerr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER chkerr;           \/* Checksum error. *\/$/;"	m	struct:stats_proto
chklen	obj/net/ns.asm	/^      chklen = chksum_len;$/;"	d
chklen	obj/net/ns.asm	/^    chklen = q->len;$/;"	d
chksum	net/lwip/core/ipv6/inet6.c	/^chksum(void *dataptr, u16_t len)$/;"	f	file:
chksum	net/lwip/include/ipv6/lwip/icmp.h	/^  u16_t chksum;$/;"	m	struct:icmp_dur_hdr
chksum	net/lwip/include/ipv6/lwip/icmp.h	/^  u16_t chksum;$/;"	m	struct:icmp_echo_hdr
chksum	net/lwip/include/ipv6/lwip/icmp.h	/^  u16_t chksum;$/;"	m	struct:icmp_te_hdr
chksum_len_rx	net/lwip/include/lwip/udp.h	/^  u16_t chksum_len_rx, chksum_len_tx;$/;"	m	struct:udp_pcb
chksum_len_tx	net/lwip/include/lwip/udp.h	/^  u16_t chksum_len_rx, chksum_len_tx;$/;"	m	struct:udp_pcb
chs_begin	inc/partition.h	/^	uint8_t chs_begin[3];$/;"	m	struct:Partitiondesc
chs_end	inc/partition.h	/^	uint8_t chs_end[3];$/;"	m	struct:Partitiondesc
cifaddr	net/lwip/netif/ppp/ppp.c	/^cifaddr( int pd, u32_t o, u32_t h)$/;"	f
cifdefaultroute	net/lwip/netif/ppp/ppp.c	/^cifdefaultroute(int pd, u32_t l, u32_t g)$/;"	f
cilen	net/lwip/netif/ppp/fsm.h	/^  int  (*cilen)(fsm*);                              \/* Length of our Configuration Information *\/$/;"	m	struct:fsm_callbacks
cis_received	net/lwip/netif/ppp/ipcp.c	/^static int cis_received[NUM_PPP];      \/* # Conf-Reqs received *\/$/;"	v	file:
class	net/lwip/core/dns.c	/^  u16_t class;$/;"	m	struct:dns_answer	file:
class	net/lwip/core/dns.c	/^  u16_t class;$/;"	m	struct:dns_query	file:
class	obj/kern/kernel.asm	/^		class = pci_class[PCI_CLASS(f->dev_class)];$/;"	d
clen	obj/net/ns.asm	/^  clen = pbuf_clen(p);$/;"	d
clientstate	net/lwip/netif/ppp/chap.h	/^  int clientstate;                        \/* Client state *\/$/;"	m	struct:chap_state
close	gradelib.py	/^    def close(self):$/;"	m	class:GDBClient
close	inc/ns.h	/^	} close;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_close
close	lib/fd.c	/^close(int fdnum)$/;"	f
close	net/lwip/include/lwip/sockets.h	347;"	d
close	net/lwip/netif/ppp/ppp.h	/^    void (*close) (int unit, char *reason);$/;"	m	struct:protent
close_all	lib/fd.c	/^close_all(void)$/;"	f
closesocket	net/lwip/include/lwip/sockets.h	329;"	d
clrflag	obj/fs/fs.asm	/^		clrflag = 0;$/;"	d
clrflag	obj/kern/kernel.asm	/^		clrflag = 0;$/;"	d
clrflag	obj/net/ns.asm	/^		clrflag = 0;$/;"	d
clrflag	obj/net/testinput.asm	/^		clrflag = 0;$/;"	d
clrflag	obj/net/testoutput.asm	/^		clrflag = 0;$/;"	d
clrflag	obj/user/badsegment.asm	/^		clrflag = 0;$/;"	d
clrflag	obj/user/breakpoint.asm	/^		clrflag = 0;$/;"	d
clrflag	obj/user/buggyhello.asm	/^		clrflag = 0;$/;"	d
clrflag	obj/user/buggyhello2.asm	/^		clrflag = 0;$/;"	d
clrflag	obj/user/cat.asm	/^		clrflag = 0;$/;"	d
clrflag	obj/user/divzero.asm	/^		clrflag = 0;$/;"	d
clrflag	obj/user/dumbfork.asm	/^		clrflag = 0;$/;"	d
clrflag	obj/user/echo.asm	/^		clrflag = 0;$/;"	d
clrflag	obj/user/echosrv.asm	/^		clrflag = 0;$/;"	d
clrflag	obj/user/echotest.asm	/^		clrflag = 0;$/;"	d
clrflag	obj/user/evilhello.asm	/^		clrflag = 0;$/;"	d
clrflag	obj/user/fairness.asm	/^		clrflag = 0;$/;"	d
clrflag	obj/user/faultalloc.asm	/^		clrflag = 0;$/;"	d
clrflag	obj/user/faultallocbad.asm	/^		clrflag = 0;$/;"	d
clrflag	obj/user/faultbadhandler.asm	/^		clrflag = 0;$/;"	d
clrflag	obj/user/faultdie.asm	/^		clrflag = 0;$/;"	d
clrflag	obj/user/faultevilhandler.asm	/^		clrflag = 0;$/;"	d
clrflag	obj/user/faultnostack.asm	/^		clrflag = 0;$/;"	d
clrflag	obj/user/faultread.asm	/^		clrflag = 0;$/;"	d
clrflag	obj/user/faultreadkernel.asm	/^		clrflag = 0;$/;"	d
clrflag	obj/user/faultregs.asm	/^		clrflag = 0;$/;"	d
clrflag	obj/user/faultwrite.asm	/^		clrflag = 0;$/;"	d
clrflag	obj/user/faultwritekernel.asm	/^		clrflag = 0;$/;"	d
clrflag	obj/user/forktree.asm	/^		clrflag = 0;$/;"	d
clrflag	obj/user/hello.asm	/^		clrflag = 0;$/;"	d
clrflag	obj/user/httpd.asm	/^		clrflag = 0;$/;"	d
clrflag	obj/user/icode.asm	/^		clrflag = 0;$/;"	d
clrflag	obj/user/idle.asm	/^		clrflag = 0;$/;"	d
clrflag	obj/user/init.asm	/^		clrflag = 0;$/;"	d
clrflag	obj/user/ls.asm	/^		clrflag = 0;$/;"	d
clrflag	obj/user/lsfd.asm	/^		clrflag = 0;$/;"	d
clrflag	obj/user/num.asm	/^		clrflag = 0;$/;"	d
clrflag	obj/user/pingpong.asm	/^		clrflag = 0;$/;"	d
clrflag	obj/user/pingpongs.asm	/^		clrflag = 0;$/;"	d
clrflag	obj/user/primes.asm	/^		clrflag = 0;$/;"	d
clrflag	obj/user/primespipe.asm	/^		clrflag = 0;$/;"	d
clrflag	obj/user/sendpage.asm	/^		clrflag = 0;$/;"	d
clrflag	obj/user/sh.asm	/^		clrflag = 0;$/;"	d
clrflag	obj/user/softint.asm	/^		clrflag = 0;$/;"	d
clrflag	obj/user/spawnhello.asm	/^		clrflag = 0;$/;"	d
clrflag	obj/user/spin.asm	/^		clrflag = 0;$/;"	d
clrflag	obj/user/stresssched.asm	/^		clrflag = 0;$/;"	d
clrflag	obj/user/testbss.asm	/^		clrflag = 0;$/;"	d
clrflag	obj/user/testfdsharing.asm	/^		clrflag = 0;$/;"	d
clrflag	obj/user/testfile.asm	/^		clrflag = 0;$/;"	d
clrflag	obj/user/testkbd.asm	/^		clrflag = 0;$/;"	d
clrflag	obj/user/testpipe.asm	/^		clrflag = 0;$/;"	d
clrflag	obj/user/testpiperace.asm	/^		clrflag = 0;$/;"	d
clrflag	obj/user/testpiperace2.asm	/^		clrflag = 0;$/;"	d
clrflag	obj/user/testpteshare.asm	/^		clrflag = 0;$/;"	d
clrflag	obj/user/testshell.asm	/^		clrflag = 0;$/;"	d
clrflag	obj/user/testtime.asm	/^		clrflag = 0;$/;"	d
clrflag	obj/user/yield.asm	/^		clrflag = 0;$/;"	d
cmd	kern/e1000.h	/^            uint8_t cmd;        \/* Descriptor control *\/$/;"	m	struct:e1000_tx_desc::__anon37::__anon38
cnt	lib/printf.c	/^	int cnt;	\/\/ total bytes printed so far$/;"	m	struct:printbuf	file:
cnt	lib/printfmt.c	/^	int cnt;$/;"	m	struct:sprintbuf	file:
cnt	obj/fs/fs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/kern/kernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/net/ns.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/net/testinput.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/net/testoutput.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/badsegment.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/breakpoint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/buggyhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/buggyhello2.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/cat.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/cat.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/cat.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/divzero.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/dumbfork.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/echo.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/echosrv.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/echotest.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/evilhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/fairness.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultalloc.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultallocbad.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultbadhandler.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultdie.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultevilhandler.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultnostack.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultread.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultreadkernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultregs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultwrite.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultwritekernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/forktree.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/hello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/httpd.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/icode.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/idle.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/init.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/ls.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/ls.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/ls.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/lsfd.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/lsfd.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/lsfd.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/num.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/num.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/num.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/pingpong.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/pingpongs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/primes.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/primespipe.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/sendpage.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/sh.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/sh.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/sh.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/softint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/spawnhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/spin.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/stresssched.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testbss.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testfdsharing.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testfile.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testkbd.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testkbd.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/testkbd.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/testpipe.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testpiperace.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testpiperace2.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testpteshare.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testshell.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testtime.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/yield.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
code	obj/kern/kernel.asm	/^	code = KADDR(MPENTRY_PADDR);$/;"	d
code	obj/net/ns.asm	/^  code = *(((u8_t *)p->payload)+1);$/;"	d
code	user/httpd.c	/^	int code;$/;"	m	struct:error_messages	file:
code	user/httpd.c	/^	int code;$/;"	m	struct:responce_header	file:
color	gradelib.py	/^def color(name, text):$/;"	f
color	lib/printfmt.c	/^int color;$/;"	v
color	obj/fs/fs.asm	/^				color = 0;$/;"	d
color	obj/fs/fs.asm	/^			color = 0;$/;"	d
color	obj/kern/kernel.asm	/^				color = 0;$/;"	d
color	obj/kern/kernel.asm	/^			color = 0;$/;"	d
color	obj/net/ns.asm	/^				color = 0;$/;"	d
color	obj/net/ns.asm	/^			color = 0;$/;"	d
color	obj/net/testinput.asm	/^				color = 0;$/;"	d
color	obj/net/testinput.asm	/^			color = 0;$/;"	d
color	obj/net/testoutput.asm	/^				color = 0;$/;"	d
color	obj/net/testoutput.asm	/^			color = 0;$/;"	d
color	obj/user/badsegment.asm	/^				color = 0;$/;"	d
color	obj/user/badsegment.asm	/^			color = 0;$/;"	d
color	obj/user/breakpoint.asm	/^				color = 0;$/;"	d
color	obj/user/breakpoint.asm	/^			color = 0;$/;"	d
color	obj/user/buggyhello.asm	/^				color = 0;$/;"	d
color	obj/user/buggyhello.asm	/^			color = 0;$/;"	d
color	obj/user/buggyhello2.asm	/^				color = 0;$/;"	d
color	obj/user/buggyhello2.asm	/^			color = 0;$/;"	d
color	obj/user/cat.asm	/^				color = 0;$/;"	d
color	obj/user/cat.asm	/^			color = 0;$/;"	d
color	obj/user/divzero.asm	/^				color = 0;$/;"	d
color	obj/user/divzero.asm	/^			color = 0;$/;"	d
color	obj/user/dumbfork.asm	/^				color = 0;$/;"	d
color	obj/user/dumbfork.asm	/^			color = 0;$/;"	d
color	obj/user/echo.asm	/^				color = 0;$/;"	d
color	obj/user/echo.asm	/^			color = 0;$/;"	d
color	obj/user/echosrv.asm	/^				color = 0;$/;"	d
color	obj/user/echosrv.asm	/^			color = 0;$/;"	d
color	obj/user/echotest.asm	/^				color = 0;$/;"	d
color	obj/user/echotest.asm	/^			color = 0;$/;"	d
color	obj/user/evilhello.asm	/^				color = 0;$/;"	d
color	obj/user/evilhello.asm	/^			color = 0;$/;"	d
color	obj/user/fairness.asm	/^				color = 0;$/;"	d
color	obj/user/fairness.asm	/^			color = 0;$/;"	d
color	obj/user/faultalloc.asm	/^				color = 0;$/;"	d
color	obj/user/faultalloc.asm	/^			color = 0;$/;"	d
color	obj/user/faultallocbad.asm	/^				color = 0;$/;"	d
color	obj/user/faultallocbad.asm	/^			color = 0;$/;"	d
color	obj/user/faultbadhandler.asm	/^				color = 0;$/;"	d
color	obj/user/faultbadhandler.asm	/^			color = 0;$/;"	d
color	obj/user/faultdie.asm	/^				color = 0;$/;"	d
color	obj/user/faultdie.asm	/^			color = 0;$/;"	d
color	obj/user/faultevilhandler.asm	/^				color = 0;$/;"	d
color	obj/user/faultevilhandler.asm	/^			color = 0;$/;"	d
color	obj/user/faultnostack.asm	/^				color = 0;$/;"	d
color	obj/user/faultnostack.asm	/^			color = 0;$/;"	d
color	obj/user/faultread.asm	/^				color = 0;$/;"	d
color	obj/user/faultread.asm	/^			color = 0;$/;"	d
color	obj/user/faultreadkernel.asm	/^				color = 0;$/;"	d
color	obj/user/faultreadkernel.asm	/^			color = 0;$/;"	d
color	obj/user/faultregs.asm	/^				color = 0;$/;"	d
color	obj/user/faultregs.asm	/^			color = 0;$/;"	d
color	obj/user/faultwrite.asm	/^				color = 0;$/;"	d
color	obj/user/faultwrite.asm	/^			color = 0;$/;"	d
color	obj/user/faultwritekernel.asm	/^				color = 0;$/;"	d
color	obj/user/faultwritekernel.asm	/^			color = 0;$/;"	d
color	obj/user/forktree.asm	/^				color = 0;$/;"	d
color	obj/user/forktree.asm	/^			color = 0;$/;"	d
color	obj/user/hello.asm	/^				color = 0;$/;"	d
color	obj/user/hello.asm	/^			color = 0;$/;"	d
color	obj/user/httpd.asm	/^				color = 0;$/;"	d
color	obj/user/httpd.asm	/^			color = 0;$/;"	d
color	obj/user/icode.asm	/^				color = 0;$/;"	d
color	obj/user/icode.asm	/^			color = 0;$/;"	d
color	obj/user/idle.asm	/^				color = 0;$/;"	d
color	obj/user/idle.asm	/^			color = 0;$/;"	d
color	obj/user/init.asm	/^				color = 0;$/;"	d
color	obj/user/init.asm	/^			color = 0;$/;"	d
color	obj/user/ls.asm	/^				color = 0;$/;"	d
color	obj/user/ls.asm	/^			color = 0;$/;"	d
color	obj/user/lsfd.asm	/^				color = 0;$/;"	d
color	obj/user/lsfd.asm	/^			color = 0;$/;"	d
color	obj/user/num.asm	/^				color = 0;$/;"	d
color	obj/user/num.asm	/^			color = 0;$/;"	d
color	obj/user/pingpong.asm	/^				color = 0;$/;"	d
color	obj/user/pingpong.asm	/^			color = 0;$/;"	d
color	obj/user/pingpongs.asm	/^				color = 0;$/;"	d
color	obj/user/pingpongs.asm	/^			color = 0;$/;"	d
color	obj/user/primes.asm	/^				color = 0;$/;"	d
color	obj/user/primes.asm	/^			color = 0;$/;"	d
color	obj/user/primespipe.asm	/^				color = 0;$/;"	d
color	obj/user/primespipe.asm	/^			color = 0;$/;"	d
color	obj/user/sendpage.asm	/^				color = 0;$/;"	d
color	obj/user/sendpage.asm	/^			color = 0;$/;"	d
color	obj/user/sh.asm	/^				color = 0;$/;"	d
color	obj/user/sh.asm	/^			color = 0;$/;"	d
color	obj/user/softint.asm	/^				color = 0;$/;"	d
color	obj/user/softint.asm	/^			color = 0;$/;"	d
color	obj/user/spawnhello.asm	/^				color = 0;$/;"	d
color	obj/user/spawnhello.asm	/^			color = 0;$/;"	d
color	obj/user/spin.asm	/^				color = 0;$/;"	d
color	obj/user/spin.asm	/^			color = 0;$/;"	d
color	obj/user/stresssched.asm	/^				color = 0;$/;"	d
color	obj/user/stresssched.asm	/^			color = 0;$/;"	d
color	obj/user/testbss.asm	/^				color = 0;$/;"	d
color	obj/user/testbss.asm	/^			color = 0;$/;"	d
color	obj/user/testfdsharing.asm	/^				color = 0;$/;"	d
color	obj/user/testfdsharing.asm	/^			color = 0;$/;"	d
color	obj/user/testfile.asm	/^				color = 0;$/;"	d
color	obj/user/testfile.asm	/^			color = 0;$/;"	d
color	obj/user/testkbd.asm	/^				color = 0;$/;"	d
color	obj/user/testkbd.asm	/^			color = 0;$/;"	d
color	obj/user/testpipe.asm	/^				color = 0;$/;"	d
color	obj/user/testpipe.asm	/^			color = 0;$/;"	d
color	obj/user/testpiperace.asm	/^				color = 0;$/;"	d
color	obj/user/testpiperace.asm	/^			color = 0;$/;"	d
color	obj/user/testpiperace2.asm	/^				color = 0;$/;"	d
color	obj/user/testpiperace2.asm	/^			color = 0;$/;"	d
color	obj/user/testpteshare.asm	/^				color = 0;$/;"	d
color	obj/user/testpteshare.asm	/^			color = 0;$/;"	d
color	obj/user/testshell.asm	/^				color = 0;$/;"	d
color	obj/user/testshell.asm	/^			color = 0;$/;"	d
color	obj/user/testtime.asm	/^				color = 0;$/;"	d
color	obj/user/testtime.asm	/^			color = 0;$/;"	d
color	obj/user/yield.asm	/^				color = 0;$/;"	d
color	obj/user/yield.asm	/^			color = 0;$/;"	d
colorswitch	obj/fs/fs.asm	/^	colorswitch:$/;"	l
colorswitch	obj/kern/kernel.asm	/^	colorswitch:$/;"	l
colorswitch	obj/net/ns.asm	/^	colorswitch:$/;"	l
colorswitch	obj/net/testinput.asm	/^	colorswitch:$/;"	l
colorswitch	obj/net/testoutput.asm	/^	colorswitch:$/;"	l
colorswitch	obj/user/badsegment.asm	/^	colorswitch:$/;"	l
colorswitch	obj/user/breakpoint.asm	/^	colorswitch:$/;"	l
colorswitch	obj/user/buggyhello.asm	/^	colorswitch:$/;"	l
colorswitch	obj/user/buggyhello2.asm	/^	colorswitch:$/;"	l
colorswitch	obj/user/cat.asm	/^	colorswitch:$/;"	l
colorswitch	obj/user/divzero.asm	/^	colorswitch:$/;"	l
colorswitch	obj/user/dumbfork.asm	/^	colorswitch:$/;"	l
colorswitch	obj/user/echo.asm	/^	colorswitch:$/;"	l
colorswitch	obj/user/echosrv.asm	/^	colorswitch:$/;"	l
colorswitch	obj/user/echotest.asm	/^	colorswitch:$/;"	l
colorswitch	obj/user/evilhello.asm	/^	colorswitch:$/;"	l
colorswitch	obj/user/fairness.asm	/^	colorswitch:$/;"	l
colorswitch	obj/user/faultalloc.asm	/^	colorswitch:$/;"	l
colorswitch	obj/user/faultallocbad.asm	/^	colorswitch:$/;"	l
colorswitch	obj/user/faultbadhandler.asm	/^	colorswitch:$/;"	l
colorswitch	obj/user/faultdie.asm	/^	colorswitch:$/;"	l
colorswitch	obj/user/faultevilhandler.asm	/^	colorswitch:$/;"	l
colorswitch	obj/user/faultnostack.asm	/^	colorswitch:$/;"	l
colorswitch	obj/user/faultread.asm	/^	colorswitch:$/;"	l
colorswitch	obj/user/faultreadkernel.asm	/^	colorswitch:$/;"	l
colorswitch	obj/user/faultregs.asm	/^	colorswitch:$/;"	l
colorswitch	obj/user/faultwrite.asm	/^	colorswitch:$/;"	l
colorswitch	obj/user/faultwritekernel.asm	/^	colorswitch:$/;"	l
colorswitch	obj/user/forktree.asm	/^	colorswitch:$/;"	l
colorswitch	obj/user/hello.asm	/^	colorswitch:$/;"	l
colorswitch	obj/user/httpd.asm	/^	colorswitch:$/;"	l
colorswitch	obj/user/icode.asm	/^	colorswitch:$/;"	l
colorswitch	obj/user/idle.asm	/^	colorswitch:$/;"	l
colorswitch	obj/user/init.asm	/^	colorswitch:$/;"	l
colorswitch	obj/user/ls.asm	/^	colorswitch:$/;"	l
colorswitch	obj/user/lsfd.asm	/^	colorswitch:$/;"	l
colorswitch	obj/user/num.asm	/^	colorswitch:$/;"	l
colorswitch	obj/user/pingpong.asm	/^	colorswitch:$/;"	l
colorswitch	obj/user/pingpongs.asm	/^	colorswitch:$/;"	l
colorswitch	obj/user/primes.asm	/^	colorswitch:$/;"	l
colorswitch	obj/user/primespipe.asm	/^	colorswitch:$/;"	l
colorswitch	obj/user/sendpage.asm	/^	colorswitch:$/;"	l
colorswitch	obj/user/sh.asm	/^	colorswitch:$/;"	l
colorswitch	obj/user/softint.asm	/^	colorswitch:$/;"	l
colorswitch	obj/user/spawnhello.asm	/^	colorswitch:$/;"	l
colorswitch	obj/user/spin.asm	/^	colorswitch:$/;"	l
colorswitch	obj/user/stresssched.asm	/^	colorswitch:$/;"	l
colorswitch	obj/user/testbss.asm	/^	colorswitch:$/;"	l
colorswitch	obj/user/testfdsharing.asm	/^	colorswitch:$/;"	l
colorswitch	obj/user/testfile.asm	/^	colorswitch:$/;"	l
colorswitch	obj/user/testkbd.asm	/^	colorswitch:$/;"	l
colorswitch	obj/user/testpipe.asm	/^	colorswitch:$/;"	l
colorswitch	obj/user/testpiperace.asm	/^	colorswitch:$/;"	l
colorswitch	obj/user/testpiperace2.asm	/^	colorswitch:$/;"	l
colorswitch	obj/user/testpteshare.asm	/^	colorswitch:$/;"	l
colorswitch	obj/user/testshell.asm	/^	colorswitch:$/;"	l
colorswitch	obj/user/testtime.asm	/^	colorswitch:$/;"	l
colorswitch	obj/user/yield.asm	/^	colorswitch:$/;"	l
com_strlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t com_strlen;$/;"	m	struct:snmp_msg_pstat
comlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t comlen;$/;"	m	struct:snmp_resp_header_lengths
comlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t comlen;$/;"	m	struct:snmp_trap_header_lengths
comlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t comlenlen;$/;"	m	struct:snmp_resp_header_lengths
comlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t comlenlen;$/;"	m	struct:snmp_trap_header_lengths
commands	kern/monitor.c	/^static struct Command commands[] = {$/;"	v	typeref:struct:Command	file:
common	net/lwip/include/lwip/netifapi.h	/^    } common;$/;"	m	union:netifapi_msg_msg::__anon22	typeref:struct:netifapi_msg_msg::__anon22::__anon24
community	net/lwip/include/lwip/snmp_msg.h	/^  u8_t community[SNMP_COMMUNITY_STR_LEN + 1];$/;"	m	struct:snmp_msg_pstat
compressSlot	net/lwip/netif/ppp/vj.h	/^  u_char compressSlot;             \/* Flag indicating OK to compress slot ID. *\/$/;"	m	struct:vjcompress
conf	obj/kern/kernel.asm	/^	conf = (struct mpconf *) KADDR(mp->physaddr);$/;"	d
conn	net/lwip/api/sockets.c	/^  struct netconn *conn;$/;"	m	struct:lwip_socket	typeref:struct:lwip_socket::netconn	file:
conn	net/lwip/include/lwip/api_msg.h	/^  struct netconn *conn;$/;"	m	struct:api_msg_msg	typeref:struct:api_msg_msg::netconn
conn	obj/net/ns.asm	/^    conn = netconn_new_with_callback( (protocol == IPPROTO_UDPLITE) ?$/;"	d
conn	obj/net/ns.asm	/^    conn = netconn_new_with_callback(NETCONN_TCP, event_callback);$/;"	d
conn	obj/net/ns.asm	/^    conn = netconn_new_with_proto_and_callback(NETCONN_RAW, (u8_t)protocol, event_callback);$/;"	d
conn	obj/net/ns.asm	/^  conn = (struct netconn *)arg;$/;"	d
conn	obj/net/ns.asm	/^  conn = arg;$/;"	d
conn	obj/net/ns.asm	/^  conn = memp_malloc(MEMP_NETCONN);$/;"	d
conn	obj/net/ns.asm	/^  conn = netconn_alloc(t, callback);$/;"	d
connect	inc/ns.h	/^	} connect;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_connect
connect	lib/sockets.c	/^connect(int s, const struct sockaddr *name, socklen_t namelen)$/;"	f
connect	net/lwip/include/lwip/sockets.h	330;"	d
connect_time_expired	net/lwip/netif/ppp/auth.c	/^connect_time_expired(void *arg)$/;"	f	file:
connected	net/lwip/include/lwip/tcp.h	/^  err_t (* connected)(void *arg, struct tcp_pcb *pcb, err_t err);$/;"	m	struct:tcp_pcb
cons	kern/console.c	/^} cons;$/;"	v	typeref:struct:__anon34	file:
cons_getc	kern/console.c	/^cons_getc(void)$/;"	f
cons_init	kern/console.c	/^cons_init(void)$/;"	f
cons_intr	kern/console.c	/^cons_intr(int (*proc)(void))$/;"	f	file:
cons_putc	kern/console.c	/^cons_putc(int c)$/;"	f	file:
const	obj/fs/fs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/fs/fs.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/kern/kernel.asm	/^		const struct UserStabData *usd = (const struct UserStabData *) USTABDATA;$/;"	t
const	obj/kern/kernel.asm	/^	const struct Stab *stabs, *stab_end;$/;"	t
const	obj/net/ns.asm	/^const char *$/;"	l
const	obj/net/ns.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/net/ns.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/net/testinput.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/net/testinput.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/net/testoutput.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/net/testoutput.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/badsegment.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/badsegment.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/breakpoint.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/breakpoint.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/buggyhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/buggyhello2.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello2.asm	/^const char *hello = "hello, world\\n";$/;"	l
const	obj/user/buggyhello2.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/cat.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/cat.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/divzero.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/divzero.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/dumbfork.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/dumbfork.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/echo.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/echo.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/echosrv.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/echosrv.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/echotest.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/echotest.asm	/^const char *msg = "Hello world!\\n";$/;"	l
const	obj/user/echotest.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/evilhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/evilhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/fairness.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/fairness.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultalloc.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultalloc.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultallocbad.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultallocbad.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultbadhandler.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultbadhandler.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultdie.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultdie.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultevilhandler.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultevilhandler.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultnostack.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultnostack.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultread.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultread.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultreadkernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultreadkernel.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultregs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultregs.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultwrite.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultwrite.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultwritekernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultwritekernel.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/forktree.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/forktree.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/hello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/hello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/httpd.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/httpd.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/icode.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/icode.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/idle.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/idle.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/init.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/init.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/ls.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/ls.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/lsfd.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/lsfd.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/num.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/num.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/pingpong.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/pingpong.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/pingpongs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/pingpongs.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/primes.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/primes.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/primespipe.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/primespipe.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/sendpage.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/sendpage.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/sh.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/sh.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/softint.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/softint.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/spawnhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/spawnhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/spin.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/spin.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/stresssched.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/stresssched.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testbss.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testbss.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testfdsharing.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testfdsharing.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testfile.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testfile.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testkbd.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testkbd.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testpipe.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testpipe.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testpiperace.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testpiperace.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testpiperace2.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testpiperace2.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testpteshare.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testpteshare.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testshell.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testshell.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testtime.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testtime.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/yield.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/yield.asm	/^const volatile struct Env *thisenv;$/;"	l
cont	gradelib.py	/^    def cont(self):$/;"	m	class:GDBClient
cont	obj/net/ns.asm	/^		cont = (i + PGSIZE < n + 4) ? PTE_CONTINUED : 0;$/;"	d
cont	obj/user/httpd.asm	/^		cont = (i + PGSIZE < n + 4) ? PTE_CONTINUED : 0;$/;"	d
cop	obj/net/ns.asm	/^    cop = last ? left : nfb * 8;$/;"	d
copy_needed	obj/net/ns.asm	/^          copy_needed = 1;$/;"	d
copy_shared_pages	lib/spawn.c	/^copy_shared_pages(envid_t child)$/;"	f	file:
copylen	obj/net/ns.asm	/^      copylen = buflen;$/;"	d
copylen	obj/net/ns.asm	/^      copylen = len;$/;"	d
count	net/lwip/include/lwip/snmp_msg.h	/^  u8_t count;$/;"	m	struct:snmp_varbind_root
count	net/lwip/include/lwip/snmp_structs.h	/^  u16_t count;$/;"	m	struct:mib_list_rootnode
count	obj/fs/fs.asm	/^	count = MIN(count, f->f_size - offset);$/;"	d
count	obj/net/ns.asm	/^      count = pbuf_free(seg->p);$/;"	d
count	obj/net/ns.asm	/^  count = 0;$/;"	d
counter	net/lwip/jos/arch/sys_arch.c	/^	    uint16_t counter;$/;"	m	struct:sys_sem_entry::__anon8::__anon9	file:
counter	user/stresssched.c	/^volatile int counter;$/;"	v
cp	obj/kern/kernel.asm	/^		cp = (uint16_t*) (KERNBASE + MONO_BUF);$/;"	d
cp	obj/kern/kernel.asm	/^	cp = (uint16_t*) (KERNBASE + CGA_BUF);$/;"	d
cprintf	kern/printf.c	/^cprintf(const char *fmt, ...)$/;"	f
cprintf	lib/printf.c	/^cprintf(const char *fmt, ...)$/;"	f
cpu	kern/spinlock.h	/^	struct CpuInfo *cpu;   \/\/ The CPU holding the lock.$/;"	m	struct:spinlock	typeref:struct:spinlock::CpuInfo
cpu_env	kern/cpu.h	/^	struct Env *cpu_env;            \/\/ The currently-running environment.$/;"	m	struct:CpuInfo	typeref:struct:CpuInfo::Env
cpu_id	kern/cpu.h	/^	uint8_t cpu_id;                 \/\/ Local APIC ID; index into cpus[] below$/;"	m	struct:CpuInfo
cpu_status	kern/cpu.h	/^	volatile unsigned cpu_status;   \/\/ The status of the CPU$/;"	m	struct:CpuInfo
cpu_ts	kern/cpu.h	/^	struct Taskstate cpu_ts;        \/\/ Used by x86 to find stack for interrupt$/;"	m	struct:CpuInfo	typeref:struct:CpuInfo::Taskstate
cpuid	inc/x86.h	/^cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)$/;"	f
cpunum	kern/lapic.c	/^cpunum(void)$/;"	f
cpus	kern/mpconfig.c	/^struct CpuInfo cpus[NCPU];$/;"	v	typeref:struct:CpuInfo
cputchar	kern/console.c	/^cputchar(int c)$/;"	f
cputchar	lib/console.c	/^cputchar(int ch)$/;"	f
cr0	obj/kern/kernel.asm	/^	cr0 = rcr0();$/;"	d
crt_buf	kern/console.c	/^static uint16_t *crt_buf;$/;"	v	file:
crt_buf	obj/kern/kernel.asm	/^	crt_buf = (uint16_t*) cp;$/;"	d
crt_pos	kern/console.c	/^static uint16_t crt_pos;$/;"	v	file:
crt_pos	obj/kern/kernel.asm	/^	crt_pos = pos;$/;"	d
cs_filler	net/lwip/netif/ppp/vj.h	/^  u_char cs_filler;$/;"	m	struct:cstate
cs_hdr	net/lwip/netif/ppp/vj.h	115;"	d
cs_hlen	net/lwip/netif/ppp/vj.h	/^  u_short cs_hlen;        \/* size of hdr (receive only) *\/$/;"	m	struct:cstate
cs_id	net/lwip/netif/ppp/vj.h	/^  u_char cs_id;           \/* connection # associated with this state *\/$/;"	m	struct:cstate
cs_ip	net/lwip/netif/ppp/vj.h	114;"	d
cs_next	net/lwip/netif/ppp/vj.h	/^  struct cstate *cs_next; \/* next most recently used state (xmit only) *\/$/;"	m	struct:cstate	typeref:struct:cstate::cstate
cseg	obj/net/ns.asm	/^                  cseg = tcp_seg_copy(&inseg);$/;"	d
cseg	obj/net/ns.asm	/^                cseg = tcp_seg_copy(&inseg);$/;"	d
cseg	obj/net/ns.asm	/^          cseg = pcb->ooseq;$/;"	d
cseg	obj/net/ns.asm	/^  cseg = memp_malloc(MEMP_TCP_SEG);$/;"	d
cso	kern/e1000.h	/^            uint8_t cso;        \/* Checksum offset *\/$/;"	m	struct:e1000_tx_desc::__anon37::__anon38
css	kern/e1000.h	/^            uint8_t css;        \/* Checksum start *\/$/;"	m	struct:e1000_tx_desc::__anon39::__anon40
cstate	net/lwip/netif/ppp/vj.h	/^struct cstate {$/;"	s
csu_hdr	net/lwip/netif/ppp/vj.h	/^    char csu_hdr[MAX_HDR];$/;"	m	union:cstate::__anon2
csu_ip	net/lwip/netif/ppp/vj.h	/^    struct ip csu_ip;     \/* ip\/tcp hdr from most recent packet *\/$/;"	m	union:cstate::__anon2	typeref:struct:cstate::__anon2::ip
csum	kern/e1000.h	/^    uint16_t csum;       \/* Packet checksum *\/$/;"	m	struct:e1000_rx_desc
ctime	net/lwip/netif/etharp.c	/^  u8_t ctime;$/;"	m	struct:etharp_entry	file:
ctlmap	kern/console.c	/^static uint8_t ctlmap[256] =$/;"	v	file:
ctx	net/lwip/include/lwip/tcpip.h	/^      void *ctx;$/;"	m	struct:tcpip_msg::__anon17::__anon19
cur_tc	net/lwip/jos/arch/thread.c	/^static struct thread_context *cur_tc;$/;"	v	typeref:struct:thread_context	file:
cur_tc	obj/net/ns.asm	/^    cur_tc = NULL;$/;"	d
cur_tc	obj/net/ns.asm	/^    cur_tc = next_tc;$/;"	d
curarg	inc/args.h	/^	const char *curarg;$/;"	m	struct:Argstate
curenv	kern/env.h	10;"	d
curenv	obj/kern/kernel.asm	/^			curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^		curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^	curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^	curenv = e;$/;"	d
cwnd	net/lwip/include/lwip/tcp.h	/^  u16_t cwnd;  $/;"	m	struct:tcp_pcb
d	obj/fs/fs.asm	/^	d = dst;$/;"	d
d	obj/kern/kernel.asm	/^	d = dst;$/;"	d
d	obj/net/ns.asm	/^	d = dst;$/;"	d
d	obj/net/testinput.asm	/^	d = dst;$/;"	d
d	obj/net/testoutput.asm	/^	d = dst;$/;"	d
d	obj/user/badsegment.asm	/^	d = dst;$/;"	d
d	obj/user/breakpoint.asm	/^	d = dst;$/;"	d
d	obj/user/buggyhello.asm	/^	d = dst;$/;"	d
d	obj/user/buggyhello2.asm	/^	d = dst;$/;"	d
d	obj/user/cat.asm	/^	d = dst;$/;"	d
d	obj/user/divzero.asm	/^	d = dst;$/;"	d
d	obj/user/dumbfork.asm	/^	d = dst;$/;"	d
d	obj/user/echo.asm	/^	d = dst;$/;"	d
d	obj/user/echosrv.asm	/^	d = dst;$/;"	d
d	obj/user/echotest.asm	/^	d = dst;$/;"	d
d	obj/user/evilhello.asm	/^	d = dst;$/;"	d
d	obj/user/fairness.asm	/^	d = dst;$/;"	d
d	obj/user/faultalloc.asm	/^	d = dst;$/;"	d
d	obj/user/faultallocbad.asm	/^	d = dst;$/;"	d
d	obj/user/faultbadhandler.asm	/^	d = dst;$/;"	d
d	obj/user/faultdie.asm	/^	d = dst;$/;"	d
d	obj/user/faultevilhandler.asm	/^	d = dst;$/;"	d
d	obj/user/faultnostack.asm	/^	d = dst;$/;"	d
d	obj/user/faultread.asm	/^	d = dst;$/;"	d
d	obj/user/faultreadkernel.asm	/^	d = dst;$/;"	d
d	obj/user/faultregs.asm	/^	d = dst;$/;"	d
d	obj/user/faultwrite.asm	/^	d = dst;$/;"	d
d	obj/user/faultwritekernel.asm	/^	d = dst;$/;"	d
d	obj/user/forktree.asm	/^	d = dst;$/;"	d
d	obj/user/hello.asm	/^	d = dst;$/;"	d
d	obj/user/httpd.asm	/^	d = dst;$/;"	d
d	obj/user/icode.asm	/^	d = dst;$/;"	d
d	obj/user/idle.asm	/^	d = dst;$/;"	d
d	obj/user/init.asm	/^	d = dst;$/;"	d
d	obj/user/ls.asm	/^	d = dst;$/;"	d
d	obj/user/lsfd.asm	/^	d = dst;$/;"	d
d	obj/user/num.asm	/^	d = dst;$/;"	d
d	obj/user/pingpong.asm	/^	d = dst;$/;"	d
d	obj/user/pingpongs.asm	/^	d = dst;$/;"	d
d	obj/user/primes.asm	/^	d = dst;$/;"	d
d	obj/user/primespipe.asm	/^	d = dst;$/;"	d
d	obj/user/sendpage.asm	/^	d = dst;$/;"	d
d	obj/user/sh.asm	/^	d = dst;$/;"	d
d	obj/user/softint.asm	/^	d = dst;$/;"	d
d	obj/user/spawnhello.asm	/^	d = dst;$/;"	d
d	obj/user/spin.asm	/^	d = dst;$/;"	d
d	obj/user/stresssched.asm	/^	d = dst;$/;"	d
d	obj/user/testbss.asm	/^	d = dst;$/;"	d
d	obj/user/testfdsharing.asm	/^	d = dst;$/;"	d
d	obj/user/testfile.asm	/^	d = dst;$/;"	d
d	obj/user/testkbd.asm	/^	d = dst;$/;"	d
d	obj/user/testpipe.asm	/^	d = dst;$/;"	d
d	obj/user/testpiperace.asm	/^	d = dst;$/;"	d
d	obj/user/testpiperace2.asm	/^	d = dst;$/;"	d
d	obj/user/testpteshare.asm	/^	d = dst;$/;"	d
d	obj/user/testshell.asm	/^	d = dst;$/;"	d
d	obj/user/testtime.asm	/^	d = dst;$/;"	d
d	obj/user/yield.asm	/^	d = dst;$/;"	d
data	obj/kern/kernel.asm	/^		data = (shift & E0ESC ? data : data & 0x7F);$/;"	d
data	obj/kern/kernel.asm	/^	data = inb(KBDATAP);$/;"	d
data	obj/net/ns.asm	/^  data = (struct lwip_setgetsockopt_data*)arg;$/;"	d
data	user/init.c	/^} data = {$/;"	v	typeref:struct:__anon41
datagram_len	net/lwip/include/ipv4/lwip/ip_frag.h	/^  u16_t datagram_len;$/;"	m	struct:ip_reassdata
dataptr	net/lwip/include/lwip/api_msg.h	/^      const void *dataptr;$/;"	m	struct:api_msg_msg::__anon25::__anon29
dataptr	net/lwip/include/lwip/tcp.h	/^  void *dataptr;           \/* pointer to the TCP data in the pbuf *\/$/;"	m	struct:tcp_seg
dataptr	obj/net/ns.asm	/^  dataptr = (u8_t*)conn->write_msg->msg.w.dataptr + conn->write_offset;$/;"	d
dead	obj/kern/kernel.asm	/^dead:$/;"	l
debug	fs/serv.c	12;"	d	file:
debug	lib/fd.c	3;"	d	file:
debug	lib/file.c	5;"	d	file:
debug	lib/nsipc.c	5;"	d	file:
debug	lib/pipe.c	3;"	d	file:
debug	net/lwip/jos/arch/sys_arch.c	10;"	d	file:
debug	net/serv.c	34;"	d	file:
debug	user/sh.c	/^int debug = 0;$/;"	v
debuginfo_eip	kern/kdebug.c	/^debuginfo_eip(uintptr_t addr, struct Eipdebuginfo *info)$/;"	f
default	obj/fs/fs.asm	/^		default:$/;"	l
default	obj/kern/kernel.asm	/^		default:$/;"	l
default	obj/kern/kernel.asm	/^	default:$/;"	l
default	obj/net/ns.asm	/^		default:$/;"	l
default	obj/net/ns.asm	/^	default:$/;"	l
default	obj/net/ns.asm	/^      default: \/* unrecognized socket type *\/$/;"	l
default	obj/net/ns.asm	/^      default:$/;"	l
default	obj/net/ns.asm	/^    default:$/;"	l
default	obj/net/ns.asm	/^   default:$/;"	l
default	obj/net/ns.asm	/^  default:$/;"	l
default	obj/net/testinput.asm	/^		default:$/;"	l
default	obj/net/testoutput.asm	/^		default:$/;"	l
default	obj/user/badsegment.asm	/^		default:$/;"	l
default	obj/user/breakpoint.asm	/^		default:$/;"	l
default	obj/user/buggyhello.asm	/^		default:$/;"	l
default	obj/user/buggyhello2.asm	/^		default:$/;"	l
default	obj/user/cat.asm	/^		default:$/;"	l
default	obj/user/divzero.asm	/^		default:$/;"	l
default	obj/user/dumbfork.asm	/^		default:$/;"	l
default	obj/user/echo.asm	/^		default:$/;"	l
default	obj/user/echosrv.asm	/^		default:$/;"	l
default	obj/user/echotest.asm	/^		default:$/;"	l
default	obj/user/evilhello.asm	/^		default:$/;"	l
default	obj/user/fairness.asm	/^		default:$/;"	l
default	obj/user/faultalloc.asm	/^		default:$/;"	l
default	obj/user/faultallocbad.asm	/^		default:$/;"	l
default	obj/user/faultbadhandler.asm	/^		default:$/;"	l
default	obj/user/faultdie.asm	/^		default:$/;"	l
default	obj/user/faultevilhandler.asm	/^		default:$/;"	l
default	obj/user/faultnostack.asm	/^		default:$/;"	l
default	obj/user/faultread.asm	/^		default:$/;"	l
default	obj/user/faultreadkernel.asm	/^		default:$/;"	l
default	obj/user/faultregs.asm	/^		default:$/;"	l
default	obj/user/faultwrite.asm	/^		default:$/;"	l
default	obj/user/faultwritekernel.asm	/^		default:$/;"	l
default	obj/user/forktree.asm	/^		default:$/;"	l
default	obj/user/hello.asm	/^		default:$/;"	l
default	obj/user/httpd.asm	/^		default:$/;"	l
default	obj/user/icode.asm	/^		default:$/;"	l
default	obj/user/idle.asm	/^		default:$/;"	l
default	obj/user/init.asm	/^		default:$/;"	l
default	obj/user/ls.asm	/^		default:$/;"	l
default	obj/user/lsfd.asm	/^		default:$/;"	l
default	obj/user/num.asm	/^		default:$/;"	l
default	obj/user/pingpong.asm	/^		default:$/;"	l
default	obj/user/pingpongs.asm	/^		default:$/;"	l
default	obj/user/primes.asm	/^		default:$/;"	l
default	obj/user/primespipe.asm	/^		default:$/;"	l
default	obj/user/sendpage.asm	/^		default:$/;"	l
default	obj/user/sh.asm	/^		default:$/;"	l
default	obj/user/softint.asm	/^		default:$/;"	l
default	obj/user/spawnhello.asm	/^		default:$/;"	l
default	obj/user/spin.asm	/^		default:$/;"	l
default	obj/user/stresssched.asm	/^		default:$/;"	l
default	obj/user/testbss.asm	/^		default:$/;"	l
default	obj/user/testfdsharing.asm	/^		default:$/;"	l
default	obj/user/testfile.asm	/^		default:$/;"	l
default	obj/user/testkbd.asm	/^		default:$/;"	l
default	obj/user/testpipe.asm	/^		default:$/;"	l
default	obj/user/testpiperace.asm	/^		default:$/;"	l
default	obj/user/testpiperace2.asm	/^		default:$/;"	l
default	obj/user/testpteshare.asm	/^		default:$/;"	l
default	obj/user/testshell.asm	/^		default:$/;"	l
default	obj/user/testtime.asm	/^		default:$/;"	l
default	obj/user/yield.asm	/^		default:$/;"	l
default_route	net/lwip/netif/ppp/ipcp.h	/^  u_int   default_route : 1; \/* Assign default route through interface? *\/$/;"	m	struct:ipcp_options
default_route_set	net/lwip/netif/ppp/ipcp.c	/^static int default_route_set[NUM_PPP]; \/* Have set up a default route *\/$/;"	v	file:
delay	kern/console.c	/^delay(void)$/;"	f	file:
desc	kern/monitor.c	/^	const char *desc;$/;"	m	struct:Command	file:
dest	net/lwip/include/ipv6/lwip/ip.h	/^  struct ip_addr src, dest;          \/* source and destination IP addresses *\/$/;"	m	struct:ip_hdr	typeref:struct:ip_hdr::
dest	obj/net/ns.asm	/^    dest = &(iphdr->dest);$/;"	d
dest	obj/net/ns.asm	/^    dest = &mcastaddr;$/;"	d
dest	obj/net/ns.asm	/^    dest = (struct eth_addr *)&ethbroadcast;$/;"	d
dest	obj/net/ns.asm	/^  dest = NULL;$/;"	d
dest	obj/net/ns.asm	/^  dest = ntohs(udphdr->dest);$/;"	d
dev	kern/pci.h	/^    uint32_t dev;$/;"	m	struct:pci_func
dev_class	kern/pci.h	/^    uint32_t dev_class;$/;"	m	struct:pci_func
dev_close	inc/fd.h	/^	int (*dev_close)(struct Fd *fd);$/;"	m	struct:Dev
dev_id	inc/fd.h	/^	int dev_id;$/;"	m	struct:Dev
dev_id	kern/pci.h	/^    uint32_t dev_id;$/;"	m	struct:pci_func
dev_lookup	lib/fd.c	/^dev_lookup(int dev_id, struct Dev **dev)$/;"	f
dev_name	inc/fd.h	/^	const char *dev_name;$/;"	m	struct:Dev
dev_read	inc/fd.h	/^	ssize_t (*dev_read)(struct Fd *fd, void *buf, size_t len);$/;"	m	struct:Dev
dev_stat	inc/fd.h	/^	int (*dev_stat)(struct Fd *fd, struct Stat *stat);$/;"	m	struct:Dev
dev_trunc	inc/fd.h	/^	int (*dev_trunc)(struct Fd *fd, off_t length);$/;"	m	struct:Dev
dev_write	inc/fd.h	/^	ssize_t (*dev_write)(struct Fd *fd, const void *buf, size_t len);$/;"	m	struct:Dev
devcons	lib/console.c	/^struct Dev devcons =$/;"	v	typeref:struct:Dev
devcons_close	lib/console.c	/^devcons_close(struct Fd *fd)$/;"	f	file:
devcons_read	lib/console.c	/^devcons_read(struct Fd *fd, void *vbuf, size_t n)$/;"	f	file:
devcons_stat	lib/console.c	/^devcons_stat(struct Fd *fd, struct Stat *stat)$/;"	f	file:
devcons_write	lib/console.c	/^devcons_write(struct Fd *fd, const void *vbuf, size_t n)$/;"	f	file:
devfile	lib/file.c	/^struct Dev devfile =$/;"	v	typeref:struct:Dev
devfile_flush	lib/file.c	/^devfile_flush(struct Fd *fd)$/;"	f	file:
devfile_read	lib/file.c	/^devfile_read(struct Fd *fd, void *buf, size_t n)$/;"	f	file:
devfile_stat	lib/file.c	/^devfile_stat(struct Fd *fd, struct Stat *st)$/;"	f	file:
devfile_trunc	lib/file.c	/^devfile_trunc(struct Fd *fd, off_t newsize)$/;"	f	file:
devfile_write	lib/file.c	/^devfile_write(struct Fd *fd, const void *buf, size_t n)$/;"	f	file:
devpipe	lib/pipe.c	/^struct Dev devpipe =$/;"	v	typeref:struct:Dev
devpipe_close	lib/pipe.c	/^devpipe_close(struct Fd *fd)$/;"	f	file:
devpipe_read	lib/pipe.c	/^devpipe_read(struct Fd *fd, void *vbuf, size_t n)$/;"	f	file:
devpipe_stat	lib/pipe.c	/^devpipe_stat(struct Fd *fd, struct Stat *stat)$/;"	f	file:
devpipe_write	lib/pipe.c	/^devpipe_write(struct Fd *fd, const void *vbuf, size_t n)$/;"	f	file:
devsock	lib/sockets.c	/^struct Dev devsock =$/;"	v	typeref:struct:Dev
devsock_close	lib/sockets.c	/^devsock_close(struct Fd *fd)$/;"	f	file:
devsock_read	lib/sockets.c	/^devsock_read(struct Fd *fd, void *buf, size_t n)$/;"	f	file:
devsock_stat	lib/sockets.c	/^devsock_stat(struct Fd *fd, struct Stat *stat)$/;"	f	file:
devsock_write	lib/sockets.c	/^devsock_write(struct Fd *fd, const void *buf, size_t n)$/;"	f	file:
devtab	lib/fd.c	/^static struct Dev *devtab[] =$/;"	v	typeref:struct:Dev	file:
dhcp	net/lwip/include/lwip/dhcp.h	/^struct dhcp$/;"	s
dhcp	net/lwip/include/lwip/netif.h	/^  struct dhcp *dhcp;$/;"	m	struct:netif	typeref:struct:netif::dhcp
dhcp	obj/net/ns.asm	/^    dhcp = mem_malloc(sizeof(struct dhcp));$/;"	d
dhcp	obj/net/ns.asm	/^  dhcp = mem_malloc(sizeof(struct dhcp));$/;"	d
dhcp	obj/net/ns.asm	/^  dhcp = netif->dhcp;$/;"	d
dhcp_arp_reply	net/lwip/core/dhcp.c	/^void dhcp_arp_reply(struct netif *netif, struct ip_addr *addr)$/;"	f
dhcp_bind	net/lwip/core/dhcp.c	/^dhcp_bind(struct netif *netif)$/;"	f	file:
dhcp_check	net/lwip/core/dhcp.c	/^dhcp_check(struct netif *netif)$/;"	f	file:
dhcp_coarse_tmr	net/lwip/core/dhcp.c	/^dhcp_coarse_tmr()$/;"	f
dhcp_create_request	net/lwip/core/dhcp.c	/^dhcp_create_request(struct netif *netif)$/;"	f	file:
dhcp_decline	net/lwip/core/dhcp.c	/^dhcp_decline(struct netif *netif)$/;"	f	file:
dhcp_delete_request	net/lwip/core/dhcp.c	/^dhcp_delete_request(struct netif *netif)$/;"	f	file:
dhcp_discover	net/lwip/core/dhcp.c	/^dhcp_discover(struct netif *netif)$/;"	f	file:
dhcp_fine_tmr	net/lwip/core/dhcp.c	/^dhcp_fine_tmr()$/;"	f
dhcp_free_reply	net/lwip/core/dhcp.c	/^static void dhcp_free_reply(struct dhcp *dhcp)$/;"	f	file:
dhcp_get_option_byte	net/lwip/core/dhcp.c	/^dhcp_get_option_byte(u8_t *ptr)$/;"	f	file:
dhcp_get_option_long	net/lwip/core/dhcp.c	/^static u32_t dhcp_get_option_long(u8_t *ptr)$/;"	f	file:
dhcp_get_option_ptr	net/lwip/core/dhcp.c	/^static u8_t *dhcp_get_option_ptr(struct dhcp *dhcp, u8_t option_type)$/;"	f	file:
dhcp_handle_ack	net/lwip/core/dhcp.c	/^dhcp_handle_ack(struct netif *netif)$/;"	f	file:
dhcp_handle_nak	net/lwip/core/dhcp.c	/^dhcp_handle_nak(struct netif *netif)$/;"	f	file:
dhcp_handle_offer	net/lwip/core/dhcp.c	/^dhcp_handle_offer(struct netif *netif)$/;"	f	file:
dhcp_inform	net/lwip/core/dhcp.c	/^dhcp_inform(struct netif *netif)$/;"	f
dhcp_msg	net/lwip/include/lwip/dhcp.h	/^struct dhcp_msg$/;"	s
dhcp_option	net/lwip/core/dhcp.c	/^dhcp_option(struct dhcp *dhcp, u8_t option_type, u8_t option_len)$/;"	f	file:
dhcp_option_byte	net/lwip/core/dhcp.c	/^dhcp_option_byte(struct dhcp *dhcp, u8_t value)$/;"	f	file:
dhcp_option_long	net/lwip/core/dhcp.c	/^dhcp_option_long(struct dhcp *dhcp, u32_t value)$/;"	f	file:
dhcp_option_short	net/lwip/core/dhcp.c	/^dhcp_option_short(struct dhcp *dhcp, u16_t value)$/;"	f	file:
dhcp_option_trailer	net/lwip/core/dhcp.c	/^dhcp_option_trailer(struct dhcp *dhcp)$/;"	f	file:
dhcp_rebind	net/lwip/core/dhcp.c	/^dhcp_rebind(struct netif *netif)$/;"	f	file:
dhcp_recv	net/lwip/core/dhcp.c	/^static void dhcp_recv(void *arg, struct udp_pcb *pcb, struct pbuf *p, struct ip_addr *addr, u16_t port)$/;"	f	file:
dhcp_release	net/lwip/core/dhcp.c	/^dhcp_release(struct netif *netif)$/;"	f
dhcp_renew	net/lwip/core/dhcp.c	/^dhcp_renew(struct netif *netif)$/;"	f
dhcp_select	net/lwip/core/dhcp.c	/^dhcp_select(struct netif *netif)$/;"	f	file:
dhcp_set_state	net/lwip/core/dhcp.c	/^dhcp_set_state(struct dhcp *dhcp, u8_t new_state)$/;"	f	file:
dhcp_start	net/lwip/core/dhcp.c	/^dhcp_start(struct netif *netif)$/;"	f
dhcp_stop	net/lwip/core/dhcp.c	/^dhcp_stop(struct netif *netif)$/;"	f
dhcp_t1_timeout	net/lwip/core/dhcp.c	/^dhcp_t1_timeout(struct netif *netif)$/;"	f	file:
dhcp_t2_timeout	net/lwip/core/dhcp.c	/^dhcp_t2_timeout(struct netif *netif)$/;"	f	file:
dhcp_timeout	net/lwip/core/dhcp.c	/^dhcp_timeout(struct netif *netif)$/;"	f	file:
dhcp_timer_coarse	net/lwip/api/tcpip.c	/^dhcp_timer_coarse(void *arg)$/;"	f	file:
dhcp_timer_fine	net/lwip/api/tcpip.c	/^dhcp_timer_fine(void *arg)$/;"	f	file:
dhcp_unfold_reply	net/lwip/core/dhcp.c	/^dhcp_unfold_reply(struct dhcp *dhcp)$/;"	f	file:
did_authup	net/lwip/netif/ppp/auth.c	/^static int did_authup;$/;"	v	file:
didinit	kern/picirq.c	/^static bool didinit;$/;"	v	file:
didinit	obj/kern/kernel.asm	/^	didinit = 1;$/;"	d
die	user/echosrv.c	/^die(char *m)$/;"	f	file:
die	user/echotest.c	/^die(char *m)$/;"	f	file:
die	user/httpd.c	/^die(char *m)$/;"	f	file:
dig	obj/fs/fs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/fs/fs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/fs/fs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/net/ns.asm	/^			dig = *s - '0';$/;"	d
dig	obj/net/ns.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/net/ns.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/net/testinput.asm	/^			dig = *s - '0';$/;"	d
dig	obj/net/testinput.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/net/testinput.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/net/testoutput.asm	/^			dig = *s - '0';$/;"	d
dig	obj/net/testoutput.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/net/testoutput.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/cat.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/cat.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/cat.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/echo.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/echo.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/echo.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/echosrv.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/echosrv.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/echosrv.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/echotest.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/echotest.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/echotest.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/httpd.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/httpd.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/httpd.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/icode.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/icode.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/icode.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/init.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/init.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/init.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/ls.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/ls.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/ls.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/lsfd.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/lsfd.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/lsfd.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/num.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/num.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/num.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/primespipe.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/primespipe.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/primespipe.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/sendpage.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/sendpage.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/sendpage.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/sh.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/sh.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/sh.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/spawnhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/spawnhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/spawnhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testfdsharing.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testfdsharing.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testfdsharing.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testfile.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testfile.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testfile.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testkbd.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testkbd.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testkbd.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testpipe.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testpipe.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testpipe.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testpiperace.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testpiperace.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testpiperace.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testpiperace2.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testpiperace2.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testpiperace2.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testpteshare.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testpteshare.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testpteshare.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testshell.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testshell.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testshell.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testtime.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testtime.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testtime.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - 'a' + 10;$/;"	d
digest	net/lwip/netif/ppp/md5.h	/^  unsigned char digest[16]; \/* actual digest after MD5Final call *\/$/;"	m	struct:__anon4
dip	net/lwip/core/snmp/msg_out.c	/^  struct ip_addr dip;$/;"	m	struct:snmp_trap_dst	typeref:struct:snmp_trap_dst::ip_addr	file:
dip	net/lwip/include/lwip/snmp_msg.h	/^  struct ip_addr dip;$/;"	m	struct:snmp_msg_trap	typeref:struct:snmp_msg_trap::ip_addr
dir	obj/fs/fs.asm	/^		dir = f;$/;"	d
dir	obj/fs/fs.asm	/^	dir = 0;$/;"	d
dir_alloc_file	fs/fs.c	/^dir_alloc_file(struct File *dir, struct File **file)$/;"	f	file:
dir_lookup	fs/fs.c	/^dir_lookup(struct File *dir, const char *name, struct File **file)$/;"	f	file:
diradd	fs/fsformat.c	/^diradd(struct Dir *d, uint32_t type, const char *name)$/;"	f
disable_defaultip	net/lwip/netif/ppp/ppp.h	/^  u_int  disable_defaultip : 1;       \/* Don't use hostname for default IP addrs *\/$/;"	m	struct:ppp_settings
diskaddr	fs/bc.c	/^diskaddr(uint32_t blockno)$/;"	f
diskmap	fs/fsformat.c	/^char *diskmap, *diskpos;$/;"	v
diskno	fs/ide.c	/^static int diskno = 1;$/;"	v	file:
diskno	obj/fs/fs.asm	/^	diskno = d;$/;"	d
diskpos	fs/fsformat.c	/^char *diskmap, *diskpos;$/;"	v
dns1	net/lwip/netif/ppp/ppp.h	/^  struct ip_addr our_ipaddr, his_ipaddr, netmask, dns1, dns2;$/;"	m	struct:ppp_addrs	typeref:struct:ppp_addrs::
dns2	net/lwip/netif/ppp/ppp.h	/^  struct ip_addr our_ipaddr, his_ipaddr, netmask, dns1, dns2;$/;"	m	struct:ppp_addrs	typeref:struct:ppp_addrs::
dns_answer	net/lwip/core/dns.c	/^struct dns_answer {$/;"	s	file:
dns_api_msg	net/lwip/include/lwip/api_msg.h	/^struct dns_api_msg {$/;"	s
dns_check_entries	net/lwip/core/dns.c	/^dns_check_entries(void)$/;"	f	file:
dns_check_entry	net/lwip/core/dns.c	/^dns_check_entry(u8_t i)$/;"	f	file:
dns_compare_name	net/lwip/core/dns.c	/^dns_compare_name(unsigned char *query, unsigned char *response)$/;"	f	file:
dns_count	net/lwip/include/lwip/dhcp.h	/^  u32_t dns_count; \/* actual number of DNS servers obtained *\/$/;"	m	struct:dhcp
dns_enqueue	net/lwip/core/dns.c	/^dns_enqueue(const char *name, dns_found_callback found, void *callback_arg)$/;"	f	file:
dns_found_callback	net/lwip/include/lwip/dns.h	/^typedef void (*dns_found_callback)(const char *name, struct ip_addr *ipaddr, void *callback_arg);$/;"	t
dns_gethostbyname	net/lwip/core/dns.c	/^dns_gethostbyname(const char *hostname, struct ip_addr *addr, dns_found_callback found,$/;"	f
dns_getserver	net/lwip/core/dns.c	/^dns_getserver(u8_t numdns)$/;"	f
dns_hdr	net/lwip/core/dns.c	/^struct dns_hdr {$/;"	s	file:
dns_init	net/lwip/core/dns.c	/^dns_init()$/;"	f
dns_lookup	net/lwip/core/dns.c	/^dns_lookup(const char *name)$/;"	f	file:
dns_parse_name	net/lwip/core/dns.c	/^dns_parse_name(unsigned char *query)$/;"	f	file:
dns_payload	net/lwip/core/dns.c	/^static u8_t                   dns_payload[DNS_MSG_SIZE];$/;"	v	file:
dns_pcb	net/lwip/core/dns.c	/^static struct udp_pcb        *dns_pcb;$/;"	v	typeref:struct:udp_pcb	file:
dns_query	net/lwip/core/dns.c	/^struct dns_query {$/;"	s	file:
dns_recv	net/lwip/core/dns.c	/^dns_recv(void *arg, struct udp_pcb *pcb, struct pbuf *p, struct ip_addr *addr, u16_t port)$/;"	f	file:
dns_send	net/lwip/core/dns.c	/^dns_send(u8_t numdns, const char* name, u8_t id)$/;"	f	file:
dns_seqno	net/lwip/core/dns.c	/^static u8_t                   dns_seqno;$/;"	v	file:
dns_servers	net/lwip/core/dns.c	/^static struct ip_addr         dns_servers[DNS_MAX_SERVERS];$/;"	v	typeref:struct:ip_addr	file:
dns_setserver	net/lwip/core/dns.c	/^dns_setserver(u8_t numdns, struct ip_addr *dnsserver)$/;"	f
dns_table	net/lwip/core/dns.c	/^static struct dns_table_entry dns_table[DNS_TABLE_SIZE];$/;"	v	typeref:struct:dns_table_entry	file:
dns_table_entry	net/lwip/core/dns.c	/^struct dns_table_entry {$/;"	s	file:
dns_timer	net/lwip/api/tcpip.c	/^dns_timer(void *arg)$/;"	f	file:
dns_tmr	net/lwip/core/dns.c	/^dns_tmr(void)$/;"	f
dnsaddr	net/lwip/netif/ppp/ipcp.h	/^  u32_t   dnsaddr[2];        \/* Primary and secondary MS DNS entries *\/$/;"	m	struct:ipcp_options
do_bind	net/lwip/api/api_msg.c	/^do_bind(struct api_msg_msg *msg)$/;"	f
do_close	net/lwip/api/api_msg.c	/^do_close(struct api_msg_msg *msg)$/;"	f
do_close_internal	net/lwip/api/api_msg.c	/^do_close_internal(struct netconn *conn)$/;"	f	file:
do_connect	net/lwip/api/api_msg.c	/^do_connect(struct api_msg_msg *msg)$/;"	f
do_connected	net/lwip/api/api_msg.c	/^do_connected(void *arg, struct tcp_pcb *pcb, err_t err)$/;"	f	file:
do_delconn	net/lwip/api/api_msg.c	/^do_delconn(struct api_msg_msg *msg)$/;"	f
do_disconnect	net/lwip/api/api_msg.c	/^do_disconnect(struct api_msg_msg *msg)$/;"	f
do_dns_found	net/lwip/api/api_msg.c	/^do_dns_found(const char *name, struct ip_addr *ipaddr, void *arg)$/;"	f	file:
do_getaddr	net/lwip/api/api_msg.c	/^do_getaddr(struct api_msg_msg *msg)$/;"	f
do_gethostbyname	net/lwip/api/api_msg.c	/^do_gethostbyname(void *arg)$/;"	f
do_join_leave_group	net/lwip/api/api_msg.c	/^do_join_leave_group(struct api_msg_msg *msg)$/;"	f
do_listen	net/lwip/api/api_msg.c	/^do_listen(struct api_msg_msg *msg)$/;"	f
do_netifapi_netif_add	net/lwip/api/netifapi.c	/^do_netifapi_netif_add( struct netifapi_msg_msg *msg)$/;"	f
do_netifapi_netif_common	net/lwip/api/netifapi.c	/^do_netifapi_netif_common( struct netifapi_msg_msg *msg)$/;"	f
do_newconn	net/lwip/api/api_msg.c	/^do_newconn(struct api_msg_msg *msg)$/;"	f
do_recv	net/lwip/api/api_msg.c	/^do_recv(struct api_msg_msg *msg)$/;"	f
do_send	net/lwip/api/api_msg.c	/^do_send(struct api_msg_msg *msg)$/;"	f
do_test	grade-lab5	/^    def do_test():$/;"	f	function:matchtest
do_write	net/lwip/api/api_msg.c	/^do_write(struct api_msg_msg *msg)$/;"	f
do_writemore	net/lwip/api/api_msg.c	/^do_writemore(struct netconn *conn)$/;"	f	file:
done	obj/net/ns.asm	/^        done = 1;$/;"	d
done	obj/net/ns.asm	/^      done = 1;$/;"	d
done	obj/net/ns.asm	/^ done:$/;"	l
down	net/lwip/netif/ppp/fsm.h	/^  void (*down)(fsm*);                               \/* Called when fsm leaves LS_OPENED state *\/$/;"	m	struct:fsm_callbacks
drop	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER drop;             \/* Dropped packets. *\/$/;"	m	struct:stats_proto
dst_in	obj/fs/fs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/kern/kernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/net/ns.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/net/testinput.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/net/testoutput.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/badsegment.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/breakpoint.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/buggyhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/buggyhello2.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/cat.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/divzero.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/dumbfork.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/echo.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/echosrv.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/echotest.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/evilhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/fairness.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultalloc.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultallocbad.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultbadhandler.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultdie.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultevilhandler.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultnostack.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultread.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultreadkernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultregs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultwrite.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultwritekernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/forktree.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/hello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/httpd.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/icode.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/idle.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/init.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/ls.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/lsfd.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/num.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/pingpong.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/pingpongs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/primes.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/primespipe.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/sendpage.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/sh.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/softint.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/spawnhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/spin.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/stresssched.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testbss.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testfdsharing.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testfile.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testkbd.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testpipe.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testpiperace.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testpiperace2.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testpteshare.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testshell.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testtime.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/yield.asm	/^	dst_in = dst;$/;"	d
dumbfork	user/dumbfork.c	/^dumbfork(void)$/;"	f
dummy	net/lwip/include/lwip/sys.h	/^struct sys_timeo {u8_t dummy;};$/;"	m	struct:sys_timeo
dup	lib/fd.c	/^dup(int oldfdnum, int newfdnum)$/;"	f
dupacks	net/lwip/include/lwip/tcp.h	/^  u8_t dupacks;$/;"	m	struct:tcp_pcb
duppage	lib/fork.c	/^duppage(envid_t envid, unsigned pn)$/;"	f	file:
duppage	user/dumbfork.c	/^duppage(envid_t dstenv, void *addr)$/;"	f
during	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:	file:
e	obj/kern/kernel.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/init.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/sh.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/testfdsharing.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/testpipe.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/testpteshare.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/testshell.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e1000	kern/e1000.c	/^volatile uint32_t *e1000;$/;"	v
e1000	obj/kern/kernel.asm	/^	e1000 = (uint32_t *)mmio_map_region(pcif->reg_base[0], pcif->reg_size[0]);$/;"	d
e1000_rx_desc	kern/e1000.h	/^struct e1000_rx_desc {$/;"	s
e1000_tx_desc	kern/e1000.h	/^struct e1000_tx_desc{$/;"	s
e2s	net/lwip/jos/arch/perror.c	/^e2s(int err) {$/;"	f
e_ehsize	inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:Elf
e_elf	inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	struct:Elf
e_entry	inc/elf.h	/^	uint32_t e_entry;$/;"	m	struct:Elf
e_flags	inc/elf.h	/^	uint32_t e_flags;$/;"	m	struct:Elf
e_machine	inc/elf.h	/^	uint16_t e_machine;$/;"	m	struct:Elf
e_magic	inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	struct:Elf
e_phentsize	inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:Elf
e_phnum	inc/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:Elf
e_phoff	inc/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:Elf
e_shentsize	inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:Elf
e_shnum	inc/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:Elf
e_shoff	inc/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:Elf
e_shstrndx	inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	struct:Elf
e_type	inc/elf.h	/^	uint16_t e_type;$/;"	m	struct:Elf
e_version	inc/elf.h	/^	uint32_t e_version;$/;"	m	struct:Elf
eaten	obj/net/ns.asm	/^          eaten = 1;$/;"	d
ebp	obj/kern/kernel.asm	/^		ebp = (uint32_t *)ebp[0]; \/\/ saved %ebp$/;"	d
ebp	obj/kern/kernel.asm	/^		ebp = (uint32_t *)ebp[0];$/;"	d
ebp	obj/kern/kernel.asm	/^	ebp = (uint32_t *)read_ebp();$/;"	d
ebuf	lib/printfmt.c	/^	char *ebuf;$/;"	m	struct:sprintbuf	file:
echo_port	grade-lab6	/^echo_port = QEMU.get_gdb_port() + 1$/;"	v
echocmds	obj/user/sh.asm	/^			echocmds = 1;$/;"	d
echocmds	obj/user/sh.asm	/^	echocmds = 0;$/;"	d
echoing	obj/kern/kernel.asm	/^	echoing = iscons(0);$/;"	d
echoing	obj/user/sh.asm	/^	echoing = iscons(0);$/;"	d
echoing	obj/user/testkbd.asm	/^	echoing = iscons(0);$/;"	d
echolen	obj/user/echotest.asm	/^	echolen = strlen(msg);$/;"	d
eff_wnd	obj/net/ns.asm	/^          eff_wnd = LWIP_MIN(pcb->cwnd, pcb->snd_wnd);$/;"	d
eflags	user/faultregs.c	/^	uint32_t eflags;$/;"	m	struct:regs	file:
eidlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t eidlen;$/;"	m	struct:snmp_trap_header_lengths
eidlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t eidlenlen;$/;"	m	struct:snmp_trap_header_lengths
eip	obj/kern/kernel.asm	/^		eip = ebp[1];$/;"	d
eip	user/faultregs.c	/^	uintptr_t eip;$/;"	m	struct:regs	file:
eip_file	kern/kdebug.h	/^	const char *eip_file;		\/\/ Source code filename for EIP$/;"	m	struct:Eipdebuginfo
eip_fn_addr	kern/kdebug.h	/^	uintptr_t eip_fn_addr;		\/\/ Address of start of function$/;"	m	struct:Eipdebuginfo
eip_fn_name	kern/kdebug.h	/^	const char *eip_fn_name;	\/\/ Name of function containing EIP$/;"	m	struct:Eipdebuginfo
eip_fn_namelen	kern/kdebug.h	/^	int eip_fn_namelen;		\/\/ Length of function name$/;"	m	struct:Eipdebuginfo
eip_fn_narg	kern/kdebug.h	/^	int eip_fn_narg;		\/\/ Number of function arguments$/;"	m	struct:Eipdebuginfo
eip_line	kern/kdebug.h	/^	int eip_line;			\/\/ Source code linenumber for EIP$/;"	m	struct:Eipdebuginfo
elf	obj/user/icode.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/init.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/sh.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/spawnhello.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/testpteshare.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/testshell.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
empty	obj/net/ns.asm	/^      empty = i;$/;"	d
empty_table	net/lwip/core/snmp/mib_structs.c	/^empty_table(struct mib_node *node)$/;"	f	file:
enable	net/lwip/core/snmp/msg_out.c	/^  u8_t enable;$/;"	m	struct:snmp_trap_dst	file:
enabled_flag	net/lwip/netif/ppp/ppp.h	/^    int  enabled_flag;      \/* 0 iff protocol is disabled *\/$/;"	m	struct:protent
end	net/lwip/core/ipv4/ip_frag.c	/^  u16_t end;$/;"	m	struct:ip_reass_helper	file:
end	obj/kern/kernel.asm	/^	end = PGNUM(PADDR(boot_alloc(0)));$/;"	d
end_pa	obj/boot/boot.asm	/^	end_pa = pa + count;$/;"	d
end_part	gradelib.py	/^def end_part(name):$/;"	f
endofargs	obj/user/ls.asm	/^    endofargs:$/;"	l
endofargs	obj/user/lsfd.asm	/^    endofargs:$/;"	l
endofargs	obj/user/sh.asm	/^    endofargs:$/;"	l
endpoint	net/lwip/netif/ppp/lcp.h	/^    struct epdisc endpoint;      \/* endpoint discriminator *\/$/;"	m	struct:lcp_options	typeref:struct:lcp_options::epdisc
enterprise	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_obj_id *enterprise;$/;"	m	struct:snmp_msg_trap	typeref:struct:snmp_msg_trap::snmp_obj_id
entries	kern/mpconfig.c	/^	uint8_t entries[0];             \/\/ table entries$/;"	m	struct:mpconf	file:
entry	kern/entry.S	/^entry:$/;"	l
entry	kern/mpconfig.c	/^	uint16_t entry;                 \/\/ entry count$/;"	m	struct:mpconf	file:
entry	obj/kern/kernel.asm	/^entry:$/;"	l
entry_pgdir	kern/entrypgdir.c	/^pde_t entry_pgdir[NPDENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES];$/;"	v
ents	fs/fsformat.c	/^	struct File *ents;$/;"	m	struct:Dir	typeref:struct:Dir::File	file:
enum	obj/net/ns.asm	/^enum netconn_type$/;"	l
enum	obj/net/ns.asm	/^enum { thread_hash_size = 257 };$/;"	l
env_alloc	kern/env.c	/^env_alloc(struct Env **newenv_store, envid_t parent_id)$/;"	f
env_cpunum	inc/env.h	/^	int env_cpunum;			\/\/ The CPU that the env is running on$/;"	m	struct:Env
env_create	kern/env.c	/^env_create(uint8_t *binary, enum EnvType type)$/;"	f
env_destroy	kern/env.c	/^env_destroy(struct Env *e)$/;"	f
env_free	kern/env.c	/^env_free(struct Env *e)$/;"	f
env_free_list	kern/env.c	/^static struct Env *env_free_list;	\/\/ Free environment list$/;"	v	typeref:struct:Env	file:
env_free_list	obj/kern/kernel.asm	/^		env_free_list = envs + i;$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e->env_link;$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e;$/;"	d
env_id	inc/env.h	/^	envid_t env_id;			\/\/ Unique environment identifier$/;"	m	struct:Env
env_init	kern/env.c	/^env_init(void)$/;"	f
env_init_percpu	kern/env.c	/^env_init_percpu(void)$/;"	f
env_ipc_dstva	inc/env.h	/^	void *env_ipc_dstva;		\/\/ VA at which to map received page$/;"	m	struct:Env
env_ipc_from	inc/env.h	/^	envid_t env_ipc_from;		\/\/ envid of the sender$/;"	m	struct:Env
env_ipc_perm	inc/env.h	/^	int env_ipc_perm;		\/\/ Perm of page mapping received$/;"	m	struct:Env
env_ipc_recving	inc/env.h	/^	bool env_ipc_recving;		\/\/ Env is blocked receiving$/;"	m	struct:Env
env_ipc_value	inc/env.h	/^	uint32_t env_ipc_value;		\/\/ Data value sent to us$/;"	m	struct:Env
env_link	inc/env.h	/^	struct Env *env_link;		\/\/ Next free Env$/;"	m	struct:Env	typeref:struct:Env::Env
env_parent_id	inc/env.h	/^	envid_t env_parent_id;		\/\/ env_id of this env's parent$/;"	m	struct:Env
env_pgdir	inc/env.h	/^	pde_t *env_pgdir;		\/\/ Kernel virtual address of page dir$/;"	m	struct:Env
env_pgfault_upcall	inc/env.h	/^	void *env_pgfault_upcall;	\/\/ Page fault upcall entry point$/;"	m	struct:Env
env_pop_tf	kern/env.c	/^env_pop_tf(struct Trapframe *tf)$/;"	f
env_run	kern/env.c	/^env_run(struct Env *e)$/;"	f
env_runs	inc/env.h	/^	uint32_t env_runs;		\/\/ Number of times environment has run$/;"	m	struct:Env
env_setup_vm	kern/env.c	/^env_setup_vm(struct Env *e)$/;"	f	file:
env_status	inc/env.h	/^	unsigned env_status;		\/\/ Status of the environment$/;"	m	struct:Env
env_tf	inc/env.h	/^	struct Trapframe env_tf;	\/\/ Saved registers$/;"	m	struct:Env	typeref:struct:Env::Trapframe
env_type	inc/env.h	/^	enum EnvType env_type;		\/\/ Indicates special system environments$/;"	m	struct:Env	typeref:enum:Env::EnvType
envid	net/lwip/jos/jif/jif.c	/^    envid_t envid;$/;"	m	struct:jif	file:
envid	obj/net/ns.asm	/^	envid = sys_getenvid();$/;"	d
envid	obj/net/testinput.asm	/^	envid = sys_getenvid();$/;"	d
envid	obj/net/testoutput.asm	/^	envid = sys_getenvid();$/;"	d
envid	obj/user/dumbfork.asm	/^	envid = sys_exofork();$/;"	d
envid2env	kern/env.c	/^envid2env(envid_t envid, struct Env **env_store, bool checkperm)$/;"	f
envid_t	inc/env.h	/^typedef int32_t envid_t;$/;"	t
envid_t	obj/fs/fs.asm	/^envid_t$/;"	l
envid_t	obj/net/ns.asm	/^envid_t$/;"	l
envid_t	obj/net/testinput.asm	/^envid_t$/;"	l
envid_t	obj/net/testoutput.asm	/^envid_t$/;"	l
envid_t	obj/user/badsegment.asm	/^envid_t$/;"	l
envid_t	obj/user/breakpoint.asm	/^envid_t$/;"	l
envid_t	obj/user/buggyhello.asm	/^envid_t$/;"	l
envid_t	obj/user/buggyhello2.asm	/^envid_t$/;"	l
envid_t	obj/user/cat.asm	/^envid_t$/;"	l
envid_t	obj/user/divzero.asm	/^envid_t$/;"	l
envid_t	obj/user/dumbfork.asm	/^envid_t dumbfork(void);$/;"	l
envid_t	obj/user/dumbfork.asm	/^envid_t$/;"	l
envid_t	obj/user/echo.asm	/^envid_t$/;"	l
envid_t	obj/user/echosrv.asm	/^envid_t$/;"	l
envid_t	obj/user/echotest.asm	/^envid_t$/;"	l
envid_t	obj/user/evilhello.asm	/^envid_t$/;"	l
envid_t	obj/user/fairness.asm	/^envid_t$/;"	l
envid_t	obj/user/faultalloc.asm	/^envid_t$/;"	l
envid_t	obj/user/faultallocbad.asm	/^envid_t$/;"	l
envid_t	obj/user/faultbadhandler.asm	/^envid_t$/;"	l
envid_t	obj/user/faultdie.asm	/^envid_t$/;"	l
envid_t	obj/user/faultevilhandler.asm	/^envid_t$/;"	l
envid_t	obj/user/faultnostack.asm	/^envid_t$/;"	l
envid_t	obj/user/faultread.asm	/^envid_t$/;"	l
envid_t	obj/user/faultreadkernel.asm	/^envid_t$/;"	l
envid_t	obj/user/faultregs.asm	/^envid_t$/;"	l
envid_t	obj/user/faultwrite.asm	/^envid_t$/;"	l
envid_t	obj/user/faultwritekernel.asm	/^envid_t$/;"	l
envid_t	obj/user/forktree.asm	/^envid_t$/;"	l
envid_t	obj/user/hello.asm	/^envid_t$/;"	l
envid_t	obj/user/httpd.asm	/^envid_t$/;"	l
envid_t	obj/user/icode.asm	/^envid_t$/;"	l
envid_t	obj/user/idle.asm	/^envid_t$/;"	l
envid_t	obj/user/init.asm	/^envid_t$/;"	l
envid_t	obj/user/ls.asm	/^envid_t$/;"	l
envid_t	obj/user/lsfd.asm	/^envid_t$/;"	l
envid_t	obj/user/num.asm	/^envid_t$/;"	l
envid_t	obj/user/pingpong.asm	/^envid_t$/;"	l
envid_t	obj/user/pingpongs.asm	/^envid_t$/;"	l
envid_t	obj/user/primes.asm	/^envid_t$/;"	l
envid_t	obj/user/primespipe.asm	/^envid_t$/;"	l
envid_t	obj/user/sendpage.asm	/^envid_t$/;"	l
envid_t	obj/user/sh.asm	/^envid_t$/;"	l
envid_t	obj/user/softint.asm	/^envid_t$/;"	l
envid_t	obj/user/spawnhello.asm	/^envid_t$/;"	l
envid_t	obj/user/spin.asm	/^envid_t$/;"	l
envid_t	obj/user/stresssched.asm	/^envid_t$/;"	l
envid_t	obj/user/testbss.asm	/^envid_t$/;"	l
envid_t	obj/user/testfdsharing.asm	/^envid_t$/;"	l
envid_t	obj/user/testfile.asm	/^envid_t$/;"	l
envid_t	obj/user/testkbd.asm	/^envid_t$/;"	l
envid_t	obj/user/testpipe.asm	/^envid_t$/;"	l
envid_t	obj/user/testpiperace.asm	/^envid_t$/;"	l
envid_t	obj/user/testpiperace2.asm	/^envid_t$/;"	l
envid_t	obj/user/testpteshare.asm	/^envid_t$/;"	l
envid_t	obj/user/testshell.asm	/^envid_t$/;"	l
envid_t	obj/user/testtime.asm	/^envid_t$/;"	l
envid_t	obj/user/yield.asm	/^envid_t$/;"	l
envs	kern/env.c	/^struct Env *envs = NULL;		\/\/ All environments$/;"	v	typeref:struct:Env
envs	obj/kern/kernel.asm	/^	envs = (struct Env *)boot_alloc(sizeof(struct Env) * NENV);$/;"	d
eph	obj/boot/boot.asm	/^	eph = ph + ELFHDR->e_phnum;$/;"	d
eph	obj/kern/kernel.asm	/^	eph = ph + elfhdr->e_phnum;$/;"	d
err	net/lwip/api/sockets.c	/^  err_t err;$/;"	m	struct:lwip_setgetsockopt_data	file:
err	net/lwip/api/sockets.c	/^  int err;$/;"	m	struct:lwip_socket	file:
err	net/lwip/core/dns.c	/^  u8_t  err;$/;"	m	struct:dns_table_entry	file:
err	net/lwip/include/lwip/api.h	/^  err_t err;$/;"	m	struct:netconn
err	net/lwip/include/lwip/api_msg.h	/^  err_t *err;$/;"	m	struct:dns_api_msg
err	net/lwip/include/lwip/netifapi.h	/^  err_t err;$/;"	m	struct:netifapi_msg_msg
err	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER err;              \/* Misc error. *\/$/;"	m	struct:stats_proto
err	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER err;$/;"	m	struct:stats_mem
err	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER err;$/;"	m	struct:stats_syselem
err	obj/fs/fs.asm	/^				err = -err;$/;"	d
err	obj/fs/fs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/fs/fs.asm	/^    err:$/;"	l
err	obj/fs/fs.asm	/^err:$/;"	l
err	obj/kern/kernel.asm	/^				err = -err;$/;"	d
err	obj/kern/kernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/net/ns.asm	/^				err = -err;$/;"	d
err	obj/net/ns.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/net/ns.asm	/^        err = EAFNOSUPPORT;$/;"	d
err	obj/net/ns.asm	/^        err = EINVAL;$/;"	d
err	obj/net/ns.asm	/^        err = ENOPROTOOPT;$/;"	d
err	obj/net/ns.asm	/^        err = ERR_OK;$/;"	d
err	obj/net/ns.asm	/^      err = EINVAL;$/;"	d
err	obj/net/ns.asm	/^      err = ENOPROTOOPT;$/;"	d
err	obj/net/ns.asm	/^    err = ENOPROTOOPT;$/;"	d
err	obj/net/ns.asm	/^    err = ERR_OK;$/;"	d
err	obj/net/ns.asm	/^    err = ip_output_if(q, src_ip, dst_ip, pcb->ttl, pcb->tos, IP_PROTO_UDP, netif);    $/;"	d
err	obj/net/ns.asm	/^    err = netconn_connect(sock->conn, &remote_addr, ntohs(remote_port));$/;"	d
err	obj/net/ns.asm	/^    err = netconn_disconnect(sock->conn);$/;"	d
err	obj/net/ns.asm	/^    err = netconn_send(sock->conn, &buf);$/;"	d
err	obj/net/ns.asm	/^    err = tcp_output(conn->pcb.tcp);$/;"	d
err	obj/net/ns.asm	/^    err = tcp_output_nagle(conn->pcb.tcp);$/;"	d
err	obj/net/ns.asm	/^    err = tcp_process(pcb);$/;"	d
err	obj/net/ns.asm	/^    err = tcp_send_ctrl(pcb, TCP_FIN);$/;"	d
err	obj/net/ns.asm	/^    err = udp_bind(pcb, &pcb->local_ip, pcb->local_port);$/;"	d
err	obj/net/ns.asm	/^    err:$/;"	l
err	obj/net/ns.asm	/^  err = ERR_OK;$/;"	d
err	obj/net/ns.asm	/^  err = data.err;$/;"	d
err	obj/net/ns.asm	/^  err = ip_output_if (q, src_ip, ipaddr, pcb->ttl, pcb->tos, pcb->protocol, netif);$/;"	d
err	obj/net/ns.asm	/^  err = netconn_bind(sock->conn, &local_addr, ntohs(local_port));$/;"	d
err	obj/net/ns.asm	/^  err = netconn_listen_with_backlog(sock->conn, backlog);$/;"	d
err	obj/net/ns.asm	/^  err = netconn_peer(newconn, &naddr, &port);$/;"	d
err	obj/net/ns.asm	/^  err = netconn_write(sock->conn, data, size, NETCONN_COPY | ((flags & MSG_MORE)?NETCONN_MORE:0));$/;"	d
err	obj/net/ns.asm	/^  err = tcp_close(conn->pcb.tcp);$/;"	d
err	obj/net/ns.asm	/^  err = tcp_write(conn->pcb.tcp, dataptr, len, conn->write_msg->msg.w.apiflags);$/;"	d
err	obj/net/ns.asm	/^err:$/;"	l
err	obj/net/testinput.asm	/^				err = -err;$/;"	d
err	obj/net/testinput.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/net/testinput.asm	/^    err:$/;"	l
err	obj/net/testinput.asm	/^err:$/;"	l
err	obj/net/testoutput.asm	/^				err = -err;$/;"	d
err	obj/net/testoutput.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/net/testoutput.asm	/^    err:$/;"	l
err	obj/net/testoutput.asm	/^err:$/;"	l
err	obj/user/badsegment.asm	/^				err = -err;$/;"	d
err	obj/user/badsegment.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/badsegment.asm	/^    err:$/;"	l
err	obj/user/badsegment.asm	/^err:$/;"	l
err	obj/user/breakpoint.asm	/^				err = -err;$/;"	d
err	obj/user/breakpoint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/breakpoint.asm	/^    err:$/;"	l
err	obj/user/breakpoint.asm	/^err:$/;"	l
err	obj/user/buggyhello.asm	/^				err = -err;$/;"	d
err	obj/user/buggyhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello.asm	/^    err:$/;"	l
err	obj/user/buggyhello.asm	/^err:$/;"	l
err	obj/user/buggyhello2.asm	/^				err = -err;$/;"	d
err	obj/user/buggyhello2.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello2.asm	/^    err:$/;"	l
err	obj/user/buggyhello2.asm	/^err:$/;"	l
err	obj/user/cat.asm	/^				err = -err;$/;"	d
err	obj/user/cat.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/cat.asm	/^    err:$/;"	l
err	obj/user/cat.asm	/^err:$/;"	l
err	obj/user/divzero.asm	/^				err = -err;$/;"	d
err	obj/user/divzero.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/divzero.asm	/^    err:$/;"	l
err	obj/user/divzero.asm	/^err:$/;"	l
err	obj/user/dumbfork.asm	/^				err = -err;$/;"	d
err	obj/user/dumbfork.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/dumbfork.asm	/^    err:$/;"	l
err	obj/user/dumbfork.asm	/^err:$/;"	l
err	obj/user/echo.asm	/^				err = -err;$/;"	d
err	obj/user/echo.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/echo.asm	/^    err:$/;"	l
err	obj/user/echo.asm	/^err:$/;"	l
err	obj/user/echosrv.asm	/^				err = -err;$/;"	d
err	obj/user/echosrv.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/echosrv.asm	/^    err:$/;"	l
err	obj/user/echosrv.asm	/^err:$/;"	l
err	obj/user/echotest.asm	/^				err = -err;$/;"	d
err	obj/user/echotest.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/echotest.asm	/^    err:$/;"	l
err	obj/user/echotest.asm	/^err:$/;"	l
err	obj/user/evilhello.asm	/^				err = -err;$/;"	d
err	obj/user/evilhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/evilhello.asm	/^    err:$/;"	l
err	obj/user/evilhello.asm	/^err:$/;"	l
err	obj/user/fairness.asm	/^				err = -err;$/;"	d
err	obj/user/fairness.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/fairness.asm	/^    err:$/;"	l
err	obj/user/fairness.asm	/^err:$/;"	l
err	obj/user/faultalloc.asm	/^				err = -err;$/;"	d
err	obj/user/faultalloc.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultalloc.asm	/^    err:$/;"	l
err	obj/user/faultalloc.asm	/^err:$/;"	l
err	obj/user/faultallocbad.asm	/^				err = -err;$/;"	d
err	obj/user/faultallocbad.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultallocbad.asm	/^    err:$/;"	l
err	obj/user/faultallocbad.asm	/^err:$/;"	l
err	obj/user/faultbadhandler.asm	/^				err = -err;$/;"	d
err	obj/user/faultbadhandler.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultbadhandler.asm	/^    err:$/;"	l
err	obj/user/faultbadhandler.asm	/^err:$/;"	l
err	obj/user/faultdie.asm	/^				err = -err;$/;"	d
err	obj/user/faultdie.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultdie.asm	/^    err:$/;"	l
err	obj/user/faultdie.asm	/^err:$/;"	l
err	obj/user/faultevilhandler.asm	/^				err = -err;$/;"	d
err	obj/user/faultevilhandler.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultevilhandler.asm	/^    err:$/;"	l
err	obj/user/faultevilhandler.asm	/^err:$/;"	l
err	obj/user/faultnostack.asm	/^				err = -err;$/;"	d
err	obj/user/faultnostack.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultnostack.asm	/^    err:$/;"	l
err	obj/user/faultnostack.asm	/^err:$/;"	l
err	obj/user/faultread.asm	/^				err = -err;$/;"	d
err	obj/user/faultread.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultread.asm	/^    err:$/;"	l
err	obj/user/faultread.asm	/^err:$/;"	l
err	obj/user/faultreadkernel.asm	/^				err = -err;$/;"	d
err	obj/user/faultreadkernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultreadkernel.asm	/^    err:$/;"	l
err	obj/user/faultreadkernel.asm	/^err:$/;"	l
err	obj/user/faultregs.asm	/^				err = -err;$/;"	d
err	obj/user/faultregs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultregs.asm	/^    err:$/;"	l
err	obj/user/faultregs.asm	/^err:$/;"	l
err	obj/user/faultwrite.asm	/^				err = -err;$/;"	d
err	obj/user/faultwrite.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwrite.asm	/^    err:$/;"	l
err	obj/user/faultwrite.asm	/^err:$/;"	l
err	obj/user/faultwritekernel.asm	/^				err = -err;$/;"	d
err	obj/user/faultwritekernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwritekernel.asm	/^    err:$/;"	l
err	obj/user/faultwritekernel.asm	/^err:$/;"	l
err	obj/user/forktree.asm	/^				err = -err;$/;"	d
err	obj/user/forktree.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/forktree.asm	/^    err:$/;"	l
err	obj/user/forktree.asm	/^err:$/;"	l
err	obj/user/hello.asm	/^				err = -err;$/;"	d
err	obj/user/hello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/hello.asm	/^    err:$/;"	l
err	obj/user/hello.asm	/^err:$/;"	l
err	obj/user/httpd.asm	/^				err = -err;$/;"	d
err	obj/user/httpd.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/httpd.asm	/^    err:$/;"	l
err	obj/user/httpd.asm	/^err:$/;"	l
err	obj/user/icode.asm	/^				err = -err;$/;"	d
err	obj/user/icode.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/icode.asm	/^    err:$/;"	l
err	obj/user/icode.asm	/^err:$/;"	l
err	obj/user/idle.asm	/^				err = -err;$/;"	d
err	obj/user/idle.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/idle.asm	/^    err:$/;"	l
err	obj/user/idle.asm	/^err:$/;"	l
err	obj/user/init.asm	/^				err = -err;$/;"	d
err	obj/user/init.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/init.asm	/^    err:$/;"	l
err	obj/user/init.asm	/^err:$/;"	l
err	obj/user/ls.asm	/^				err = -err;$/;"	d
err	obj/user/ls.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/ls.asm	/^    err:$/;"	l
err	obj/user/ls.asm	/^err:$/;"	l
err	obj/user/lsfd.asm	/^				err = -err;$/;"	d
err	obj/user/lsfd.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/lsfd.asm	/^    err:$/;"	l
err	obj/user/lsfd.asm	/^err:$/;"	l
err	obj/user/num.asm	/^				err = -err;$/;"	d
err	obj/user/num.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/num.asm	/^    err:$/;"	l
err	obj/user/num.asm	/^err:$/;"	l
err	obj/user/pingpong.asm	/^				err = -err;$/;"	d
err	obj/user/pingpong.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/pingpong.asm	/^    err:$/;"	l
err	obj/user/pingpong.asm	/^err:$/;"	l
err	obj/user/pingpongs.asm	/^				err = -err;$/;"	d
err	obj/user/pingpongs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/pingpongs.asm	/^    err:$/;"	l
err	obj/user/pingpongs.asm	/^err:$/;"	l
err	obj/user/primes.asm	/^				err = -err;$/;"	d
err	obj/user/primes.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/primes.asm	/^    err:$/;"	l
err	obj/user/primes.asm	/^err:$/;"	l
err	obj/user/primespipe.asm	/^				err = -err;$/;"	d
err	obj/user/primespipe.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/primespipe.asm	/^    err:$/;"	l
err	obj/user/primespipe.asm	/^err:$/;"	l
err	obj/user/sendpage.asm	/^				err = -err;$/;"	d
err	obj/user/sendpage.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/sendpage.asm	/^    err:$/;"	l
err	obj/user/sendpage.asm	/^err:$/;"	l
err	obj/user/sh.asm	/^				err = -err;$/;"	d
err	obj/user/sh.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/sh.asm	/^    err:$/;"	l
err	obj/user/sh.asm	/^err:$/;"	l
err	obj/user/softint.asm	/^				err = -err;$/;"	d
err	obj/user/softint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/softint.asm	/^    err:$/;"	l
err	obj/user/softint.asm	/^err:$/;"	l
err	obj/user/spawnhello.asm	/^				err = -err;$/;"	d
err	obj/user/spawnhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/spawnhello.asm	/^    err:$/;"	l
err	obj/user/spawnhello.asm	/^err:$/;"	l
err	obj/user/spin.asm	/^				err = -err;$/;"	d
err	obj/user/spin.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/spin.asm	/^    err:$/;"	l
err	obj/user/spin.asm	/^err:$/;"	l
err	obj/user/stresssched.asm	/^				err = -err;$/;"	d
err	obj/user/stresssched.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/stresssched.asm	/^    err:$/;"	l
err	obj/user/stresssched.asm	/^err:$/;"	l
err	obj/user/testbss.asm	/^				err = -err;$/;"	d
err	obj/user/testbss.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testbss.asm	/^    err:$/;"	l
err	obj/user/testbss.asm	/^err:$/;"	l
err	obj/user/testfdsharing.asm	/^				err = -err;$/;"	d
err	obj/user/testfdsharing.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testfdsharing.asm	/^    err:$/;"	l
err	obj/user/testfdsharing.asm	/^err:$/;"	l
err	obj/user/testfile.asm	/^				err = -err;$/;"	d
err	obj/user/testfile.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testfile.asm	/^    err:$/;"	l
err	obj/user/testfile.asm	/^err:$/;"	l
err	obj/user/testkbd.asm	/^				err = -err;$/;"	d
err	obj/user/testkbd.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testkbd.asm	/^    err:$/;"	l
err	obj/user/testkbd.asm	/^err:$/;"	l
err	obj/user/testpipe.asm	/^				err = -err;$/;"	d
err	obj/user/testpipe.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testpipe.asm	/^    err:$/;"	l
err	obj/user/testpipe.asm	/^err:$/;"	l
err	obj/user/testpiperace.asm	/^				err = -err;$/;"	d
err	obj/user/testpiperace.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testpiperace.asm	/^    err:$/;"	l
err	obj/user/testpiperace.asm	/^err:$/;"	l
err	obj/user/testpiperace2.asm	/^				err = -err;$/;"	d
err	obj/user/testpiperace2.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testpiperace2.asm	/^    err:$/;"	l
err	obj/user/testpiperace2.asm	/^err:$/;"	l
err	obj/user/testpteshare.asm	/^				err = -err;$/;"	d
err	obj/user/testpteshare.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testpteshare.asm	/^    err:$/;"	l
err	obj/user/testpteshare.asm	/^err:$/;"	l
err	obj/user/testshell.asm	/^				err = -err;$/;"	d
err	obj/user/testshell.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testshell.asm	/^    err:$/;"	l
err	obj/user/testshell.asm	/^err:$/;"	l
err	obj/user/testtime.asm	/^				err = -err;$/;"	d
err	obj/user/testtime.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testtime.asm	/^    err:$/;"	l
err	obj/user/testtime.asm	/^err:$/;"	l
err	obj/user/yield.asm	/^				err = -err;$/;"	d
err	obj/user/yield.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/yield.asm	/^    err:$/;"	l
err	obj/user/yield.asm	/^err:$/;"	l
err1	obj/fs/fs.asm	/^    err1:$/;"	l
err1	obj/net/ns.asm	/^    err1:$/;"	l
err1	obj/net/testinput.asm	/^    err1:$/;"	l
err1	obj/net/testoutput.asm	/^    err1:$/;"	l
err1	obj/user/badsegment.asm	/^    err1:$/;"	l
err1	obj/user/breakpoint.asm	/^    err1:$/;"	l
err1	obj/user/buggyhello.asm	/^    err1:$/;"	l
err1	obj/user/buggyhello2.asm	/^    err1:$/;"	l
err1	obj/user/cat.asm	/^    err1:$/;"	l
err1	obj/user/divzero.asm	/^    err1:$/;"	l
err1	obj/user/dumbfork.asm	/^    err1:$/;"	l
err1	obj/user/echo.asm	/^    err1:$/;"	l
err1	obj/user/echosrv.asm	/^    err1:$/;"	l
err1	obj/user/echotest.asm	/^    err1:$/;"	l
err1	obj/user/evilhello.asm	/^    err1:$/;"	l
err1	obj/user/fairness.asm	/^    err1:$/;"	l
err1	obj/user/faultalloc.asm	/^    err1:$/;"	l
err1	obj/user/faultallocbad.asm	/^    err1:$/;"	l
err1	obj/user/faultbadhandler.asm	/^    err1:$/;"	l
err1	obj/user/faultdie.asm	/^    err1:$/;"	l
err1	obj/user/faultevilhandler.asm	/^    err1:$/;"	l
err1	obj/user/faultnostack.asm	/^    err1:$/;"	l
err1	obj/user/faultread.asm	/^    err1:$/;"	l
err1	obj/user/faultreadkernel.asm	/^    err1:$/;"	l
err1	obj/user/faultregs.asm	/^    err1:$/;"	l
err1	obj/user/faultwrite.asm	/^    err1:$/;"	l
err1	obj/user/faultwritekernel.asm	/^    err1:$/;"	l
err1	obj/user/forktree.asm	/^    err1:$/;"	l
err1	obj/user/hello.asm	/^    err1:$/;"	l
err1	obj/user/httpd.asm	/^    err1:$/;"	l
err1	obj/user/icode.asm	/^    err1:$/;"	l
err1	obj/user/idle.asm	/^    err1:$/;"	l
err1	obj/user/init.asm	/^    err1:$/;"	l
err1	obj/user/ls.asm	/^    err1:$/;"	l
err1	obj/user/lsfd.asm	/^    err1:$/;"	l
err1	obj/user/num.asm	/^    err1:$/;"	l
err1	obj/user/pingpong.asm	/^    err1:$/;"	l
err1	obj/user/pingpongs.asm	/^    err1:$/;"	l
err1	obj/user/primes.asm	/^    err1:$/;"	l
err1	obj/user/primespipe.asm	/^    err1:$/;"	l
err1	obj/user/sendpage.asm	/^    err1:$/;"	l
err1	obj/user/sh.asm	/^    err1:$/;"	l
err1	obj/user/softint.asm	/^    err1:$/;"	l
err1	obj/user/spawnhello.asm	/^    err1:$/;"	l
err1	obj/user/spin.asm	/^    err1:$/;"	l
err1	obj/user/stresssched.asm	/^    err1:$/;"	l
err1	obj/user/testbss.asm	/^    err1:$/;"	l
err1	obj/user/testfdsharing.asm	/^    err1:$/;"	l
err1	obj/user/testfile.asm	/^    err1:$/;"	l
err1	obj/user/testkbd.asm	/^    err1:$/;"	l
err1	obj/user/testpipe.asm	/^    err1:$/;"	l
err1	obj/user/testpiperace.asm	/^    err1:$/;"	l
err1	obj/user/testpiperace2.asm	/^    err1:$/;"	l
err1	obj/user/testpteshare.asm	/^    err1:$/;"	l
err1	obj/user/testshell.asm	/^    err1:$/;"	l
err1	obj/user/testtime.asm	/^    err1:$/;"	l
err1	obj/user/yield.asm	/^    err1:$/;"	l
err2	obj/fs/fs.asm	/^    err2:$/;"	l
err2	obj/net/ns.asm	/^    err2:$/;"	l
err2	obj/net/testinput.asm	/^    err2:$/;"	l
err2	obj/net/testoutput.asm	/^    err2:$/;"	l
err2	obj/user/badsegment.asm	/^    err2:$/;"	l
err2	obj/user/breakpoint.asm	/^    err2:$/;"	l
err2	obj/user/buggyhello.asm	/^    err2:$/;"	l
err2	obj/user/buggyhello2.asm	/^    err2:$/;"	l
err2	obj/user/cat.asm	/^    err2:$/;"	l
err2	obj/user/divzero.asm	/^    err2:$/;"	l
err2	obj/user/dumbfork.asm	/^    err2:$/;"	l
err2	obj/user/echo.asm	/^    err2:$/;"	l
err2	obj/user/echosrv.asm	/^    err2:$/;"	l
err2	obj/user/echotest.asm	/^    err2:$/;"	l
err2	obj/user/evilhello.asm	/^    err2:$/;"	l
err2	obj/user/fairness.asm	/^    err2:$/;"	l
err2	obj/user/faultalloc.asm	/^    err2:$/;"	l
err2	obj/user/faultallocbad.asm	/^    err2:$/;"	l
err2	obj/user/faultbadhandler.asm	/^    err2:$/;"	l
err2	obj/user/faultdie.asm	/^    err2:$/;"	l
err2	obj/user/faultevilhandler.asm	/^    err2:$/;"	l
err2	obj/user/faultnostack.asm	/^    err2:$/;"	l
err2	obj/user/faultread.asm	/^    err2:$/;"	l
err2	obj/user/faultreadkernel.asm	/^    err2:$/;"	l
err2	obj/user/faultregs.asm	/^    err2:$/;"	l
err2	obj/user/faultwrite.asm	/^    err2:$/;"	l
err2	obj/user/faultwritekernel.asm	/^    err2:$/;"	l
err2	obj/user/forktree.asm	/^    err2:$/;"	l
err2	obj/user/hello.asm	/^    err2:$/;"	l
err2	obj/user/httpd.asm	/^    err2:$/;"	l
err2	obj/user/icode.asm	/^    err2:$/;"	l
err2	obj/user/idle.asm	/^    err2:$/;"	l
err2	obj/user/init.asm	/^    err2:$/;"	l
err2	obj/user/ls.asm	/^    err2:$/;"	l
err2	obj/user/lsfd.asm	/^    err2:$/;"	l
err2	obj/user/num.asm	/^    err2:$/;"	l
err2	obj/user/pingpong.asm	/^    err2:$/;"	l
err2	obj/user/pingpongs.asm	/^    err2:$/;"	l
err2	obj/user/primes.asm	/^    err2:$/;"	l
err2	obj/user/primespipe.asm	/^    err2:$/;"	l
err2	obj/user/sendpage.asm	/^    err2:$/;"	l
err2	obj/user/sh.asm	/^    err2:$/;"	l
err2	obj/user/softint.asm	/^    err2:$/;"	l
err2	obj/user/spawnhello.asm	/^    err2:$/;"	l
err2	obj/user/spin.asm	/^    err2:$/;"	l
err2	obj/user/stresssched.asm	/^    err2:$/;"	l
err2	obj/user/testbss.asm	/^    err2:$/;"	l
err2	obj/user/testfdsharing.asm	/^    err2:$/;"	l
err2	obj/user/testfile.asm	/^    err2:$/;"	l
err2	obj/user/testkbd.asm	/^    err2:$/;"	l
err2	obj/user/testpipe.asm	/^    err2:$/;"	l
err2	obj/user/testpiperace.asm	/^    err2:$/;"	l
err2	obj/user/testpiperace2.asm	/^    err2:$/;"	l
err2	obj/user/testpteshare.asm	/^    err2:$/;"	l
err2	obj/user/testshell.asm	/^    err2:$/;"	l
err2	obj/user/testtime.asm	/^    err2:$/;"	l
err2	obj/user/yield.asm	/^    err2:$/;"	l
err3	obj/fs/fs.asm	/^    err3:$/;"	l
err3	obj/net/ns.asm	/^    err3:$/;"	l
err3	obj/net/testinput.asm	/^    err3:$/;"	l
err3	obj/net/testoutput.asm	/^    err3:$/;"	l
err3	obj/user/badsegment.asm	/^    err3:$/;"	l
err3	obj/user/breakpoint.asm	/^    err3:$/;"	l
err3	obj/user/buggyhello.asm	/^    err3:$/;"	l
err3	obj/user/buggyhello2.asm	/^    err3:$/;"	l
err3	obj/user/cat.asm	/^    err3:$/;"	l
err3	obj/user/divzero.asm	/^    err3:$/;"	l
err3	obj/user/dumbfork.asm	/^    err3:$/;"	l
err3	obj/user/echo.asm	/^    err3:$/;"	l
err3	obj/user/echosrv.asm	/^    err3:$/;"	l
err3	obj/user/echotest.asm	/^    err3:$/;"	l
err3	obj/user/evilhello.asm	/^    err3:$/;"	l
err3	obj/user/fairness.asm	/^    err3:$/;"	l
err3	obj/user/faultalloc.asm	/^    err3:$/;"	l
err3	obj/user/faultallocbad.asm	/^    err3:$/;"	l
err3	obj/user/faultbadhandler.asm	/^    err3:$/;"	l
err3	obj/user/faultdie.asm	/^    err3:$/;"	l
err3	obj/user/faultevilhandler.asm	/^    err3:$/;"	l
err3	obj/user/faultnostack.asm	/^    err3:$/;"	l
err3	obj/user/faultread.asm	/^    err3:$/;"	l
err3	obj/user/faultreadkernel.asm	/^    err3:$/;"	l
err3	obj/user/faultregs.asm	/^    err3:$/;"	l
err3	obj/user/faultwrite.asm	/^    err3:$/;"	l
err3	obj/user/faultwritekernel.asm	/^    err3:$/;"	l
err3	obj/user/forktree.asm	/^    err3:$/;"	l
err3	obj/user/hello.asm	/^    err3:$/;"	l
err3	obj/user/httpd.asm	/^    err3:$/;"	l
err3	obj/user/icode.asm	/^    err3:$/;"	l
err3	obj/user/idle.asm	/^    err3:$/;"	l
err3	obj/user/init.asm	/^    err3:$/;"	l
err3	obj/user/ls.asm	/^    err3:$/;"	l
err3	obj/user/lsfd.asm	/^    err3:$/;"	l
err3	obj/user/num.asm	/^    err3:$/;"	l
err3	obj/user/pingpong.asm	/^    err3:$/;"	l
err3	obj/user/pingpongs.asm	/^    err3:$/;"	l
err3	obj/user/primes.asm	/^    err3:$/;"	l
err3	obj/user/primespipe.asm	/^    err3:$/;"	l
err3	obj/user/sendpage.asm	/^    err3:$/;"	l
err3	obj/user/sh.asm	/^    err3:$/;"	l
err3	obj/user/softint.asm	/^    err3:$/;"	l
err3	obj/user/spawnhello.asm	/^    err3:$/;"	l
err3	obj/user/spin.asm	/^    err3:$/;"	l
err3	obj/user/stresssched.asm	/^    err3:$/;"	l
err3	obj/user/testbss.asm	/^    err3:$/;"	l
err3	obj/user/testfdsharing.asm	/^    err3:$/;"	l
err3	obj/user/testfile.asm	/^    err3:$/;"	l
err3	obj/user/testkbd.asm	/^    err3:$/;"	l
err3	obj/user/testpipe.asm	/^    err3:$/;"	l
err3	obj/user/testpiperace.asm	/^    err3:$/;"	l
err3	obj/user/testpiperace2.asm	/^    err3:$/;"	l
err3	obj/user/testpteshare.asm	/^    err3:$/;"	l
err3	obj/user/testshell.asm	/^    err3:$/;"	l
err3	obj/user/testtime.asm	/^    err3:$/;"	l
err3	obj/user/yield.asm	/^    err3:$/;"	l
errCode	net/lwip/netif/ppp/ppp.c	/^  int  errCode;                 \/* Code indicating why interface is down. *\/$/;"	m	struct:PPPControl_s	file:
err_strerr	net/lwip/api/err.c	/^static const char *err_strerr[] = {$/;"	v	file:
err_t	net/lwip/include/lwip/err.h	/^ typedef s8_t err_t;$/;"	t
err_t	net/lwip/include/lwip/err.h	/^typedef LWIP_ERR_T err_t;$/;"	t
err_t	obj/net/ns.asm	/^err_t $/;"	l
err_t	obj/net/ns.asm	/^err_t$/;"	l
err_tcp	net/lwip/api/api_msg.c	/^err_tcp(void *arg, err_t err)$/;"	f	file:
err_to_errno	net/lwip/api/sockets.c	148;"	d	file:
err_to_errno_table	net/lwip/api/sockets.c	/^static const int err_to_errno_table[] = {$/;"	v	file:
errf	net/lwip/include/lwip/tcp.h	/^  void (* errf)(void *arg, err_t err);$/;"	m	struct:tcp_pcb
errf	obj/net/ns.asm	/^    errf = pcb->errf;$/;"	d
errf_arg	obj/net/ns.asm	/^    errf_arg = pcb->callback_arg;$/;"	d
erridxlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t erridxlen;$/;"	m	struct:snmp_resp_header_lengths
erridxlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t erridxlenlen;$/;"	m	struct:snmp_resp_header_lengths
errno	net/serv.c	/^int errno;$/;"	v
error	lib/fprintf.c	/^	int error;	\/\/ first error that occurred$/;"	m	struct:printbuf	file:
error	obj/user/icode.asm	/^error:$/;"	l
error	obj/user/init.asm	/^error:$/;"	l
error	obj/user/sh.asm	/^error:$/;"	l
error	obj/user/spawnhello.asm	/^error:$/;"	l
error	obj/user/testpteshare.asm	/^error:$/;"	l
error	obj/user/testshell.asm	/^error:$/;"	l
error_index	net/lwip/include/lwip/snmp_msg.h	/^  s32_t error_index;$/;"	m	struct:snmp_msg_pstat
error_messages	user/httpd.c	/^struct error_messages {$/;"	s	file:
error_status	net/lwip/include/lwip/snmp_msg.h	/^  s32_t error_status;$/;"	m	struct:snmp_msg_pstat
error_string	lib/printfmt.c	/^static const char * const error_string[MAXERROR] =$/;"	v	file:
errors	kern/e1000.h	/^    uint8_t errors;      \/* Descriptor Errors *\/$/;"	m	struct:e1000_rx_desc
errors	user/httpd.c	/^struct error_messages errors[] = {$/;"	v	typeref:struct:error_messages
errstatlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t errstatlen;$/;"	m	struct:snmp_resp_header_lengths
errstatlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t errstatlenlen;$/;"	m	struct:snmp_resp_header_lengths
errtfunc	net/lwip/include/lwip/netifapi.h	/^      err_t (* errtfunc)(struct netif *netif);$/;"	m	struct:netifapi_msg_msg::__anon22::__anon24
esp	user/faultregs.c	/^	uintptr_t esp;$/;"	m	struct:regs	file:
eth_addr	net/lwip/include/netif/etharp.h	/^struct eth_addr {$/;"	s
eth_addr_cmp	net/lwip/include/netif/etharp.h	165;"	d
eth_hdr	net/lwip/include/netif/etharp.h	/^struct eth_hdr {$/;"	s
ethaddr	net/lwip/jos/jif/jif.c	/^    struct eth_addr *ethaddr;$/;"	m	struct:jif	typeref:struct:jif::eth_addr	file:
ethaddr	net/lwip/netif/etharp.c	/^  struct eth_addr ethaddr;$/;"	m	struct:etharp_entry	typeref:struct:etharp_entry::eth_addr	file:
etharp	net/lwip/include/lwip/stats.h	/^  struct stats_proto etharp;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
etharp_arp_input	net/lwip/netif/etharp.c	/^etharp_arp_input(struct netif *netif, struct eth_addr *ethaddr, struct pbuf *p)$/;"	f
etharp_cached_entry	net/lwip/netif/etharp.c	/^static u8_t etharp_cached_entry;$/;"	v	file:
etharp_cached_entry	obj/net/ns.asm	/^        etharp_cached_entry = i;$/;"	d
etharp_cached_entry	obj/net/ns.asm	/^  etharp_cached_entry = i;$/;"	d
etharp_entry	net/lwip/netif/etharp.c	/^struct etharp_entry {$/;"	s	file:
etharp_find_addr	net/lwip/netif/etharp.c	/^etharp_find_addr(struct netif *netif, struct ip_addr *ipaddr,$/;"	f
etharp_hdr	net/lwip/include/netif/etharp.h	/^struct etharp_hdr {$/;"	s
etharp_init	net/lwip/include/netif/etharp.h	144;"	d
etharp_ip_input	net/lwip/netif/etharp.c	/^etharp_ip_input(struct netif *netif, struct pbuf *p)$/;"	f
etharp_output	net/lwip/netif/etharp.c	/^etharp_output(struct netif *netif, struct pbuf *q, struct ip_addr *ipaddr)$/;"	f
etharp_q_entry	net/lwip/include/netif/etharp.h	/^struct etharp_q_entry {$/;"	s
etharp_query	net/lwip/netif/etharp.c	/^etharp_query(struct netif *netif, struct ip_addr *ipaddr, struct pbuf *q)$/;"	f
etharp_raw	net/lwip/netif/etharp.c	/^etharp_raw(struct netif *netif, const struct eth_addr *ethsrc_addr,$/;"	f	file:
etharp_request	net/lwip/netif/etharp.c	/^etharp_request(struct netif *netif, struct ip_addr *ipaddr)$/;"	f
etharp_send_ip	net/lwip/netif/etharp.c	/^etharp_send_ip(struct netif *netif, struct pbuf *p, struct eth_addr *src, struct eth_addr *dst)$/;"	f	file:
etharp_state	net/lwip/netif/etharp.c	/^enum etharp_state {$/;"	g	file:
etharp_tmr	net/lwip/netif/etharp.c	/^etharp_tmr(void)$/;"	f
ethbroadcast	net/lwip/netif/etharp.c	/^const struct eth_addr ethbroadcast = {{0xff,0xff,0xff,0xff,0xff,0xff}};$/;"	v	typeref:struct:eth_addr
ethdst_hwaddr	obj/net/ns.asm	/^      ethdst_hwaddr = ((netif->autoip != NULL) && (netif->autoip->state != AUTOIP_STATE_OFF)) ? (u8_t*)(ethbroadcast.addr) : hdr->shwaddr.addr;$/;"	d
ethdst_hwaddr	obj/net/ns.asm	/^  ethdst_hwaddr = ((netif->autoip != NULL) && (netif->autoip->state != AUTOIP_STATE_OFF)) ? (u8_t*)(ethbroadcast.addr) : ethdst_addr->addr;$/;"	d
ethernet_input	net/lwip/netif/etharp.c	/^ethernet_input(struct pbuf *p, struct netif *netif)$/;"	f
ethhdr	obj/net/ns.asm	/^    ethhdr = p->payload;$/;"	d
ethif	net/lwip/netif/ppp/ppp.c	/^  struct netif *ethif;$/;"	m	struct:PPPControl_s	typeref:struct:PPPControl_s::netif	file:
ethip_hdr	net/lwip/include/netif/etharp.h	/^struct ethip_hdr {$/;"	s
ethzero	net/lwip/netif/etharp.c	/^const struct eth_addr ethzero = {{0,0,0,0,0,0}};$/;"	v	typeref:struct:eth_addr
event_callback	net/lwip/api/sockets.c	/^event_callback(struct netconn *conn, enum netconn_evt evt, u16_t len)$/;"	f	file:
exceptset	net/lwip/api/sockets.c	/^  fd_set *exceptset;$/;"	m	struct:lwip_select_cb	file:
exit	lib/exit.c	/^exit(void)$/;"	f
explicit_remote	net/lwip/netif/ppp/ppp.h	/^  u_int  explicit_remote   : 1;       \/* remote_name specified with remotename opt *\/$/;"	m	struct:ppp_settings
ext_accm	net/lwip/netif/ppp/ppp.h	/^typedef u_char  ext_accm[32];$/;"	t
ext_mib_node	net/lwip/include/lwip/snmp_msg.h	/^  struct mib_external_node *ext_mib_node;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::mib_external_node
ext_name_ptr	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_name_ptr ext_name_ptr;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_name_ptr
ext_object_def	net/lwip/include/lwip/snmp_msg.h	/^  struct obj_def ext_object_def;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::obj_def
ext_oid	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_obj_id ext_oid;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_obj_id
extcode	net/lwip/netif/ppp/fsm.h	/^  int  (*extcode)(fsm*, int, u_char, u_char*, int); \/* Called when unknown code received *\/$/;"	m	struct:fsm_callbacks
extern	obj/kern/kernel.asm	/^extern int color;$/;"	l
extern	obj/kern/kernel.asm	/^extern struct spinlock kernel_lock;$/;"	t
extern	obj/net/ns.asm	/^extern union Nsipc nsipcbuf;$/;"	l
extern	obj/net/testinput.asm	/^extern union Nsipc nsipcbuf;$/;"	l
extern	obj/net/testoutput.asm	/^extern union Nsipc nsipcbuf;$/;"	l
f	fs/fsformat.c	/^	struct File *f;$/;"	m	struct:Dir	typeref:struct:Dir::File	file:
f	net/lwip/include/lwip/tcpip.h	/^      void (*f)(void *ctx);$/;"	m	struct:tcpip_msg::__anon17::__anon19
f	obj/fs/fs.asm	/^		f = (struct File*) blk;$/;"	d
f	obj/fs/fs.asm	/^	f = &super->s_root;$/;"	d
f	obj/fs/fs.asm	/^	f = (struct File*) blk;$/;"	d
f	obj/user/cat.asm	/^			f = open(argv[i], O_RDONLY);$/;"	d
f	obj/user/num.asm	/^			f = open(argv[i], O_RDONLY);$/;"	d
f0100000	obj/kern/kernel.asm	/^f0100000 <_start+0xeffffff4>:$/;"	l
f0100000	obj/kern/kernel.asm	/^f0100000:	02 b0 ad 1b 00 00    	add    0x1bad(%eax),%dh$/;"	l
f0100006	obj/kern/kernel.asm	/^f0100006:	00 00                	add    %al,(%eax)$/;"	l
f0100008	obj/kern/kernel.asm	/^f0100008:	fe 4f 52             	decb   0x52(%edi)$/;"	l
f010000b	obj/kern/kernel.asm	/^f010000b:	e4 66                	in     $0x66,%al$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c <entry>:$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c:	66 c7 05 72 04 00 00 	movw   $0x1234,0x472$/;"	l
f0100013	obj/kern/kernel.asm	/^f0100013:	34 12 $/;"	l
f0100015	obj/kern/kernel.asm	/^f0100015:	b8 00 30 12 00       	mov    $0x123000,%eax$/;"	l
f010001a	obj/kern/kernel.asm	/^f010001a:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010001d	obj/kern/kernel.asm	/^f010001d:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0100020	obj/kern/kernel.asm	/^f0100020:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f0100025	obj/kern/kernel.asm	/^f0100025:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0100028	obj/kern/kernel.asm	/^f0100028:	b8 2f 00 10 f0       	mov    $0xf010002f,%eax$/;"	l
f010002d	obj/kern/kernel.asm	/^f010002d:	ff e0                	jmp    *%eax$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f <relocated>:$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0100034	obj/kern/kernel.asm	/^f0100034:	bc 00 30 12 f0       	mov    $0xf0123000,%esp$/;"	l
f0100039	obj/kern/kernel.asm	/^f0100039:	e8 6a 00 00 00       	call   f01000a8 <i386_init>$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e <spin>:$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e:	eb fe                	jmp    f010003e <spin>$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040 <_panic>:$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040:	55                   	push   %ebp$/;"	l
f0100041	obj/kern/kernel.asm	/^f0100041:	89 e5                	mov    %esp,%ebp$/;"	l
f0100043	obj/kern/kernel.asm	/^f0100043:	56                   	push   %esi$/;"	l
f0100044	obj/kern/kernel.asm	/^f0100044:	53                   	push   %ebx$/;"	l
f0100045	obj/kern/kernel.asm	/^f0100045:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0100048	obj/kern/kernel.asm	/^f0100048:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f010004b	obj/kern/kernel.asm	/^f010004b:	83 3d 8c 9e 2b f0 00 	cmpl   $0x0,0xf02b9e8c$/;"	l
f0100052	obj/kern/kernel.asm	/^f0100052:	75 46                	jne    f010009a <_panic+0x5a>$/;"	l
f0100054	obj/kern/kernel.asm	/^f0100054:	89 35 8c 9e 2b f0    	mov    %esi,0xf02b9e8c$/;"	l
f010005a	obj/kern/kernel.asm	/^f010005a:	fa                   	cli    $/;"	l
f010005b	obj/kern/kernel.asm	/^f010005b:	fc                   	cld    $/;"	l
f010005c	obj/kern/kernel.asm	/^f010005c:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f010005f	obj/kern/kernel.asm	/^f010005f:	e8 85 6b 00 00       	call   f0106be9 <cpunum>$/;"	l
f0100064	obj/kern/kernel.asm	/^f0100064:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0100067	obj/kern/kernel.asm	/^f0100067:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f010006b	obj/kern/kernel.asm	/^f010006b:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f010006e	obj/kern/kernel.asm	/^f010006e:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0100072	obj/kern/kernel.asm	/^f0100072:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100076	obj/kern/kernel.asm	/^f0100076:	c7 04 24 80 80 10 f0 	movl   $0xf0108080,(%esp)$/;"	l
f010007d	obj/kern/kernel.asm	/^f010007d:	e8 4a 3f 00 00       	call   f0103fcc <cprintf>$/;"	l
f0100082	obj/kern/kernel.asm	/^f0100082:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0100086	obj/kern/kernel.asm	/^f0100086:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0100089	obj/kern/kernel.asm	/^f0100089:	e8 0b 3f 00 00       	call   f0103f99 <vcprintf>$/;"	l
f010008e	obj/kern/kernel.asm	/^f010008e:	c7 04 24 fb 92 10 f0 	movl   $0xf01092fb,(%esp)$/;"	l
f0100095	obj/kern/kernel.asm	/^f0100095:	e8 32 3f 00 00       	call   f0103fcc <cprintf>$/;"	l
f010009a	obj/kern/kernel.asm	/^f010009a:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01000a1	obj/kern/kernel.asm	/^f01000a1:	e8 74 09 00 00       	call   f0100a1a <monitor>$/;"	l
f01000a6	obj/kern/kernel.asm	/^f01000a6:	eb f2                	jmp    f010009a <_panic+0x5a>$/;"	l
f01000a8	obj/kern/kernel.asm	/^f01000a8 <i386_init>:$/;"	l
f01000a8	obj/kern/kernel.asm	/^f01000a8:	55                   	push   %ebp$/;"	l
f01000a9	obj/kern/kernel.asm	/^f01000a9:	89 e5                	mov    %esp,%ebp$/;"	l
f01000ab	obj/kern/kernel.asm	/^f01000ab:	53                   	push   %ebx$/;"	l
f01000ac	obj/kern/kernel.asm	/^f01000ac:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01000af	obj/kern/kernel.asm	/^f01000af:	b8 40 b4 2f f0       	mov    $0xf02fb440,%eax$/;"	l
f01000b4	obj/kern/kernel.asm	/^f01000b4:	2d ea 8a 2b f0       	sub    $0xf02b8aea,%eax$/;"	l
f01000b9	obj/kern/kernel.asm	/^f01000b9:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01000bd	obj/kern/kernel.asm	/^f01000bd:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01000c4	obj/kern/kernel.asm	/^f01000c4:	00 $/;"	l
f01000c5	obj/kern/kernel.asm	/^f01000c5:	c7 04 24 ea 8a 2b f0 	movl   $0xf02b8aea,(%esp)$/;"	l
f01000cc	obj/kern/kernel.asm	/^f01000cc:	e8 c6 64 00 00       	call   f0106597 <memset>$/;"	l
f01000d1	obj/kern/kernel.asm	/^f01000d1:	e8 d2 05 00 00       	call   f01006a8 <cons_init>$/;"	l
f01000d6	obj/kern/kernel.asm	/^f01000d6:	c7 04 24 ec 80 10 f0 	movl   $0xf01080ec,(%esp)$/;"	l
f01000dd	obj/kern/kernel.asm	/^f01000dd:	e8 ea 3e 00 00       	call   f0103fcc <cprintf>$/;"	l
f01000e2	obj/kern/kernel.asm	/^f01000e2:	c7 44 24 04 ac 1a 00 	movl   $0x1aac,0x4(%esp)$/;"	l
f01000e9	obj/kern/kernel.asm	/^f01000e9:	00 $/;"	l
f01000ea	obj/kern/kernel.asm	/^f01000ea:	c7 04 24 01 81 10 f0 	movl   $0xf0108101,(%esp)$/;"	l
f01000f1	obj/kern/kernel.asm	/^f01000f1:	e8 d6 3e 00 00       	call   f0103fcc <cprintf>$/;"	l
f01000f6	obj/kern/kernel.asm	/^f01000f6:	e8 68 14 00 00       	call   f0101563 <mem_init>$/;"	l
f01000fb	obj/kern/kernel.asm	/^f01000fb:	e8 ea 36 00 00       	call   f01037ea <env_init>$/;"	l
f0100100	obj/kern/kernel.asm	/^f0100100:	e8 bb 3f 00 00       	call   f01040c0 <trap_init>$/;"	l
f0100105	obj/kern/kernel.asm	/^f0100105:	e8 d0 67 00 00       	call   f01068da <mp_init>$/;"	l
f010010a	obj/kern/kernel.asm	/^f010010a:	e8 f5 6a 00 00       	call   f0106c04 <lapic_init>$/;"	l
f010010f	obj/kern/kernel.asm	/^f010010f:	90                   	nop$/;"	l
f0100110	obj/kern/kernel.asm	/^f0100110:	e8 d4 3d 00 00       	call   f0103ee9 <pic_init>$/;"	l
f0100115	obj/kern/kernel.asm	/^f0100115:	e8 69 7c 00 00       	call   f0107d83 <time_init>$/;"	l
f010011a	obj/kern/kernel.asm	/^f010011a:	e8 36 7c 00 00       	call   f0107d55 <pci_init>$/;"	l
f010011f	obj/kern/kernel.asm	/^f010011f:	c7 04 24 c0 53 12 f0 	movl   $0xf01253c0,(%esp)$/;"	l
f0100126	obj/kern/kernel.asm	/^f0100126:	e8 3c 6d 00 00       	call   f0106e67 <spin_lock>$/;"	l
f010012b	obj/kern/kernel.asm	/^f010012b:	83 3d 94 9e 2b f0 07 	cmpl   $0x7,0xf02b9e94$/;"	l
f0100132	obj/kern/kernel.asm	/^f0100132:	77 24                	ja     f0100158 <i386_init+0xb0>$/;"	l
f0100134	obj/kern/kernel.asm	/^f0100134:	c7 44 24 0c 00 70 00 	movl   $0x7000,0xc(%esp)$/;"	l
f010013b	obj/kern/kernel.asm	/^f010013b:	00 $/;"	l
f010013c	obj/kern/kernel.asm	/^f010013c:	c7 44 24 08 a4 80 10 	movl   $0xf01080a4,0x8(%esp)$/;"	l
f0100143	obj/kern/kernel.asm	/^f0100143:	f0 $/;"	l
f0100144	obj/kern/kernel.asm	/^f0100144:	c7 44 24 04 65 00 00 	movl   $0x65,0x4(%esp)$/;"	l
f010014b	obj/kern/kernel.asm	/^f010014b:	00 $/;"	l
f010014c	obj/kern/kernel.asm	/^f010014c:	c7 04 24 1c 81 10 f0 	movl   $0xf010811c,(%esp)$/;"	l
f0100153	obj/kern/kernel.asm	/^f0100153:	e8 e8 fe ff ff       	call   f0100040 <_panic>$/;"	l
f0100158	obj/kern/kernel.asm	/^f0100158:	b8 12 68 10 f0       	mov    $0xf0106812,%eax$/;"	l
f010015d	obj/kern/kernel.asm	/^f010015d:	2d 98 67 10 f0       	sub    $0xf0106798,%eax$/;"	l
f0100162	obj/kern/kernel.asm	/^f0100162:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100166	obj/kern/kernel.asm	/^f0100166:	c7 44 24 04 98 67 10 	movl   $0xf0106798,0x4(%esp)$/;"	l
f010016d	obj/kern/kernel.asm	/^f010016d:	f0 $/;"	l
f010016e	obj/kern/kernel.asm	/^f010016e:	c7 04 24 00 70 00 f0 	movl   $0xf0007000,(%esp)$/;"	l
f0100175	obj/kern/kernel.asm	/^f0100175:	e8 6a 64 00 00       	call   f01065e4 <memmove>$/;"	l
f010017a	obj/kern/kernel.asm	/^f010017a:	bb 20 a0 2b f0       	mov    $0xf02ba020,%ebx$/;"	l
f010017f	obj/kern/kernel.asm	/^f010017f:	eb 4d                	jmp    f01001ce <i386_init+0x126>$/;"	l
f0100181	obj/kern/kernel.asm	/^f0100181:	e8 63 6a 00 00       	call   f0106be9 <cpunum>$/;"	l
f0100186	obj/kern/kernel.asm	/^f0100186:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0100189	obj/kern/kernel.asm	/^f0100189:	05 20 a0 2b f0       	add    $0xf02ba020,%eax$/;"	l
f010018e	obj/kern/kernel.asm	/^f010018e:	39 c3                	cmp    %eax,%ebx$/;"	l
f0100190	obj/kern/kernel.asm	/^f0100190:	74 39                	je     f01001cb <i386_init+0x123>$/;"	l
f0100192	obj/kern/kernel.asm	/^f0100192:	89 d8                	mov    %ebx,%eax$/;"	l
f0100194	obj/kern/kernel.asm	/^f0100194:	2d 20 a0 2b f0       	sub    $0xf02ba020,%eax$/;"	l
f0100199	obj/kern/kernel.asm	/^f0100199:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f010019c	obj/kern/kernel.asm	/^f010019c:	69 c0 35 c2 72 4f    	imul   $0x4f72c235,%eax,%eax$/;"	l
f01001a2	obj/kern/kernel.asm	/^f01001a2:	c1 e0 0f             	shl    $0xf,%eax$/;"	l
f01001a5	obj/kern/kernel.asm	/^f01001a5:	8d 80 00 30 2c f0    	lea    -0xfd3d000(%eax),%eax$/;"	l
f01001ab	obj/kern/kernel.asm	/^f01001ab:	a3 90 9e 2b f0       	mov    %eax,0xf02b9e90$/;"	l
f01001b0	obj/kern/kernel.asm	/^f01001b0:	c7 44 24 04 00 70 00 	movl   $0x7000,0x4(%esp)$/;"	l
f01001b7	obj/kern/kernel.asm	/^f01001b7:	00 $/;"	l
f01001b8	obj/kern/kernel.asm	/^f01001b8:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f01001bb	obj/kern/kernel.asm	/^f01001bb:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01001be	obj/kern/kernel.asm	/^f01001be:	e8 91 6b 00 00       	call   f0106d54 <lapic_startap>$/;"	l
f01001c3	obj/kern/kernel.asm	/^f01001c3:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f01001c6	obj/kern/kernel.asm	/^f01001c6:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f01001c9	obj/kern/kernel.asm	/^f01001c9:	75 f8                	jne    f01001c3 <i386_init+0x11b>$/;"	l
f01001cb	obj/kern/kernel.asm	/^f01001cb:	83 c3 74             	add    $0x74,%ebx$/;"	l
f01001ce	obj/kern/kernel.asm	/^f01001ce:	6b 05 c4 a3 2b f0 74 	imul   $0x74,0xf02ba3c4,%eax$/;"	l
f01001d5	obj/kern/kernel.asm	/^f01001d5:	05 20 a0 2b f0       	add    $0xf02ba020,%eax$/;"	l
f01001da	obj/kern/kernel.asm	/^f01001da:	39 c3                	cmp    %eax,%ebx$/;"	l
f01001dc	obj/kern/kernel.asm	/^f01001dc:	72 a3                	jb     f0100181 <i386_init+0xd9>$/;"	l
f01001de	obj/kern/kernel.asm	/^f01001de:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
f01001e5	obj/kern/kernel.asm	/^f01001e5:	00 $/;"	l
f01001e6	obj/kern/kernel.asm	/^f01001e6:	c7 04 24 aa f1 1d f0 	movl   $0xf01df1aa,(%esp)$/;"	l
f01001ed	obj/kern/kernel.asm	/^f01001ed:	e8 d8 37 00 00       	call   f01039ca <env_create>$/;"	l
f01001f2	obj/kern/kernel.asm	/^f01001f2:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01001f9	obj/kern/kernel.asm	/^f01001f9:	00 $/;"	l
f01001fa	obj/kern/kernel.asm	/^f01001fa:	c7 04 24 2f 5a 22 f0 	movl   $0xf0225a2f,(%esp)$/;"	l
f0100201	obj/kern/kernel.asm	/^f0100201:	e8 c4 37 00 00       	call   f01039ca <env_create>$/;"	l
f0100206	obj/kern/kernel.asm	/^f0100206:	e8 41 04 00 00       	call   f010064c <kbd_intr>$/;"	l
f010020b	obj/kern/kernel.asm	/^f010020b:	e8 cb 4c 00 00       	call   f0104edb <sched_yield>$/;"	l
f0100210	obj/kern/kernel.asm	/^f0100210 <mp_main>:$/;"	l
f0100210	obj/kern/kernel.asm	/^f0100210:	55                   	push   %ebp$/;"	l
f0100211	obj/kern/kernel.asm	/^f0100211:	89 e5                	mov    %esp,%ebp$/;"	l
f0100213	obj/kern/kernel.asm	/^f0100213:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100216	obj/kern/kernel.asm	/^f0100216:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f010021b	obj/kern/kernel.asm	/^f010021b:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0100220	obj/kern/kernel.asm	/^f0100220:	77 20                	ja     f0100242 <mp_main+0x32>$/;"	l
f0100222	obj/kern/kernel.asm	/^f0100222:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100226	obj/kern/kernel.asm	/^f0100226:	c7 44 24 08 c8 80 10 	movl   $0xf01080c8,0x8(%esp)$/;"	l
f010022d	obj/kern/kernel.asm	/^f010022d:	f0 $/;"	l
f010022e	obj/kern/kernel.asm	/^f010022e:	c7 44 24 04 7c 00 00 	movl   $0x7c,0x4(%esp)$/;"	l
f0100235	obj/kern/kernel.asm	/^f0100235:	00 $/;"	l
f0100236	obj/kern/kernel.asm	/^f0100236:	c7 04 24 1c 81 10 f0 	movl   $0xf010811c,(%esp)$/;"	l
f010023d	obj/kern/kernel.asm	/^f010023d:	e8 fe fd ff ff       	call   f0100040 <_panic>$/;"	l
f0100242	obj/kern/kernel.asm	/^f0100242:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0100247	obj/kern/kernel.asm	/^f0100247:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010024a	obj/kern/kernel.asm	/^f010024a:	e8 9a 69 00 00       	call   f0106be9 <cpunum>$/;"	l
f010024f	obj/kern/kernel.asm	/^f010024f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100253	obj/kern/kernel.asm	/^f0100253:	c7 04 24 28 81 10 f0 	movl   $0xf0108128,(%esp)$/;"	l
f010025a	obj/kern/kernel.asm	/^f010025a:	e8 6d 3d 00 00       	call   f0103fcc <cprintf>$/;"	l
f010025f	obj/kern/kernel.asm	/^f010025f:	e8 a0 69 00 00       	call   f0106c04 <lapic_init>$/;"	l
f0100264	obj/kern/kernel.asm	/^f0100264:	e8 57 35 00 00       	call   f01037c0 <env_init_percpu>$/;"	l
f0100269	obj/kern/kernel.asm	/^f0100269:	e8 82 3d 00 00       	call   f0103ff0 <trap_init_percpu>$/;"	l
f010026e	obj/kern/kernel.asm	/^f010026e:	66 90                	xchg   %ax,%ax$/;"	l
f0100270	obj/kern/kernel.asm	/^f0100270:	e8 74 69 00 00       	call   f0106be9 <cpunum>$/;"	l
f0100275	obj/kern/kernel.asm	/^f0100275:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0100278	obj/kern/kernel.asm	/^f0100278:	81 c2 20 a0 2b f0    	add    $0xf02ba020,%edx$/;"	l
f010027e	obj/kern/kernel.asm	/^f010027e:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100283	obj/kern/kernel.asm	/^f0100283:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f0100287	obj/kern/kernel.asm	/^f0100287:	c7 04 24 c0 53 12 f0 	movl   $0xf01253c0,(%esp)$/;"	l
f010028e	obj/kern/kernel.asm	/^f010028e:	e8 d4 6b 00 00       	call   f0106e67 <spin_lock>$/;"	l
f0100293	obj/kern/kernel.asm	/^f0100293:	e8 43 4c 00 00       	call   f0104edb <sched_yield>$/;"	l
f0100298	obj/kern/kernel.asm	/^f0100298 <_warn>:$/;"	l
f0100298	obj/kern/kernel.asm	/^f0100298:	55                   	push   %ebp$/;"	l
f0100299	obj/kern/kernel.asm	/^f0100299:	89 e5                	mov    %esp,%ebp$/;"	l
f010029b	obj/kern/kernel.asm	/^f010029b:	53                   	push   %ebx$/;"	l
f010029c	obj/kern/kernel.asm	/^f010029c:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010029f	obj/kern/kernel.asm	/^f010029f:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f01002a2	obj/kern/kernel.asm	/^f01002a2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01002a5	obj/kern/kernel.asm	/^f01002a5:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01002a9	obj/kern/kernel.asm	/^f01002a9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01002ac	obj/kern/kernel.asm	/^f01002ac:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01002b0	obj/kern/kernel.asm	/^f01002b0:	c7 04 24 3e 81 10 f0 	movl   $0xf010813e,(%esp)$/;"	l
f01002b7	obj/kern/kernel.asm	/^f01002b7:	e8 10 3d 00 00       	call   f0103fcc <cprintf>$/;"	l
f01002bc	obj/kern/kernel.asm	/^f01002bc:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01002c0	obj/kern/kernel.asm	/^f01002c0:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01002c3	obj/kern/kernel.asm	/^f01002c3:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01002c6	obj/kern/kernel.asm	/^f01002c6:	e8 ce 3c 00 00       	call   f0103f99 <vcprintf>$/;"	l
f01002cb	obj/kern/kernel.asm	/^f01002cb:	c7 04 24 fb 92 10 f0 	movl   $0xf01092fb,(%esp)$/;"	l
f01002d2	obj/kern/kernel.asm	/^f01002d2:	e8 f5 3c 00 00       	call   f0103fcc <cprintf>$/;"	l
f01002d7	obj/kern/kernel.asm	/^f01002d7:	83 c4 14             	add    $0x14,%esp$/;"	l
f01002da	obj/kern/kernel.asm	/^f01002da:	5b                   	pop    %ebx$/;"	l
f01002db	obj/kern/kernel.asm	/^f01002db:	5d                   	pop    %ebp$/;"	l
f01002dc	obj/kern/kernel.asm	/^f01002dc:	c3                   	ret    $/;"	l
f01002dd	obj/kern/kernel.asm	/^f01002dd:	66 90                	xchg   %ax,%ax$/;"	l
f01002df	obj/kern/kernel.asm	/^f01002df:	90                   	nop$/;"	l
f01002e0	obj/kern/kernel.asm	/^f01002e0 <serial_proc_data>:$/;"	l
f01002e0	obj/kern/kernel.asm	/^f01002e0:	55                   	push   %ebp$/;"	l
f01002e1	obj/kern/kernel.asm	/^f01002e1:	89 e5                	mov    %esp,%ebp$/;"	l
f01002e3	obj/kern/kernel.asm	/^f01002e3:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f01002e8	obj/kern/kernel.asm	/^f01002e8:	ec                   	in     (%dx),%al$/;"	l
f01002e9	obj/kern/kernel.asm	/^f01002e9:	a8 01                	test   $0x1,%al$/;"	l
f01002eb	obj/kern/kernel.asm	/^f01002eb:	74 08                	je     f01002f5 <serial_proc_data+0x15>$/;"	l
f01002ed	obj/kern/kernel.asm	/^f01002ed:	b2 f8                	mov    $0xf8,%dl$/;"	l
f01002ef	obj/kern/kernel.asm	/^f01002ef:	ec                   	in     (%dx),%al$/;"	l
f01002f0	obj/kern/kernel.asm	/^f01002f0:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01002f3	obj/kern/kernel.asm	/^f01002f3:	eb 05                	jmp    f01002fa <serial_proc_data+0x1a>$/;"	l
f01002f5	obj/kern/kernel.asm	/^f01002f5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01002fa	obj/kern/kernel.asm	/^f01002fa:	5d                   	pop    %ebp$/;"	l
f01002fb	obj/kern/kernel.asm	/^f01002fb:	c3                   	ret    $/;"	l
f01002fc	obj/kern/kernel.asm	/^f01002fc <cons_intr>:$/;"	l
f01002fc	obj/kern/kernel.asm	/^f01002fc:	55                   	push   %ebp$/;"	l
f01002fd	obj/kern/kernel.asm	/^f01002fd:	89 e5                	mov    %esp,%ebp$/;"	l
f01002ff	obj/kern/kernel.asm	/^f01002ff:	53                   	push   %ebx$/;"	l
f0100300	obj/kern/kernel.asm	/^f0100300:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100303	obj/kern/kernel.asm	/^f0100303:	89 c3                	mov    %eax,%ebx$/;"	l
f0100305	obj/kern/kernel.asm	/^f0100305:	eb 2a                	jmp    f0100331 <cons_intr+0x35>$/;"	l
f0100307	obj/kern/kernel.asm	/^f0100307:	85 d2                	test   %edx,%edx$/;"	l
f0100309	obj/kern/kernel.asm	/^f0100309:	74 26                	je     f0100331 <cons_intr+0x35>$/;"	l
f010030b	obj/kern/kernel.asm	/^f010030b:	a1 24 92 2b f0       	mov    0xf02b9224,%eax$/;"	l
f0100310	obj/kern/kernel.asm	/^f0100310:	8d 48 01             	lea    0x1(%eax),%ecx$/;"	l
f0100313	obj/kern/kernel.asm	/^f0100313:	89 0d 24 92 2b f0    	mov    %ecx,0xf02b9224$/;"	l
f0100319	obj/kern/kernel.asm	/^f0100319:	88 90 20 90 2b f0    	mov    %dl,-0xfd46fe0(%eax)$/;"	l
f010031f	obj/kern/kernel.asm	/^f010031f:	81 f9 00 02 00 00    	cmp    $0x200,%ecx$/;"	l
f0100325	obj/kern/kernel.asm	/^f0100325:	75 0a                	jne    f0100331 <cons_intr+0x35>$/;"	l
f0100327	obj/kern/kernel.asm	/^f0100327:	c7 05 24 92 2b f0 00 	movl   $0x0,0xf02b9224$/;"	l
f010032e	obj/kern/kernel.asm	/^f010032e:	00 00 00 $/;"	l
f0100331	obj/kern/kernel.asm	/^f0100331:	ff d3                	call   *%ebx$/;"	l
f0100333	obj/kern/kernel.asm	/^f0100333:	89 c2                	mov    %eax,%edx$/;"	l
f0100335	obj/kern/kernel.asm	/^f0100335:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0100338	obj/kern/kernel.asm	/^f0100338:	75 cd                	jne    f0100307 <cons_intr+0xb>$/;"	l
f010033a	obj/kern/kernel.asm	/^f010033a:	83 c4 04             	add    $0x4,%esp$/;"	l
f010033d	obj/kern/kernel.asm	/^f010033d:	5b                   	pop    %ebx$/;"	l
f010033e	obj/kern/kernel.asm	/^f010033e:	5d                   	pop    %ebp$/;"	l
f010033f	obj/kern/kernel.asm	/^f010033f:	c3                   	ret    $/;"	l
f0100340	obj/kern/kernel.asm	/^f0100340 <kbd_proc_data>:$/;"	l
f0100340	obj/kern/kernel.asm	/^f0100340:	ba 64 00 00 00       	mov    $0x64,%edx$/;"	l
f0100345	obj/kern/kernel.asm	/^f0100345:	ec                   	in     (%dx),%al$/;"	l
f0100346	obj/kern/kernel.asm	/^f0100346:	a8 01                	test   $0x1,%al$/;"	l
f0100348	obj/kern/kernel.asm	/^f0100348:	0f 84 ef 00 00 00    	je     f010043d <kbd_proc_data+0xfd>$/;"	l
f010034e	obj/kern/kernel.asm	/^f010034e:	b2 60                	mov    $0x60,%dl$/;"	l
f0100350	obj/kern/kernel.asm	/^f0100350:	ec                   	in     (%dx),%al$/;"	l
f0100351	obj/kern/kernel.asm	/^f0100351:	89 c2                	mov    %eax,%edx$/;"	l
f0100353	obj/kern/kernel.asm	/^f0100353:	3c e0                	cmp    $0xe0,%al$/;"	l
f0100355	obj/kern/kernel.asm	/^f0100355:	75 0d                	jne    f0100364 <kbd_proc_data+0x24>$/;"	l
f0100357	obj/kern/kernel.asm	/^f0100357:	83 0d 00 90 2b f0 40 	orl    $0x40,0xf02b9000$/;"	l
f010035e	obj/kern/kernel.asm	/^f010035e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100363	obj/kern/kernel.asm	/^f0100363:	c3                   	ret    $/;"	l
f0100364	obj/kern/kernel.asm	/^f0100364:	55                   	push   %ebp$/;"	l
f0100365	obj/kern/kernel.asm	/^f0100365:	89 e5                	mov    %esp,%ebp$/;"	l
f0100367	obj/kern/kernel.asm	/^f0100367:	53                   	push   %ebx$/;"	l
f0100368	obj/kern/kernel.asm	/^f0100368:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010036b	obj/kern/kernel.asm	/^f010036b:	84 c0                	test   %al,%al$/;"	l
f010036d	obj/kern/kernel.asm	/^f010036d:	79 37                	jns    f01003a6 <kbd_proc_data+0x66>$/;"	l
f010036f	obj/kern/kernel.asm	/^f010036f:	8b 0d 00 90 2b f0    	mov    0xf02b9000,%ecx$/;"	l
f0100375	obj/kern/kernel.asm	/^f0100375:	89 cb                	mov    %ecx,%ebx$/;"	l
f0100377	obj/kern/kernel.asm	/^f0100377:	83 e3 40             	and    $0x40,%ebx$/;"	l
f010037a	obj/kern/kernel.asm	/^f010037a:	83 e0 7f             	and    $0x7f,%eax$/;"	l
f010037d	obj/kern/kernel.asm	/^f010037d:	85 db                	test   %ebx,%ebx$/;"	l
f010037f	obj/kern/kernel.asm	/^f010037f:	0f 44 d0             	cmove  %eax,%edx$/;"	l
f0100382	obj/kern/kernel.asm	/^f0100382:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0100385	obj/kern/kernel.asm	/^f0100385:	0f b6 82 c0 82 10 f0 	movzbl -0xfef7d40(%edx),%eax$/;"	l
f010038c	obj/kern/kernel.asm	/^f010038c:	83 c8 40             	or     $0x40,%eax$/;"	l
f010038f	obj/kern/kernel.asm	/^f010038f:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100392	obj/kern/kernel.asm	/^f0100392:	f7 d0                	not    %eax$/;"	l
f0100394	obj/kern/kernel.asm	/^f0100394:	21 c1                	and    %eax,%ecx$/;"	l
f0100396	obj/kern/kernel.asm	/^f0100396:	89 0d 00 90 2b f0    	mov    %ecx,0xf02b9000$/;"	l
f010039c	obj/kern/kernel.asm	/^f010039c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01003a1	obj/kern/kernel.asm	/^f01003a1:	e9 9d 00 00 00       	jmp    f0100443 <kbd_proc_data+0x103>$/;"	l
f01003a6	obj/kern/kernel.asm	/^f01003a6:	8b 0d 00 90 2b f0    	mov    0xf02b9000,%ecx$/;"	l
f01003ac	obj/kern/kernel.asm	/^f01003ac:	f6 c1 40             	test   $0x40,%cl$/;"	l
f01003af	obj/kern/kernel.asm	/^f01003af:	74 0e                	je     f01003bf <kbd_proc_data+0x7f>$/;"	l
f01003b1	obj/kern/kernel.asm	/^f01003b1:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f01003b4	obj/kern/kernel.asm	/^f01003b4:	89 c2                	mov    %eax,%edx$/;"	l
f01003b6	obj/kern/kernel.asm	/^f01003b6:	83 e1 bf             	and    $0xffffffbf,%ecx$/;"	l
f01003b9	obj/kern/kernel.asm	/^f01003b9:	89 0d 00 90 2b f0    	mov    %ecx,0xf02b9000$/;"	l
f01003bf	obj/kern/kernel.asm	/^f01003bf:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f01003c2	obj/kern/kernel.asm	/^f01003c2:	0f b6 82 c0 82 10 f0 	movzbl -0xfef7d40(%edx),%eax$/;"	l
f01003c9	obj/kern/kernel.asm	/^f01003c9:	0b 05 00 90 2b f0    	or     0xf02b9000,%eax$/;"	l
f01003cf	obj/kern/kernel.asm	/^f01003cf:	0f b6 8a c0 81 10 f0 	movzbl -0xfef7e40(%edx),%ecx$/;"	l
f01003d6	obj/kern/kernel.asm	/^f01003d6:	31 c8                	xor    %ecx,%eax$/;"	l
f01003d8	obj/kern/kernel.asm	/^f01003d8:	a3 00 90 2b f0       	mov    %eax,0xf02b9000$/;"	l
f01003dd	obj/kern/kernel.asm	/^f01003dd:	89 c1                	mov    %eax,%ecx$/;"	l
f01003df	obj/kern/kernel.asm	/^f01003df:	83 e1 03             	and    $0x3,%ecx$/;"	l
f01003e2	obj/kern/kernel.asm	/^f01003e2:	8b 0c 8d a0 81 10 f0 	mov    -0xfef7e60(,%ecx,4),%ecx$/;"	l
f01003e9	obj/kern/kernel.asm	/^f01003e9:	0f b6 14 11          	movzbl (%ecx,%edx,1),%edx$/;"	l
f01003ed	obj/kern/kernel.asm	/^f01003ed:	0f b6 da             	movzbl %dl,%ebx$/;"	l
f01003f0	obj/kern/kernel.asm	/^f01003f0:	a8 08                	test   $0x8,%al$/;"	l
f01003f2	obj/kern/kernel.asm	/^f01003f2:	74 1b                	je     f010040f <kbd_proc_data+0xcf>$/;"	l
f01003f4	obj/kern/kernel.asm	/^f01003f4:	89 da                	mov    %ebx,%edx$/;"	l
f01003f6	obj/kern/kernel.asm	/^f01003f6:	8d 4b 9f             	lea    -0x61(%ebx),%ecx$/;"	l
f01003f9	obj/kern/kernel.asm	/^f01003f9:	83 f9 19             	cmp    $0x19,%ecx$/;"	l
f01003fc	obj/kern/kernel.asm	/^f01003fc:	77 05                	ja     f0100403 <kbd_proc_data+0xc3>$/;"	l
f01003fe	obj/kern/kernel.asm	/^f01003fe:	83 eb 20             	sub    $0x20,%ebx$/;"	l
f0100401	obj/kern/kernel.asm	/^f0100401:	eb 0c                	jmp    f010040f <kbd_proc_data+0xcf>$/;"	l
f0100403	obj/kern/kernel.asm	/^f0100403:	83 ea 41             	sub    $0x41,%edx$/;"	l
f0100406	obj/kern/kernel.asm	/^f0100406:	8d 4b 20             	lea    0x20(%ebx),%ecx$/;"	l
f0100409	obj/kern/kernel.asm	/^f0100409:	83 fa 19             	cmp    $0x19,%edx$/;"	l
f010040c	obj/kern/kernel.asm	/^f010040c:	0f 46 d9             	cmovbe %ecx,%ebx$/;"	l
f010040f	obj/kern/kernel.asm	/^f010040f:	f7 d0                	not    %eax$/;"	l
f0100411	obj/kern/kernel.asm	/^f0100411:	89 c2                	mov    %eax,%edx$/;"	l
f0100413	obj/kern/kernel.asm	/^f0100413:	89 d8                	mov    %ebx,%eax$/;"	l
f0100415	obj/kern/kernel.asm	/^f0100415:	f6 c2 06             	test   $0x6,%dl$/;"	l
f0100418	obj/kern/kernel.asm	/^f0100418:	75 29                	jne    f0100443 <kbd_proc_data+0x103>$/;"	l
f010041a	obj/kern/kernel.asm	/^f010041a:	81 fb e9 00 00 00    	cmp    $0xe9,%ebx$/;"	l
f0100420	obj/kern/kernel.asm	/^f0100420:	75 21                	jne    f0100443 <kbd_proc_data+0x103>$/;"	l
f0100422	obj/kern/kernel.asm	/^f0100422:	c7 04 24 58 81 10 f0 	movl   $0xf0108158,(%esp)$/;"	l
f0100429	obj/kern/kernel.asm	/^f0100429:	e8 9e 3b 00 00       	call   f0103fcc <cprintf>$/;"	l
f010042e	obj/kern/kernel.asm	/^f010042e:	ba 92 00 00 00       	mov    $0x92,%edx$/;"	l
f0100433	obj/kern/kernel.asm	/^f0100433:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f0100438	obj/kern/kernel.asm	/^f0100438:	ee                   	out    %al,(%dx)$/;"	l
f0100439	obj/kern/kernel.asm	/^f0100439:	89 d8                	mov    %ebx,%eax$/;"	l
f010043b	obj/kern/kernel.asm	/^f010043b:	eb 06                	jmp    f0100443 <kbd_proc_data+0x103>$/;"	l
f010043d	obj/kern/kernel.asm	/^f010043d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100442	obj/kern/kernel.asm	/^f0100442:	c3                   	ret    $/;"	l
f0100443	obj/kern/kernel.asm	/^f0100443:	83 c4 14             	add    $0x14,%esp$/;"	l
f0100446	obj/kern/kernel.asm	/^f0100446:	5b                   	pop    %ebx$/;"	l
f0100447	obj/kern/kernel.asm	/^f0100447:	5d                   	pop    %ebp$/;"	l
f0100448	obj/kern/kernel.asm	/^f0100448:	c3                   	ret    $/;"	l
f0100449	obj/kern/kernel.asm	/^f0100449 <cons_putc>:$/;"	l
f0100449	obj/kern/kernel.asm	/^f0100449:	55                   	push   %ebp$/;"	l
f010044a	obj/kern/kernel.asm	/^f010044a:	89 e5                	mov    %esp,%ebp$/;"	l
f010044c	obj/kern/kernel.asm	/^f010044c:	57                   	push   %edi$/;"	l
f010044d	obj/kern/kernel.asm	/^f010044d:	56                   	push   %esi$/;"	l
f010044e	obj/kern/kernel.asm	/^f010044e:	53                   	push   %ebx$/;"	l
f010044f	obj/kern/kernel.asm	/^f010044f:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0100452	obj/kern/kernel.asm	/^f0100452:	89 c7                	mov    %eax,%edi$/;"	l
f0100454	obj/kern/kernel.asm	/^f0100454:	bb 01 32 00 00       	mov    $0x3201,%ebx$/;"	l
f0100459	obj/kern/kernel.asm	/^f0100459:	be fd 03 00 00       	mov    $0x3fd,%esi$/;"	l
f010045e	obj/kern/kernel.asm	/^f010045e:	b9 84 00 00 00       	mov    $0x84,%ecx$/;"	l
f0100463	obj/kern/kernel.asm	/^f0100463:	eb 06                	jmp    f010046b <cons_putc+0x22>$/;"	l
f0100465	obj/kern/kernel.asm	/^f0100465:	89 ca                	mov    %ecx,%edx$/;"	l
f0100467	obj/kern/kernel.asm	/^f0100467:	ec                   	in     (%dx),%al$/;"	l
f0100468	obj/kern/kernel.asm	/^f0100468:	ec                   	in     (%dx),%al$/;"	l
f0100469	obj/kern/kernel.asm	/^f0100469:	ec                   	in     (%dx),%al$/;"	l
f010046a	obj/kern/kernel.asm	/^f010046a:	ec                   	in     (%dx),%al$/;"	l
f010046b	obj/kern/kernel.asm	/^f010046b:	89 f2                	mov    %esi,%edx$/;"	l
f010046d	obj/kern/kernel.asm	/^f010046d:	ec                   	in     (%dx),%al$/;"	l
f010046e	obj/kern/kernel.asm	/^f010046e:	a8 20                	test   $0x20,%al$/;"	l
f0100470	obj/kern/kernel.asm	/^f0100470:	75 05                	jne    f0100477 <cons_putc+0x2e>$/;"	l
f0100472	obj/kern/kernel.asm	/^f0100472:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0100475	obj/kern/kernel.asm	/^f0100475:	75 ee                	jne    f0100465 <cons_putc+0x1c>$/;"	l
f0100477	obj/kern/kernel.asm	/^f0100477:	89 f8                	mov    %edi,%eax$/;"	l
f0100479	obj/kern/kernel.asm	/^f0100479:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010047c	obj/kern/kernel.asm	/^f010047c:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f010047f	obj/kern/kernel.asm	/^f010047f:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f0100484	obj/kern/kernel.asm	/^f0100484:	ee                   	out    %al,(%dx)$/;"	l
f0100485	obj/kern/kernel.asm	/^f0100485:	bb 01 32 00 00       	mov    $0x3201,%ebx$/;"	l
f010048a	obj/kern/kernel.asm	/^f010048a:	be 79 03 00 00       	mov    $0x379,%esi$/;"	l
f010048f	obj/kern/kernel.asm	/^f010048f:	b9 84 00 00 00       	mov    $0x84,%ecx$/;"	l
f0100494	obj/kern/kernel.asm	/^f0100494:	eb 06                	jmp    f010049c <cons_putc+0x53>$/;"	l
f0100496	obj/kern/kernel.asm	/^f0100496:	89 ca                	mov    %ecx,%edx$/;"	l
f0100498	obj/kern/kernel.asm	/^f0100498:	ec                   	in     (%dx),%al$/;"	l
f0100499	obj/kern/kernel.asm	/^f0100499:	ec                   	in     (%dx),%al$/;"	l
f010049a	obj/kern/kernel.asm	/^f010049a:	ec                   	in     (%dx),%al$/;"	l
f010049b	obj/kern/kernel.asm	/^f010049b:	ec                   	in     (%dx),%al$/;"	l
f010049c	obj/kern/kernel.asm	/^f010049c:	89 f2                	mov    %esi,%edx$/;"	l
f010049e	obj/kern/kernel.asm	/^f010049e:	ec                   	in     (%dx),%al$/;"	l
f010049f	obj/kern/kernel.asm	/^f010049f:	84 c0                	test   %al,%al$/;"	l
f01004a1	obj/kern/kernel.asm	/^f01004a1:	78 05                	js     f01004a8 <cons_putc+0x5f>$/;"	l
f01004a3	obj/kern/kernel.asm	/^f01004a3:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f01004a6	obj/kern/kernel.asm	/^f01004a6:	75 ee                	jne    f0100496 <cons_putc+0x4d>$/;"	l
f01004a8	obj/kern/kernel.asm	/^f01004a8:	ba 78 03 00 00       	mov    $0x378,%edx$/;"	l
f01004ad	obj/kern/kernel.asm	/^f01004ad:	0f b6 45 e4          	movzbl -0x1c(%ebp),%eax$/;"	l
f01004b1	obj/kern/kernel.asm	/^f01004b1:	ee                   	out    %al,(%dx)$/;"	l
f01004b2	obj/kern/kernel.asm	/^f01004b2:	b2 7a                	mov    $0x7a,%dl$/;"	l
f01004b4	obj/kern/kernel.asm	/^f01004b4:	b8 0d 00 00 00       	mov    $0xd,%eax$/;"	l
f01004b9	obj/kern/kernel.asm	/^f01004b9:	ee                   	out    %al,(%dx)$/;"	l
f01004ba	obj/kern/kernel.asm	/^f01004ba:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f01004bf	obj/kern/kernel.asm	/^f01004bf:	ee                   	out    %al,(%dx)$/;"	l
f01004c0	obj/kern/kernel.asm	/^f01004c0:	89 f8                	mov    %edi,%eax$/;"	l
f01004c2	obj/kern/kernel.asm	/^f01004c2:	0b 05 a0 9e 2b f0    	or     0xf02b9ea0,%eax$/;"	l
f01004c8	obj/kern/kernel.asm	/^f01004c8:	89 c1                	mov    %eax,%ecx$/;"	l
f01004ca	obj/kern/kernel.asm	/^f01004ca:	81 e1 00 ff ff ff    	and    $0xffffff00,%ecx$/;"	l
f01004d0	obj/kern/kernel.asm	/^f01004d0:	89 c2                	mov    %eax,%edx$/;"	l
f01004d2	obj/kern/kernel.asm	/^f01004d2:	80 ce 07             	or     $0x7,%dh$/;"	l
f01004d5	obj/kern/kernel.asm	/^f01004d5:	85 c9                	test   %ecx,%ecx$/;"	l
f01004d7	obj/kern/kernel.asm	/^f01004d7:	0f 44 c2             	cmove  %edx,%eax$/;"	l
f01004da	obj/kern/kernel.asm	/^f01004da:	0f b6 d0             	movzbl %al,%edx$/;"	l
f01004dd	obj/kern/kernel.asm	/^f01004dd:	83 fa 09             	cmp    $0x9,%edx$/;"	l
f01004e0	obj/kern/kernel.asm	/^f01004e0:	74 79                	je     f010055b <cons_putc+0x112>$/;"	l
f01004e2	obj/kern/kernel.asm	/^f01004e2:	83 fa 09             	cmp    $0x9,%edx$/;"	l
f01004e5	obj/kern/kernel.asm	/^f01004e5:	7f 0e                	jg     f01004f5 <cons_putc+0xac>$/;"	l
f01004e7	obj/kern/kernel.asm	/^f01004e7:	83 fa 08             	cmp    $0x8,%edx$/;"	l
f01004ea	obj/kern/kernel.asm	/^f01004ea:	74 1b                	je     f0100507 <cons_putc+0xbe>$/;"	l
f01004ec	obj/kern/kernel.asm	/^f01004ec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f01004f0	obj/kern/kernel.asm	/^f01004f0:	e9 9a 00 00 00       	jmp    f010058f <cons_putc+0x146>$/;"	l
f01004f5	obj/kern/kernel.asm	/^f01004f5:	83 fa 0a             	cmp    $0xa,%edx$/;"	l
f01004f8	obj/kern/kernel.asm	/^f01004f8:	74 3b                	je     f0100535 <cons_putc+0xec>$/;"	l
f01004fa	obj/kern/kernel.asm	/^f01004fa:	83 fa 0d             	cmp    $0xd,%edx$/;"	l
f01004fd	obj/kern/kernel.asm	/^f01004fd:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0100500	obj/kern/kernel.asm	/^f0100500:	74 3b                	je     f010053d <cons_putc+0xf4>$/;"	l
f0100502	obj/kern/kernel.asm	/^f0100502:	e9 88 00 00 00       	jmp    f010058f <cons_putc+0x146>$/;"	l
f0100507	obj/kern/kernel.asm	/^f0100507:	0f b7 15 28 92 2b f0 	movzwl 0xf02b9228,%edx$/;"	l
f010050e	obj/kern/kernel.asm	/^f010050e:	66 85 d2             	test   %dx,%dx$/;"	l
f0100511	obj/kern/kernel.asm	/^f0100511:	0f 84 e3 00 00 00    	je     f01005fa <cons_putc+0x1b1>$/;"	l
f0100517	obj/kern/kernel.asm	/^f0100517:	83 ea 01             	sub    $0x1,%edx$/;"	l
f010051a	obj/kern/kernel.asm	/^f010051a:	66 89 15 28 92 2b f0 	mov    %dx,0xf02b9228$/;"	l
f0100521	obj/kern/kernel.asm	/^f0100521:	0f b7 d2             	movzwl %dx,%edx$/;"	l
f0100524	obj/kern/kernel.asm	/^f0100524:	b0 00                	mov    $0x0,%al$/;"	l
f0100526	obj/kern/kernel.asm	/^f0100526:	83 c8 20             	or     $0x20,%eax$/;"	l
f0100529	obj/kern/kernel.asm	/^f0100529:	8b 0d 2c 92 2b f0    	mov    0xf02b922c,%ecx$/;"	l
f010052f	obj/kern/kernel.asm	/^f010052f:	66 89 04 51          	mov    %ax,(%ecx,%edx,2)$/;"	l
f0100533	obj/kern/kernel.asm	/^f0100533:	eb 78                	jmp    f01005ad <cons_putc+0x164>$/;"	l
f0100535	obj/kern/kernel.asm	/^f0100535:	66 83 05 28 92 2b f0 	addw   $0x50,0xf02b9228$/;"	l
f010053c	obj/kern/kernel.asm	/^f010053c:	50 $/;"	l
f010053d	obj/kern/kernel.asm	/^f010053d:	0f b7 05 28 92 2b f0 	movzwl 0xf02b9228,%eax$/;"	l
f0100544	obj/kern/kernel.asm	/^f0100544:	69 c0 cd cc 00 00    	imul   $0xcccd,%eax,%eax$/;"	l
f010054a	obj/kern/kernel.asm	/^f010054a:	c1 e8 16             	shr    $0x16,%eax$/;"	l
f010054d	obj/kern/kernel.asm	/^f010054d:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f0100550	obj/kern/kernel.asm	/^f0100550:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f0100553	obj/kern/kernel.asm	/^f0100553:	66 a3 28 92 2b f0    	mov    %ax,0xf02b9228$/;"	l
f0100559	obj/kern/kernel.asm	/^f0100559:	eb 52                	jmp    f01005ad <cons_putc+0x164>$/;"	l
f010055b	obj/kern/kernel.asm	/^f010055b:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100560	obj/kern/kernel.asm	/^f0100560:	e8 e4 fe ff ff       	call   f0100449 <cons_putc>$/;"	l
f0100565	obj/kern/kernel.asm	/^f0100565:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f010056a	obj/kern/kernel.asm	/^f010056a:	e8 da fe ff ff       	call   f0100449 <cons_putc>$/;"	l
f010056f	obj/kern/kernel.asm	/^f010056f:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100574	obj/kern/kernel.asm	/^f0100574:	e8 d0 fe ff ff       	call   f0100449 <cons_putc>$/;"	l
f0100579	obj/kern/kernel.asm	/^f0100579:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f010057e	obj/kern/kernel.asm	/^f010057e:	e8 c6 fe ff ff       	call   f0100449 <cons_putc>$/;"	l
f0100583	obj/kern/kernel.asm	/^f0100583:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100588	obj/kern/kernel.asm	/^f0100588:	e8 bc fe ff ff       	call   f0100449 <cons_putc>$/;"	l
f010058d	obj/kern/kernel.asm	/^f010058d:	eb 1e                	jmp    f01005ad <cons_putc+0x164>$/;"	l
f010058f	obj/kern/kernel.asm	/^f010058f:	0f b7 15 28 92 2b f0 	movzwl 0xf02b9228,%edx$/;"	l
f0100596	obj/kern/kernel.asm	/^f0100596:	8d 4a 01             	lea    0x1(%edx),%ecx$/;"	l
f0100599	obj/kern/kernel.asm	/^f0100599:	66 89 0d 28 92 2b f0 	mov    %cx,0xf02b9228$/;"	l
f01005a0	obj/kern/kernel.asm	/^f01005a0:	0f b7 d2             	movzwl %dx,%edx$/;"	l
f01005a3	obj/kern/kernel.asm	/^f01005a3:	8b 0d 2c 92 2b f0    	mov    0xf02b922c,%ecx$/;"	l
f01005a9	obj/kern/kernel.asm	/^f01005a9:	66 89 04 51          	mov    %ax,(%ecx,%edx,2)$/;"	l
f01005ad	obj/kern/kernel.asm	/^f01005ad:	66 81 3d 28 92 2b f0 	cmpw   $0x7cf,0xf02b9228$/;"	l
f01005b4	obj/kern/kernel.asm	/^f01005b4:	cf 07 $/;"	l
f01005b6	obj/kern/kernel.asm	/^f01005b6:	76 42                	jbe    f01005fa <cons_putc+0x1b1>$/;"	l
f01005b8	obj/kern/kernel.asm	/^f01005b8:	a1 2c 92 2b f0       	mov    0xf02b922c,%eax$/;"	l
f01005bd	obj/kern/kernel.asm	/^f01005bd:	c7 44 24 08 00 0f 00 	movl   $0xf00,0x8(%esp)$/;"	l
f01005c4	obj/kern/kernel.asm	/^f01005c4:	00 $/;"	l
f01005c5	obj/kern/kernel.asm	/^f01005c5:	8d 90 a0 00 00 00    	lea    0xa0(%eax),%edx$/;"	l
f01005cb	obj/kern/kernel.asm	/^f01005cb:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01005cf	obj/kern/kernel.asm	/^f01005cf:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01005d2	obj/kern/kernel.asm	/^f01005d2:	e8 0d 60 00 00       	call   f01065e4 <memmove>$/;"	l
f01005d7	obj/kern/kernel.asm	/^f01005d7:	8b 15 2c 92 2b f0    	mov    0xf02b922c,%edx$/;"	l
f01005dd	obj/kern/kernel.asm	/^f01005dd:	b8 80 07 00 00       	mov    $0x780,%eax$/;"	l
f01005e2	obj/kern/kernel.asm	/^f01005e2:	66 c7 04 42 20 07    	movw   $0x720,(%edx,%eax,2)$/;"	l
f01005e8	obj/kern/kernel.asm	/^f01005e8:	83 c0 01             	add    $0x1,%eax$/;"	l
f01005eb	obj/kern/kernel.asm	/^f01005eb:	3d d0 07 00 00       	cmp    $0x7d0,%eax$/;"	l
f01005f0	obj/kern/kernel.asm	/^f01005f0:	75 f0                	jne    f01005e2 <cons_putc+0x199>$/;"	l
f01005f2	obj/kern/kernel.asm	/^f01005f2:	66 83 2d 28 92 2b f0 	subw   $0x50,0xf02b9228$/;"	l
f01005f9	obj/kern/kernel.asm	/^f01005f9:	50 $/;"	l
f01005fa	obj/kern/kernel.asm	/^f01005fa:	8b 0d 30 92 2b f0    	mov    0xf02b9230,%ecx$/;"	l
f0100600	obj/kern/kernel.asm	/^f0100600:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f0100605	obj/kern/kernel.asm	/^f0100605:	89 ca                	mov    %ecx,%edx$/;"	l
f0100607	obj/kern/kernel.asm	/^f0100607:	ee                   	out    %al,(%dx)$/;"	l
f0100608	obj/kern/kernel.asm	/^f0100608:	0f b7 1d 28 92 2b f0 	movzwl 0xf02b9228,%ebx$/;"	l
f010060f	obj/kern/kernel.asm	/^f010060f:	8d 71 01             	lea    0x1(%ecx),%esi$/;"	l
f0100612	obj/kern/kernel.asm	/^f0100612:	89 d8                	mov    %ebx,%eax$/;"	l
f0100614	obj/kern/kernel.asm	/^f0100614:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f0100618	obj/kern/kernel.asm	/^f0100618:	89 f2                	mov    %esi,%edx$/;"	l
f010061a	obj/kern/kernel.asm	/^f010061a:	ee                   	out    %al,(%dx)$/;"	l
f010061b	obj/kern/kernel.asm	/^f010061b:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f0100620	obj/kern/kernel.asm	/^f0100620:	89 ca                	mov    %ecx,%edx$/;"	l
f0100622	obj/kern/kernel.asm	/^f0100622:	ee                   	out    %al,(%dx)$/;"	l
f0100623	obj/kern/kernel.asm	/^f0100623:	89 d8                	mov    %ebx,%eax$/;"	l
f0100625	obj/kern/kernel.asm	/^f0100625:	89 f2                	mov    %esi,%edx$/;"	l
f0100627	obj/kern/kernel.asm	/^f0100627:	ee                   	out    %al,(%dx)$/;"	l
f0100628	obj/kern/kernel.asm	/^f0100628:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f010062b	obj/kern/kernel.asm	/^f010062b:	5b                   	pop    %ebx$/;"	l
f010062c	obj/kern/kernel.asm	/^f010062c:	5e                   	pop    %esi$/;"	l
f010062d	obj/kern/kernel.asm	/^f010062d:	5f                   	pop    %edi$/;"	l
f010062e	obj/kern/kernel.asm	/^f010062e:	5d                   	pop    %ebp$/;"	l
f010062f	obj/kern/kernel.asm	/^f010062f:	c3                   	ret    $/;"	l
f0100630	obj/kern/kernel.asm	/^f0100630 <serial_intr>:$/;"	l
f0100630	obj/kern/kernel.asm	/^f0100630:	80 3d 34 92 2b f0 00 	cmpb   $0x0,0xf02b9234$/;"	l
f0100637	obj/kern/kernel.asm	/^f0100637:	74 11                	je     f010064a <serial_intr+0x1a>$/;"	l
f0100639	obj/kern/kernel.asm	/^f0100639:	55                   	push   %ebp$/;"	l
f010063a	obj/kern/kernel.asm	/^f010063a:	89 e5                	mov    %esp,%ebp$/;"	l
f010063c	obj/kern/kernel.asm	/^f010063c:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010063f	obj/kern/kernel.asm	/^f010063f:	b8 e0 02 10 f0       	mov    $0xf01002e0,%eax$/;"	l
f0100644	obj/kern/kernel.asm	/^f0100644:	e8 b3 fc ff ff       	call   f01002fc <cons_intr>$/;"	l
f0100649	obj/kern/kernel.asm	/^f0100649:	c9                   	leave  $/;"	l
f010064a	obj/kern/kernel.asm	/^f010064a:	f3 c3                	repz ret $/;"	l
f010064c	obj/kern/kernel.asm	/^f010064c <kbd_intr>:$/;"	l
f010064c	obj/kern/kernel.asm	/^f010064c:	55                   	push   %ebp$/;"	l
f010064d	obj/kern/kernel.asm	/^f010064d:	89 e5                	mov    %esp,%ebp$/;"	l
f010064f	obj/kern/kernel.asm	/^f010064f:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100652	obj/kern/kernel.asm	/^f0100652:	b8 40 03 10 f0       	mov    $0xf0100340,%eax$/;"	l
f0100657	obj/kern/kernel.asm	/^f0100657:	e8 a0 fc ff ff       	call   f01002fc <cons_intr>$/;"	l
f010065c	obj/kern/kernel.asm	/^f010065c:	c9                   	leave  $/;"	l
f010065d	obj/kern/kernel.asm	/^f010065d:	c3                   	ret    $/;"	l
f010065e	obj/kern/kernel.asm	/^f010065e <cons_getc>:$/;"	l
f010065e	obj/kern/kernel.asm	/^f010065e:	55                   	push   %ebp$/;"	l
f010065f	obj/kern/kernel.asm	/^f010065f:	89 e5                	mov    %esp,%ebp$/;"	l
f0100661	obj/kern/kernel.asm	/^f0100661:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100664	obj/kern/kernel.asm	/^f0100664:	e8 c7 ff ff ff       	call   f0100630 <serial_intr>$/;"	l
f0100669	obj/kern/kernel.asm	/^f0100669:	e8 de ff ff ff       	call   f010064c <kbd_intr>$/;"	l
f010066e	obj/kern/kernel.asm	/^f010066e:	a1 20 92 2b f0       	mov    0xf02b9220,%eax$/;"	l
f0100673	obj/kern/kernel.asm	/^f0100673:	3b 05 24 92 2b f0    	cmp    0xf02b9224,%eax$/;"	l
f0100679	obj/kern/kernel.asm	/^f0100679:	74 26                	je     f01006a1 <cons_getc+0x43>$/;"	l
f010067b	obj/kern/kernel.asm	/^f010067b:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f010067e	obj/kern/kernel.asm	/^f010067e:	89 15 20 92 2b f0    	mov    %edx,0xf02b9220$/;"	l
f0100684	obj/kern/kernel.asm	/^f0100684:	0f b6 88 20 90 2b f0 	movzbl -0xfd46fe0(%eax),%ecx$/;"	l
f010068b	obj/kern/kernel.asm	/^f010068b:	89 c8                	mov    %ecx,%eax$/;"	l
f010068d	obj/kern/kernel.asm	/^f010068d:	81 fa 00 02 00 00    	cmp    $0x200,%edx$/;"	l
f0100693	obj/kern/kernel.asm	/^f0100693:	75 11                	jne    f01006a6 <cons_getc+0x48>$/;"	l
f0100695	obj/kern/kernel.asm	/^f0100695:	c7 05 20 92 2b f0 00 	movl   $0x0,0xf02b9220$/;"	l
f010069c	obj/kern/kernel.asm	/^f010069c:	00 00 00 $/;"	l
f010069f	obj/kern/kernel.asm	/^f010069f:	eb 05                	jmp    f01006a6 <cons_getc+0x48>$/;"	l
f01006a1	obj/kern/kernel.asm	/^f01006a1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01006a6	obj/kern/kernel.asm	/^f01006a6:	c9                   	leave  $/;"	l
f01006a7	obj/kern/kernel.asm	/^f01006a7:	c3                   	ret    $/;"	l
f01006a8	obj/kern/kernel.asm	/^f01006a8 <cons_init>:$/;"	l
f01006a8	obj/kern/kernel.asm	/^f01006a8:	55                   	push   %ebp$/;"	l
f01006a9	obj/kern/kernel.asm	/^f01006a9:	89 e5                	mov    %esp,%ebp$/;"	l
f01006ab	obj/kern/kernel.asm	/^f01006ab:	57                   	push   %edi$/;"	l
f01006ac	obj/kern/kernel.asm	/^f01006ac:	56                   	push   %esi$/;"	l
f01006ad	obj/kern/kernel.asm	/^f01006ad:	53                   	push   %ebx$/;"	l
f01006ae	obj/kern/kernel.asm	/^f01006ae:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01006b1	obj/kern/kernel.asm	/^f01006b1:	0f b7 15 00 80 0b f0 	movzwl 0xf00b8000,%edx$/;"	l
f01006b8	obj/kern/kernel.asm	/^f01006b8:	66 c7 05 00 80 0b f0 	movw   $0xa55a,0xf00b8000$/;"	l
f01006bf	obj/kern/kernel.asm	/^f01006bf:	5a a5 $/;"	l
f01006c1	obj/kern/kernel.asm	/^f01006c1:	0f b7 05 00 80 0b f0 	movzwl 0xf00b8000,%eax$/;"	l
f01006c8	obj/kern/kernel.asm	/^f01006c8:	66 3d 5a a5          	cmp    $0xa55a,%ax$/;"	l
f01006cc	obj/kern/kernel.asm	/^f01006cc:	74 11                	je     f01006df <cons_init+0x37>$/;"	l
f01006ce	obj/kern/kernel.asm	/^f01006ce:	c7 05 30 92 2b f0 b4 	movl   $0x3b4,0xf02b9230$/;"	l
f01006d5	obj/kern/kernel.asm	/^f01006d5:	03 00 00 $/;"	l
f01006d8	obj/kern/kernel.asm	/^f01006d8:	bf 00 00 0b f0       	mov    $0xf00b0000,%edi$/;"	l
f01006dd	obj/kern/kernel.asm	/^f01006dd:	eb 16                	jmp    f01006f5 <cons_init+0x4d>$/;"	l
f01006df	obj/kern/kernel.asm	/^f01006df:	66 89 15 00 80 0b f0 	mov    %dx,0xf00b8000$/;"	l
f01006e6	obj/kern/kernel.asm	/^f01006e6:	c7 05 30 92 2b f0 d4 	movl   $0x3d4,0xf02b9230$/;"	l
f01006ed	obj/kern/kernel.asm	/^f01006ed:	03 00 00 $/;"	l
f01006f0	obj/kern/kernel.asm	/^f01006f0:	bf 00 80 0b f0       	mov    $0xf00b8000,%edi$/;"	l
f01006f5	obj/kern/kernel.asm	/^f01006f5:	8b 0d 30 92 2b f0    	mov    0xf02b9230,%ecx$/;"	l
f01006fb	obj/kern/kernel.asm	/^f01006fb:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f0100700	obj/kern/kernel.asm	/^f0100700:	89 ca                	mov    %ecx,%edx$/;"	l
f0100702	obj/kern/kernel.asm	/^f0100702:	ee                   	out    %al,(%dx)$/;"	l
f0100703	obj/kern/kernel.asm	/^f0100703:	8d 59 01             	lea    0x1(%ecx),%ebx$/;"	l
f0100706	obj/kern/kernel.asm	/^f0100706:	89 da                	mov    %ebx,%edx$/;"	l
f0100708	obj/kern/kernel.asm	/^f0100708:	ec                   	in     (%dx),%al$/;"	l
f0100709	obj/kern/kernel.asm	/^f0100709:	0f b6 f0             	movzbl %al,%esi$/;"	l
f010070c	obj/kern/kernel.asm	/^f010070c:	c1 e6 08             	shl    $0x8,%esi$/;"	l
f010070f	obj/kern/kernel.asm	/^f010070f:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f0100714	obj/kern/kernel.asm	/^f0100714:	89 ca                	mov    %ecx,%edx$/;"	l
f0100716	obj/kern/kernel.asm	/^f0100716:	ee                   	out    %al,(%dx)$/;"	l
f0100717	obj/kern/kernel.asm	/^f0100717:	89 da                	mov    %ebx,%edx$/;"	l
f0100719	obj/kern/kernel.asm	/^f0100719:	ec                   	in     (%dx),%al$/;"	l
f010071a	obj/kern/kernel.asm	/^f010071a:	89 3d 2c 92 2b f0    	mov    %edi,0xf02b922c$/;"	l
f0100720	obj/kern/kernel.asm	/^f0100720:	0f b6 d8             	movzbl %al,%ebx$/;"	l
f0100723	obj/kern/kernel.asm	/^f0100723:	09 de                	or     %ebx,%esi$/;"	l
f0100725	obj/kern/kernel.asm	/^f0100725:	66 89 35 28 92 2b f0 	mov    %si,0xf02b9228$/;"	l
f010072c	obj/kern/kernel.asm	/^f010072c:	e8 1b ff ff ff       	call   f010064c <kbd_intr>$/;"	l
f0100731	obj/kern/kernel.asm	/^f0100731:	0f b7 05 a8 53 12 f0 	movzwl 0xf01253a8,%eax$/;"	l
f0100738	obj/kern/kernel.asm	/^f0100738:	25 fd ff 00 00       	and    $0xfffd,%eax$/;"	l
f010073d	obj/kern/kernel.asm	/^f010073d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100740	obj/kern/kernel.asm	/^f0100740:	e8 35 37 00 00       	call   f0103e7a <irq_setmask_8259A>$/;"	l
f0100745	obj/kern/kernel.asm	/^f0100745:	be fa 03 00 00       	mov    $0x3fa,%esi$/;"	l
f010074a	obj/kern/kernel.asm	/^f010074a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010074f	obj/kern/kernel.asm	/^f010074f:	89 f2                	mov    %esi,%edx$/;"	l
f0100751	obj/kern/kernel.asm	/^f0100751:	ee                   	out    %al,(%dx)$/;"	l
f0100752	obj/kern/kernel.asm	/^f0100752:	b2 fb                	mov    $0xfb,%dl$/;"	l
f0100754	obj/kern/kernel.asm	/^f0100754:	b8 80 ff ff ff       	mov    $0xffffff80,%eax$/;"	l
f0100759	obj/kern/kernel.asm	/^f0100759:	ee                   	out    %al,(%dx)$/;"	l
f010075a	obj/kern/kernel.asm	/^f010075a:	bb f8 03 00 00       	mov    $0x3f8,%ebx$/;"	l
f010075f	obj/kern/kernel.asm	/^f010075f:	b8 0c 00 00 00       	mov    $0xc,%eax$/;"	l
f0100764	obj/kern/kernel.asm	/^f0100764:	89 da                	mov    %ebx,%edx$/;"	l
f0100766	obj/kern/kernel.asm	/^f0100766:	ee                   	out    %al,(%dx)$/;"	l
f0100767	obj/kern/kernel.asm	/^f0100767:	b2 f9                	mov    $0xf9,%dl$/;"	l
f0100769	obj/kern/kernel.asm	/^f0100769:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010076e	obj/kern/kernel.asm	/^f010076e:	ee                   	out    %al,(%dx)$/;"	l
f010076f	obj/kern/kernel.asm	/^f010076f:	b2 fb                	mov    $0xfb,%dl$/;"	l
f0100771	obj/kern/kernel.asm	/^f0100771:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f0100776	obj/kern/kernel.asm	/^f0100776:	ee                   	out    %al,(%dx)$/;"	l
f0100777	obj/kern/kernel.asm	/^f0100777:	b2 fc                	mov    $0xfc,%dl$/;"	l
f0100779	obj/kern/kernel.asm	/^f0100779:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010077e	obj/kern/kernel.asm	/^f010077e:	ee                   	out    %al,(%dx)$/;"	l
f010077f	obj/kern/kernel.asm	/^f010077f:	b2 f9                	mov    $0xf9,%dl$/;"	l
f0100781	obj/kern/kernel.asm	/^f0100781:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100786	obj/kern/kernel.asm	/^f0100786:	ee                   	out    %al,(%dx)$/;"	l
f0100787	obj/kern/kernel.asm	/^f0100787:	b2 fd                	mov    $0xfd,%dl$/;"	l
f0100789	obj/kern/kernel.asm	/^f0100789:	ec                   	in     (%dx),%al$/;"	l
f010078a	obj/kern/kernel.asm	/^f010078a:	3c ff                	cmp    $0xff,%al$/;"	l
f010078c	obj/kern/kernel.asm	/^f010078c:	0f 95 c1             	setne  %cl$/;"	l
f010078f	obj/kern/kernel.asm	/^f010078f:	88 0d 34 92 2b f0    	mov    %cl,0xf02b9234$/;"	l
f0100795	obj/kern/kernel.asm	/^f0100795:	89 f2                	mov    %esi,%edx$/;"	l
f0100797	obj/kern/kernel.asm	/^f0100797:	ec                   	in     (%dx),%al$/;"	l
f0100798	obj/kern/kernel.asm	/^f0100798:	89 da                	mov    %ebx,%edx$/;"	l
f010079a	obj/kern/kernel.asm	/^f010079a:	ec                   	in     (%dx),%al$/;"	l
f010079b	obj/kern/kernel.asm	/^f010079b:	84 c9                	test   %cl,%cl$/;"	l
f010079d	obj/kern/kernel.asm	/^f010079d:	74 1d                	je     f01007bc <cons_init+0x114>$/;"	l
f010079f	obj/kern/kernel.asm	/^f010079f:	0f b7 05 a8 53 12 f0 	movzwl 0xf01253a8,%eax$/;"	l
f01007a6	obj/kern/kernel.asm	/^f01007a6:	25 ef ff 00 00       	and    $0xffef,%eax$/;"	l
f01007ab	obj/kern/kernel.asm	/^f01007ab:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01007ae	obj/kern/kernel.asm	/^f01007ae:	e8 c7 36 00 00       	call   f0103e7a <irq_setmask_8259A>$/;"	l
f01007b3	obj/kern/kernel.asm	/^f01007b3:	80 3d 34 92 2b f0 00 	cmpb   $0x0,0xf02b9234$/;"	l
f01007ba	obj/kern/kernel.asm	/^f01007ba:	75 0c                	jne    f01007c8 <cons_init+0x120>$/;"	l
f01007bc	obj/kern/kernel.asm	/^f01007bc:	c7 04 24 64 81 10 f0 	movl   $0xf0108164,(%esp)$/;"	l
f01007c3	obj/kern/kernel.asm	/^f01007c3:	e8 04 38 00 00       	call   f0103fcc <cprintf>$/;"	l
f01007c8	obj/kern/kernel.asm	/^f01007c8:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01007cb	obj/kern/kernel.asm	/^f01007cb:	5b                   	pop    %ebx$/;"	l
f01007cc	obj/kern/kernel.asm	/^f01007cc:	5e                   	pop    %esi$/;"	l
f01007cd	obj/kern/kernel.asm	/^f01007cd:	5f                   	pop    %edi$/;"	l
f01007ce	obj/kern/kernel.asm	/^f01007ce:	5d                   	pop    %ebp$/;"	l
f01007cf	obj/kern/kernel.asm	/^f01007cf:	c3                   	ret    $/;"	l
f01007d0	obj/kern/kernel.asm	/^f01007d0 <cputchar>:$/;"	l
f01007d0	obj/kern/kernel.asm	/^f01007d0:	55                   	push   %ebp$/;"	l
f01007d1	obj/kern/kernel.asm	/^f01007d1:	89 e5                	mov    %esp,%ebp$/;"	l
f01007d3	obj/kern/kernel.asm	/^f01007d3:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01007d6	obj/kern/kernel.asm	/^f01007d6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01007d9	obj/kern/kernel.asm	/^f01007d9:	e8 6b fc ff ff       	call   f0100449 <cons_putc>$/;"	l
f01007de	obj/kern/kernel.asm	/^f01007de:	c9                   	leave  $/;"	l
f01007df	obj/kern/kernel.asm	/^f01007df:	c3                   	ret    $/;"	l
f01007e0	obj/kern/kernel.asm	/^f01007e0 <getchar>:$/;"	l
f01007e0	obj/kern/kernel.asm	/^f01007e0:	55                   	push   %ebp$/;"	l
f01007e1	obj/kern/kernel.asm	/^f01007e1:	89 e5                	mov    %esp,%ebp$/;"	l
f01007e3	obj/kern/kernel.asm	/^f01007e3:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01007e6	obj/kern/kernel.asm	/^f01007e6:	e8 73 fe ff ff       	call   f010065e <cons_getc>$/;"	l
f01007eb	obj/kern/kernel.asm	/^f01007eb:	85 c0                	test   %eax,%eax$/;"	l
f01007ed	obj/kern/kernel.asm	/^f01007ed:	74 f7                	je     f01007e6 <getchar+0x6>$/;"	l
f01007ef	obj/kern/kernel.asm	/^f01007ef:	c9                   	leave  $/;"	l
f01007f0	obj/kern/kernel.asm	/^f01007f0:	c3                   	ret    $/;"	l
f01007f1	obj/kern/kernel.asm	/^f01007f1 <iscons>:$/;"	l
f01007f1	obj/kern/kernel.asm	/^f01007f1:	55                   	push   %ebp$/;"	l
f01007f2	obj/kern/kernel.asm	/^f01007f2:	89 e5                	mov    %esp,%ebp$/;"	l
f01007f4	obj/kern/kernel.asm	/^f01007f4:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01007f9	obj/kern/kernel.asm	/^f01007f9:	5d                   	pop    %ebp$/;"	l
f01007fa	obj/kern/kernel.asm	/^f01007fa:	c3                   	ret    $/;"	l
f01007fb	obj/kern/kernel.asm	/^f01007fb:	66 90                	xchg   %ax,%ax$/;"	l
f01007fd	obj/kern/kernel.asm	/^f01007fd:	66 90                	xchg   %ax,%ax$/;"	l
f01007ff	obj/kern/kernel.asm	/^f01007ff:	90                   	nop$/;"	l
f0100800	obj/kern/kernel.asm	/^f0100800 <mon_help>:$/;"	l
f0100800	obj/kern/kernel.asm	/^f0100800:	55                   	push   %ebp$/;"	l
f0100801	obj/kern/kernel.asm	/^f0100801:	89 e5                	mov    %esp,%ebp$/;"	l
f0100803	obj/kern/kernel.asm	/^f0100803:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100806	obj/kern/kernel.asm	/^f0100806:	c7 44 24 08 c0 83 10 	movl   $0xf01083c0,0x8(%esp)$/;"	l
f010080d	obj/kern/kernel.asm	/^f010080d:	f0 $/;"	l
f010080e	obj/kern/kernel.asm	/^f010080e:	c7 44 24 04 de 83 10 	movl   $0xf01083de,0x4(%esp)$/;"	l
f0100815	obj/kern/kernel.asm	/^f0100815:	f0 $/;"	l
f0100816	obj/kern/kernel.asm	/^f0100816:	c7 04 24 e3 83 10 f0 	movl   $0xf01083e3,(%esp)$/;"	l
f010081d	obj/kern/kernel.asm	/^f010081d:	e8 aa 37 00 00       	call   f0103fcc <cprintf>$/;"	l
f0100822	obj/kern/kernel.asm	/^f0100822:	c7 44 24 08 b0 84 10 	movl   $0xf01084b0,0x8(%esp)$/;"	l
f0100829	obj/kern/kernel.asm	/^f0100829:	f0 $/;"	l
f010082a	obj/kern/kernel.asm	/^f010082a:	c7 44 24 04 ec 83 10 	movl   $0xf01083ec,0x4(%esp)$/;"	l
f0100831	obj/kern/kernel.asm	/^f0100831:	f0 $/;"	l
f0100832	obj/kern/kernel.asm	/^f0100832:	c7 04 24 e3 83 10 f0 	movl   $0xf01083e3,(%esp)$/;"	l
f0100839	obj/kern/kernel.asm	/^f0100839:	e8 8e 37 00 00       	call   f0103fcc <cprintf>$/;"	l
f010083e	obj/kern/kernel.asm	/^f010083e:	c7 44 24 08 d8 84 10 	movl   $0xf01084d8,0x8(%esp)$/;"	l
f0100845	obj/kern/kernel.asm	/^f0100845:	f0 $/;"	l
f0100846	obj/kern/kernel.asm	/^f0100846:	c7 44 24 04 f5 83 10 	movl   $0xf01083f5,0x4(%esp)$/;"	l
f010084d	obj/kern/kernel.asm	/^f010084d:	f0 $/;"	l
f010084e	obj/kern/kernel.asm	/^f010084e:	c7 04 24 e3 83 10 f0 	movl   $0xf01083e3,(%esp)$/;"	l
f0100855	obj/kern/kernel.asm	/^f0100855:	e8 72 37 00 00       	call   f0103fcc <cprintf>$/;"	l
f010085a	obj/kern/kernel.asm	/^f010085a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010085f	obj/kern/kernel.asm	/^f010085f:	c9                   	leave  $/;"	l
f0100860	obj/kern/kernel.asm	/^f0100860:	c3                   	ret    $/;"	l
f0100861	obj/kern/kernel.asm	/^f0100861 <mon_kerninfo>:$/;"	l
f0100861	obj/kern/kernel.asm	/^f0100861:	55                   	push   %ebp$/;"	l
f0100862	obj/kern/kernel.asm	/^f0100862:	89 e5                	mov    %esp,%ebp$/;"	l
f0100864	obj/kern/kernel.asm	/^f0100864:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100867	obj/kern/kernel.asm	/^f0100867:	c7 04 24 ff 83 10 f0 	movl   $0xf01083ff,(%esp)$/;"	l
f010086e	obj/kern/kernel.asm	/^f010086e:	e8 59 37 00 00       	call   f0103fcc <cprintf>$/;"	l
f0100873	obj/kern/kernel.asm	/^f0100873:	c7 44 24 04 0c 00 10 	movl   $0x10000c,0x4(%esp)$/;"	l
f010087a	obj/kern/kernel.asm	/^f010087a:	00 $/;"	l
f010087b	obj/kern/kernel.asm	/^f010087b:	c7 04 24 04 85 10 f0 	movl   $0xf0108504,(%esp)$/;"	l
f0100882	obj/kern/kernel.asm	/^f0100882:	e8 45 37 00 00       	call   f0103fcc <cprintf>$/;"	l
f0100887	obj/kern/kernel.asm	/^f0100887:	c7 44 24 08 0c 00 10 	movl   $0x10000c,0x8(%esp)$/;"	l
f010088e	obj/kern/kernel.asm	/^f010088e:	00 $/;"	l
f010088f	obj/kern/kernel.asm	/^f010088f:	c7 44 24 04 0c 00 10 	movl   $0xf010000c,0x4(%esp)$/;"	l
f0100896	obj/kern/kernel.asm	/^f0100896:	f0 $/;"	l
f0100897	obj/kern/kernel.asm	/^f0100897:	c7 04 24 2c 85 10 f0 	movl   $0xf010852c,(%esp)$/;"	l
f010089e	obj/kern/kernel.asm	/^f010089e:	e8 29 37 00 00       	call   f0103fcc <cprintf>$/;"	l
f01008a3	obj/kern/kernel.asm	/^f01008a3:	c7 44 24 08 67 80 10 	movl   $0x108067,0x8(%esp)$/;"	l
f01008aa	obj/kern/kernel.asm	/^f01008aa:	00 $/;"	l
f01008ab	obj/kern/kernel.asm	/^f01008ab:	c7 44 24 04 67 80 10 	movl   $0xf0108067,0x4(%esp)$/;"	l
f01008b2	obj/kern/kernel.asm	/^f01008b2:	f0 $/;"	l
f01008b3	obj/kern/kernel.asm	/^f01008b3:	c7 04 24 50 85 10 f0 	movl   $0xf0108550,(%esp)$/;"	l
f01008ba	obj/kern/kernel.asm	/^f01008ba:	e8 0d 37 00 00       	call   f0103fcc <cprintf>$/;"	l
f01008bf	obj/kern/kernel.asm	/^f01008bf:	c7 44 24 08 ea 8a 2b 	movl   $0x2b8aea,0x8(%esp)$/;"	l
f01008c6	obj/kern/kernel.asm	/^f01008c6:	00 $/;"	l
f01008c7	obj/kern/kernel.asm	/^f01008c7:	c7 44 24 04 ea 8a 2b 	movl   $0xf02b8aea,0x4(%esp)$/;"	l
f01008ce	obj/kern/kernel.asm	/^f01008ce:	f0 $/;"	l
f01008cf	obj/kern/kernel.asm	/^f01008cf:	c7 04 24 74 85 10 f0 	movl   $0xf0108574,(%esp)$/;"	l
f01008d6	obj/kern/kernel.asm	/^f01008d6:	e8 f1 36 00 00       	call   f0103fcc <cprintf>$/;"	l
f01008db	obj/kern/kernel.asm	/^f01008db:	c7 44 24 08 40 b4 2f 	movl   $0x2fb440,0x8(%esp)$/;"	l
f01008e2	obj/kern/kernel.asm	/^f01008e2:	00 $/;"	l
f01008e3	obj/kern/kernel.asm	/^f01008e3:	c7 44 24 04 40 b4 2f 	movl   $0xf02fb440,0x4(%esp)$/;"	l
f01008ea	obj/kern/kernel.asm	/^f01008ea:	f0 $/;"	l
f01008eb	obj/kern/kernel.asm	/^f01008eb:	c7 04 24 98 85 10 f0 	movl   $0xf0108598,(%esp)$/;"	l
f01008f2	obj/kern/kernel.asm	/^f01008f2:	e8 d5 36 00 00       	call   f0103fcc <cprintf>$/;"	l
f01008f7	obj/kern/kernel.asm	/^f01008f7:	b8 3f b8 2f f0       	mov    $0xf02fb83f,%eax$/;"	l
f01008fc	obj/kern/kernel.asm	/^f01008fc:	2d 0c 00 10 f0       	sub    $0xf010000c,%eax$/;"	l
f0100901	obj/kern/kernel.asm	/^f0100901:	25 00 fc ff ff       	and    $0xfffffc00,%eax$/;"	l
f0100906	obj/kern/kernel.asm	/^f0100906:	8d 90 ff 03 00 00    	lea    0x3ff(%eax),%edx$/;"	l
f010090c	obj/kern/kernel.asm	/^f010090c:	85 c0                	test   %eax,%eax$/;"	l
f010090e	obj/kern/kernel.asm	/^f010090e:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
f0100911	obj/kern/kernel.asm	/^f0100911:	c1 f8 0a             	sar    $0xa,%eax$/;"	l
f0100914	obj/kern/kernel.asm	/^f0100914:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100918	obj/kern/kernel.asm	/^f0100918:	c7 04 24 bc 85 10 f0 	movl   $0xf01085bc,(%esp)$/;"	l
f010091f	obj/kern/kernel.asm	/^f010091f:	e8 a8 36 00 00       	call   f0103fcc <cprintf>$/;"	l
f0100924	obj/kern/kernel.asm	/^f0100924:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100929	obj/kern/kernel.asm	/^f0100929:	c9                   	leave  $/;"	l
f010092a	obj/kern/kernel.asm	/^f010092a:	c3                   	ret    $/;"	l
f010092b	obj/kern/kernel.asm	/^f010092b <mon_backtrace>:$/;"	l
f010092b	obj/kern/kernel.asm	/^f010092b:	55                   	push   %ebp$/;"	l
f010092c	obj/kern/kernel.asm	/^f010092c:	89 e5                	mov    %esp,%ebp$/;"	l
f010092e	obj/kern/kernel.asm	/^f010092e:	57                   	push   %edi$/;"	l
f010092f	obj/kern/kernel.asm	/^f010092f:	56                   	push   %esi$/;"	l
f0100930	obj/kern/kernel.asm	/^f0100930:	53                   	push   %ebx$/;"	l
f0100931	obj/kern/kernel.asm	/^f0100931:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f0100934	obj/kern/kernel.asm	/^f0100934:	89 eb                	mov    %ebp,%ebx$/;"	l
f0100936	obj/kern/kernel.asm	/^f0100936:	c7 04 24 18 84 10 f0 	movl   $0xf0108418,(%esp)$/;"	l
f010093d	obj/kern/kernel.asm	/^f010093d:	e8 8a 36 00 00       	call   f0103fcc <cprintf>$/;"	l
f0100942	obj/kern/kernel.asm	/^f0100942:	8d 7d d0             	lea    -0x30(%ebp),%edi$/;"	l
f0100945	obj/kern/kernel.asm	/^f0100945:	8b 73 04             	mov    0x4(%ebx),%esi$/;"	l
f0100948	obj/kern/kernel.asm	/^f0100948:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f010094c	obj/kern/kernel.asm	/^f010094c:	89 34 24             	mov    %esi,(%esp)$/;"	l
f010094f	obj/kern/kernel.asm	/^f010094f:	e8 2f 50 00 00       	call   f0105983 <debuginfo_eip>$/;"	l
f0100954	obj/kern/kernel.asm	/^f0100954:	85 c0                	test   %eax,%eax$/;"	l
f0100956	obj/kern/kernel.asm	/^f0100956:	75 68                	jne    f01009c0 <mon_backtrace+0x95>$/;"	l
f0100958	obj/kern/kernel.asm	/^f0100958:	8b 43 18             	mov    0x18(%ebx),%eax$/;"	l
f010095b	obj/kern/kernel.asm	/^f010095b:	89 44 24 1c          	mov    %eax,0x1c(%esp)$/;"	l
f010095f	obj/kern/kernel.asm	/^f010095f:	8b 43 14             	mov    0x14(%ebx),%eax$/;"	l
f0100962	obj/kern/kernel.asm	/^f0100962:	89 44 24 18          	mov    %eax,0x18(%esp)$/;"	l
f0100966	obj/kern/kernel.asm	/^f0100966:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f0100969	obj/kern/kernel.asm	/^f0100969:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
f010096d	obj/kern/kernel.asm	/^f010096d:	8b 43 0c             	mov    0xc(%ebx),%eax$/;"	l
f0100970	obj/kern/kernel.asm	/^f0100970:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f0100974	obj/kern/kernel.asm	/^f0100974:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0100977	obj/kern/kernel.asm	/^f0100977:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010097b	obj/kern/kernel.asm	/^f010097b:	89 74 24 08          	mov    %esi,0x8(%esp)$/;"	l
f010097f	obj/kern/kernel.asm	/^f010097f:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0100983	obj/kern/kernel.asm	/^f0100983:	c7 04 24 e8 85 10 f0 	movl   $0xf01085e8,(%esp)$/;"	l
f010098a	obj/kern/kernel.asm	/^f010098a:	e8 3d 36 00 00       	call   f0103fcc <cprintf>$/;"	l
f010098f	obj/kern/kernel.asm	/^f010098f:	2b 75 e0             	sub    -0x20(%ebp),%esi$/;"	l
f0100992	obj/kern/kernel.asm	/^f0100992:	89 74 24 14          	mov    %esi,0x14(%esp)$/;"	l
f0100996	obj/kern/kernel.asm	/^f0100996:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0100999	obj/kern/kernel.asm	/^f0100999:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f010099d	obj/kern/kernel.asm	/^f010099d:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f01009a0	obj/kern/kernel.asm	/^f01009a0:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01009a4	obj/kern/kernel.asm	/^f01009a4:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01009a7	obj/kern/kernel.asm	/^f01009a7:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01009ab	obj/kern/kernel.asm	/^f01009ab:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f01009ae	obj/kern/kernel.asm	/^f01009ae:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01009b2	obj/kern/kernel.asm	/^f01009b2:	c7 04 24 2a 84 10 f0 	movl   $0xf010842a,(%esp)$/;"	l
f01009b9	obj/kern/kernel.asm	/^f01009b9:	e8 0e 36 00 00       	call   f0103fcc <cprintf>$/;"	l
f01009be	obj/kern/kernel.asm	/^f01009be:	eb 43                	jmp    f0100a03 <mon_backtrace+0xd8>$/;"	l
f01009c0	obj/kern/kernel.asm	/^f01009c0:	8b 43 18             	mov    0x18(%ebx),%eax$/;"	l
f01009c3	obj/kern/kernel.asm	/^f01009c3:	89 44 24 1c          	mov    %eax,0x1c(%esp)$/;"	l
f01009c7	obj/kern/kernel.asm	/^f01009c7:	8b 43 14             	mov    0x14(%ebx),%eax$/;"	l
f01009ca	obj/kern/kernel.asm	/^f01009ca:	89 44 24 18          	mov    %eax,0x18(%esp)$/;"	l
f01009ce	obj/kern/kernel.asm	/^f01009ce:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f01009d1	obj/kern/kernel.asm	/^f01009d1:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
f01009d5	obj/kern/kernel.asm	/^f01009d5:	8b 43 0c             	mov    0xc(%ebx),%eax$/;"	l
f01009d8	obj/kern/kernel.asm	/^f01009d8:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f01009dc	obj/kern/kernel.asm	/^f01009dc:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f01009df	obj/kern/kernel.asm	/^f01009df:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01009e3	obj/kern/kernel.asm	/^f01009e3:	89 74 24 08          	mov    %esi,0x8(%esp)$/;"	l
f01009e7	obj/kern/kernel.asm	/^f01009e7:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01009eb	obj/kern/kernel.asm	/^f01009eb:	c7 04 24 e8 85 10 f0 	movl   $0xf01085e8,(%esp)$/;"	l
f01009f2	obj/kern/kernel.asm	/^f01009f2:	e8 d5 35 00 00       	call   f0103fcc <cprintf>$/;"	l
f01009f7	obj/kern/kernel.asm	/^f01009f7:	c7 04 24 43 84 10 f0 	movl   $0xf0108443,(%esp)$/;"	l
f01009fe	obj/kern/kernel.asm	/^f01009fe:	e8 c9 35 00 00       	call   f0103fcc <cprintf>$/;"	l
f0100a03	obj/kern/kernel.asm	/^f0100a03:	8b 1b                	mov    (%ebx),%ebx$/;"	l
f0100a05	obj/kern/kernel.asm	/^f0100a05:	85 db                	test   %ebx,%ebx$/;"	l
f0100a07	obj/kern/kernel.asm	/^f0100a07:	0f 85 38 ff ff ff    	jne    f0100945 <mon_backtrace+0x1a>$/;"	l
f0100a0d	obj/kern/kernel.asm	/^f0100a0d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100a12	obj/kern/kernel.asm	/^f0100a12:	83 c4 4c             	add    $0x4c,%esp$/;"	l
f0100a15	obj/kern/kernel.asm	/^f0100a15:	5b                   	pop    %ebx$/;"	l
f0100a16	obj/kern/kernel.asm	/^f0100a16:	5e                   	pop    %esi$/;"	l
f0100a17	obj/kern/kernel.asm	/^f0100a17:	5f                   	pop    %edi$/;"	l
f0100a18	obj/kern/kernel.asm	/^f0100a18:	5d                   	pop    %ebp$/;"	l
f0100a19	obj/kern/kernel.asm	/^f0100a19:	c3                   	ret    $/;"	l
f0100a1a	obj/kern/kernel.asm	/^f0100a1a <monitor>:$/;"	l
f0100a1a	obj/kern/kernel.asm	/^f0100a1a:	55                   	push   %ebp$/;"	l
f0100a1b	obj/kern/kernel.asm	/^f0100a1b:	89 e5                	mov    %esp,%ebp$/;"	l
f0100a1d	obj/kern/kernel.asm	/^f0100a1d:	57                   	push   %edi$/;"	l
f0100a1e	obj/kern/kernel.asm	/^f0100a1e:	56                   	push   %esi$/;"	l
f0100a1f	obj/kern/kernel.asm	/^f0100a1f:	53                   	push   %ebx$/;"	l
f0100a20	obj/kern/kernel.asm	/^f0100a20:	83 ec 5c             	sub    $0x5c,%esp$/;"	l
f0100a23	obj/kern/kernel.asm	/^f0100a23:	c7 44 24 0c 04 00 00 	movl   $0x4,0xc(%esp)$/;"	l
f0100a2a	obj/kern/kernel.asm	/^f0100a2a:	00 $/;"	l
f0100a2b	obj/kern/kernel.asm	/^f0100a2b:	c7 44 24 08 03 00 00 	movl   $0x3,0x8(%esp)$/;"	l
f0100a32	obj/kern/kernel.asm	/^f0100a32:	00 $/;"	l
f0100a33	obj/kern/kernel.asm	/^f0100a33:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
f0100a3a	obj/kern/kernel.asm	/^f0100a3a:	00 $/;"	l
f0100a3b	obj/kern/kernel.asm	/^f0100a3b:	c7 04 24 60 84 10 f0 	movl   $0xf0108460,(%esp)$/;"	l
f0100a42	obj/kern/kernel.asm	/^f0100a42:	e8 85 35 00 00       	call   f0103fcc <cprintf>$/;"	l
f0100a47	obj/kern/kernel.asm	/^f0100a47:	c7 04 24 20 86 10 f0 	movl   $0xf0108620,(%esp)$/;"	l
f0100a4e	obj/kern/kernel.asm	/^f0100a4e:	e8 79 35 00 00       	call   f0103fcc <cprintf>$/;"	l
f0100a53	obj/kern/kernel.asm	/^f0100a53:	c7 04 24 44 86 10 f0 	movl   $0xf0108644,(%esp)$/;"	l
f0100a5a	obj/kern/kernel.asm	/^f0100a5a:	e8 6d 35 00 00       	call   f0103fcc <cprintf>$/;"	l
f0100a5f	obj/kern/kernel.asm	/^f0100a5f:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
f0100a63	obj/kern/kernel.asm	/^f0100a63:	74 0b                	je     f0100a70 <monitor+0x56>$/;"	l
f0100a65	obj/kern/kernel.asm	/^f0100a65:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100a68	obj/kern/kernel.asm	/^f0100a68:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100a6b	obj/kern/kernel.asm	/^f0100a6b:	e8 e5 3c 00 00       	call   f0104755 <print_trapframe>$/;"	l
f0100a70	obj/kern/kernel.asm	/^f0100a70:	c7 04 24 72 84 10 f0 	movl   $0xf0108472,(%esp)$/;"	l
f0100a77	obj/kern/kernel.asm	/^f0100a77:	e8 b4 58 00 00       	call   f0106330 <readline>$/;"	l
f0100a7c	obj/kern/kernel.asm	/^f0100a7c:	89 c3                	mov    %eax,%ebx$/;"	l
f0100a7e	obj/kern/kernel.asm	/^f0100a7e:	85 c0                	test   %eax,%eax$/;"	l
f0100a80	obj/kern/kernel.asm	/^f0100a80:	74 ee                	je     f0100a70 <monitor+0x56>$/;"	l
f0100a82	obj/kern/kernel.asm	/^f0100a82:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%ebp)$/;"	l
f0100a89	obj/kern/kernel.asm	/^f0100a89:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0100a8e	obj/kern/kernel.asm	/^f0100a8e:	eb 0a                	jmp    f0100a9a <monitor+0x80>$/;"	l
f0100a90	obj/kern/kernel.asm	/^f0100a90:	c6 03 00             	movb   $0x0,(%ebx)$/;"	l
f0100a93	obj/kern/kernel.asm	/^f0100a93:	89 f7                	mov    %esi,%edi$/;"	l
f0100a95	obj/kern/kernel.asm	/^f0100a95:	8d 5b 01             	lea    0x1(%ebx),%ebx$/;"	l
f0100a98	obj/kern/kernel.asm	/^f0100a98:	89 fe                	mov    %edi,%esi$/;"	l
f0100a9a	obj/kern/kernel.asm	/^f0100a9a:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0100a9d	obj/kern/kernel.asm	/^f0100a9d:	84 c0                	test   %al,%al$/;"	l
f0100a9f	obj/kern/kernel.asm	/^f0100a9f:	74 63                	je     f0100b04 <monitor+0xea>$/;"	l
f0100aa1	obj/kern/kernel.asm	/^f0100aa1:	0f be c0             	movsbl %al,%eax$/;"	l
f0100aa4	obj/kern/kernel.asm	/^f0100aa4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100aa8	obj/kern/kernel.asm	/^f0100aa8:	c7 04 24 76 84 10 f0 	movl   $0xf0108476,(%esp)$/;"	l
f0100aaf	obj/kern/kernel.asm	/^f0100aaf:	e8 a6 5a 00 00       	call   f010655a <strchr>$/;"	l
f0100ab4	obj/kern/kernel.asm	/^f0100ab4:	85 c0                	test   %eax,%eax$/;"	l
f0100ab6	obj/kern/kernel.asm	/^f0100ab6:	75 d8                	jne    f0100a90 <monitor+0x76>$/;"	l
f0100ab8	obj/kern/kernel.asm	/^f0100ab8:	80 3b 00             	cmpb   $0x0,(%ebx)$/;"	l
f0100abb	obj/kern/kernel.asm	/^f0100abb:	74 47                	je     f0100b04 <monitor+0xea>$/;"	l
f0100abd	obj/kern/kernel.asm	/^f0100abd:	83 fe 0f             	cmp    $0xf,%esi$/;"	l
f0100ac0	obj/kern/kernel.asm	/^f0100ac0:	75 16                	jne    f0100ad8 <monitor+0xbe>$/;"	l
f0100ac2	obj/kern/kernel.asm	/^f0100ac2:	c7 44 24 04 10 00 00 	movl   $0x10,0x4(%esp)$/;"	l
f0100ac9	obj/kern/kernel.asm	/^f0100ac9:	00 $/;"	l
f0100aca	obj/kern/kernel.asm	/^f0100aca:	c7 04 24 7b 84 10 f0 	movl   $0xf010847b,(%esp)$/;"	l
f0100ad1	obj/kern/kernel.asm	/^f0100ad1:	e8 f6 34 00 00       	call   f0103fcc <cprintf>$/;"	l
f0100ad6	obj/kern/kernel.asm	/^f0100ad6:	eb 98                	jmp    f0100a70 <monitor+0x56>$/;"	l
f0100ad8	obj/kern/kernel.asm	/^f0100ad8:	8d 7e 01             	lea    0x1(%esi),%edi$/;"	l
f0100adb	obj/kern/kernel.asm	/^f0100adb:	89 5c b5 a8          	mov    %ebx,-0x58(%ebp,%esi,4)$/;"	l
f0100adf	obj/kern/kernel.asm	/^f0100adf:	eb 03                	jmp    f0100ae4 <monitor+0xca>$/;"	l
f0100ae1	obj/kern/kernel.asm	/^f0100ae1:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100ae4	obj/kern/kernel.asm	/^f0100ae4:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0100ae7	obj/kern/kernel.asm	/^f0100ae7:	84 c0                	test   %al,%al$/;"	l
f0100ae9	obj/kern/kernel.asm	/^f0100ae9:	74 ad                	je     f0100a98 <monitor+0x7e>$/;"	l
f0100aeb	obj/kern/kernel.asm	/^f0100aeb:	0f be c0             	movsbl %al,%eax$/;"	l
f0100aee	obj/kern/kernel.asm	/^f0100aee:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100af2	obj/kern/kernel.asm	/^f0100af2:	c7 04 24 76 84 10 f0 	movl   $0xf0108476,(%esp)$/;"	l
f0100af9	obj/kern/kernel.asm	/^f0100af9:	e8 5c 5a 00 00       	call   f010655a <strchr>$/;"	l
f0100afe	obj/kern/kernel.asm	/^f0100afe:	85 c0                	test   %eax,%eax$/;"	l
f0100b00	obj/kern/kernel.asm	/^f0100b00:	74 df                	je     f0100ae1 <monitor+0xc7>$/;"	l
f0100b02	obj/kern/kernel.asm	/^f0100b02:	eb 94                	jmp    f0100a98 <monitor+0x7e>$/;"	l
f0100b04	obj/kern/kernel.asm	/^f0100b04:	c7 44 b5 a8 00 00 00 	movl   $0x0,-0x58(%ebp,%esi,4)$/;"	l
f0100b0b	obj/kern/kernel.asm	/^f0100b0b:	00 $/;"	l
f0100b0c	obj/kern/kernel.asm	/^f0100b0c:	85 f6                	test   %esi,%esi$/;"	l
f0100b0e	obj/kern/kernel.asm	/^f0100b0e:	0f 84 5c ff ff ff    	je     f0100a70 <monitor+0x56>$/;"	l
f0100b14	obj/kern/kernel.asm	/^f0100b14:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0100b19	obj/kern/kernel.asm	/^f0100b19:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f0100b1c	obj/kern/kernel.asm	/^f0100b1c:	8b 04 85 80 86 10 f0 	mov    -0xfef7980(,%eax,4),%eax$/;"	l
f0100b23	obj/kern/kernel.asm	/^f0100b23:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100b27	obj/kern/kernel.asm	/^f0100b27:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
f0100b2a	obj/kern/kernel.asm	/^f0100b2a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100b2d	obj/kern/kernel.asm	/^f0100b2d:	e8 ca 59 00 00       	call   f01064fc <strcmp>$/;"	l
f0100b32	obj/kern/kernel.asm	/^f0100b32:	85 c0                	test   %eax,%eax$/;"	l
f0100b34	obj/kern/kernel.asm	/^f0100b34:	75 24                	jne    f0100b5a <monitor+0x140>$/;"	l
f0100b36	obj/kern/kernel.asm	/^f0100b36:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f0100b39	obj/kern/kernel.asm	/^f0100b39:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0100b3c	obj/kern/kernel.asm	/^f0100b3c:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0100b40	obj/kern/kernel.asm	/^f0100b40:	8d 4d a8             	lea    -0x58(%ebp),%ecx$/;"	l
f0100b43	obj/kern/kernel.asm	/^f0100b43:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0100b47	obj/kern/kernel.asm	/^f0100b47:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0100b4a	obj/kern/kernel.asm	/^f0100b4a:	ff 14 85 88 86 10 f0 	call   *-0xfef7978(,%eax,4)$/;"	l
f0100b51	obj/kern/kernel.asm	/^f0100b51:	85 c0                	test   %eax,%eax$/;"	l
f0100b53	obj/kern/kernel.asm	/^f0100b53:	78 25                	js     f0100b7a <monitor+0x160>$/;"	l
f0100b55	obj/kern/kernel.asm	/^f0100b55:	e9 16 ff ff ff       	jmp    f0100a70 <monitor+0x56>$/;"	l
f0100b5a	obj/kern/kernel.asm	/^f0100b5a:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100b5d	obj/kern/kernel.asm	/^f0100b5d:	83 fb 03             	cmp    $0x3,%ebx$/;"	l
f0100b60	obj/kern/kernel.asm	/^f0100b60:	75 b7                	jne    f0100b19 <monitor+0xff>$/;"	l
f0100b62	obj/kern/kernel.asm	/^f0100b62:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
f0100b65	obj/kern/kernel.asm	/^f0100b65:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100b69	obj/kern/kernel.asm	/^f0100b69:	c7 04 24 98 84 10 f0 	movl   $0xf0108498,(%esp)$/;"	l
f0100b70	obj/kern/kernel.asm	/^f0100b70:	e8 57 34 00 00       	call   f0103fcc <cprintf>$/;"	l
f0100b75	obj/kern/kernel.asm	/^f0100b75:	e9 f6 fe ff ff       	jmp    f0100a70 <monitor+0x56>$/;"	l
f0100b7a	obj/kern/kernel.asm	/^f0100b7a:	83 c4 5c             	add    $0x5c,%esp$/;"	l
f0100b7d	obj/kern/kernel.asm	/^f0100b7d:	5b                   	pop    %ebx$/;"	l
f0100b7e	obj/kern/kernel.asm	/^f0100b7e:	5e                   	pop    %esi$/;"	l
f0100b7f	obj/kern/kernel.asm	/^f0100b7f:	5f                   	pop    %edi$/;"	l
f0100b80	obj/kern/kernel.asm	/^f0100b80:	5d                   	pop    %ebp$/;"	l
f0100b81	obj/kern/kernel.asm	/^f0100b81:	c3                   	ret    $/;"	l
f0100b82	obj/kern/kernel.asm	/^f0100b82:	66 90                	xchg   %ax,%ax$/;"	l
f0100b84	obj/kern/kernel.asm	/^f0100b84:	66 90                	xchg   %ax,%ax$/;"	l
f0100b86	obj/kern/kernel.asm	/^f0100b86:	66 90                	xchg   %ax,%ax$/;"	l
f0100b88	obj/kern/kernel.asm	/^f0100b88:	66 90                	xchg   %ax,%ax$/;"	l
f0100b8a	obj/kern/kernel.asm	/^f0100b8a:	66 90                	xchg   %ax,%ax$/;"	l
f0100b8c	obj/kern/kernel.asm	/^f0100b8c:	66 90                	xchg   %ax,%ax$/;"	l
f0100b8e	obj/kern/kernel.asm	/^f0100b8e:	66 90                	xchg   %ax,%ax$/;"	l
f0100b90	obj/kern/kernel.asm	/^f0100b90 <page2kva>:$/;"	l
f0100b90	obj/kern/kernel.asm	/^f0100b90:	2b 05 9c 9e 2b f0    	sub    0xf02b9e9c,%eax$/;"	l
f0100b96	obj/kern/kernel.asm	/^f0100b96:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100b99	obj/kern/kernel.asm	/^f0100b99:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100b9c	obj/kern/kernel.asm	/^f0100b9c:	89 c2                	mov    %eax,%edx$/;"	l
f0100b9e	obj/kern/kernel.asm	/^f0100b9e:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100ba1	obj/kern/kernel.asm	/^f0100ba1:	3b 15 94 9e 2b f0    	cmp    0xf02b9e94,%edx$/;"	l
f0100ba7	obj/kern/kernel.asm	/^f0100ba7:	72 26                	jb     f0100bcf <page2kva+0x3f>$/;"	l
f0100ba9	obj/kern/kernel.asm	/^f0100ba9:	55                   	push   %ebp$/;"	l
f0100baa	obj/kern/kernel.asm	/^f0100baa:	89 e5                	mov    %esp,%ebp$/;"	l
f0100bac	obj/kern/kernel.asm	/^f0100bac:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100baf	obj/kern/kernel.asm	/^f0100baf:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100bb3	obj/kern/kernel.asm	/^f0100bb3:	c7 44 24 08 a4 80 10 	movl   $0xf01080a4,0x8(%esp)$/;"	l
f0100bba	obj/kern/kernel.asm	/^f0100bba:	f0 $/;"	l
f0100bbb	obj/kern/kernel.asm	/^f0100bbb:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0100bc2	obj/kern/kernel.asm	/^f0100bc2:	00 $/;"	l
f0100bc3	obj/kern/kernel.asm	/^f0100bc3:	c7 04 24 fd 8f 10 f0 	movl   $0xf0108ffd,(%esp)$/;"	l
f0100bca	obj/kern/kernel.asm	/^f0100bca:	e8 71 f4 ff ff       	call   f0100040 <_panic>$/;"	l
f0100bcf	obj/kern/kernel.asm	/^f0100bcf:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0100bd4	obj/kern/kernel.asm	/^f0100bd4:	c3                   	ret    $/;"	l
f0100bd5	obj/kern/kernel.asm	/^f0100bd5 <check_va2pa>:$/;"	l
f0100bd5	obj/kern/kernel.asm	/^f0100bd5:	89 d1                	mov    %edx,%ecx$/;"	l
f0100bd7	obj/kern/kernel.asm	/^f0100bd7:	c1 e9 16             	shr    $0x16,%ecx$/;"	l
f0100bda	obj/kern/kernel.asm	/^f0100bda:	8b 04 88             	mov    (%eax,%ecx,4),%eax$/;"	l
f0100bdd	obj/kern/kernel.asm	/^f0100bdd:	a8 01                	test   $0x1,%al$/;"	l
f0100bdf	obj/kern/kernel.asm	/^f0100bdf:	74 5d                	je     f0100c3e <check_va2pa+0x69>$/;"	l
f0100be1	obj/kern/kernel.asm	/^f0100be1:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100be6	obj/kern/kernel.asm	/^f0100be6:	89 c1                	mov    %eax,%ecx$/;"	l
f0100be8	obj/kern/kernel.asm	/^f0100be8:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0100beb	obj/kern/kernel.asm	/^f0100beb:	3b 0d 94 9e 2b f0    	cmp    0xf02b9e94,%ecx$/;"	l
f0100bf1	obj/kern/kernel.asm	/^f0100bf1:	72 26                	jb     f0100c19 <check_va2pa+0x44>$/;"	l
f0100bf3	obj/kern/kernel.asm	/^f0100bf3:	55                   	push   %ebp$/;"	l
f0100bf4	obj/kern/kernel.asm	/^f0100bf4:	89 e5                	mov    %esp,%ebp$/;"	l
f0100bf6	obj/kern/kernel.asm	/^f0100bf6:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100bf9	obj/kern/kernel.asm	/^f0100bf9:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100bfd	obj/kern/kernel.asm	/^f0100bfd:	c7 44 24 08 a4 80 10 	movl   $0xf01080a4,0x8(%esp)$/;"	l
f0100c04	obj/kern/kernel.asm	/^f0100c04:	f0 $/;"	l
f0100c05	obj/kern/kernel.asm	/^f0100c05:	c7 44 24 04 7c 03 00 	movl   $0x37c,0x4(%esp)$/;"	l
f0100c0c	obj/kern/kernel.asm	/^f0100c0c:	00 $/;"	l
f0100c0d	obj/kern/kernel.asm	/^f0100c0d:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0100c14	obj/kern/kernel.asm	/^f0100c14:	e8 27 f4 ff ff       	call   f0100040 <_panic>$/;"	l
f0100c19	obj/kern/kernel.asm	/^f0100c19:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100c1c	obj/kern/kernel.asm	/^f0100c1c:	81 e2 ff 03 00 00    	and    $0x3ff,%edx$/;"	l
f0100c22	obj/kern/kernel.asm	/^f0100c22:	8b 84 90 00 00 00 f0 	mov    -0x10000000(%eax,%edx,4),%eax$/;"	l
f0100c29	obj/kern/kernel.asm	/^f0100c29:	89 c2                	mov    %eax,%edx$/;"	l
f0100c2b	obj/kern/kernel.asm	/^f0100c2b:	83 e2 01             	and    $0x1,%edx$/;"	l
f0100c2e	obj/kern/kernel.asm	/^f0100c2e:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100c33	obj/kern/kernel.asm	/^f0100c33:	85 d2                	test   %edx,%edx$/;"	l
f0100c35	obj/kern/kernel.asm	/^f0100c35:	ba ff ff ff ff       	mov    $0xffffffff,%edx$/;"	l
f0100c3a	obj/kern/kernel.asm	/^f0100c3a:	0f 44 c2             	cmove  %edx,%eax$/;"	l
f0100c3d	obj/kern/kernel.asm	/^f0100c3d:	c3                   	ret    $/;"	l
f0100c3e	obj/kern/kernel.asm	/^f0100c3e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100c43	obj/kern/kernel.asm	/^f0100c43:	c3                   	ret    $/;"	l
f0100c44	obj/kern/kernel.asm	/^f0100c44 <boot_alloc>:$/;"	l
f0100c44	obj/kern/kernel.asm	/^f0100c44:	55                   	push   %ebp$/;"	l
f0100c45	obj/kern/kernel.asm	/^f0100c45:	89 e5                	mov    %esp,%ebp$/;"	l
f0100c47	obj/kern/kernel.asm	/^f0100c47:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100c4a	obj/kern/kernel.asm	/^f0100c4a:	83 3d 38 92 2b f0 00 	cmpl   $0x0,0xf02b9238$/;"	l
f0100c51	obj/kern/kernel.asm	/^f0100c51:	75 11                	jne    f0100c64 <boot_alloc+0x20>$/;"	l
f0100c53	obj/kern/kernel.asm	/^f0100c53:	ba 3f c4 2f f0       	mov    $0xf02fc43f,%edx$/;"	l
f0100c58	obj/kern/kernel.asm	/^f0100c58:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0100c5e	obj/kern/kernel.asm	/^f0100c5e:	89 15 38 92 2b f0    	mov    %edx,0xf02b9238$/;"	l
f0100c64	obj/kern/kernel.asm	/^f0100c64:	85 c0                	test   %eax,%eax$/;"	l
f0100c66	obj/kern/kernel.asm	/^f0100c66:	75 07                	jne    f0100c6f <boot_alloc+0x2b>$/;"	l
f0100c68	obj/kern/kernel.asm	/^f0100c68:	a1 38 92 2b f0       	mov    0xf02b9238,%eax$/;"	l
f0100c6d	obj/kern/kernel.asm	/^f0100c6d:	eb 72                	jmp    f0100ce1 <boot_alloc+0x9d>$/;"	l
f0100c6f	obj/kern/kernel.asm	/^f0100c6f:	8b 0d 38 92 2b f0    	mov    0xf02b9238,%ecx$/;"	l
f0100c75	obj/kern/kernel.asm	/^f0100c75:	8d 14 01             	lea    (%ecx,%eax,1),%edx$/;"	l
f0100c78	obj/kern/kernel.asm	/^f0100c78:	81 fa ff ff ff ef    	cmp    $0xefffffff,%edx$/;"	l
f0100c7e	obj/kern/kernel.asm	/^f0100c7e:	77 20                	ja     f0100ca0 <boot_alloc+0x5c>$/;"	l
f0100c80	obj/kern/kernel.asm	/^f0100c80:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0100c84	obj/kern/kernel.asm	/^f0100c84:	c7 44 24 08 c8 80 10 	movl   $0xf01080c8,0x8(%esp)$/;"	l
f0100c8b	obj/kern/kernel.asm	/^f0100c8b:	f0 $/;"	l
f0100c8c	obj/kern/kernel.asm	/^f0100c8c:	c7 44 24 04 69 00 00 	movl   $0x69,0x4(%esp)$/;"	l
f0100c93	obj/kern/kernel.asm	/^f0100c93:	00 $/;"	l
f0100c94	obj/kern/kernel.asm	/^f0100c94:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0100c9b	obj/kern/kernel.asm	/^f0100c9b:	e8 a0 f3 ff ff       	call   f0100040 <_panic>$/;"	l
f0100ca0	obj/kern/kernel.asm	/^f0100ca0:	8d 82 00 00 00 10    	lea    0x10000000(%edx),%eax$/;"	l
f0100ca6	obj/kern/kernel.asm	/^f0100ca6:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0100ca9	obj/kern/kernel.asm	/^f0100ca9:	3b 05 94 9e 2b f0    	cmp    0xf02b9e94,%eax$/;"	l
f0100caf	obj/kern/kernel.asm	/^f0100caf:	76 1c                	jbe    f0100ccd <boot_alloc+0x89>$/;"	l
f0100cb1	obj/kern/kernel.asm	/^f0100cb1:	c7 44 24 08 17 90 10 	movl   $0xf0109017,0x8(%esp)$/;"	l
f0100cb8	obj/kern/kernel.asm	/^f0100cb8:	f0 $/;"	l
f0100cb9	obj/kern/kernel.asm	/^f0100cb9:	c7 44 24 04 6a 00 00 	movl   $0x6a,0x4(%esp)$/;"	l
f0100cc0	obj/kern/kernel.asm	/^f0100cc0:	00 $/;"	l
f0100cc1	obj/kern/kernel.asm	/^f0100cc1:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0100cc8	obj/kern/kernel.asm	/^f0100cc8:	e8 73 f3 ff ff       	call   f0100040 <_panic>$/;"	l
f0100ccd	obj/kern/kernel.asm	/^f0100ccd:	81 c2 ff 0f 00 00    	add    $0xfff,%edx$/;"	l
f0100cd3	obj/kern/kernel.asm	/^f0100cd3:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0100cd9	obj/kern/kernel.asm	/^f0100cd9:	89 15 38 92 2b f0    	mov    %edx,0xf02b9238$/;"	l
f0100cdf	obj/kern/kernel.asm	/^f0100cdf:	89 c8                	mov    %ecx,%eax$/;"	l
f0100ce1	obj/kern/kernel.asm	/^f0100ce1:	c9                   	leave  $/;"	l
f0100ce2	obj/kern/kernel.asm	/^f0100ce2:	c3                   	ret    $/;"	l
f0100ce3	obj/kern/kernel.asm	/^f0100ce3 <check_page_free_list>:$/;"	l
f0100ce3	obj/kern/kernel.asm	/^f0100ce3:	55                   	push   %ebp$/;"	l
f0100ce4	obj/kern/kernel.asm	/^f0100ce4:	89 e5                	mov    %esp,%ebp$/;"	l
f0100ce6	obj/kern/kernel.asm	/^f0100ce6:	57                   	push   %edi$/;"	l
f0100ce7	obj/kern/kernel.asm	/^f0100ce7:	56                   	push   %esi$/;"	l
f0100ce8	obj/kern/kernel.asm	/^f0100ce8:	53                   	push   %ebx$/;"	l
f0100ce9	obj/kern/kernel.asm	/^f0100ce9:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f0100cec	obj/kern/kernel.asm	/^f0100cec:	84 c0                	test   %al,%al$/;"	l
f0100cee	obj/kern/kernel.asm	/^f0100cee:	0f 85 31 03 00 00    	jne    f0101025 <check_page_free_list+0x342>$/;"	l
f0100cf4	obj/kern/kernel.asm	/^f0100cf4:	e9 3e 03 00 00       	jmp    f0101037 <check_page_free_list+0x354>$/;"	l
f0100cf9	obj/kern/kernel.asm	/^f0100cf9:	c7 44 24 08 a4 86 10 	movl   $0xf01086a4,0x8(%esp)$/;"	l
f0100d00	obj/kern/kernel.asm	/^f0100d00:	f0 $/;"	l
f0100d01	obj/kern/kernel.asm	/^f0100d01:	c7 44 24 04 b1 02 00 	movl   $0x2b1,0x4(%esp)$/;"	l
f0100d08	obj/kern/kernel.asm	/^f0100d08:	00 $/;"	l
f0100d09	obj/kern/kernel.asm	/^f0100d09:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0100d10	obj/kern/kernel.asm	/^f0100d10:	e8 2b f3 ff ff       	call   f0100040 <_panic>$/;"	l
f0100d15	obj/kern/kernel.asm	/^f0100d15:	8d 55 d8             	lea    -0x28(%ebp),%edx$/;"	l
f0100d18	obj/kern/kernel.asm	/^f0100d18:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f0100d1b	obj/kern/kernel.asm	/^f0100d1b:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f0100d1e	obj/kern/kernel.asm	/^f0100d1e:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0100d21	obj/kern/kernel.asm	/^f0100d21:	89 c2                	mov    %eax,%edx$/;"	l
f0100d23	obj/kern/kernel.asm	/^f0100d23:	2b 15 9c 9e 2b f0    	sub    0xf02b9e9c,%edx$/;"	l
f0100d29	obj/kern/kernel.asm	/^f0100d29:	f7 c2 00 e0 7f 00    	test   $0x7fe000,%edx$/;"	l
f0100d2f	obj/kern/kernel.asm	/^f0100d2f:	0f 95 c2             	setne  %dl$/;"	l
f0100d32	obj/kern/kernel.asm	/^f0100d32:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0100d35	obj/kern/kernel.asm	/^f0100d35:	8b 4c 95 e0          	mov    -0x20(%ebp,%edx,4),%ecx$/;"	l
f0100d39	obj/kern/kernel.asm	/^f0100d39:	89 01                	mov    %eax,(%ecx)$/;"	l
f0100d3b	obj/kern/kernel.asm	/^f0100d3b:	89 44 95 e0          	mov    %eax,-0x20(%ebp,%edx,4)$/;"	l
f0100d3f	obj/kern/kernel.asm	/^f0100d3f:	8b 00                	mov    (%eax),%eax$/;"	l
f0100d41	obj/kern/kernel.asm	/^f0100d41:	85 c0                	test   %eax,%eax$/;"	l
f0100d43	obj/kern/kernel.asm	/^f0100d43:	75 dc                	jne    f0100d21 <check_page_free_list+0x3e>$/;"	l
f0100d45	obj/kern/kernel.asm	/^f0100d45:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0100d48	obj/kern/kernel.asm	/^f0100d48:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0100d4e	obj/kern/kernel.asm	/^f0100d4e:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0100d51	obj/kern/kernel.asm	/^f0100d51:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0100d54	obj/kern/kernel.asm	/^f0100d54:	89 10                	mov    %edx,(%eax)$/;"	l
f0100d56	obj/kern/kernel.asm	/^f0100d56:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0100d59	obj/kern/kernel.asm	/^f0100d59:	a3 40 92 2b f0       	mov    %eax,0xf02b9240$/;"	l
f0100d5e	obj/kern/kernel.asm	/^f0100d5e:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
f0100d63	obj/kern/kernel.asm	/^f0100d63:	8b 1d 40 92 2b f0    	mov    0xf02b9240,%ebx$/;"	l
f0100d69	obj/kern/kernel.asm	/^f0100d69:	eb 63                	jmp    f0100dce <check_page_free_list+0xeb>$/;"	l
f0100d6b	obj/kern/kernel.asm	/^f0100d6b:	89 d8                	mov    %ebx,%eax$/;"	l
f0100d6d	obj/kern/kernel.asm	/^f0100d6d:	2b 05 9c 9e 2b f0    	sub    0xf02b9e9c,%eax$/;"	l
f0100d73	obj/kern/kernel.asm	/^f0100d73:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100d76	obj/kern/kernel.asm	/^f0100d76:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100d79	obj/kern/kernel.asm	/^f0100d79:	89 c2                	mov    %eax,%edx$/;"	l
f0100d7b	obj/kern/kernel.asm	/^f0100d7b:	c1 ea 16             	shr    $0x16,%edx$/;"	l
f0100d7e	obj/kern/kernel.asm	/^f0100d7e:	39 f2                	cmp    %esi,%edx$/;"	l
f0100d80	obj/kern/kernel.asm	/^f0100d80:	73 4a                	jae    f0100dcc <check_page_free_list+0xe9>$/;"	l
f0100d82	obj/kern/kernel.asm	/^f0100d82:	89 c2                	mov    %eax,%edx$/;"	l
f0100d84	obj/kern/kernel.asm	/^f0100d84:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100d87	obj/kern/kernel.asm	/^f0100d87:	3b 15 94 9e 2b f0    	cmp    0xf02b9e94,%edx$/;"	l
f0100d8d	obj/kern/kernel.asm	/^f0100d8d:	72 20                	jb     f0100daf <check_page_free_list+0xcc>$/;"	l
f0100d8f	obj/kern/kernel.asm	/^f0100d8f:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100d93	obj/kern/kernel.asm	/^f0100d93:	c7 44 24 08 a4 80 10 	movl   $0xf01080a4,0x8(%esp)$/;"	l
f0100d9a	obj/kern/kernel.asm	/^f0100d9a:	f0 $/;"	l
f0100d9b	obj/kern/kernel.asm	/^f0100d9b:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0100da2	obj/kern/kernel.asm	/^f0100da2:	00 $/;"	l
f0100da3	obj/kern/kernel.asm	/^f0100da3:	c7 04 24 fd 8f 10 f0 	movl   $0xf0108ffd,(%esp)$/;"	l
f0100daa	obj/kern/kernel.asm	/^f0100daa:	e8 91 f2 ff ff       	call   f0100040 <_panic>$/;"	l
f0100daf	obj/kern/kernel.asm	/^f0100daf:	c7 44 24 08 80 00 00 	movl   $0x80,0x8(%esp)$/;"	l
f0100db6	obj/kern/kernel.asm	/^f0100db6:	00 $/;"	l
f0100db7	obj/kern/kernel.asm	/^f0100db7:	c7 44 24 04 97 00 00 	movl   $0x97,0x4(%esp)$/;"	l
f0100dbe	obj/kern/kernel.asm	/^f0100dbe:	00 $/;"	l
f0100dbf	obj/kern/kernel.asm	/^f0100dbf:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0100dc4	obj/kern/kernel.asm	/^f0100dc4:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100dc7	obj/kern/kernel.asm	/^f0100dc7:	e8 cb 57 00 00       	call   f0106597 <memset>$/;"	l
f0100dcc	obj/kern/kernel.asm	/^f0100dcc:	8b 1b                	mov    (%ebx),%ebx$/;"	l
f0100dce	obj/kern/kernel.asm	/^f0100dce:	85 db                	test   %ebx,%ebx$/;"	l
f0100dd0	obj/kern/kernel.asm	/^f0100dd0:	75 99                	jne    f0100d6b <check_page_free_list+0x88>$/;"	l
f0100dd2	obj/kern/kernel.asm	/^f0100dd2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100dd7	obj/kern/kernel.asm	/^f0100dd7:	e8 68 fe ff ff       	call   f0100c44 <boot_alloc>$/;"	l
f0100ddc	obj/kern/kernel.asm	/^f0100ddc:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f0100ddf	obj/kern/kernel.asm	/^f0100ddf:	8b 15 40 92 2b f0    	mov    0xf02b9240,%edx$/;"	l
f0100de5	obj/kern/kernel.asm	/^f0100de5:	8b 0d 9c 9e 2b f0    	mov    0xf02b9e9c,%ecx$/;"	l
f0100deb	obj/kern/kernel.asm	/^f0100deb:	a1 94 9e 2b f0       	mov    0xf02b9e94,%eax$/;"	l
f0100df0	obj/kern/kernel.asm	/^f0100df0:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f0100df3	obj/kern/kernel.asm	/^f0100df3:	8d 04 c1             	lea    (%ecx,%eax,8),%eax$/;"	l
f0100df6	obj/kern/kernel.asm	/^f0100df6:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0100df9	obj/kern/kernel.asm	/^f0100df9:	89 4d cc             	mov    %ecx,-0x34(%ebp)$/;"	l
f0100dfc	obj/kern/kernel.asm	/^f0100dfc:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0100e01	obj/kern/kernel.asm	/^f0100e01:	89 4d d4             	mov    %ecx,-0x2c(%ebp)$/;"	l
f0100e04	obj/kern/kernel.asm	/^f0100e04:	e9 c4 01 00 00       	jmp    f0100fcd <check_page_free_list+0x2ea>$/;"	l
f0100e09	obj/kern/kernel.asm	/^f0100e09:	3b 55 d4             	cmp    -0x2c(%ebp),%edx$/;"	l
f0100e0c	obj/kern/kernel.asm	/^f0100e0c:	73 24                	jae    f0100e32 <check_page_free_list+0x14f>$/;"	l
f0100e0e	obj/kern/kernel.asm	/^f0100e0e:	c7 44 24 0c 27 90 10 	movl   $0xf0109027,0xc(%esp)$/;"	l
f0100e15	obj/kern/kernel.asm	/^f0100e15:	f0 $/;"	l
f0100e16	obj/kern/kernel.asm	/^f0100e16:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0100e1d	obj/kern/kernel.asm	/^f0100e1d:	f0 $/;"	l
f0100e1e	obj/kern/kernel.asm	/^f0100e1e:	c7 44 24 04 cb 02 00 	movl   $0x2cb,0x4(%esp)$/;"	l
f0100e25	obj/kern/kernel.asm	/^f0100e25:	00 $/;"	l
f0100e26	obj/kern/kernel.asm	/^f0100e26:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0100e2d	obj/kern/kernel.asm	/^f0100e2d:	e8 0e f2 ff ff       	call   f0100040 <_panic>$/;"	l
f0100e32	obj/kern/kernel.asm	/^f0100e32:	3b 55 d0             	cmp    -0x30(%ebp),%edx$/;"	l
f0100e35	obj/kern/kernel.asm	/^f0100e35:	72 24                	jb     f0100e5b <check_page_free_list+0x178>$/;"	l
f0100e37	obj/kern/kernel.asm	/^f0100e37:	c7 44 24 0c 48 90 10 	movl   $0xf0109048,0xc(%esp)$/;"	l
f0100e3e	obj/kern/kernel.asm	/^f0100e3e:	f0 $/;"	l
f0100e3f	obj/kern/kernel.asm	/^f0100e3f:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0100e46	obj/kern/kernel.asm	/^f0100e46:	f0 $/;"	l
f0100e47	obj/kern/kernel.asm	/^f0100e47:	c7 44 24 04 cc 02 00 	movl   $0x2cc,0x4(%esp)$/;"	l
f0100e4e	obj/kern/kernel.asm	/^f0100e4e:	00 $/;"	l
f0100e4f	obj/kern/kernel.asm	/^f0100e4f:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0100e56	obj/kern/kernel.asm	/^f0100e56:	e8 e5 f1 ff ff       	call   f0100040 <_panic>$/;"	l
f0100e5b	obj/kern/kernel.asm	/^f0100e5b:	89 d0                	mov    %edx,%eax$/;"	l
f0100e5d	obj/kern/kernel.asm	/^f0100e5d:	2b 45 cc             	sub    -0x34(%ebp),%eax$/;"	l
f0100e60	obj/kern/kernel.asm	/^f0100e60:	a8 07                	test   $0x7,%al$/;"	l
f0100e62	obj/kern/kernel.asm	/^f0100e62:	74 24                	je     f0100e88 <check_page_free_list+0x1a5>$/;"	l
f0100e64	obj/kern/kernel.asm	/^f0100e64:	c7 44 24 0c c8 86 10 	movl   $0xf01086c8,0xc(%esp)$/;"	l
f0100e6b	obj/kern/kernel.asm	/^f0100e6b:	f0 $/;"	l
f0100e6c	obj/kern/kernel.asm	/^f0100e6c:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0100e73	obj/kern/kernel.asm	/^f0100e73:	f0 $/;"	l
f0100e74	obj/kern/kernel.asm	/^f0100e74:	c7 44 24 04 cd 02 00 	movl   $0x2cd,0x4(%esp)$/;"	l
f0100e7b	obj/kern/kernel.asm	/^f0100e7b:	00 $/;"	l
f0100e7c	obj/kern/kernel.asm	/^f0100e7c:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0100e83	obj/kern/kernel.asm	/^f0100e83:	e8 b8 f1 ff ff       	call   f0100040 <_panic>$/;"	l
f0100e88	obj/kern/kernel.asm	/^f0100e88:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100e8b	obj/kern/kernel.asm	/^f0100e8b:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100e8e	obj/kern/kernel.asm	/^f0100e8e:	85 c0                	test   %eax,%eax$/;"	l
f0100e90	obj/kern/kernel.asm	/^f0100e90:	75 24                	jne    f0100eb6 <check_page_free_list+0x1d3>$/;"	l
f0100e92	obj/kern/kernel.asm	/^f0100e92:	c7 44 24 0c 5c 90 10 	movl   $0xf010905c,0xc(%esp)$/;"	l
f0100e99	obj/kern/kernel.asm	/^f0100e99:	f0 $/;"	l
f0100e9a	obj/kern/kernel.asm	/^f0100e9a:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0100ea1	obj/kern/kernel.asm	/^f0100ea1:	f0 $/;"	l
f0100ea2	obj/kern/kernel.asm	/^f0100ea2:	c7 44 24 04 d0 02 00 	movl   $0x2d0,0x4(%esp)$/;"	l
f0100ea9	obj/kern/kernel.asm	/^f0100ea9:	00 $/;"	l
f0100eaa	obj/kern/kernel.asm	/^f0100eaa:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0100eb1	obj/kern/kernel.asm	/^f0100eb1:	e8 8a f1 ff ff       	call   f0100040 <_panic>$/;"	l
f0100eb6	obj/kern/kernel.asm	/^f0100eb6:	3d 00 00 0a 00       	cmp    $0xa0000,%eax$/;"	l
f0100ebb	obj/kern/kernel.asm	/^f0100ebb:	75 24                	jne    f0100ee1 <check_page_free_list+0x1fe>$/;"	l
f0100ebd	obj/kern/kernel.asm	/^f0100ebd:	c7 44 24 0c 6d 90 10 	movl   $0xf010906d,0xc(%esp)$/;"	l
f0100ec4	obj/kern/kernel.asm	/^f0100ec4:	f0 $/;"	l
f0100ec5	obj/kern/kernel.asm	/^f0100ec5:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0100ecc	obj/kern/kernel.asm	/^f0100ecc:	f0 $/;"	l
f0100ecd	obj/kern/kernel.asm	/^f0100ecd:	c7 44 24 04 d1 02 00 	movl   $0x2d1,0x4(%esp)$/;"	l
f0100ed4	obj/kern/kernel.asm	/^f0100ed4:	00 $/;"	l
f0100ed5	obj/kern/kernel.asm	/^f0100ed5:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0100edc	obj/kern/kernel.asm	/^f0100edc:	e8 5f f1 ff ff       	call   f0100040 <_panic>$/;"	l
f0100ee1	obj/kern/kernel.asm	/^f0100ee1:	3d 00 f0 0f 00       	cmp    $0xff000,%eax$/;"	l
f0100ee6	obj/kern/kernel.asm	/^f0100ee6:	75 24                	jne    f0100f0c <check_page_free_list+0x229>$/;"	l
f0100ee8	obj/kern/kernel.asm	/^f0100ee8:	c7 44 24 0c fc 86 10 	movl   $0xf01086fc,0xc(%esp)$/;"	l
f0100eef	obj/kern/kernel.asm	/^f0100eef:	f0 $/;"	l
f0100ef0	obj/kern/kernel.asm	/^f0100ef0:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0100ef7	obj/kern/kernel.asm	/^f0100ef7:	f0 $/;"	l
f0100ef8	obj/kern/kernel.asm	/^f0100ef8:	c7 44 24 04 d2 02 00 	movl   $0x2d2,0x4(%esp)$/;"	l
f0100eff	obj/kern/kernel.asm	/^f0100eff:	00 $/;"	l
f0100f00	obj/kern/kernel.asm	/^f0100f00:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0100f07	obj/kern/kernel.asm	/^f0100f07:	e8 34 f1 ff ff       	call   f0100040 <_panic>$/;"	l
f0100f0c	obj/kern/kernel.asm	/^f0100f0c:	3d 00 00 10 00       	cmp    $0x100000,%eax$/;"	l
f0100f11	obj/kern/kernel.asm	/^f0100f11:	75 24                	jne    f0100f37 <check_page_free_list+0x254>$/;"	l
f0100f13	obj/kern/kernel.asm	/^f0100f13:	c7 44 24 0c 86 90 10 	movl   $0xf0109086,0xc(%esp)$/;"	l
f0100f1a	obj/kern/kernel.asm	/^f0100f1a:	f0 $/;"	l
f0100f1b	obj/kern/kernel.asm	/^f0100f1b:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0100f22	obj/kern/kernel.asm	/^f0100f22:	f0 $/;"	l
f0100f23	obj/kern/kernel.asm	/^f0100f23:	c7 44 24 04 d3 02 00 	movl   $0x2d3,0x4(%esp)$/;"	l
f0100f2a	obj/kern/kernel.asm	/^f0100f2a:	00 $/;"	l
f0100f2b	obj/kern/kernel.asm	/^f0100f2b:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0100f32	obj/kern/kernel.asm	/^f0100f32:	e8 09 f1 ff ff       	call   f0100040 <_panic>$/;"	l
f0100f37	obj/kern/kernel.asm	/^f0100f37:	3d ff ff 0f 00       	cmp    $0xfffff,%eax$/;"	l
f0100f3c	obj/kern/kernel.asm	/^f0100f3c:	0f 86 1c 01 00 00    	jbe    f010105e <check_page_free_list+0x37b>$/;"	l
f0100f42	obj/kern/kernel.asm	/^f0100f42:	89 c1                	mov    %eax,%ecx$/;"	l
f0100f44	obj/kern/kernel.asm	/^f0100f44:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0100f47	obj/kern/kernel.asm	/^f0100f47:	39 4d c4             	cmp    %ecx,-0x3c(%ebp)$/;"	l
f0100f4a	obj/kern/kernel.asm	/^f0100f4a:	77 20                	ja     f0100f6c <check_page_free_list+0x289>$/;"	l
f0100f4c	obj/kern/kernel.asm	/^f0100f4c:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100f50	obj/kern/kernel.asm	/^f0100f50:	c7 44 24 08 a4 80 10 	movl   $0xf01080a4,0x8(%esp)$/;"	l
f0100f57	obj/kern/kernel.asm	/^f0100f57:	f0 $/;"	l
f0100f58	obj/kern/kernel.asm	/^f0100f58:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0100f5f	obj/kern/kernel.asm	/^f0100f5f:	00 $/;"	l
f0100f60	obj/kern/kernel.asm	/^f0100f60:	c7 04 24 fd 8f 10 f0 	movl   $0xf0108ffd,(%esp)$/;"	l
f0100f67	obj/kern/kernel.asm	/^f0100f67:	e8 d4 f0 ff ff       	call   f0100040 <_panic>$/;"	l
f0100f6c	obj/kern/kernel.asm	/^f0100f6c:	8d 88 00 00 00 f0    	lea    -0x10000000(%eax),%ecx$/;"	l
f0100f72	obj/kern/kernel.asm	/^f0100f72:	39 4d c8             	cmp    %ecx,-0x38(%ebp)$/;"	l
f0100f75	obj/kern/kernel.asm	/^f0100f75:	0f 86 d3 00 00 00    	jbe    f010104e <check_page_free_list+0x36b>$/;"	l
f0100f7b	obj/kern/kernel.asm	/^f0100f7b:	c7 44 24 0c 20 87 10 	movl   $0xf0108720,0xc(%esp)$/;"	l
f0100f82	obj/kern/kernel.asm	/^f0100f82:	f0 $/;"	l
f0100f83	obj/kern/kernel.asm	/^f0100f83:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0100f8a	obj/kern/kernel.asm	/^f0100f8a:	f0 $/;"	l
f0100f8b	obj/kern/kernel.asm	/^f0100f8b:	c7 44 24 04 d4 02 00 	movl   $0x2d4,0x4(%esp)$/;"	l
f0100f92	obj/kern/kernel.asm	/^f0100f92:	00 $/;"	l
f0100f93	obj/kern/kernel.asm	/^f0100f93:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0100f9a	obj/kern/kernel.asm	/^f0100f9a:	e8 a1 f0 ff ff       	call   f0100040 <_panic>$/;"	l
f0100f9f	obj/kern/kernel.asm	/^f0100f9f:	c7 44 24 0c a0 90 10 	movl   $0xf01090a0,0xc(%esp)$/;"	l
f0100fa6	obj/kern/kernel.asm	/^f0100fa6:	f0 $/;"	l
f0100fa7	obj/kern/kernel.asm	/^f0100fa7:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0100fae	obj/kern/kernel.asm	/^f0100fae:	f0 $/;"	l
f0100faf	obj/kern/kernel.asm	/^f0100faf:	c7 44 24 04 d6 02 00 	movl   $0x2d6,0x4(%esp)$/;"	l
f0100fb6	obj/kern/kernel.asm	/^f0100fb6:	00 $/;"	l
f0100fb7	obj/kern/kernel.asm	/^f0100fb7:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0100fbe	obj/kern/kernel.asm	/^f0100fbe:	e8 7d f0 ff ff       	call   f0100040 <_panic>$/;"	l
f0100fc3	obj/kern/kernel.asm	/^f0100fc3:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100fc6	obj/kern/kernel.asm	/^f0100fc6:	eb 03                	jmp    f0100fcb <check_page_free_list+0x2e8>$/;"	l
f0100fc8	obj/kern/kernel.asm	/^f0100fc8:	83 c7 01             	add    $0x1,%edi$/;"	l
f0100fcb	obj/kern/kernel.asm	/^f0100fcb:	8b 12                	mov    (%edx),%edx$/;"	l
f0100fcd	obj/kern/kernel.asm	/^f0100fcd:	85 d2                	test   %edx,%edx$/;"	l
f0100fcf	obj/kern/kernel.asm	/^f0100fcf:	0f 85 34 fe ff ff    	jne    f0100e09 <check_page_free_list+0x126>$/;"	l
f0100fd5	obj/kern/kernel.asm	/^f0100fd5:	85 db                	test   %ebx,%ebx$/;"	l
f0100fd7	obj/kern/kernel.asm	/^f0100fd7:	7f 24                	jg     f0100ffd <check_page_free_list+0x31a>$/;"	l
f0100fd9	obj/kern/kernel.asm	/^f0100fd9:	c7 44 24 0c bd 90 10 	movl   $0xf01090bd,0xc(%esp)$/;"	l
f0100fe0	obj/kern/kernel.asm	/^f0100fe0:	f0 $/;"	l
f0100fe1	obj/kern/kernel.asm	/^f0100fe1:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0100fe8	obj/kern/kernel.asm	/^f0100fe8:	f0 $/;"	l
f0100fe9	obj/kern/kernel.asm	/^f0100fe9:	c7 44 24 04 de 02 00 	movl   $0x2de,0x4(%esp)$/;"	l
f0100ff0	obj/kern/kernel.asm	/^f0100ff0:	00 $/;"	l
f0100ff1	obj/kern/kernel.asm	/^f0100ff1:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0100ff8	obj/kern/kernel.asm	/^f0100ff8:	e8 43 f0 ff ff       	call   f0100040 <_panic>$/;"	l
f0100ffd	obj/kern/kernel.asm	/^f0100ffd:	85 ff                	test   %edi,%edi$/;"	l
f0100fff	obj/kern/kernel.asm	/^f0100fff:	7f 6d                	jg     f010106e <check_page_free_list+0x38b>$/;"	l
f0101001	obj/kern/kernel.asm	/^f0101001:	c7 44 24 0c cf 90 10 	movl   $0xf01090cf,0xc(%esp)$/;"	l
f0101008	obj/kern/kernel.asm	/^f0101008:	f0 $/;"	l
f0101009	obj/kern/kernel.asm	/^f0101009:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0101010	obj/kern/kernel.asm	/^f0101010:	f0 $/;"	l
f0101011	obj/kern/kernel.asm	/^f0101011:	c7 44 24 04 df 02 00 	movl   $0x2df,0x4(%esp)$/;"	l
f0101018	obj/kern/kernel.asm	/^f0101018:	00 $/;"	l
f0101019	obj/kern/kernel.asm	/^f0101019:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0101020	obj/kern/kernel.asm	/^f0101020:	e8 1b f0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101025	obj/kern/kernel.asm	/^f0101025:	a1 40 92 2b f0       	mov    0xf02b9240,%eax$/;"	l
f010102a	obj/kern/kernel.asm	/^f010102a:	85 c0                	test   %eax,%eax$/;"	l
f010102c	obj/kern/kernel.asm	/^f010102c:	0f 85 e3 fc ff ff    	jne    f0100d15 <check_page_free_list+0x32>$/;"	l
f0101032	obj/kern/kernel.asm	/^f0101032:	e9 c2 fc ff ff       	jmp    f0100cf9 <check_page_free_list+0x16>$/;"	l
f0101037	obj/kern/kernel.asm	/^f0101037:	83 3d 40 92 2b f0 00 	cmpl   $0x0,0xf02b9240$/;"	l
f010103e	obj/kern/kernel.asm	/^f010103e:	0f 84 b5 fc ff ff    	je     f0100cf9 <check_page_free_list+0x16>$/;"	l
f0101044	obj/kern/kernel.asm	/^f0101044:	be 00 04 00 00       	mov    $0x400,%esi$/;"	l
f0101049	obj/kern/kernel.asm	/^f0101049:	e9 15 fd ff ff       	jmp    f0100d63 <check_page_free_list+0x80>$/;"	l
f010104e	obj/kern/kernel.asm	/^f010104e:	3d 00 70 00 00       	cmp    $0x7000,%eax$/;"	l
f0101053	obj/kern/kernel.asm	/^f0101053:	0f 85 6f ff ff ff    	jne    f0100fc8 <check_page_free_list+0x2e5>$/;"	l
f0101059	obj/kern/kernel.asm	/^f0101059:	e9 41 ff ff ff       	jmp    f0100f9f <check_page_free_list+0x2bc>$/;"	l
f010105e	obj/kern/kernel.asm	/^f010105e:	3d 00 70 00 00       	cmp    $0x7000,%eax$/;"	l
f0101063	obj/kern/kernel.asm	/^f0101063:	0f 85 5a ff ff ff    	jne    f0100fc3 <check_page_free_list+0x2e0>$/;"	l
f0101069	obj/kern/kernel.asm	/^f0101069:	e9 31 ff ff ff       	jmp    f0100f9f <check_page_free_list+0x2bc>$/;"	l
f010106e	obj/kern/kernel.asm	/^f010106e:	83 c4 4c             	add    $0x4c,%esp$/;"	l
f0101071	obj/kern/kernel.asm	/^f0101071:	5b                   	pop    %ebx$/;"	l
f0101072	obj/kern/kernel.asm	/^f0101072:	5e                   	pop    %esi$/;"	l
f0101073	obj/kern/kernel.asm	/^f0101073:	5f                   	pop    %edi$/;"	l
f0101074	obj/kern/kernel.asm	/^f0101074:	5d                   	pop    %ebp$/;"	l
f0101075	obj/kern/kernel.asm	/^f0101075:	c3                   	ret    $/;"	l
f0101076	obj/kern/kernel.asm	/^f0101076 <page_init>:$/;"	l
f0101076	obj/kern/kernel.asm	/^f0101076:	55                   	push   %ebp$/;"	l
f0101077	obj/kern/kernel.asm	/^f0101077:	89 e5                	mov    %esp,%ebp$/;"	l
f0101079	obj/kern/kernel.asm	/^f0101079:	56                   	push   %esi$/;"	l
f010107a	obj/kern/kernel.asm	/^f010107a:	53                   	push   %ebx$/;"	l
f010107b	obj/kern/kernel.asm	/^f010107b:	83 ec 10             	sub    $0x10,%esp$/;"	l
f010107e	obj/kern/kernel.asm	/^f010107e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101083	obj/kern/kernel.asm	/^f0101083:	e8 bc fb ff ff       	call   f0100c44 <boot_alloc>$/;"	l
f0101088	obj/kern/kernel.asm	/^f0101088:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010108d	obj/kern/kernel.asm	/^f010108d:	77 20                	ja     f01010af <page_init+0x39>$/;"	l
f010108f	obj/kern/kernel.asm	/^f010108f:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101093	obj/kern/kernel.asm	/^f0101093:	c7 44 24 08 c8 80 10 	movl   $0xf01080c8,0x8(%esp)$/;"	l
f010109a	obj/kern/kernel.asm	/^f010109a:	f0 $/;"	l
f010109b	obj/kern/kernel.asm	/^f010109b:	c7 44 24 04 44 01 00 	movl   $0x144,0x4(%esp)$/;"	l
f01010a2	obj/kern/kernel.asm	/^f01010a2:	00 $/;"	l
f01010a3	obj/kern/kernel.asm	/^f01010a3:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f01010aa	obj/kern/kernel.asm	/^f01010aa:	e8 91 ef ff ff       	call   f0100040 <_panic>$/;"	l
f01010af	obj/kern/kernel.asm	/^f01010af:	8d 98 00 00 00 10    	lea    0x10000000(%eax),%ebx$/;"	l
f01010b5	obj/kern/kernel.asm	/^f01010b5:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f01010b8	obj/kern/kernel.asm	/^f01010b8:	a1 94 9e 2b f0       	mov    0xf02b9e94,%eax$/;"	l
f01010bd	obj/kern/kernel.asm	/^f01010bd:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
f01010c0	obj/kern/kernel.asm	/^f01010c0:	8b 35 40 92 2b f0    	mov    0xf02b9240,%esi$/;"	l
f01010c6	obj/kern/kernel.asm	/^f01010c6:	8d 0c c5 f8 ff ff ff 	lea    -0x8(,%eax,8),%ecx$/;"	l
f01010cd	obj/kern/kernel.asm	/^f01010cd:	eb 3b                	jmp    f010110a <page_init+0x94>$/;"	l
f01010cf	obj/kern/kernel.asm	/^f01010cf:	89 c8                	mov    %ecx,%eax$/;"	l
f01010d1	obj/kern/kernel.asm	/^f01010d1:	03 05 9c 9e 2b f0    	add    0xf02b9e9c,%eax$/;"	l
f01010d7	obj/kern/kernel.asm	/^f01010d7:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f01010dd	obj/kern/kernel.asm	/^f01010dd:	85 d2                	test   %edx,%edx$/;"	l
f01010df	obj/kern/kernel.asm	/^f01010df:	74 11                	je     f01010f2 <page_init+0x7c>$/;"	l
f01010e1	obj/kern/kernel.asm	/^f01010e1:	39 da                	cmp    %ebx,%edx$/;"	l
f01010e3	obj/kern/kernel.asm	/^f01010e3:	7d 08                	jge    f01010ed <page_init+0x77>$/;"	l
f01010e5	obj/kern/kernel.asm	/^f01010e5:	81 fa 9f 00 00 00    	cmp    $0x9f,%edx$/;"	l
f01010eb	obj/kern/kernel.asm	/^f01010eb:	7f 05                	jg     f01010f2 <page_init+0x7c>$/;"	l
f01010ed	obj/kern/kernel.asm	/^f01010ed:	83 fa 07             	cmp    $0x7,%edx$/;"	l
f01010f0	obj/kern/kernel.asm	/^f01010f0:	75 08                	jne    f01010fa <page_init+0x84>$/;"	l
f01010f2	obj/kern/kernel.asm	/^f01010f2:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01010f8	obj/kern/kernel.asm	/^f01010f8:	eb 0a                	jmp    f0101104 <page_init+0x8e>$/;"	l
f01010fa	obj/kern/kernel.asm	/^f01010fa:	89 30                	mov    %esi,(%eax)$/;"	l
f01010fc	obj/kern/kernel.asm	/^f01010fc:	89 ce                	mov    %ecx,%esi$/;"	l
f01010fe	obj/kern/kernel.asm	/^f01010fe:	03 35 9c 9e 2b f0    	add    0xf02b9e9c,%esi$/;"	l
f0101104	obj/kern/kernel.asm	/^f0101104:	83 ea 01             	sub    $0x1,%edx$/;"	l
f0101107	obj/kern/kernel.asm	/^f0101107:	83 e9 08             	sub    $0x8,%ecx$/;"	l
f010110a	obj/kern/kernel.asm	/^f010110a:	85 d2                	test   %edx,%edx$/;"	l
f010110c	obj/kern/kernel.asm	/^f010110c:	79 c1                	jns    f01010cf <page_init+0x59>$/;"	l
f010110e	obj/kern/kernel.asm	/^f010110e:	89 35 40 92 2b f0    	mov    %esi,0xf02b9240$/;"	l
f0101114	obj/kern/kernel.asm	/^f0101114:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101117	obj/kern/kernel.asm	/^f0101117:	5b                   	pop    %ebx$/;"	l
f0101118	obj/kern/kernel.asm	/^f0101118:	5e                   	pop    %esi$/;"	l
f0101119	obj/kern/kernel.asm	/^f0101119:	5d                   	pop    %ebp$/;"	l
f010111a	obj/kern/kernel.asm	/^f010111a:	c3                   	ret    $/;"	l
f010111b	obj/kern/kernel.asm	/^f010111b <page_alloc>:$/;"	l
f010111b	obj/kern/kernel.asm	/^f010111b:	55                   	push   %ebp$/;"	l
f010111c	obj/kern/kernel.asm	/^f010111c:	89 e5                	mov    %esp,%ebp$/;"	l
f010111e	obj/kern/kernel.asm	/^f010111e:	53                   	push   %ebx$/;"	l
f010111f	obj/kern/kernel.asm	/^f010111f:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0101122	obj/kern/kernel.asm	/^f0101122:	8b 1d 40 92 2b f0    	mov    0xf02b9240,%ebx$/;"	l
f0101128	obj/kern/kernel.asm	/^f0101128:	85 db                	test   %ebx,%ebx$/;"	l
f010112a	obj/kern/kernel.asm	/^f010112a:	74 74                	je     f01011a0 <page_alloc+0x85>$/;"	l
f010112c	obj/kern/kernel.asm	/^f010112c:	89 d8                	mov    %ebx,%eax$/;"	l
f010112e	obj/kern/kernel.asm	/^f010112e:	2b 05 9c 9e 2b f0    	sub    0xf02b9e9c,%eax$/;"	l
f0101134	obj/kern/kernel.asm	/^f0101134:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101137	obj/kern/kernel.asm	/^f0101137:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010113a	obj/kern/kernel.asm	/^f010113a:	89 c2                	mov    %eax,%edx$/;"	l
f010113c	obj/kern/kernel.asm	/^f010113c:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f010113f	obj/kern/kernel.asm	/^f010113f:	3b 15 94 9e 2b f0    	cmp    0xf02b9e94,%edx$/;"	l
f0101145	obj/kern/kernel.asm	/^f0101145:	72 20                	jb     f0101167 <page_alloc+0x4c>$/;"	l
f0101147	obj/kern/kernel.asm	/^f0101147:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010114b	obj/kern/kernel.asm	/^f010114b:	c7 44 24 08 a4 80 10 	movl   $0xf01080a4,0x8(%esp)$/;"	l
f0101152	obj/kern/kernel.asm	/^f0101152:	f0 $/;"	l
f0101153	obj/kern/kernel.asm	/^f0101153:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f010115a	obj/kern/kernel.asm	/^f010115a:	00 $/;"	l
f010115b	obj/kern/kernel.asm	/^f010115b:	c7 04 24 fd 8f 10 f0 	movl   $0xf0108ffd,(%esp)$/;"	l
f0101162	obj/kern/kernel.asm	/^f0101162:	e8 d9 ee ff ff       	call   f0100040 <_panic>$/;"	l
f0101167	obj/kern/kernel.asm	/^f0101167:	f6 45 08 01          	testb  $0x1,0x8(%ebp)$/;"	l
f010116b	obj/kern/kernel.asm	/^f010116b:	74 1d                	je     f010118a <page_alloc+0x6f>$/;"	l
f010116d	obj/kern/kernel.asm	/^f010116d:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0101174	obj/kern/kernel.asm	/^f0101174:	00 $/;"	l
f0101175	obj/kern/kernel.asm	/^f0101175:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f010117c	obj/kern/kernel.asm	/^f010117c:	00 $/;"	l
f010117d	obj/kern/kernel.asm	/^f010117d:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0101182	obj/kern/kernel.asm	/^f0101182:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101185	obj/kern/kernel.asm	/^f0101185:	e8 0d 54 00 00       	call   f0106597 <memset>$/;"	l
f010118a	obj/kern/kernel.asm	/^f010118a:	a1 40 92 2b f0       	mov    0xf02b9240,%eax$/;"	l
f010118f	obj/kern/kernel.asm	/^f010118f:	8b 00                	mov    (%eax),%eax$/;"	l
f0101191	obj/kern/kernel.asm	/^f0101191:	a3 40 92 2b f0       	mov    %eax,0xf02b9240$/;"	l
f0101196	obj/kern/kernel.asm	/^f0101196:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)$/;"	l
f010119c	obj/kern/kernel.asm	/^f010119c:	89 d8                	mov    %ebx,%eax$/;"	l
f010119e	obj/kern/kernel.asm	/^f010119e:	eb 05                	jmp    f01011a5 <page_alloc+0x8a>$/;"	l
f01011a0	obj/kern/kernel.asm	/^f01011a0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01011a5	obj/kern/kernel.asm	/^f01011a5:	83 c4 14             	add    $0x14,%esp$/;"	l
f01011a8	obj/kern/kernel.asm	/^f01011a8:	5b                   	pop    %ebx$/;"	l
f01011a9	obj/kern/kernel.asm	/^f01011a9:	5d                   	pop    %ebp$/;"	l
f01011aa	obj/kern/kernel.asm	/^f01011aa:	c3                   	ret    $/;"	l
f01011ab	obj/kern/kernel.asm	/^f01011ab <page_free>:$/;"	l
f01011ab	obj/kern/kernel.asm	/^f01011ab:	55                   	push   %ebp$/;"	l
f01011ac	obj/kern/kernel.asm	/^f01011ac:	89 e5                	mov    %esp,%ebp$/;"	l
f01011ae	obj/kern/kernel.asm	/^f01011ae:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01011b1	obj/kern/kernel.asm	/^f01011b1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01011b4	obj/kern/kernel.asm	/^f01011b4:	66 83 78 04 00       	cmpw   $0x0,0x4(%eax)$/;"	l
f01011b9	obj/kern/kernel.asm	/^f01011b9:	74 1c                	je     f01011d7 <page_free+0x2c>$/;"	l
f01011bb	obj/kern/kernel.asm	/^f01011bb:	c7 44 24 08 68 87 10 	movl   $0xf0108768,0x8(%esp)$/;"	l
f01011c2	obj/kern/kernel.asm	/^f01011c2:	f0 $/;"	l
f01011c3	obj/kern/kernel.asm	/^f01011c3:	c7 44 24 04 7b 01 00 	movl   $0x17b,0x4(%esp)$/;"	l
f01011ca	obj/kern/kernel.asm	/^f01011ca:	00 $/;"	l
f01011cb	obj/kern/kernel.asm	/^f01011cb:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f01011d2	obj/kern/kernel.asm	/^f01011d2:	e8 69 ee ff ff       	call   f0100040 <_panic>$/;"	l
f01011d7	obj/kern/kernel.asm	/^f01011d7:	83 38 00             	cmpl   $0x0,(%eax)$/;"	l
f01011da	obj/kern/kernel.asm	/^f01011da:	74 1c                	je     f01011f8 <page_free+0x4d>$/;"	l
f01011dc	obj/kern/kernel.asm	/^f01011dc:	c7 44 24 08 e0 90 10 	movl   $0xf01090e0,0x8(%esp)$/;"	l
f01011e3	obj/kern/kernel.asm	/^f01011e3:	f0 $/;"	l
f01011e4	obj/kern/kernel.asm	/^f01011e4:	c7 44 24 04 7c 01 00 	movl   $0x17c,0x4(%esp)$/;"	l
f01011eb	obj/kern/kernel.asm	/^f01011eb:	00 $/;"	l
f01011ec	obj/kern/kernel.asm	/^f01011ec:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f01011f3	obj/kern/kernel.asm	/^f01011f3:	e8 48 ee ff ff       	call   f0100040 <_panic>$/;"	l
f01011f8	obj/kern/kernel.asm	/^f01011f8:	8b 15 40 92 2b f0    	mov    0xf02b9240,%edx$/;"	l
f01011fe	obj/kern/kernel.asm	/^f01011fe:	89 10                	mov    %edx,(%eax)$/;"	l
f0101200	obj/kern/kernel.asm	/^f0101200:	a3 40 92 2b f0       	mov    %eax,0xf02b9240$/;"	l
f0101205	obj/kern/kernel.asm	/^f0101205:	c9                   	leave  $/;"	l
f0101206	obj/kern/kernel.asm	/^f0101206:	c3                   	ret    $/;"	l
f0101207	obj/kern/kernel.asm	/^f0101207 <page_decref>:$/;"	l
f0101207	obj/kern/kernel.asm	/^f0101207:	55                   	push   %ebp$/;"	l
f0101208	obj/kern/kernel.asm	/^f0101208:	89 e5                	mov    %esp,%ebp$/;"	l
f010120a	obj/kern/kernel.asm	/^f010120a:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010120d	obj/kern/kernel.asm	/^f010120d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101210	obj/kern/kernel.asm	/^f0101210:	0f b7 48 04          	movzwl 0x4(%eax),%ecx$/;"	l
f0101214	obj/kern/kernel.asm	/^f0101214:	8d 51 ff             	lea    -0x1(%ecx),%edx$/;"	l
f0101217	obj/kern/kernel.asm	/^f0101217:	66 89 50 04          	mov    %dx,0x4(%eax)$/;"	l
f010121b	obj/kern/kernel.asm	/^f010121b:	66 85 d2             	test   %dx,%dx$/;"	l
f010121e	obj/kern/kernel.asm	/^f010121e:	75 08                	jne    f0101228 <page_decref+0x21>$/;"	l
f0101220	obj/kern/kernel.asm	/^f0101220:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101223	obj/kern/kernel.asm	/^f0101223:	e8 83 ff ff ff       	call   f01011ab <page_free>$/;"	l
f0101228	obj/kern/kernel.asm	/^f0101228:	c9                   	leave  $/;"	l
f0101229	obj/kern/kernel.asm	/^f0101229:	c3                   	ret    $/;"	l
f010122a	obj/kern/kernel.asm	/^f010122a <pgdir_walk>:$/;"	l
f010122a	obj/kern/kernel.asm	/^f010122a:	55                   	push   %ebp$/;"	l
f010122b	obj/kern/kernel.asm	/^f010122b:	89 e5                	mov    %esp,%ebp$/;"	l
f010122d	obj/kern/kernel.asm	/^f010122d:	56                   	push   %esi$/;"	l
f010122e	obj/kern/kernel.asm	/^f010122e:	53                   	push   %ebx$/;"	l
f010122f	obj/kern/kernel.asm	/^f010122f:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0101232	obj/kern/kernel.asm	/^f0101232:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0101235	obj/kern/kernel.asm	/^f0101235:	89 de                	mov    %ebx,%esi$/;"	l
f0101237	obj/kern/kernel.asm	/^f0101237:	c1 ee 16             	shr    $0x16,%esi$/;"	l
f010123a	obj/kern/kernel.asm	/^f010123a:	c1 e6 02             	shl    $0x2,%esi$/;"	l
f010123d	obj/kern/kernel.asm	/^f010123d:	03 75 08             	add    0x8(%ebp),%esi$/;"	l
f0101240	obj/kern/kernel.asm	/^f0101240:	8b 06                	mov    (%esi),%eax$/;"	l
f0101242	obj/kern/kernel.asm	/^f0101242:	a8 01                	test   $0x1,%al$/;"	l
f0101244	obj/kern/kernel.asm	/^f0101244:	74 44                	je     f010128a <pgdir_walk+0x60>$/;"	l
f0101246	obj/kern/kernel.asm	/^f0101246:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f010124b	obj/kern/kernel.asm	/^f010124b:	c1 eb 0a             	shr    $0xa,%ebx$/;"	l
f010124e	obj/kern/kernel.asm	/^f010124e:	81 e3 fc 0f 00 00    	and    $0xffc,%ebx$/;"	l
f0101254	obj/kern/kernel.asm	/^f0101254:	01 d8                	add    %ebx,%eax$/;"	l
f0101256	obj/kern/kernel.asm	/^f0101256:	89 c2                	mov    %eax,%edx$/;"	l
f0101258	obj/kern/kernel.asm	/^f0101258:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f010125b	obj/kern/kernel.asm	/^f010125b:	3b 15 94 9e 2b f0    	cmp    0xf02b9e94,%edx$/;"	l
f0101261	obj/kern/kernel.asm	/^f0101261:	72 20                	jb     f0101283 <pgdir_walk+0x59>$/;"	l
f0101263	obj/kern/kernel.asm	/^f0101263:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101267	obj/kern/kernel.asm	/^f0101267:	c7 44 24 08 a4 80 10 	movl   $0xf01080a4,0x8(%esp)$/;"	l
f010126e	obj/kern/kernel.asm	/^f010126e:	f0 $/;"	l
f010126f	obj/kern/kernel.asm	/^f010126f:	c7 44 24 04 a9 01 00 	movl   $0x1a9,0x4(%esp)$/;"	l
f0101276	obj/kern/kernel.asm	/^f0101276:	00 $/;"	l
f0101277	obj/kern/kernel.asm	/^f0101277:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f010127e	obj/kern/kernel.asm	/^f010127e:	e8 bd ed ff ff       	call   f0100040 <_panic>$/;"	l
f0101283	obj/kern/kernel.asm	/^f0101283:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0101288	obj/kern/kernel.asm	/^f0101288:	eb 79                	jmp    f0101303 <pgdir_walk+0xd9>$/;"	l
f010128a	obj/kern/kernel.asm	/^f010128a:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
f010128e	obj/kern/kernel.asm	/^f010128e:	74 67                	je     f01012f7 <pgdir_walk+0xcd>$/;"	l
f0101290	obj/kern/kernel.asm	/^f0101290:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f0101297	obj/kern/kernel.asm	/^f0101297:	e8 7f fe ff ff       	call   f010111b <page_alloc>$/;"	l
f010129c	obj/kern/kernel.asm	/^f010129c:	85 c0                	test   %eax,%eax$/;"	l
f010129e	obj/kern/kernel.asm	/^f010129e:	74 5e                	je     f01012fe <pgdir_walk+0xd4>$/;"	l
f01012a0	obj/kern/kernel.asm	/^f01012a0:	66 83 40 04 01       	addw   $0x1,0x4(%eax)$/;"	l
f01012a5	obj/kern/kernel.asm	/^f01012a5:	2b 05 9c 9e 2b f0    	sub    0xf02b9e9c,%eax$/;"	l
f01012ab	obj/kern/kernel.asm	/^f01012ab:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01012ae	obj/kern/kernel.asm	/^f01012ae:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01012b1	obj/kern/kernel.asm	/^f01012b1:	89 c2                	mov    %eax,%edx$/;"	l
f01012b3	obj/kern/kernel.asm	/^f01012b3:	83 ca 07             	or     $0x7,%edx$/;"	l
f01012b6	obj/kern/kernel.asm	/^f01012b6:	89 16                	mov    %edx,(%esi)$/;"	l
f01012b8	obj/kern/kernel.asm	/^f01012b8:	c1 eb 0a             	shr    $0xa,%ebx$/;"	l
f01012bb	obj/kern/kernel.asm	/^f01012bb:	81 e3 fc 0f 00 00    	and    $0xffc,%ebx$/;"	l
f01012c1	obj/kern/kernel.asm	/^f01012c1:	01 d8                	add    %ebx,%eax$/;"	l
f01012c3	obj/kern/kernel.asm	/^f01012c3:	89 c2                	mov    %eax,%edx$/;"	l
f01012c5	obj/kern/kernel.asm	/^f01012c5:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01012c8	obj/kern/kernel.asm	/^f01012c8:	3b 15 94 9e 2b f0    	cmp    0xf02b9e94,%edx$/;"	l
f01012ce	obj/kern/kernel.asm	/^f01012ce:	72 20                	jb     f01012f0 <pgdir_walk+0xc6>$/;"	l
f01012d0	obj/kern/kernel.asm	/^f01012d0:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01012d4	obj/kern/kernel.asm	/^f01012d4:	c7 44 24 08 a4 80 10 	movl   $0xf01080a4,0x8(%esp)$/;"	l
f01012db	obj/kern/kernel.asm	/^f01012db:	f0 $/;"	l
f01012dc	obj/kern/kernel.asm	/^f01012dc:	c7 44 24 04 b0 01 00 	movl   $0x1b0,0x4(%esp)$/;"	l
f01012e3	obj/kern/kernel.asm	/^f01012e3:	00 $/;"	l
f01012e4	obj/kern/kernel.asm	/^f01012e4:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f01012eb	obj/kern/kernel.asm	/^f01012eb:	e8 50 ed ff ff       	call   f0100040 <_panic>$/;"	l
f01012f0	obj/kern/kernel.asm	/^f01012f0:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f01012f5	obj/kern/kernel.asm	/^f01012f5:	eb 0c                	jmp    f0101303 <pgdir_walk+0xd9>$/;"	l
f01012f7	obj/kern/kernel.asm	/^f01012f7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01012fc	obj/kern/kernel.asm	/^f01012fc:	eb 05                	jmp    f0101303 <pgdir_walk+0xd9>$/;"	l
f01012fe	obj/kern/kernel.asm	/^f01012fe:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101303	obj/kern/kernel.asm	/^f0101303:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101306	obj/kern/kernel.asm	/^f0101306:	5b                   	pop    %ebx$/;"	l
f0101307	obj/kern/kernel.asm	/^f0101307:	5e                   	pop    %esi$/;"	l
f0101308	obj/kern/kernel.asm	/^f0101308:	5d                   	pop    %ebp$/;"	l
f0101309	obj/kern/kernel.asm	/^f0101309:	c3                   	ret    $/;"	l
f010130a	obj/kern/kernel.asm	/^f010130a <boot_map_region>:$/;"	l
f010130a	obj/kern/kernel.asm	/^f010130a:	55                   	push   %ebp$/;"	l
f010130b	obj/kern/kernel.asm	/^f010130b:	89 e5                	mov    %esp,%ebp$/;"	l
f010130d	obj/kern/kernel.asm	/^f010130d:	57                   	push   %edi$/;"	l
f010130e	obj/kern/kernel.asm	/^f010130e:	56                   	push   %esi$/;"	l
f010130f	obj/kern/kernel.asm	/^f010130f:	53                   	push   %ebx$/;"	l
f0101310	obj/kern/kernel.asm	/^f0101310:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0101313	obj/kern/kernel.asm	/^f0101313:	89 c7                	mov    %eax,%edi$/;"	l
f0101315	obj/kern/kernel.asm	/^f0101315:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f0101318	obj/kern/kernel.asm	/^f0101318:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f010131b	obj/kern/kernel.asm	/^f010131b:	89 4d e4             	mov    %ecx,-0x1c(%ebp)$/;"	l
f010131e	obj/kern/kernel.asm	/^f010131e:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0101323	obj/kern/kernel.asm	/^f0101323:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101326	obj/kern/kernel.asm	/^f0101326:	83 c8 01             	or     $0x1,%eax$/;"	l
f0101329	obj/kern/kernel.asm	/^f0101329:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f010132c	obj/kern/kernel.asm	/^f010132c:	eb 29                	jmp    f0101357 <boot_map_region+0x4d>$/;"	l
f010132e	obj/kern/kernel.asm	/^f010132e:	89 de                	mov    %ebx,%esi$/;"	l
f0101330	obj/kern/kernel.asm	/^f0101330:	c1 e6 0c             	shl    $0xc,%esi$/;"	l
f0101333	obj/kern/kernel.asm	/^f0101333:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f010133a	obj/kern/kernel.asm	/^f010133a:	00 $/;"	l
f010133b	obj/kern/kernel.asm	/^f010133b:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f010133e	obj/kern/kernel.asm	/^f010133e:	01 f0                	add    %esi,%eax$/;"	l
f0101340	obj/kern/kernel.asm	/^f0101340:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101344	obj/kern/kernel.asm	/^f0101344:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0101347	obj/kern/kernel.asm	/^f0101347:	e8 de fe ff ff       	call   f010122a <pgdir_walk>$/;"	l
f010134c	obj/kern/kernel.asm	/^f010134c:	03 75 08             	add    0x8(%ebp),%esi$/;"	l
f010134f	obj/kern/kernel.asm	/^f010134f:	0b 75 dc             	or     -0x24(%ebp),%esi$/;"	l
f0101352	obj/kern/kernel.asm	/^f0101352:	89 30                	mov    %esi,(%eax)$/;"	l
f0101354	obj/kern/kernel.asm	/^f0101354:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0101357	obj/kern/kernel.asm	/^f0101357:	3b 5d e4             	cmp    -0x1c(%ebp),%ebx$/;"	l
f010135a	obj/kern/kernel.asm	/^f010135a:	7c d2                	jl     f010132e <boot_map_region+0x24>$/;"	l
f010135c	obj/kern/kernel.asm	/^f010135c:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f010135f	obj/kern/kernel.asm	/^f010135f:	5b                   	pop    %ebx$/;"	l
f0101360	obj/kern/kernel.asm	/^f0101360:	5e                   	pop    %esi$/;"	l
f0101361	obj/kern/kernel.asm	/^f0101361:	5f                   	pop    %edi$/;"	l
f0101362	obj/kern/kernel.asm	/^f0101362:	5d                   	pop    %ebp$/;"	l
f0101363	obj/kern/kernel.asm	/^f0101363:	c3                   	ret    $/;"	l
f0101364	obj/kern/kernel.asm	/^f0101364 <page_lookup>:$/;"	l
f0101364	obj/kern/kernel.asm	/^f0101364:	55                   	push   %ebp$/;"	l
f0101365	obj/kern/kernel.asm	/^f0101365:	89 e5                	mov    %esp,%ebp$/;"	l
f0101367	obj/kern/kernel.asm	/^f0101367:	53                   	push   %ebx$/;"	l
f0101368	obj/kern/kernel.asm	/^f0101368:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010136b	obj/kern/kernel.asm	/^f010136b:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f010136e	obj/kern/kernel.asm	/^f010136e:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0101375	obj/kern/kernel.asm	/^f0101375:	00 $/;"	l
f0101376	obj/kern/kernel.asm	/^f0101376:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101379	obj/kern/kernel.asm	/^f0101379:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010137d	obj/kern/kernel.asm	/^f010137d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101380	obj/kern/kernel.asm	/^f0101380:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101383	obj/kern/kernel.asm	/^f0101383:	e8 a2 fe ff ff       	call   f010122a <pgdir_walk>$/;"	l
f0101388	obj/kern/kernel.asm	/^f0101388:	85 c0                	test   %eax,%eax$/;"	l
f010138a	obj/kern/kernel.asm	/^f010138a:	74 3f                	je     f01013cb <page_lookup+0x67>$/;"	l
f010138c	obj/kern/kernel.asm	/^f010138c:	f6 00 01             	testb  $0x1,(%eax)$/;"	l
f010138f	obj/kern/kernel.asm	/^f010138f:	74 41                	je     f01013d2 <page_lookup+0x6e>$/;"	l
f0101391	obj/kern/kernel.asm	/^f0101391:	85 db                	test   %ebx,%ebx$/;"	l
f0101393	obj/kern/kernel.asm	/^f0101393:	74 02                	je     f0101397 <page_lookup+0x33>$/;"	l
f0101395	obj/kern/kernel.asm	/^f0101395:	89 03                	mov    %eax,(%ebx)$/;"	l
f0101397	obj/kern/kernel.asm	/^f0101397:	8b 00                	mov    (%eax),%eax$/;"	l
f0101399	obj/kern/kernel.asm	/^f0101399:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f010139c	obj/kern/kernel.asm	/^f010139c:	3b 05 94 9e 2b f0    	cmp    0xf02b9e94,%eax$/;"	l
f01013a2	obj/kern/kernel.asm	/^f01013a2:	72 1c                	jb     f01013c0 <page_lookup+0x5c>$/;"	l
f01013a4	obj/kern/kernel.asm	/^f01013a4:	c7 44 24 08 90 87 10 	movl   $0xf0108790,0x8(%esp)$/;"	l
f01013ab	obj/kern/kernel.asm	/^f01013ab:	f0 $/;"	l
f01013ac	obj/kern/kernel.asm	/^f01013ac:	c7 44 24 04 51 00 00 	movl   $0x51,0x4(%esp)$/;"	l
f01013b3	obj/kern/kernel.asm	/^f01013b3:	00 $/;"	l
f01013b4	obj/kern/kernel.asm	/^f01013b4:	c7 04 24 fd 8f 10 f0 	movl   $0xf0108ffd,(%esp)$/;"	l
f01013bb	obj/kern/kernel.asm	/^f01013bb:	e8 80 ec ff ff       	call   f0100040 <_panic>$/;"	l
f01013c0	obj/kern/kernel.asm	/^f01013c0:	8b 15 9c 9e 2b f0    	mov    0xf02b9e9c,%edx$/;"	l
f01013c6	obj/kern/kernel.asm	/^f01013c6:	8d 04 c2             	lea    (%edx,%eax,8),%eax$/;"	l
f01013c9	obj/kern/kernel.asm	/^f01013c9:	eb 0c                	jmp    f01013d7 <page_lookup+0x73>$/;"	l
f01013cb	obj/kern/kernel.asm	/^f01013cb:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01013d0	obj/kern/kernel.asm	/^f01013d0:	eb 05                	jmp    f01013d7 <page_lookup+0x73>$/;"	l
f01013d2	obj/kern/kernel.asm	/^f01013d2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01013d7	obj/kern/kernel.asm	/^f01013d7:	83 c4 14             	add    $0x14,%esp$/;"	l
f01013da	obj/kern/kernel.asm	/^f01013da:	5b                   	pop    %ebx$/;"	l
f01013db	obj/kern/kernel.asm	/^f01013db:	5d                   	pop    %ebp$/;"	l
f01013dc	obj/kern/kernel.asm	/^f01013dc:	c3                   	ret    $/;"	l
f01013dd	obj/kern/kernel.asm	/^f01013dd <tlb_invalidate>:$/;"	l
f01013dd	obj/kern/kernel.asm	/^f01013dd:	55                   	push   %ebp$/;"	l
f01013de	obj/kern/kernel.asm	/^f01013de:	89 e5                	mov    %esp,%ebp$/;"	l
f01013e0	obj/kern/kernel.asm	/^f01013e0:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01013e3	obj/kern/kernel.asm	/^f01013e3:	e8 01 58 00 00       	call   f0106be9 <cpunum>$/;"	l
f01013e8	obj/kern/kernel.asm	/^f01013e8:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01013eb	obj/kern/kernel.asm	/^f01013eb:	83 b8 28 a0 2b f0 00 	cmpl   $0x0,-0xfd45fd8(%eax)$/;"	l
f01013f2	obj/kern/kernel.asm	/^f01013f2:	74 16                	je     f010140a <tlb_invalidate+0x2d>$/;"	l
f01013f4	obj/kern/kernel.asm	/^f01013f4:	e8 f0 57 00 00       	call   f0106be9 <cpunum>$/;"	l
f01013f9	obj/kern/kernel.asm	/^f01013f9:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01013fc	obj/kern/kernel.asm	/^f01013fc:	8b 80 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%eax$/;"	l
f0101402	obj/kern/kernel.asm	/^f0101402:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0101405	obj/kern/kernel.asm	/^f0101405:	39 50 60             	cmp    %edx,0x60(%eax)$/;"	l
f0101408	obj/kern/kernel.asm	/^f0101408:	75 06                	jne    f0101410 <tlb_invalidate+0x33>$/;"	l
f010140a	obj/kern/kernel.asm	/^f010140a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010140d	obj/kern/kernel.asm	/^f010140d:	0f 01 38             	invlpg (%eax)$/;"	l
f0101410	obj/kern/kernel.asm	/^f0101410:	c9                   	leave  $/;"	l
f0101411	obj/kern/kernel.asm	/^f0101411:	c3                   	ret    $/;"	l
f0101412	obj/kern/kernel.asm	/^f0101412 <page_remove>:$/;"	l
f0101412	obj/kern/kernel.asm	/^f0101412:	55                   	push   %ebp$/;"	l
f0101413	obj/kern/kernel.asm	/^f0101413:	89 e5                	mov    %esp,%ebp$/;"	l
f0101415	obj/kern/kernel.asm	/^f0101415:	56                   	push   %esi$/;"	l
f0101416	obj/kern/kernel.asm	/^f0101416:	53                   	push   %ebx$/;"	l
f0101417	obj/kern/kernel.asm	/^f0101417:	83 ec 20             	sub    $0x20,%esp$/;"	l
f010141a	obj/kern/kernel.asm	/^f010141a:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f010141d	obj/kern/kernel.asm	/^f010141d:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0101420	obj/kern/kernel.asm	/^f0101420:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0101423	obj/kern/kernel.asm	/^f0101423:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0101427	obj/kern/kernel.asm	/^f0101427:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f010142b	obj/kern/kernel.asm	/^f010142b:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010142e	obj/kern/kernel.asm	/^f010142e:	e8 31 ff ff ff       	call   f0101364 <page_lookup>$/;"	l
f0101433	obj/kern/kernel.asm	/^f0101433:	85 c0                	test   %eax,%eax$/;"	l
f0101435	obj/kern/kernel.asm	/^f0101435:	74 1d                	je     f0101454 <page_remove+0x42>$/;"	l
f0101437	obj/kern/kernel.asm	/^f0101437:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f010143a	obj/kern/kernel.asm	/^f010143a:	c7 02 00 00 00 00    	movl   $0x0,(%edx)$/;"	l
f0101440	obj/kern/kernel.asm	/^f0101440:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101443	obj/kern/kernel.asm	/^f0101443:	e8 bf fd ff ff       	call   f0101207 <page_decref>$/;"	l
f0101448	obj/kern/kernel.asm	/^f0101448:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f010144c	obj/kern/kernel.asm	/^f010144c:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010144f	obj/kern/kernel.asm	/^f010144f:	e8 89 ff ff ff       	call   f01013dd <tlb_invalidate>$/;"	l
f0101454	obj/kern/kernel.asm	/^f0101454:	83 c4 20             	add    $0x20,%esp$/;"	l
f0101457	obj/kern/kernel.asm	/^f0101457:	5b                   	pop    %ebx$/;"	l
f0101458	obj/kern/kernel.asm	/^f0101458:	5e                   	pop    %esi$/;"	l
f0101459	obj/kern/kernel.asm	/^f0101459:	5d                   	pop    %ebp$/;"	l
f010145a	obj/kern/kernel.asm	/^f010145a:	c3                   	ret    $/;"	l
f010145b	obj/kern/kernel.asm	/^f010145b <page_insert>:$/;"	l
f010145b	obj/kern/kernel.asm	/^f010145b:	55                   	push   %ebp$/;"	l
f010145c	obj/kern/kernel.asm	/^f010145c:	89 e5                	mov    %esp,%ebp$/;"	l
f010145e	obj/kern/kernel.asm	/^f010145e:	57                   	push   %edi$/;"	l
f010145f	obj/kern/kernel.asm	/^f010145f:	56                   	push   %esi$/;"	l
f0101460	obj/kern/kernel.asm	/^f0101460:	53                   	push   %ebx$/;"	l
f0101461	obj/kern/kernel.asm	/^f0101461:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0101464	obj/kern/kernel.asm	/^f0101464:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0101467	obj/kern/kernel.asm	/^f0101467:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f010146a	obj/kern/kernel.asm	/^f010146a:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0101471	obj/kern/kernel.asm	/^f0101471:	00 $/;"	l
f0101472	obj/kern/kernel.asm	/^f0101472:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0101476	obj/kern/kernel.asm	/^f0101476:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101479	obj/kern/kernel.asm	/^f0101479:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010147c	obj/kern/kernel.asm	/^f010147c:	e8 a9 fd ff ff       	call   f010122a <pgdir_walk>$/;"	l
f0101481	obj/kern/kernel.asm	/^f0101481:	89 c3                	mov    %eax,%ebx$/;"	l
f0101483	obj/kern/kernel.asm	/^f0101483:	85 c0                	test   %eax,%eax$/;"	l
f0101485	obj/kern/kernel.asm	/^f0101485:	74 61                	je     f01014e8 <page_insert+0x8d>$/;"	l
f0101487	obj/kern/kernel.asm	/^f0101487:	8b 00                	mov    (%eax),%eax$/;"	l
f0101489	obj/kern/kernel.asm	/^f0101489:	a8 01                	test   $0x1,%al$/;"	l
f010148b	obj/kern/kernel.asm	/^f010148b:	74 37                	je     f01014c4 <page_insert+0x69>$/;"	l
f010148d	obj/kern/kernel.asm	/^f010148d:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0101492	obj/kern/kernel.asm	/^f0101492:	89 f2                	mov    %esi,%edx$/;"	l
f0101494	obj/kern/kernel.asm	/^f0101494:	2b 15 9c 9e 2b f0    	sub    0xf02b9e9c,%edx$/;"	l
f010149a	obj/kern/kernel.asm	/^f010149a:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f010149d	obj/kern/kernel.asm	/^f010149d:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01014a0	obj/kern/kernel.asm	/^f01014a0:	39 d0                	cmp    %edx,%eax$/;"	l
f01014a2	obj/kern/kernel.asm	/^f01014a2:	75 11                	jne    f01014b5 <page_insert+0x5a>$/;"	l
f01014a4	obj/kern/kernel.asm	/^f01014a4:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
f01014a7	obj/kern/kernel.asm	/^f01014a7:	83 ca 01             	or     $0x1,%edx$/;"	l
f01014aa	obj/kern/kernel.asm	/^f01014aa:	09 d0                	or     %edx,%eax$/;"	l
f01014ac	obj/kern/kernel.asm	/^f01014ac:	89 03                	mov    %eax,(%ebx)$/;"	l
f01014ae	obj/kern/kernel.asm	/^f01014ae:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01014b3	obj/kern/kernel.asm	/^f01014b3:	eb 38                	jmp    f01014ed <page_insert+0x92>$/;"	l
f01014b5	obj/kern/kernel.asm	/^f01014b5:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01014b9	obj/kern/kernel.asm	/^f01014b9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01014bc	obj/kern/kernel.asm	/^f01014bc:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01014bf	obj/kern/kernel.asm	/^f01014bf:	e8 4e ff ff ff       	call   f0101412 <page_remove>$/;"	l
f01014c4	obj/kern/kernel.asm	/^f01014c4:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
f01014c7	obj/kern/kernel.asm	/^f01014c7:	83 ca 01             	or     $0x1,%edx$/;"	l
f01014ca	obj/kern/kernel.asm	/^f01014ca:	89 f0                	mov    %esi,%eax$/;"	l
f01014cc	obj/kern/kernel.asm	/^f01014cc:	2b 05 9c 9e 2b f0    	sub    0xf02b9e9c,%eax$/;"	l
f01014d2	obj/kern/kernel.asm	/^f01014d2:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01014d5	obj/kern/kernel.asm	/^f01014d5:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01014d8	obj/kern/kernel.asm	/^f01014d8:	09 d0                	or     %edx,%eax$/;"	l
f01014da	obj/kern/kernel.asm	/^f01014da:	89 03                	mov    %eax,(%ebx)$/;"	l
f01014dc	obj/kern/kernel.asm	/^f01014dc:	66 83 46 04 01       	addw   $0x1,0x4(%esi)$/;"	l
f01014e1	obj/kern/kernel.asm	/^f01014e1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01014e6	obj/kern/kernel.asm	/^f01014e6:	eb 05                	jmp    f01014ed <page_insert+0x92>$/;"	l
f01014e8	obj/kern/kernel.asm	/^f01014e8:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f01014ed	obj/kern/kernel.asm	/^f01014ed:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01014f0	obj/kern/kernel.asm	/^f01014f0:	5b                   	pop    %ebx$/;"	l
f01014f1	obj/kern/kernel.asm	/^f01014f1:	5e                   	pop    %esi$/;"	l
f01014f2	obj/kern/kernel.asm	/^f01014f2:	5f                   	pop    %edi$/;"	l
f01014f3	obj/kern/kernel.asm	/^f01014f3:	5d                   	pop    %ebp$/;"	l
f01014f4	obj/kern/kernel.asm	/^f01014f4:	c3                   	ret    $/;"	l
f01014f5	obj/kern/kernel.asm	/^f01014f5 <mmio_map_region>:$/;"	l
f01014f5	obj/kern/kernel.asm	/^f01014f5:	55                   	push   %ebp$/;"	l
f01014f6	obj/kern/kernel.asm	/^f01014f6:	89 e5                	mov    %esp,%ebp$/;"	l
f01014f8	obj/kern/kernel.asm	/^f01014f8:	56                   	push   %esi$/;"	l
f01014f9	obj/kern/kernel.asm	/^f01014f9:	53                   	push   %ebx$/;"	l
f01014fa	obj/kern/kernel.asm	/^f01014fa:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01014fd	obj/kern/kernel.asm	/^f01014fd:	8b 1d 00 53 12 f0    	mov    0xf0125300,%ebx$/;"	l
f0101503	obj/kern/kernel.asm	/^f0101503:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101506	obj/kern/kernel.asm	/^f0101506:	8d b0 ff 0f 00 00    	lea    0xfff(%eax),%esi$/;"	l
f010150c	obj/kern/kernel.asm	/^f010150c:	81 e6 00 f0 ff ff    	and    $0xfffff000,%esi$/;"	l
f0101512	obj/kern/kernel.asm	/^f0101512:	8d 04 1e             	lea    (%esi,%ebx,1),%eax$/;"	l
f0101515	obj/kern/kernel.asm	/^f0101515:	3d 00 00 c0 ef       	cmp    $0xefc00000,%eax$/;"	l
f010151a	obj/kern/kernel.asm	/^f010151a:	76 1c                	jbe    f0101538 <mmio_map_region+0x43>$/;"	l
f010151c	obj/kern/kernel.asm	/^f010151c:	c7 44 24 08 b0 87 10 	movl   $0xf01087b0,0x8(%esp)$/;"	l
f0101523	obj/kern/kernel.asm	/^f0101523:	f0 $/;"	l
f0101524	obj/kern/kernel.asm	/^f0101524:	c7 44 24 04 5d 02 00 	movl   $0x25d,0x4(%esp)$/;"	l
f010152b	obj/kern/kernel.asm	/^f010152b:	00 $/;"	l
f010152c	obj/kern/kernel.asm	/^f010152c:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0101533	obj/kern/kernel.asm	/^f0101533:	e8 08 eb ff ff       	call   f0100040 <_panic>$/;"	l
f0101538	obj/kern/kernel.asm	/^f0101538:	c7 44 24 04 1a 00 00 	movl   $0x1a,0x4(%esp)$/;"	l
f010153f	obj/kern/kernel.asm	/^f010153f:	00 $/;"	l
f0101540	obj/kern/kernel.asm	/^f0101540:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101543	obj/kern/kernel.asm	/^f0101543:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101546	obj/kern/kernel.asm	/^f0101546:	89 f1                	mov    %esi,%ecx$/;"	l
f0101548	obj/kern/kernel.asm	/^f0101548:	89 da                	mov    %ebx,%edx$/;"	l
f010154a	obj/kern/kernel.asm	/^f010154a:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f010154f	obj/kern/kernel.asm	/^f010154f:	e8 b6 fd ff ff       	call   f010130a <boot_map_region>$/;"	l
f0101554	obj/kern/kernel.asm	/^f0101554:	01 35 00 53 12 f0    	add    %esi,0xf0125300$/;"	l
f010155a	obj/kern/kernel.asm	/^f010155a:	89 d8                	mov    %ebx,%eax$/;"	l
f010155c	obj/kern/kernel.asm	/^f010155c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010155f	obj/kern/kernel.asm	/^f010155f:	5b                   	pop    %ebx$/;"	l
f0101560	obj/kern/kernel.asm	/^f0101560:	5e                   	pop    %esi$/;"	l
f0101561	obj/kern/kernel.asm	/^f0101561:	5d                   	pop    %ebp$/;"	l
f0101562	obj/kern/kernel.asm	/^f0101562:	c3                   	ret    $/;"	l
f0101563	obj/kern/kernel.asm	/^f0101563 <mem_init>:$/;"	l
f0101563	obj/kern/kernel.asm	/^f0101563:	55                   	push   %ebp$/;"	l
f0101564	obj/kern/kernel.asm	/^f0101564:	89 e5                	mov    %esp,%ebp$/;"	l
f0101566	obj/kern/kernel.asm	/^f0101566:	57                   	push   %edi$/;"	l
f0101567	obj/kern/kernel.asm	/^f0101567:	56                   	push   %esi$/;"	l
f0101568	obj/kern/kernel.asm	/^f0101568:	53                   	push   %ebx$/;"	l
f0101569	obj/kern/kernel.asm	/^f0101569:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f010156c	obj/kern/kernel.asm	/^f010156c:	c7 04 24 15 00 00 00 	movl   $0x15,(%esp)$/;"	l
f0101573	obj/kern/kernel.asm	/^f0101573:	e8 d8 28 00 00       	call   f0103e50 <mc146818_read>$/;"	l
f0101578	obj/kern/kernel.asm	/^f0101578:	89 c3                	mov    %eax,%ebx$/;"	l
f010157a	obj/kern/kernel.asm	/^f010157a:	c7 04 24 16 00 00 00 	movl   $0x16,(%esp)$/;"	l
f0101581	obj/kern/kernel.asm	/^f0101581:	e8 ca 28 00 00       	call   f0103e50 <mc146818_read>$/;"	l
f0101586	obj/kern/kernel.asm	/^f0101586:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f0101589	obj/kern/kernel.asm	/^f0101589:	09 c3                	or     %eax,%ebx$/;"	l
f010158b	obj/kern/kernel.asm	/^f010158b:	89 d8                	mov    %ebx,%eax$/;"	l
f010158d	obj/kern/kernel.asm	/^f010158d:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f0101590	obj/kern/kernel.asm	/^f0101590:	8d 90 ff 0f 00 00    	lea    0xfff(%eax),%edx$/;"	l
f0101596	obj/kern/kernel.asm	/^f0101596:	85 c0                	test   %eax,%eax$/;"	l
f0101598	obj/kern/kernel.asm	/^f0101598:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
f010159b	obj/kern/kernel.asm	/^f010159b:	c1 f8 0c             	sar    $0xc,%eax$/;"	l
f010159e	obj/kern/kernel.asm	/^f010159e:	a3 44 92 2b f0       	mov    %eax,0xf02b9244$/;"	l
f01015a3	obj/kern/kernel.asm	/^f01015a3:	c7 04 24 17 00 00 00 	movl   $0x17,(%esp)$/;"	l
f01015aa	obj/kern/kernel.asm	/^f01015aa:	e8 a1 28 00 00       	call   f0103e50 <mc146818_read>$/;"	l
f01015af	obj/kern/kernel.asm	/^f01015af:	89 c3                	mov    %eax,%ebx$/;"	l
f01015b1	obj/kern/kernel.asm	/^f01015b1:	c7 04 24 18 00 00 00 	movl   $0x18,(%esp)$/;"	l
f01015b8	obj/kern/kernel.asm	/^f01015b8:	e8 93 28 00 00       	call   f0103e50 <mc146818_read>$/;"	l
f01015bd	obj/kern/kernel.asm	/^f01015bd:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f01015c0	obj/kern/kernel.asm	/^f01015c0:	09 c3                	or     %eax,%ebx$/;"	l
f01015c2	obj/kern/kernel.asm	/^f01015c2:	89 d8                	mov    %ebx,%eax$/;"	l
f01015c4	obj/kern/kernel.asm	/^f01015c4:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f01015c7	obj/kern/kernel.asm	/^f01015c7:	8d 90 ff 0f 00 00    	lea    0xfff(%eax),%edx$/;"	l
f01015cd	obj/kern/kernel.asm	/^f01015cd:	85 c0                	test   %eax,%eax$/;"	l
f01015cf	obj/kern/kernel.asm	/^f01015cf:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
f01015d2	obj/kern/kernel.asm	/^f01015d2:	c1 f8 0c             	sar    $0xc,%eax$/;"	l
f01015d5	obj/kern/kernel.asm	/^f01015d5:	85 c0                	test   %eax,%eax$/;"	l
f01015d7	obj/kern/kernel.asm	/^f01015d7:	74 0e                	je     f01015e7 <mem_init+0x84>$/;"	l
f01015d9	obj/kern/kernel.asm	/^f01015d9:	8d 90 00 01 00 00    	lea    0x100(%eax),%edx$/;"	l
f01015df	obj/kern/kernel.asm	/^f01015df:	89 15 94 9e 2b f0    	mov    %edx,0xf02b9e94$/;"	l
f01015e5	obj/kern/kernel.asm	/^f01015e5:	eb 0c                	jmp    f01015f3 <mem_init+0x90>$/;"	l
f01015e7	obj/kern/kernel.asm	/^f01015e7:	8b 15 44 92 2b f0    	mov    0xf02b9244,%edx$/;"	l
f01015ed	obj/kern/kernel.asm	/^f01015ed:	89 15 94 9e 2b f0    	mov    %edx,0xf02b9e94$/;"	l
f01015f3	obj/kern/kernel.asm	/^f01015f3:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01015f6	obj/kern/kernel.asm	/^f01015f6:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f01015f9	obj/kern/kernel.asm	/^f01015f9:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01015fd	obj/kern/kernel.asm	/^f01015fd:	a1 44 92 2b f0       	mov    0xf02b9244,%eax$/;"	l
f0101602	obj/kern/kernel.asm	/^f0101602:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101605	obj/kern/kernel.asm	/^f0101605:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f0101608	obj/kern/kernel.asm	/^f0101608:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010160c	obj/kern/kernel.asm	/^f010160c:	a1 94 9e 2b f0       	mov    0xf02b9e94,%eax$/;"	l
f0101611	obj/kern/kernel.asm	/^f0101611:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101614	obj/kern/kernel.asm	/^f0101614:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f0101617	obj/kern/kernel.asm	/^f0101617:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010161b	obj/kern/kernel.asm	/^f010161b:	c7 04 24 e4 87 10 f0 	movl   $0xf01087e4,(%esp)$/;"	l
f0101622	obj/kern/kernel.asm	/^f0101622:	e8 a5 29 00 00       	call   f0103fcc <cprintf>$/;"	l
f0101627	obj/kern/kernel.asm	/^f0101627:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
f010162c	obj/kern/kernel.asm	/^f010162c:	e8 13 f6 ff ff       	call   f0100c44 <boot_alloc>$/;"	l
f0101631	obj/kern/kernel.asm	/^f0101631:	a3 98 9e 2b f0       	mov    %eax,0xf02b9e98$/;"	l
f0101636	obj/kern/kernel.asm	/^f0101636:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f010163d	obj/kern/kernel.asm	/^f010163d:	00 $/;"	l
f010163e	obj/kern/kernel.asm	/^f010163e:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0101645	obj/kern/kernel.asm	/^f0101645:	00 $/;"	l
f0101646	obj/kern/kernel.asm	/^f0101646:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101649	obj/kern/kernel.asm	/^f0101649:	e8 49 4f 00 00       	call   f0106597 <memset>$/;"	l
f010164e	obj/kern/kernel.asm	/^f010164e:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f0101653	obj/kern/kernel.asm	/^f0101653:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0101658	obj/kern/kernel.asm	/^f0101658:	77 20                	ja     f010167a <mem_init+0x117>$/;"	l
f010165a	obj/kern/kernel.asm	/^f010165a:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010165e	obj/kern/kernel.asm	/^f010165e:	c7 44 24 08 c8 80 10 	movl   $0xf01080c8,0x8(%esp)$/;"	l
f0101665	obj/kern/kernel.asm	/^f0101665:	f0 $/;"	l
f0101666	obj/kern/kernel.asm	/^f0101666:	c7 44 24 04 95 00 00 	movl   $0x95,0x4(%esp)$/;"	l
f010166d	obj/kern/kernel.asm	/^f010166d:	00 $/;"	l
f010166e	obj/kern/kernel.asm	/^f010166e:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0101675	obj/kern/kernel.asm	/^f0101675:	e8 c6 e9 ff ff       	call   f0100040 <_panic>$/;"	l
f010167a	obj/kern/kernel.asm	/^f010167a:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f0101680	obj/kern/kernel.asm	/^f0101680:	83 ca 05             	or     $0x5,%edx$/;"	l
f0101683	obj/kern/kernel.asm	/^f0101683:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
f0101689	obj/kern/kernel.asm	/^f0101689:	a1 94 9e 2b f0       	mov    0xf02b9e94,%eax$/;"	l
f010168e	obj/kern/kernel.asm	/^f010168e:	c1 e0 03             	shl    $0x3,%eax$/;"	l
f0101691	obj/kern/kernel.asm	/^f0101691:	e8 ae f5 ff ff       	call   f0100c44 <boot_alloc>$/;"	l
f0101696	obj/kern/kernel.asm	/^f0101696:	a3 9c 9e 2b f0       	mov    %eax,0xf02b9e9c$/;"	l
f010169b	obj/kern/kernel.asm	/^f010169b:	85 c0                	test   %eax,%eax$/;"	l
f010169d	obj/kern/kernel.asm	/^f010169d:	74 21                	je     f01016c0 <mem_init+0x15d>$/;"	l
f010169f	obj/kern/kernel.asm	/^f010169f:	8b 0d 94 9e 2b f0    	mov    0xf02b9e94,%ecx$/;"	l
f01016a5	obj/kern/kernel.asm	/^f01016a5:	8d 14 cd 00 00 00 00 	lea    0x0(,%ecx,8),%edx$/;"	l
f01016ac	obj/kern/kernel.asm	/^f01016ac:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f01016b0	obj/kern/kernel.asm	/^f01016b0:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01016b7	obj/kern/kernel.asm	/^f01016b7:	00 $/;"	l
f01016b8	obj/kern/kernel.asm	/^f01016b8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01016bb	obj/kern/kernel.asm	/^f01016bb:	e8 d7 4e 00 00       	call   f0106597 <memset>$/;"	l
f01016c0	obj/kern/kernel.asm	/^f01016c0:	b8 00 f0 01 00       	mov    $0x1f000,%eax$/;"	l
f01016c5	obj/kern/kernel.asm	/^f01016c5:	e8 7a f5 ff ff       	call   f0100c44 <boot_alloc>$/;"	l
f01016ca	obj/kern/kernel.asm	/^f01016ca:	a3 48 92 2b f0       	mov    %eax,0xf02b9248$/;"	l
f01016cf	obj/kern/kernel.asm	/^f01016cf:	85 c0                	test   %eax,%eax$/;"	l
f01016d1	obj/kern/kernel.asm	/^f01016d1:	74 18                	je     f01016eb <mem_init+0x188>$/;"	l
f01016d3	obj/kern/kernel.asm	/^f01016d3:	c7 44 24 08 00 f0 01 	movl   $0x1f000,0x8(%esp)$/;"	l
f01016da	obj/kern/kernel.asm	/^f01016da:	00 $/;"	l
f01016db	obj/kern/kernel.asm	/^f01016db:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01016e2	obj/kern/kernel.asm	/^f01016e2:	00 $/;"	l
f01016e3	obj/kern/kernel.asm	/^f01016e3:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01016e6	obj/kern/kernel.asm	/^f01016e6:	e8 ac 4e 00 00       	call   f0106597 <memset>$/;"	l
f01016eb	obj/kern/kernel.asm	/^f01016eb:	e8 86 f9 ff ff       	call   f0101076 <page_init>$/;"	l
f01016f0	obj/kern/kernel.asm	/^f01016f0:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01016f5	obj/kern/kernel.asm	/^f01016f5:	e8 e9 f5 ff ff       	call   f0100ce3 <check_page_free_list>$/;"	l
f01016fa	obj/kern/kernel.asm	/^f01016fa:	83 3d 9c 9e 2b f0 00 	cmpl   $0x0,0xf02b9e9c$/;"	l
f0101701	obj/kern/kernel.asm	/^f0101701:	75 1c                	jne    f010171f <mem_init+0x1bc>$/;"	l
f0101703	obj/kern/kernel.asm	/^f0101703:	c7 44 24 08 ee 90 10 	movl   $0xf01090ee,0x8(%esp)$/;"	l
f010170a	obj/kern/kernel.asm	/^f010170a:	f0 $/;"	l
f010170b	obj/kern/kernel.asm	/^f010170b:	c7 44 24 04 f0 02 00 	movl   $0x2f0,0x4(%esp)$/;"	l
f0101712	obj/kern/kernel.asm	/^f0101712:	00 $/;"	l
f0101713	obj/kern/kernel.asm	/^f0101713:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f010171a	obj/kern/kernel.asm	/^f010171a:	e8 21 e9 ff ff       	call   f0100040 <_panic>$/;"	l
f010171f	obj/kern/kernel.asm	/^f010171f:	a1 40 92 2b f0       	mov    0xf02b9240,%eax$/;"	l
f0101724	obj/kern/kernel.asm	/^f0101724:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0101729	obj/kern/kernel.asm	/^f0101729:	eb 05                	jmp    f0101730 <mem_init+0x1cd>$/;"	l
f010172b	obj/kern/kernel.asm	/^f010172b:	83 c3 01             	add    $0x1,%ebx$/;"	l
f010172e	obj/kern/kernel.asm	/^f010172e:	8b 00                	mov    (%eax),%eax$/;"	l
f0101730	obj/kern/kernel.asm	/^f0101730:	85 c0                	test   %eax,%eax$/;"	l
f0101732	obj/kern/kernel.asm	/^f0101732:	75 f7                	jne    f010172b <mem_init+0x1c8>$/;"	l
f0101734	obj/kern/kernel.asm	/^f0101734:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010173b	obj/kern/kernel.asm	/^f010173b:	e8 db f9 ff ff       	call   f010111b <page_alloc>$/;"	l
f0101740	obj/kern/kernel.asm	/^f0101740:	89 c7                	mov    %eax,%edi$/;"	l
f0101742	obj/kern/kernel.asm	/^f0101742:	85 c0                	test   %eax,%eax$/;"	l
f0101744	obj/kern/kernel.asm	/^f0101744:	75 24                	jne    f010176a <mem_init+0x207>$/;"	l
f0101746	obj/kern/kernel.asm	/^f0101746:	c7 44 24 0c 09 91 10 	movl   $0xf0109109,0xc(%esp)$/;"	l
f010174d	obj/kern/kernel.asm	/^f010174d:	f0 $/;"	l
f010174e	obj/kern/kernel.asm	/^f010174e:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0101755	obj/kern/kernel.asm	/^f0101755:	f0 $/;"	l
f0101756	obj/kern/kernel.asm	/^f0101756:	c7 44 24 04 f8 02 00 	movl   $0x2f8,0x4(%esp)$/;"	l
f010175d	obj/kern/kernel.asm	/^f010175d:	00 $/;"	l
f010175e	obj/kern/kernel.asm	/^f010175e:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0101765	obj/kern/kernel.asm	/^f0101765:	e8 d6 e8 ff ff       	call   f0100040 <_panic>$/;"	l
f010176a	obj/kern/kernel.asm	/^f010176a:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101771	obj/kern/kernel.asm	/^f0101771:	e8 a5 f9 ff ff       	call   f010111b <page_alloc>$/;"	l
f0101776	obj/kern/kernel.asm	/^f0101776:	89 c6                	mov    %eax,%esi$/;"	l
f0101778	obj/kern/kernel.asm	/^f0101778:	85 c0                	test   %eax,%eax$/;"	l
f010177a	obj/kern/kernel.asm	/^f010177a:	75 24                	jne    f01017a0 <mem_init+0x23d>$/;"	l
f010177c	obj/kern/kernel.asm	/^f010177c:	c7 44 24 0c 1f 91 10 	movl   $0xf010911f,0xc(%esp)$/;"	l
f0101783	obj/kern/kernel.asm	/^f0101783:	f0 $/;"	l
f0101784	obj/kern/kernel.asm	/^f0101784:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f010178b	obj/kern/kernel.asm	/^f010178b:	f0 $/;"	l
f010178c	obj/kern/kernel.asm	/^f010178c:	c7 44 24 04 f9 02 00 	movl   $0x2f9,0x4(%esp)$/;"	l
f0101793	obj/kern/kernel.asm	/^f0101793:	00 $/;"	l
f0101794	obj/kern/kernel.asm	/^f0101794:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f010179b	obj/kern/kernel.asm	/^f010179b:	e8 a0 e8 ff ff       	call   f0100040 <_panic>$/;"	l
f01017a0	obj/kern/kernel.asm	/^f01017a0:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01017a7	obj/kern/kernel.asm	/^f01017a7:	e8 6f f9 ff ff       	call   f010111b <page_alloc>$/;"	l
f01017ac	obj/kern/kernel.asm	/^f01017ac:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01017af	obj/kern/kernel.asm	/^f01017af:	85 c0                	test   %eax,%eax$/;"	l
f01017b1	obj/kern/kernel.asm	/^f01017b1:	75 24                	jne    f01017d7 <mem_init+0x274>$/;"	l
f01017b3	obj/kern/kernel.asm	/^f01017b3:	c7 44 24 0c 35 91 10 	movl   $0xf0109135,0xc(%esp)$/;"	l
f01017ba	obj/kern/kernel.asm	/^f01017ba:	f0 $/;"	l
f01017bb	obj/kern/kernel.asm	/^f01017bb:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f01017c2	obj/kern/kernel.asm	/^f01017c2:	f0 $/;"	l
f01017c3	obj/kern/kernel.asm	/^f01017c3:	c7 44 24 04 fa 02 00 	movl   $0x2fa,0x4(%esp)$/;"	l
f01017ca	obj/kern/kernel.asm	/^f01017ca:	00 $/;"	l
f01017cb	obj/kern/kernel.asm	/^f01017cb:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f01017d2	obj/kern/kernel.asm	/^f01017d2:	e8 69 e8 ff ff       	call   f0100040 <_panic>$/;"	l
f01017d7	obj/kern/kernel.asm	/^f01017d7:	39 f7                	cmp    %esi,%edi$/;"	l
f01017d9	obj/kern/kernel.asm	/^f01017d9:	75 24                	jne    f01017ff <mem_init+0x29c>$/;"	l
f01017db	obj/kern/kernel.asm	/^f01017db:	c7 44 24 0c 4b 91 10 	movl   $0xf010914b,0xc(%esp)$/;"	l
f01017e2	obj/kern/kernel.asm	/^f01017e2:	f0 $/;"	l
f01017e3	obj/kern/kernel.asm	/^f01017e3:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f01017ea	obj/kern/kernel.asm	/^f01017ea:	f0 $/;"	l
f01017eb	obj/kern/kernel.asm	/^f01017eb:	c7 44 24 04 fd 02 00 	movl   $0x2fd,0x4(%esp)$/;"	l
f01017f2	obj/kern/kernel.asm	/^f01017f2:	00 $/;"	l
f01017f3	obj/kern/kernel.asm	/^f01017f3:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f01017fa	obj/kern/kernel.asm	/^f01017fa:	e8 41 e8 ff ff       	call   f0100040 <_panic>$/;"	l
f01017ff	obj/kern/kernel.asm	/^f01017ff:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101802	obj/kern/kernel.asm	/^f0101802:	39 c6                	cmp    %eax,%esi$/;"	l
f0101804	obj/kern/kernel.asm	/^f0101804:	74 04                	je     f010180a <mem_init+0x2a7>$/;"	l
f0101806	obj/kern/kernel.asm	/^f0101806:	39 c7                	cmp    %eax,%edi$/;"	l
f0101808	obj/kern/kernel.asm	/^f0101808:	75 24                	jne    f010182e <mem_init+0x2cb>$/;"	l
f010180a	obj/kern/kernel.asm	/^f010180a:	c7 44 24 0c 20 88 10 	movl   $0xf0108820,0xc(%esp)$/;"	l
f0101811	obj/kern/kernel.asm	/^f0101811:	f0 $/;"	l
f0101812	obj/kern/kernel.asm	/^f0101812:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0101819	obj/kern/kernel.asm	/^f0101819:	f0 $/;"	l
f010181a	obj/kern/kernel.asm	/^f010181a:	c7 44 24 04 fe 02 00 	movl   $0x2fe,0x4(%esp)$/;"	l
f0101821	obj/kern/kernel.asm	/^f0101821:	00 $/;"	l
f0101822	obj/kern/kernel.asm	/^f0101822:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0101829	obj/kern/kernel.asm	/^f0101829:	e8 12 e8 ff ff       	call   f0100040 <_panic>$/;"	l
f010182e	obj/kern/kernel.asm	/^f010182e:	8b 15 9c 9e 2b f0    	mov    0xf02b9e9c,%edx$/;"	l
f0101834	obj/kern/kernel.asm	/^f0101834:	a1 94 9e 2b f0       	mov    0xf02b9e94,%eax$/;"	l
f0101839	obj/kern/kernel.asm	/^f0101839:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010183c	obj/kern/kernel.asm	/^f010183c:	89 f9                	mov    %edi,%ecx$/;"	l
f010183e	obj/kern/kernel.asm	/^f010183e:	29 d1                	sub    %edx,%ecx$/;"	l
f0101840	obj/kern/kernel.asm	/^f0101840:	c1 f9 03             	sar    $0x3,%ecx$/;"	l
f0101843	obj/kern/kernel.asm	/^f0101843:	c1 e1 0c             	shl    $0xc,%ecx$/;"	l
f0101846	obj/kern/kernel.asm	/^f0101846:	39 c1                	cmp    %eax,%ecx$/;"	l
f0101848	obj/kern/kernel.asm	/^f0101848:	72 24                	jb     f010186e <mem_init+0x30b>$/;"	l
f010184a	obj/kern/kernel.asm	/^f010184a:	c7 44 24 0c 5d 91 10 	movl   $0xf010915d,0xc(%esp)$/;"	l
f0101851	obj/kern/kernel.asm	/^f0101851:	f0 $/;"	l
f0101852	obj/kern/kernel.asm	/^f0101852:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0101859	obj/kern/kernel.asm	/^f0101859:	f0 $/;"	l
f010185a	obj/kern/kernel.asm	/^f010185a:	c7 44 24 04 ff 02 00 	movl   $0x2ff,0x4(%esp)$/;"	l
f0101861	obj/kern/kernel.asm	/^f0101861:	00 $/;"	l
f0101862	obj/kern/kernel.asm	/^f0101862:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0101869	obj/kern/kernel.asm	/^f0101869:	e8 d2 e7 ff ff       	call   f0100040 <_panic>$/;"	l
f010186e	obj/kern/kernel.asm	/^f010186e:	89 f1                	mov    %esi,%ecx$/;"	l
f0101870	obj/kern/kernel.asm	/^f0101870:	29 d1                	sub    %edx,%ecx$/;"	l
f0101872	obj/kern/kernel.asm	/^f0101872:	c1 f9 03             	sar    $0x3,%ecx$/;"	l
f0101875	obj/kern/kernel.asm	/^f0101875:	c1 e1 0c             	shl    $0xc,%ecx$/;"	l
f0101878	obj/kern/kernel.asm	/^f0101878:	39 c8                	cmp    %ecx,%eax$/;"	l
f010187a	obj/kern/kernel.asm	/^f010187a:	77 24                	ja     f01018a0 <mem_init+0x33d>$/;"	l
f010187c	obj/kern/kernel.asm	/^f010187c:	c7 44 24 0c 7a 91 10 	movl   $0xf010917a,0xc(%esp)$/;"	l
f0101883	obj/kern/kernel.asm	/^f0101883:	f0 $/;"	l
f0101884	obj/kern/kernel.asm	/^f0101884:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f010188b	obj/kern/kernel.asm	/^f010188b:	f0 $/;"	l
f010188c	obj/kern/kernel.asm	/^f010188c:	c7 44 24 04 00 03 00 	movl   $0x300,0x4(%esp)$/;"	l
f0101893	obj/kern/kernel.asm	/^f0101893:	00 $/;"	l
f0101894	obj/kern/kernel.asm	/^f0101894:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f010189b	obj/kern/kernel.asm	/^f010189b:	e8 a0 e7 ff ff       	call   f0100040 <_panic>$/;"	l
f01018a0	obj/kern/kernel.asm	/^f01018a0:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f01018a3	obj/kern/kernel.asm	/^f01018a3:	29 d1                	sub    %edx,%ecx$/;"	l
f01018a5	obj/kern/kernel.asm	/^f01018a5:	89 ca                	mov    %ecx,%edx$/;"	l
f01018a7	obj/kern/kernel.asm	/^f01018a7:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01018aa	obj/kern/kernel.asm	/^f01018aa:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01018ad	obj/kern/kernel.asm	/^f01018ad:	39 d0                	cmp    %edx,%eax$/;"	l
f01018af	obj/kern/kernel.asm	/^f01018af:	77 24                	ja     f01018d5 <mem_init+0x372>$/;"	l
f01018b1	obj/kern/kernel.asm	/^f01018b1:	c7 44 24 0c 97 91 10 	movl   $0xf0109197,0xc(%esp)$/;"	l
f01018b8	obj/kern/kernel.asm	/^f01018b8:	f0 $/;"	l
f01018b9	obj/kern/kernel.asm	/^f01018b9:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f01018c0	obj/kern/kernel.asm	/^f01018c0:	f0 $/;"	l
f01018c1	obj/kern/kernel.asm	/^f01018c1:	c7 44 24 04 01 03 00 	movl   $0x301,0x4(%esp)$/;"	l
f01018c8	obj/kern/kernel.asm	/^f01018c8:	00 $/;"	l
f01018c9	obj/kern/kernel.asm	/^f01018c9:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f01018d0	obj/kern/kernel.asm	/^f01018d0:	e8 6b e7 ff ff       	call   f0100040 <_panic>$/;"	l
f01018d5	obj/kern/kernel.asm	/^f01018d5:	a1 40 92 2b f0       	mov    0xf02b9240,%eax$/;"	l
f01018da	obj/kern/kernel.asm	/^f01018da:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f01018dd	obj/kern/kernel.asm	/^f01018dd:	c7 05 40 92 2b f0 00 	movl   $0x0,0xf02b9240$/;"	l
f01018e4	obj/kern/kernel.asm	/^f01018e4:	00 00 00 $/;"	l
f01018e7	obj/kern/kernel.asm	/^f01018e7:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01018ee	obj/kern/kernel.asm	/^f01018ee:	e8 28 f8 ff ff       	call   f010111b <page_alloc>$/;"	l
f01018f3	obj/kern/kernel.asm	/^f01018f3:	85 c0                	test   %eax,%eax$/;"	l
f01018f5	obj/kern/kernel.asm	/^f01018f5:	74 24                	je     f010191b <mem_init+0x3b8>$/;"	l
f01018f7	obj/kern/kernel.asm	/^f01018f7:	c7 44 24 0c b4 91 10 	movl   $0xf01091b4,0xc(%esp)$/;"	l
f01018fe	obj/kern/kernel.asm	/^f01018fe:	f0 $/;"	l
f01018ff	obj/kern/kernel.asm	/^f01018ff:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0101906	obj/kern/kernel.asm	/^f0101906:	f0 $/;"	l
f0101907	obj/kern/kernel.asm	/^f0101907:	c7 44 24 04 08 03 00 	movl   $0x308,0x4(%esp)$/;"	l
f010190e	obj/kern/kernel.asm	/^f010190e:	00 $/;"	l
f010190f	obj/kern/kernel.asm	/^f010190f:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0101916	obj/kern/kernel.asm	/^f0101916:	e8 25 e7 ff ff       	call   f0100040 <_panic>$/;"	l
f010191b	obj/kern/kernel.asm	/^f010191b:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f010191e	obj/kern/kernel.asm	/^f010191e:	e8 88 f8 ff ff       	call   f01011ab <page_free>$/;"	l
f0101923	obj/kern/kernel.asm	/^f0101923:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101926	obj/kern/kernel.asm	/^f0101926:	e8 80 f8 ff ff       	call   f01011ab <page_free>$/;"	l
f010192b	obj/kern/kernel.asm	/^f010192b:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010192e	obj/kern/kernel.asm	/^f010192e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101931	obj/kern/kernel.asm	/^f0101931:	e8 75 f8 ff ff       	call   f01011ab <page_free>$/;"	l
f0101936	obj/kern/kernel.asm	/^f0101936:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010193d	obj/kern/kernel.asm	/^f010193d:	e8 d9 f7 ff ff       	call   f010111b <page_alloc>$/;"	l
f0101942	obj/kern/kernel.asm	/^f0101942:	89 c6                	mov    %eax,%esi$/;"	l
f0101944	obj/kern/kernel.asm	/^f0101944:	85 c0                	test   %eax,%eax$/;"	l
f0101946	obj/kern/kernel.asm	/^f0101946:	75 24                	jne    f010196c <mem_init+0x409>$/;"	l
f0101948	obj/kern/kernel.asm	/^f0101948:	c7 44 24 0c 09 91 10 	movl   $0xf0109109,0xc(%esp)$/;"	l
f010194f	obj/kern/kernel.asm	/^f010194f:	f0 $/;"	l
f0101950	obj/kern/kernel.asm	/^f0101950:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0101957	obj/kern/kernel.asm	/^f0101957:	f0 $/;"	l
f0101958	obj/kern/kernel.asm	/^f0101958:	c7 44 24 04 0f 03 00 	movl   $0x30f,0x4(%esp)$/;"	l
f010195f	obj/kern/kernel.asm	/^f010195f:	00 $/;"	l
f0101960	obj/kern/kernel.asm	/^f0101960:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0101967	obj/kern/kernel.asm	/^f0101967:	e8 d4 e6 ff ff       	call   f0100040 <_panic>$/;"	l
f010196c	obj/kern/kernel.asm	/^f010196c:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101973	obj/kern/kernel.asm	/^f0101973:	e8 a3 f7 ff ff       	call   f010111b <page_alloc>$/;"	l
f0101978	obj/kern/kernel.asm	/^f0101978:	89 c7                	mov    %eax,%edi$/;"	l
f010197a	obj/kern/kernel.asm	/^f010197a:	85 c0                	test   %eax,%eax$/;"	l
f010197c	obj/kern/kernel.asm	/^f010197c:	75 24                	jne    f01019a2 <mem_init+0x43f>$/;"	l
f010197e	obj/kern/kernel.asm	/^f010197e:	c7 44 24 0c 1f 91 10 	movl   $0xf010911f,0xc(%esp)$/;"	l
f0101985	obj/kern/kernel.asm	/^f0101985:	f0 $/;"	l
f0101986	obj/kern/kernel.asm	/^f0101986:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f010198d	obj/kern/kernel.asm	/^f010198d:	f0 $/;"	l
f010198e	obj/kern/kernel.asm	/^f010198e:	c7 44 24 04 10 03 00 	movl   $0x310,0x4(%esp)$/;"	l
f0101995	obj/kern/kernel.asm	/^f0101995:	00 $/;"	l
f0101996	obj/kern/kernel.asm	/^f0101996:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f010199d	obj/kern/kernel.asm	/^f010199d:	e8 9e e6 ff ff       	call   f0100040 <_panic>$/;"	l
f01019a2	obj/kern/kernel.asm	/^f01019a2:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01019a9	obj/kern/kernel.asm	/^f01019a9:	e8 6d f7 ff ff       	call   f010111b <page_alloc>$/;"	l
f01019ae	obj/kern/kernel.asm	/^f01019ae:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01019b1	obj/kern/kernel.asm	/^f01019b1:	85 c0                	test   %eax,%eax$/;"	l
f01019b3	obj/kern/kernel.asm	/^f01019b3:	75 24                	jne    f01019d9 <mem_init+0x476>$/;"	l
f01019b5	obj/kern/kernel.asm	/^f01019b5:	c7 44 24 0c 35 91 10 	movl   $0xf0109135,0xc(%esp)$/;"	l
f01019bc	obj/kern/kernel.asm	/^f01019bc:	f0 $/;"	l
f01019bd	obj/kern/kernel.asm	/^f01019bd:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f01019c4	obj/kern/kernel.asm	/^f01019c4:	f0 $/;"	l
f01019c5	obj/kern/kernel.asm	/^f01019c5:	c7 44 24 04 11 03 00 	movl   $0x311,0x4(%esp)$/;"	l
f01019cc	obj/kern/kernel.asm	/^f01019cc:	00 $/;"	l
f01019cd	obj/kern/kernel.asm	/^f01019cd:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f01019d4	obj/kern/kernel.asm	/^f01019d4:	e8 67 e6 ff ff       	call   f0100040 <_panic>$/;"	l
f01019d9	obj/kern/kernel.asm	/^f01019d9:	39 fe                	cmp    %edi,%esi$/;"	l
f01019db	obj/kern/kernel.asm	/^f01019db:	75 24                	jne    f0101a01 <mem_init+0x49e>$/;"	l
f01019dd	obj/kern/kernel.asm	/^f01019dd:	c7 44 24 0c 4b 91 10 	movl   $0xf010914b,0xc(%esp)$/;"	l
f01019e4	obj/kern/kernel.asm	/^f01019e4:	f0 $/;"	l
f01019e5	obj/kern/kernel.asm	/^f01019e5:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f01019ec	obj/kern/kernel.asm	/^f01019ec:	f0 $/;"	l
f01019ed	obj/kern/kernel.asm	/^f01019ed:	c7 44 24 04 13 03 00 	movl   $0x313,0x4(%esp)$/;"	l
f01019f4	obj/kern/kernel.asm	/^f01019f4:	00 $/;"	l
f01019f5	obj/kern/kernel.asm	/^f01019f5:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f01019fc	obj/kern/kernel.asm	/^f01019fc:	e8 3f e6 ff ff       	call   f0100040 <_panic>$/;"	l
f0101a01	obj/kern/kernel.asm	/^f0101a01:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101a04	obj/kern/kernel.asm	/^f0101a04:	39 c7                	cmp    %eax,%edi$/;"	l
f0101a06	obj/kern/kernel.asm	/^f0101a06:	74 04                	je     f0101a0c <mem_init+0x4a9>$/;"	l
f0101a08	obj/kern/kernel.asm	/^f0101a08:	39 c6                	cmp    %eax,%esi$/;"	l
f0101a0a	obj/kern/kernel.asm	/^f0101a0a:	75 24                	jne    f0101a30 <mem_init+0x4cd>$/;"	l
f0101a0c	obj/kern/kernel.asm	/^f0101a0c:	c7 44 24 0c 20 88 10 	movl   $0xf0108820,0xc(%esp)$/;"	l
f0101a13	obj/kern/kernel.asm	/^f0101a13:	f0 $/;"	l
f0101a14	obj/kern/kernel.asm	/^f0101a14:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0101a1b	obj/kern/kernel.asm	/^f0101a1b:	f0 $/;"	l
f0101a1c	obj/kern/kernel.asm	/^f0101a1c:	c7 44 24 04 14 03 00 	movl   $0x314,0x4(%esp)$/;"	l
f0101a23	obj/kern/kernel.asm	/^f0101a23:	00 $/;"	l
f0101a24	obj/kern/kernel.asm	/^f0101a24:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0101a2b	obj/kern/kernel.asm	/^f0101a2b:	e8 10 e6 ff ff       	call   f0100040 <_panic>$/;"	l
f0101a30	obj/kern/kernel.asm	/^f0101a30:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101a37	obj/kern/kernel.asm	/^f0101a37:	e8 df f6 ff ff       	call   f010111b <page_alloc>$/;"	l
f0101a3c	obj/kern/kernel.asm	/^f0101a3c:	85 c0                	test   %eax,%eax$/;"	l
f0101a3e	obj/kern/kernel.asm	/^f0101a3e:	74 24                	je     f0101a64 <mem_init+0x501>$/;"	l
f0101a40	obj/kern/kernel.asm	/^f0101a40:	c7 44 24 0c b4 91 10 	movl   $0xf01091b4,0xc(%esp)$/;"	l
f0101a47	obj/kern/kernel.asm	/^f0101a47:	f0 $/;"	l
f0101a48	obj/kern/kernel.asm	/^f0101a48:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0101a4f	obj/kern/kernel.asm	/^f0101a4f:	f0 $/;"	l
f0101a50	obj/kern/kernel.asm	/^f0101a50:	c7 44 24 04 15 03 00 	movl   $0x315,0x4(%esp)$/;"	l
f0101a57	obj/kern/kernel.asm	/^f0101a57:	00 $/;"	l
f0101a58	obj/kern/kernel.asm	/^f0101a58:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0101a5f	obj/kern/kernel.asm	/^f0101a5f:	e8 dc e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101a64	obj/kern/kernel.asm	/^f0101a64:	89 f0                	mov    %esi,%eax$/;"	l
f0101a66	obj/kern/kernel.asm	/^f0101a66:	2b 05 9c 9e 2b f0    	sub    0xf02b9e9c,%eax$/;"	l
f0101a6c	obj/kern/kernel.asm	/^f0101a6c:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101a6f	obj/kern/kernel.asm	/^f0101a6f:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101a72	obj/kern/kernel.asm	/^f0101a72:	89 c2                	mov    %eax,%edx$/;"	l
f0101a74	obj/kern/kernel.asm	/^f0101a74:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101a77	obj/kern/kernel.asm	/^f0101a77:	3b 15 94 9e 2b f0    	cmp    0xf02b9e94,%edx$/;"	l
f0101a7d	obj/kern/kernel.asm	/^f0101a7d:	72 20                	jb     f0101a9f <mem_init+0x53c>$/;"	l
f0101a7f	obj/kern/kernel.asm	/^f0101a7f:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101a83	obj/kern/kernel.asm	/^f0101a83:	c7 44 24 08 a4 80 10 	movl   $0xf01080a4,0x8(%esp)$/;"	l
f0101a8a	obj/kern/kernel.asm	/^f0101a8a:	f0 $/;"	l
f0101a8b	obj/kern/kernel.asm	/^f0101a8b:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0101a92	obj/kern/kernel.asm	/^f0101a92:	00 $/;"	l
f0101a93	obj/kern/kernel.asm	/^f0101a93:	c7 04 24 fd 8f 10 f0 	movl   $0xf0108ffd,(%esp)$/;"	l
f0101a9a	obj/kern/kernel.asm	/^f0101a9a:	e8 a1 e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101a9f	obj/kern/kernel.asm	/^f0101a9f:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0101aa6	obj/kern/kernel.asm	/^f0101aa6:	00 $/;"	l
f0101aa7	obj/kern/kernel.asm	/^f0101aa7:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
f0101aae	obj/kern/kernel.asm	/^f0101aae:	00 $/;"	l
f0101aaf	obj/kern/kernel.asm	/^f0101aaf:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0101ab4	obj/kern/kernel.asm	/^f0101ab4:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101ab7	obj/kern/kernel.asm	/^f0101ab7:	e8 db 4a 00 00       	call   f0106597 <memset>$/;"	l
f0101abc	obj/kern/kernel.asm	/^f0101abc:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101abf	obj/kern/kernel.asm	/^f0101abf:	e8 e7 f6 ff ff       	call   f01011ab <page_free>$/;"	l
f0101ac4	obj/kern/kernel.asm	/^f0101ac4:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f0101acb	obj/kern/kernel.asm	/^f0101acb:	e8 4b f6 ff ff       	call   f010111b <page_alloc>$/;"	l
f0101ad0	obj/kern/kernel.asm	/^f0101ad0:	85 c0                	test   %eax,%eax$/;"	l
f0101ad2	obj/kern/kernel.asm	/^f0101ad2:	75 24                	jne    f0101af8 <mem_init+0x595>$/;"	l
f0101ad4	obj/kern/kernel.asm	/^f0101ad4:	c7 44 24 0c c3 91 10 	movl   $0xf01091c3,0xc(%esp)$/;"	l
f0101adb	obj/kern/kernel.asm	/^f0101adb:	f0 $/;"	l
f0101adc	obj/kern/kernel.asm	/^f0101adc:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0101ae3	obj/kern/kernel.asm	/^f0101ae3:	f0 $/;"	l
f0101ae4	obj/kern/kernel.asm	/^f0101ae4:	c7 44 24 04 1a 03 00 	movl   $0x31a,0x4(%esp)$/;"	l
f0101aeb	obj/kern/kernel.asm	/^f0101aeb:	00 $/;"	l
f0101aec	obj/kern/kernel.asm	/^f0101aec:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0101af3	obj/kern/kernel.asm	/^f0101af3:	e8 48 e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101af8	obj/kern/kernel.asm	/^f0101af8:	39 c6                	cmp    %eax,%esi$/;"	l
f0101afa	obj/kern/kernel.asm	/^f0101afa:	74 24                	je     f0101b20 <mem_init+0x5bd>$/;"	l
f0101afc	obj/kern/kernel.asm	/^f0101afc:	c7 44 24 0c e1 91 10 	movl   $0xf01091e1,0xc(%esp)$/;"	l
f0101b03	obj/kern/kernel.asm	/^f0101b03:	f0 $/;"	l
f0101b04	obj/kern/kernel.asm	/^f0101b04:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0101b0b	obj/kern/kernel.asm	/^f0101b0b:	f0 $/;"	l
f0101b0c	obj/kern/kernel.asm	/^f0101b0c:	c7 44 24 04 1b 03 00 	movl   $0x31b,0x4(%esp)$/;"	l
f0101b13	obj/kern/kernel.asm	/^f0101b13:	00 $/;"	l
f0101b14	obj/kern/kernel.asm	/^f0101b14:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0101b1b	obj/kern/kernel.asm	/^f0101b1b:	e8 20 e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101b20	obj/kern/kernel.asm	/^f0101b20:	89 f0                	mov    %esi,%eax$/;"	l
f0101b22	obj/kern/kernel.asm	/^f0101b22:	2b 05 9c 9e 2b f0    	sub    0xf02b9e9c,%eax$/;"	l
f0101b28	obj/kern/kernel.asm	/^f0101b28:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101b2b	obj/kern/kernel.asm	/^f0101b2b:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101b2e	obj/kern/kernel.asm	/^f0101b2e:	89 c2                	mov    %eax,%edx$/;"	l
f0101b30	obj/kern/kernel.asm	/^f0101b30:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101b33	obj/kern/kernel.asm	/^f0101b33:	3b 15 94 9e 2b f0    	cmp    0xf02b9e94,%edx$/;"	l
f0101b39	obj/kern/kernel.asm	/^f0101b39:	72 20                	jb     f0101b5b <mem_init+0x5f8>$/;"	l
f0101b3b	obj/kern/kernel.asm	/^f0101b3b:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101b3f	obj/kern/kernel.asm	/^f0101b3f:	c7 44 24 08 a4 80 10 	movl   $0xf01080a4,0x8(%esp)$/;"	l
f0101b46	obj/kern/kernel.asm	/^f0101b46:	f0 $/;"	l
f0101b47	obj/kern/kernel.asm	/^f0101b47:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0101b4e	obj/kern/kernel.asm	/^f0101b4e:	00 $/;"	l
f0101b4f	obj/kern/kernel.asm	/^f0101b4f:	c7 04 24 fd 8f 10 f0 	movl   $0xf0108ffd,(%esp)$/;"	l
f0101b56	obj/kern/kernel.asm	/^f0101b56:	e8 e5 e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101b5b	obj/kern/kernel.asm	/^f0101b5b:	8d 90 00 10 00 f0    	lea    -0xffff000(%eax),%edx$/;"	l
f0101b61	obj/kern/kernel.asm	/^f0101b61:	8d 80 00 00 00 f0    	lea    -0x10000000(%eax),%eax$/;"	l
f0101b67	obj/kern/kernel.asm	/^f0101b67:	80 38 00             	cmpb   $0x0,(%eax)$/;"	l
f0101b6a	obj/kern/kernel.asm	/^f0101b6a:	74 24                	je     f0101b90 <mem_init+0x62d>$/;"	l
f0101b6c	obj/kern/kernel.asm	/^f0101b6c:	c7 44 24 0c f1 91 10 	movl   $0xf01091f1,0xc(%esp)$/;"	l
f0101b73	obj/kern/kernel.asm	/^f0101b73:	f0 $/;"	l
f0101b74	obj/kern/kernel.asm	/^f0101b74:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0101b7b	obj/kern/kernel.asm	/^f0101b7b:	f0 $/;"	l
f0101b7c	obj/kern/kernel.asm	/^f0101b7c:	c7 44 24 04 1e 03 00 	movl   $0x31e,0x4(%esp)$/;"	l
f0101b83	obj/kern/kernel.asm	/^f0101b83:	00 $/;"	l
f0101b84	obj/kern/kernel.asm	/^f0101b84:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0101b8b	obj/kern/kernel.asm	/^f0101b8b:	e8 b0 e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101b90	obj/kern/kernel.asm	/^f0101b90:	83 c0 01             	add    $0x1,%eax$/;"	l
f0101b93	obj/kern/kernel.asm	/^f0101b93:	39 d0                	cmp    %edx,%eax$/;"	l
f0101b95	obj/kern/kernel.asm	/^f0101b95:	75 d0                	jne    f0101b67 <mem_init+0x604>$/;"	l
f0101b97	obj/kern/kernel.asm	/^f0101b97:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0101b9a	obj/kern/kernel.asm	/^f0101b9a:	a3 40 92 2b f0       	mov    %eax,0xf02b9240$/;"	l
f0101b9f	obj/kern/kernel.asm	/^f0101b9f:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101ba2	obj/kern/kernel.asm	/^f0101ba2:	e8 04 f6 ff ff       	call   f01011ab <page_free>$/;"	l
f0101ba7	obj/kern/kernel.asm	/^f0101ba7:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0101baa	obj/kern/kernel.asm	/^f0101baa:	e8 fc f5 ff ff       	call   f01011ab <page_free>$/;"	l
f0101baf	obj/kern/kernel.asm	/^f0101baf:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101bb2	obj/kern/kernel.asm	/^f0101bb2:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101bb5	obj/kern/kernel.asm	/^f0101bb5:	e8 f1 f5 ff ff       	call   f01011ab <page_free>$/;"	l
f0101bba	obj/kern/kernel.asm	/^f0101bba:	a1 40 92 2b f0       	mov    0xf02b9240,%eax$/;"	l
f0101bbf	obj/kern/kernel.asm	/^f0101bbf:	eb 05                	jmp    f0101bc6 <mem_init+0x663>$/;"	l
f0101bc1	obj/kern/kernel.asm	/^f0101bc1:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0101bc4	obj/kern/kernel.asm	/^f0101bc4:	8b 00                	mov    (%eax),%eax$/;"	l
f0101bc6	obj/kern/kernel.asm	/^f0101bc6:	85 c0                	test   %eax,%eax$/;"	l
f0101bc8	obj/kern/kernel.asm	/^f0101bc8:	75 f7                	jne    f0101bc1 <mem_init+0x65e>$/;"	l
f0101bca	obj/kern/kernel.asm	/^f0101bca:	85 db                	test   %ebx,%ebx$/;"	l
f0101bcc	obj/kern/kernel.asm	/^f0101bcc:	74 24                	je     f0101bf2 <mem_init+0x68f>$/;"	l
f0101bce	obj/kern/kernel.asm	/^f0101bce:	c7 44 24 0c fb 91 10 	movl   $0xf01091fb,0xc(%esp)$/;"	l
f0101bd5	obj/kern/kernel.asm	/^f0101bd5:	f0 $/;"	l
f0101bd6	obj/kern/kernel.asm	/^f0101bd6:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0101bdd	obj/kern/kernel.asm	/^f0101bdd:	f0 $/;"	l
f0101bde	obj/kern/kernel.asm	/^f0101bde:	c7 44 24 04 2b 03 00 	movl   $0x32b,0x4(%esp)$/;"	l
f0101be5	obj/kern/kernel.asm	/^f0101be5:	00 $/;"	l
f0101be6	obj/kern/kernel.asm	/^f0101be6:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0101bed	obj/kern/kernel.asm	/^f0101bed:	e8 4e e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101bf2	obj/kern/kernel.asm	/^f0101bf2:	c7 04 24 40 88 10 f0 	movl   $0xf0108840,(%esp)$/;"	l
f0101bf9	obj/kern/kernel.asm	/^f0101bf9:	e8 ce 23 00 00       	call   f0103fcc <cprintf>$/;"	l
f0101bfe	obj/kern/kernel.asm	/^f0101bfe:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101c05	obj/kern/kernel.asm	/^f0101c05:	e8 11 f5 ff ff       	call   f010111b <page_alloc>$/;"	l
f0101c0a	obj/kern/kernel.asm	/^f0101c0a:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0101c0d	obj/kern/kernel.asm	/^f0101c0d:	85 c0                	test   %eax,%eax$/;"	l
f0101c0f	obj/kern/kernel.asm	/^f0101c0f:	75 24                	jne    f0101c35 <mem_init+0x6d2>$/;"	l
f0101c11	obj/kern/kernel.asm	/^f0101c11:	c7 44 24 0c 09 91 10 	movl   $0xf0109109,0xc(%esp)$/;"	l
f0101c18	obj/kern/kernel.asm	/^f0101c18:	f0 $/;"	l
f0101c19	obj/kern/kernel.asm	/^f0101c19:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0101c20	obj/kern/kernel.asm	/^f0101c20:	f0 $/;"	l
f0101c21	obj/kern/kernel.asm	/^f0101c21:	c7 44 24 04 91 03 00 	movl   $0x391,0x4(%esp)$/;"	l
f0101c28	obj/kern/kernel.asm	/^f0101c28:	00 $/;"	l
f0101c29	obj/kern/kernel.asm	/^f0101c29:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0101c30	obj/kern/kernel.asm	/^f0101c30:	e8 0b e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101c35	obj/kern/kernel.asm	/^f0101c35:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101c3c	obj/kern/kernel.asm	/^f0101c3c:	e8 da f4 ff ff       	call   f010111b <page_alloc>$/;"	l
f0101c41	obj/kern/kernel.asm	/^f0101c41:	89 c3                	mov    %eax,%ebx$/;"	l
f0101c43	obj/kern/kernel.asm	/^f0101c43:	85 c0                	test   %eax,%eax$/;"	l
f0101c45	obj/kern/kernel.asm	/^f0101c45:	75 24                	jne    f0101c6b <mem_init+0x708>$/;"	l
f0101c47	obj/kern/kernel.asm	/^f0101c47:	c7 44 24 0c 1f 91 10 	movl   $0xf010911f,0xc(%esp)$/;"	l
f0101c4e	obj/kern/kernel.asm	/^f0101c4e:	f0 $/;"	l
f0101c4f	obj/kern/kernel.asm	/^f0101c4f:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0101c56	obj/kern/kernel.asm	/^f0101c56:	f0 $/;"	l
f0101c57	obj/kern/kernel.asm	/^f0101c57:	c7 44 24 04 92 03 00 	movl   $0x392,0x4(%esp)$/;"	l
f0101c5e	obj/kern/kernel.asm	/^f0101c5e:	00 $/;"	l
f0101c5f	obj/kern/kernel.asm	/^f0101c5f:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0101c66	obj/kern/kernel.asm	/^f0101c66:	e8 d5 e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101c6b	obj/kern/kernel.asm	/^f0101c6b:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101c72	obj/kern/kernel.asm	/^f0101c72:	e8 a4 f4 ff ff       	call   f010111b <page_alloc>$/;"	l
f0101c77	obj/kern/kernel.asm	/^f0101c77:	89 c6                	mov    %eax,%esi$/;"	l
f0101c79	obj/kern/kernel.asm	/^f0101c79:	85 c0                	test   %eax,%eax$/;"	l
f0101c7b	obj/kern/kernel.asm	/^f0101c7b:	75 24                	jne    f0101ca1 <mem_init+0x73e>$/;"	l
f0101c7d	obj/kern/kernel.asm	/^f0101c7d:	c7 44 24 0c 35 91 10 	movl   $0xf0109135,0xc(%esp)$/;"	l
f0101c84	obj/kern/kernel.asm	/^f0101c84:	f0 $/;"	l
f0101c85	obj/kern/kernel.asm	/^f0101c85:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0101c8c	obj/kern/kernel.asm	/^f0101c8c:	f0 $/;"	l
f0101c8d	obj/kern/kernel.asm	/^f0101c8d:	c7 44 24 04 93 03 00 	movl   $0x393,0x4(%esp)$/;"	l
f0101c94	obj/kern/kernel.asm	/^f0101c94:	00 $/;"	l
f0101c95	obj/kern/kernel.asm	/^f0101c95:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0101c9c	obj/kern/kernel.asm	/^f0101c9c:	e8 9f e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101ca1	obj/kern/kernel.asm	/^f0101ca1:	39 5d d4             	cmp    %ebx,-0x2c(%ebp)$/;"	l
f0101ca4	obj/kern/kernel.asm	/^f0101ca4:	75 24                	jne    f0101cca <mem_init+0x767>$/;"	l
f0101ca6	obj/kern/kernel.asm	/^f0101ca6:	c7 44 24 0c 4b 91 10 	movl   $0xf010914b,0xc(%esp)$/;"	l
f0101cad	obj/kern/kernel.asm	/^f0101cad:	f0 $/;"	l
f0101cae	obj/kern/kernel.asm	/^f0101cae:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0101cb5	obj/kern/kernel.asm	/^f0101cb5:	f0 $/;"	l
f0101cb6	obj/kern/kernel.asm	/^f0101cb6:	c7 44 24 04 96 03 00 	movl   $0x396,0x4(%esp)$/;"	l
f0101cbd	obj/kern/kernel.asm	/^f0101cbd:	00 $/;"	l
f0101cbe	obj/kern/kernel.asm	/^f0101cbe:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0101cc5	obj/kern/kernel.asm	/^f0101cc5:	e8 76 e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101cca	obj/kern/kernel.asm	/^f0101cca:	39 c3                	cmp    %eax,%ebx$/;"	l
f0101ccc	obj/kern/kernel.asm	/^f0101ccc:	74 05                	je     f0101cd3 <mem_init+0x770>$/;"	l
f0101cce	obj/kern/kernel.asm	/^f0101cce:	39 45 d4             	cmp    %eax,-0x2c(%ebp)$/;"	l
f0101cd1	obj/kern/kernel.asm	/^f0101cd1:	75 24                	jne    f0101cf7 <mem_init+0x794>$/;"	l
f0101cd3	obj/kern/kernel.asm	/^f0101cd3:	c7 44 24 0c 20 88 10 	movl   $0xf0108820,0xc(%esp)$/;"	l
f0101cda	obj/kern/kernel.asm	/^f0101cda:	f0 $/;"	l
f0101cdb	obj/kern/kernel.asm	/^f0101cdb:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0101ce2	obj/kern/kernel.asm	/^f0101ce2:	f0 $/;"	l
f0101ce3	obj/kern/kernel.asm	/^f0101ce3:	c7 44 24 04 97 03 00 	movl   $0x397,0x4(%esp)$/;"	l
f0101cea	obj/kern/kernel.asm	/^f0101cea:	00 $/;"	l
f0101ceb	obj/kern/kernel.asm	/^f0101ceb:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0101cf2	obj/kern/kernel.asm	/^f0101cf2:	e8 49 e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101cf7	obj/kern/kernel.asm	/^f0101cf7:	a1 40 92 2b f0       	mov    0xf02b9240,%eax$/;"	l
f0101cfc	obj/kern/kernel.asm	/^f0101cfc:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0101cff	obj/kern/kernel.asm	/^f0101cff:	c7 05 40 92 2b f0 00 	movl   $0x0,0xf02b9240$/;"	l
f0101d06	obj/kern/kernel.asm	/^f0101d06:	00 00 00 $/;"	l
f0101d09	obj/kern/kernel.asm	/^f0101d09:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101d10	obj/kern/kernel.asm	/^f0101d10:	e8 06 f4 ff ff       	call   f010111b <page_alloc>$/;"	l
f0101d15	obj/kern/kernel.asm	/^f0101d15:	85 c0                	test   %eax,%eax$/;"	l
f0101d17	obj/kern/kernel.asm	/^f0101d17:	74 24                	je     f0101d3d <mem_init+0x7da>$/;"	l
f0101d19	obj/kern/kernel.asm	/^f0101d19:	c7 44 24 0c b4 91 10 	movl   $0xf01091b4,0xc(%esp)$/;"	l
f0101d20	obj/kern/kernel.asm	/^f0101d20:	f0 $/;"	l
f0101d21	obj/kern/kernel.asm	/^f0101d21:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0101d28	obj/kern/kernel.asm	/^f0101d28:	f0 $/;"	l
f0101d29	obj/kern/kernel.asm	/^f0101d29:	c7 44 24 04 9e 03 00 	movl   $0x39e,0x4(%esp)$/;"	l
f0101d30	obj/kern/kernel.asm	/^f0101d30:	00 $/;"	l
f0101d31	obj/kern/kernel.asm	/^f0101d31:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0101d38	obj/kern/kernel.asm	/^f0101d38:	e8 03 e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101d3d	obj/kern/kernel.asm	/^f0101d3d:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0101d40	obj/kern/kernel.asm	/^f0101d40:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0101d44	obj/kern/kernel.asm	/^f0101d44:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0101d4b	obj/kern/kernel.asm	/^f0101d4b:	00 $/;"	l
f0101d4c	obj/kern/kernel.asm	/^f0101d4c:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f0101d51	obj/kern/kernel.asm	/^f0101d51:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101d54	obj/kern/kernel.asm	/^f0101d54:	e8 0b f6 ff ff       	call   f0101364 <page_lookup>$/;"	l
f0101d59	obj/kern/kernel.asm	/^f0101d59:	85 c0                	test   %eax,%eax$/;"	l
f0101d5b	obj/kern/kernel.asm	/^f0101d5b:	74 24                	je     f0101d81 <mem_init+0x81e>$/;"	l
f0101d5d	obj/kern/kernel.asm	/^f0101d5d:	c7 44 24 0c 60 88 10 	movl   $0xf0108860,0xc(%esp)$/;"	l
f0101d64	obj/kern/kernel.asm	/^f0101d64:	f0 $/;"	l
f0101d65	obj/kern/kernel.asm	/^f0101d65:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0101d6c	obj/kern/kernel.asm	/^f0101d6c:	f0 $/;"	l
f0101d6d	obj/kern/kernel.asm	/^f0101d6d:	c7 44 24 04 a1 03 00 	movl   $0x3a1,0x4(%esp)$/;"	l
f0101d74	obj/kern/kernel.asm	/^f0101d74:	00 $/;"	l
f0101d75	obj/kern/kernel.asm	/^f0101d75:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0101d7c	obj/kern/kernel.asm	/^f0101d7c:	e8 bf e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101d81	obj/kern/kernel.asm	/^f0101d81:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0101d88	obj/kern/kernel.asm	/^f0101d88:	00 $/;"	l
f0101d89	obj/kern/kernel.asm	/^f0101d89:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0101d90	obj/kern/kernel.asm	/^f0101d90:	00 $/;"	l
f0101d91	obj/kern/kernel.asm	/^f0101d91:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0101d95	obj/kern/kernel.asm	/^f0101d95:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f0101d9a	obj/kern/kernel.asm	/^f0101d9a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101d9d	obj/kern/kernel.asm	/^f0101d9d:	e8 b9 f6 ff ff       	call   f010145b <page_insert>$/;"	l
f0101da2	obj/kern/kernel.asm	/^f0101da2:	85 c0                	test   %eax,%eax$/;"	l
f0101da4	obj/kern/kernel.asm	/^f0101da4:	78 24                	js     f0101dca <mem_init+0x867>$/;"	l
f0101da6	obj/kern/kernel.asm	/^f0101da6:	c7 44 24 0c 98 88 10 	movl   $0xf0108898,0xc(%esp)$/;"	l
f0101dad	obj/kern/kernel.asm	/^f0101dad:	f0 $/;"	l
f0101dae	obj/kern/kernel.asm	/^f0101dae:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0101db5	obj/kern/kernel.asm	/^f0101db5:	f0 $/;"	l
f0101db6	obj/kern/kernel.asm	/^f0101db6:	c7 44 24 04 a4 03 00 	movl   $0x3a4,0x4(%esp)$/;"	l
f0101dbd	obj/kern/kernel.asm	/^f0101dbd:	00 $/;"	l
f0101dbe	obj/kern/kernel.asm	/^f0101dbe:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0101dc5	obj/kern/kernel.asm	/^f0101dc5:	e8 76 e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101dca	obj/kern/kernel.asm	/^f0101dca:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101dcd	obj/kern/kernel.asm	/^f0101dcd:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101dd0	obj/kern/kernel.asm	/^f0101dd0:	e8 d6 f3 ff ff       	call   f01011ab <page_free>$/;"	l
f0101dd5	obj/kern/kernel.asm	/^f0101dd5:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0101ddc	obj/kern/kernel.asm	/^f0101ddc:	00 $/;"	l
f0101ddd	obj/kern/kernel.asm	/^f0101ddd:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0101de4	obj/kern/kernel.asm	/^f0101de4:	00 $/;"	l
f0101de5	obj/kern/kernel.asm	/^f0101de5:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0101de9	obj/kern/kernel.asm	/^f0101de9:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f0101dee	obj/kern/kernel.asm	/^f0101dee:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101df1	obj/kern/kernel.asm	/^f0101df1:	e8 65 f6 ff ff       	call   f010145b <page_insert>$/;"	l
f0101df6	obj/kern/kernel.asm	/^f0101df6:	85 c0                	test   %eax,%eax$/;"	l
f0101df8	obj/kern/kernel.asm	/^f0101df8:	74 24                	je     f0101e1e <mem_init+0x8bb>$/;"	l
f0101dfa	obj/kern/kernel.asm	/^f0101dfa:	c7 44 24 0c c8 88 10 	movl   $0xf01088c8,0xc(%esp)$/;"	l
f0101e01	obj/kern/kernel.asm	/^f0101e01:	f0 $/;"	l
f0101e02	obj/kern/kernel.asm	/^f0101e02:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0101e09	obj/kern/kernel.asm	/^f0101e09:	f0 $/;"	l
f0101e0a	obj/kern/kernel.asm	/^f0101e0a:	c7 44 24 04 a8 03 00 	movl   $0x3a8,0x4(%esp)$/;"	l
f0101e11	obj/kern/kernel.asm	/^f0101e11:	00 $/;"	l
f0101e12	obj/kern/kernel.asm	/^f0101e12:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0101e19	obj/kern/kernel.asm	/^f0101e19:	e8 22 e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101e1e	obj/kern/kernel.asm	/^f0101e1e:	8b 3d 98 9e 2b f0    	mov    0xf02b9e98,%edi$/;"	l
f0101e24	obj/kern/kernel.asm	/^f0101e24:	a1 9c 9e 2b f0       	mov    0xf02b9e9c,%eax$/;"	l
f0101e29	obj/kern/kernel.asm	/^f0101e29:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0101e2c	obj/kern/kernel.asm	/^f0101e2c:	8b 17                	mov    (%edi),%edx$/;"	l
f0101e2e	obj/kern/kernel.asm	/^f0101e2e:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0101e34	obj/kern/kernel.asm	/^f0101e34:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f0101e37	obj/kern/kernel.asm	/^f0101e37:	29 c1                	sub    %eax,%ecx$/;"	l
f0101e39	obj/kern/kernel.asm	/^f0101e39:	89 c8                	mov    %ecx,%eax$/;"	l
f0101e3b	obj/kern/kernel.asm	/^f0101e3b:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101e3e	obj/kern/kernel.asm	/^f0101e3e:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101e41	obj/kern/kernel.asm	/^f0101e41:	39 c2                	cmp    %eax,%edx$/;"	l
f0101e43	obj/kern/kernel.asm	/^f0101e43:	74 24                	je     f0101e69 <mem_init+0x906>$/;"	l
f0101e45	obj/kern/kernel.asm	/^f0101e45:	c7 44 24 0c f8 88 10 	movl   $0xf01088f8,0xc(%esp)$/;"	l
f0101e4c	obj/kern/kernel.asm	/^f0101e4c:	f0 $/;"	l
f0101e4d	obj/kern/kernel.asm	/^f0101e4d:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0101e54	obj/kern/kernel.asm	/^f0101e54:	f0 $/;"	l
f0101e55	obj/kern/kernel.asm	/^f0101e55:	c7 44 24 04 a9 03 00 	movl   $0x3a9,0x4(%esp)$/;"	l
f0101e5c	obj/kern/kernel.asm	/^f0101e5c:	00 $/;"	l
f0101e5d	obj/kern/kernel.asm	/^f0101e5d:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0101e64	obj/kern/kernel.asm	/^f0101e64:	e8 d7 e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101e69	obj/kern/kernel.asm	/^f0101e69:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0101e6e	obj/kern/kernel.asm	/^f0101e6e:	89 f8                	mov    %edi,%eax$/;"	l
f0101e70	obj/kern/kernel.asm	/^f0101e70:	e8 60 ed ff ff       	call   f0100bd5 <check_va2pa>$/;"	l
f0101e75	obj/kern/kernel.asm	/^f0101e75:	89 da                	mov    %ebx,%edx$/;"	l
f0101e77	obj/kern/kernel.asm	/^f0101e77:	2b 55 cc             	sub    -0x34(%ebp),%edx$/;"	l
f0101e7a	obj/kern/kernel.asm	/^f0101e7a:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101e7d	obj/kern/kernel.asm	/^f0101e7d:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101e80	obj/kern/kernel.asm	/^f0101e80:	39 d0                	cmp    %edx,%eax$/;"	l
f0101e82	obj/kern/kernel.asm	/^f0101e82:	74 24                	je     f0101ea8 <mem_init+0x945>$/;"	l
f0101e84	obj/kern/kernel.asm	/^f0101e84:	c7 44 24 0c 20 89 10 	movl   $0xf0108920,0xc(%esp)$/;"	l
f0101e8b	obj/kern/kernel.asm	/^f0101e8b:	f0 $/;"	l
f0101e8c	obj/kern/kernel.asm	/^f0101e8c:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0101e93	obj/kern/kernel.asm	/^f0101e93:	f0 $/;"	l
f0101e94	obj/kern/kernel.asm	/^f0101e94:	c7 44 24 04 aa 03 00 	movl   $0x3aa,0x4(%esp)$/;"	l
f0101e9b	obj/kern/kernel.asm	/^f0101e9b:	00 $/;"	l
f0101e9c	obj/kern/kernel.asm	/^f0101e9c:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0101ea3	obj/kern/kernel.asm	/^f0101ea3:	e8 98 e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101ea8	obj/kern/kernel.asm	/^f0101ea8:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0101ead	obj/kern/kernel.asm	/^f0101ead:	74 24                	je     f0101ed3 <mem_init+0x970>$/;"	l
f0101eaf	obj/kern/kernel.asm	/^f0101eaf:	c7 44 24 0c 06 92 10 	movl   $0xf0109206,0xc(%esp)$/;"	l
f0101eb6	obj/kern/kernel.asm	/^f0101eb6:	f0 $/;"	l
f0101eb7	obj/kern/kernel.asm	/^f0101eb7:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0101ebe	obj/kern/kernel.asm	/^f0101ebe:	f0 $/;"	l
f0101ebf	obj/kern/kernel.asm	/^f0101ebf:	c7 44 24 04 ab 03 00 	movl   $0x3ab,0x4(%esp)$/;"	l
f0101ec6	obj/kern/kernel.asm	/^f0101ec6:	00 $/;"	l
f0101ec7	obj/kern/kernel.asm	/^f0101ec7:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0101ece	obj/kern/kernel.asm	/^f0101ece:	e8 6d e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101ed3	obj/kern/kernel.asm	/^f0101ed3:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101ed6	obj/kern/kernel.asm	/^f0101ed6:	66 83 78 04 01       	cmpw   $0x1,0x4(%eax)$/;"	l
f0101edb	obj/kern/kernel.asm	/^f0101edb:	74 24                	je     f0101f01 <mem_init+0x99e>$/;"	l
f0101edd	obj/kern/kernel.asm	/^f0101edd:	c7 44 24 0c 17 92 10 	movl   $0xf0109217,0xc(%esp)$/;"	l
f0101ee4	obj/kern/kernel.asm	/^f0101ee4:	f0 $/;"	l
f0101ee5	obj/kern/kernel.asm	/^f0101ee5:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0101eec	obj/kern/kernel.asm	/^f0101eec:	f0 $/;"	l
f0101eed	obj/kern/kernel.asm	/^f0101eed:	c7 44 24 04 ac 03 00 	movl   $0x3ac,0x4(%esp)$/;"	l
f0101ef4	obj/kern/kernel.asm	/^f0101ef4:	00 $/;"	l
f0101ef5	obj/kern/kernel.asm	/^f0101ef5:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0101efc	obj/kern/kernel.asm	/^f0101efc:	e8 3f e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101f01	obj/kern/kernel.asm	/^f0101f01:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0101f08	obj/kern/kernel.asm	/^f0101f08:	00 $/;"	l
f0101f09	obj/kern/kernel.asm	/^f0101f09:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0101f10	obj/kern/kernel.asm	/^f0101f10:	00 $/;"	l
f0101f11	obj/kern/kernel.asm	/^f0101f11:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0101f15	obj/kern/kernel.asm	/^f0101f15:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0101f18	obj/kern/kernel.asm	/^f0101f18:	e8 3e f5 ff ff       	call   f010145b <page_insert>$/;"	l
f0101f1d	obj/kern/kernel.asm	/^f0101f1d:	85 c0                	test   %eax,%eax$/;"	l
f0101f1f	obj/kern/kernel.asm	/^f0101f1f:	74 24                	je     f0101f45 <mem_init+0x9e2>$/;"	l
f0101f21	obj/kern/kernel.asm	/^f0101f21:	c7 44 24 0c 50 89 10 	movl   $0xf0108950,0xc(%esp)$/;"	l
f0101f28	obj/kern/kernel.asm	/^f0101f28:	f0 $/;"	l
f0101f29	obj/kern/kernel.asm	/^f0101f29:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0101f30	obj/kern/kernel.asm	/^f0101f30:	f0 $/;"	l
f0101f31	obj/kern/kernel.asm	/^f0101f31:	c7 44 24 04 af 03 00 	movl   $0x3af,0x4(%esp)$/;"	l
f0101f38	obj/kern/kernel.asm	/^f0101f38:	00 $/;"	l
f0101f39	obj/kern/kernel.asm	/^f0101f39:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0101f40	obj/kern/kernel.asm	/^f0101f40:	e8 fb e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101f45	obj/kern/kernel.asm	/^f0101f45:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101f4a	obj/kern/kernel.asm	/^f0101f4a:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f0101f4f	obj/kern/kernel.asm	/^f0101f4f:	e8 81 ec ff ff       	call   f0100bd5 <check_va2pa>$/;"	l
f0101f54	obj/kern/kernel.asm	/^f0101f54:	89 f2                	mov    %esi,%edx$/;"	l
f0101f56	obj/kern/kernel.asm	/^f0101f56:	2b 15 9c 9e 2b f0    	sub    0xf02b9e9c,%edx$/;"	l
f0101f5c	obj/kern/kernel.asm	/^f0101f5c:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101f5f	obj/kern/kernel.asm	/^f0101f5f:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101f62	obj/kern/kernel.asm	/^f0101f62:	39 d0                	cmp    %edx,%eax$/;"	l
f0101f64	obj/kern/kernel.asm	/^f0101f64:	74 24                	je     f0101f8a <mem_init+0xa27>$/;"	l
f0101f66	obj/kern/kernel.asm	/^f0101f66:	c7 44 24 0c 8c 89 10 	movl   $0xf010898c,0xc(%esp)$/;"	l
f0101f6d	obj/kern/kernel.asm	/^f0101f6d:	f0 $/;"	l
f0101f6e	obj/kern/kernel.asm	/^f0101f6e:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0101f75	obj/kern/kernel.asm	/^f0101f75:	f0 $/;"	l
f0101f76	obj/kern/kernel.asm	/^f0101f76:	c7 44 24 04 b0 03 00 	movl   $0x3b0,0x4(%esp)$/;"	l
f0101f7d	obj/kern/kernel.asm	/^f0101f7d:	00 $/;"	l
f0101f7e	obj/kern/kernel.asm	/^f0101f7e:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0101f85	obj/kern/kernel.asm	/^f0101f85:	e8 b6 e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101f8a	obj/kern/kernel.asm	/^f0101f8a:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0101f8f	obj/kern/kernel.asm	/^f0101f8f:	74 24                	je     f0101fb5 <mem_init+0xa52>$/;"	l
f0101f91	obj/kern/kernel.asm	/^f0101f91:	c7 44 24 0c 28 92 10 	movl   $0xf0109228,0xc(%esp)$/;"	l
f0101f98	obj/kern/kernel.asm	/^f0101f98:	f0 $/;"	l
f0101f99	obj/kern/kernel.asm	/^f0101f99:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0101fa0	obj/kern/kernel.asm	/^f0101fa0:	f0 $/;"	l
f0101fa1	obj/kern/kernel.asm	/^f0101fa1:	c7 44 24 04 b1 03 00 	movl   $0x3b1,0x4(%esp)$/;"	l
f0101fa8	obj/kern/kernel.asm	/^f0101fa8:	00 $/;"	l
f0101fa9	obj/kern/kernel.asm	/^f0101fa9:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0101fb0	obj/kern/kernel.asm	/^f0101fb0:	e8 8b e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101fb5	obj/kern/kernel.asm	/^f0101fb5:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101fbc	obj/kern/kernel.asm	/^f0101fbc:	e8 5a f1 ff ff       	call   f010111b <page_alloc>$/;"	l
f0101fc1	obj/kern/kernel.asm	/^f0101fc1:	85 c0                	test   %eax,%eax$/;"	l
f0101fc3	obj/kern/kernel.asm	/^f0101fc3:	74 24                	je     f0101fe9 <mem_init+0xa86>$/;"	l
f0101fc5	obj/kern/kernel.asm	/^f0101fc5:	c7 44 24 0c b4 91 10 	movl   $0xf01091b4,0xc(%esp)$/;"	l
f0101fcc	obj/kern/kernel.asm	/^f0101fcc:	f0 $/;"	l
f0101fcd	obj/kern/kernel.asm	/^f0101fcd:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0101fd4	obj/kern/kernel.asm	/^f0101fd4:	f0 $/;"	l
f0101fd5	obj/kern/kernel.asm	/^f0101fd5:	c7 44 24 04 b4 03 00 	movl   $0x3b4,0x4(%esp)$/;"	l
f0101fdc	obj/kern/kernel.asm	/^f0101fdc:	00 $/;"	l
f0101fdd	obj/kern/kernel.asm	/^f0101fdd:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0101fe4	obj/kern/kernel.asm	/^f0101fe4:	e8 57 e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101fe9	obj/kern/kernel.asm	/^f0101fe9:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0101ff0	obj/kern/kernel.asm	/^f0101ff0:	00 $/;"	l
f0101ff1	obj/kern/kernel.asm	/^f0101ff1:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0101ff8	obj/kern/kernel.asm	/^f0101ff8:	00 $/;"	l
f0101ff9	obj/kern/kernel.asm	/^f0101ff9:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0101ffd	obj/kern/kernel.asm	/^f0101ffd:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f0102002	obj/kern/kernel.asm	/^f0102002:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102005	obj/kern/kernel.asm	/^f0102005:	e8 51 f4 ff ff       	call   f010145b <page_insert>$/;"	l
f010200a	obj/kern/kernel.asm	/^f010200a:	85 c0                	test   %eax,%eax$/;"	l
f010200c	obj/kern/kernel.asm	/^f010200c:	74 24                	je     f0102032 <mem_init+0xacf>$/;"	l
f010200e	obj/kern/kernel.asm	/^f010200e:	c7 44 24 0c 50 89 10 	movl   $0xf0108950,0xc(%esp)$/;"	l
f0102015	obj/kern/kernel.asm	/^f0102015:	f0 $/;"	l
f0102016	obj/kern/kernel.asm	/^f0102016:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f010201d	obj/kern/kernel.asm	/^f010201d:	f0 $/;"	l
f010201e	obj/kern/kernel.asm	/^f010201e:	c7 44 24 04 b7 03 00 	movl   $0x3b7,0x4(%esp)$/;"	l
f0102025	obj/kern/kernel.asm	/^f0102025:	00 $/;"	l
f0102026	obj/kern/kernel.asm	/^f0102026:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f010202d	obj/kern/kernel.asm	/^f010202d:	e8 0e e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102032	obj/kern/kernel.asm	/^f0102032:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102037	obj/kern/kernel.asm	/^f0102037:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f010203c	obj/kern/kernel.asm	/^f010203c:	e8 94 eb ff ff       	call   f0100bd5 <check_va2pa>$/;"	l
f0102041	obj/kern/kernel.asm	/^f0102041:	89 f2                	mov    %esi,%edx$/;"	l
f0102043	obj/kern/kernel.asm	/^f0102043:	2b 15 9c 9e 2b f0    	sub    0xf02b9e9c,%edx$/;"	l
f0102049	obj/kern/kernel.asm	/^f0102049:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f010204c	obj/kern/kernel.asm	/^f010204c:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f010204f	obj/kern/kernel.asm	/^f010204f:	39 d0                	cmp    %edx,%eax$/;"	l
f0102051	obj/kern/kernel.asm	/^f0102051:	74 24                	je     f0102077 <mem_init+0xb14>$/;"	l
f0102053	obj/kern/kernel.asm	/^f0102053:	c7 44 24 0c 8c 89 10 	movl   $0xf010898c,0xc(%esp)$/;"	l
f010205a	obj/kern/kernel.asm	/^f010205a:	f0 $/;"	l
f010205b	obj/kern/kernel.asm	/^f010205b:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0102062	obj/kern/kernel.asm	/^f0102062:	f0 $/;"	l
f0102063	obj/kern/kernel.asm	/^f0102063:	c7 44 24 04 b8 03 00 	movl   $0x3b8,0x4(%esp)$/;"	l
f010206a	obj/kern/kernel.asm	/^f010206a:	00 $/;"	l
f010206b	obj/kern/kernel.asm	/^f010206b:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0102072	obj/kern/kernel.asm	/^f0102072:	e8 c9 df ff ff       	call   f0100040 <_panic>$/;"	l
f0102077	obj/kern/kernel.asm	/^f0102077:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f010207c	obj/kern/kernel.asm	/^f010207c:	74 24                	je     f01020a2 <mem_init+0xb3f>$/;"	l
f010207e	obj/kern/kernel.asm	/^f010207e:	c7 44 24 0c 28 92 10 	movl   $0xf0109228,0xc(%esp)$/;"	l
f0102085	obj/kern/kernel.asm	/^f0102085:	f0 $/;"	l
f0102086	obj/kern/kernel.asm	/^f0102086:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f010208d	obj/kern/kernel.asm	/^f010208d:	f0 $/;"	l
f010208e	obj/kern/kernel.asm	/^f010208e:	c7 44 24 04 b9 03 00 	movl   $0x3b9,0x4(%esp)$/;"	l
f0102095	obj/kern/kernel.asm	/^f0102095:	00 $/;"	l
f0102096	obj/kern/kernel.asm	/^f0102096:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f010209d	obj/kern/kernel.asm	/^f010209d:	e8 9e df ff ff       	call   f0100040 <_panic>$/;"	l
f01020a2	obj/kern/kernel.asm	/^f01020a2:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01020a9	obj/kern/kernel.asm	/^f01020a9:	e8 6d f0 ff ff       	call   f010111b <page_alloc>$/;"	l
f01020ae	obj/kern/kernel.asm	/^f01020ae:	85 c0                	test   %eax,%eax$/;"	l
f01020b0	obj/kern/kernel.asm	/^f01020b0:	74 24                	je     f01020d6 <mem_init+0xb73>$/;"	l
f01020b2	obj/kern/kernel.asm	/^f01020b2:	c7 44 24 0c b4 91 10 	movl   $0xf01091b4,0xc(%esp)$/;"	l
f01020b9	obj/kern/kernel.asm	/^f01020b9:	f0 $/;"	l
f01020ba	obj/kern/kernel.asm	/^f01020ba:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f01020c1	obj/kern/kernel.asm	/^f01020c1:	f0 $/;"	l
f01020c2	obj/kern/kernel.asm	/^f01020c2:	c7 44 24 04 bd 03 00 	movl   $0x3bd,0x4(%esp)$/;"	l
f01020c9	obj/kern/kernel.asm	/^f01020c9:	00 $/;"	l
f01020ca	obj/kern/kernel.asm	/^f01020ca:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f01020d1	obj/kern/kernel.asm	/^f01020d1:	e8 6a df ff ff       	call   f0100040 <_panic>$/;"	l
f01020d6	obj/kern/kernel.asm	/^f01020d6:	8b 15 98 9e 2b f0    	mov    0xf02b9e98,%edx$/;"	l
f01020dc	obj/kern/kernel.asm	/^f01020dc:	8b 02                	mov    (%edx),%eax$/;"	l
f01020de	obj/kern/kernel.asm	/^f01020de:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01020e3	obj/kern/kernel.asm	/^f01020e3:	89 c1                	mov    %eax,%ecx$/;"	l
f01020e5	obj/kern/kernel.asm	/^f01020e5:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f01020e8	obj/kern/kernel.asm	/^f01020e8:	3b 0d 94 9e 2b f0    	cmp    0xf02b9e94,%ecx$/;"	l
f01020ee	obj/kern/kernel.asm	/^f01020ee:	72 20                	jb     f0102110 <mem_init+0xbad>$/;"	l
f01020f0	obj/kern/kernel.asm	/^f01020f0:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01020f4	obj/kern/kernel.asm	/^f01020f4:	c7 44 24 08 a4 80 10 	movl   $0xf01080a4,0x8(%esp)$/;"	l
f01020fb	obj/kern/kernel.asm	/^f01020fb:	f0 $/;"	l
f01020fc	obj/kern/kernel.asm	/^f01020fc:	c7 44 24 04 c0 03 00 	movl   $0x3c0,0x4(%esp)$/;"	l
f0102103	obj/kern/kernel.asm	/^f0102103:	00 $/;"	l
f0102104	obj/kern/kernel.asm	/^f0102104:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f010210b	obj/kern/kernel.asm	/^f010210b:	e8 30 df ff ff       	call   f0100040 <_panic>$/;"	l
f0102110	obj/kern/kernel.asm	/^f0102110:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0102115	obj/kern/kernel.asm	/^f0102115:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0102118	obj/kern/kernel.asm	/^f0102118:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f010211f	obj/kern/kernel.asm	/^f010211f:	00 $/;"	l
f0102120	obj/kern/kernel.asm	/^f0102120:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0102127	obj/kern/kernel.asm	/^f0102127:	00 $/;"	l
f0102128	obj/kern/kernel.asm	/^f0102128:	89 14 24             	mov    %edx,(%esp)$/;"	l
f010212b	obj/kern/kernel.asm	/^f010212b:	e8 fa f0 ff ff       	call   f010122a <pgdir_walk>$/;"	l
f0102130	obj/kern/kernel.asm	/^f0102130:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f0102133	obj/kern/kernel.asm	/^f0102133:	8d 51 04             	lea    0x4(%ecx),%edx$/;"	l
f0102136	obj/kern/kernel.asm	/^f0102136:	39 d0                	cmp    %edx,%eax$/;"	l
f0102138	obj/kern/kernel.asm	/^f0102138:	74 24                	je     f010215e <mem_init+0xbfb>$/;"	l
f010213a	obj/kern/kernel.asm	/^f010213a:	c7 44 24 0c bc 89 10 	movl   $0xf01089bc,0xc(%esp)$/;"	l
f0102141	obj/kern/kernel.asm	/^f0102141:	f0 $/;"	l
f0102142	obj/kern/kernel.asm	/^f0102142:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0102149	obj/kern/kernel.asm	/^f0102149:	f0 $/;"	l
f010214a	obj/kern/kernel.asm	/^f010214a:	c7 44 24 04 c1 03 00 	movl   $0x3c1,0x4(%esp)$/;"	l
f0102151	obj/kern/kernel.asm	/^f0102151:	00 $/;"	l
f0102152	obj/kern/kernel.asm	/^f0102152:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0102159	obj/kern/kernel.asm	/^f0102159:	e8 e2 de ff ff       	call   f0100040 <_panic>$/;"	l
f010215e	obj/kern/kernel.asm	/^f010215e:	c7 44 24 0c 06 00 00 	movl   $0x6,0xc(%esp)$/;"	l
f0102165	obj/kern/kernel.asm	/^f0102165:	00 $/;"	l
f0102166	obj/kern/kernel.asm	/^f0102166:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f010216d	obj/kern/kernel.asm	/^f010216d:	00 $/;"	l
f010216e	obj/kern/kernel.asm	/^f010216e:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0102172	obj/kern/kernel.asm	/^f0102172:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f0102177	obj/kern/kernel.asm	/^f0102177:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010217a	obj/kern/kernel.asm	/^f010217a:	e8 dc f2 ff ff       	call   f010145b <page_insert>$/;"	l
f010217f	obj/kern/kernel.asm	/^f010217f:	85 c0                	test   %eax,%eax$/;"	l
f0102181	obj/kern/kernel.asm	/^f0102181:	74 24                	je     f01021a7 <mem_init+0xc44>$/;"	l
f0102183	obj/kern/kernel.asm	/^f0102183:	c7 44 24 0c fc 89 10 	movl   $0xf01089fc,0xc(%esp)$/;"	l
f010218a	obj/kern/kernel.asm	/^f010218a:	f0 $/;"	l
f010218b	obj/kern/kernel.asm	/^f010218b:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0102192	obj/kern/kernel.asm	/^f0102192:	f0 $/;"	l
f0102193	obj/kern/kernel.asm	/^f0102193:	c7 44 24 04 c4 03 00 	movl   $0x3c4,0x4(%esp)$/;"	l
f010219a	obj/kern/kernel.asm	/^f010219a:	00 $/;"	l
f010219b	obj/kern/kernel.asm	/^f010219b:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f01021a2	obj/kern/kernel.asm	/^f01021a2:	e8 99 de ff ff       	call   f0100040 <_panic>$/;"	l
f01021a7	obj/kern/kernel.asm	/^f01021a7:	8b 3d 98 9e 2b f0    	mov    0xf02b9e98,%edi$/;"	l
f01021ad	obj/kern/kernel.asm	/^f01021ad:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f01021b2	obj/kern/kernel.asm	/^f01021b2:	89 f8                	mov    %edi,%eax$/;"	l
f01021b4	obj/kern/kernel.asm	/^f01021b4:	e8 1c ea ff ff       	call   f0100bd5 <check_va2pa>$/;"	l
f01021b9	obj/kern/kernel.asm	/^f01021b9:	89 f2                	mov    %esi,%edx$/;"	l
f01021bb	obj/kern/kernel.asm	/^f01021bb:	2b 15 9c 9e 2b f0    	sub    0xf02b9e9c,%edx$/;"	l
f01021c1	obj/kern/kernel.asm	/^f01021c1:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01021c4	obj/kern/kernel.asm	/^f01021c4:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01021c7	obj/kern/kernel.asm	/^f01021c7:	39 d0                	cmp    %edx,%eax$/;"	l
f01021c9	obj/kern/kernel.asm	/^f01021c9:	74 24                	je     f01021ef <mem_init+0xc8c>$/;"	l
f01021cb	obj/kern/kernel.asm	/^f01021cb:	c7 44 24 0c 8c 89 10 	movl   $0xf010898c,0xc(%esp)$/;"	l
f01021d2	obj/kern/kernel.asm	/^f01021d2:	f0 $/;"	l
f01021d3	obj/kern/kernel.asm	/^f01021d3:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f01021da	obj/kern/kernel.asm	/^f01021da:	f0 $/;"	l
f01021db	obj/kern/kernel.asm	/^f01021db:	c7 44 24 04 c5 03 00 	movl   $0x3c5,0x4(%esp)$/;"	l
f01021e2	obj/kern/kernel.asm	/^f01021e2:	00 $/;"	l
f01021e3	obj/kern/kernel.asm	/^f01021e3:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f01021ea	obj/kern/kernel.asm	/^f01021ea:	e8 51 de ff ff       	call   f0100040 <_panic>$/;"	l
f01021ef	obj/kern/kernel.asm	/^f01021ef:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f01021f4	obj/kern/kernel.asm	/^f01021f4:	74 24                	je     f010221a <mem_init+0xcb7>$/;"	l
f01021f6	obj/kern/kernel.asm	/^f01021f6:	c7 44 24 0c 28 92 10 	movl   $0xf0109228,0xc(%esp)$/;"	l
f01021fd	obj/kern/kernel.asm	/^f01021fd:	f0 $/;"	l
f01021fe	obj/kern/kernel.asm	/^f01021fe:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0102205	obj/kern/kernel.asm	/^f0102205:	f0 $/;"	l
f0102206	obj/kern/kernel.asm	/^f0102206:	c7 44 24 04 c6 03 00 	movl   $0x3c6,0x4(%esp)$/;"	l
f010220d	obj/kern/kernel.asm	/^f010220d:	00 $/;"	l
f010220e	obj/kern/kernel.asm	/^f010220e:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0102215	obj/kern/kernel.asm	/^f0102215:	e8 26 de ff ff       	call   f0100040 <_panic>$/;"	l
f010221a	obj/kern/kernel.asm	/^f010221a:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0102221	obj/kern/kernel.asm	/^f0102221:	00 $/;"	l
f0102222	obj/kern/kernel.asm	/^f0102222:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0102229	obj/kern/kernel.asm	/^f0102229:	00 $/;"	l
f010222a	obj/kern/kernel.asm	/^f010222a:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f010222d	obj/kern/kernel.asm	/^f010222d:	e8 f8 ef ff ff       	call   f010122a <pgdir_walk>$/;"	l
f0102232	obj/kern/kernel.asm	/^f0102232:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0102235	obj/kern/kernel.asm	/^f0102235:	75 24                	jne    f010225b <mem_init+0xcf8>$/;"	l
f0102237	obj/kern/kernel.asm	/^f0102237:	c7 44 24 0c 3c 8a 10 	movl   $0xf0108a3c,0xc(%esp)$/;"	l
f010223e	obj/kern/kernel.asm	/^f010223e:	f0 $/;"	l
f010223f	obj/kern/kernel.asm	/^f010223f:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0102246	obj/kern/kernel.asm	/^f0102246:	f0 $/;"	l
f0102247	obj/kern/kernel.asm	/^f0102247:	c7 44 24 04 c7 03 00 	movl   $0x3c7,0x4(%esp)$/;"	l
f010224e	obj/kern/kernel.asm	/^f010224e:	00 $/;"	l
f010224f	obj/kern/kernel.asm	/^f010224f:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0102256	obj/kern/kernel.asm	/^f0102256:	e8 e5 dd ff ff       	call   f0100040 <_panic>$/;"	l
f010225b	obj/kern/kernel.asm	/^f010225b:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f0102260	obj/kern/kernel.asm	/^f0102260:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0102263	obj/kern/kernel.asm	/^f0102263:	75 24                	jne    f0102289 <mem_init+0xd26>$/;"	l
f0102265	obj/kern/kernel.asm	/^f0102265:	c7 44 24 0c 39 92 10 	movl   $0xf0109239,0xc(%esp)$/;"	l
f010226c	obj/kern/kernel.asm	/^f010226c:	f0 $/;"	l
f010226d	obj/kern/kernel.asm	/^f010226d:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0102274	obj/kern/kernel.asm	/^f0102274:	f0 $/;"	l
f0102275	obj/kern/kernel.asm	/^f0102275:	c7 44 24 04 c8 03 00 	movl   $0x3c8,0x4(%esp)$/;"	l
f010227c	obj/kern/kernel.asm	/^f010227c:	00 $/;"	l
f010227d	obj/kern/kernel.asm	/^f010227d:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0102284	obj/kern/kernel.asm	/^f0102284:	e8 b7 dd ff ff       	call   f0100040 <_panic>$/;"	l
f0102289	obj/kern/kernel.asm	/^f0102289:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0102290	obj/kern/kernel.asm	/^f0102290:	00 $/;"	l
f0102291	obj/kern/kernel.asm	/^f0102291:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0102298	obj/kern/kernel.asm	/^f0102298:	00 $/;"	l
f0102299	obj/kern/kernel.asm	/^f0102299:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f010229d	obj/kern/kernel.asm	/^f010229d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01022a0	obj/kern/kernel.asm	/^f01022a0:	e8 b6 f1 ff ff       	call   f010145b <page_insert>$/;"	l
f01022a5	obj/kern/kernel.asm	/^f01022a5:	85 c0                	test   %eax,%eax$/;"	l
f01022a7	obj/kern/kernel.asm	/^f01022a7:	74 24                	je     f01022cd <mem_init+0xd6a>$/;"	l
f01022a9	obj/kern/kernel.asm	/^f01022a9:	c7 44 24 0c 50 89 10 	movl   $0xf0108950,0xc(%esp)$/;"	l
f01022b0	obj/kern/kernel.asm	/^f01022b0:	f0 $/;"	l
f01022b1	obj/kern/kernel.asm	/^f01022b1:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f01022b8	obj/kern/kernel.asm	/^f01022b8:	f0 $/;"	l
f01022b9	obj/kern/kernel.asm	/^f01022b9:	c7 44 24 04 cb 03 00 	movl   $0x3cb,0x4(%esp)$/;"	l
f01022c0	obj/kern/kernel.asm	/^f01022c0:	00 $/;"	l
f01022c1	obj/kern/kernel.asm	/^f01022c1:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f01022c8	obj/kern/kernel.asm	/^f01022c8:	e8 73 dd ff ff       	call   f0100040 <_panic>$/;"	l
f01022cd	obj/kern/kernel.asm	/^f01022cd:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f01022d4	obj/kern/kernel.asm	/^f01022d4:	00 $/;"	l
f01022d5	obj/kern/kernel.asm	/^f01022d5:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f01022dc	obj/kern/kernel.asm	/^f01022dc:	00 $/;"	l
f01022dd	obj/kern/kernel.asm	/^f01022dd:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f01022e2	obj/kern/kernel.asm	/^f01022e2:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01022e5	obj/kern/kernel.asm	/^f01022e5:	e8 40 ef ff ff       	call   f010122a <pgdir_walk>$/;"	l
f01022ea	obj/kern/kernel.asm	/^f01022ea:	f6 00 02             	testb  $0x2,(%eax)$/;"	l
f01022ed	obj/kern/kernel.asm	/^f01022ed:	75 24                	jne    f0102313 <mem_init+0xdb0>$/;"	l
f01022ef	obj/kern/kernel.asm	/^f01022ef:	c7 44 24 0c 70 8a 10 	movl   $0xf0108a70,0xc(%esp)$/;"	l
f01022f6	obj/kern/kernel.asm	/^f01022f6:	f0 $/;"	l
f01022f7	obj/kern/kernel.asm	/^f01022f7:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f01022fe	obj/kern/kernel.asm	/^f01022fe:	f0 $/;"	l
f01022ff	obj/kern/kernel.asm	/^f01022ff:	c7 44 24 04 cc 03 00 	movl   $0x3cc,0x4(%esp)$/;"	l
f0102306	obj/kern/kernel.asm	/^f0102306:	00 $/;"	l
f0102307	obj/kern/kernel.asm	/^f0102307:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f010230e	obj/kern/kernel.asm	/^f010230e:	e8 2d dd ff ff       	call   f0100040 <_panic>$/;"	l
f0102313	obj/kern/kernel.asm	/^f0102313:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f010231a	obj/kern/kernel.asm	/^f010231a:	00 $/;"	l
f010231b	obj/kern/kernel.asm	/^f010231b:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0102322	obj/kern/kernel.asm	/^f0102322:	00 $/;"	l
f0102323	obj/kern/kernel.asm	/^f0102323:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f0102328	obj/kern/kernel.asm	/^f0102328:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010232b	obj/kern/kernel.asm	/^f010232b:	e8 fa ee ff ff       	call   f010122a <pgdir_walk>$/;"	l
f0102330	obj/kern/kernel.asm	/^f0102330:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0102333	obj/kern/kernel.asm	/^f0102333:	74 24                	je     f0102359 <mem_init+0xdf6>$/;"	l
f0102335	obj/kern/kernel.asm	/^f0102335:	c7 44 24 0c a4 8a 10 	movl   $0xf0108aa4,0xc(%esp)$/;"	l
f010233c	obj/kern/kernel.asm	/^f010233c:	f0 $/;"	l
f010233d	obj/kern/kernel.asm	/^f010233d:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0102344	obj/kern/kernel.asm	/^f0102344:	f0 $/;"	l
f0102345	obj/kern/kernel.asm	/^f0102345:	c7 44 24 04 cd 03 00 	movl   $0x3cd,0x4(%esp)$/;"	l
f010234c	obj/kern/kernel.asm	/^f010234c:	00 $/;"	l
f010234d	obj/kern/kernel.asm	/^f010234d:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0102354	obj/kern/kernel.asm	/^f0102354:	e8 e7 dc ff ff       	call   f0100040 <_panic>$/;"	l
f0102359	obj/kern/kernel.asm	/^f0102359:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0102360	obj/kern/kernel.asm	/^f0102360:	00 $/;"	l
f0102361	obj/kern/kernel.asm	/^f0102361:	c7 44 24 08 00 00 40 	movl   $0x400000,0x8(%esp)$/;"	l
f0102368	obj/kern/kernel.asm	/^f0102368:	00 $/;"	l
f0102369	obj/kern/kernel.asm	/^f0102369:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010236c	obj/kern/kernel.asm	/^f010236c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0102370	obj/kern/kernel.asm	/^f0102370:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f0102375	obj/kern/kernel.asm	/^f0102375:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102378	obj/kern/kernel.asm	/^f0102378:	e8 de f0 ff ff       	call   f010145b <page_insert>$/;"	l
f010237d	obj/kern/kernel.asm	/^f010237d:	85 c0                	test   %eax,%eax$/;"	l
f010237f	obj/kern/kernel.asm	/^f010237f:	78 24                	js     f01023a5 <mem_init+0xe42>$/;"	l
f0102381	obj/kern/kernel.asm	/^f0102381:	c7 44 24 0c dc 8a 10 	movl   $0xf0108adc,0xc(%esp)$/;"	l
f0102388	obj/kern/kernel.asm	/^f0102388:	f0 $/;"	l
f0102389	obj/kern/kernel.asm	/^f0102389:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0102390	obj/kern/kernel.asm	/^f0102390:	f0 $/;"	l
f0102391	obj/kern/kernel.asm	/^f0102391:	c7 44 24 04 d0 03 00 	movl   $0x3d0,0x4(%esp)$/;"	l
f0102398	obj/kern/kernel.asm	/^f0102398:	00 $/;"	l
f0102399	obj/kern/kernel.asm	/^f0102399:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f01023a0	obj/kern/kernel.asm	/^f01023a0:	e8 9b dc ff ff       	call   f0100040 <_panic>$/;"	l
f01023a5	obj/kern/kernel.asm	/^f01023a5:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f01023ac	obj/kern/kernel.asm	/^f01023ac:	00 $/;"	l
f01023ad	obj/kern/kernel.asm	/^f01023ad:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01023b4	obj/kern/kernel.asm	/^f01023b4:	00 $/;"	l
f01023b5	obj/kern/kernel.asm	/^f01023b5:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01023b9	obj/kern/kernel.asm	/^f01023b9:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f01023be	obj/kern/kernel.asm	/^f01023be:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01023c1	obj/kern/kernel.asm	/^f01023c1:	e8 95 f0 ff ff       	call   f010145b <page_insert>$/;"	l
f01023c6	obj/kern/kernel.asm	/^f01023c6:	85 c0                	test   %eax,%eax$/;"	l
f01023c8	obj/kern/kernel.asm	/^f01023c8:	74 24                	je     f01023ee <mem_init+0xe8b>$/;"	l
f01023ca	obj/kern/kernel.asm	/^f01023ca:	c7 44 24 0c 14 8b 10 	movl   $0xf0108b14,0xc(%esp)$/;"	l
f01023d1	obj/kern/kernel.asm	/^f01023d1:	f0 $/;"	l
f01023d2	obj/kern/kernel.asm	/^f01023d2:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f01023d9	obj/kern/kernel.asm	/^f01023d9:	f0 $/;"	l
f01023da	obj/kern/kernel.asm	/^f01023da:	c7 44 24 04 d3 03 00 	movl   $0x3d3,0x4(%esp)$/;"	l
f01023e1	obj/kern/kernel.asm	/^f01023e1:	00 $/;"	l
f01023e2	obj/kern/kernel.asm	/^f01023e2:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f01023e9	obj/kern/kernel.asm	/^f01023e9:	e8 52 dc ff ff       	call   f0100040 <_panic>$/;"	l
f01023ee	obj/kern/kernel.asm	/^f01023ee:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f01023f5	obj/kern/kernel.asm	/^f01023f5:	00 $/;"	l
f01023f6	obj/kern/kernel.asm	/^f01023f6:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f01023fd	obj/kern/kernel.asm	/^f01023fd:	00 $/;"	l
f01023fe	obj/kern/kernel.asm	/^f01023fe:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f0102403	obj/kern/kernel.asm	/^f0102403:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102406	obj/kern/kernel.asm	/^f0102406:	e8 1f ee ff ff       	call   f010122a <pgdir_walk>$/;"	l
f010240b	obj/kern/kernel.asm	/^f010240b:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f010240e	obj/kern/kernel.asm	/^f010240e:	74 24                	je     f0102434 <mem_init+0xed1>$/;"	l
f0102410	obj/kern/kernel.asm	/^f0102410:	c7 44 24 0c a4 8a 10 	movl   $0xf0108aa4,0xc(%esp)$/;"	l
f0102417	obj/kern/kernel.asm	/^f0102417:	f0 $/;"	l
f0102418	obj/kern/kernel.asm	/^f0102418:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f010241f	obj/kern/kernel.asm	/^f010241f:	f0 $/;"	l
f0102420	obj/kern/kernel.asm	/^f0102420:	c7 44 24 04 d4 03 00 	movl   $0x3d4,0x4(%esp)$/;"	l
f0102427	obj/kern/kernel.asm	/^f0102427:	00 $/;"	l
f0102428	obj/kern/kernel.asm	/^f0102428:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f010242f	obj/kern/kernel.asm	/^f010242f:	e8 0c dc ff ff       	call   f0100040 <_panic>$/;"	l
f0102434	obj/kern/kernel.asm	/^f0102434:	8b 3d 98 9e 2b f0    	mov    0xf02b9e98,%edi$/;"	l
f010243a	obj/kern/kernel.asm	/^f010243a:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010243f	obj/kern/kernel.asm	/^f010243f:	89 f8                	mov    %edi,%eax$/;"	l
f0102441	obj/kern/kernel.asm	/^f0102441:	e8 8f e7 ff ff       	call   f0100bd5 <check_va2pa>$/;"	l
f0102446	obj/kern/kernel.asm	/^f0102446:	89 c1                	mov    %eax,%ecx$/;"	l
f0102448	obj/kern/kernel.asm	/^f0102448:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f010244b	obj/kern/kernel.asm	/^f010244b:	89 d8                	mov    %ebx,%eax$/;"	l
f010244d	obj/kern/kernel.asm	/^f010244d:	2b 05 9c 9e 2b f0    	sub    0xf02b9e9c,%eax$/;"	l
f0102453	obj/kern/kernel.asm	/^f0102453:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102456	obj/kern/kernel.asm	/^f0102456:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102459	obj/kern/kernel.asm	/^f0102459:	39 c1                	cmp    %eax,%ecx$/;"	l
f010245b	obj/kern/kernel.asm	/^f010245b:	74 24                	je     f0102481 <mem_init+0xf1e>$/;"	l
f010245d	obj/kern/kernel.asm	/^f010245d:	c7 44 24 0c 50 8b 10 	movl   $0xf0108b50,0xc(%esp)$/;"	l
f0102464	obj/kern/kernel.asm	/^f0102464:	f0 $/;"	l
f0102465	obj/kern/kernel.asm	/^f0102465:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f010246c	obj/kern/kernel.asm	/^f010246c:	f0 $/;"	l
f010246d	obj/kern/kernel.asm	/^f010246d:	c7 44 24 04 d7 03 00 	movl   $0x3d7,0x4(%esp)$/;"	l
f0102474	obj/kern/kernel.asm	/^f0102474:	00 $/;"	l
f0102475	obj/kern/kernel.asm	/^f0102475:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f010247c	obj/kern/kernel.asm	/^f010247c:	e8 bf db ff ff       	call   f0100040 <_panic>$/;"	l
f0102481	obj/kern/kernel.asm	/^f0102481:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102486	obj/kern/kernel.asm	/^f0102486:	89 f8                	mov    %edi,%eax$/;"	l
f0102488	obj/kern/kernel.asm	/^f0102488:	e8 48 e7 ff ff       	call   f0100bd5 <check_va2pa>$/;"	l
f010248d	obj/kern/kernel.asm	/^f010248d:	39 45 cc             	cmp    %eax,-0x34(%ebp)$/;"	l
f0102490	obj/kern/kernel.asm	/^f0102490:	74 24                	je     f01024b6 <mem_init+0xf53>$/;"	l
f0102492	obj/kern/kernel.asm	/^f0102492:	c7 44 24 0c 7c 8b 10 	movl   $0xf0108b7c,0xc(%esp)$/;"	l
f0102499	obj/kern/kernel.asm	/^f0102499:	f0 $/;"	l
f010249a	obj/kern/kernel.asm	/^f010249a:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f01024a1	obj/kern/kernel.asm	/^f01024a1:	f0 $/;"	l
f01024a2	obj/kern/kernel.asm	/^f01024a2:	c7 44 24 04 d8 03 00 	movl   $0x3d8,0x4(%esp)$/;"	l
f01024a9	obj/kern/kernel.asm	/^f01024a9:	00 $/;"	l
f01024aa	obj/kern/kernel.asm	/^f01024aa:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f01024b1	obj/kern/kernel.asm	/^f01024b1:	e8 8a db ff ff       	call   f0100040 <_panic>$/;"	l
f01024b6	obj/kern/kernel.asm	/^f01024b6:	66 83 7b 04 02       	cmpw   $0x2,0x4(%ebx)$/;"	l
f01024bb	obj/kern/kernel.asm	/^f01024bb:	74 24                	je     f01024e1 <mem_init+0xf7e>$/;"	l
f01024bd	obj/kern/kernel.asm	/^f01024bd:	c7 44 24 0c 4f 92 10 	movl   $0xf010924f,0xc(%esp)$/;"	l
f01024c4	obj/kern/kernel.asm	/^f01024c4:	f0 $/;"	l
f01024c5	obj/kern/kernel.asm	/^f01024c5:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f01024cc	obj/kern/kernel.asm	/^f01024cc:	f0 $/;"	l
f01024cd	obj/kern/kernel.asm	/^f01024cd:	c7 44 24 04 da 03 00 	movl   $0x3da,0x4(%esp)$/;"	l
f01024d4	obj/kern/kernel.asm	/^f01024d4:	00 $/;"	l
f01024d5	obj/kern/kernel.asm	/^f01024d5:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f01024dc	obj/kern/kernel.asm	/^f01024dc:	e8 5f db ff ff       	call   f0100040 <_panic>$/;"	l
f01024e1	obj/kern/kernel.asm	/^f01024e1:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f01024e6	obj/kern/kernel.asm	/^f01024e6:	74 24                	je     f010250c <mem_init+0xfa9>$/;"	l
f01024e8	obj/kern/kernel.asm	/^f01024e8:	c7 44 24 0c 60 92 10 	movl   $0xf0109260,0xc(%esp)$/;"	l
f01024ef	obj/kern/kernel.asm	/^f01024ef:	f0 $/;"	l
f01024f0	obj/kern/kernel.asm	/^f01024f0:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f01024f7	obj/kern/kernel.asm	/^f01024f7:	f0 $/;"	l
f01024f8	obj/kern/kernel.asm	/^f01024f8:	c7 44 24 04 db 03 00 	movl   $0x3db,0x4(%esp)$/;"	l
f01024ff	obj/kern/kernel.asm	/^f01024ff:	00 $/;"	l
f0102500	obj/kern/kernel.asm	/^f0102500:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0102507	obj/kern/kernel.asm	/^f0102507:	e8 34 db ff ff       	call   f0100040 <_panic>$/;"	l
f010250c	obj/kern/kernel.asm	/^f010250c:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102513	obj/kern/kernel.asm	/^f0102513:	e8 03 ec ff ff       	call   f010111b <page_alloc>$/;"	l
f0102518	obj/kern/kernel.asm	/^f0102518:	85 c0                	test   %eax,%eax$/;"	l
f010251a	obj/kern/kernel.asm	/^f010251a:	74 04                	je     f0102520 <mem_init+0xfbd>$/;"	l
f010251c	obj/kern/kernel.asm	/^f010251c:	39 c6                	cmp    %eax,%esi$/;"	l
f010251e	obj/kern/kernel.asm	/^f010251e:	74 24                	je     f0102544 <mem_init+0xfe1>$/;"	l
f0102520	obj/kern/kernel.asm	/^f0102520:	c7 44 24 0c ac 8b 10 	movl   $0xf0108bac,0xc(%esp)$/;"	l
f0102527	obj/kern/kernel.asm	/^f0102527:	f0 $/;"	l
f0102528	obj/kern/kernel.asm	/^f0102528:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f010252f	obj/kern/kernel.asm	/^f010252f:	f0 $/;"	l
f0102530	obj/kern/kernel.asm	/^f0102530:	c7 44 24 04 de 03 00 	movl   $0x3de,0x4(%esp)$/;"	l
f0102537	obj/kern/kernel.asm	/^f0102537:	00 $/;"	l
f0102538	obj/kern/kernel.asm	/^f0102538:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f010253f	obj/kern/kernel.asm	/^f010253f:	e8 fc da ff ff       	call   f0100040 <_panic>$/;"	l
f0102544	obj/kern/kernel.asm	/^f0102544:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f010254b	obj/kern/kernel.asm	/^f010254b:	00 $/;"	l
f010254c	obj/kern/kernel.asm	/^f010254c:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f0102551	obj/kern/kernel.asm	/^f0102551:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102554	obj/kern/kernel.asm	/^f0102554:	e8 b9 ee ff ff       	call   f0101412 <page_remove>$/;"	l
f0102559	obj/kern/kernel.asm	/^f0102559:	8b 3d 98 9e 2b f0    	mov    0xf02b9e98,%edi$/;"	l
f010255f	obj/kern/kernel.asm	/^f010255f:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0102564	obj/kern/kernel.asm	/^f0102564:	89 f8                	mov    %edi,%eax$/;"	l
f0102566	obj/kern/kernel.asm	/^f0102566:	e8 6a e6 ff ff       	call   f0100bd5 <check_va2pa>$/;"	l
f010256b	obj/kern/kernel.asm	/^f010256b:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f010256e	obj/kern/kernel.asm	/^f010256e:	74 24                	je     f0102594 <mem_init+0x1031>$/;"	l
f0102570	obj/kern/kernel.asm	/^f0102570:	c7 44 24 0c d0 8b 10 	movl   $0xf0108bd0,0xc(%esp)$/;"	l
f0102577	obj/kern/kernel.asm	/^f0102577:	f0 $/;"	l
f0102578	obj/kern/kernel.asm	/^f0102578:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f010257f	obj/kern/kernel.asm	/^f010257f:	f0 $/;"	l
f0102580	obj/kern/kernel.asm	/^f0102580:	c7 44 24 04 e2 03 00 	movl   $0x3e2,0x4(%esp)$/;"	l
f0102587	obj/kern/kernel.asm	/^f0102587:	00 $/;"	l
f0102588	obj/kern/kernel.asm	/^f0102588:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f010258f	obj/kern/kernel.asm	/^f010258f:	e8 ac da ff ff       	call   f0100040 <_panic>$/;"	l
f0102594	obj/kern/kernel.asm	/^f0102594:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102599	obj/kern/kernel.asm	/^f0102599:	89 f8                	mov    %edi,%eax$/;"	l
f010259b	obj/kern/kernel.asm	/^f010259b:	e8 35 e6 ff ff       	call   f0100bd5 <check_va2pa>$/;"	l
f01025a0	obj/kern/kernel.asm	/^f01025a0:	89 da                	mov    %ebx,%edx$/;"	l
f01025a2	obj/kern/kernel.asm	/^f01025a2:	2b 15 9c 9e 2b f0    	sub    0xf02b9e9c,%edx$/;"	l
f01025a8	obj/kern/kernel.asm	/^f01025a8:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01025ab	obj/kern/kernel.asm	/^f01025ab:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01025ae	obj/kern/kernel.asm	/^f01025ae:	39 d0                	cmp    %edx,%eax$/;"	l
f01025b0	obj/kern/kernel.asm	/^f01025b0:	74 24                	je     f01025d6 <mem_init+0x1073>$/;"	l
f01025b2	obj/kern/kernel.asm	/^f01025b2:	c7 44 24 0c 7c 8b 10 	movl   $0xf0108b7c,0xc(%esp)$/;"	l
f01025b9	obj/kern/kernel.asm	/^f01025b9:	f0 $/;"	l
f01025ba	obj/kern/kernel.asm	/^f01025ba:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f01025c1	obj/kern/kernel.asm	/^f01025c1:	f0 $/;"	l
f01025c2	obj/kern/kernel.asm	/^f01025c2:	c7 44 24 04 e3 03 00 	movl   $0x3e3,0x4(%esp)$/;"	l
f01025c9	obj/kern/kernel.asm	/^f01025c9:	00 $/;"	l
f01025ca	obj/kern/kernel.asm	/^f01025ca:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f01025d1	obj/kern/kernel.asm	/^f01025d1:	e8 6a da ff ff       	call   f0100040 <_panic>$/;"	l
f01025d6	obj/kern/kernel.asm	/^f01025d6:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f01025db	obj/kern/kernel.asm	/^f01025db:	74 24                	je     f0102601 <mem_init+0x109e>$/;"	l
f01025dd	obj/kern/kernel.asm	/^f01025dd:	c7 44 24 0c 06 92 10 	movl   $0xf0109206,0xc(%esp)$/;"	l
f01025e4	obj/kern/kernel.asm	/^f01025e4:	f0 $/;"	l
f01025e5	obj/kern/kernel.asm	/^f01025e5:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f01025ec	obj/kern/kernel.asm	/^f01025ec:	f0 $/;"	l
f01025ed	obj/kern/kernel.asm	/^f01025ed:	c7 44 24 04 e4 03 00 	movl   $0x3e4,0x4(%esp)$/;"	l
f01025f4	obj/kern/kernel.asm	/^f01025f4:	00 $/;"	l
f01025f5	obj/kern/kernel.asm	/^f01025f5:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f01025fc	obj/kern/kernel.asm	/^f01025fc:	e8 3f da ff ff       	call   f0100040 <_panic>$/;"	l
f0102601	obj/kern/kernel.asm	/^f0102601:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f0102606	obj/kern/kernel.asm	/^f0102606:	74 24                	je     f010262c <mem_init+0x10c9>$/;"	l
f0102608	obj/kern/kernel.asm	/^f0102608:	c7 44 24 0c 60 92 10 	movl   $0xf0109260,0xc(%esp)$/;"	l
f010260f	obj/kern/kernel.asm	/^f010260f:	f0 $/;"	l
f0102610	obj/kern/kernel.asm	/^f0102610:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0102617	obj/kern/kernel.asm	/^f0102617:	f0 $/;"	l
f0102618	obj/kern/kernel.asm	/^f0102618:	c7 44 24 04 e5 03 00 	movl   $0x3e5,0x4(%esp)$/;"	l
f010261f	obj/kern/kernel.asm	/^f010261f:	00 $/;"	l
f0102620	obj/kern/kernel.asm	/^f0102620:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0102627	obj/kern/kernel.asm	/^f0102627:	e8 14 da ff ff       	call   f0100040 <_panic>$/;"	l
f010262c	obj/kern/kernel.asm	/^f010262c:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
f0102633	obj/kern/kernel.asm	/^f0102633:	00 $/;"	l
f0102634	obj/kern/kernel.asm	/^f0102634:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f010263b	obj/kern/kernel.asm	/^f010263b:	00 $/;"	l
f010263c	obj/kern/kernel.asm	/^f010263c:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0102640	obj/kern/kernel.asm	/^f0102640:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0102643	obj/kern/kernel.asm	/^f0102643:	e8 13 ee ff ff       	call   f010145b <page_insert>$/;"	l
f0102648	obj/kern/kernel.asm	/^f0102648:	85 c0                	test   %eax,%eax$/;"	l
f010264a	obj/kern/kernel.asm	/^f010264a:	74 24                	je     f0102670 <mem_init+0x110d>$/;"	l
f010264c	obj/kern/kernel.asm	/^f010264c:	c7 44 24 0c f4 8b 10 	movl   $0xf0108bf4,0xc(%esp)$/;"	l
f0102653	obj/kern/kernel.asm	/^f0102653:	f0 $/;"	l
f0102654	obj/kern/kernel.asm	/^f0102654:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f010265b	obj/kern/kernel.asm	/^f010265b:	f0 $/;"	l
f010265c	obj/kern/kernel.asm	/^f010265c:	c7 44 24 04 e8 03 00 	movl   $0x3e8,0x4(%esp)$/;"	l
f0102663	obj/kern/kernel.asm	/^f0102663:	00 $/;"	l
f0102664	obj/kern/kernel.asm	/^f0102664:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f010266b	obj/kern/kernel.asm	/^f010266b:	e8 d0 d9 ff ff       	call   f0100040 <_panic>$/;"	l
f0102670	obj/kern/kernel.asm	/^f0102670:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
f0102675	obj/kern/kernel.asm	/^f0102675:	75 24                	jne    f010269b <mem_init+0x1138>$/;"	l
f0102677	obj/kern/kernel.asm	/^f0102677:	c7 44 24 0c 71 92 10 	movl   $0xf0109271,0xc(%esp)$/;"	l
f010267e	obj/kern/kernel.asm	/^f010267e:	f0 $/;"	l
f010267f	obj/kern/kernel.asm	/^f010267f:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0102686	obj/kern/kernel.asm	/^f0102686:	f0 $/;"	l
f0102687	obj/kern/kernel.asm	/^f0102687:	c7 44 24 04 e9 03 00 	movl   $0x3e9,0x4(%esp)$/;"	l
f010268e	obj/kern/kernel.asm	/^f010268e:	00 $/;"	l
f010268f	obj/kern/kernel.asm	/^f010268f:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0102696	obj/kern/kernel.asm	/^f0102696:	e8 a5 d9 ff ff       	call   f0100040 <_panic>$/;"	l
f010269b	obj/kern/kernel.asm	/^f010269b:	83 3b 00             	cmpl   $0x0,(%ebx)$/;"	l
f010269e	obj/kern/kernel.asm	/^f010269e:	74 24                	je     f01026c4 <mem_init+0x1161>$/;"	l
f01026a0	obj/kern/kernel.asm	/^f01026a0:	c7 44 24 0c 7d 92 10 	movl   $0xf010927d,0xc(%esp)$/;"	l
f01026a7	obj/kern/kernel.asm	/^f01026a7:	f0 $/;"	l
f01026a8	obj/kern/kernel.asm	/^f01026a8:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f01026af	obj/kern/kernel.asm	/^f01026af:	f0 $/;"	l
f01026b0	obj/kern/kernel.asm	/^f01026b0:	c7 44 24 04 ea 03 00 	movl   $0x3ea,0x4(%esp)$/;"	l
f01026b7	obj/kern/kernel.asm	/^f01026b7:	00 $/;"	l
f01026b8	obj/kern/kernel.asm	/^f01026b8:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f01026bf	obj/kern/kernel.asm	/^f01026bf:	e8 7c d9 ff ff       	call   f0100040 <_panic>$/;"	l
f01026c4	obj/kern/kernel.asm	/^f01026c4:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f01026cb	obj/kern/kernel.asm	/^f01026cb:	00 $/;"	l
f01026cc	obj/kern/kernel.asm	/^f01026cc:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f01026d1	obj/kern/kernel.asm	/^f01026d1:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01026d4	obj/kern/kernel.asm	/^f01026d4:	e8 39 ed ff ff       	call   f0101412 <page_remove>$/;"	l
f01026d9	obj/kern/kernel.asm	/^f01026d9:	8b 3d 98 9e 2b f0    	mov    0xf02b9e98,%edi$/;"	l
f01026df	obj/kern/kernel.asm	/^f01026df:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01026e4	obj/kern/kernel.asm	/^f01026e4:	89 f8                	mov    %edi,%eax$/;"	l
f01026e6	obj/kern/kernel.asm	/^f01026e6:	e8 ea e4 ff ff       	call   f0100bd5 <check_va2pa>$/;"	l
f01026eb	obj/kern/kernel.asm	/^f01026eb:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f01026ee	obj/kern/kernel.asm	/^f01026ee:	74 24                	je     f0102714 <mem_init+0x11b1>$/;"	l
f01026f0	obj/kern/kernel.asm	/^f01026f0:	c7 44 24 0c d0 8b 10 	movl   $0xf0108bd0,0xc(%esp)$/;"	l
f01026f7	obj/kern/kernel.asm	/^f01026f7:	f0 $/;"	l
f01026f8	obj/kern/kernel.asm	/^f01026f8:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f01026ff	obj/kern/kernel.asm	/^f01026ff:	f0 $/;"	l
f0102700	obj/kern/kernel.asm	/^f0102700:	c7 44 24 04 ee 03 00 	movl   $0x3ee,0x4(%esp)$/;"	l
f0102707	obj/kern/kernel.asm	/^f0102707:	00 $/;"	l
f0102708	obj/kern/kernel.asm	/^f0102708:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f010270f	obj/kern/kernel.asm	/^f010270f:	e8 2c d9 ff ff       	call   f0100040 <_panic>$/;"	l
f0102714	obj/kern/kernel.asm	/^f0102714:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102719	obj/kern/kernel.asm	/^f0102719:	89 f8                	mov    %edi,%eax$/;"	l
f010271b	obj/kern/kernel.asm	/^f010271b:	e8 b5 e4 ff ff       	call   f0100bd5 <check_va2pa>$/;"	l
f0102720	obj/kern/kernel.asm	/^f0102720:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102723	obj/kern/kernel.asm	/^f0102723:	74 24                	je     f0102749 <mem_init+0x11e6>$/;"	l
f0102725	obj/kern/kernel.asm	/^f0102725:	c7 44 24 0c 2c 8c 10 	movl   $0xf0108c2c,0xc(%esp)$/;"	l
f010272c	obj/kern/kernel.asm	/^f010272c:	f0 $/;"	l
f010272d	obj/kern/kernel.asm	/^f010272d:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0102734	obj/kern/kernel.asm	/^f0102734:	f0 $/;"	l
f0102735	obj/kern/kernel.asm	/^f0102735:	c7 44 24 04 ef 03 00 	movl   $0x3ef,0x4(%esp)$/;"	l
f010273c	obj/kern/kernel.asm	/^f010273c:	00 $/;"	l
f010273d	obj/kern/kernel.asm	/^f010273d:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0102744	obj/kern/kernel.asm	/^f0102744:	e8 f7 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f0102749	obj/kern/kernel.asm	/^f0102749:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
f010274e	obj/kern/kernel.asm	/^f010274e:	74 24                	je     f0102774 <mem_init+0x1211>$/;"	l
f0102750	obj/kern/kernel.asm	/^f0102750:	c7 44 24 0c 92 92 10 	movl   $0xf0109292,0xc(%esp)$/;"	l
f0102757	obj/kern/kernel.asm	/^f0102757:	f0 $/;"	l
f0102758	obj/kern/kernel.asm	/^f0102758:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f010275f	obj/kern/kernel.asm	/^f010275f:	f0 $/;"	l
f0102760	obj/kern/kernel.asm	/^f0102760:	c7 44 24 04 f0 03 00 	movl   $0x3f0,0x4(%esp)$/;"	l
f0102767	obj/kern/kernel.asm	/^f0102767:	00 $/;"	l
f0102768	obj/kern/kernel.asm	/^f0102768:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f010276f	obj/kern/kernel.asm	/^f010276f:	e8 cc d8 ff ff       	call   f0100040 <_panic>$/;"	l
f0102774	obj/kern/kernel.asm	/^f0102774:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f0102779	obj/kern/kernel.asm	/^f0102779:	74 24                	je     f010279f <mem_init+0x123c>$/;"	l
f010277b	obj/kern/kernel.asm	/^f010277b:	c7 44 24 0c 60 92 10 	movl   $0xf0109260,0xc(%esp)$/;"	l
f0102782	obj/kern/kernel.asm	/^f0102782:	f0 $/;"	l
f0102783	obj/kern/kernel.asm	/^f0102783:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f010278a	obj/kern/kernel.asm	/^f010278a:	f0 $/;"	l
f010278b	obj/kern/kernel.asm	/^f010278b:	c7 44 24 04 f1 03 00 	movl   $0x3f1,0x4(%esp)$/;"	l
f0102792	obj/kern/kernel.asm	/^f0102792:	00 $/;"	l
f0102793	obj/kern/kernel.asm	/^f0102793:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f010279a	obj/kern/kernel.asm	/^f010279a:	e8 a1 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f010279f	obj/kern/kernel.asm	/^f010279f:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01027a6	obj/kern/kernel.asm	/^f01027a6:	e8 70 e9 ff ff       	call   f010111b <page_alloc>$/;"	l
f01027ab	obj/kern/kernel.asm	/^f01027ab:	85 c0                	test   %eax,%eax$/;"	l
f01027ad	obj/kern/kernel.asm	/^f01027ad:	74 04                	je     f01027b3 <mem_init+0x1250>$/;"	l
f01027af	obj/kern/kernel.asm	/^f01027af:	39 c3                	cmp    %eax,%ebx$/;"	l
f01027b1	obj/kern/kernel.asm	/^f01027b1:	74 24                	je     f01027d7 <mem_init+0x1274>$/;"	l
f01027b3	obj/kern/kernel.asm	/^f01027b3:	c7 44 24 0c 54 8c 10 	movl   $0xf0108c54,0xc(%esp)$/;"	l
f01027ba	obj/kern/kernel.asm	/^f01027ba:	f0 $/;"	l
f01027bb	obj/kern/kernel.asm	/^f01027bb:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f01027c2	obj/kern/kernel.asm	/^f01027c2:	f0 $/;"	l
f01027c3	obj/kern/kernel.asm	/^f01027c3:	c7 44 24 04 f4 03 00 	movl   $0x3f4,0x4(%esp)$/;"	l
f01027ca	obj/kern/kernel.asm	/^f01027ca:	00 $/;"	l
f01027cb	obj/kern/kernel.asm	/^f01027cb:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f01027d2	obj/kern/kernel.asm	/^f01027d2:	e8 69 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f01027d7	obj/kern/kernel.asm	/^f01027d7:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01027de	obj/kern/kernel.asm	/^f01027de:	e8 38 e9 ff ff       	call   f010111b <page_alloc>$/;"	l
f01027e3	obj/kern/kernel.asm	/^f01027e3:	85 c0                	test   %eax,%eax$/;"	l
f01027e5	obj/kern/kernel.asm	/^f01027e5:	74 24                	je     f010280b <mem_init+0x12a8>$/;"	l
f01027e7	obj/kern/kernel.asm	/^f01027e7:	c7 44 24 0c b4 91 10 	movl   $0xf01091b4,0xc(%esp)$/;"	l
f01027ee	obj/kern/kernel.asm	/^f01027ee:	f0 $/;"	l
f01027ef	obj/kern/kernel.asm	/^f01027ef:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f01027f6	obj/kern/kernel.asm	/^f01027f6:	f0 $/;"	l
f01027f7	obj/kern/kernel.asm	/^f01027f7:	c7 44 24 04 f7 03 00 	movl   $0x3f7,0x4(%esp)$/;"	l
f01027fe	obj/kern/kernel.asm	/^f01027fe:	00 $/;"	l
f01027ff	obj/kern/kernel.asm	/^f01027ff:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0102806	obj/kern/kernel.asm	/^f0102806:	e8 35 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f010280b	obj/kern/kernel.asm	/^f010280b:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f0102810	obj/kern/kernel.asm	/^f0102810:	8b 08                	mov    (%eax),%ecx$/;"	l
f0102812	obj/kern/kernel.asm	/^f0102812:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f0102818	obj/kern/kernel.asm	/^f0102818:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f010281b	obj/kern/kernel.asm	/^f010281b:	2b 15 9c 9e 2b f0    	sub    0xf02b9e9c,%edx$/;"	l
f0102821	obj/kern/kernel.asm	/^f0102821:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0102824	obj/kern/kernel.asm	/^f0102824:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102827	obj/kern/kernel.asm	/^f0102827:	39 d1                	cmp    %edx,%ecx$/;"	l
f0102829	obj/kern/kernel.asm	/^f0102829:	74 24                	je     f010284f <mem_init+0x12ec>$/;"	l
f010282b	obj/kern/kernel.asm	/^f010282b:	c7 44 24 0c f8 88 10 	movl   $0xf01088f8,0xc(%esp)$/;"	l
f0102832	obj/kern/kernel.asm	/^f0102832:	f0 $/;"	l
f0102833	obj/kern/kernel.asm	/^f0102833:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f010283a	obj/kern/kernel.asm	/^f010283a:	f0 $/;"	l
f010283b	obj/kern/kernel.asm	/^f010283b:	c7 44 24 04 fa 03 00 	movl   $0x3fa,0x4(%esp)$/;"	l
f0102842	obj/kern/kernel.asm	/^f0102842:	00 $/;"	l
f0102843	obj/kern/kernel.asm	/^f0102843:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f010284a	obj/kern/kernel.asm	/^f010284a:	e8 f1 d7 ff ff       	call   f0100040 <_panic>$/;"	l
f010284f	obj/kern/kernel.asm	/^f010284f:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102855	obj/kern/kernel.asm	/^f0102855:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102858	obj/kern/kernel.asm	/^f0102858:	66 83 78 04 01       	cmpw   $0x1,0x4(%eax)$/;"	l
f010285d	obj/kern/kernel.asm	/^f010285d:	74 24                	je     f0102883 <mem_init+0x1320>$/;"	l
f010285f	obj/kern/kernel.asm	/^f010285f:	c7 44 24 0c 17 92 10 	movl   $0xf0109217,0xc(%esp)$/;"	l
f0102866	obj/kern/kernel.asm	/^f0102866:	f0 $/;"	l
f0102867	obj/kern/kernel.asm	/^f0102867:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f010286e	obj/kern/kernel.asm	/^f010286e:	f0 $/;"	l
f010286f	obj/kern/kernel.asm	/^f010286f:	c7 44 24 04 fc 03 00 	movl   $0x3fc,0x4(%esp)$/;"	l
f0102876	obj/kern/kernel.asm	/^f0102876:	00 $/;"	l
f0102877	obj/kern/kernel.asm	/^f0102877:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f010287e	obj/kern/kernel.asm	/^f010287e:	e8 bd d7 ff ff       	call   f0100040 <_panic>$/;"	l
f0102883	obj/kern/kernel.asm	/^f0102883:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102886	obj/kern/kernel.asm	/^f0102886:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f010288c	obj/kern/kernel.asm	/^f010288c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010288f	obj/kern/kernel.asm	/^f010288f:	e8 17 e9 ff ff       	call   f01011ab <page_free>$/;"	l
f0102894	obj/kern/kernel.asm	/^f0102894:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f010289b	obj/kern/kernel.asm	/^f010289b:	00 $/;"	l
f010289c	obj/kern/kernel.asm	/^f010289c:	c7 44 24 04 00 10 40 	movl   $0x401000,0x4(%esp)$/;"	l
f01028a3	obj/kern/kernel.asm	/^f01028a3:	00 $/;"	l
f01028a4	obj/kern/kernel.asm	/^f01028a4:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f01028a9	obj/kern/kernel.asm	/^f01028a9:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01028ac	obj/kern/kernel.asm	/^f01028ac:	e8 79 e9 ff ff       	call   f010122a <pgdir_walk>$/;"	l
f01028b1	obj/kern/kernel.asm	/^f01028b1:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f01028b4	obj/kern/kernel.asm	/^f01028b4:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01028b7	obj/kern/kernel.asm	/^f01028b7:	8b 15 98 9e 2b f0    	mov    0xf02b9e98,%edx$/;"	l
f01028bd	obj/kern/kernel.asm	/^f01028bd:	8b 7a 04             	mov    0x4(%edx),%edi$/;"	l
f01028c0	obj/kern/kernel.asm	/^f01028c0:	81 e7 00 f0 ff ff    	and    $0xfffff000,%edi$/;"	l
f01028c6	obj/kern/kernel.asm	/^f01028c6:	8b 0d 94 9e 2b f0    	mov    0xf02b9e94,%ecx$/;"	l
f01028cc	obj/kern/kernel.asm	/^f01028cc:	89 f8                	mov    %edi,%eax$/;"	l
f01028ce	obj/kern/kernel.asm	/^f01028ce:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f01028d1	obj/kern/kernel.asm	/^f01028d1:	39 c8                	cmp    %ecx,%eax$/;"	l
f01028d3	obj/kern/kernel.asm	/^f01028d3:	72 20                	jb     f01028f5 <mem_init+0x1392>$/;"	l
f01028d5	obj/kern/kernel.asm	/^f01028d5:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f01028d9	obj/kern/kernel.asm	/^f01028d9:	c7 44 24 08 a4 80 10 	movl   $0xf01080a4,0x8(%esp)$/;"	l
f01028e0	obj/kern/kernel.asm	/^f01028e0:	f0 $/;"	l
f01028e1	obj/kern/kernel.asm	/^f01028e1:	c7 44 24 04 03 04 00 	movl   $0x403,0x4(%esp)$/;"	l
f01028e8	obj/kern/kernel.asm	/^f01028e8:	00 $/;"	l
f01028e9	obj/kern/kernel.asm	/^f01028e9:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f01028f0	obj/kern/kernel.asm	/^f01028f0:	e8 4b d7 ff ff       	call   f0100040 <_panic>$/;"	l
f01028f5	obj/kern/kernel.asm	/^f01028f5:	81 ef fc ff ff 0f    	sub    $0xffffffc,%edi$/;"	l
f01028fb	obj/kern/kernel.asm	/^f01028fb:	39 7d cc             	cmp    %edi,-0x34(%ebp)$/;"	l
f01028fe	obj/kern/kernel.asm	/^f01028fe:	74 24                	je     f0102924 <mem_init+0x13c1>$/;"	l
f0102900	obj/kern/kernel.asm	/^f0102900:	c7 44 24 0c a3 92 10 	movl   $0xf01092a3,0xc(%esp)$/;"	l
f0102907	obj/kern/kernel.asm	/^f0102907:	f0 $/;"	l
f0102908	obj/kern/kernel.asm	/^f0102908:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f010290f	obj/kern/kernel.asm	/^f010290f:	f0 $/;"	l
f0102910	obj/kern/kernel.asm	/^f0102910:	c7 44 24 04 04 04 00 	movl   $0x404,0x4(%esp)$/;"	l
f0102917	obj/kern/kernel.asm	/^f0102917:	00 $/;"	l
f0102918	obj/kern/kernel.asm	/^f0102918:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f010291f	obj/kern/kernel.asm	/^f010291f:	e8 1c d7 ff ff       	call   f0100040 <_panic>$/;"	l
f0102924	obj/kern/kernel.asm	/^f0102924:	c7 42 04 00 00 00 00 	movl   $0x0,0x4(%edx)$/;"	l
f010292b	obj/kern/kernel.asm	/^f010292b:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010292e	obj/kern/kernel.asm	/^f010292e:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f0102934	obj/kern/kernel.asm	/^f0102934:	2b 05 9c 9e 2b f0    	sub    0xf02b9e9c,%eax$/;"	l
f010293a	obj/kern/kernel.asm	/^f010293a:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f010293d	obj/kern/kernel.asm	/^f010293d:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102940	obj/kern/kernel.asm	/^f0102940:	89 c2                	mov    %eax,%edx$/;"	l
f0102942	obj/kern/kernel.asm	/^f0102942:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0102945	obj/kern/kernel.asm	/^f0102945:	39 d1                	cmp    %edx,%ecx$/;"	l
f0102947	obj/kern/kernel.asm	/^f0102947:	77 20                	ja     f0102969 <mem_init+0x1406>$/;"	l
f0102949	obj/kern/kernel.asm	/^f0102949:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010294d	obj/kern/kernel.asm	/^f010294d:	c7 44 24 08 a4 80 10 	movl   $0xf01080a4,0x8(%esp)$/;"	l
f0102954	obj/kern/kernel.asm	/^f0102954:	f0 $/;"	l
f0102955	obj/kern/kernel.asm	/^f0102955:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f010295c	obj/kern/kernel.asm	/^f010295c:	00 $/;"	l
f010295d	obj/kern/kernel.asm	/^f010295d:	c7 04 24 fd 8f 10 f0 	movl   $0xf0108ffd,(%esp)$/;"	l
f0102964	obj/kern/kernel.asm	/^f0102964:	e8 d7 d6 ff ff       	call   f0100040 <_panic>$/;"	l
f0102969	obj/kern/kernel.asm	/^f0102969:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0102970	obj/kern/kernel.asm	/^f0102970:	00 $/;"	l
f0102971	obj/kern/kernel.asm	/^f0102971:	c7 44 24 04 ff 00 00 	movl   $0xff,0x4(%esp)$/;"	l
f0102978	obj/kern/kernel.asm	/^f0102978:	00 $/;"	l
f0102979	obj/kern/kernel.asm	/^f0102979:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f010297e	obj/kern/kernel.asm	/^f010297e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102981	obj/kern/kernel.asm	/^f0102981:	e8 11 3c 00 00       	call   f0106597 <memset>$/;"	l
f0102986	obj/kern/kernel.asm	/^f0102986:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f0102989	obj/kern/kernel.asm	/^f0102989:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f010298c	obj/kern/kernel.asm	/^f010298c:	e8 1a e8 ff ff       	call   f01011ab <page_free>$/;"	l
f0102991	obj/kern/kernel.asm	/^f0102991:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0102998	obj/kern/kernel.asm	/^f0102998:	00 $/;"	l
f0102999	obj/kern/kernel.asm	/^f0102999:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01029a0	obj/kern/kernel.asm	/^f01029a0:	00 $/;"	l
f01029a1	obj/kern/kernel.asm	/^f01029a1:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f01029a6	obj/kern/kernel.asm	/^f01029a6:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01029a9	obj/kern/kernel.asm	/^f01029a9:	e8 7c e8 ff ff       	call   f010122a <pgdir_walk>$/;"	l
f01029ae	obj/kern/kernel.asm	/^f01029ae:	89 fa                	mov    %edi,%edx$/;"	l
f01029b0	obj/kern/kernel.asm	/^f01029b0:	2b 15 9c 9e 2b f0    	sub    0xf02b9e9c,%edx$/;"	l
f01029b6	obj/kern/kernel.asm	/^f01029b6:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01029b9	obj/kern/kernel.asm	/^f01029b9:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01029bc	obj/kern/kernel.asm	/^f01029bc:	89 d0                	mov    %edx,%eax$/;"	l
f01029be	obj/kern/kernel.asm	/^f01029be:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f01029c1	obj/kern/kernel.asm	/^f01029c1:	3b 05 94 9e 2b f0    	cmp    0xf02b9e94,%eax$/;"	l
f01029c7	obj/kern/kernel.asm	/^f01029c7:	72 20                	jb     f01029e9 <mem_init+0x1486>$/;"	l
f01029c9	obj/kern/kernel.asm	/^f01029c9:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f01029cd	obj/kern/kernel.asm	/^f01029cd:	c7 44 24 08 a4 80 10 	movl   $0xf01080a4,0x8(%esp)$/;"	l
f01029d4	obj/kern/kernel.asm	/^f01029d4:	f0 $/;"	l
f01029d5	obj/kern/kernel.asm	/^f01029d5:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f01029dc	obj/kern/kernel.asm	/^f01029dc:	00 $/;"	l
f01029dd	obj/kern/kernel.asm	/^f01029dd:	c7 04 24 fd 8f 10 f0 	movl   $0xf0108ffd,(%esp)$/;"	l
f01029e4	obj/kern/kernel.asm	/^f01029e4:	e8 57 d6 ff ff       	call   f0100040 <_panic>$/;"	l
f01029e9	obj/kern/kernel.asm	/^f01029e9:	8d 82 00 00 00 f0    	lea    -0x10000000(%edx),%eax$/;"	l
f01029ef	obj/kern/kernel.asm	/^f01029ef:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01029f2	obj/kern/kernel.asm	/^f01029f2:	81 ea 00 f0 ff 0f    	sub    $0xffff000,%edx$/;"	l
f01029f8	obj/kern/kernel.asm	/^f01029f8:	f6 00 01             	testb  $0x1,(%eax)$/;"	l
f01029fb	obj/kern/kernel.asm	/^f01029fb:	74 24                	je     f0102a21 <mem_init+0x14be>$/;"	l
f01029fd	obj/kern/kernel.asm	/^f01029fd:	c7 44 24 0c bb 92 10 	movl   $0xf01092bb,0xc(%esp)$/;"	l
f0102a04	obj/kern/kernel.asm	/^f0102a04:	f0 $/;"	l
f0102a05	obj/kern/kernel.asm	/^f0102a05:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0102a0c	obj/kern/kernel.asm	/^f0102a0c:	f0 $/;"	l
f0102a0d	obj/kern/kernel.asm	/^f0102a0d:	c7 44 24 04 0e 04 00 	movl   $0x40e,0x4(%esp)$/;"	l
f0102a14	obj/kern/kernel.asm	/^f0102a14:	00 $/;"	l
f0102a15	obj/kern/kernel.asm	/^f0102a15:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0102a1c	obj/kern/kernel.asm	/^f0102a1c:	e8 1f d6 ff ff       	call   f0100040 <_panic>$/;"	l
f0102a21	obj/kern/kernel.asm	/^f0102a21:	83 c0 04             	add    $0x4,%eax$/;"	l
f0102a24	obj/kern/kernel.asm	/^f0102a24:	39 d0                	cmp    %edx,%eax$/;"	l
f0102a26	obj/kern/kernel.asm	/^f0102a26:	75 d0                	jne    f01029f8 <mem_init+0x1495>$/;"	l
f0102a28	obj/kern/kernel.asm	/^f0102a28:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f0102a2d	obj/kern/kernel.asm	/^f0102a2d:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102a33	obj/kern/kernel.asm	/^f0102a33:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102a36	obj/kern/kernel.asm	/^f0102a36:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f0102a3c	obj/kern/kernel.asm	/^f0102a3c:	8b 4d d0             	mov    -0x30(%ebp),%ecx$/;"	l
f0102a3f	obj/kern/kernel.asm	/^f0102a3f:	89 0d 40 92 2b f0    	mov    %ecx,0xf02b9240$/;"	l
f0102a45	obj/kern/kernel.asm	/^f0102a45:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102a48	obj/kern/kernel.asm	/^f0102a48:	e8 5e e7 ff ff       	call   f01011ab <page_free>$/;"	l
f0102a4d	obj/kern/kernel.asm	/^f0102a4d:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0102a50	obj/kern/kernel.asm	/^f0102a50:	e8 56 e7 ff ff       	call   f01011ab <page_free>$/;"	l
f0102a55	obj/kern/kernel.asm	/^f0102a55:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0102a58	obj/kern/kernel.asm	/^f0102a58:	e8 4e e7 ff ff       	call   f01011ab <page_free>$/;"	l
f0102a5d	obj/kern/kernel.asm	/^f0102a5d:	c7 44 24 04 01 10 00 	movl   $0x1001,0x4(%esp)$/;"	l
f0102a64	obj/kern/kernel.asm	/^f0102a64:	00 $/;"	l
f0102a65	obj/kern/kernel.asm	/^f0102a65:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102a6c	obj/kern/kernel.asm	/^f0102a6c:	e8 84 ea ff ff       	call   f01014f5 <mmio_map_region>$/;"	l
f0102a71	obj/kern/kernel.asm	/^f0102a71:	89 c3                	mov    %eax,%ebx$/;"	l
f0102a73	obj/kern/kernel.asm	/^f0102a73:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0102a7a	obj/kern/kernel.asm	/^f0102a7a:	00 $/;"	l
f0102a7b	obj/kern/kernel.asm	/^f0102a7b:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102a82	obj/kern/kernel.asm	/^f0102a82:	e8 6e ea ff ff       	call   f01014f5 <mmio_map_region>$/;"	l
f0102a87	obj/kern/kernel.asm	/^f0102a87:	89 c6                	mov    %eax,%esi$/;"	l
f0102a89	obj/kern/kernel.asm	/^f0102a89:	8d 83 a0 1f 00 00    	lea    0x1fa0(%ebx),%eax$/;"	l
f0102a8f	obj/kern/kernel.asm	/^f0102a8f:	3d ff ff bf ef       	cmp    $0xefbfffff,%eax$/;"	l
f0102a94	obj/kern/kernel.asm	/^f0102a94:	77 08                	ja     f0102a9e <mem_init+0x153b>$/;"	l
f0102a96	obj/kern/kernel.asm	/^f0102a96:	81 fb ff ff 7f ef    	cmp    $0xef7fffff,%ebx$/;"	l
f0102a9c	obj/kern/kernel.asm	/^f0102a9c:	77 24                	ja     f0102ac2 <mem_init+0x155f>$/;"	l
f0102a9e	obj/kern/kernel.asm	/^f0102a9e:	c7 44 24 0c 78 8c 10 	movl   $0xf0108c78,0xc(%esp)$/;"	l
f0102aa5	obj/kern/kernel.asm	/^f0102aa5:	f0 $/;"	l
f0102aa6	obj/kern/kernel.asm	/^f0102aa6:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0102aad	obj/kern/kernel.asm	/^f0102aad:	f0 $/;"	l
f0102aae	obj/kern/kernel.asm	/^f0102aae:	c7 44 24 04 1e 04 00 	movl   $0x41e,0x4(%esp)$/;"	l
f0102ab5	obj/kern/kernel.asm	/^f0102ab5:	00 $/;"	l
f0102ab6	obj/kern/kernel.asm	/^f0102ab6:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0102abd	obj/kern/kernel.asm	/^f0102abd:	e8 7e d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102ac2	obj/kern/kernel.asm	/^f0102ac2:	8d 96 a0 1f 00 00    	lea    0x1fa0(%esi),%edx$/;"	l
f0102ac8	obj/kern/kernel.asm	/^f0102ac8:	81 fa ff ff bf ef    	cmp    $0xefbfffff,%edx$/;"	l
f0102ace	obj/kern/kernel.asm	/^f0102ace:	77 08                	ja     f0102ad8 <mem_init+0x1575>$/;"	l
f0102ad0	obj/kern/kernel.asm	/^f0102ad0:	81 fe ff ff 7f ef    	cmp    $0xef7fffff,%esi$/;"	l
f0102ad6	obj/kern/kernel.asm	/^f0102ad6:	77 24                	ja     f0102afc <mem_init+0x1599>$/;"	l
f0102ad8	obj/kern/kernel.asm	/^f0102ad8:	c7 44 24 0c a0 8c 10 	movl   $0xf0108ca0,0xc(%esp)$/;"	l
f0102adf	obj/kern/kernel.asm	/^f0102adf:	f0 $/;"	l
f0102ae0	obj/kern/kernel.asm	/^f0102ae0:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0102ae7	obj/kern/kernel.asm	/^f0102ae7:	f0 $/;"	l
f0102ae8	obj/kern/kernel.asm	/^f0102ae8:	c7 44 24 04 1f 04 00 	movl   $0x41f,0x4(%esp)$/;"	l
f0102aef	obj/kern/kernel.asm	/^f0102aef:	00 $/;"	l
f0102af0	obj/kern/kernel.asm	/^f0102af0:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0102af7	obj/kern/kernel.asm	/^f0102af7:	e8 44 d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102afc	obj/kern/kernel.asm	/^f0102afc:	89 da                	mov    %ebx,%edx$/;"	l
f0102afe	obj/kern/kernel.asm	/^f0102afe:	09 f2                	or     %esi,%edx$/;"	l
f0102b00	obj/kern/kernel.asm	/^f0102b00:	f7 c2 ff 0f 00 00    	test   $0xfff,%edx$/;"	l
f0102b06	obj/kern/kernel.asm	/^f0102b06:	74 24                	je     f0102b2c <mem_init+0x15c9>$/;"	l
f0102b08	obj/kern/kernel.asm	/^f0102b08:	c7 44 24 0c c8 8c 10 	movl   $0xf0108cc8,0xc(%esp)$/;"	l
f0102b0f	obj/kern/kernel.asm	/^f0102b0f:	f0 $/;"	l
f0102b10	obj/kern/kernel.asm	/^f0102b10:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0102b17	obj/kern/kernel.asm	/^f0102b17:	f0 $/;"	l
f0102b18	obj/kern/kernel.asm	/^f0102b18:	c7 44 24 04 21 04 00 	movl   $0x421,0x4(%esp)$/;"	l
f0102b1f	obj/kern/kernel.asm	/^f0102b1f:	00 $/;"	l
f0102b20	obj/kern/kernel.asm	/^f0102b20:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0102b27	obj/kern/kernel.asm	/^f0102b27:	e8 14 d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102b2c	obj/kern/kernel.asm	/^f0102b2c:	39 c6                	cmp    %eax,%esi$/;"	l
f0102b2e	obj/kern/kernel.asm	/^f0102b2e:	73 24                	jae    f0102b54 <mem_init+0x15f1>$/;"	l
f0102b30	obj/kern/kernel.asm	/^f0102b30:	c7 44 24 0c d2 92 10 	movl   $0xf01092d2,0xc(%esp)$/;"	l
f0102b37	obj/kern/kernel.asm	/^f0102b37:	f0 $/;"	l
f0102b38	obj/kern/kernel.asm	/^f0102b38:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0102b3f	obj/kern/kernel.asm	/^f0102b3f:	f0 $/;"	l
f0102b40	obj/kern/kernel.asm	/^f0102b40:	c7 44 24 04 23 04 00 	movl   $0x423,0x4(%esp)$/;"	l
f0102b47	obj/kern/kernel.asm	/^f0102b47:	00 $/;"	l
f0102b48	obj/kern/kernel.asm	/^f0102b48:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0102b4f	obj/kern/kernel.asm	/^f0102b4f:	e8 ec d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102b54	obj/kern/kernel.asm	/^f0102b54:	8b 3d 98 9e 2b f0    	mov    0xf02b9e98,%edi$/;"	l
f0102b5a	obj/kern/kernel.asm	/^f0102b5a:	89 da                	mov    %ebx,%edx$/;"	l
f0102b5c	obj/kern/kernel.asm	/^f0102b5c:	89 f8                	mov    %edi,%eax$/;"	l
f0102b5e	obj/kern/kernel.asm	/^f0102b5e:	e8 72 e0 ff ff       	call   f0100bd5 <check_va2pa>$/;"	l
f0102b63	obj/kern/kernel.asm	/^f0102b63:	85 c0                	test   %eax,%eax$/;"	l
f0102b65	obj/kern/kernel.asm	/^f0102b65:	74 24                	je     f0102b8b <mem_init+0x1628>$/;"	l
f0102b67	obj/kern/kernel.asm	/^f0102b67:	c7 44 24 0c f0 8c 10 	movl   $0xf0108cf0,0xc(%esp)$/;"	l
f0102b6e	obj/kern/kernel.asm	/^f0102b6e:	f0 $/;"	l
f0102b6f	obj/kern/kernel.asm	/^f0102b6f:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0102b76	obj/kern/kernel.asm	/^f0102b76:	f0 $/;"	l
f0102b77	obj/kern/kernel.asm	/^f0102b77:	c7 44 24 04 25 04 00 	movl   $0x425,0x4(%esp)$/;"	l
f0102b7e	obj/kern/kernel.asm	/^f0102b7e:	00 $/;"	l
f0102b7f	obj/kern/kernel.asm	/^f0102b7f:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0102b86	obj/kern/kernel.asm	/^f0102b86:	e8 b5 d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102b8b	obj/kern/kernel.asm	/^f0102b8b:	8d 83 00 10 00 00    	lea    0x1000(%ebx),%eax$/;"	l
f0102b91	obj/kern/kernel.asm	/^f0102b91:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0102b94	obj/kern/kernel.asm	/^f0102b94:	89 c2                	mov    %eax,%edx$/;"	l
f0102b96	obj/kern/kernel.asm	/^f0102b96:	89 f8                	mov    %edi,%eax$/;"	l
f0102b98	obj/kern/kernel.asm	/^f0102b98:	e8 38 e0 ff ff       	call   f0100bd5 <check_va2pa>$/;"	l
f0102b9d	obj/kern/kernel.asm	/^f0102b9d:	3d 00 10 00 00       	cmp    $0x1000,%eax$/;"	l
f0102ba2	obj/kern/kernel.asm	/^f0102ba2:	74 24                	je     f0102bc8 <mem_init+0x1665>$/;"	l
f0102ba4	obj/kern/kernel.asm	/^f0102ba4:	c7 44 24 0c 14 8d 10 	movl   $0xf0108d14,0xc(%esp)$/;"	l
f0102bab	obj/kern/kernel.asm	/^f0102bab:	f0 $/;"	l
f0102bac	obj/kern/kernel.asm	/^f0102bac:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0102bb3	obj/kern/kernel.asm	/^f0102bb3:	f0 $/;"	l
f0102bb4	obj/kern/kernel.asm	/^f0102bb4:	c7 44 24 04 26 04 00 	movl   $0x426,0x4(%esp)$/;"	l
f0102bbb	obj/kern/kernel.asm	/^f0102bbb:	00 $/;"	l
f0102bbc	obj/kern/kernel.asm	/^f0102bbc:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0102bc3	obj/kern/kernel.asm	/^f0102bc3:	e8 78 d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102bc8	obj/kern/kernel.asm	/^f0102bc8:	89 f2                	mov    %esi,%edx$/;"	l
f0102bca	obj/kern/kernel.asm	/^f0102bca:	89 f8                	mov    %edi,%eax$/;"	l
f0102bcc	obj/kern/kernel.asm	/^f0102bcc:	e8 04 e0 ff ff       	call   f0100bd5 <check_va2pa>$/;"	l
f0102bd1	obj/kern/kernel.asm	/^f0102bd1:	85 c0                	test   %eax,%eax$/;"	l
f0102bd3	obj/kern/kernel.asm	/^f0102bd3:	74 24                	je     f0102bf9 <mem_init+0x1696>$/;"	l
f0102bd5	obj/kern/kernel.asm	/^f0102bd5:	c7 44 24 0c 44 8d 10 	movl   $0xf0108d44,0xc(%esp)$/;"	l
f0102bdc	obj/kern/kernel.asm	/^f0102bdc:	f0 $/;"	l
f0102bdd	obj/kern/kernel.asm	/^f0102bdd:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0102be4	obj/kern/kernel.asm	/^f0102be4:	f0 $/;"	l
f0102be5	obj/kern/kernel.asm	/^f0102be5:	c7 44 24 04 27 04 00 	movl   $0x427,0x4(%esp)$/;"	l
f0102bec	obj/kern/kernel.asm	/^f0102bec:	00 $/;"	l
f0102bed	obj/kern/kernel.asm	/^f0102bed:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0102bf4	obj/kern/kernel.asm	/^f0102bf4:	e8 47 d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102bf9	obj/kern/kernel.asm	/^f0102bf9:	8d 96 00 10 00 00    	lea    0x1000(%esi),%edx$/;"	l
f0102bff	obj/kern/kernel.asm	/^f0102bff:	89 f8                	mov    %edi,%eax$/;"	l
f0102c01	obj/kern/kernel.asm	/^f0102c01:	e8 cf df ff ff       	call   f0100bd5 <check_va2pa>$/;"	l
f0102c06	obj/kern/kernel.asm	/^f0102c06:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102c09	obj/kern/kernel.asm	/^f0102c09:	74 24                	je     f0102c2f <mem_init+0x16cc>$/;"	l
f0102c0b	obj/kern/kernel.asm	/^f0102c0b:	c7 44 24 0c 68 8d 10 	movl   $0xf0108d68,0xc(%esp)$/;"	l
f0102c12	obj/kern/kernel.asm	/^f0102c12:	f0 $/;"	l
f0102c13	obj/kern/kernel.asm	/^f0102c13:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0102c1a	obj/kern/kernel.asm	/^f0102c1a:	f0 $/;"	l
f0102c1b	obj/kern/kernel.asm	/^f0102c1b:	c7 44 24 04 28 04 00 	movl   $0x428,0x4(%esp)$/;"	l
f0102c22	obj/kern/kernel.asm	/^f0102c22:	00 $/;"	l
f0102c23	obj/kern/kernel.asm	/^f0102c23:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0102c2a	obj/kern/kernel.asm	/^f0102c2a:	e8 11 d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102c2f	obj/kern/kernel.asm	/^f0102c2f:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0102c36	obj/kern/kernel.asm	/^f0102c36:	00 $/;"	l
f0102c37	obj/kern/kernel.asm	/^f0102c37:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0102c3b	obj/kern/kernel.asm	/^f0102c3b:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0102c3e	obj/kern/kernel.asm	/^f0102c3e:	e8 e7 e5 ff ff       	call   f010122a <pgdir_walk>$/;"	l
f0102c43	obj/kern/kernel.asm	/^f0102c43:	f6 00 1a             	testb  $0x1a,(%eax)$/;"	l
f0102c46	obj/kern/kernel.asm	/^f0102c46:	75 24                	jne    f0102c6c <mem_init+0x1709>$/;"	l
f0102c48	obj/kern/kernel.asm	/^f0102c48:	c7 44 24 0c 94 8d 10 	movl   $0xf0108d94,0xc(%esp)$/;"	l
f0102c4f	obj/kern/kernel.asm	/^f0102c4f:	f0 $/;"	l
f0102c50	obj/kern/kernel.asm	/^f0102c50:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0102c57	obj/kern/kernel.asm	/^f0102c57:	f0 $/;"	l
f0102c58	obj/kern/kernel.asm	/^f0102c58:	c7 44 24 04 2a 04 00 	movl   $0x42a,0x4(%esp)$/;"	l
f0102c5f	obj/kern/kernel.asm	/^f0102c5f:	00 $/;"	l
f0102c60	obj/kern/kernel.asm	/^f0102c60:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0102c67	obj/kern/kernel.asm	/^f0102c67:	e8 d4 d3 ff ff       	call   f0100040 <_panic>$/;"	l
f0102c6c	obj/kern/kernel.asm	/^f0102c6c:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0102c73	obj/kern/kernel.asm	/^f0102c73:	00 $/;"	l
f0102c74	obj/kern/kernel.asm	/^f0102c74:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0102c78	obj/kern/kernel.asm	/^f0102c78:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f0102c7d	obj/kern/kernel.asm	/^f0102c7d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102c80	obj/kern/kernel.asm	/^f0102c80:	e8 a5 e5 ff ff       	call   f010122a <pgdir_walk>$/;"	l
f0102c85	obj/kern/kernel.asm	/^f0102c85:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0102c88	obj/kern/kernel.asm	/^f0102c88:	74 24                	je     f0102cae <mem_init+0x174b>$/;"	l
f0102c8a	obj/kern/kernel.asm	/^f0102c8a:	c7 44 24 0c d8 8d 10 	movl   $0xf0108dd8,0xc(%esp)$/;"	l
f0102c91	obj/kern/kernel.asm	/^f0102c91:	f0 $/;"	l
f0102c92	obj/kern/kernel.asm	/^f0102c92:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0102c99	obj/kern/kernel.asm	/^f0102c99:	f0 $/;"	l
f0102c9a	obj/kern/kernel.asm	/^f0102c9a:	c7 44 24 04 2b 04 00 	movl   $0x42b,0x4(%esp)$/;"	l
f0102ca1	obj/kern/kernel.asm	/^f0102ca1:	00 $/;"	l
f0102ca2	obj/kern/kernel.asm	/^f0102ca2:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0102ca9	obj/kern/kernel.asm	/^f0102ca9:	e8 92 d3 ff ff       	call   f0100040 <_panic>$/;"	l
f0102cae	obj/kern/kernel.asm	/^f0102cae:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0102cb5	obj/kern/kernel.asm	/^f0102cb5:	00 $/;"	l
f0102cb6	obj/kern/kernel.asm	/^f0102cb6:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0102cba	obj/kern/kernel.asm	/^f0102cba:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f0102cbf	obj/kern/kernel.asm	/^f0102cbf:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102cc2	obj/kern/kernel.asm	/^f0102cc2:	e8 63 e5 ff ff       	call   f010122a <pgdir_walk>$/;"	l
f0102cc7	obj/kern/kernel.asm	/^f0102cc7:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102ccd	obj/kern/kernel.asm	/^f0102ccd:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0102cd4	obj/kern/kernel.asm	/^f0102cd4:	00 $/;"	l
f0102cd5	obj/kern/kernel.asm	/^f0102cd5:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102cd8	obj/kern/kernel.asm	/^f0102cd8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0102cdc	obj/kern/kernel.asm	/^f0102cdc:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f0102ce1	obj/kern/kernel.asm	/^f0102ce1:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102ce4	obj/kern/kernel.asm	/^f0102ce4:	e8 41 e5 ff ff       	call   f010122a <pgdir_walk>$/;"	l
f0102ce9	obj/kern/kernel.asm	/^f0102ce9:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102cef	obj/kern/kernel.asm	/^f0102cef:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0102cf6	obj/kern/kernel.asm	/^f0102cf6:	00 $/;"	l
f0102cf7	obj/kern/kernel.asm	/^f0102cf7:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0102cfb	obj/kern/kernel.asm	/^f0102cfb:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f0102d00	obj/kern/kernel.asm	/^f0102d00:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102d03	obj/kern/kernel.asm	/^f0102d03:	e8 22 e5 ff ff       	call   f010122a <pgdir_walk>$/;"	l
f0102d08	obj/kern/kernel.asm	/^f0102d08:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102d0e	obj/kern/kernel.asm	/^f0102d0e:	c7 04 24 e4 92 10 f0 	movl   $0xf01092e4,(%esp)$/;"	l
f0102d15	obj/kern/kernel.asm	/^f0102d15:	e8 b2 12 00 00       	call   f0103fcc <cprintf>$/;"	l
f0102d1a	obj/kern/kernel.asm	/^f0102d1a:	a1 9c 9e 2b f0       	mov    0xf02b9e9c,%eax$/;"	l
f0102d1f	obj/kern/kernel.asm	/^f0102d1f:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102d24	obj/kern/kernel.asm	/^f0102d24:	77 20                	ja     f0102d46 <mem_init+0x17e3>$/;"	l
f0102d26	obj/kern/kernel.asm	/^f0102d26:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102d2a	obj/kern/kernel.asm	/^f0102d2a:	c7 44 24 08 c8 80 10 	movl   $0xf01080c8,0x8(%esp)$/;"	l
f0102d31	obj/kern/kernel.asm	/^f0102d31:	f0 $/;"	l
f0102d32	obj/kern/kernel.asm	/^f0102d32:	c7 44 24 04 bd 00 00 	movl   $0xbd,0x4(%esp)$/;"	l
f0102d39	obj/kern/kernel.asm	/^f0102d39:	00 $/;"	l
f0102d3a	obj/kern/kernel.asm	/^f0102d3a:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0102d41	obj/kern/kernel.asm	/^f0102d41:	e8 fa d2 ff ff       	call   f0100040 <_panic>$/;"	l
f0102d46	obj/kern/kernel.asm	/^f0102d46:	8b 15 94 9e 2b f0    	mov    0xf02b9e94,%edx$/;"	l
f0102d4c	obj/kern/kernel.asm	/^f0102d4c:	8d 0c d5 ff 0f 00 00 	lea    0xfff(,%edx,8),%ecx$/;"	l
f0102d53	obj/kern/kernel.asm	/^f0102d53:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f0102d59	obj/kern/kernel.asm	/^f0102d59:	c7 44 24 04 04 00 00 	movl   $0x4,0x4(%esp)$/;"	l
f0102d60	obj/kern/kernel.asm	/^f0102d60:	00 $/;"	l
f0102d61	obj/kern/kernel.asm	/^f0102d61:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0102d66	obj/kern/kernel.asm	/^f0102d66:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102d69	obj/kern/kernel.asm	/^f0102d69:	ba 00 00 00 ef       	mov    $0xef000000,%edx$/;"	l
f0102d6e	obj/kern/kernel.asm	/^f0102d6e:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f0102d73	obj/kern/kernel.asm	/^f0102d73:	e8 92 e5 ff ff       	call   f010130a <boot_map_region>$/;"	l
f0102d78	obj/kern/kernel.asm	/^f0102d78:	a1 48 92 2b f0       	mov    0xf02b9248,%eax$/;"	l
f0102d7d	obj/kern/kernel.asm	/^f0102d7d:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102d82	obj/kern/kernel.asm	/^f0102d82:	77 20                	ja     f0102da4 <mem_init+0x1841>$/;"	l
f0102d84	obj/kern/kernel.asm	/^f0102d84:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102d88	obj/kern/kernel.asm	/^f0102d88:	c7 44 24 08 c8 80 10 	movl   $0xf01080c8,0x8(%esp)$/;"	l
f0102d8f	obj/kern/kernel.asm	/^f0102d8f:	f0 $/;"	l
f0102d90	obj/kern/kernel.asm	/^f0102d90:	c7 44 24 04 c6 00 00 	movl   $0xc6,0x4(%esp)$/;"	l
f0102d97	obj/kern/kernel.asm	/^f0102d97:	00 $/;"	l
f0102d98	obj/kern/kernel.asm	/^f0102d98:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0102d9f	obj/kern/kernel.asm	/^f0102d9f:	e8 9c d2 ff ff       	call   f0100040 <_panic>$/;"	l
f0102da4	obj/kern/kernel.asm	/^f0102da4:	c7 44 24 04 04 00 00 	movl   $0x4,0x4(%esp)$/;"	l
f0102dab	obj/kern/kernel.asm	/^f0102dab:	00 $/;"	l
f0102dac	obj/kern/kernel.asm	/^f0102dac:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0102db1	obj/kern/kernel.asm	/^f0102db1:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102db4	obj/kern/kernel.asm	/^f0102db4:	b9 00 f0 01 00       	mov    $0x1f000,%ecx$/;"	l
f0102db9	obj/kern/kernel.asm	/^f0102db9:	ba 00 00 c0 ee       	mov    $0xeec00000,%edx$/;"	l
f0102dbe	obj/kern/kernel.asm	/^f0102dbe:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f0102dc3	obj/kern/kernel.asm	/^f0102dc3:	e8 42 e5 ff ff       	call   f010130a <boot_map_region>$/;"	l
f0102dc8	obj/kern/kernel.asm	/^f0102dc8:	b8 00 b0 11 f0       	mov    $0xf011b000,%eax$/;"	l
f0102dcd	obj/kern/kernel.asm	/^f0102dcd:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102dd2	obj/kern/kernel.asm	/^f0102dd2:	77 20                	ja     f0102df4 <mem_init+0x1891>$/;"	l
f0102dd4	obj/kern/kernel.asm	/^f0102dd4:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102dd8	obj/kern/kernel.asm	/^f0102dd8:	c7 44 24 08 c8 80 10 	movl   $0xf01080c8,0x8(%esp)$/;"	l
f0102ddf	obj/kern/kernel.asm	/^f0102ddf:	f0 $/;"	l
f0102de0	obj/kern/kernel.asm	/^f0102de0:	c7 44 24 04 d3 00 00 	movl   $0xd3,0x4(%esp)$/;"	l
f0102de7	obj/kern/kernel.asm	/^f0102de7:	00 $/;"	l
f0102de8	obj/kern/kernel.asm	/^f0102de8:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0102def	obj/kern/kernel.asm	/^f0102def:	e8 4c d2 ff ff       	call   f0100040 <_panic>$/;"	l
f0102df4	obj/kern/kernel.asm	/^f0102df4:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
f0102dfb	obj/kern/kernel.asm	/^f0102dfb:	00 $/;"	l
f0102dfc	obj/kern/kernel.asm	/^f0102dfc:	c7 04 24 00 b0 11 00 	movl   $0x11b000,(%esp)$/;"	l
f0102e03	obj/kern/kernel.asm	/^f0102e03:	b9 00 80 00 00       	mov    $0x8000,%ecx$/;"	l
f0102e08	obj/kern/kernel.asm	/^f0102e08:	ba 00 80 ff ef       	mov    $0xefff8000,%edx$/;"	l
f0102e0d	obj/kern/kernel.asm	/^f0102e0d:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f0102e12	obj/kern/kernel.asm	/^f0102e12:	e8 f3 e4 ff ff       	call   f010130a <boot_map_region>$/;"	l
f0102e17	obj/kern/kernel.asm	/^f0102e17:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
f0102e1e	obj/kern/kernel.asm	/^f0102e1e:	00 $/;"	l
f0102e1f	obj/kern/kernel.asm	/^f0102e1f:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102e26	obj/kern/kernel.asm	/^f0102e26:	b9 ff ff ff 0f       	mov    $0xfffffff,%ecx$/;"	l
f0102e2b	obj/kern/kernel.asm	/^f0102e2b:	ba 00 00 00 f0       	mov    $0xf0000000,%edx$/;"	l
f0102e30	obj/kern/kernel.asm	/^f0102e30:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f0102e35	obj/kern/kernel.asm	/^f0102e35:	e8 d0 e4 ff ff       	call   f010130a <boot_map_region>$/;"	l
f0102e3a	obj/kern/kernel.asm	/^f0102e3a:	bf 00 b0 2f f0       	mov    $0xf02fb000,%edi$/;"	l
f0102e3f	obj/kern/kernel.asm	/^f0102e3f:	bb 00 b0 2b f0       	mov    $0xf02bb000,%ebx$/;"	l
f0102e44	obj/kern/kernel.asm	/^f0102e44:	be 00 80 ff ef       	mov    $0xefff8000,%esi$/;"	l
f0102e49	obj/kern/kernel.asm	/^f0102e49:	81 fb ff ff ff ef    	cmp    $0xefffffff,%ebx$/;"	l
f0102e4f	obj/kern/kernel.asm	/^f0102e4f:	77 20                	ja     f0102e71 <mem_init+0x190e>$/;"	l
f0102e51	obj/kern/kernel.asm	/^f0102e51:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f0102e55	obj/kern/kernel.asm	/^f0102e55:	c7 44 24 08 c8 80 10 	movl   $0xf01080c8,0x8(%esp)$/;"	l
f0102e5c	obj/kern/kernel.asm	/^f0102e5c:	f0 $/;"	l
f0102e5d	obj/kern/kernel.asm	/^f0102e5d:	c7 44 24 04 18 01 00 	movl   $0x118,0x4(%esp)$/;"	l
f0102e64	obj/kern/kernel.asm	/^f0102e64:	00 $/;"	l
f0102e65	obj/kern/kernel.asm	/^f0102e65:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0102e6c	obj/kern/kernel.asm	/^f0102e6c:	e8 cf d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102e71	obj/kern/kernel.asm	/^f0102e71:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
f0102e78	obj/kern/kernel.asm	/^f0102e78:	00 $/;"	l
f0102e79	obj/kern/kernel.asm	/^f0102e79:	8d 83 00 00 00 10    	lea    0x10000000(%ebx),%eax$/;"	l
f0102e7f	obj/kern/kernel.asm	/^f0102e7f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102e82	obj/kern/kernel.asm	/^f0102e82:	b9 00 80 00 00       	mov    $0x8000,%ecx$/;"	l
f0102e87	obj/kern/kernel.asm	/^f0102e87:	89 f2                	mov    %esi,%edx$/;"	l
f0102e89	obj/kern/kernel.asm	/^f0102e89:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f0102e8e	obj/kern/kernel.asm	/^f0102e8e:	e8 77 e4 ff ff       	call   f010130a <boot_map_region>$/;"	l
f0102e93	obj/kern/kernel.asm	/^f0102e93:	81 c3 00 80 00 00    	add    $0x8000,%ebx$/;"	l
f0102e99	obj/kern/kernel.asm	/^f0102e99:	81 ee 00 00 01 00    	sub    $0x10000,%esi$/;"	l
f0102e9f	obj/kern/kernel.asm	/^f0102e9f:	39 fb                	cmp    %edi,%ebx$/;"	l
f0102ea1	obj/kern/kernel.asm	/^f0102ea1:	75 a6                	jne    f0102e49 <mem_init+0x18e6>$/;"	l
f0102ea3	obj/kern/kernel.asm	/^f0102ea3:	8b 3d 98 9e 2b f0    	mov    0xf02b9e98,%edi$/;"	l
f0102ea9	obj/kern/kernel.asm	/^f0102ea9:	a1 94 9e 2b f0       	mov    0xf02b9e94,%eax$/;"	l
f0102eae	obj/kern/kernel.asm	/^f0102eae:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0102eb1	obj/kern/kernel.asm	/^f0102eb1:	8d 04 c5 ff 0f 00 00 	lea    0xfff(,%eax,8),%eax$/;"	l
f0102eb8	obj/kern/kernel.asm	/^f0102eb8:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0102ebd	obj/kern/kernel.asm	/^f0102ebd:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0102ec0	obj/kern/kernel.asm	/^f0102ec0:	8b 35 9c 9e 2b f0    	mov    0xf02b9e9c,%esi$/;"	l
f0102ec6	obj/kern/kernel.asm	/^f0102ec6:	89 75 cc             	mov    %esi,-0x34(%ebp)$/;"	l
f0102ec9	obj/kern/kernel.asm	/^f0102ec9:	8d 86 00 00 00 10    	lea    0x10000000(%esi),%eax$/;"	l
f0102ecf	obj/kern/kernel.asm	/^f0102ecf:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f0102ed2	obj/kern/kernel.asm	/^f0102ed2:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0102ed7	obj/kern/kernel.asm	/^f0102ed7:	eb 6a                	jmp    f0102f43 <mem_init+0x19e0>$/;"	l
f0102ed9	obj/kern/kernel.asm	/^f0102ed9:	8d 93 00 00 00 ef    	lea    -0x11000000(%ebx),%edx$/;"	l
f0102edf	obj/kern/kernel.asm	/^f0102edf:	89 f8                	mov    %edi,%eax$/;"	l
f0102ee1	obj/kern/kernel.asm	/^f0102ee1:	e8 ef dc ff ff       	call   f0100bd5 <check_va2pa>$/;"	l
f0102ee6	obj/kern/kernel.asm	/^f0102ee6:	81 7d cc ff ff ff ef 	cmpl   $0xefffffff,-0x34(%ebp)$/;"	l
f0102eed	obj/kern/kernel.asm	/^f0102eed:	77 20                	ja     f0102f0f <mem_init+0x19ac>$/;"	l
f0102eef	obj/kern/kernel.asm	/^f0102eef:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f0102ef3	obj/kern/kernel.asm	/^f0102ef3:	c7 44 24 08 c8 80 10 	movl   $0xf01080c8,0x8(%esp)$/;"	l
f0102efa	obj/kern/kernel.asm	/^f0102efa:	f0 $/;"	l
f0102efb	obj/kern/kernel.asm	/^f0102efb:	c7 44 24 04 43 03 00 	movl   $0x343,0x4(%esp)$/;"	l
f0102f02	obj/kern/kernel.asm	/^f0102f02:	00 $/;"	l
f0102f03	obj/kern/kernel.asm	/^f0102f03:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0102f0a	obj/kern/kernel.asm	/^f0102f0a:	e8 31 d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102f0f	obj/kern/kernel.asm	/^f0102f0f:	8b 4d c8             	mov    -0x38(%ebp),%ecx$/;"	l
f0102f12	obj/kern/kernel.asm	/^f0102f12:	8d 14 0b             	lea    (%ebx,%ecx,1),%edx$/;"	l
f0102f15	obj/kern/kernel.asm	/^f0102f15:	39 d0                	cmp    %edx,%eax$/;"	l
f0102f17	obj/kern/kernel.asm	/^f0102f17:	74 24                	je     f0102f3d <mem_init+0x19da>$/;"	l
f0102f19	obj/kern/kernel.asm	/^f0102f19:	c7 44 24 0c 0c 8e 10 	movl   $0xf0108e0c,0xc(%esp)$/;"	l
f0102f20	obj/kern/kernel.asm	/^f0102f20:	f0 $/;"	l
f0102f21	obj/kern/kernel.asm	/^f0102f21:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0102f28	obj/kern/kernel.asm	/^f0102f28:	f0 $/;"	l
f0102f29	obj/kern/kernel.asm	/^f0102f29:	c7 44 24 04 43 03 00 	movl   $0x343,0x4(%esp)$/;"	l
f0102f30	obj/kern/kernel.asm	/^f0102f30:	00 $/;"	l
f0102f31	obj/kern/kernel.asm	/^f0102f31:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0102f38	obj/kern/kernel.asm	/^f0102f38:	e8 03 d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102f3d	obj/kern/kernel.asm	/^f0102f3d:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102f43	obj/kern/kernel.asm	/^f0102f43:	39 5d d0             	cmp    %ebx,-0x30(%ebp)$/;"	l
f0102f46	obj/kern/kernel.asm	/^f0102f46:	77 91                	ja     f0102ed9 <mem_init+0x1976>$/;"	l
f0102f48	obj/kern/kernel.asm	/^f0102f48:	8b 1d 48 92 2b f0    	mov    0xf02b9248,%ebx$/;"	l
f0102f4e	obj/kern/kernel.asm	/^f0102f4e:	89 de                	mov    %ebx,%esi$/;"	l
f0102f50	obj/kern/kernel.asm	/^f0102f50:	ba 00 00 c0 ee       	mov    $0xeec00000,%edx$/;"	l
f0102f55	obj/kern/kernel.asm	/^f0102f55:	89 f8                	mov    %edi,%eax$/;"	l
f0102f57	obj/kern/kernel.asm	/^f0102f57:	e8 79 dc ff ff       	call   f0100bd5 <check_va2pa>$/;"	l
f0102f5c	obj/kern/kernel.asm	/^f0102f5c:	81 fb ff ff ff ef    	cmp    $0xefffffff,%ebx$/;"	l
f0102f62	obj/kern/kernel.asm	/^f0102f62:	77 20                	ja     f0102f84 <mem_init+0x1a21>$/;"	l
f0102f64	obj/kern/kernel.asm	/^f0102f64:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f0102f68	obj/kern/kernel.asm	/^f0102f68:	c7 44 24 08 c8 80 10 	movl   $0xf01080c8,0x8(%esp)$/;"	l
f0102f6f	obj/kern/kernel.asm	/^f0102f6f:	f0 $/;"	l
f0102f70	obj/kern/kernel.asm	/^f0102f70:	c7 44 24 04 48 03 00 	movl   $0x348,0x4(%esp)$/;"	l
f0102f77	obj/kern/kernel.asm	/^f0102f77:	00 $/;"	l
f0102f78	obj/kern/kernel.asm	/^f0102f78:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0102f7f	obj/kern/kernel.asm	/^f0102f7f:	e8 bc d0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102f84	obj/kern/kernel.asm	/^f0102f84:	bb 00 00 c0 ee       	mov    $0xeec00000,%ebx$/;"	l
f0102f89	obj/kern/kernel.asm	/^f0102f89:	81 c6 00 00 40 21    	add    $0x21400000,%esi$/;"	l
f0102f8f	obj/kern/kernel.asm	/^f0102f8f:	8d 14 1e             	lea    (%esi,%ebx,1),%edx$/;"	l
f0102f92	obj/kern/kernel.asm	/^f0102f92:	39 d0                	cmp    %edx,%eax$/;"	l
f0102f94	obj/kern/kernel.asm	/^f0102f94:	74 24                	je     f0102fba <mem_init+0x1a57>$/;"	l
f0102f96	obj/kern/kernel.asm	/^f0102f96:	c7 44 24 0c 40 8e 10 	movl   $0xf0108e40,0xc(%esp)$/;"	l
f0102f9d	obj/kern/kernel.asm	/^f0102f9d:	f0 $/;"	l
f0102f9e	obj/kern/kernel.asm	/^f0102f9e:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0102fa5	obj/kern/kernel.asm	/^f0102fa5:	f0 $/;"	l
f0102fa6	obj/kern/kernel.asm	/^f0102fa6:	c7 44 24 04 48 03 00 	movl   $0x348,0x4(%esp)$/;"	l
f0102fad	obj/kern/kernel.asm	/^f0102fad:	00 $/;"	l
f0102fae	obj/kern/kernel.asm	/^f0102fae:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0102fb5	obj/kern/kernel.asm	/^f0102fb5:	e8 86 d0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102fba	obj/kern/kernel.asm	/^f0102fba:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102fc0	obj/kern/kernel.asm	/^f0102fc0:	81 fb 00 f0 c1 ee    	cmp    $0xeec1f000,%ebx$/;"	l
f0102fc6	obj/kern/kernel.asm	/^f0102fc6:	0f 85 a9 05 00 00    	jne    f0103575 <mem_init+0x2012>$/;"	l
f0102fcc	obj/kern/kernel.asm	/^f0102fcc:	8b 75 d4             	mov    -0x2c(%ebp),%esi$/;"	l
f0102fcf	obj/kern/kernel.asm	/^f0102fcf:	c1 e6 0c             	shl    $0xc,%esi$/;"	l
f0102fd2	obj/kern/kernel.asm	/^f0102fd2:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0102fd7	obj/kern/kernel.asm	/^f0102fd7:	eb 3b                	jmp    f0103014 <mem_init+0x1ab1>$/;"	l
f0102fd9	obj/kern/kernel.asm	/^f0102fd9:	8d 93 00 00 00 f0    	lea    -0x10000000(%ebx),%edx$/;"	l
f0102fdf	obj/kern/kernel.asm	/^f0102fdf:	89 f8                	mov    %edi,%eax$/;"	l
f0102fe1	obj/kern/kernel.asm	/^f0102fe1:	e8 ef db ff ff       	call   f0100bd5 <check_va2pa>$/;"	l
f0102fe6	obj/kern/kernel.asm	/^f0102fe6:	39 c3                	cmp    %eax,%ebx$/;"	l
f0102fe8	obj/kern/kernel.asm	/^f0102fe8:	74 24                	je     f010300e <mem_init+0x1aab>$/;"	l
f0102fea	obj/kern/kernel.asm	/^f0102fea:	c7 44 24 0c 74 8e 10 	movl   $0xf0108e74,0xc(%esp)$/;"	l
f0102ff1	obj/kern/kernel.asm	/^f0102ff1:	f0 $/;"	l
f0102ff2	obj/kern/kernel.asm	/^f0102ff2:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0102ff9	obj/kern/kernel.asm	/^f0102ff9:	f0 $/;"	l
f0102ffa	obj/kern/kernel.asm	/^f0102ffa:	c7 44 24 04 4c 03 00 	movl   $0x34c,0x4(%esp)$/;"	l
f0103001	obj/kern/kernel.asm	/^f0103001:	00 $/;"	l
f0103002	obj/kern/kernel.asm	/^f0103002:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0103009	obj/kern/kernel.asm	/^f0103009:	e8 32 d0 ff ff       	call   f0100040 <_panic>$/;"	l
f010300e	obj/kern/kernel.asm	/^f010300e:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0103014	obj/kern/kernel.asm	/^f0103014:	39 f3                	cmp    %esi,%ebx$/;"	l
f0103016	obj/kern/kernel.asm	/^f0103016:	72 c1                	jb     f0102fd9 <mem_init+0x1a76>$/;"	l
f0103018	obj/kern/kernel.asm	/^f0103018:	c7 45 d0 00 b0 2b f0 	movl   $0xf02bb000,-0x30(%ebp)$/;"	l
f010301f	obj/kern/kernel.asm	/^f010301f:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)$/;"	l
f0103026	obj/kern/kernel.asm	/^f0103026:	be 00 80 ff ef       	mov    $0xefff8000,%esi$/;"	l
f010302b	obj/kern/kernel.asm	/^f010302b:	b8 00 b0 2b f0       	mov    $0xf02bb000,%eax$/;"	l
f0103030	obj/kern/kernel.asm	/^f0103030:	05 00 80 00 20       	add    $0x20008000,%eax$/;"	l
f0103035	obj/kern/kernel.asm	/^f0103035:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f0103038	obj/kern/kernel.asm	/^f0103038:	8d 86 00 80 00 00    	lea    0x8000(%esi),%eax$/;"	l
f010303e	obj/kern/kernel.asm	/^f010303e:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0103041	obj/kern/kernel.asm	/^f0103041:	89 f2                	mov    %esi,%edx$/;"	l
f0103043	obj/kern/kernel.asm	/^f0103043:	89 f8                	mov    %edi,%eax$/;"	l
f0103045	obj/kern/kernel.asm	/^f0103045:	e8 8b db ff ff       	call   f0100bd5 <check_va2pa>$/;"	l
f010304a	obj/kern/kernel.asm	/^f010304a:	8b 4d d0             	mov    -0x30(%ebp),%ecx$/;"	l
f010304d	obj/kern/kernel.asm	/^f010304d:	81 f9 ff ff ff ef    	cmp    $0xefffffff,%ecx$/;"	l
f0103053	obj/kern/kernel.asm	/^f0103053:	77 20                	ja     f0103075 <mem_init+0x1b12>$/;"	l
f0103055	obj/kern/kernel.asm	/^f0103055:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f0103059	obj/kern/kernel.asm	/^f0103059:	c7 44 24 08 c8 80 10 	movl   $0xf01080c8,0x8(%esp)$/;"	l
f0103060	obj/kern/kernel.asm	/^f0103060:	f0 $/;"	l
f0103061	obj/kern/kernel.asm	/^f0103061:	c7 44 24 04 54 03 00 	movl   $0x354,0x4(%esp)$/;"	l
f0103068	obj/kern/kernel.asm	/^f0103068:	00 $/;"	l
f0103069	obj/kern/kernel.asm	/^f0103069:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0103070	obj/kern/kernel.asm	/^f0103070:	e8 cb cf ff ff       	call   f0100040 <_panic>$/;"	l
f0103075	obj/kern/kernel.asm	/^f0103075:	89 f3                	mov    %esi,%ebx$/;"	l
f0103077	obj/kern/kernel.asm	/^f0103077:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
f010307a	obj/kern/kernel.asm	/^f010307a:	03 4d d4             	add    -0x2c(%ebp),%ecx$/;"	l
f010307d	obj/kern/kernel.asm	/^f010307d:	89 4d c8             	mov    %ecx,-0x38(%ebp)$/;"	l
f0103080	obj/kern/kernel.asm	/^f0103080:	8b 4d c8             	mov    -0x38(%ebp),%ecx$/;"	l
f0103083	obj/kern/kernel.asm	/^f0103083:	8d 14 19             	lea    (%ecx,%ebx,1),%edx$/;"	l
f0103086	obj/kern/kernel.asm	/^f0103086:	39 c2                	cmp    %eax,%edx$/;"	l
f0103088	obj/kern/kernel.asm	/^f0103088:	74 24                	je     f01030ae <mem_init+0x1b4b>$/;"	l
f010308a	obj/kern/kernel.asm	/^f010308a:	c7 44 24 0c 9c 8e 10 	movl   $0xf0108e9c,0xc(%esp)$/;"	l
f0103091	obj/kern/kernel.asm	/^f0103091:	f0 $/;"	l
f0103092	obj/kern/kernel.asm	/^f0103092:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0103099	obj/kern/kernel.asm	/^f0103099:	f0 $/;"	l
f010309a	obj/kern/kernel.asm	/^f010309a:	c7 44 24 04 54 03 00 	movl   $0x354,0x4(%esp)$/;"	l
f01030a1	obj/kern/kernel.asm	/^f01030a1:	00 $/;"	l
f01030a2	obj/kern/kernel.asm	/^f01030a2:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f01030a9	obj/kern/kernel.asm	/^f01030a9:	e8 92 cf ff ff       	call   f0100040 <_panic>$/;"	l
f01030ae	obj/kern/kernel.asm	/^f01030ae:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f01030b4	obj/kern/kernel.asm	/^f01030b4:	3b 5d cc             	cmp    -0x34(%ebp),%ebx$/;"	l
f01030b7	obj/kern/kernel.asm	/^f01030b7:	0f 85 a9 04 00 00    	jne    f0103566 <mem_init+0x2003>$/;"	l
f01030bd	obj/kern/kernel.asm	/^f01030bd:	8d 9e 00 80 ff ff    	lea    -0x8000(%esi),%ebx$/;"	l
f01030c3	obj/kern/kernel.asm	/^f01030c3:	89 da                	mov    %ebx,%edx$/;"	l
f01030c5	obj/kern/kernel.asm	/^f01030c5:	89 f8                	mov    %edi,%eax$/;"	l
f01030c7	obj/kern/kernel.asm	/^f01030c7:	e8 09 db ff ff       	call   f0100bd5 <check_va2pa>$/;"	l
f01030cc	obj/kern/kernel.asm	/^f01030cc:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f01030cf	obj/kern/kernel.asm	/^f01030cf:	74 24                	je     f01030f5 <mem_init+0x1b92>$/;"	l
f01030d1	obj/kern/kernel.asm	/^f01030d1:	c7 44 24 0c e4 8e 10 	movl   $0xf0108ee4,0xc(%esp)$/;"	l
f01030d8	obj/kern/kernel.asm	/^f01030d8:	f0 $/;"	l
f01030d9	obj/kern/kernel.asm	/^f01030d9:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f01030e0	obj/kern/kernel.asm	/^f01030e0:	f0 $/;"	l
f01030e1	obj/kern/kernel.asm	/^f01030e1:	c7 44 24 04 56 03 00 	movl   $0x356,0x4(%esp)$/;"	l
f01030e8	obj/kern/kernel.asm	/^f01030e8:	00 $/;"	l
f01030e9	obj/kern/kernel.asm	/^f01030e9:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f01030f0	obj/kern/kernel.asm	/^f01030f0:	e8 4b cf ff ff       	call   f0100040 <_panic>$/;"	l
f01030f5	obj/kern/kernel.asm	/^f01030f5:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f01030fb	obj/kern/kernel.asm	/^f01030fb:	39 de                	cmp    %ebx,%esi$/;"	l
f01030fd	obj/kern/kernel.asm	/^f01030fd:	75 c4                	jne    f01030c3 <mem_init+0x1b60>$/;"	l
f01030ff	obj/kern/kernel.asm	/^f01030ff:	81 ee 00 00 01 00    	sub    $0x10000,%esi$/;"	l
f0103105	obj/kern/kernel.asm	/^f0103105:	81 45 d4 00 80 01 00 	addl   $0x18000,-0x2c(%ebp)$/;"	l
f010310c	obj/kern/kernel.asm	/^f010310c:	81 45 d0 00 80 00 00 	addl   $0x8000,-0x30(%ebp)$/;"	l
f0103113	obj/kern/kernel.asm	/^f0103113:	81 fe 00 80 f7 ef    	cmp    $0xeff78000,%esi$/;"	l
f0103119	obj/kern/kernel.asm	/^f0103119:	0f 85 19 ff ff ff    	jne    f0103038 <mem_init+0x1ad5>$/;"	l
f010311f	obj/kern/kernel.asm	/^f010311f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103124	obj/kern/kernel.asm	/^f0103124:	e9 c2 00 00 00       	jmp    f01031eb <mem_init+0x1c88>$/;"	l
f0103129	obj/kern/kernel.asm	/^f0103129:	8d 90 45 fc ff ff    	lea    -0x3bb(%eax),%edx$/;"	l
f010312f	obj/kern/kernel.asm	/^f010312f:	83 fa 04             	cmp    $0x4,%edx$/;"	l
f0103132	obj/kern/kernel.asm	/^f0103132:	77 2e                	ja     f0103162 <mem_init+0x1bff>$/;"	l
f0103134	obj/kern/kernel.asm	/^f0103134:	f6 04 87 01          	testb  $0x1,(%edi,%eax,4)$/;"	l
f0103138	obj/kern/kernel.asm	/^f0103138:	0f 85 aa 00 00 00    	jne    f01031e8 <mem_init+0x1c85>$/;"	l
f010313e	obj/kern/kernel.asm	/^f010313e:	c7 44 24 0c fd 92 10 	movl   $0xf01092fd,0xc(%esp)$/;"	l
f0103145	obj/kern/kernel.asm	/^f0103145:	f0 $/;"	l
f0103146	obj/kern/kernel.asm	/^f0103146:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f010314d	obj/kern/kernel.asm	/^f010314d:	f0 $/;"	l
f010314e	obj/kern/kernel.asm	/^f010314e:	c7 44 24 04 61 03 00 	movl   $0x361,0x4(%esp)$/;"	l
f0103155	obj/kern/kernel.asm	/^f0103155:	00 $/;"	l
f0103156	obj/kern/kernel.asm	/^f0103156:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f010315d	obj/kern/kernel.asm	/^f010315d:	e8 de ce ff ff       	call   f0100040 <_panic>$/;"	l
f0103162	obj/kern/kernel.asm	/^f0103162:	3d bf 03 00 00       	cmp    $0x3bf,%eax$/;"	l
f0103167	obj/kern/kernel.asm	/^f0103167:	76 55                	jbe    f01031be <mem_init+0x1c5b>$/;"	l
f0103169	obj/kern/kernel.asm	/^f0103169:	8b 14 87             	mov    (%edi,%eax,4),%edx$/;"	l
f010316c	obj/kern/kernel.asm	/^f010316c:	f6 c2 01             	test   $0x1,%dl$/;"	l
f010316f	obj/kern/kernel.asm	/^f010316f:	75 24                	jne    f0103195 <mem_init+0x1c32>$/;"	l
f0103171	obj/kern/kernel.asm	/^f0103171:	c7 44 24 0c fd 92 10 	movl   $0xf01092fd,0xc(%esp)$/;"	l
f0103178	obj/kern/kernel.asm	/^f0103178:	f0 $/;"	l
f0103179	obj/kern/kernel.asm	/^f0103179:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0103180	obj/kern/kernel.asm	/^f0103180:	f0 $/;"	l
f0103181	obj/kern/kernel.asm	/^f0103181:	c7 44 24 04 65 03 00 	movl   $0x365,0x4(%esp)$/;"	l
f0103188	obj/kern/kernel.asm	/^f0103188:	00 $/;"	l
f0103189	obj/kern/kernel.asm	/^f0103189:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0103190	obj/kern/kernel.asm	/^f0103190:	e8 ab ce ff ff       	call   f0100040 <_panic>$/;"	l
f0103195	obj/kern/kernel.asm	/^f0103195:	f6 c2 02             	test   $0x2,%dl$/;"	l
f0103198	obj/kern/kernel.asm	/^f0103198:	75 4e                	jne    f01031e8 <mem_init+0x1c85>$/;"	l
f010319a	obj/kern/kernel.asm	/^f010319a:	c7 44 24 0c 0e 93 10 	movl   $0xf010930e,0xc(%esp)$/;"	l
f01031a1	obj/kern/kernel.asm	/^f01031a1:	f0 $/;"	l
f01031a2	obj/kern/kernel.asm	/^f01031a2:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f01031a9	obj/kern/kernel.asm	/^f01031a9:	f0 $/;"	l
f01031aa	obj/kern/kernel.asm	/^f01031aa:	c7 44 24 04 66 03 00 	movl   $0x366,0x4(%esp)$/;"	l
f01031b1	obj/kern/kernel.asm	/^f01031b1:	00 $/;"	l
f01031b2	obj/kern/kernel.asm	/^f01031b2:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f01031b9	obj/kern/kernel.asm	/^f01031b9:	e8 82 ce ff ff       	call   f0100040 <_panic>$/;"	l
f01031be	obj/kern/kernel.asm	/^f01031be:	83 3c 87 00          	cmpl   $0x0,(%edi,%eax,4)$/;"	l
f01031c2	obj/kern/kernel.asm	/^f01031c2:	74 24                	je     f01031e8 <mem_init+0x1c85>$/;"	l
f01031c4	obj/kern/kernel.asm	/^f01031c4:	c7 44 24 0c 1f 93 10 	movl   $0xf010931f,0xc(%esp)$/;"	l
f01031cb	obj/kern/kernel.asm	/^f01031cb:	f0 $/;"	l
f01031cc	obj/kern/kernel.asm	/^f01031cc:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f01031d3	obj/kern/kernel.asm	/^f01031d3:	f0 $/;"	l
f01031d4	obj/kern/kernel.asm	/^f01031d4:	c7 44 24 04 68 03 00 	movl   $0x368,0x4(%esp)$/;"	l
f01031db	obj/kern/kernel.asm	/^f01031db:	00 $/;"	l
f01031dc	obj/kern/kernel.asm	/^f01031dc:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f01031e3	obj/kern/kernel.asm	/^f01031e3:	e8 58 ce ff ff       	call   f0100040 <_panic>$/;"	l
f01031e8	obj/kern/kernel.asm	/^f01031e8:	83 c0 01             	add    $0x1,%eax$/;"	l
f01031eb	obj/kern/kernel.asm	/^f01031eb:	3d 00 04 00 00       	cmp    $0x400,%eax$/;"	l
f01031f0	obj/kern/kernel.asm	/^f01031f0:	0f 85 33 ff ff ff    	jne    f0103129 <mem_init+0x1bc6>$/;"	l
f01031f6	obj/kern/kernel.asm	/^f01031f6:	c7 04 24 08 8f 10 f0 	movl   $0xf0108f08,(%esp)$/;"	l
f01031fd	obj/kern/kernel.asm	/^f01031fd:	e8 ca 0d 00 00       	call   f0103fcc <cprintf>$/;"	l
f0103202	obj/kern/kernel.asm	/^f0103202:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f0103207	obj/kern/kernel.asm	/^f0103207:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010320c	obj/kern/kernel.asm	/^f010320c:	77 20                	ja     f010322e <mem_init+0x1ccb>$/;"	l
f010320e	obj/kern/kernel.asm	/^f010320e:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103212	obj/kern/kernel.asm	/^f0103212:	c7 44 24 08 c8 80 10 	movl   $0xf01080c8,0x8(%esp)$/;"	l
f0103219	obj/kern/kernel.asm	/^f0103219:	f0 $/;"	l
f010321a	obj/kern/kernel.asm	/^f010321a:	c7 44 24 04 ec 00 00 	movl   $0xec,0x4(%esp)$/;"	l
f0103221	obj/kern/kernel.asm	/^f0103221:	00 $/;"	l
f0103222	obj/kern/kernel.asm	/^f0103222:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0103229	obj/kern/kernel.asm	/^f0103229:	e8 12 ce ff ff       	call   f0100040 <_panic>$/;"	l
f010322e	obj/kern/kernel.asm	/^f010322e:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103233	obj/kern/kernel.asm	/^f0103233:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103236	obj/kern/kernel.asm	/^f0103236:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010323b	obj/kern/kernel.asm	/^f010323b:	e8 a3 da ff ff       	call   f0100ce3 <check_page_free_list>$/;"	l
f0103240	obj/kern/kernel.asm	/^f0103240:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0103243	obj/kern/kernel.asm	/^f0103243:	83 e0 f3             	and    $0xfffffff3,%eax$/;"	l
f0103246	obj/kern/kernel.asm	/^f0103246:	0d 23 00 05 80       	or     $0x80050023,%eax$/;"	l
f010324b	obj/kern/kernel.asm	/^f010324b:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f010324e	obj/kern/kernel.asm	/^f010324e:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0103255	obj/kern/kernel.asm	/^f0103255:	e8 c1 de ff ff       	call   f010111b <page_alloc>$/;"	l
f010325a	obj/kern/kernel.asm	/^f010325a:	89 c3                	mov    %eax,%ebx$/;"	l
f010325c	obj/kern/kernel.asm	/^f010325c:	85 c0                	test   %eax,%eax$/;"	l
f010325e	obj/kern/kernel.asm	/^f010325e:	75 24                	jne    f0103284 <mem_init+0x1d21>$/;"	l
f0103260	obj/kern/kernel.asm	/^f0103260:	c7 44 24 0c 09 91 10 	movl   $0xf0109109,0xc(%esp)$/;"	l
f0103267	obj/kern/kernel.asm	/^f0103267:	f0 $/;"	l
f0103268	obj/kern/kernel.asm	/^f0103268:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f010326f	obj/kern/kernel.asm	/^f010326f:	f0 $/;"	l
f0103270	obj/kern/kernel.asm	/^f0103270:	c7 44 24 04 40 04 00 	movl   $0x440,0x4(%esp)$/;"	l
f0103277	obj/kern/kernel.asm	/^f0103277:	00 $/;"	l
f0103278	obj/kern/kernel.asm	/^f0103278:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f010327f	obj/kern/kernel.asm	/^f010327f:	e8 bc cd ff ff       	call   f0100040 <_panic>$/;"	l
f0103284	obj/kern/kernel.asm	/^f0103284:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010328b	obj/kern/kernel.asm	/^f010328b:	e8 8b de ff ff       	call   f010111b <page_alloc>$/;"	l
f0103290	obj/kern/kernel.asm	/^f0103290:	89 c7                	mov    %eax,%edi$/;"	l
f0103292	obj/kern/kernel.asm	/^f0103292:	85 c0                	test   %eax,%eax$/;"	l
f0103294	obj/kern/kernel.asm	/^f0103294:	75 24                	jne    f01032ba <mem_init+0x1d57>$/;"	l
f0103296	obj/kern/kernel.asm	/^f0103296:	c7 44 24 0c 1f 91 10 	movl   $0xf010911f,0xc(%esp)$/;"	l
f010329d	obj/kern/kernel.asm	/^f010329d:	f0 $/;"	l
f010329e	obj/kern/kernel.asm	/^f010329e:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f01032a5	obj/kern/kernel.asm	/^f01032a5:	f0 $/;"	l
f01032a6	obj/kern/kernel.asm	/^f01032a6:	c7 44 24 04 41 04 00 	movl   $0x441,0x4(%esp)$/;"	l
f01032ad	obj/kern/kernel.asm	/^f01032ad:	00 $/;"	l
f01032ae	obj/kern/kernel.asm	/^f01032ae:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f01032b5	obj/kern/kernel.asm	/^f01032b5:	e8 86 cd ff ff       	call   f0100040 <_panic>$/;"	l
f01032ba	obj/kern/kernel.asm	/^f01032ba:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01032c1	obj/kern/kernel.asm	/^f01032c1:	e8 55 de ff ff       	call   f010111b <page_alloc>$/;"	l
f01032c6	obj/kern/kernel.asm	/^f01032c6:	89 c6                	mov    %eax,%esi$/;"	l
f01032c8	obj/kern/kernel.asm	/^f01032c8:	85 c0                	test   %eax,%eax$/;"	l
f01032ca	obj/kern/kernel.asm	/^f01032ca:	75 24                	jne    f01032f0 <mem_init+0x1d8d>$/;"	l
f01032cc	obj/kern/kernel.asm	/^f01032cc:	c7 44 24 0c 35 91 10 	movl   $0xf0109135,0xc(%esp)$/;"	l
f01032d3	obj/kern/kernel.asm	/^f01032d3:	f0 $/;"	l
f01032d4	obj/kern/kernel.asm	/^f01032d4:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f01032db	obj/kern/kernel.asm	/^f01032db:	f0 $/;"	l
f01032dc	obj/kern/kernel.asm	/^f01032dc:	c7 44 24 04 42 04 00 	movl   $0x442,0x4(%esp)$/;"	l
f01032e3	obj/kern/kernel.asm	/^f01032e3:	00 $/;"	l
f01032e4	obj/kern/kernel.asm	/^f01032e4:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f01032eb	obj/kern/kernel.asm	/^f01032eb:	e8 50 cd ff ff       	call   f0100040 <_panic>$/;"	l
f01032f0	obj/kern/kernel.asm	/^f01032f0:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01032f3	obj/kern/kernel.asm	/^f01032f3:	e8 b3 de ff ff       	call   f01011ab <page_free>$/;"	l
f01032f8	obj/kern/kernel.asm	/^f01032f8:	89 f8                	mov    %edi,%eax$/;"	l
f01032fa	obj/kern/kernel.asm	/^f01032fa:	e8 91 d8 ff ff       	call   f0100b90 <page2kva>$/;"	l
f01032ff	obj/kern/kernel.asm	/^f01032ff:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0103306	obj/kern/kernel.asm	/^f0103306:	00 $/;"	l
f0103307	obj/kern/kernel.asm	/^f0103307:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
f010330e	obj/kern/kernel.asm	/^f010330e:	00 $/;"	l
f010330f	obj/kern/kernel.asm	/^f010330f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103312	obj/kern/kernel.asm	/^f0103312:	e8 80 32 00 00       	call   f0106597 <memset>$/;"	l
f0103317	obj/kern/kernel.asm	/^f0103317:	89 f0                	mov    %esi,%eax$/;"	l
f0103319	obj/kern/kernel.asm	/^f0103319:	e8 72 d8 ff ff       	call   f0100b90 <page2kva>$/;"	l
f010331e	obj/kern/kernel.asm	/^f010331e:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0103325	obj/kern/kernel.asm	/^f0103325:	00 $/;"	l
f0103326	obj/kern/kernel.asm	/^f0103326:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
f010332d	obj/kern/kernel.asm	/^f010332d:	00 $/;"	l
f010332e	obj/kern/kernel.asm	/^f010332e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103331	obj/kern/kernel.asm	/^f0103331:	e8 61 32 00 00       	call   f0106597 <memset>$/;"	l
f0103336	obj/kern/kernel.asm	/^f0103336:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f010333d	obj/kern/kernel.asm	/^f010333d:	00 $/;"	l
f010333e	obj/kern/kernel.asm	/^f010333e:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0103345	obj/kern/kernel.asm	/^f0103345:	00 $/;"	l
f0103346	obj/kern/kernel.asm	/^f0103346:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f010334a	obj/kern/kernel.asm	/^f010334a:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f010334f	obj/kern/kernel.asm	/^f010334f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103352	obj/kern/kernel.asm	/^f0103352:	e8 04 e1 ff ff       	call   f010145b <page_insert>$/;"	l
f0103357	obj/kern/kernel.asm	/^f0103357:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
f010335c	obj/kern/kernel.asm	/^f010335c:	74 24                	je     f0103382 <mem_init+0x1e1f>$/;"	l
f010335e	obj/kern/kernel.asm	/^f010335e:	c7 44 24 0c 06 92 10 	movl   $0xf0109206,0xc(%esp)$/;"	l
f0103365	obj/kern/kernel.asm	/^f0103365:	f0 $/;"	l
f0103366	obj/kern/kernel.asm	/^f0103366:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f010336d	obj/kern/kernel.asm	/^f010336d:	f0 $/;"	l
f010336e	obj/kern/kernel.asm	/^f010336e:	c7 44 24 04 47 04 00 	movl   $0x447,0x4(%esp)$/;"	l
f0103375	obj/kern/kernel.asm	/^f0103375:	00 $/;"	l
f0103376	obj/kern/kernel.asm	/^f0103376:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f010337d	obj/kern/kernel.asm	/^f010337d:	e8 be cc ff ff       	call   f0100040 <_panic>$/;"	l
f0103382	obj/kern/kernel.asm	/^f0103382:	81 3d 00 10 00 00 01 	cmpl   $0x1010101,0x1000$/;"	l
f0103389	obj/kern/kernel.asm	/^f0103389:	01 01 01 $/;"	l
f010338c	obj/kern/kernel.asm	/^f010338c:	74 24                	je     f01033b2 <mem_init+0x1e4f>$/;"	l
f010338e	obj/kern/kernel.asm	/^f010338e:	c7 44 24 0c 28 8f 10 	movl   $0xf0108f28,0xc(%esp)$/;"	l
f0103395	obj/kern/kernel.asm	/^f0103395:	f0 $/;"	l
f0103396	obj/kern/kernel.asm	/^f0103396:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f010339d	obj/kern/kernel.asm	/^f010339d:	f0 $/;"	l
f010339e	obj/kern/kernel.asm	/^f010339e:	c7 44 24 04 48 04 00 	movl   $0x448,0x4(%esp)$/;"	l
f01033a5	obj/kern/kernel.asm	/^f01033a5:	00 $/;"	l
f01033a6	obj/kern/kernel.asm	/^f01033a6:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f01033ad	obj/kern/kernel.asm	/^f01033ad:	e8 8e cc ff ff       	call   f0100040 <_panic>$/;"	l
f01033b2	obj/kern/kernel.asm	/^f01033b2:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f01033b9	obj/kern/kernel.asm	/^f01033b9:	00 $/;"	l
f01033ba	obj/kern/kernel.asm	/^f01033ba:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01033c1	obj/kern/kernel.asm	/^f01033c1:	00 $/;"	l
f01033c2	obj/kern/kernel.asm	/^f01033c2:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f01033c6	obj/kern/kernel.asm	/^f01033c6:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f01033cb	obj/kern/kernel.asm	/^f01033cb:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01033ce	obj/kern/kernel.asm	/^f01033ce:	e8 88 e0 ff ff       	call   f010145b <page_insert>$/;"	l
f01033d3	obj/kern/kernel.asm	/^f01033d3:	81 3d 00 10 00 00 02 	cmpl   $0x2020202,0x1000$/;"	l
f01033da	obj/kern/kernel.asm	/^f01033da:	02 02 02 $/;"	l
f01033dd	obj/kern/kernel.asm	/^f01033dd:	74 24                	je     f0103403 <mem_init+0x1ea0>$/;"	l
f01033df	obj/kern/kernel.asm	/^f01033df:	c7 44 24 0c 4c 8f 10 	movl   $0xf0108f4c,0xc(%esp)$/;"	l
f01033e6	obj/kern/kernel.asm	/^f01033e6:	f0 $/;"	l
f01033e7	obj/kern/kernel.asm	/^f01033e7:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f01033ee	obj/kern/kernel.asm	/^f01033ee:	f0 $/;"	l
f01033ef	obj/kern/kernel.asm	/^f01033ef:	c7 44 24 04 4a 04 00 	movl   $0x44a,0x4(%esp)$/;"	l
f01033f6	obj/kern/kernel.asm	/^f01033f6:	00 $/;"	l
f01033f7	obj/kern/kernel.asm	/^f01033f7:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f01033fe	obj/kern/kernel.asm	/^f01033fe:	e8 3d cc ff ff       	call   f0100040 <_panic>$/;"	l
f0103403	obj/kern/kernel.asm	/^f0103403:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0103408	obj/kern/kernel.asm	/^f0103408:	74 24                	je     f010342e <mem_init+0x1ecb>$/;"	l
f010340a	obj/kern/kernel.asm	/^f010340a:	c7 44 24 0c 28 92 10 	movl   $0xf0109228,0xc(%esp)$/;"	l
f0103411	obj/kern/kernel.asm	/^f0103411:	f0 $/;"	l
f0103412	obj/kern/kernel.asm	/^f0103412:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0103419	obj/kern/kernel.asm	/^f0103419:	f0 $/;"	l
f010341a	obj/kern/kernel.asm	/^f010341a:	c7 44 24 04 4b 04 00 	movl   $0x44b,0x4(%esp)$/;"	l
f0103421	obj/kern/kernel.asm	/^f0103421:	00 $/;"	l
f0103422	obj/kern/kernel.asm	/^f0103422:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0103429	obj/kern/kernel.asm	/^f0103429:	e8 12 cc ff ff       	call   f0100040 <_panic>$/;"	l
f010342e	obj/kern/kernel.asm	/^f010342e:	66 83 7f 04 00       	cmpw   $0x0,0x4(%edi)$/;"	l
f0103433	obj/kern/kernel.asm	/^f0103433:	74 24                	je     f0103459 <mem_init+0x1ef6>$/;"	l
f0103435	obj/kern/kernel.asm	/^f0103435:	c7 44 24 0c 92 92 10 	movl   $0xf0109292,0xc(%esp)$/;"	l
f010343c	obj/kern/kernel.asm	/^f010343c:	f0 $/;"	l
f010343d	obj/kern/kernel.asm	/^f010343d:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0103444	obj/kern/kernel.asm	/^f0103444:	f0 $/;"	l
f0103445	obj/kern/kernel.asm	/^f0103445:	c7 44 24 04 4c 04 00 	movl   $0x44c,0x4(%esp)$/;"	l
f010344c	obj/kern/kernel.asm	/^f010344c:	00 $/;"	l
f010344d	obj/kern/kernel.asm	/^f010344d:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0103454	obj/kern/kernel.asm	/^f0103454:	e8 e7 cb ff ff       	call   f0100040 <_panic>$/;"	l
f0103459	obj/kern/kernel.asm	/^f0103459:	c7 05 00 10 00 00 03 	movl   $0x3030303,0x1000$/;"	l
f0103460	obj/kern/kernel.asm	/^f0103460:	03 03 03 $/;"	l
f0103463	obj/kern/kernel.asm	/^f0103463:	89 f0                	mov    %esi,%eax$/;"	l
f0103465	obj/kern/kernel.asm	/^f0103465:	e8 26 d7 ff ff       	call   f0100b90 <page2kva>$/;"	l
f010346a	obj/kern/kernel.asm	/^f010346a:	81 38 03 03 03 03    	cmpl   $0x3030303,(%eax)$/;"	l
f0103470	obj/kern/kernel.asm	/^f0103470:	74 24                	je     f0103496 <mem_init+0x1f33>$/;"	l
f0103472	obj/kern/kernel.asm	/^f0103472:	c7 44 24 0c 70 8f 10 	movl   $0xf0108f70,0xc(%esp)$/;"	l
f0103479	obj/kern/kernel.asm	/^f0103479:	f0 $/;"	l
f010347a	obj/kern/kernel.asm	/^f010347a:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0103481	obj/kern/kernel.asm	/^f0103481:	f0 $/;"	l
f0103482	obj/kern/kernel.asm	/^f0103482:	c7 44 24 04 4e 04 00 	movl   $0x44e,0x4(%esp)$/;"	l
f0103489	obj/kern/kernel.asm	/^f0103489:	00 $/;"	l
f010348a	obj/kern/kernel.asm	/^f010348a:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0103491	obj/kern/kernel.asm	/^f0103491:	e8 aa cb ff ff       	call   f0100040 <_panic>$/;"	l
f0103496	obj/kern/kernel.asm	/^f0103496:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f010349d	obj/kern/kernel.asm	/^f010349d:	00 $/;"	l
f010349e	obj/kern/kernel.asm	/^f010349e:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f01034a3	obj/kern/kernel.asm	/^f01034a3:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01034a6	obj/kern/kernel.asm	/^f01034a6:	e8 67 df ff ff       	call   f0101412 <page_remove>$/;"	l
f01034ab	obj/kern/kernel.asm	/^f01034ab:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f01034b0	obj/kern/kernel.asm	/^f01034b0:	74 24                	je     f01034d6 <mem_init+0x1f73>$/;"	l
f01034b2	obj/kern/kernel.asm	/^f01034b2:	c7 44 24 0c 60 92 10 	movl   $0xf0109260,0xc(%esp)$/;"	l
f01034b9	obj/kern/kernel.asm	/^f01034b9:	f0 $/;"	l
f01034ba	obj/kern/kernel.asm	/^f01034ba:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f01034c1	obj/kern/kernel.asm	/^f01034c1:	f0 $/;"	l
f01034c2	obj/kern/kernel.asm	/^f01034c2:	c7 44 24 04 50 04 00 	movl   $0x450,0x4(%esp)$/;"	l
f01034c9	obj/kern/kernel.asm	/^f01034c9:	00 $/;"	l
f01034ca	obj/kern/kernel.asm	/^f01034ca:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f01034d1	obj/kern/kernel.asm	/^f01034d1:	e8 6a cb ff ff       	call   f0100040 <_panic>$/;"	l
f01034d6	obj/kern/kernel.asm	/^f01034d6:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f01034db	obj/kern/kernel.asm	/^f01034db:	8b 08                	mov    (%eax),%ecx$/;"	l
f01034dd	obj/kern/kernel.asm	/^f01034dd:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f01034e3	obj/kern/kernel.asm	/^f01034e3:	89 da                	mov    %ebx,%edx$/;"	l
f01034e5	obj/kern/kernel.asm	/^f01034e5:	2b 15 9c 9e 2b f0    	sub    0xf02b9e9c,%edx$/;"	l
f01034eb	obj/kern/kernel.asm	/^f01034eb:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01034ee	obj/kern/kernel.asm	/^f01034ee:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01034f1	obj/kern/kernel.asm	/^f01034f1:	39 d1                	cmp    %edx,%ecx$/;"	l
f01034f3	obj/kern/kernel.asm	/^f01034f3:	74 24                	je     f0103519 <mem_init+0x1fb6>$/;"	l
f01034f5	obj/kern/kernel.asm	/^f01034f5:	c7 44 24 0c f8 88 10 	movl   $0xf01088f8,0xc(%esp)$/;"	l
f01034fc	obj/kern/kernel.asm	/^f01034fc:	f0 $/;"	l
f01034fd	obj/kern/kernel.asm	/^f01034fd:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0103504	obj/kern/kernel.asm	/^f0103504:	f0 $/;"	l
f0103505	obj/kern/kernel.asm	/^f0103505:	c7 44 24 04 53 04 00 	movl   $0x453,0x4(%esp)$/;"	l
f010350c	obj/kern/kernel.asm	/^f010350c:	00 $/;"	l
f010350d	obj/kern/kernel.asm	/^f010350d:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0103514	obj/kern/kernel.asm	/^f0103514:	e8 27 cb ff ff       	call   f0100040 <_panic>$/;"	l
f0103519	obj/kern/kernel.asm	/^f0103519:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f010351f	obj/kern/kernel.asm	/^f010351f:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0103524	obj/kern/kernel.asm	/^f0103524:	74 24                	je     f010354a <mem_init+0x1fe7>$/;"	l
f0103526	obj/kern/kernel.asm	/^f0103526:	c7 44 24 0c 17 92 10 	movl   $0xf0109217,0xc(%esp)$/;"	l
f010352d	obj/kern/kernel.asm	/^f010352d:	f0 $/;"	l
f010352e	obj/kern/kernel.asm	/^f010352e:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0103535	obj/kern/kernel.asm	/^f0103535:	f0 $/;"	l
f0103536	obj/kern/kernel.asm	/^f0103536:	c7 44 24 04 55 04 00 	movl   $0x455,0x4(%esp)$/;"	l
f010353d	obj/kern/kernel.asm	/^f010353d:	00 $/;"	l
f010353e	obj/kern/kernel.asm	/^f010353e:	c7 04 24 0b 90 10 f0 	movl   $0xf010900b,(%esp)$/;"	l
f0103545	obj/kern/kernel.asm	/^f0103545:	e8 f6 ca ff ff       	call   f0100040 <_panic>$/;"	l
f010354a	obj/kern/kernel.asm	/^f010354a:	66 c7 43 04 00 00    	movw   $0x0,0x4(%ebx)$/;"	l
f0103550	obj/kern/kernel.asm	/^f0103550:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103553	obj/kern/kernel.asm	/^f0103553:	e8 53 dc ff ff       	call   f01011ab <page_free>$/;"	l
f0103558	obj/kern/kernel.asm	/^f0103558:	c7 04 24 9c 8f 10 f0 	movl   $0xf0108f9c,(%esp)$/;"	l
f010355f	obj/kern/kernel.asm	/^f010355f:	e8 68 0a 00 00       	call   f0103fcc <cprintf>$/;"	l
f0103564	obj/kern/kernel.asm	/^f0103564:	eb 1f                	jmp    f0103585 <mem_init+0x2022>$/;"	l
f0103566	obj/kern/kernel.asm	/^f0103566:	89 da                	mov    %ebx,%edx$/;"	l
f0103568	obj/kern/kernel.asm	/^f0103568:	89 f8                	mov    %edi,%eax$/;"	l
f010356a	obj/kern/kernel.asm	/^f010356a:	e8 66 d6 ff ff       	call   f0100bd5 <check_va2pa>$/;"	l
f010356f	obj/kern/kernel.asm	/^f010356f:	90                   	nop$/;"	l
f0103570	obj/kern/kernel.asm	/^f0103570:	e9 0b fb ff ff       	jmp    f0103080 <mem_init+0x1b1d>$/;"	l
f0103575	obj/kern/kernel.asm	/^f0103575:	89 da                	mov    %ebx,%edx$/;"	l
f0103577	obj/kern/kernel.asm	/^f0103577:	89 f8                	mov    %edi,%eax$/;"	l
f0103579	obj/kern/kernel.asm	/^f0103579:	e8 57 d6 ff ff       	call   f0100bd5 <check_va2pa>$/;"	l
f010357e	obj/kern/kernel.asm	/^f010357e:	66 90                	xchg   %ax,%ax$/;"	l
f0103580	obj/kern/kernel.asm	/^f0103580:	e9 0a fa ff ff       	jmp    f0102f8f <mem_init+0x1a2c>$/;"	l
f0103585	obj/kern/kernel.asm	/^f0103585:	83 c4 4c             	add    $0x4c,%esp$/;"	l
f0103588	obj/kern/kernel.asm	/^f0103588:	5b                   	pop    %ebx$/;"	l
f0103589	obj/kern/kernel.asm	/^f0103589:	5e                   	pop    %esi$/;"	l
f010358a	obj/kern/kernel.asm	/^f010358a:	5f                   	pop    %edi$/;"	l
f010358b	obj/kern/kernel.asm	/^f010358b:	5d                   	pop    %ebp$/;"	l
f010358c	obj/kern/kernel.asm	/^f010358c:	c3                   	ret    $/;"	l
f010358d	obj/kern/kernel.asm	/^f010358d <user_mem_check>:$/;"	l
f010358d	obj/kern/kernel.asm	/^f010358d:	55                   	push   %ebp$/;"	l
f010358e	obj/kern/kernel.asm	/^f010358e:	89 e5                	mov    %esp,%ebp$/;"	l
f0103590	obj/kern/kernel.asm	/^f0103590:	57                   	push   %edi$/;"	l
f0103591	obj/kern/kernel.asm	/^f0103591:	56                   	push   %esi$/;"	l
f0103592	obj/kern/kernel.asm	/^f0103592:	53                   	push   %ebx$/;"	l
f0103593	obj/kern/kernel.asm	/^f0103593:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0103596	obj/kern/kernel.asm	/^f0103596:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0103599	obj/kern/kernel.asm	/^f0103599:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010359c	obj/kern/kernel.asm	/^f010359c:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01035a1	obj/kern/kernel.asm	/^f01035a1:	89 c3                	mov    %eax,%ebx$/;"	l
f01035a3	obj/kern/kernel.asm	/^f01035a3:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f01035a6	obj/kern/kernel.asm	/^f01035a6:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01035a9	obj/kern/kernel.asm	/^f01035a9:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f01035ac	obj/kern/kernel.asm	/^f01035ac:	8d 84 01 ff 0f 00 00 	lea    0xfff(%ecx,%eax,1),%eax$/;"	l
f01035b3	obj/kern/kernel.asm	/^f01035b3:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01035b8	obj/kern/kernel.asm	/^f01035b8:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01035bb	obj/kern/kernel.asm	/^f01035bb:	8b 75 14             	mov    0x14(%ebp),%esi$/;"	l
f01035be	obj/kern/kernel.asm	/^f01035be:	83 ce 01             	or     $0x1,%esi$/;"	l
f01035c1	obj/kern/kernel.asm	/^f01035c1:	eb 31                	jmp    f01035f4 <user_mem_check+0x67>$/;"	l
f01035c3	obj/kern/kernel.asm	/^f01035c3:	81 fb 00 00 80 ef    	cmp    $0xef800000,%ebx$/;"	l
f01035c9	obj/kern/kernel.asm	/^f01035c9:	77 35                	ja     f0103600 <user_mem_check+0x73>$/;"	l
f01035cb	obj/kern/kernel.asm	/^f01035cb:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f01035d2	obj/kern/kernel.asm	/^f01035d2:	00 $/;"	l
f01035d3	obj/kern/kernel.asm	/^f01035d3:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01035d7	obj/kern/kernel.asm	/^f01035d7:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f01035da	obj/kern/kernel.asm	/^f01035da:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01035dd	obj/kern/kernel.asm	/^f01035dd:	e8 48 dc ff ff       	call   f010122a <pgdir_walk>$/;"	l
f01035e2	obj/kern/kernel.asm	/^f01035e2:	85 c0                	test   %eax,%eax$/;"	l
f01035e4	obj/kern/kernel.asm	/^f01035e4:	74 1e                	je     f0103604 <user_mem_check+0x77>$/;"	l
f01035e6	obj/kern/kernel.asm	/^f01035e6:	89 f2                	mov    %esi,%edx$/;"	l
f01035e8	obj/kern/kernel.asm	/^f01035e8:	23 10                	and    (%eax),%edx$/;"	l
f01035ea	obj/kern/kernel.asm	/^f01035ea:	39 d6                	cmp    %edx,%esi$/;"	l
f01035ec	obj/kern/kernel.asm	/^f01035ec:	75 1a                	jne    f0103608 <user_mem_check+0x7b>$/;"	l
f01035ee	obj/kern/kernel.asm	/^f01035ee:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f01035f4	obj/kern/kernel.asm	/^f01035f4:	3b 5d e4             	cmp    -0x1c(%ebp),%ebx$/;"	l
f01035f7	obj/kern/kernel.asm	/^f01035f7:	72 ca                	jb     f01035c3 <user_mem_check+0x36>$/;"	l
f01035f9	obj/kern/kernel.asm	/^f01035f9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01035fe	obj/kern/kernel.asm	/^f01035fe:	eb 1c                	jmp    f010361c <user_mem_check+0x8f>$/;"	l
f0103600	obj/kern/kernel.asm	/^f0103600:	89 d8                	mov    %ebx,%eax$/;"	l
f0103602	obj/kern/kernel.asm	/^f0103602:	eb 06                	jmp    f010360a <user_mem_check+0x7d>$/;"	l
f0103604	obj/kern/kernel.asm	/^f0103604:	89 d8                	mov    %ebx,%eax$/;"	l
f0103606	obj/kern/kernel.asm	/^f0103606:	eb 02                	jmp    f010360a <user_mem_check+0x7d>$/;"	l
f0103608	obj/kern/kernel.asm	/^f0103608:	89 d8                	mov    %ebx,%eax$/;"	l
f010360a	obj/kern/kernel.asm	/^f010360a:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
f010360d	obj/kern/kernel.asm	/^f010360d:	0f 44 5d 0c          	cmove  0xc(%ebp),%ebx$/;"	l
f0103611	obj/kern/kernel.asm	/^f0103611:	89 1d 3c 92 2b f0    	mov    %ebx,0xf02b923c$/;"	l
f0103617	obj/kern/kernel.asm	/^f0103617:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f010361c	obj/kern/kernel.asm	/^f010361c:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f010361f	obj/kern/kernel.asm	/^f010361f:	5b                   	pop    %ebx$/;"	l
f0103620	obj/kern/kernel.asm	/^f0103620:	5e                   	pop    %esi$/;"	l
f0103621	obj/kern/kernel.asm	/^f0103621:	5f                   	pop    %edi$/;"	l
f0103622	obj/kern/kernel.asm	/^f0103622:	5d                   	pop    %ebp$/;"	l
f0103623	obj/kern/kernel.asm	/^f0103623:	c3                   	ret    $/;"	l
f0103624	obj/kern/kernel.asm	/^f0103624 <user_mem_assert>:$/;"	l
f0103624	obj/kern/kernel.asm	/^f0103624:	55                   	push   %ebp$/;"	l
f0103625	obj/kern/kernel.asm	/^f0103625:	89 e5                	mov    %esp,%ebp$/;"	l
f0103627	obj/kern/kernel.asm	/^f0103627:	53                   	push   %ebx$/;"	l
f0103628	obj/kern/kernel.asm	/^f0103628:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010362b	obj/kern/kernel.asm	/^f010362b:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f010362e	obj/kern/kernel.asm	/^f010362e:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0103631	obj/kern/kernel.asm	/^f0103631:	83 c8 04             	or     $0x4,%eax$/;"	l
f0103634	obj/kern/kernel.asm	/^f0103634:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103638	obj/kern/kernel.asm	/^f0103638:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f010363b	obj/kern/kernel.asm	/^f010363b:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010363f	obj/kern/kernel.asm	/^f010363f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103642	obj/kern/kernel.asm	/^f0103642:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103646	obj/kern/kernel.asm	/^f0103646:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103649	obj/kern/kernel.asm	/^f0103649:	e8 3f ff ff ff       	call   f010358d <user_mem_check>$/;"	l
f010364e	obj/kern/kernel.asm	/^f010364e:	85 c0                	test   %eax,%eax$/;"	l
f0103650	obj/kern/kernel.asm	/^f0103650:	79 24                	jns    f0103676 <user_mem_assert+0x52>$/;"	l
f0103652	obj/kern/kernel.asm	/^f0103652:	a1 3c 92 2b f0       	mov    0xf02b923c,%eax$/;"	l
f0103657	obj/kern/kernel.asm	/^f0103657:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010365b	obj/kern/kernel.asm	/^f010365b:	8b 43 48             	mov    0x48(%ebx),%eax$/;"	l
f010365e	obj/kern/kernel.asm	/^f010365e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103662	obj/kern/kernel.asm	/^f0103662:	c7 04 24 c8 8f 10 f0 	movl   $0xf0108fc8,(%esp)$/;"	l
f0103669	obj/kern/kernel.asm	/^f0103669:	e8 5e 09 00 00       	call   f0103fcc <cprintf>$/;"	l
f010366e	obj/kern/kernel.asm	/^f010366e:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103671	obj/kern/kernel.asm	/^f0103671:	e8 94 06 00 00       	call   f0103d0a <env_destroy>$/;"	l
f0103676	obj/kern/kernel.asm	/^f0103676:	83 c4 14             	add    $0x14,%esp$/;"	l
f0103679	obj/kern/kernel.asm	/^f0103679:	5b                   	pop    %ebx$/;"	l
f010367a	obj/kern/kernel.asm	/^f010367a:	5d                   	pop    %ebp$/;"	l
f010367b	obj/kern/kernel.asm	/^f010367b:	c3                   	ret    $/;"	l
f010367c	obj/kern/kernel.asm	/^f010367c <region_alloc>:$/;"	l
f010367c	obj/kern/kernel.asm	/^f010367c:	55                   	push   %ebp$/;"	l
f010367d	obj/kern/kernel.asm	/^f010367d:	89 e5                	mov    %esp,%ebp$/;"	l
f010367f	obj/kern/kernel.asm	/^f010367f:	57                   	push   %edi$/;"	l
f0103680	obj/kern/kernel.asm	/^f0103680:	56                   	push   %esi$/;"	l
f0103681	obj/kern/kernel.asm	/^f0103681:	53                   	push   %ebx$/;"	l
f0103682	obj/kern/kernel.asm	/^f0103682:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0103685	obj/kern/kernel.asm	/^f0103685:	89 c7                	mov    %eax,%edi$/;"	l
f0103687	obj/kern/kernel.asm	/^f0103687:	81 c1 ff 0f 00 00    	add    $0xfff,%ecx$/;"	l
f010368d	obj/kern/kernel.asm	/^f010368d:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0103690	obj/kern/kernel.asm	/^f0103690:	89 4d e4             	mov    %ecx,-0x1c(%ebp)$/;"	l
f0103693	obj/kern/kernel.asm	/^f0103693:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0103699	obj/kern/kernel.asm	/^f0103699:	89 d6                	mov    %edx,%esi$/;"	l
f010369b	obj/kern/kernel.asm	/^f010369b:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01036a0	obj/kern/kernel.asm	/^f01036a0:	eb 74                	jmp    f0103716 <region_alloc+0x9a>$/;"	l
f01036a2	obj/kern/kernel.asm	/^f01036a2:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01036a9	obj/kern/kernel.asm	/^f01036a9:	e8 6d da ff ff       	call   f010111b <page_alloc>$/;"	l
f01036ae	obj/kern/kernel.asm	/^f01036ae:	85 c0                	test   %eax,%eax$/;"	l
f01036b0	obj/kern/kernel.asm	/^f01036b0:	74 45                	je     f01036f7 <region_alloc+0x7b>$/;"	l
f01036b2	obj/kern/kernel.asm	/^f01036b2:	c7 44 24 0c 06 00 00 	movl   $0x6,0xc(%esp)$/;"	l
f01036b9	obj/kern/kernel.asm	/^f01036b9:	00 $/;"	l
f01036ba	obj/kern/kernel.asm	/^f01036ba:	89 74 24 08          	mov    %esi,0x8(%esp)$/;"	l
f01036be	obj/kern/kernel.asm	/^f01036be:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01036c2	obj/kern/kernel.asm	/^f01036c2:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f01036c5	obj/kern/kernel.asm	/^f01036c5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01036c8	obj/kern/kernel.asm	/^f01036c8:	e8 8e dd ff ff       	call   f010145b <page_insert>$/;"	l
f01036cd	obj/kern/kernel.asm	/^f01036cd:	81 c6 00 10 00 00    	add    $0x1000,%esi$/;"	l
f01036d3	obj/kern/kernel.asm	/^f01036d3:	85 c0                	test   %eax,%eax$/;"	l
f01036d5	obj/kern/kernel.asm	/^f01036d5:	74 3c                	je     f0103713 <region_alloc+0x97>$/;"	l
f01036d7	obj/kern/kernel.asm	/^f01036d7:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01036db	obj/kern/kernel.asm	/^f01036db:	c7 44 24 08 2d 93 10 	movl   $0xf010932d,0x8(%esp)$/;"	l
f01036e2	obj/kern/kernel.asm	/^f01036e2:	f0 $/;"	l
f01036e3	obj/kern/kernel.asm	/^f01036e3:	c7 44 24 04 30 01 00 	movl   $0x130,0x4(%esp)$/;"	l
f01036ea	obj/kern/kernel.asm	/^f01036ea:	00 $/;"	l
f01036eb	obj/kern/kernel.asm	/^f01036eb:	c7 04 24 44 93 10 f0 	movl   $0xf0109344,(%esp)$/;"	l
f01036f2	obj/kern/kernel.asm	/^f01036f2:	e8 49 c9 ff ff       	call   f0100040 <_panic>$/;"	l
f01036f7	obj/kern/kernel.asm	/^f01036f7:	c7 44 24 08 4f 93 10 	movl   $0xf010934f,0x8(%esp)$/;"	l
f01036fe	obj/kern/kernel.asm	/^f01036fe:	f0 $/;"	l
f01036ff	obj/kern/kernel.asm	/^f01036ff:	c7 44 24 04 35 01 00 	movl   $0x135,0x4(%esp)$/;"	l
f0103706	obj/kern/kernel.asm	/^f0103706:	00 $/;"	l
f0103707	obj/kern/kernel.asm	/^f0103707:	c7 04 24 44 93 10 f0 	movl   $0xf0109344,(%esp)$/;"	l
f010370e	obj/kern/kernel.asm	/^f010370e:	e8 2d c9 ff ff       	call   f0100040 <_panic>$/;"	l
f0103713	obj/kern/kernel.asm	/^f0103713:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0103716	obj/kern/kernel.asm	/^f0103716:	3b 5d e4             	cmp    -0x1c(%ebp),%ebx$/;"	l
f0103719	obj/kern/kernel.asm	/^f0103719:	7c 87                	jl     f01036a2 <region_alloc+0x26>$/;"	l
f010371b	obj/kern/kernel.asm	/^f010371b:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f010371e	obj/kern/kernel.asm	/^f010371e:	5b                   	pop    %ebx$/;"	l
f010371f	obj/kern/kernel.asm	/^f010371f:	5e                   	pop    %esi$/;"	l
f0103720	obj/kern/kernel.asm	/^f0103720:	5f                   	pop    %edi$/;"	l
f0103721	obj/kern/kernel.asm	/^f0103721:	5d                   	pop    %ebp$/;"	l
f0103722	obj/kern/kernel.asm	/^f0103722:	c3                   	ret    $/;"	l
f0103723	obj/kern/kernel.asm	/^f0103723 <envid2env>:$/;"	l
f0103723	obj/kern/kernel.asm	/^f0103723:	55                   	push   %ebp$/;"	l
f0103724	obj/kern/kernel.asm	/^f0103724:	89 e5                	mov    %esp,%ebp$/;"	l
f0103726	obj/kern/kernel.asm	/^f0103726:	56                   	push   %esi$/;"	l
f0103727	obj/kern/kernel.asm	/^f0103727:	53                   	push   %ebx$/;"	l
f0103728	obj/kern/kernel.asm	/^f0103728:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010372b	obj/kern/kernel.asm	/^f010372b:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f010372e	obj/kern/kernel.asm	/^f010372e:	85 c0                	test   %eax,%eax$/;"	l
f0103730	obj/kern/kernel.asm	/^f0103730:	75 1a                	jne    f010374c <envid2env+0x29>$/;"	l
f0103732	obj/kern/kernel.asm	/^f0103732:	e8 b2 34 00 00       	call   f0106be9 <cpunum>$/;"	l
f0103737	obj/kern/kernel.asm	/^f0103737:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010373a	obj/kern/kernel.asm	/^f010373a:	8b 80 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%eax$/;"	l
f0103740	obj/kern/kernel.asm	/^f0103740:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0103743	obj/kern/kernel.asm	/^f0103743:	89 01                	mov    %eax,(%ecx)$/;"	l
f0103745	obj/kern/kernel.asm	/^f0103745:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010374a	obj/kern/kernel.asm	/^f010374a:	eb 70                	jmp    f01037bc <envid2env+0x99>$/;"	l
f010374c	obj/kern/kernel.asm	/^f010374c:	89 c3                	mov    %eax,%ebx$/;"	l
f010374e	obj/kern/kernel.asm	/^f010374e:	81 e3 ff 03 00 00    	and    $0x3ff,%ebx$/;"	l
f0103754	obj/kern/kernel.asm	/^f0103754:	6b db 7c             	imul   $0x7c,%ebx,%ebx$/;"	l
f0103757	obj/kern/kernel.asm	/^f0103757:	03 1d 48 92 2b f0    	add    0xf02b9248,%ebx$/;"	l
f010375d	obj/kern/kernel.asm	/^f010375d:	83 7b 54 00          	cmpl   $0x0,0x54(%ebx)$/;"	l
f0103761	obj/kern/kernel.asm	/^f0103761:	74 05                	je     f0103768 <envid2env+0x45>$/;"	l
f0103763	obj/kern/kernel.asm	/^f0103763:	39 43 48             	cmp    %eax,0x48(%ebx)$/;"	l
f0103766	obj/kern/kernel.asm	/^f0103766:	74 10                	je     f0103778 <envid2env+0x55>$/;"	l
f0103768	obj/kern/kernel.asm	/^f0103768:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010376b	obj/kern/kernel.asm	/^f010376b:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0103771	obj/kern/kernel.asm	/^f0103771:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f0103776	obj/kern/kernel.asm	/^f0103776:	eb 44                	jmp    f01037bc <envid2env+0x99>$/;"	l
f0103778	obj/kern/kernel.asm	/^f0103778:	84 d2                	test   %dl,%dl$/;"	l
f010377a	obj/kern/kernel.asm	/^f010377a:	74 36                	je     f01037b2 <envid2env+0x8f>$/;"	l
f010377c	obj/kern/kernel.asm	/^f010377c:	e8 68 34 00 00       	call   f0106be9 <cpunum>$/;"	l
f0103781	obj/kern/kernel.asm	/^f0103781:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103784	obj/kern/kernel.asm	/^f0103784:	39 98 28 a0 2b f0    	cmp    %ebx,-0xfd45fd8(%eax)$/;"	l
f010378a	obj/kern/kernel.asm	/^f010378a:	74 26                	je     f01037b2 <envid2env+0x8f>$/;"	l
f010378c	obj/kern/kernel.asm	/^f010378c:	8b 73 4c             	mov    0x4c(%ebx),%esi$/;"	l
f010378f	obj/kern/kernel.asm	/^f010378f:	e8 55 34 00 00       	call   f0106be9 <cpunum>$/;"	l
f0103794	obj/kern/kernel.asm	/^f0103794:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103797	obj/kern/kernel.asm	/^f0103797:	8b 80 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%eax$/;"	l
f010379d	obj/kern/kernel.asm	/^f010379d:	3b 70 48             	cmp    0x48(%eax),%esi$/;"	l
f01037a0	obj/kern/kernel.asm	/^f01037a0:	74 10                	je     f01037b2 <envid2env+0x8f>$/;"	l
f01037a2	obj/kern/kernel.asm	/^f01037a2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01037a5	obj/kern/kernel.asm	/^f01037a5:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01037ab	obj/kern/kernel.asm	/^f01037ab:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f01037b0	obj/kern/kernel.asm	/^f01037b0:	eb 0a                	jmp    f01037bc <envid2env+0x99>$/;"	l
f01037b2	obj/kern/kernel.asm	/^f01037b2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01037b5	obj/kern/kernel.asm	/^f01037b5:	89 18                	mov    %ebx,(%eax)$/;"	l
f01037b7	obj/kern/kernel.asm	/^f01037b7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01037bc	obj/kern/kernel.asm	/^f01037bc:	5b                   	pop    %ebx$/;"	l
f01037bd	obj/kern/kernel.asm	/^f01037bd:	5e                   	pop    %esi$/;"	l
f01037be	obj/kern/kernel.asm	/^f01037be:	5d                   	pop    %ebp$/;"	l
f01037bf	obj/kern/kernel.asm	/^f01037bf:	c3                   	ret    $/;"	l
f01037c0	obj/kern/kernel.asm	/^f01037c0 <env_init_percpu>:$/;"	l
f01037c0	obj/kern/kernel.asm	/^f01037c0:	55                   	push   %ebp$/;"	l
f01037c1	obj/kern/kernel.asm	/^f01037c1:	89 e5                	mov    %esp,%ebp$/;"	l
f01037c3	obj/kern/kernel.asm	/^f01037c3:	b8 20 53 12 f0       	mov    $0xf0125320,%eax$/;"	l
f01037c8	obj/kern/kernel.asm	/^f01037c8:	0f 01 10             	lgdtl  (%eax)$/;"	l
f01037cb	obj/kern/kernel.asm	/^f01037cb:	b8 23 00 00 00       	mov    $0x23,%eax$/;"	l
f01037d0	obj/kern/kernel.asm	/^f01037d0:	8e e8                	mov    %eax,%gs$/;"	l
f01037d2	obj/kern/kernel.asm	/^f01037d2:	8e e0                	mov    %eax,%fs$/;"	l
f01037d4	obj/kern/kernel.asm	/^f01037d4:	b0 10                	mov    $0x10,%al$/;"	l
f01037d6	obj/kern/kernel.asm	/^f01037d6:	8e c0                	mov    %eax,%es$/;"	l
f01037d8	obj/kern/kernel.asm	/^f01037d8:	8e d8                	mov    %eax,%ds$/;"	l
f01037da	obj/kern/kernel.asm	/^f01037da:	8e d0                	mov    %eax,%ss$/;"	l
f01037dc	obj/kern/kernel.asm	/^f01037dc:	ea e3 37 10 f0 08 00 	ljmp   $0x8,$0xf01037e3$/;"	l
f01037e3	obj/kern/kernel.asm	/^f01037e3:	b0 00                	mov    $0x0,%al$/;"	l
f01037e5	obj/kern/kernel.asm	/^f01037e5:	0f 00 d0             	lldt   %ax$/;"	l
f01037e8	obj/kern/kernel.asm	/^f01037e8:	5d                   	pop    %ebp$/;"	l
f01037e9	obj/kern/kernel.asm	/^f01037e9:	c3                   	ret    $/;"	l
f01037ea	obj/kern/kernel.asm	/^f01037ea <env_init>:$/;"	l
f01037ea	obj/kern/kernel.asm	/^f01037ea:	55                   	push   %ebp$/;"	l
f01037eb	obj/kern/kernel.asm	/^f01037eb:	89 e5                	mov    %esp,%ebp$/;"	l
f01037ed	obj/kern/kernel.asm	/^f01037ed:	56                   	push   %esi$/;"	l
f01037ee	obj/kern/kernel.asm	/^f01037ee:	53                   	push   %ebx$/;"	l
f01037ef	obj/kern/kernel.asm	/^f01037ef:	8b 35 48 92 2b f0    	mov    0xf02b9248,%esi$/;"	l
f01037f5	obj/kern/kernel.asm	/^f01037f5:	8b 0d 4c 92 2b f0    	mov    0xf02b924c,%ecx$/;"	l
f01037fb	obj/kern/kernel.asm	/^f01037fb:	8d 86 84 ef 01 00    	lea    0x1ef84(%esi),%eax$/;"	l
f0103801	obj/kern/kernel.asm	/^f0103801:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f0103806	obj/kern/kernel.asm	/^f0103806:	89 c3                	mov    %eax,%ebx$/;"	l
f0103808	obj/kern/kernel.asm	/^f0103808:	c7 40 54 00 00 00 00 	movl   $0x0,0x54(%eax)$/;"	l
f010380f	obj/kern/kernel.asm	/^f010380f:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%eax)$/;"	l
f0103816	obj/kern/kernel.asm	/^f0103816:	89 48 44             	mov    %ecx,0x44(%eax)$/;"	l
f0103819	obj/kern/kernel.asm	/^f0103819:	83 e8 7c             	sub    $0x7c,%eax$/;"	l
f010381c	obj/kern/kernel.asm	/^f010381c:	83 ea 01             	sub    $0x1,%edx$/;"	l
f010381f	obj/kern/kernel.asm	/^f010381f:	74 04                	je     f0103825 <env_init+0x3b>$/;"	l
f0103821	obj/kern/kernel.asm	/^f0103821:	89 d9                	mov    %ebx,%ecx$/;"	l
f0103823	obj/kern/kernel.asm	/^f0103823:	eb e1                	jmp    f0103806 <env_init+0x1c>$/;"	l
f0103825	obj/kern/kernel.asm	/^f0103825:	89 35 4c 92 2b f0    	mov    %esi,0xf02b924c$/;"	l
f010382b	obj/kern/kernel.asm	/^f010382b:	e8 90 ff ff ff       	call   f01037c0 <env_init_percpu>$/;"	l
f0103830	obj/kern/kernel.asm	/^f0103830:	5b                   	pop    %ebx$/;"	l
f0103831	obj/kern/kernel.asm	/^f0103831:	5e                   	pop    %esi$/;"	l
f0103832	obj/kern/kernel.asm	/^f0103832:	5d                   	pop    %ebp$/;"	l
f0103833	obj/kern/kernel.asm	/^f0103833:	c3                   	ret    $/;"	l
f0103834	obj/kern/kernel.asm	/^f0103834 <env_alloc>:$/;"	l
f0103834	obj/kern/kernel.asm	/^f0103834:	55                   	push   %ebp$/;"	l
f0103835	obj/kern/kernel.asm	/^f0103835:	89 e5                	mov    %esp,%ebp$/;"	l
f0103837	obj/kern/kernel.asm	/^f0103837:	56                   	push   %esi$/;"	l
f0103838	obj/kern/kernel.asm	/^f0103838:	53                   	push   %ebx$/;"	l
f0103839	obj/kern/kernel.asm	/^f0103839:	83 ec 10             	sub    $0x10,%esp$/;"	l
f010383c	obj/kern/kernel.asm	/^f010383c:	8b 1d 4c 92 2b f0    	mov    0xf02b924c,%ebx$/;"	l
f0103842	obj/kern/kernel.asm	/^f0103842:	85 db                	test   %ebx,%ebx$/;"	l
f0103844	obj/kern/kernel.asm	/^f0103844:	0f 84 6d 01 00 00    	je     f01039b7 <env_alloc+0x183>$/;"	l
f010384a	obj/kern/kernel.asm	/^f010384a:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f0103851	obj/kern/kernel.asm	/^f0103851:	e8 c5 d8 ff ff       	call   f010111b <page_alloc>$/;"	l
f0103856	obj/kern/kernel.asm	/^f0103856:	89 c6                	mov    %eax,%esi$/;"	l
f0103858	obj/kern/kernel.asm	/^f0103858:	85 c0                	test   %eax,%eax$/;"	l
f010385a	obj/kern/kernel.asm	/^f010385a:	0f 84 5e 01 00 00    	je     f01039be <env_alloc+0x18a>$/;"	l
f0103860	obj/kern/kernel.asm	/^f0103860:	2b 05 9c 9e 2b f0    	sub    0xf02b9e9c,%eax$/;"	l
f0103866	obj/kern/kernel.asm	/^f0103866:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0103869	obj/kern/kernel.asm	/^f0103869:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010386c	obj/kern/kernel.asm	/^f010386c:	89 c2                	mov    %eax,%edx$/;"	l
f010386e	obj/kern/kernel.asm	/^f010386e:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0103871	obj/kern/kernel.asm	/^f0103871:	3b 15 94 9e 2b f0    	cmp    0xf02b9e94,%edx$/;"	l
f0103877	obj/kern/kernel.asm	/^f0103877:	72 20                	jb     f0103899 <env_alloc+0x65>$/;"	l
f0103879	obj/kern/kernel.asm	/^f0103879:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010387d	obj/kern/kernel.asm	/^f010387d:	c7 44 24 08 a4 80 10 	movl   $0xf01080a4,0x8(%esp)$/;"	l
f0103884	obj/kern/kernel.asm	/^f0103884:	f0 $/;"	l
f0103885	obj/kern/kernel.asm	/^f0103885:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f010388c	obj/kern/kernel.asm	/^f010388c:	00 $/;"	l
f010388d	obj/kern/kernel.asm	/^f010388d:	c7 04 24 fd 8f 10 f0 	movl   $0xf0108ffd,(%esp)$/;"	l
f0103894	obj/kern/kernel.asm	/^f0103894:	e8 a7 c7 ff ff       	call   f0100040 <_panic>$/;"	l
f0103899	obj/kern/kernel.asm	/^f0103899:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f010389e	obj/kern/kernel.asm	/^f010389e:	89 43 60             	mov    %eax,0x60(%ebx)$/;"	l
f01038a1	obj/kern/kernel.asm	/^f01038a1:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01038a8	obj/kern/kernel.asm	/^f01038a8:	00 $/;"	l
f01038a9	obj/kern/kernel.asm	/^f01038a9:	8b 15 98 9e 2b f0    	mov    0xf02b9e98,%edx$/;"	l
f01038af	obj/kern/kernel.asm	/^f01038af:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01038b3	obj/kern/kernel.asm	/^f01038b3:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01038b6	obj/kern/kernel.asm	/^f01038b6:	e8 29 2d 00 00       	call   f01065e4 <memmove>$/;"	l
f01038bb	obj/kern/kernel.asm	/^f01038bb:	c7 44 24 08 ec 0e 00 	movl   $0xeec,0x8(%esp)$/;"	l
f01038c2	obj/kern/kernel.asm	/^f01038c2:	00 $/;"	l
f01038c3	obj/kern/kernel.asm	/^f01038c3:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01038ca	obj/kern/kernel.asm	/^f01038ca:	00 $/;"	l
f01038cb	obj/kern/kernel.asm	/^f01038cb:	8b 43 60             	mov    0x60(%ebx),%eax$/;"	l
f01038ce	obj/kern/kernel.asm	/^f01038ce:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01038d1	obj/kern/kernel.asm	/^f01038d1:	e8 c1 2c 00 00       	call   f0106597 <memset>$/;"	l
f01038d6	obj/kern/kernel.asm	/^f01038d6:	66 83 46 04 01       	addw   $0x1,0x4(%esi)$/;"	l
f01038db	obj/kern/kernel.asm	/^f01038db:	8b 43 60             	mov    0x60(%ebx),%eax$/;"	l
f01038de	obj/kern/kernel.asm	/^f01038de:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01038e3	obj/kern/kernel.asm	/^f01038e3:	77 20                	ja     f0103905 <env_alloc+0xd1>$/;"	l
f01038e5	obj/kern/kernel.asm	/^f01038e5:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01038e9	obj/kern/kernel.asm	/^f01038e9:	c7 44 24 08 c8 80 10 	movl   $0xf01080c8,0x8(%esp)$/;"	l
f01038f0	obj/kern/kernel.asm	/^f01038f0:	f0 $/;"	l
f01038f1	obj/kern/kernel.asm	/^f01038f1:	c7 44 24 04 c8 00 00 	movl   $0xc8,0x4(%esp)$/;"	l
f01038f8	obj/kern/kernel.asm	/^f01038f8:	00 $/;"	l
f01038f9	obj/kern/kernel.asm	/^f01038f9:	c7 04 24 44 93 10 f0 	movl   $0xf0109344,(%esp)$/;"	l
f0103900	obj/kern/kernel.asm	/^f0103900:	e8 3b c7 ff ff       	call   f0100040 <_panic>$/;"	l
f0103905	obj/kern/kernel.asm	/^f0103905:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f010390b	obj/kern/kernel.asm	/^f010390b:	83 ca 05             	or     $0x5,%edx$/;"	l
f010390e	obj/kern/kernel.asm	/^f010390e:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
f0103914	obj/kern/kernel.asm	/^f0103914:	8b 43 48             	mov    0x48(%ebx),%eax$/;"	l
f0103917	obj/kern/kernel.asm	/^f0103917:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
f010391c	obj/kern/kernel.asm	/^f010391c:	25 00 fc ff ff       	and    $0xfffffc00,%eax$/;"	l
f0103921	obj/kern/kernel.asm	/^f0103921:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0103926	obj/kern/kernel.asm	/^f0103926:	0f 4e c2             	cmovle %edx,%eax$/;"	l
f0103929	obj/kern/kernel.asm	/^f0103929:	89 da                	mov    %ebx,%edx$/;"	l
f010392b	obj/kern/kernel.asm	/^f010392b:	2b 15 48 92 2b f0    	sub    0xf02b9248,%edx$/;"	l
f0103931	obj/kern/kernel.asm	/^f0103931:	c1 fa 02             	sar    $0x2,%edx$/;"	l
f0103934	obj/kern/kernel.asm	/^f0103934:	69 d2 df 7b ef bd    	imul   $0xbdef7bdf,%edx,%edx$/;"	l
f010393a	obj/kern/kernel.asm	/^f010393a:	09 d0                	or     %edx,%eax$/;"	l
f010393c	obj/kern/kernel.asm	/^f010393c:	89 43 48             	mov    %eax,0x48(%ebx)$/;"	l
f010393f	obj/kern/kernel.asm	/^f010393f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103942	obj/kern/kernel.asm	/^f0103942:	89 43 4c             	mov    %eax,0x4c(%ebx)$/;"	l
f0103945	obj/kern/kernel.asm	/^f0103945:	c7 43 50 00 00 00 00 	movl   $0x0,0x50(%ebx)$/;"	l
f010394c	obj/kern/kernel.asm	/^f010394c:	c7 43 54 02 00 00 00 	movl   $0x2,0x54(%ebx)$/;"	l
f0103953	obj/kern/kernel.asm	/^f0103953:	c7 43 58 00 00 00 00 	movl   $0x0,0x58(%ebx)$/;"	l
f010395a	obj/kern/kernel.asm	/^f010395a:	c7 44 24 08 44 00 00 	movl   $0x44,0x8(%esp)$/;"	l
f0103961	obj/kern/kernel.asm	/^f0103961:	00 $/;"	l
f0103962	obj/kern/kernel.asm	/^f0103962:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0103969	obj/kern/kernel.asm	/^f0103969:	00 $/;"	l
f010396a	obj/kern/kernel.asm	/^f010396a:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010396d	obj/kern/kernel.asm	/^f010396d:	e8 25 2c 00 00       	call   f0106597 <memset>$/;"	l
f0103972	obj/kern/kernel.asm	/^f0103972:	66 c7 43 24 23 00    	movw   $0x23,0x24(%ebx)$/;"	l
f0103978	obj/kern/kernel.asm	/^f0103978:	66 c7 43 20 23 00    	movw   $0x23,0x20(%ebx)$/;"	l
f010397e	obj/kern/kernel.asm	/^f010397e:	66 c7 43 40 23 00    	movw   $0x23,0x40(%ebx)$/;"	l
f0103984	obj/kern/kernel.asm	/^f0103984:	c7 43 3c 00 e0 bf ee 	movl   $0xeebfe000,0x3c(%ebx)$/;"	l
f010398b	obj/kern/kernel.asm	/^f010398b:	66 c7 43 34 1b 00    	movw   $0x1b,0x34(%ebx)$/;"	l
f0103991	obj/kern/kernel.asm	/^f0103991:	81 4b 38 00 02 00 00 	orl    $0x200,0x38(%ebx)$/;"	l
f0103998	obj/kern/kernel.asm	/^f0103998:	c7 43 64 00 00 00 00 	movl   $0x0,0x64(%ebx)$/;"	l
f010399f	obj/kern/kernel.asm	/^f010399f:	c6 43 68 00          	movb   $0x0,0x68(%ebx)$/;"	l
f01039a3	obj/kern/kernel.asm	/^f01039a3:	8b 43 44             	mov    0x44(%ebx),%eax$/;"	l
f01039a6	obj/kern/kernel.asm	/^f01039a6:	a3 4c 92 2b f0       	mov    %eax,0xf02b924c$/;"	l
f01039ab	obj/kern/kernel.asm	/^f01039ab:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01039ae	obj/kern/kernel.asm	/^f01039ae:	89 18                	mov    %ebx,(%eax)$/;"	l
f01039b0	obj/kern/kernel.asm	/^f01039b0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01039b5	obj/kern/kernel.asm	/^f01039b5:	eb 0c                	jmp    f01039c3 <env_alloc+0x18f>$/;"	l
f01039b7	obj/kern/kernel.asm	/^f01039b7:	b8 fb ff ff ff       	mov    $0xfffffffb,%eax$/;"	l
f01039bc	obj/kern/kernel.asm	/^f01039bc:	eb 05                	jmp    f01039c3 <env_alloc+0x18f>$/;"	l
f01039be	obj/kern/kernel.asm	/^f01039be:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f01039c3	obj/kern/kernel.asm	/^f01039c3:	83 c4 10             	add    $0x10,%esp$/;"	l
f01039c6	obj/kern/kernel.asm	/^f01039c6:	5b                   	pop    %ebx$/;"	l
f01039c7	obj/kern/kernel.asm	/^f01039c7:	5e                   	pop    %esi$/;"	l
f01039c8	obj/kern/kernel.asm	/^f01039c8:	5d                   	pop    %ebp$/;"	l
f01039c9	obj/kern/kernel.asm	/^f01039c9:	c3                   	ret    $/;"	l
f01039ca	obj/kern/kernel.asm	/^f01039ca <env_create>:$/;"	l
f01039ca	obj/kern/kernel.asm	/^f01039ca:	55                   	push   %ebp$/;"	l
f01039cb	obj/kern/kernel.asm	/^f01039cb:	89 e5                	mov    %esp,%ebp$/;"	l
f01039cd	obj/kern/kernel.asm	/^f01039cd:	57                   	push   %edi$/;"	l
f01039ce	obj/kern/kernel.asm	/^f01039ce:	56                   	push   %esi$/;"	l
f01039cf	obj/kern/kernel.asm	/^f01039cf:	53                   	push   %ebx$/;"	l
f01039d0	obj/kern/kernel.asm	/^f01039d0:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f01039d3	obj/kern/kernel.asm	/^f01039d3:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f01039d6	obj/kern/kernel.asm	/^f01039d6:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01039dd	obj/kern/kernel.asm	/^f01039dd:	00 $/;"	l
f01039de	obj/kern/kernel.asm	/^f01039de:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01039e1	obj/kern/kernel.asm	/^f01039e1:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01039e4	obj/kern/kernel.asm	/^f01039e4:	e8 4b fe ff ff       	call   f0103834 <env_alloc>$/;"	l
f01039e9	obj/kern/kernel.asm	/^f01039e9:	85 c0                	test   %eax,%eax$/;"	l
f01039eb	obj/kern/kernel.asm	/^f01039eb:	74 20                	je     f0103a0d <env_create+0x43>$/;"	l
f01039ed	obj/kern/kernel.asm	/^f01039ed:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01039f1	obj/kern/kernel.asm	/^f01039f1:	c7 44 24 08 63 93 10 	movl   $0xf0109363,0x8(%esp)$/;"	l
f01039f8	obj/kern/kernel.asm	/^f01039f8:	f0 $/;"	l
f01039f9	obj/kern/kernel.asm	/^f01039f9:	c7 44 24 04 a4 01 00 	movl   $0x1a4,0x4(%esp)$/;"	l
f0103a00	obj/kern/kernel.asm	/^f0103a00:	00 $/;"	l
f0103a01	obj/kern/kernel.asm	/^f0103a01:	c7 04 24 44 93 10 f0 	movl   $0xf0109344,(%esp)$/;"	l
f0103a08	obj/kern/kernel.asm	/^f0103a08:	e8 33 c6 ff ff       	call   f0100040 <_panic>$/;"	l
f0103a0d	obj/kern/kernel.asm	/^f0103a0d:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0103a10	obj/kern/kernel.asm	/^f0103a10:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0103a13	obj/kern/kernel.asm	/^f0103a13:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%edi)$/;"	l
f0103a19	obj/kern/kernel.asm	/^f0103a19:	74 1c                	je     f0103a37 <env_create+0x6d>$/;"	l
f0103a1b	obj/kern/kernel.asm	/^f0103a1b:	c7 44 24 08 88 93 10 	movl   $0xf0109388,0x8(%esp)$/;"	l
f0103a22	obj/kern/kernel.asm	/^f0103a22:	f0 $/;"	l
f0103a23	obj/kern/kernel.asm	/^f0103a23:	c7 44 24 04 79 01 00 	movl   $0x179,0x4(%esp)$/;"	l
f0103a2a	obj/kern/kernel.asm	/^f0103a2a:	00 $/;"	l
f0103a2b	obj/kern/kernel.asm	/^f0103a2b:	c7 04 24 44 93 10 f0 	movl   $0xf0109344,(%esp)$/;"	l
f0103a32	obj/kern/kernel.asm	/^f0103a32:	e8 09 c6 ff ff       	call   f0100040 <_panic>$/;"	l
f0103a37	obj/kern/kernel.asm	/^f0103a37:	89 fb                	mov    %edi,%ebx$/;"	l
f0103a39	obj/kern/kernel.asm	/^f0103a39:	03 5f 1c             	add    0x1c(%edi),%ebx$/;"	l
f0103a3c	obj/kern/kernel.asm	/^f0103a3c:	0f b7 77 2c          	movzwl 0x2c(%edi),%esi$/;"	l
f0103a40	obj/kern/kernel.asm	/^f0103a40:	c1 e6 05             	shl    $0x5,%esi$/;"	l
f0103a43	obj/kern/kernel.asm	/^f0103a43:	01 de                	add    %ebx,%esi$/;"	l
f0103a45	obj/kern/kernel.asm	/^f0103a45:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0103a48	obj/kern/kernel.asm	/^f0103a48:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0103a4b	obj/kern/kernel.asm	/^f0103a4b:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103a50	obj/kern/kernel.asm	/^f0103a50:	77 20                	ja     f0103a72 <env_create+0xa8>$/;"	l
f0103a52	obj/kern/kernel.asm	/^f0103a52:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103a56	obj/kern/kernel.asm	/^f0103a56:	c7 44 24 08 c8 80 10 	movl   $0xf01080c8,0x8(%esp)$/;"	l
f0103a5d	obj/kern/kernel.asm	/^f0103a5d:	f0 $/;"	l
f0103a5e	obj/kern/kernel.asm	/^f0103a5e:	c7 44 24 04 7e 01 00 	movl   $0x17e,0x4(%esp)$/;"	l
f0103a65	obj/kern/kernel.asm	/^f0103a65:	00 $/;"	l
f0103a66	obj/kern/kernel.asm	/^f0103a66:	c7 04 24 44 93 10 f0 	movl   $0xf0109344,(%esp)$/;"	l
f0103a6d	obj/kern/kernel.asm	/^f0103a6d:	e8 ce c5 ff ff       	call   f0100040 <_panic>$/;"	l
f0103a72	obj/kern/kernel.asm	/^f0103a72:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103a77	obj/kern/kernel.asm	/^f0103a77:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103a7a	obj/kern/kernel.asm	/^f0103a7a:	eb 54                	jmp    f0103ad0 <env_create+0x106>$/;"	l
f0103a7c	obj/kern/kernel.asm	/^f0103a7c:	83 3b 01             	cmpl   $0x1,(%ebx)$/;"	l
f0103a7f	obj/kern/kernel.asm	/^f0103a7f:	75 4c                	jne    f0103acd <env_create+0x103>$/;"	l
f0103a81	obj/kern/kernel.asm	/^f0103a81:	8b 4b 14             	mov    0x14(%ebx),%ecx$/;"	l
f0103a84	obj/kern/kernel.asm	/^f0103a84:	8b 53 08             	mov    0x8(%ebx),%edx$/;"	l
f0103a87	obj/kern/kernel.asm	/^f0103a87:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0103a8a	obj/kern/kernel.asm	/^f0103a8a:	e8 ed fb ff ff       	call   f010367c <region_alloc>$/;"	l
f0103a8f	obj/kern/kernel.asm	/^f0103a8f:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f0103a92	obj/kern/kernel.asm	/^f0103a92:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0103a96	obj/kern/kernel.asm	/^f0103a96:	89 f8                	mov    %edi,%eax$/;"	l
f0103a98	obj/kern/kernel.asm	/^f0103a98:	03 43 04             	add    0x4(%ebx),%eax$/;"	l
f0103a9b	obj/kern/kernel.asm	/^f0103a9b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103a9f	obj/kern/kernel.asm	/^f0103a9f:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0103aa2	obj/kern/kernel.asm	/^f0103aa2:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103aa5	obj/kern/kernel.asm	/^f0103aa5:	e8 3a 2b 00 00       	call   f01065e4 <memmove>$/;"	l
f0103aaa	obj/kern/kernel.asm	/^f0103aaa:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f0103aad	obj/kern/kernel.asm	/^f0103aad:	8b 53 14             	mov    0x14(%ebx),%edx$/;"	l
f0103ab0	obj/kern/kernel.asm	/^f0103ab0:	39 d0                	cmp    %edx,%eax$/;"	l
f0103ab2	obj/kern/kernel.asm	/^f0103ab2:	73 19                	jae    f0103acd <env_create+0x103>$/;"	l
f0103ab4	obj/kern/kernel.asm	/^f0103ab4:	29 c2                	sub    %eax,%edx$/;"	l
f0103ab6	obj/kern/kernel.asm	/^f0103ab6:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0103aba	obj/kern/kernel.asm	/^f0103aba:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0103ac1	obj/kern/kernel.asm	/^f0103ac1:	00 $/;"	l
f0103ac2	obj/kern/kernel.asm	/^f0103ac2:	03 43 08             	add    0x8(%ebx),%eax$/;"	l
f0103ac5	obj/kern/kernel.asm	/^f0103ac5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103ac8	obj/kern/kernel.asm	/^f0103ac8:	e8 ca 2a 00 00       	call   f0106597 <memset>$/;"	l
f0103acd	obj/kern/kernel.asm	/^f0103acd:	83 c3 20             	add    $0x20,%ebx$/;"	l
f0103ad0	obj/kern/kernel.asm	/^f0103ad0:	39 de                	cmp    %ebx,%esi$/;"	l
f0103ad2	obj/kern/kernel.asm	/^f0103ad2:	77 a8                	ja     f0103a7c <env_create+0xb2>$/;"	l
f0103ad4	obj/kern/kernel.asm	/^f0103ad4:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f0103ad9	obj/kern/kernel.asm	/^f0103ad9:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103ade	obj/kern/kernel.asm	/^f0103ade:	77 20                	ja     f0103b00 <env_create+0x136>$/;"	l
f0103ae0	obj/kern/kernel.asm	/^f0103ae0:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103ae4	obj/kern/kernel.asm	/^f0103ae4:	c7 44 24 08 c8 80 10 	movl   $0xf01080c8,0x8(%esp)$/;"	l
f0103aeb	obj/kern/kernel.asm	/^f0103aeb:	f0 $/;"	l
f0103aec	obj/kern/kernel.asm	/^f0103aec:	c7 44 24 04 8b 01 00 	movl   $0x18b,0x4(%esp)$/;"	l
f0103af3	obj/kern/kernel.asm	/^f0103af3:	00 $/;"	l
f0103af4	obj/kern/kernel.asm	/^f0103af4:	c7 04 24 44 93 10 f0 	movl   $0xf0109344,(%esp)$/;"	l
f0103afb	obj/kern/kernel.asm	/^f0103afb:	e8 40 c5 ff ff       	call   f0100040 <_panic>$/;"	l
f0103b00	obj/kern/kernel.asm	/^f0103b00:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103b05	obj/kern/kernel.asm	/^f0103b05:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103b08	obj/kern/kernel.asm	/^f0103b08:	8b 47 18             	mov    0x18(%edi),%eax$/;"	l
f0103b0b	obj/kern/kernel.asm	/^f0103b0b:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f0103b0e	obj/kern/kernel.asm	/^f0103b0e:	89 47 30             	mov    %eax,0x30(%edi)$/;"	l
f0103b11	obj/kern/kernel.asm	/^f0103b11:	b9 00 10 00 00       	mov    $0x1000,%ecx$/;"	l
f0103b16	obj/kern/kernel.asm	/^f0103b16:	ba 00 d0 bf ee       	mov    $0xeebfd000,%edx$/;"	l
f0103b1b	obj/kern/kernel.asm	/^f0103b1b:	89 f8                	mov    %edi,%eax$/;"	l
f0103b1d	obj/kern/kernel.asm	/^f0103b1d:	e8 5a fb ff ff       	call   f010367c <region_alloc>$/;"	l
f0103b22	obj/kern/kernel.asm	/^f0103b22:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0103b25	obj/kern/kernel.asm	/^f0103b25:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0103b28	obj/kern/kernel.asm	/^f0103b28:	89 48 50             	mov    %ecx,0x50(%eax)$/;"	l
f0103b2b	obj/kern/kernel.asm	/^f0103b2b:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
f0103b2e	obj/kern/kernel.asm	/^f0103b2e:	75 07                	jne    f0103b37 <env_create+0x16d>$/;"	l
f0103b30	obj/kern/kernel.asm	/^f0103b30:	81 48 38 00 30 00 00 	orl    $0x3000,0x38(%eax)$/;"	l
f0103b37	obj/kern/kernel.asm	/^f0103b37:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f0103b3a	obj/kern/kernel.asm	/^f0103b3a:	5b                   	pop    %ebx$/;"	l
f0103b3b	obj/kern/kernel.asm	/^f0103b3b:	5e                   	pop    %esi$/;"	l
f0103b3c	obj/kern/kernel.asm	/^f0103b3c:	5f                   	pop    %edi$/;"	l
f0103b3d	obj/kern/kernel.asm	/^f0103b3d:	5d                   	pop    %ebp$/;"	l
f0103b3e	obj/kern/kernel.asm	/^f0103b3e:	c3                   	ret    $/;"	l
f0103b3f	obj/kern/kernel.asm	/^f0103b3f <env_free>:$/;"	l
f0103b3f	obj/kern/kernel.asm	/^f0103b3f:	55                   	push   %ebp$/;"	l
f0103b40	obj/kern/kernel.asm	/^f0103b40:	89 e5                	mov    %esp,%ebp$/;"	l
f0103b42	obj/kern/kernel.asm	/^f0103b42:	57                   	push   %edi$/;"	l
f0103b43	obj/kern/kernel.asm	/^f0103b43:	56                   	push   %esi$/;"	l
f0103b44	obj/kern/kernel.asm	/^f0103b44:	53                   	push   %ebx$/;"	l
f0103b45	obj/kern/kernel.asm	/^f0103b45:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0103b48	obj/kern/kernel.asm	/^f0103b48:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0103b4b	obj/kern/kernel.asm	/^f0103b4b:	e8 99 30 00 00       	call   f0106be9 <cpunum>$/;"	l
f0103b50	obj/kern/kernel.asm	/^f0103b50:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103b53	obj/kern/kernel.asm	/^f0103b53:	39 b8 28 a0 2b f0    	cmp    %edi,-0xfd45fd8(%eax)$/;"	l
f0103b59	obj/kern/kernel.asm	/^f0103b59:	74 09                	je     f0103b64 <env_free+0x25>$/;"	l
f0103b5b	obj/kern/kernel.asm	/^f0103b5b:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f0103b62	obj/kern/kernel.asm	/^f0103b62:	eb 36                	jmp    f0103b9a <env_free+0x5b>$/;"	l
f0103b64	obj/kern/kernel.asm	/^f0103b64:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f0103b69	obj/kern/kernel.asm	/^f0103b69:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103b6e	obj/kern/kernel.asm	/^f0103b6e:	77 20                	ja     f0103b90 <env_free+0x51>$/;"	l
f0103b70	obj/kern/kernel.asm	/^f0103b70:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103b74	obj/kern/kernel.asm	/^f0103b74:	c7 44 24 08 c8 80 10 	movl   $0xf01080c8,0x8(%esp)$/;"	l
f0103b7b	obj/kern/kernel.asm	/^f0103b7b:	f0 $/;"	l
f0103b7c	obj/kern/kernel.asm	/^f0103b7c:	c7 44 24 04 bd 01 00 	movl   $0x1bd,0x4(%esp)$/;"	l
f0103b83	obj/kern/kernel.asm	/^f0103b83:	00 $/;"	l
f0103b84	obj/kern/kernel.asm	/^f0103b84:	c7 04 24 44 93 10 f0 	movl   $0xf0109344,(%esp)$/;"	l
f0103b8b	obj/kern/kernel.asm	/^f0103b8b:	e8 b0 c4 ff ff       	call   f0100040 <_panic>$/;"	l
f0103b90	obj/kern/kernel.asm	/^f0103b90:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103b95	obj/kern/kernel.asm	/^f0103b95:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103b98	obj/kern/kernel.asm	/^f0103b98:	eb c1                	jmp    f0103b5b <env_free+0x1c>$/;"	l
f0103b9a	obj/kern/kernel.asm	/^f0103b9a:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f0103b9d	obj/kern/kernel.asm	/^f0103b9d:	89 c8                	mov    %ecx,%eax$/;"	l
f0103b9f	obj/kern/kernel.asm	/^f0103b9f:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0103ba2	obj/kern/kernel.asm	/^f0103ba2:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0103ba5	obj/kern/kernel.asm	/^f0103ba5:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103ba8	obj/kern/kernel.asm	/^f0103ba8:	8b 34 88             	mov    (%eax,%ecx,4),%esi$/;"	l
f0103bab	obj/kern/kernel.asm	/^f0103bab:	f7 c6 01 00 00 00    	test   $0x1,%esi$/;"	l
f0103bb1	obj/kern/kernel.asm	/^f0103bb1:	0f 84 b7 00 00 00    	je     f0103c6e <env_free+0x12f>$/;"	l
f0103bb7	obj/kern/kernel.asm	/^f0103bb7:	81 e6 00 f0 ff ff    	and    $0xfffff000,%esi$/;"	l
f0103bbd	obj/kern/kernel.asm	/^f0103bbd:	89 f0                	mov    %esi,%eax$/;"	l
f0103bbf	obj/kern/kernel.asm	/^f0103bbf:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0103bc2	obj/kern/kernel.asm	/^f0103bc2:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0103bc5	obj/kern/kernel.asm	/^f0103bc5:	3b 05 94 9e 2b f0    	cmp    0xf02b9e94,%eax$/;"	l
f0103bcb	obj/kern/kernel.asm	/^f0103bcb:	72 20                	jb     f0103bed <env_free+0xae>$/;"	l
f0103bcd	obj/kern/kernel.asm	/^f0103bcd:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f0103bd1	obj/kern/kernel.asm	/^f0103bd1:	c7 44 24 08 a4 80 10 	movl   $0xf01080a4,0x8(%esp)$/;"	l
f0103bd8	obj/kern/kernel.asm	/^f0103bd8:	f0 $/;"	l
f0103bd9	obj/kern/kernel.asm	/^f0103bd9:	c7 44 24 04 cc 01 00 	movl   $0x1cc,0x4(%esp)$/;"	l
f0103be0	obj/kern/kernel.asm	/^f0103be0:	00 $/;"	l
f0103be1	obj/kern/kernel.asm	/^f0103be1:	c7 04 24 44 93 10 f0 	movl   $0xf0109344,(%esp)$/;"	l
f0103be8	obj/kern/kernel.asm	/^f0103be8:	e8 53 c4 ff ff       	call   f0100040 <_panic>$/;"	l
f0103bed	obj/kern/kernel.asm	/^f0103bed:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0103bf0	obj/kern/kernel.asm	/^f0103bf0:	c1 e0 16             	shl    $0x16,%eax$/;"	l
f0103bf3	obj/kern/kernel.asm	/^f0103bf3:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0103bf6	obj/kern/kernel.asm	/^f0103bf6:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0103bfb	obj/kern/kernel.asm	/^f0103bfb:	f6 84 9e 00 00 00 f0 	testb  $0x1,-0x10000000(%esi,%ebx,4)$/;"	l
f0103c02	obj/kern/kernel.asm	/^f0103c02:	01 $/;"	l
f0103c03	obj/kern/kernel.asm	/^f0103c03:	74 17                	je     f0103c1c <env_free+0xdd>$/;"	l
f0103c05	obj/kern/kernel.asm	/^f0103c05:	89 d8                	mov    %ebx,%eax$/;"	l
f0103c07	obj/kern/kernel.asm	/^f0103c07:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0103c0a	obj/kern/kernel.asm	/^f0103c0a:	0b 45 e4             	or     -0x1c(%ebp),%eax$/;"	l
f0103c0d	obj/kern/kernel.asm	/^f0103c0d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103c11	obj/kern/kernel.asm	/^f0103c11:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103c14	obj/kern/kernel.asm	/^f0103c14:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103c17	obj/kern/kernel.asm	/^f0103c17:	e8 f6 d7 ff ff       	call   f0101412 <page_remove>$/;"	l
f0103c1c	obj/kern/kernel.asm	/^f0103c1c:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0103c1f	obj/kern/kernel.asm	/^f0103c1f:	81 fb 00 04 00 00    	cmp    $0x400,%ebx$/;"	l
f0103c25	obj/kern/kernel.asm	/^f0103c25:	75 d4                	jne    f0103bfb <env_free+0xbc>$/;"	l
f0103c27	obj/kern/kernel.asm	/^f0103c27:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103c2a	obj/kern/kernel.asm	/^f0103c2a:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0103c2d	obj/kern/kernel.asm	/^f0103c2d:	c7 04 10 00 00 00 00 	movl   $0x0,(%eax,%edx,1)$/;"	l
f0103c34	obj/kern/kernel.asm	/^f0103c34:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0103c37	obj/kern/kernel.asm	/^f0103c37:	3b 05 94 9e 2b f0    	cmp    0xf02b9e94,%eax$/;"	l
f0103c3d	obj/kern/kernel.asm	/^f0103c3d:	72 1c                	jb     f0103c5b <env_free+0x11c>$/;"	l
f0103c3f	obj/kern/kernel.asm	/^f0103c3f:	c7 44 24 08 90 87 10 	movl   $0xf0108790,0x8(%esp)$/;"	l
f0103c46	obj/kern/kernel.asm	/^f0103c46:	f0 $/;"	l
f0103c47	obj/kern/kernel.asm	/^f0103c47:	c7 44 24 04 51 00 00 	movl   $0x51,0x4(%esp)$/;"	l
f0103c4e	obj/kern/kernel.asm	/^f0103c4e:	00 $/;"	l
f0103c4f	obj/kern/kernel.asm	/^f0103c4f:	c7 04 24 fd 8f 10 f0 	movl   $0xf0108ffd,(%esp)$/;"	l
f0103c56	obj/kern/kernel.asm	/^f0103c56:	e8 e5 c3 ff ff       	call   f0100040 <_panic>$/;"	l
f0103c5b	obj/kern/kernel.asm	/^f0103c5b:	a1 9c 9e 2b f0       	mov    0xf02b9e9c,%eax$/;"	l
f0103c60	obj/kern/kernel.asm	/^f0103c60:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0103c63	obj/kern/kernel.asm	/^f0103c63:	8d 04 d0             	lea    (%eax,%edx,8),%eax$/;"	l
f0103c66	obj/kern/kernel.asm	/^f0103c66:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103c69	obj/kern/kernel.asm	/^f0103c69:	e8 99 d5 ff ff       	call   f0101207 <page_decref>$/;"	l
f0103c6e	obj/kern/kernel.asm	/^f0103c6e:	83 45 e0 01          	addl   $0x1,-0x20(%ebp)$/;"	l
f0103c72	obj/kern/kernel.asm	/^f0103c72:	81 7d e0 bb 03 00 00 	cmpl   $0x3bb,-0x20(%ebp)$/;"	l
f0103c79	obj/kern/kernel.asm	/^f0103c79:	0f 85 1b ff ff ff    	jne    f0103b9a <env_free+0x5b>$/;"	l
f0103c7f	obj/kern/kernel.asm	/^f0103c7f:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103c82	obj/kern/kernel.asm	/^f0103c82:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103c87	obj/kern/kernel.asm	/^f0103c87:	77 20                	ja     f0103ca9 <env_free+0x16a>$/;"	l
f0103c89	obj/kern/kernel.asm	/^f0103c89:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103c8d	obj/kern/kernel.asm	/^f0103c8d:	c7 44 24 08 c8 80 10 	movl   $0xf01080c8,0x8(%esp)$/;"	l
f0103c94	obj/kern/kernel.asm	/^f0103c94:	f0 $/;"	l
f0103c95	obj/kern/kernel.asm	/^f0103c95:	c7 44 24 04 da 01 00 	movl   $0x1da,0x4(%esp)$/;"	l
f0103c9c	obj/kern/kernel.asm	/^f0103c9c:	00 $/;"	l
f0103c9d	obj/kern/kernel.asm	/^f0103c9d:	c7 04 24 44 93 10 f0 	movl   $0xf0109344,(%esp)$/;"	l
f0103ca4	obj/kern/kernel.asm	/^f0103ca4:	e8 97 c3 ff ff       	call   f0100040 <_panic>$/;"	l
f0103ca9	obj/kern/kernel.asm	/^f0103ca9:	c7 47 60 00 00 00 00 	movl   $0x0,0x60(%edi)$/;"	l
f0103cb0	obj/kern/kernel.asm	/^f0103cb0:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103cb5	obj/kern/kernel.asm	/^f0103cb5:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0103cb8	obj/kern/kernel.asm	/^f0103cb8:	3b 05 94 9e 2b f0    	cmp    0xf02b9e94,%eax$/;"	l
f0103cbe	obj/kern/kernel.asm	/^f0103cbe:	72 1c                	jb     f0103cdc <env_free+0x19d>$/;"	l
f0103cc0	obj/kern/kernel.asm	/^f0103cc0:	c7 44 24 08 90 87 10 	movl   $0xf0108790,0x8(%esp)$/;"	l
f0103cc7	obj/kern/kernel.asm	/^f0103cc7:	f0 $/;"	l
f0103cc8	obj/kern/kernel.asm	/^f0103cc8:	c7 44 24 04 51 00 00 	movl   $0x51,0x4(%esp)$/;"	l
f0103ccf	obj/kern/kernel.asm	/^f0103ccf:	00 $/;"	l
f0103cd0	obj/kern/kernel.asm	/^f0103cd0:	c7 04 24 fd 8f 10 f0 	movl   $0xf0108ffd,(%esp)$/;"	l
f0103cd7	obj/kern/kernel.asm	/^f0103cd7:	e8 64 c3 ff ff       	call   f0100040 <_panic>$/;"	l
f0103cdc	obj/kern/kernel.asm	/^f0103cdc:	8b 15 9c 9e 2b f0    	mov    0xf02b9e9c,%edx$/;"	l
f0103ce2	obj/kern/kernel.asm	/^f0103ce2:	8d 04 c2             	lea    (%edx,%eax,8),%eax$/;"	l
f0103ce5	obj/kern/kernel.asm	/^f0103ce5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103ce8	obj/kern/kernel.asm	/^f0103ce8:	e8 1a d5 ff ff       	call   f0101207 <page_decref>$/;"	l
f0103ced	obj/kern/kernel.asm	/^f0103ced:	c7 47 54 00 00 00 00 	movl   $0x0,0x54(%edi)$/;"	l
f0103cf4	obj/kern/kernel.asm	/^f0103cf4:	a1 4c 92 2b f0       	mov    0xf02b924c,%eax$/;"	l
f0103cf9	obj/kern/kernel.asm	/^f0103cf9:	89 47 44             	mov    %eax,0x44(%edi)$/;"	l
f0103cfc	obj/kern/kernel.asm	/^f0103cfc:	89 3d 4c 92 2b f0    	mov    %edi,0xf02b924c$/;"	l
f0103d02	obj/kern/kernel.asm	/^f0103d02:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0103d05	obj/kern/kernel.asm	/^f0103d05:	5b                   	pop    %ebx$/;"	l
f0103d06	obj/kern/kernel.asm	/^f0103d06:	5e                   	pop    %esi$/;"	l
f0103d07	obj/kern/kernel.asm	/^f0103d07:	5f                   	pop    %edi$/;"	l
f0103d08	obj/kern/kernel.asm	/^f0103d08:	5d                   	pop    %ebp$/;"	l
f0103d09	obj/kern/kernel.asm	/^f0103d09:	c3                   	ret    $/;"	l
f0103d0a	obj/kern/kernel.asm	/^f0103d0a <env_destroy>:$/;"	l
f0103d0a	obj/kern/kernel.asm	/^f0103d0a:	55                   	push   %ebp$/;"	l
f0103d0b	obj/kern/kernel.asm	/^f0103d0b:	89 e5                	mov    %esp,%ebp$/;"	l
f0103d0d	obj/kern/kernel.asm	/^f0103d0d:	53                   	push   %ebx$/;"	l
f0103d0e	obj/kern/kernel.asm	/^f0103d0e:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103d11	obj/kern/kernel.asm	/^f0103d11:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0103d14	obj/kern/kernel.asm	/^f0103d14:	83 7b 54 03          	cmpl   $0x3,0x54(%ebx)$/;"	l
f0103d18	obj/kern/kernel.asm	/^f0103d18:	75 19                	jne    f0103d33 <env_destroy+0x29>$/;"	l
f0103d1a	obj/kern/kernel.asm	/^f0103d1a:	e8 ca 2e 00 00       	call   f0106be9 <cpunum>$/;"	l
f0103d1f	obj/kern/kernel.asm	/^f0103d1f:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103d22	obj/kern/kernel.asm	/^f0103d22:	39 98 28 a0 2b f0    	cmp    %ebx,-0xfd45fd8(%eax)$/;"	l
f0103d28	obj/kern/kernel.asm	/^f0103d28:	74 09                	je     f0103d33 <env_destroy+0x29>$/;"	l
f0103d2a	obj/kern/kernel.asm	/^f0103d2a:	c7 43 54 01 00 00 00 	movl   $0x1,0x54(%ebx)$/;"	l
f0103d31	obj/kern/kernel.asm	/^f0103d31:	eb 2f                	jmp    f0103d62 <env_destroy+0x58>$/;"	l
f0103d33	obj/kern/kernel.asm	/^f0103d33:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103d36	obj/kern/kernel.asm	/^f0103d36:	e8 04 fe ff ff       	call   f0103b3f <env_free>$/;"	l
f0103d3b	obj/kern/kernel.asm	/^f0103d3b:	e8 a9 2e 00 00       	call   f0106be9 <cpunum>$/;"	l
f0103d40	obj/kern/kernel.asm	/^f0103d40:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103d43	obj/kern/kernel.asm	/^f0103d43:	39 98 28 a0 2b f0    	cmp    %ebx,-0xfd45fd8(%eax)$/;"	l
f0103d49	obj/kern/kernel.asm	/^f0103d49:	75 17                	jne    f0103d62 <env_destroy+0x58>$/;"	l
f0103d4b	obj/kern/kernel.asm	/^f0103d4b:	e8 99 2e 00 00       	call   f0106be9 <cpunum>$/;"	l
f0103d50	obj/kern/kernel.asm	/^f0103d50:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103d53	obj/kern/kernel.asm	/^f0103d53:	c7 80 28 a0 2b f0 00 	movl   $0x0,-0xfd45fd8(%eax)$/;"	l
f0103d5a	obj/kern/kernel.asm	/^f0103d5a:	00 00 00 $/;"	l
f0103d5d	obj/kern/kernel.asm	/^f0103d5d:	e8 79 11 00 00       	call   f0104edb <sched_yield>$/;"	l
f0103d62	obj/kern/kernel.asm	/^f0103d62:	83 c4 14             	add    $0x14,%esp$/;"	l
f0103d65	obj/kern/kernel.asm	/^f0103d65:	5b                   	pop    %ebx$/;"	l
f0103d66	obj/kern/kernel.asm	/^f0103d66:	5d                   	pop    %ebp$/;"	l
f0103d67	obj/kern/kernel.asm	/^f0103d67:	c3                   	ret    $/;"	l
f0103d68	obj/kern/kernel.asm	/^f0103d68 <env_pop_tf>:$/;"	l
f0103d68	obj/kern/kernel.asm	/^f0103d68:	55                   	push   %ebp$/;"	l
f0103d69	obj/kern/kernel.asm	/^f0103d69:	89 e5                	mov    %esp,%ebp$/;"	l
f0103d6b	obj/kern/kernel.asm	/^f0103d6b:	53                   	push   %ebx$/;"	l
f0103d6c	obj/kern/kernel.asm	/^f0103d6c:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103d6f	obj/kern/kernel.asm	/^f0103d6f:	e8 75 2e 00 00       	call   f0106be9 <cpunum>$/;"	l
f0103d74	obj/kern/kernel.asm	/^f0103d74:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103d77	obj/kern/kernel.asm	/^f0103d77:	8b 98 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%ebx$/;"	l
f0103d7d	obj/kern/kernel.asm	/^f0103d7d:	e8 67 2e 00 00       	call   f0106be9 <cpunum>$/;"	l
f0103d82	obj/kern/kernel.asm	/^f0103d82:	89 43 5c             	mov    %eax,0x5c(%ebx)$/;"	l
f0103d85	obj/kern/kernel.asm	/^f0103d85:	8b 65 08             	mov    0x8(%ebp),%esp$/;"	l
f0103d88	obj/kern/kernel.asm	/^f0103d88:	61                   	popa   $/;"	l
f0103d89	obj/kern/kernel.asm	/^f0103d89:	07                   	pop    %es$/;"	l
f0103d8a	obj/kern/kernel.asm	/^f0103d8a:	1f                   	pop    %ds$/;"	l
f0103d8b	obj/kern/kernel.asm	/^f0103d8b:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103d8e	obj/kern/kernel.asm	/^f0103d8e:	cf                   	iret   $/;"	l
f0103d8f	obj/kern/kernel.asm	/^f0103d8f:	c7 44 24 08 7b 93 10 	movl   $0xf010937b,0x8(%esp)$/;"	l
f0103d96	obj/kern/kernel.asm	/^f0103d96:	f0 $/;"	l
f0103d97	obj/kern/kernel.asm	/^f0103d97:	c7 44 24 04 10 02 00 	movl   $0x210,0x4(%esp)$/;"	l
f0103d9e	obj/kern/kernel.asm	/^f0103d9e:	00 $/;"	l
f0103d9f	obj/kern/kernel.asm	/^f0103d9f:	c7 04 24 44 93 10 f0 	movl   $0xf0109344,(%esp)$/;"	l
f0103da6	obj/kern/kernel.asm	/^f0103da6:	e8 95 c2 ff ff       	call   f0100040 <_panic>$/;"	l
f0103dab	obj/kern/kernel.asm	/^f0103dab <env_run>:$/;"	l
f0103dab	obj/kern/kernel.asm	/^f0103dab:	55                   	push   %ebp$/;"	l
f0103dac	obj/kern/kernel.asm	/^f0103dac:	89 e5                	mov    %esp,%ebp$/;"	l
f0103dae	obj/kern/kernel.asm	/^f0103dae:	53                   	push   %ebx$/;"	l
f0103daf	obj/kern/kernel.asm	/^f0103daf:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103db2	obj/kern/kernel.asm	/^f0103db2:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0103db5	obj/kern/kernel.asm	/^f0103db5:	e8 2f 2e 00 00       	call   f0106be9 <cpunum>$/;"	l
f0103dba	obj/kern/kernel.asm	/^f0103dba:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103dbd	obj/kern/kernel.asm	/^f0103dbd:	83 b8 28 a0 2b f0 00 	cmpl   $0x0,-0xfd45fd8(%eax)$/;"	l
f0103dc4	obj/kern/kernel.asm	/^f0103dc4:	74 29                	je     f0103def <env_run+0x44>$/;"	l
f0103dc6	obj/kern/kernel.asm	/^f0103dc6:	e8 1e 2e 00 00       	call   f0106be9 <cpunum>$/;"	l
f0103dcb	obj/kern/kernel.asm	/^f0103dcb:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103dce	obj/kern/kernel.asm	/^f0103dce:	8b 80 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%eax$/;"	l
f0103dd4	obj/kern/kernel.asm	/^f0103dd4:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f0103dd8	obj/kern/kernel.asm	/^f0103dd8:	75 15                	jne    f0103def <env_run+0x44>$/;"	l
f0103dda	obj/kern/kernel.asm	/^f0103dda:	e8 0a 2e 00 00       	call   f0106be9 <cpunum>$/;"	l
f0103ddf	obj/kern/kernel.asm	/^f0103ddf:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103de2	obj/kern/kernel.asm	/^f0103de2:	8b 80 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%eax$/;"	l
f0103de8	obj/kern/kernel.asm	/^f0103de8:	c7 40 54 02 00 00 00 	movl   $0x2,0x54(%eax)$/;"	l
f0103def	obj/kern/kernel.asm	/^f0103def:	e8 f5 2d 00 00       	call   f0106be9 <cpunum>$/;"	l
f0103df4	obj/kern/kernel.asm	/^f0103df4:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103df7	obj/kern/kernel.asm	/^f0103df7:	89 98 28 a0 2b f0    	mov    %ebx,-0xfd45fd8(%eax)$/;"	l
f0103dfd	obj/kern/kernel.asm	/^f0103dfd:	c7 43 54 03 00 00 00 	movl   $0x3,0x54(%ebx)$/;"	l
f0103e04	obj/kern/kernel.asm	/^f0103e04:	83 43 58 01          	addl   $0x1,0x58(%ebx)$/;"	l
f0103e08	obj/kern/kernel.asm	/^f0103e08:	8b 43 60             	mov    0x60(%ebx),%eax$/;"	l
f0103e0b	obj/kern/kernel.asm	/^f0103e0b:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103e10	obj/kern/kernel.asm	/^f0103e10:	77 20                	ja     f0103e32 <env_run+0x87>$/;"	l
f0103e12	obj/kern/kernel.asm	/^f0103e12:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103e16	obj/kern/kernel.asm	/^f0103e16:	c7 44 24 08 c8 80 10 	movl   $0xf01080c8,0x8(%esp)$/;"	l
f0103e1d	obj/kern/kernel.asm	/^f0103e1d:	f0 $/;"	l
f0103e1e	obj/kern/kernel.asm	/^f0103e1e:	c7 44 24 04 35 02 00 	movl   $0x235,0x4(%esp)$/;"	l
f0103e25	obj/kern/kernel.asm	/^f0103e25:	00 $/;"	l
f0103e26	obj/kern/kernel.asm	/^f0103e26:	c7 04 24 44 93 10 f0 	movl   $0xf0109344,(%esp)$/;"	l
f0103e2d	obj/kern/kernel.asm	/^f0103e2d:	e8 0e c2 ff ff       	call   f0100040 <_panic>$/;"	l
f0103e32	obj/kern/kernel.asm	/^f0103e32:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103e37	obj/kern/kernel.asm	/^f0103e37:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103e3a	obj/kern/kernel.asm	/^f0103e3a:	c7 04 24 c0 53 12 f0 	movl   $0xf01253c0,(%esp)$/;"	l
f0103e41	obj/kern/kernel.asm	/^f0103e41:	e8 cd 30 00 00       	call   f0106f13 <spin_unlock>$/;"	l
f0103e46	obj/kern/kernel.asm	/^f0103e46:	f3 90                	pause  $/;"	l
f0103e48	obj/kern/kernel.asm	/^f0103e48:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103e4b	obj/kern/kernel.asm	/^f0103e4b:	e8 18 ff ff ff       	call   f0103d68 <env_pop_tf>$/;"	l
f0103e50	obj/kern/kernel.asm	/^f0103e50 <mc146818_read>:$/;"	l
f0103e50	obj/kern/kernel.asm	/^f0103e50:	55                   	push   %ebp$/;"	l
f0103e51	obj/kern/kernel.asm	/^f0103e51:	89 e5                	mov    %esp,%ebp$/;"	l
f0103e53	obj/kern/kernel.asm	/^f0103e53:	0f b6 45 08          	movzbl 0x8(%ebp),%eax$/;"	l
f0103e57	obj/kern/kernel.asm	/^f0103e57:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0103e5c	obj/kern/kernel.asm	/^f0103e5c:	ee                   	out    %al,(%dx)$/;"	l
f0103e5d	obj/kern/kernel.asm	/^f0103e5d:	b2 71                	mov    $0x71,%dl$/;"	l
f0103e5f	obj/kern/kernel.asm	/^f0103e5f:	ec                   	in     (%dx),%al$/;"	l
f0103e60	obj/kern/kernel.asm	/^f0103e60:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0103e63	obj/kern/kernel.asm	/^f0103e63:	5d                   	pop    %ebp$/;"	l
f0103e64	obj/kern/kernel.asm	/^f0103e64:	c3                   	ret    $/;"	l
f0103e65	obj/kern/kernel.asm	/^f0103e65 <mc146818_write>:$/;"	l
f0103e65	obj/kern/kernel.asm	/^f0103e65:	55                   	push   %ebp$/;"	l
f0103e66	obj/kern/kernel.asm	/^f0103e66:	89 e5                	mov    %esp,%ebp$/;"	l
f0103e68	obj/kern/kernel.asm	/^f0103e68:	0f b6 45 08          	movzbl 0x8(%ebp),%eax$/;"	l
f0103e6c	obj/kern/kernel.asm	/^f0103e6c:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0103e71	obj/kern/kernel.asm	/^f0103e71:	ee                   	out    %al,(%dx)$/;"	l
f0103e72	obj/kern/kernel.asm	/^f0103e72:	b2 71                	mov    $0x71,%dl$/;"	l
f0103e74	obj/kern/kernel.asm	/^f0103e74:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103e77	obj/kern/kernel.asm	/^f0103e77:	ee                   	out    %al,(%dx)$/;"	l
f0103e78	obj/kern/kernel.asm	/^f0103e78:	5d                   	pop    %ebp$/;"	l
f0103e79	obj/kern/kernel.asm	/^f0103e79:	c3                   	ret    $/;"	l
f0103e7a	obj/kern/kernel.asm	/^f0103e7a <irq_setmask_8259A>:$/;"	l
f0103e7a	obj/kern/kernel.asm	/^f0103e7a:	55                   	push   %ebp$/;"	l
f0103e7b	obj/kern/kernel.asm	/^f0103e7b:	89 e5                	mov    %esp,%ebp$/;"	l
f0103e7d	obj/kern/kernel.asm	/^f0103e7d:	56                   	push   %esi$/;"	l
f0103e7e	obj/kern/kernel.asm	/^f0103e7e:	53                   	push   %ebx$/;"	l
f0103e7f	obj/kern/kernel.asm	/^f0103e7f:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0103e82	obj/kern/kernel.asm	/^f0103e82:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103e85	obj/kern/kernel.asm	/^f0103e85:	66 a3 a8 53 12 f0    	mov    %ax,0xf01253a8$/;"	l
f0103e8b	obj/kern/kernel.asm	/^f0103e8b:	80 3d 50 92 2b f0 00 	cmpb   $0x0,0xf02b9250$/;"	l
f0103e92	obj/kern/kernel.asm	/^f0103e92:	74 4e                	je     f0103ee2 <irq_setmask_8259A+0x68>$/;"	l
f0103e94	obj/kern/kernel.asm	/^f0103e94:	89 c6                	mov    %eax,%esi$/;"	l
f0103e96	obj/kern/kernel.asm	/^f0103e96:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f0103e9b	obj/kern/kernel.asm	/^f0103e9b:	ee                   	out    %al,(%dx)$/;"	l
f0103e9c	obj/kern/kernel.asm	/^f0103e9c:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f0103ea0	obj/kern/kernel.asm	/^f0103ea0:	b2 a1                	mov    $0xa1,%dl$/;"	l
f0103ea2	obj/kern/kernel.asm	/^f0103ea2:	ee                   	out    %al,(%dx)$/;"	l
f0103ea3	obj/kern/kernel.asm	/^f0103ea3:	c7 04 24 ad 93 10 f0 	movl   $0xf01093ad,(%esp)$/;"	l
f0103eaa	obj/kern/kernel.asm	/^f0103eaa:	e8 1d 01 00 00       	call   f0103fcc <cprintf>$/;"	l
f0103eaf	obj/kern/kernel.asm	/^f0103eaf:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0103eb4	obj/kern/kernel.asm	/^f0103eb4:	0f b7 f6             	movzwl %si,%esi$/;"	l
f0103eb7	obj/kern/kernel.asm	/^f0103eb7:	f7 d6                	not    %esi$/;"	l
f0103eb9	obj/kern/kernel.asm	/^f0103eb9:	0f a3 de             	bt     %ebx,%esi$/;"	l
f0103ebc	obj/kern/kernel.asm	/^f0103ebc:	73 10                	jae    f0103ece <irq_setmask_8259A+0x54>$/;"	l
f0103ebe	obj/kern/kernel.asm	/^f0103ebe:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0103ec2	obj/kern/kernel.asm	/^f0103ec2:	c7 04 24 9b 98 10 f0 	movl   $0xf010989b,(%esp)$/;"	l
f0103ec9	obj/kern/kernel.asm	/^f0103ec9:	e8 fe 00 00 00       	call   f0103fcc <cprintf>$/;"	l
f0103ece	obj/kern/kernel.asm	/^f0103ece:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0103ed1	obj/kern/kernel.asm	/^f0103ed1:	83 fb 10             	cmp    $0x10,%ebx$/;"	l
f0103ed4	obj/kern/kernel.asm	/^f0103ed4:	75 e3                	jne    f0103eb9 <irq_setmask_8259A+0x3f>$/;"	l
f0103ed6	obj/kern/kernel.asm	/^f0103ed6:	c7 04 24 fb 92 10 f0 	movl   $0xf01092fb,(%esp)$/;"	l
f0103edd	obj/kern/kernel.asm	/^f0103edd:	e8 ea 00 00 00       	call   f0103fcc <cprintf>$/;"	l
f0103ee2	obj/kern/kernel.asm	/^f0103ee2:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103ee5	obj/kern/kernel.asm	/^f0103ee5:	5b                   	pop    %ebx$/;"	l
f0103ee6	obj/kern/kernel.asm	/^f0103ee6:	5e                   	pop    %esi$/;"	l
f0103ee7	obj/kern/kernel.asm	/^f0103ee7:	5d                   	pop    %ebp$/;"	l
f0103ee8	obj/kern/kernel.asm	/^f0103ee8:	c3                   	ret    $/;"	l
f0103ee9	obj/kern/kernel.asm	/^f0103ee9 <pic_init>:$/;"	l
f0103ee9	obj/kern/kernel.asm	/^f0103ee9:	c6 05 50 92 2b f0 01 	movb   $0x1,0xf02b9250$/;"	l
f0103ef0	obj/kern/kernel.asm	/^f0103ef0:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f0103ef5	obj/kern/kernel.asm	/^f0103ef5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0103efa	obj/kern/kernel.asm	/^f0103efa:	ee                   	out    %al,(%dx)$/;"	l
f0103efb	obj/kern/kernel.asm	/^f0103efb:	b2 a1                	mov    $0xa1,%dl$/;"	l
f0103efd	obj/kern/kernel.asm	/^f0103efd:	ee                   	out    %al,(%dx)$/;"	l
f0103efe	obj/kern/kernel.asm	/^f0103efe:	b2 20                	mov    $0x20,%dl$/;"	l
f0103f00	obj/kern/kernel.asm	/^f0103f00:	b8 11 00 00 00       	mov    $0x11,%eax$/;"	l
f0103f05	obj/kern/kernel.asm	/^f0103f05:	ee                   	out    %al,(%dx)$/;"	l
f0103f06	obj/kern/kernel.asm	/^f0103f06:	b2 21                	mov    $0x21,%dl$/;"	l
f0103f08	obj/kern/kernel.asm	/^f0103f08:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0103f0d	obj/kern/kernel.asm	/^f0103f0d:	ee                   	out    %al,(%dx)$/;"	l
f0103f0e	obj/kern/kernel.asm	/^f0103f0e:	b8 04 00 00 00       	mov    $0x4,%eax$/;"	l
f0103f13	obj/kern/kernel.asm	/^f0103f13:	ee                   	out    %al,(%dx)$/;"	l
f0103f14	obj/kern/kernel.asm	/^f0103f14:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f0103f19	obj/kern/kernel.asm	/^f0103f19:	ee                   	out    %al,(%dx)$/;"	l
f0103f1a	obj/kern/kernel.asm	/^f0103f1a:	b2 a0                	mov    $0xa0,%dl$/;"	l
f0103f1c	obj/kern/kernel.asm	/^f0103f1c:	b8 11 00 00 00       	mov    $0x11,%eax$/;"	l
f0103f21	obj/kern/kernel.asm	/^f0103f21:	ee                   	out    %al,(%dx)$/;"	l
f0103f22	obj/kern/kernel.asm	/^f0103f22:	b2 a1                	mov    $0xa1,%dl$/;"	l
f0103f24	obj/kern/kernel.asm	/^f0103f24:	b8 28 00 00 00       	mov    $0x28,%eax$/;"	l
f0103f29	obj/kern/kernel.asm	/^f0103f29:	ee                   	out    %al,(%dx)$/;"	l
f0103f2a	obj/kern/kernel.asm	/^f0103f2a:	b8 02 00 00 00       	mov    $0x2,%eax$/;"	l
f0103f2f	obj/kern/kernel.asm	/^f0103f2f:	ee                   	out    %al,(%dx)$/;"	l
f0103f30	obj/kern/kernel.asm	/^f0103f30:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0103f35	obj/kern/kernel.asm	/^f0103f35:	ee                   	out    %al,(%dx)$/;"	l
f0103f36	obj/kern/kernel.asm	/^f0103f36:	b2 20                	mov    $0x20,%dl$/;"	l
f0103f38	obj/kern/kernel.asm	/^f0103f38:	b8 68 00 00 00       	mov    $0x68,%eax$/;"	l
f0103f3d	obj/kern/kernel.asm	/^f0103f3d:	ee                   	out    %al,(%dx)$/;"	l
f0103f3e	obj/kern/kernel.asm	/^f0103f3e:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0103f43	obj/kern/kernel.asm	/^f0103f43:	ee                   	out    %al,(%dx)$/;"	l
f0103f44	obj/kern/kernel.asm	/^f0103f44:	b2 a0                	mov    $0xa0,%dl$/;"	l
f0103f46	obj/kern/kernel.asm	/^f0103f46:	b8 68 00 00 00       	mov    $0x68,%eax$/;"	l
f0103f4b	obj/kern/kernel.asm	/^f0103f4b:	ee                   	out    %al,(%dx)$/;"	l
f0103f4c	obj/kern/kernel.asm	/^f0103f4c:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0103f51	obj/kern/kernel.asm	/^f0103f51:	ee                   	out    %al,(%dx)$/;"	l
f0103f52	obj/kern/kernel.asm	/^f0103f52:	0f b7 05 a8 53 12 f0 	movzwl 0xf01253a8,%eax$/;"	l
f0103f59	obj/kern/kernel.asm	/^f0103f59:	66 83 f8 ff          	cmp    $0xffff,%ax$/;"	l
f0103f5d	obj/kern/kernel.asm	/^f0103f5d:	74 12                	je     f0103f71 <pic_init+0x88>$/;"	l
f0103f5f	obj/kern/kernel.asm	/^f0103f5f:	55                   	push   %ebp$/;"	l
f0103f60	obj/kern/kernel.asm	/^f0103f60:	89 e5                	mov    %esp,%ebp$/;"	l
f0103f62	obj/kern/kernel.asm	/^f0103f62:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0103f65	obj/kern/kernel.asm	/^f0103f65:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0103f68	obj/kern/kernel.asm	/^f0103f68:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103f6b	obj/kern/kernel.asm	/^f0103f6b:	e8 0a ff ff ff       	call   f0103e7a <irq_setmask_8259A>$/;"	l
f0103f70	obj/kern/kernel.asm	/^f0103f70:	c9                   	leave  $/;"	l
f0103f71	obj/kern/kernel.asm	/^f0103f71:	f3 c3                	repz ret $/;"	l
f0103f73	obj/kern/kernel.asm	/^f0103f73 <irq_eoi>:$/;"	l
f0103f73	obj/kern/kernel.asm	/^f0103f73:	55                   	push   %ebp$/;"	l
f0103f74	obj/kern/kernel.asm	/^f0103f74:	89 e5                	mov    %esp,%ebp$/;"	l
f0103f76	obj/kern/kernel.asm	/^f0103f76:	ba 20 00 00 00       	mov    $0x20,%edx$/;"	l
f0103f7b	obj/kern/kernel.asm	/^f0103f7b:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0103f80	obj/kern/kernel.asm	/^f0103f80:	ee                   	out    %al,(%dx)$/;"	l
f0103f81	obj/kern/kernel.asm	/^f0103f81:	b2 a0                	mov    $0xa0,%dl$/;"	l
f0103f83	obj/kern/kernel.asm	/^f0103f83:	ee                   	out    %al,(%dx)$/;"	l
f0103f84	obj/kern/kernel.asm	/^f0103f84:	5d                   	pop    %ebp$/;"	l
f0103f85	obj/kern/kernel.asm	/^f0103f85:	c3                   	ret    $/;"	l
f0103f86	obj/kern/kernel.asm	/^f0103f86 <putch>:$/;"	l
f0103f86	obj/kern/kernel.asm	/^f0103f86:	55                   	push   %ebp$/;"	l
f0103f87	obj/kern/kernel.asm	/^f0103f87:	89 e5                	mov    %esp,%ebp$/;"	l
f0103f89	obj/kern/kernel.asm	/^f0103f89:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0103f8c	obj/kern/kernel.asm	/^f0103f8c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103f8f	obj/kern/kernel.asm	/^f0103f8f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103f92	obj/kern/kernel.asm	/^f0103f92:	e8 39 c8 ff ff       	call   f01007d0 <cputchar>$/;"	l
f0103f97	obj/kern/kernel.asm	/^f0103f97:	c9                   	leave  $/;"	l
f0103f98	obj/kern/kernel.asm	/^f0103f98:	c3                   	ret    $/;"	l
f0103f99	obj/kern/kernel.asm	/^f0103f99 <vcprintf>:$/;"	l
f0103f99	obj/kern/kernel.asm	/^f0103f99:	55                   	push   %ebp$/;"	l
f0103f9a	obj/kern/kernel.asm	/^f0103f9a:	89 e5                	mov    %esp,%ebp$/;"	l
f0103f9c	obj/kern/kernel.asm	/^f0103f9c:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0103f9f	obj/kern/kernel.asm	/^f0103f9f:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0103fa6	obj/kern/kernel.asm	/^f0103fa6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103fa9	obj/kern/kernel.asm	/^f0103fa9:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103fad	obj/kern/kernel.asm	/^f0103fad:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103fb0	obj/kern/kernel.asm	/^f0103fb0:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0103fb4	obj/kern/kernel.asm	/^f0103fb4:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0103fb7	obj/kern/kernel.asm	/^f0103fb7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103fbb	obj/kern/kernel.asm	/^f0103fbb:	c7 04 24 86 3f 10 f0 	movl   $0xf0103f86,(%esp)$/;"	l
f0103fc2	obj/kern/kernel.asm	/^f0103fc2:	e8 47 1e 00 00       	call   f0105e0e <vprintfmt>$/;"	l
f0103fc7	obj/kern/kernel.asm	/^f0103fc7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0103fca	obj/kern/kernel.asm	/^f0103fca:	c9                   	leave  $/;"	l
f0103fcb	obj/kern/kernel.asm	/^f0103fcb:	c3                   	ret    $/;"	l
f0103fcc	obj/kern/kernel.asm	/^f0103fcc <cprintf>:$/;"	l
f0103fcc	obj/kern/kernel.asm	/^f0103fcc:	55                   	push   %ebp$/;"	l
f0103fcd	obj/kern/kernel.asm	/^f0103fcd:	89 e5                	mov    %esp,%ebp$/;"	l
f0103fcf	obj/kern/kernel.asm	/^f0103fcf:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0103fd2	obj/kern/kernel.asm	/^f0103fd2:	8d 45 0c             	lea    0xc(%ebp),%eax$/;"	l
f0103fd5	obj/kern/kernel.asm	/^f0103fd5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103fd9	obj/kern/kernel.asm	/^f0103fd9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103fdc	obj/kern/kernel.asm	/^f0103fdc:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103fdf	obj/kern/kernel.asm	/^f0103fdf:	e8 b5 ff ff ff       	call   f0103f99 <vcprintf>$/;"	l
f0103fe4	obj/kern/kernel.asm	/^f0103fe4:	c9                   	leave  $/;"	l
f0103fe5	obj/kern/kernel.asm	/^f0103fe5:	c3                   	ret    $/;"	l
f0103fe6	obj/kern/kernel.asm	/^f0103fe6:	66 90                	xchg   %ax,%ax$/;"	l
f0103fe8	obj/kern/kernel.asm	/^f0103fe8:	66 90                	xchg   %ax,%ax$/;"	l
f0103fea	obj/kern/kernel.asm	/^f0103fea:	66 90                	xchg   %ax,%ax$/;"	l
f0103fec	obj/kern/kernel.asm	/^f0103fec:	66 90                	xchg   %ax,%ax$/;"	l
f0103fee	obj/kern/kernel.asm	/^f0103fee:	66 90                	xchg   %ax,%ax$/;"	l
f0103ff0	obj/kern/kernel.asm	/^f0103ff0 <trap_init_percpu>:$/;"	l
f0103ff0	obj/kern/kernel.asm	/^f0103ff0:	55                   	push   %ebp$/;"	l
f0103ff1	obj/kern/kernel.asm	/^f0103ff1:	89 e5                	mov    %esp,%ebp$/;"	l
f0103ff3	obj/kern/kernel.asm	/^f0103ff3:	57                   	push   %edi$/;"	l
f0103ff4	obj/kern/kernel.asm	/^f0103ff4:	56                   	push   %esi$/;"	l
f0103ff5	obj/kern/kernel.asm	/^f0103ff5:	53                   	push   %ebx$/;"	l
f0103ff6	obj/kern/kernel.asm	/^f0103ff6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103ff9	obj/kern/kernel.asm	/^f0103ff9:	e8 eb 2b 00 00       	call   f0106be9 <cpunum>$/;"	l
f0103ffe	obj/kern/kernel.asm	/^f0103ffe:	89 c3                	mov    %eax,%ebx$/;"	l
f0104000	obj/kern/kernel.asm	/^f0104000:	e8 e4 2b 00 00       	call   f0106be9 <cpunum>$/;"	l
f0104005	obj/kern/kernel.asm	/^f0104005:	6b db 74             	imul   $0x74,%ebx,%ebx$/;"	l
f0104008	obj/kern/kernel.asm	/^f0104008:	f7 d8                	neg    %eax$/;"	l
f010400a	obj/kern/kernel.asm	/^f010400a:	c1 e0 10             	shl    $0x10,%eax$/;"	l
f010400d	obj/kern/kernel.asm	/^f010400d:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0104012	obj/kern/kernel.asm	/^f0104012:	89 83 30 a0 2b f0    	mov    %eax,-0xfd45fd0(%ebx)$/;"	l
f0104018	obj/kern/kernel.asm	/^f0104018:	e8 cc 2b 00 00       	call   f0106be9 <cpunum>$/;"	l
f010401d	obj/kern/kernel.asm	/^f010401d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104020	obj/kern/kernel.asm	/^f0104020:	66 c7 80 34 a0 2b f0 	movw   $0x10,-0xfd45fcc(%eax)$/;"	l
f0104027	obj/kern/kernel.asm	/^f0104027:	10 00 $/;"	l
f0104029	obj/kern/kernel.asm	/^f0104029:	e8 bb 2b 00 00       	call   f0106be9 <cpunum>$/;"	l
f010402e	obj/kern/kernel.asm	/^f010402e:	8d 58 05             	lea    0x5(%eax),%ebx$/;"	l
f0104031	obj/kern/kernel.asm	/^f0104031:	e8 b3 2b 00 00       	call   f0106be9 <cpunum>$/;"	l
f0104036	obj/kern/kernel.asm	/^f0104036:	89 c7                	mov    %eax,%edi$/;"	l
f0104038	obj/kern/kernel.asm	/^f0104038:	e8 ac 2b 00 00       	call   f0106be9 <cpunum>$/;"	l
f010403d	obj/kern/kernel.asm	/^f010403d:	89 c6                	mov    %eax,%esi$/;"	l
f010403f	obj/kern/kernel.asm	/^f010403f:	e8 a5 2b 00 00       	call   f0106be9 <cpunum>$/;"	l
f0104044	obj/kern/kernel.asm	/^f0104044:	66 c7 04 dd 40 53 12 	movw   $0x67,-0xfedacc0(,%ebx,8)$/;"	l
f010404b	obj/kern/kernel.asm	/^f010404b:	f0 67 00 $/;"	l
f010404e	obj/kern/kernel.asm	/^f010404e:	6b ff 74             	imul   $0x74,%edi,%edi$/;"	l
f0104051	obj/kern/kernel.asm	/^f0104051:	81 c7 2c a0 2b f0    	add    $0xf02ba02c,%edi$/;"	l
f0104057	obj/kern/kernel.asm	/^f0104057:	66 89 3c dd 42 53 12 	mov    %di,-0xfedacbe(,%ebx,8)$/;"	l
f010405e	obj/kern/kernel.asm	/^f010405e:	f0 $/;"	l
f010405f	obj/kern/kernel.asm	/^f010405f:	6b d6 74             	imul   $0x74,%esi,%edx$/;"	l
f0104062	obj/kern/kernel.asm	/^f0104062:	81 c2 2c a0 2b f0    	add    $0xf02ba02c,%edx$/;"	l
f0104068	obj/kern/kernel.asm	/^f0104068:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f010406b	obj/kern/kernel.asm	/^f010406b:	88 14 dd 44 53 12 f0 	mov    %dl,-0xfedacbc(,%ebx,8)$/;"	l
f0104072	obj/kern/kernel.asm	/^f0104072:	c6 04 dd 45 53 12 f0 	movb   $0x99,-0xfedacbb(,%ebx,8)$/;"	l
f0104079	obj/kern/kernel.asm	/^f0104079:	99 $/;"	l
f010407a	obj/kern/kernel.asm	/^f010407a:	c6 04 dd 46 53 12 f0 	movb   $0x40,-0xfedacba(,%ebx,8)$/;"	l
f0104081	obj/kern/kernel.asm	/^f0104081:	40 $/;"	l
f0104082	obj/kern/kernel.asm	/^f0104082:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104085	obj/kern/kernel.asm	/^f0104085:	05 2c a0 2b f0       	add    $0xf02ba02c,%eax$/;"	l
f010408a	obj/kern/kernel.asm	/^f010408a:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f010408d	obj/kern/kernel.asm	/^f010408d:	88 04 dd 47 53 12 f0 	mov    %al,-0xfedacb9(,%ebx,8)$/;"	l
f0104094	obj/kern/kernel.asm	/^f0104094:	e8 50 2b 00 00       	call   f0106be9 <cpunum>$/;"	l
f0104099	obj/kern/kernel.asm	/^f0104099:	80 24 c5 6d 53 12 f0 	andb   $0xef,-0xfedac93(,%eax,8)$/;"	l
f01040a0	obj/kern/kernel.asm	/^f01040a0:	ef $/;"	l
f01040a1	obj/kern/kernel.asm	/^f01040a1:	e8 43 2b 00 00       	call   f0106be9 <cpunum>$/;"	l
f01040a6	obj/kern/kernel.asm	/^f01040a6:	8d 04 c5 28 00 00 00 	lea    0x28(,%eax,8),%eax$/;"	l
f01040ad	obj/kern/kernel.asm	/^f01040ad:	0f 00 d8             	ltr    %ax$/;"	l
f01040b0	obj/kern/kernel.asm	/^f01040b0:	b8 aa 53 12 f0       	mov    $0xf01253aa,%eax$/;"	l
f01040b5	obj/kern/kernel.asm	/^f01040b5:	0f 01 18             	lidtl  (%eax)$/;"	l
f01040b8	obj/kern/kernel.asm	/^f01040b8:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01040bb	obj/kern/kernel.asm	/^f01040bb:	5b                   	pop    %ebx$/;"	l
f01040bc	obj/kern/kernel.asm	/^f01040bc:	5e                   	pop    %esi$/;"	l
f01040bd	obj/kern/kernel.asm	/^f01040bd:	5f                   	pop    %edi$/;"	l
f01040be	obj/kern/kernel.asm	/^f01040be:	5d                   	pop    %ebp$/;"	l
f01040bf	obj/kern/kernel.asm	/^f01040bf:	c3                   	ret    $/;"	l
f01040c0	obj/kern/kernel.asm	/^f01040c0 <trap_init>:$/;"	l
f01040c0	obj/kern/kernel.asm	/^f01040c0:	55                   	push   %ebp$/;"	l
f01040c1	obj/kern/kernel.asm	/^f01040c1:	89 e5                	mov    %esp,%ebp$/;"	l
f01040c3	obj/kern/kernel.asm	/^f01040c3:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01040c6	obj/kern/kernel.asm	/^f01040c6:	b8 f4 4c 10 f0       	mov    $0xf0104cf4,%eax$/;"	l
f01040cb	obj/kern/kernel.asm	/^f01040cb:	66 a3 60 92 2b f0    	mov    %ax,0xf02b9260$/;"	l
f01040d1	obj/kern/kernel.asm	/^f01040d1:	66 c7 05 62 92 2b f0 	movw   $0x8,0xf02b9262$/;"	l
f01040d8	obj/kern/kernel.asm	/^f01040d8:	08 00 $/;"	l
f01040da	obj/kern/kernel.asm	/^f01040da:	c6 05 64 92 2b f0 00 	movb   $0x0,0xf02b9264$/;"	l
f01040e1	obj/kern/kernel.asm	/^f01040e1:	c6 05 65 92 2b f0 8e 	movb   $0x8e,0xf02b9265$/;"	l
f01040e8	obj/kern/kernel.asm	/^f01040e8:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01040eb	obj/kern/kernel.asm	/^f01040eb:	66 a3 66 92 2b f0    	mov    %ax,0xf02b9266$/;"	l
f01040f1	obj/kern/kernel.asm	/^f01040f1:	b8 fe 4c 10 f0       	mov    $0xf0104cfe,%eax$/;"	l
f01040f6	obj/kern/kernel.asm	/^f01040f6:	66 a3 68 92 2b f0    	mov    %ax,0xf02b9268$/;"	l
f01040fc	obj/kern/kernel.asm	/^f01040fc:	66 c7 05 6a 92 2b f0 	movw   $0x8,0xf02b926a$/;"	l
f0104103	obj/kern/kernel.asm	/^f0104103:	08 00 $/;"	l
f0104105	obj/kern/kernel.asm	/^f0104105:	c6 05 6c 92 2b f0 00 	movb   $0x0,0xf02b926c$/;"	l
f010410c	obj/kern/kernel.asm	/^f010410c:	c6 05 6d 92 2b f0 8e 	movb   $0x8e,0xf02b926d$/;"	l
f0104113	obj/kern/kernel.asm	/^f0104113:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104116	obj/kern/kernel.asm	/^f0104116:	66 a3 6e 92 2b f0    	mov    %ax,0xf02b926e$/;"	l
f010411c	obj/kern/kernel.asm	/^f010411c:	b8 08 4d 10 f0       	mov    $0xf0104d08,%eax$/;"	l
f0104121	obj/kern/kernel.asm	/^f0104121:	66 a3 70 92 2b f0    	mov    %ax,0xf02b9270$/;"	l
f0104127	obj/kern/kernel.asm	/^f0104127:	66 c7 05 72 92 2b f0 	movw   $0x8,0xf02b9272$/;"	l
f010412e	obj/kern/kernel.asm	/^f010412e:	08 00 $/;"	l
f0104130	obj/kern/kernel.asm	/^f0104130:	c6 05 74 92 2b f0 00 	movb   $0x0,0xf02b9274$/;"	l
f0104137	obj/kern/kernel.asm	/^f0104137:	c6 05 75 92 2b f0 8e 	movb   $0x8e,0xf02b9275$/;"	l
f010413e	obj/kern/kernel.asm	/^f010413e:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104141	obj/kern/kernel.asm	/^f0104141:	66 a3 76 92 2b f0    	mov    %ax,0xf02b9276$/;"	l
f0104147	obj/kern/kernel.asm	/^f0104147:	b8 12 4d 10 f0       	mov    $0xf0104d12,%eax$/;"	l
f010414c	obj/kern/kernel.asm	/^f010414c:	66 a3 78 92 2b f0    	mov    %ax,0xf02b9278$/;"	l
f0104152	obj/kern/kernel.asm	/^f0104152:	66 c7 05 7a 92 2b f0 	movw   $0x8,0xf02b927a$/;"	l
f0104159	obj/kern/kernel.asm	/^f0104159:	08 00 $/;"	l
f010415b	obj/kern/kernel.asm	/^f010415b:	c6 05 7c 92 2b f0 00 	movb   $0x0,0xf02b927c$/;"	l
f0104162	obj/kern/kernel.asm	/^f0104162:	c6 05 7d 92 2b f0 ee 	movb   $0xee,0xf02b927d$/;"	l
f0104169	obj/kern/kernel.asm	/^f0104169:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010416c	obj/kern/kernel.asm	/^f010416c:	66 a3 7e 92 2b f0    	mov    %ax,0xf02b927e$/;"	l
f0104172	obj/kern/kernel.asm	/^f0104172:	b8 1c 4d 10 f0       	mov    $0xf0104d1c,%eax$/;"	l
f0104177	obj/kern/kernel.asm	/^f0104177:	66 a3 80 92 2b f0    	mov    %ax,0xf02b9280$/;"	l
f010417d	obj/kern/kernel.asm	/^f010417d:	66 c7 05 82 92 2b f0 	movw   $0x8,0xf02b9282$/;"	l
f0104184	obj/kern/kernel.asm	/^f0104184:	08 00 $/;"	l
f0104186	obj/kern/kernel.asm	/^f0104186:	c6 05 84 92 2b f0 00 	movb   $0x0,0xf02b9284$/;"	l
f010418d	obj/kern/kernel.asm	/^f010418d:	c6 05 85 92 2b f0 8e 	movb   $0x8e,0xf02b9285$/;"	l
f0104194	obj/kern/kernel.asm	/^f0104194:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104197	obj/kern/kernel.asm	/^f0104197:	66 a3 86 92 2b f0    	mov    %ax,0xf02b9286$/;"	l
f010419d	obj/kern/kernel.asm	/^f010419d:	b8 26 4d 10 f0       	mov    $0xf0104d26,%eax$/;"	l
f01041a2	obj/kern/kernel.asm	/^f01041a2:	66 a3 88 92 2b f0    	mov    %ax,0xf02b9288$/;"	l
f01041a8	obj/kern/kernel.asm	/^f01041a8:	66 c7 05 8a 92 2b f0 	movw   $0x8,0xf02b928a$/;"	l
f01041af	obj/kern/kernel.asm	/^f01041af:	08 00 $/;"	l
f01041b1	obj/kern/kernel.asm	/^f01041b1:	c6 05 8c 92 2b f0 00 	movb   $0x0,0xf02b928c$/;"	l
f01041b8	obj/kern/kernel.asm	/^f01041b8:	c6 05 8d 92 2b f0 8e 	movb   $0x8e,0xf02b928d$/;"	l
f01041bf	obj/kern/kernel.asm	/^f01041bf:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01041c2	obj/kern/kernel.asm	/^f01041c2:	66 a3 8e 92 2b f0    	mov    %ax,0xf02b928e$/;"	l
f01041c8	obj/kern/kernel.asm	/^f01041c8:	b8 30 4d 10 f0       	mov    $0xf0104d30,%eax$/;"	l
f01041cd	obj/kern/kernel.asm	/^f01041cd:	66 a3 90 92 2b f0    	mov    %ax,0xf02b9290$/;"	l
f01041d3	obj/kern/kernel.asm	/^f01041d3:	66 c7 05 92 92 2b f0 	movw   $0x8,0xf02b9292$/;"	l
f01041da	obj/kern/kernel.asm	/^f01041da:	08 00 $/;"	l
f01041dc	obj/kern/kernel.asm	/^f01041dc:	c6 05 94 92 2b f0 00 	movb   $0x0,0xf02b9294$/;"	l
f01041e3	obj/kern/kernel.asm	/^f01041e3:	c6 05 95 92 2b f0 8e 	movb   $0x8e,0xf02b9295$/;"	l
f01041ea	obj/kern/kernel.asm	/^f01041ea:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01041ed	obj/kern/kernel.asm	/^f01041ed:	66 a3 96 92 2b f0    	mov    %ax,0xf02b9296$/;"	l
f01041f3	obj/kern/kernel.asm	/^f01041f3:	b8 3a 4d 10 f0       	mov    $0xf0104d3a,%eax$/;"	l
f01041f8	obj/kern/kernel.asm	/^f01041f8:	66 a3 98 92 2b f0    	mov    %ax,0xf02b9298$/;"	l
f01041fe	obj/kern/kernel.asm	/^f01041fe:	66 c7 05 9a 92 2b f0 	movw   $0x8,0xf02b929a$/;"	l
f0104205	obj/kern/kernel.asm	/^f0104205:	08 00 $/;"	l
f0104207	obj/kern/kernel.asm	/^f0104207:	c6 05 9c 92 2b f0 00 	movb   $0x0,0xf02b929c$/;"	l
f010420e	obj/kern/kernel.asm	/^f010420e:	c6 05 9d 92 2b f0 8e 	movb   $0x8e,0xf02b929d$/;"	l
f0104215	obj/kern/kernel.asm	/^f0104215:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104218	obj/kern/kernel.asm	/^f0104218:	66 a3 9e 92 2b f0    	mov    %ax,0xf02b929e$/;"	l
f010421e	obj/kern/kernel.asm	/^f010421e:	b8 44 4d 10 f0       	mov    $0xf0104d44,%eax$/;"	l
f0104223	obj/kern/kernel.asm	/^f0104223:	66 a3 a0 92 2b f0    	mov    %ax,0xf02b92a0$/;"	l
f0104229	obj/kern/kernel.asm	/^f0104229:	66 c7 05 a2 92 2b f0 	movw   $0x8,0xf02b92a2$/;"	l
f0104230	obj/kern/kernel.asm	/^f0104230:	08 00 $/;"	l
f0104232	obj/kern/kernel.asm	/^f0104232:	c6 05 a4 92 2b f0 00 	movb   $0x0,0xf02b92a4$/;"	l
f0104239	obj/kern/kernel.asm	/^f0104239:	c6 05 a5 92 2b f0 8e 	movb   $0x8e,0xf02b92a5$/;"	l
f0104240	obj/kern/kernel.asm	/^f0104240:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104243	obj/kern/kernel.asm	/^f0104243:	66 a3 a6 92 2b f0    	mov    %ax,0xf02b92a6$/;"	l
f0104249	obj/kern/kernel.asm	/^f0104249:	b8 4c 4d 10 f0       	mov    $0xf0104d4c,%eax$/;"	l
f010424e	obj/kern/kernel.asm	/^f010424e:	66 a3 b0 92 2b f0    	mov    %ax,0xf02b92b0$/;"	l
f0104254	obj/kern/kernel.asm	/^f0104254:	66 c7 05 b2 92 2b f0 	movw   $0x8,0xf02b92b2$/;"	l
f010425b	obj/kern/kernel.asm	/^f010425b:	08 00 $/;"	l
f010425d	obj/kern/kernel.asm	/^f010425d:	c6 05 b4 92 2b f0 00 	movb   $0x0,0xf02b92b4$/;"	l
f0104264	obj/kern/kernel.asm	/^f0104264:	c6 05 b5 92 2b f0 8e 	movb   $0x8e,0xf02b92b5$/;"	l
f010426b	obj/kern/kernel.asm	/^f010426b:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010426e	obj/kern/kernel.asm	/^f010426e:	66 a3 b6 92 2b f0    	mov    %ax,0xf02b92b6$/;"	l
f0104274	obj/kern/kernel.asm	/^f0104274:	b8 54 4d 10 f0       	mov    $0xf0104d54,%eax$/;"	l
f0104279	obj/kern/kernel.asm	/^f0104279:	66 a3 b8 92 2b f0    	mov    %ax,0xf02b92b8$/;"	l
f010427f	obj/kern/kernel.asm	/^f010427f:	66 c7 05 ba 92 2b f0 	movw   $0x8,0xf02b92ba$/;"	l
f0104286	obj/kern/kernel.asm	/^f0104286:	08 00 $/;"	l
f0104288	obj/kern/kernel.asm	/^f0104288:	c6 05 bc 92 2b f0 00 	movb   $0x0,0xf02b92bc$/;"	l
f010428f	obj/kern/kernel.asm	/^f010428f:	c6 05 bd 92 2b f0 8e 	movb   $0x8e,0xf02b92bd$/;"	l
f0104296	obj/kern/kernel.asm	/^f0104296:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104299	obj/kern/kernel.asm	/^f0104299:	66 a3 be 92 2b f0    	mov    %ax,0xf02b92be$/;"	l
f010429f	obj/kern/kernel.asm	/^f010429f:	b8 5c 4d 10 f0       	mov    $0xf0104d5c,%eax$/;"	l
f01042a4	obj/kern/kernel.asm	/^f01042a4:	66 a3 c0 92 2b f0    	mov    %ax,0xf02b92c0$/;"	l
f01042aa	obj/kern/kernel.asm	/^f01042aa:	66 c7 05 c2 92 2b f0 	movw   $0x8,0xf02b92c2$/;"	l
f01042b1	obj/kern/kernel.asm	/^f01042b1:	08 00 $/;"	l
f01042b3	obj/kern/kernel.asm	/^f01042b3:	c6 05 c4 92 2b f0 00 	movb   $0x0,0xf02b92c4$/;"	l
f01042ba	obj/kern/kernel.asm	/^f01042ba:	c6 05 c5 92 2b f0 8e 	movb   $0x8e,0xf02b92c5$/;"	l
f01042c1	obj/kern/kernel.asm	/^f01042c1:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01042c4	obj/kern/kernel.asm	/^f01042c4:	66 a3 c6 92 2b f0    	mov    %ax,0xf02b92c6$/;"	l
f01042ca	obj/kern/kernel.asm	/^f01042ca:	b8 64 4d 10 f0       	mov    $0xf0104d64,%eax$/;"	l
f01042cf	obj/kern/kernel.asm	/^f01042cf:	66 a3 c8 92 2b f0    	mov    %ax,0xf02b92c8$/;"	l
f01042d5	obj/kern/kernel.asm	/^f01042d5:	66 c7 05 ca 92 2b f0 	movw   $0x8,0xf02b92ca$/;"	l
f01042dc	obj/kern/kernel.asm	/^f01042dc:	08 00 $/;"	l
f01042de	obj/kern/kernel.asm	/^f01042de:	c6 05 cc 92 2b f0 00 	movb   $0x0,0xf02b92cc$/;"	l
f01042e5	obj/kern/kernel.asm	/^f01042e5:	c6 05 cd 92 2b f0 8e 	movb   $0x8e,0xf02b92cd$/;"	l
f01042ec	obj/kern/kernel.asm	/^f01042ec:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01042ef	obj/kern/kernel.asm	/^f01042ef:	66 a3 ce 92 2b f0    	mov    %ax,0xf02b92ce$/;"	l
f01042f5	obj/kern/kernel.asm	/^f01042f5:	b8 6c 4d 10 f0       	mov    $0xf0104d6c,%eax$/;"	l
f01042fa	obj/kern/kernel.asm	/^f01042fa:	66 a3 d0 92 2b f0    	mov    %ax,0xf02b92d0$/;"	l
f0104300	obj/kern/kernel.asm	/^f0104300:	66 c7 05 d2 92 2b f0 	movw   $0x8,0xf02b92d2$/;"	l
f0104307	obj/kern/kernel.asm	/^f0104307:	08 00 $/;"	l
f0104309	obj/kern/kernel.asm	/^f0104309:	c6 05 d4 92 2b f0 00 	movb   $0x0,0xf02b92d4$/;"	l
f0104310	obj/kern/kernel.asm	/^f0104310:	c6 05 d5 92 2b f0 8e 	movb   $0x8e,0xf02b92d5$/;"	l
f0104317	obj/kern/kernel.asm	/^f0104317:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010431a	obj/kern/kernel.asm	/^f010431a:	66 a3 d6 92 2b f0    	mov    %ax,0xf02b92d6$/;"	l
f0104320	obj/kern/kernel.asm	/^f0104320:	b8 70 4d 10 f0       	mov    $0xf0104d70,%eax$/;"	l
f0104325	obj/kern/kernel.asm	/^f0104325:	66 a3 e0 92 2b f0    	mov    %ax,0xf02b92e0$/;"	l
f010432b	obj/kern/kernel.asm	/^f010432b:	66 c7 05 e2 92 2b f0 	movw   $0x8,0xf02b92e2$/;"	l
f0104332	obj/kern/kernel.asm	/^f0104332:	08 00 $/;"	l
f0104334	obj/kern/kernel.asm	/^f0104334:	c6 05 e4 92 2b f0 00 	movb   $0x0,0xf02b92e4$/;"	l
f010433b	obj/kern/kernel.asm	/^f010433b:	c6 05 e5 92 2b f0 8e 	movb   $0x8e,0xf02b92e5$/;"	l
f0104342	obj/kern/kernel.asm	/^f0104342:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104345	obj/kern/kernel.asm	/^f0104345:	66 a3 e6 92 2b f0    	mov    %ax,0xf02b92e6$/;"	l
f010434b	obj/kern/kernel.asm	/^f010434b:	b8 76 4d 10 f0       	mov    $0xf0104d76,%eax$/;"	l
f0104350	obj/kern/kernel.asm	/^f0104350:	66 a3 e8 92 2b f0    	mov    %ax,0xf02b92e8$/;"	l
f0104356	obj/kern/kernel.asm	/^f0104356:	66 c7 05 ea 92 2b f0 	movw   $0x8,0xf02b92ea$/;"	l
f010435d	obj/kern/kernel.asm	/^f010435d:	08 00 $/;"	l
f010435f	obj/kern/kernel.asm	/^f010435f:	c6 05 ec 92 2b f0 00 	movb   $0x0,0xf02b92ec$/;"	l
f0104366	obj/kern/kernel.asm	/^f0104366:	c6 05 ed 92 2b f0 8e 	movb   $0x8e,0xf02b92ed$/;"	l
f010436d	obj/kern/kernel.asm	/^f010436d:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104370	obj/kern/kernel.asm	/^f0104370:	66 a3 ee 92 2b f0    	mov    %ax,0xf02b92ee$/;"	l
f0104376	obj/kern/kernel.asm	/^f0104376:	b8 7a 4d 10 f0       	mov    $0xf0104d7a,%eax$/;"	l
f010437b	obj/kern/kernel.asm	/^f010437b:	66 a3 f0 92 2b f0    	mov    %ax,0xf02b92f0$/;"	l
f0104381	obj/kern/kernel.asm	/^f0104381:	66 c7 05 f2 92 2b f0 	movw   $0x8,0xf02b92f2$/;"	l
f0104388	obj/kern/kernel.asm	/^f0104388:	08 00 $/;"	l
f010438a	obj/kern/kernel.asm	/^f010438a:	c6 05 f4 92 2b f0 00 	movb   $0x0,0xf02b92f4$/;"	l
f0104391	obj/kern/kernel.asm	/^f0104391:	c6 05 f5 92 2b f0 8e 	movb   $0x8e,0xf02b92f5$/;"	l
f0104398	obj/kern/kernel.asm	/^f0104398:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010439b	obj/kern/kernel.asm	/^f010439b:	66 a3 f6 92 2b f0    	mov    %ax,0xf02b92f6$/;"	l
f01043a1	obj/kern/kernel.asm	/^f01043a1:	b8 80 4d 10 f0       	mov    $0xf0104d80,%eax$/;"	l
f01043a6	obj/kern/kernel.asm	/^f01043a6:	66 a3 f8 92 2b f0    	mov    %ax,0xf02b92f8$/;"	l
f01043ac	obj/kern/kernel.asm	/^f01043ac:	66 c7 05 fa 92 2b f0 	movw   $0x8,0xf02b92fa$/;"	l
f01043b3	obj/kern/kernel.asm	/^f01043b3:	08 00 $/;"	l
f01043b5	obj/kern/kernel.asm	/^f01043b5:	c6 05 fc 92 2b f0 00 	movb   $0x0,0xf02b92fc$/;"	l
f01043bc	obj/kern/kernel.asm	/^f01043bc:	c6 05 fd 92 2b f0 8e 	movb   $0x8e,0xf02b92fd$/;"	l
f01043c3	obj/kern/kernel.asm	/^f01043c3:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01043c6	obj/kern/kernel.asm	/^f01043c6:	66 a3 fe 92 2b f0    	mov    %ax,0xf02b92fe$/;"	l
f01043cc	obj/kern/kernel.asm	/^f01043cc:	b8 86 4d 10 f0       	mov    $0xf0104d86,%eax$/;"	l
f01043d1	obj/kern/kernel.asm	/^f01043d1:	66 a3 e0 93 2b f0    	mov    %ax,0xf02b93e0$/;"	l
f01043d7	obj/kern/kernel.asm	/^f01043d7:	66 c7 05 e2 93 2b f0 	movw   $0x8,0xf02b93e2$/;"	l
f01043de	obj/kern/kernel.asm	/^f01043de:	08 00 $/;"	l
f01043e0	obj/kern/kernel.asm	/^f01043e0:	c6 05 e4 93 2b f0 00 	movb   $0x0,0xf02b93e4$/;"	l
f01043e7	obj/kern/kernel.asm	/^f01043e7:	c6 05 e5 93 2b f0 ee 	movb   $0xee,0xf02b93e5$/;"	l
f01043ee	obj/kern/kernel.asm	/^f01043ee:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01043f1	obj/kern/kernel.asm	/^f01043f1:	66 a3 e6 93 2b f0    	mov    %ax,0xf02b93e6$/;"	l
f01043f7	obj/kern/kernel.asm	/^f01043f7:	b8 8c 4d 10 f0       	mov    $0xf0104d8c,%eax$/;"	l
f01043fc	obj/kern/kernel.asm	/^f01043fc:	66 a3 60 93 2b f0    	mov    %ax,0xf02b9360$/;"	l
f0104402	obj/kern/kernel.asm	/^f0104402:	66 c7 05 62 93 2b f0 	movw   $0x8,0xf02b9362$/;"	l
f0104409	obj/kern/kernel.asm	/^f0104409:	08 00 $/;"	l
f010440b	obj/kern/kernel.asm	/^f010440b:	c6 05 64 93 2b f0 00 	movb   $0x0,0xf02b9364$/;"	l
f0104412	obj/kern/kernel.asm	/^f0104412:	c6 05 65 93 2b f0 8e 	movb   $0x8e,0xf02b9365$/;"	l
f0104419	obj/kern/kernel.asm	/^f0104419:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010441c	obj/kern/kernel.asm	/^f010441c:	66 a3 66 93 2b f0    	mov    %ax,0xf02b9366$/;"	l
f0104422	obj/kern/kernel.asm	/^f0104422:	b8 92 4d 10 f0       	mov    $0xf0104d92,%eax$/;"	l
f0104427	obj/kern/kernel.asm	/^f0104427:	66 a3 68 93 2b f0    	mov    %ax,0xf02b9368$/;"	l
f010442d	obj/kern/kernel.asm	/^f010442d:	66 c7 05 6a 93 2b f0 	movw   $0x8,0xf02b936a$/;"	l
f0104434	obj/kern/kernel.asm	/^f0104434:	08 00 $/;"	l
f0104436	obj/kern/kernel.asm	/^f0104436:	c6 05 6c 93 2b f0 00 	movb   $0x0,0xf02b936c$/;"	l
f010443d	obj/kern/kernel.asm	/^f010443d:	c6 05 6d 93 2b f0 8e 	movb   $0x8e,0xf02b936d$/;"	l
f0104444	obj/kern/kernel.asm	/^f0104444:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104447	obj/kern/kernel.asm	/^f0104447:	66 a3 6e 93 2b f0    	mov    %ax,0xf02b936e$/;"	l
f010444d	obj/kern/kernel.asm	/^f010444d:	b8 98 4d 10 f0       	mov    $0xf0104d98,%eax$/;"	l
f0104452	obj/kern/kernel.asm	/^f0104452:	66 a3 70 93 2b f0    	mov    %ax,0xf02b9370$/;"	l
f0104458	obj/kern/kernel.asm	/^f0104458:	66 c7 05 72 93 2b f0 	movw   $0x8,0xf02b9372$/;"	l
f010445f	obj/kern/kernel.asm	/^f010445f:	08 00 $/;"	l
f0104461	obj/kern/kernel.asm	/^f0104461:	c6 05 74 93 2b f0 00 	movb   $0x0,0xf02b9374$/;"	l
f0104468	obj/kern/kernel.asm	/^f0104468:	c6 05 75 93 2b f0 8e 	movb   $0x8e,0xf02b9375$/;"	l
f010446f	obj/kern/kernel.asm	/^f010446f:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104472	obj/kern/kernel.asm	/^f0104472:	66 a3 76 93 2b f0    	mov    %ax,0xf02b9376$/;"	l
f0104478	obj/kern/kernel.asm	/^f0104478:	b8 9e 4d 10 f0       	mov    $0xf0104d9e,%eax$/;"	l
f010447d	obj/kern/kernel.asm	/^f010447d:	66 a3 78 93 2b f0    	mov    %ax,0xf02b9378$/;"	l
f0104483	obj/kern/kernel.asm	/^f0104483:	66 c7 05 7a 93 2b f0 	movw   $0x8,0xf02b937a$/;"	l
f010448a	obj/kern/kernel.asm	/^f010448a:	08 00 $/;"	l
f010448c	obj/kern/kernel.asm	/^f010448c:	c6 05 7c 93 2b f0 00 	movb   $0x0,0xf02b937c$/;"	l
f0104493	obj/kern/kernel.asm	/^f0104493:	c6 05 7d 93 2b f0 8e 	movb   $0x8e,0xf02b937d$/;"	l
f010449a	obj/kern/kernel.asm	/^f010449a:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010449d	obj/kern/kernel.asm	/^f010449d:	66 a3 7e 93 2b f0    	mov    %ax,0xf02b937e$/;"	l
f01044a3	obj/kern/kernel.asm	/^f01044a3:	b8 a4 4d 10 f0       	mov    $0xf0104da4,%eax$/;"	l
f01044a8	obj/kern/kernel.asm	/^f01044a8:	66 a3 80 93 2b f0    	mov    %ax,0xf02b9380$/;"	l
f01044ae	obj/kern/kernel.asm	/^f01044ae:	66 c7 05 82 93 2b f0 	movw   $0x8,0xf02b9382$/;"	l
f01044b5	obj/kern/kernel.asm	/^f01044b5:	08 00 $/;"	l
f01044b7	obj/kern/kernel.asm	/^f01044b7:	c6 05 84 93 2b f0 00 	movb   $0x0,0xf02b9384$/;"	l
f01044be	obj/kern/kernel.asm	/^f01044be:	c6 05 85 93 2b f0 8e 	movb   $0x8e,0xf02b9385$/;"	l
f01044c5	obj/kern/kernel.asm	/^f01044c5:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01044c8	obj/kern/kernel.asm	/^f01044c8:	66 a3 86 93 2b f0    	mov    %ax,0xf02b9386$/;"	l
f01044ce	obj/kern/kernel.asm	/^f01044ce:	b8 aa 4d 10 f0       	mov    $0xf0104daa,%eax$/;"	l
f01044d3	obj/kern/kernel.asm	/^f01044d3:	66 a3 88 93 2b f0    	mov    %ax,0xf02b9388$/;"	l
f01044d9	obj/kern/kernel.asm	/^f01044d9:	66 c7 05 8a 93 2b f0 	movw   $0x8,0xf02b938a$/;"	l
f01044e0	obj/kern/kernel.asm	/^f01044e0:	08 00 $/;"	l
f01044e2	obj/kern/kernel.asm	/^f01044e2:	c6 05 8c 93 2b f0 00 	movb   $0x0,0xf02b938c$/;"	l
f01044e9	obj/kern/kernel.asm	/^f01044e9:	c6 05 8d 93 2b f0 8e 	movb   $0x8e,0xf02b938d$/;"	l
f01044f0	obj/kern/kernel.asm	/^f01044f0:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01044f3	obj/kern/kernel.asm	/^f01044f3:	66 a3 8e 93 2b f0    	mov    %ax,0xf02b938e$/;"	l
f01044f9	obj/kern/kernel.asm	/^f01044f9:	b8 b0 4d 10 f0       	mov    $0xf0104db0,%eax$/;"	l
f01044fe	obj/kern/kernel.asm	/^f01044fe:	66 a3 90 93 2b f0    	mov    %ax,0xf02b9390$/;"	l
f0104504	obj/kern/kernel.asm	/^f0104504:	66 c7 05 92 93 2b f0 	movw   $0x8,0xf02b9392$/;"	l
f010450b	obj/kern/kernel.asm	/^f010450b:	08 00 $/;"	l
f010450d	obj/kern/kernel.asm	/^f010450d:	c6 05 94 93 2b f0 00 	movb   $0x0,0xf02b9394$/;"	l
f0104514	obj/kern/kernel.asm	/^f0104514:	c6 05 95 93 2b f0 8e 	movb   $0x8e,0xf02b9395$/;"	l
f010451b	obj/kern/kernel.asm	/^f010451b:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010451e	obj/kern/kernel.asm	/^f010451e:	66 a3 96 93 2b f0    	mov    %ax,0xf02b9396$/;"	l
f0104524	obj/kern/kernel.asm	/^f0104524:	b8 b6 4d 10 f0       	mov    $0xf0104db6,%eax$/;"	l
f0104529	obj/kern/kernel.asm	/^f0104529:	66 a3 98 93 2b f0    	mov    %ax,0xf02b9398$/;"	l
f010452f	obj/kern/kernel.asm	/^f010452f:	66 c7 05 9a 93 2b f0 	movw   $0x8,0xf02b939a$/;"	l
f0104536	obj/kern/kernel.asm	/^f0104536:	08 00 $/;"	l
f0104538	obj/kern/kernel.asm	/^f0104538:	c6 05 9c 93 2b f0 00 	movb   $0x0,0xf02b939c$/;"	l
f010453f	obj/kern/kernel.asm	/^f010453f:	c6 05 9d 93 2b f0 8e 	movb   $0x8e,0xf02b939d$/;"	l
f0104546	obj/kern/kernel.asm	/^f0104546:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104549	obj/kern/kernel.asm	/^f0104549:	66 a3 9e 93 2b f0    	mov    %ax,0xf02b939e$/;"	l
f010454f	obj/kern/kernel.asm	/^f010454f:	b8 bc 4d 10 f0       	mov    $0xf0104dbc,%eax$/;"	l
f0104554	obj/kern/kernel.asm	/^f0104554:	66 a3 a0 93 2b f0    	mov    %ax,0xf02b93a0$/;"	l
f010455a	obj/kern/kernel.asm	/^f010455a:	66 c7 05 a2 93 2b f0 	movw   $0x8,0xf02b93a2$/;"	l
f0104561	obj/kern/kernel.asm	/^f0104561:	08 00 $/;"	l
f0104563	obj/kern/kernel.asm	/^f0104563:	c6 05 a4 93 2b f0 00 	movb   $0x0,0xf02b93a4$/;"	l
f010456a	obj/kern/kernel.asm	/^f010456a:	c6 05 a5 93 2b f0 8e 	movb   $0x8e,0xf02b93a5$/;"	l
f0104571	obj/kern/kernel.asm	/^f0104571:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104574	obj/kern/kernel.asm	/^f0104574:	66 a3 a6 93 2b f0    	mov    %ax,0xf02b93a6$/;"	l
f010457a	obj/kern/kernel.asm	/^f010457a:	b8 c2 4d 10 f0       	mov    $0xf0104dc2,%eax$/;"	l
f010457f	obj/kern/kernel.asm	/^f010457f:	66 a3 a8 93 2b f0    	mov    %ax,0xf02b93a8$/;"	l
f0104585	obj/kern/kernel.asm	/^f0104585:	66 c7 05 aa 93 2b f0 	movw   $0x8,0xf02b93aa$/;"	l
f010458c	obj/kern/kernel.asm	/^f010458c:	08 00 $/;"	l
f010458e	obj/kern/kernel.asm	/^f010458e:	c6 05 ac 93 2b f0 00 	movb   $0x0,0xf02b93ac$/;"	l
f0104595	obj/kern/kernel.asm	/^f0104595:	c6 05 ad 93 2b f0 8e 	movb   $0x8e,0xf02b93ad$/;"	l
f010459c	obj/kern/kernel.asm	/^f010459c:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010459f	obj/kern/kernel.asm	/^f010459f:	66 a3 ae 93 2b f0    	mov    %ax,0xf02b93ae$/;"	l
f01045a5	obj/kern/kernel.asm	/^f01045a5:	b8 c8 4d 10 f0       	mov    $0xf0104dc8,%eax$/;"	l
f01045aa	obj/kern/kernel.asm	/^f01045aa:	66 a3 b0 93 2b f0    	mov    %ax,0xf02b93b0$/;"	l
f01045b0	obj/kern/kernel.asm	/^f01045b0:	66 c7 05 b2 93 2b f0 	movw   $0x8,0xf02b93b2$/;"	l
f01045b7	obj/kern/kernel.asm	/^f01045b7:	08 00 $/;"	l
f01045b9	obj/kern/kernel.asm	/^f01045b9:	c6 05 b4 93 2b f0 00 	movb   $0x0,0xf02b93b4$/;"	l
f01045c0	obj/kern/kernel.asm	/^f01045c0:	c6 05 b5 93 2b f0 8e 	movb   $0x8e,0xf02b93b5$/;"	l
f01045c7	obj/kern/kernel.asm	/^f01045c7:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01045ca	obj/kern/kernel.asm	/^f01045ca:	66 a3 b6 93 2b f0    	mov    %ax,0xf02b93b6$/;"	l
f01045d0	obj/kern/kernel.asm	/^f01045d0:	b8 ce 4d 10 f0       	mov    $0xf0104dce,%eax$/;"	l
f01045d5	obj/kern/kernel.asm	/^f01045d5:	66 a3 b8 93 2b f0    	mov    %ax,0xf02b93b8$/;"	l
f01045db	obj/kern/kernel.asm	/^f01045db:	66 c7 05 ba 93 2b f0 	movw   $0x8,0xf02b93ba$/;"	l
f01045e2	obj/kern/kernel.asm	/^f01045e2:	08 00 $/;"	l
f01045e4	obj/kern/kernel.asm	/^f01045e4:	c6 05 bc 93 2b f0 00 	movb   $0x0,0xf02b93bc$/;"	l
f01045eb	obj/kern/kernel.asm	/^f01045eb:	c6 05 bd 93 2b f0 8e 	movb   $0x8e,0xf02b93bd$/;"	l
f01045f2	obj/kern/kernel.asm	/^f01045f2:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01045f5	obj/kern/kernel.asm	/^f01045f5:	66 a3 be 93 2b f0    	mov    %ax,0xf02b93be$/;"	l
f01045fb	obj/kern/kernel.asm	/^f01045fb:	b8 d4 4d 10 f0       	mov    $0xf0104dd4,%eax$/;"	l
f0104600	obj/kern/kernel.asm	/^f0104600:	66 a3 c0 93 2b f0    	mov    %ax,0xf02b93c0$/;"	l
f0104606	obj/kern/kernel.asm	/^f0104606:	66 c7 05 c2 93 2b f0 	movw   $0x8,0xf02b93c2$/;"	l
f010460d	obj/kern/kernel.asm	/^f010460d:	08 00 $/;"	l
f010460f	obj/kern/kernel.asm	/^f010460f:	c6 05 c4 93 2b f0 00 	movb   $0x0,0xf02b93c4$/;"	l
f0104616	obj/kern/kernel.asm	/^f0104616:	c6 05 c5 93 2b f0 8e 	movb   $0x8e,0xf02b93c5$/;"	l
f010461d	obj/kern/kernel.asm	/^f010461d:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104620	obj/kern/kernel.asm	/^f0104620:	66 a3 c6 93 2b f0    	mov    %ax,0xf02b93c6$/;"	l
f0104626	obj/kern/kernel.asm	/^f0104626:	b8 da 4d 10 f0       	mov    $0xf0104dda,%eax$/;"	l
f010462b	obj/kern/kernel.asm	/^f010462b:	66 a3 c8 93 2b f0    	mov    %ax,0xf02b93c8$/;"	l
f0104631	obj/kern/kernel.asm	/^f0104631:	66 c7 05 ca 93 2b f0 	movw   $0x8,0xf02b93ca$/;"	l
f0104638	obj/kern/kernel.asm	/^f0104638:	08 00 $/;"	l
f010463a	obj/kern/kernel.asm	/^f010463a:	c6 05 cc 93 2b f0 00 	movb   $0x0,0xf02b93cc$/;"	l
f0104641	obj/kern/kernel.asm	/^f0104641:	c6 05 cd 93 2b f0 8e 	movb   $0x8e,0xf02b93cd$/;"	l
f0104648	obj/kern/kernel.asm	/^f0104648:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010464b	obj/kern/kernel.asm	/^f010464b:	66 a3 ce 93 2b f0    	mov    %ax,0xf02b93ce$/;"	l
f0104651	obj/kern/kernel.asm	/^f0104651:	b8 e0 4d 10 f0       	mov    $0xf0104de0,%eax$/;"	l
f0104656	obj/kern/kernel.asm	/^f0104656:	66 a3 d0 93 2b f0    	mov    %ax,0xf02b93d0$/;"	l
f010465c	obj/kern/kernel.asm	/^f010465c:	66 c7 05 d2 93 2b f0 	movw   $0x8,0xf02b93d2$/;"	l
f0104663	obj/kern/kernel.asm	/^f0104663:	08 00 $/;"	l
f0104665	obj/kern/kernel.asm	/^f0104665:	c6 05 d4 93 2b f0 00 	movb   $0x0,0xf02b93d4$/;"	l
f010466c	obj/kern/kernel.asm	/^f010466c:	c6 05 d5 93 2b f0 8e 	movb   $0x8e,0xf02b93d5$/;"	l
f0104673	obj/kern/kernel.asm	/^f0104673:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104676	obj/kern/kernel.asm	/^f0104676:	66 a3 d6 93 2b f0    	mov    %ax,0xf02b93d6$/;"	l
f010467c	obj/kern/kernel.asm	/^f010467c:	b8 e6 4d 10 f0       	mov    $0xf0104de6,%eax$/;"	l
f0104681	obj/kern/kernel.asm	/^f0104681:	66 a3 d8 93 2b f0    	mov    %ax,0xf02b93d8$/;"	l
f0104687	obj/kern/kernel.asm	/^f0104687:	66 c7 05 da 93 2b f0 	movw   $0x8,0xf02b93da$/;"	l
f010468e	obj/kern/kernel.asm	/^f010468e:	08 00 $/;"	l
f0104690	obj/kern/kernel.asm	/^f0104690:	c6 05 dc 93 2b f0 00 	movb   $0x0,0xf02b93dc$/;"	l
f0104697	obj/kern/kernel.asm	/^f0104697:	c6 05 dd 93 2b f0 8e 	movb   $0x8e,0xf02b93dd$/;"	l
f010469e	obj/kern/kernel.asm	/^f010469e:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01046a1	obj/kern/kernel.asm	/^f01046a1:	66 a3 de 93 2b f0    	mov    %ax,0xf02b93de$/;"	l
f01046a7	obj/kern/kernel.asm	/^f01046a7:	e8 44 f9 ff ff       	call   f0103ff0 <trap_init_percpu>$/;"	l
f01046ac	obj/kern/kernel.asm	/^f01046ac:	c9                   	leave  $/;"	l
f01046ad	obj/kern/kernel.asm	/^f01046ad:	c3                   	ret    $/;"	l
f01046ae	obj/kern/kernel.asm	/^f01046ae <print_regs>:$/;"	l
f01046ae	obj/kern/kernel.asm	/^f01046ae:	55                   	push   %ebp$/;"	l
f01046af	obj/kern/kernel.asm	/^f01046af:	89 e5                	mov    %esp,%ebp$/;"	l
f01046b1	obj/kern/kernel.asm	/^f01046b1:	53                   	push   %ebx$/;"	l
f01046b2	obj/kern/kernel.asm	/^f01046b2:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01046b5	obj/kern/kernel.asm	/^f01046b5:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01046b8	obj/kern/kernel.asm	/^f01046b8:	8b 03                	mov    (%ebx),%eax$/;"	l
f01046ba	obj/kern/kernel.asm	/^f01046ba:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01046be	obj/kern/kernel.asm	/^f01046be:	c7 04 24 c1 93 10 f0 	movl   $0xf01093c1,(%esp)$/;"	l
f01046c5	obj/kern/kernel.asm	/^f01046c5:	e8 02 f9 ff ff       	call   f0103fcc <cprintf>$/;"	l
f01046ca	obj/kern/kernel.asm	/^f01046ca:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f01046cd	obj/kern/kernel.asm	/^f01046cd:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01046d1	obj/kern/kernel.asm	/^f01046d1:	c7 04 24 d0 93 10 f0 	movl   $0xf01093d0,(%esp)$/;"	l
f01046d8	obj/kern/kernel.asm	/^f01046d8:	e8 ef f8 ff ff       	call   f0103fcc <cprintf>$/;"	l
f01046dd	obj/kern/kernel.asm	/^f01046dd:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f01046e0	obj/kern/kernel.asm	/^f01046e0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01046e4	obj/kern/kernel.asm	/^f01046e4:	c7 04 24 df 93 10 f0 	movl   $0xf01093df,(%esp)$/;"	l
f01046eb	obj/kern/kernel.asm	/^f01046eb:	e8 dc f8 ff ff       	call   f0103fcc <cprintf>$/;"	l
f01046f0	obj/kern/kernel.asm	/^f01046f0:	8b 43 0c             	mov    0xc(%ebx),%eax$/;"	l
f01046f3	obj/kern/kernel.asm	/^f01046f3:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01046f7	obj/kern/kernel.asm	/^f01046f7:	c7 04 24 ee 93 10 f0 	movl   $0xf01093ee,(%esp)$/;"	l
f01046fe	obj/kern/kernel.asm	/^f01046fe:	e8 c9 f8 ff ff       	call   f0103fcc <cprintf>$/;"	l
f0104703	obj/kern/kernel.asm	/^f0104703:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f0104706	obj/kern/kernel.asm	/^f0104706:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010470a	obj/kern/kernel.asm	/^f010470a:	c7 04 24 fd 93 10 f0 	movl   $0xf01093fd,(%esp)$/;"	l
f0104711	obj/kern/kernel.asm	/^f0104711:	e8 b6 f8 ff ff       	call   f0103fcc <cprintf>$/;"	l
f0104716	obj/kern/kernel.asm	/^f0104716:	8b 43 14             	mov    0x14(%ebx),%eax$/;"	l
f0104719	obj/kern/kernel.asm	/^f0104719:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010471d	obj/kern/kernel.asm	/^f010471d:	c7 04 24 0c 94 10 f0 	movl   $0xf010940c,(%esp)$/;"	l
f0104724	obj/kern/kernel.asm	/^f0104724:	e8 a3 f8 ff ff       	call   f0103fcc <cprintf>$/;"	l
f0104729	obj/kern/kernel.asm	/^f0104729:	8b 43 18             	mov    0x18(%ebx),%eax$/;"	l
f010472c	obj/kern/kernel.asm	/^f010472c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104730	obj/kern/kernel.asm	/^f0104730:	c7 04 24 1b 94 10 f0 	movl   $0xf010941b,(%esp)$/;"	l
f0104737	obj/kern/kernel.asm	/^f0104737:	e8 90 f8 ff ff       	call   f0103fcc <cprintf>$/;"	l
f010473c	obj/kern/kernel.asm	/^f010473c:	8b 43 1c             	mov    0x1c(%ebx),%eax$/;"	l
f010473f	obj/kern/kernel.asm	/^f010473f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104743	obj/kern/kernel.asm	/^f0104743:	c7 04 24 2a 94 10 f0 	movl   $0xf010942a,(%esp)$/;"	l
f010474a	obj/kern/kernel.asm	/^f010474a:	e8 7d f8 ff ff       	call   f0103fcc <cprintf>$/;"	l
f010474f	obj/kern/kernel.asm	/^f010474f:	83 c4 14             	add    $0x14,%esp$/;"	l
f0104752	obj/kern/kernel.asm	/^f0104752:	5b                   	pop    %ebx$/;"	l
f0104753	obj/kern/kernel.asm	/^f0104753:	5d                   	pop    %ebp$/;"	l
f0104754	obj/kern/kernel.asm	/^f0104754:	c3                   	ret    $/;"	l
f0104755	obj/kern/kernel.asm	/^f0104755 <print_trapframe>:$/;"	l
f0104755	obj/kern/kernel.asm	/^f0104755:	55                   	push   %ebp$/;"	l
f0104756	obj/kern/kernel.asm	/^f0104756:	89 e5                	mov    %esp,%ebp$/;"	l
f0104758	obj/kern/kernel.asm	/^f0104758:	56                   	push   %esi$/;"	l
f0104759	obj/kern/kernel.asm	/^f0104759:	53                   	push   %ebx$/;"	l
f010475a	obj/kern/kernel.asm	/^f010475a:	83 ec 10             	sub    $0x10,%esp$/;"	l
f010475d	obj/kern/kernel.asm	/^f010475d:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0104760	obj/kern/kernel.asm	/^f0104760:	e8 84 24 00 00       	call   f0106be9 <cpunum>$/;"	l
f0104765	obj/kern/kernel.asm	/^f0104765:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0104769	obj/kern/kernel.asm	/^f0104769:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f010476d	obj/kern/kernel.asm	/^f010476d:	c7 04 24 8e 94 10 f0 	movl   $0xf010948e,(%esp)$/;"	l
f0104774	obj/kern/kernel.asm	/^f0104774:	e8 53 f8 ff ff       	call   f0103fcc <cprintf>$/;"	l
f0104779	obj/kern/kernel.asm	/^f0104779:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010477c	obj/kern/kernel.asm	/^f010477c:	e8 2d ff ff ff       	call   f01046ae <print_regs>$/;"	l
f0104781	obj/kern/kernel.asm	/^f0104781:	0f b7 43 20          	movzwl 0x20(%ebx),%eax$/;"	l
f0104785	obj/kern/kernel.asm	/^f0104785:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104789	obj/kern/kernel.asm	/^f0104789:	c7 04 24 ac 94 10 f0 	movl   $0xf01094ac,(%esp)$/;"	l
f0104790	obj/kern/kernel.asm	/^f0104790:	e8 37 f8 ff ff       	call   f0103fcc <cprintf>$/;"	l
f0104795	obj/kern/kernel.asm	/^f0104795:	0f b7 43 24          	movzwl 0x24(%ebx),%eax$/;"	l
f0104799	obj/kern/kernel.asm	/^f0104799:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010479d	obj/kern/kernel.asm	/^f010479d:	c7 04 24 bf 94 10 f0 	movl   $0xf01094bf,(%esp)$/;"	l
f01047a4	obj/kern/kernel.asm	/^f01047a4:	e8 23 f8 ff ff       	call   f0103fcc <cprintf>$/;"	l
f01047a9	obj/kern/kernel.asm	/^f01047a9:	8b 43 28             	mov    0x28(%ebx),%eax$/;"	l
f01047ac	obj/kern/kernel.asm	/^f01047ac:	83 f8 13             	cmp    $0x13,%eax$/;"	l
f01047af	obj/kern/kernel.asm	/^f01047af:	77 09                	ja     f01047ba <print_trapframe+0x65>$/;"	l
f01047b1	obj/kern/kernel.asm	/^f01047b1:	8b 14 85 60 97 10 f0 	mov    -0xfef68a0(,%eax,4),%edx$/;"	l
f01047b8	obj/kern/kernel.asm	/^f01047b8:	eb 1f                	jmp    f01047d9 <print_trapframe+0x84>$/;"	l
f01047ba	obj/kern/kernel.asm	/^f01047ba:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f01047bd	obj/kern/kernel.asm	/^f01047bd:	74 15                	je     f01047d4 <print_trapframe+0x7f>$/;"	l
f01047bf	obj/kern/kernel.asm	/^f01047bf:	8d 50 e0             	lea    -0x20(%eax),%edx$/;"	l
f01047c2	obj/kern/kernel.asm	/^f01047c2:	83 fa 0f             	cmp    $0xf,%edx$/;"	l
f01047c5	obj/kern/kernel.asm	/^f01047c5:	ba 45 94 10 f0       	mov    $0xf0109445,%edx$/;"	l
f01047ca	obj/kern/kernel.asm	/^f01047ca:	b9 58 94 10 f0       	mov    $0xf0109458,%ecx$/;"	l
f01047cf	obj/kern/kernel.asm	/^f01047cf:	0f 47 d1             	cmova  %ecx,%edx$/;"	l
f01047d2	obj/kern/kernel.asm	/^f01047d2:	eb 05                	jmp    f01047d9 <print_trapframe+0x84>$/;"	l
f01047d4	obj/kern/kernel.asm	/^f01047d4:	ba 39 94 10 f0       	mov    $0xf0109439,%edx$/;"	l
f01047d9	obj/kern/kernel.asm	/^f01047d9:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f01047dd	obj/kern/kernel.asm	/^f01047dd:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01047e1	obj/kern/kernel.asm	/^f01047e1:	c7 04 24 d2 94 10 f0 	movl   $0xf01094d2,(%esp)$/;"	l
f01047e8	obj/kern/kernel.asm	/^f01047e8:	e8 df f7 ff ff       	call   f0103fcc <cprintf>$/;"	l
f01047ed	obj/kern/kernel.asm	/^f01047ed:	3b 1d 60 9a 2b f0    	cmp    0xf02b9a60,%ebx$/;"	l
f01047f3	obj/kern/kernel.asm	/^f01047f3:	75 19                	jne    f010480e <print_trapframe+0xb9>$/;"	l
f01047f5	obj/kern/kernel.asm	/^f01047f5:	83 7b 28 0e          	cmpl   $0xe,0x28(%ebx)$/;"	l
f01047f9	obj/kern/kernel.asm	/^f01047f9:	75 13                	jne    f010480e <print_trapframe+0xb9>$/;"	l
f01047fb	obj/kern/kernel.asm	/^f01047fb:	0f 20 d0             	mov    %cr2,%eax$/;"	l
f01047fe	obj/kern/kernel.asm	/^f01047fe:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104802	obj/kern/kernel.asm	/^f0104802:	c7 04 24 e4 94 10 f0 	movl   $0xf01094e4,(%esp)$/;"	l
f0104809	obj/kern/kernel.asm	/^f0104809:	e8 be f7 ff ff       	call   f0103fcc <cprintf>$/;"	l
f010480e	obj/kern/kernel.asm	/^f010480e:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f0104811	obj/kern/kernel.asm	/^f0104811:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104815	obj/kern/kernel.asm	/^f0104815:	c7 04 24 f3 94 10 f0 	movl   $0xf01094f3,(%esp)$/;"	l
f010481c	obj/kern/kernel.asm	/^f010481c:	e8 ab f7 ff ff       	call   f0103fcc <cprintf>$/;"	l
f0104821	obj/kern/kernel.asm	/^f0104821:	83 7b 28 0e          	cmpl   $0xe,0x28(%ebx)$/;"	l
f0104825	obj/kern/kernel.asm	/^f0104825:	75 51                	jne    f0104878 <print_trapframe+0x123>$/;"	l
f0104827	obj/kern/kernel.asm	/^f0104827:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f010482a	obj/kern/kernel.asm	/^f010482a:	89 c2                	mov    %eax,%edx$/;"	l
f010482c	obj/kern/kernel.asm	/^f010482c:	83 e2 01             	and    $0x1,%edx$/;"	l
f010482f	obj/kern/kernel.asm	/^f010482f:	ba 67 94 10 f0       	mov    $0xf0109467,%edx$/;"	l
f0104834	obj/kern/kernel.asm	/^f0104834:	b9 72 94 10 f0       	mov    $0xf0109472,%ecx$/;"	l
f0104839	obj/kern/kernel.asm	/^f0104839:	0f 45 ca             	cmovne %edx,%ecx$/;"	l
f010483c	obj/kern/kernel.asm	/^f010483c:	89 c2                	mov    %eax,%edx$/;"	l
f010483e	obj/kern/kernel.asm	/^f010483e:	83 e2 02             	and    $0x2,%edx$/;"	l
f0104841	obj/kern/kernel.asm	/^f0104841:	ba 7e 94 10 f0       	mov    $0xf010947e,%edx$/;"	l
f0104846	obj/kern/kernel.asm	/^f0104846:	be 84 94 10 f0       	mov    $0xf0109484,%esi$/;"	l
f010484b	obj/kern/kernel.asm	/^f010484b:	0f 44 d6             	cmove  %esi,%edx$/;"	l
f010484e	obj/kern/kernel.asm	/^f010484e:	83 e0 04             	and    $0x4,%eax$/;"	l
f0104851	obj/kern/kernel.asm	/^f0104851:	b8 89 94 10 f0       	mov    $0xf0109489,%eax$/;"	l
f0104856	obj/kern/kernel.asm	/^f0104856:	be d3 95 10 f0       	mov    $0xf01095d3,%esi$/;"	l
f010485b	obj/kern/kernel.asm	/^f010485b:	0f 44 c6             	cmove  %esi,%eax$/;"	l
f010485e	obj/kern/kernel.asm	/^f010485e:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f0104862	obj/kern/kernel.asm	/^f0104862:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0104866	obj/kern/kernel.asm	/^f0104866:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010486a	obj/kern/kernel.asm	/^f010486a:	c7 04 24 01 95 10 f0 	movl   $0xf0109501,(%esp)$/;"	l
f0104871	obj/kern/kernel.asm	/^f0104871:	e8 56 f7 ff ff       	call   f0103fcc <cprintf>$/;"	l
f0104876	obj/kern/kernel.asm	/^f0104876:	eb 0c                	jmp    f0104884 <print_trapframe+0x12f>$/;"	l
f0104878	obj/kern/kernel.asm	/^f0104878:	c7 04 24 fb 92 10 f0 	movl   $0xf01092fb,(%esp)$/;"	l
f010487f	obj/kern/kernel.asm	/^f010487f:	e8 48 f7 ff ff       	call   f0103fcc <cprintf>$/;"	l
f0104884	obj/kern/kernel.asm	/^f0104884:	8b 43 30             	mov    0x30(%ebx),%eax$/;"	l
f0104887	obj/kern/kernel.asm	/^f0104887:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010488b	obj/kern/kernel.asm	/^f010488b:	c7 04 24 10 95 10 f0 	movl   $0xf0109510,(%esp)$/;"	l
f0104892	obj/kern/kernel.asm	/^f0104892:	e8 35 f7 ff ff       	call   f0103fcc <cprintf>$/;"	l
f0104897	obj/kern/kernel.asm	/^f0104897:	0f b7 43 34          	movzwl 0x34(%ebx),%eax$/;"	l
f010489b	obj/kern/kernel.asm	/^f010489b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010489f	obj/kern/kernel.asm	/^f010489f:	c7 04 24 1f 95 10 f0 	movl   $0xf010951f,(%esp)$/;"	l
f01048a6	obj/kern/kernel.asm	/^f01048a6:	e8 21 f7 ff ff       	call   f0103fcc <cprintf>$/;"	l
f01048ab	obj/kern/kernel.asm	/^f01048ab:	8b 43 38             	mov    0x38(%ebx),%eax$/;"	l
f01048ae	obj/kern/kernel.asm	/^f01048ae:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01048b2	obj/kern/kernel.asm	/^f01048b2:	c7 04 24 32 95 10 f0 	movl   $0xf0109532,(%esp)$/;"	l
f01048b9	obj/kern/kernel.asm	/^f01048b9:	e8 0e f7 ff ff       	call   f0103fcc <cprintf>$/;"	l
f01048be	obj/kern/kernel.asm	/^f01048be:	f6 43 34 03          	testb  $0x3,0x34(%ebx)$/;"	l
f01048c2	obj/kern/kernel.asm	/^f01048c2:	74 27                	je     f01048eb <print_trapframe+0x196>$/;"	l
f01048c4	obj/kern/kernel.asm	/^f01048c4:	8b 43 3c             	mov    0x3c(%ebx),%eax$/;"	l
f01048c7	obj/kern/kernel.asm	/^f01048c7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01048cb	obj/kern/kernel.asm	/^f01048cb:	c7 04 24 41 95 10 f0 	movl   $0xf0109541,(%esp)$/;"	l
f01048d2	obj/kern/kernel.asm	/^f01048d2:	e8 f5 f6 ff ff       	call   f0103fcc <cprintf>$/;"	l
f01048d7	obj/kern/kernel.asm	/^f01048d7:	0f b7 43 40          	movzwl 0x40(%ebx),%eax$/;"	l
f01048db	obj/kern/kernel.asm	/^f01048db:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01048df	obj/kern/kernel.asm	/^f01048df:	c7 04 24 50 95 10 f0 	movl   $0xf0109550,(%esp)$/;"	l
f01048e6	obj/kern/kernel.asm	/^f01048e6:	e8 e1 f6 ff ff       	call   f0103fcc <cprintf>$/;"	l
f01048eb	obj/kern/kernel.asm	/^f01048eb:	83 c4 10             	add    $0x10,%esp$/;"	l
f01048ee	obj/kern/kernel.asm	/^f01048ee:	5b                   	pop    %ebx$/;"	l
f01048ef	obj/kern/kernel.asm	/^f01048ef:	5e                   	pop    %esi$/;"	l
f01048f0	obj/kern/kernel.asm	/^f01048f0:	5d                   	pop    %ebp$/;"	l
f01048f1	obj/kern/kernel.asm	/^f01048f1:	c3                   	ret    $/;"	l
f01048f2	obj/kern/kernel.asm	/^f01048f2 <page_fault_handler>:$/;"	l
f01048f2	obj/kern/kernel.asm	/^f01048f2:	55                   	push   %ebp$/;"	l
f01048f3	obj/kern/kernel.asm	/^f01048f3:	89 e5                	mov    %esp,%ebp$/;"	l
f01048f5	obj/kern/kernel.asm	/^f01048f5:	57                   	push   %edi$/;"	l
f01048f6	obj/kern/kernel.asm	/^f01048f6:	56                   	push   %esi$/;"	l
f01048f7	obj/kern/kernel.asm	/^f01048f7:	53                   	push   %ebx$/;"	l
f01048f8	obj/kern/kernel.asm	/^f01048f8:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f01048fb	obj/kern/kernel.asm	/^f01048fb:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01048fe	obj/kern/kernel.asm	/^f01048fe:	0f 20 d6             	mov    %cr2,%esi$/;"	l
f0104901	obj/kern/kernel.asm	/^f0104901:	0f b7 43 34          	movzwl 0x34(%ebx),%eax$/;"	l
f0104905	obj/kern/kernel.asm	/^f0104905:	83 e0 03             	and    $0x3,%eax$/;"	l
f0104908	obj/kern/kernel.asm	/^f0104908:	66 83 f8 03          	cmp    $0x3,%ax$/;"	l
f010490c	obj/kern/kernel.asm	/^f010490c:	74 1c                	je     f010492a <page_fault_handler+0x38>$/;"	l
f010490e	obj/kern/kernel.asm	/^f010490e:	c7 44 24 08 63 95 10 	movl   $0xf0109563,0x8(%esp)$/;"	l
f0104915	obj/kern/kernel.asm	/^f0104915:	f0 $/;"	l
f0104916	obj/kern/kernel.asm	/^f0104916:	c7 44 24 04 8d 01 00 	movl   $0x18d,0x4(%esp)$/;"	l
f010491d	obj/kern/kernel.asm	/^f010491d:	00 $/;"	l
f010491e	obj/kern/kernel.asm	/^f010491e:	c7 04 24 7f 95 10 f0 	movl   $0xf010957f,(%esp)$/;"	l
f0104925	obj/kern/kernel.asm	/^f0104925:	e8 16 b7 ff ff       	call   f0100040 <_panic>$/;"	l
f010492a	obj/kern/kernel.asm	/^f010492a:	e8 ba 22 00 00       	call   f0106be9 <cpunum>$/;"	l
f010492f	obj/kern/kernel.asm	/^f010492f:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104932	obj/kern/kernel.asm	/^f0104932:	8b 80 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%eax$/;"	l
f0104938	obj/kern/kernel.asm	/^f0104938:	83 78 64 00          	cmpl   $0x0,0x64(%eax)$/;"	l
f010493c	obj/kern/kernel.asm	/^f010493c:	0f 84 f7 00 00 00    	je     f0104a39 <page_fault_handler+0x147>$/;"	l
f0104942	obj/kern/kernel.asm	/^f0104942:	8b 43 3c             	mov    0x3c(%ebx),%eax$/;"	l
f0104945	obj/kern/kernel.asm	/^f0104945:	8d 90 00 10 40 11    	lea    0x11401000(%eax),%edx$/;"	l
f010494b	obj/kern/kernel.asm	/^f010494b:	83 e8 38             	sub    $0x38,%eax$/;"	l
f010494e	obj/kern/kernel.asm	/^f010494e:	81 fa 00 10 00 00    	cmp    $0x1000,%edx$/;"	l
f0104954	obj/kern/kernel.asm	/^f0104954:	ba cc ff bf ee       	mov    $0xeebfffcc,%edx$/;"	l
f0104959	obj/kern/kernel.asm	/^f0104959:	0f 46 d0             	cmovbe %eax,%edx$/;"	l
f010495c	obj/kern/kernel.asm	/^f010495c:	89 d7                	mov    %edx,%edi$/;"	l
f010495e	obj/kern/kernel.asm	/^f010495e:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0104961	obj/kern/kernel.asm	/^f0104961:	e8 83 22 00 00       	call   f0106be9 <cpunum>$/;"	l
f0104966	obj/kern/kernel.asm	/^f0104966:	c7 44 24 0c 06 00 00 	movl   $0x6,0xc(%esp)$/;"	l
f010496d	obj/kern/kernel.asm	/^f010496d:	00 $/;"	l
f010496e	obj/kern/kernel.asm	/^f010496e:	c7 44 24 08 34 00 00 	movl   $0x34,0x8(%esp)$/;"	l
f0104975	obj/kern/kernel.asm	/^f0104975:	00 $/;"	l
f0104976	obj/kern/kernel.asm	/^f0104976:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f010497a	obj/kern/kernel.asm	/^f010497a:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010497d	obj/kern/kernel.asm	/^f010497d:	8b 80 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%eax$/;"	l
f0104983	obj/kern/kernel.asm	/^f0104983:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104986	obj/kern/kernel.asm	/^f0104986:	e8 99 ec ff ff       	call   f0103624 <user_mem_assert>$/;"	l
f010498b	obj/kern/kernel.asm	/^f010498b:	89 37                	mov    %esi,(%edi)$/;"	l
f010498d	obj/kern/kernel.asm	/^f010498d:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f0104990	obj/kern/kernel.asm	/^f0104990:	89 47 04             	mov    %eax,0x4(%edi)$/;"	l
f0104993	obj/kern/kernel.asm	/^f0104993:	8d 7f 08             	lea    0x8(%edi),%edi$/;"	l
f0104996	obj/kern/kernel.asm	/^f0104996:	89 de                	mov    %ebx,%esi$/;"	l
f0104998	obj/kern/kernel.asm	/^f0104998:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f010499d	obj/kern/kernel.asm	/^f010499d:	f7 c7 01 00 00 00    	test   $0x1,%edi$/;"	l
f01049a3	obj/kern/kernel.asm	/^f01049a3:	74 03                	je     f01049a8 <page_fault_handler+0xb6>$/;"	l
f01049a5	obj/kern/kernel.asm	/^f01049a5:	a4                   	movsb  %ds:(%esi),%es:(%edi)$/;"	l
f01049a6	obj/kern/kernel.asm	/^f01049a6:	b0 1f                	mov    $0x1f,%al$/;"	l
f01049a8	obj/kern/kernel.asm	/^f01049a8:	f7 c7 02 00 00 00    	test   $0x2,%edi$/;"	l
f01049ae	obj/kern/kernel.asm	/^f01049ae:	74 05                	je     f01049b5 <page_fault_handler+0xc3>$/;"	l
f01049b0	obj/kern/kernel.asm	/^f01049b0:	66 a5                	movsw  %ds:(%esi),%es:(%edi)$/;"	l
f01049b2	obj/kern/kernel.asm	/^f01049b2:	83 e8 02             	sub    $0x2,%eax$/;"	l
f01049b5	obj/kern/kernel.asm	/^f01049b5:	89 c1                	mov    %eax,%ecx$/;"	l
f01049b7	obj/kern/kernel.asm	/^f01049b7:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f01049ba	obj/kern/kernel.asm	/^f01049ba:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f01049bc	obj/kern/kernel.asm	/^f01049bc:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01049c1	obj/kern/kernel.asm	/^f01049c1:	a8 02                	test   $0x2,%al$/;"	l
f01049c3	obj/kern/kernel.asm	/^f01049c3:	74 0b                	je     f01049d0 <page_fault_handler+0xde>$/;"	l
f01049c5	obj/kern/kernel.asm	/^f01049c5:	0f b7 16             	movzwl (%esi),%edx$/;"	l
f01049c8	obj/kern/kernel.asm	/^f01049c8:	66 89 17             	mov    %dx,(%edi)$/;"	l
f01049cb	obj/kern/kernel.asm	/^f01049cb:	ba 02 00 00 00       	mov    $0x2,%edx$/;"	l
f01049d0	obj/kern/kernel.asm	/^f01049d0:	a8 01                	test   $0x1,%al$/;"	l
f01049d2	obj/kern/kernel.asm	/^f01049d2:	74 07                	je     f01049db <page_fault_handler+0xe9>$/;"	l
f01049d4	obj/kern/kernel.asm	/^f01049d4:	0f b6 04 16          	movzbl (%esi,%edx,1),%eax$/;"	l
f01049d8	obj/kern/kernel.asm	/^f01049d8:	88 04 17             	mov    %al,(%edi,%edx,1)$/;"	l
f01049db	obj/kern/kernel.asm	/^f01049db:	8b 43 30             	mov    0x30(%ebx),%eax$/;"	l
f01049de	obj/kern/kernel.asm	/^f01049de:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f01049e1	obj/kern/kernel.asm	/^f01049e1:	89 46 28             	mov    %eax,0x28(%esi)$/;"	l
f01049e4	obj/kern/kernel.asm	/^f01049e4:	8b 43 38             	mov    0x38(%ebx),%eax$/;"	l
f01049e7	obj/kern/kernel.asm	/^f01049e7:	89 46 2c             	mov    %eax,0x2c(%esi)$/;"	l
f01049ea	obj/kern/kernel.asm	/^f01049ea:	8b 43 3c             	mov    0x3c(%ebx),%eax$/;"	l
f01049ed	obj/kern/kernel.asm	/^f01049ed:	89 46 30             	mov    %eax,0x30(%esi)$/;"	l
f01049f0	obj/kern/kernel.asm	/^f01049f0:	e8 f4 21 00 00       	call   f0106be9 <cpunum>$/;"	l
f01049f5	obj/kern/kernel.asm	/^f01049f5:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01049f8	obj/kern/kernel.asm	/^f01049f8:	8b 98 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%ebx$/;"	l
f01049fe	obj/kern/kernel.asm	/^f01049fe:	e8 e6 21 00 00       	call   f0106be9 <cpunum>$/;"	l
f0104a03	obj/kern/kernel.asm	/^f0104a03:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104a06	obj/kern/kernel.asm	/^f0104a06:	8b 80 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%eax$/;"	l
f0104a0c	obj/kern/kernel.asm	/^f0104a0c:	8b 40 64             	mov    0x64(%eax),%eax$/;"	l
f0104a0f	obj/kern/kernel.asm	/^f0104a0f:	89 43 30             	mov    %eax,0x30(%ebx)$/;"	l
f0104a12	obj/kern/kernel.asm	/^f0104a12:	e8 d2 21 00 00       	call   f0106be9 <cpunum>$/;"	l
f0104a17	obj/kern/kernel.asm	/^f0104a17:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104a1a	obj/kern/kernel.asm	/^f0104a1a:	8b 80 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%eax$/;"	l
f0104a20	obj/kern/kernel.asm	/^f0104a20:	89 70 3c             	mov    %esi,0x3c(%eax)$/;"	l
f0104a23	obj/kern/kernel.asm	/^f0104a23:	e8 c1 21 00 00       	call   f0106be9 <cpunum>$/;"	l
f0104a28	obj/kern/kernel.asm	/^f0104a28:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104a2b	obj/kern/kernel.asm	/^f0104a2b:	8b 80 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%eax$/;"	l
f0104a31	obj/kern/kernel.asm	/^f0104a31:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104a34	obj/kern/kernel.asm	/^f0104a34:	e8 72 f3 ff ff       	call   f0103dab <env_run>$/;"	l
f0104a39	obj/kern/kernel.asm	/^f0104a39:	8b 7b 30             	mov    0x30(%ebx),%edi$/;"	l
f0104a3c	obj/kern/kernel.asm	/^f0104a3c:	e8 a8 21 00 00       	call   f0106be9 <cpunum>$/;"	l
f0104a41	obj/kern/kernel.asm	/^f0104a41:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f0104a45	obj/kern/kernel.asm	/^f0104a45:	89 74 24 08          	mov    %esi,0x8(%esp)$/;"	l
f0104a49	obj/kern/kernel.asm	/^f0104a49:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104a4c	obj/kern/kernel.asm	/^f0104a4c:	8b 80 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%eax$/;"	l
f0104a52	obj/kern/kernel.asm	/^f0104a52:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0104a55	obj/kern/kernel.asm	/^f0104a55:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104a59	obj/kern/kernel.asm	/^f0104a59:	c7 04 24 20 97 10 f0 	movl   $0xf0109720,(%esp)$/;"	l
f0104a60	obj/kern/kernel.asm	/^f0104a60:	e8 67 f5 ff ff       	call   f0103fcc <cprintf>$/;"	l
f0104a65	obj/kern/kernel.asm	/^f0104a65:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0104a68	obj/kern/kernel.asm	/^f0104a68:	e8 e8 fc ff ff       	call   f0104755 <print_trapframe>$/;"	l
f0104a6d	obj/kern/kernel.asm	/^f0104a6d:	e8 77 21 00 00       	call   f0106be9 <cpunum>$/;"	l
f0104a72	obj/kern/kernel.asm	/^f0104a72:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104a75	obj/kern/kernel.asm	/^f0104a75:	8b 80 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%eax$/;"	l
f0104a7b	obj/kern/kernel.asm	/^f0104a7b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104a7e	obj/kern/kernel.asm	/^f0104a7e:	e8 87 f2 ff ff       	call   f0103d0a <env_destroy>$/;"	l
f0104a83	obj/kern/kernel.asm	/^f0104a83:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0104a86	obj/kern/kernel.asm	/^f0104a86:	5b                   	pop    %ebx$/;"	l
f0104a87	obj/kern/kernel.asm	/^f0104a87:	5e                   	pop    %esi$/;"	l
f0104a88	obj/kern/kernel.asm	/^f0104a88:	5f                   	pop    %edi$/;"	l
f0104a89	obj/kern/kernel.asm	/^f0104a89:	5d                   	pop    %ebp$/;"	l
f0104a8a	obj/kern/kernel.asm	/^f0104a8a:	c3                   	ret    $/;"	l
f0104a8b	obj/kern/kernel.asm	/^f0104a8b <trap>:$/;"	l
f0104a8b	obj/kern/kernel.asm	/^f0104a8b:	55                   	push   %ebp$/;"	l
f0104a8c	obj/kern/kernel.asm	/^f0104a8c:	89 e5                	mov    %esp,%ebp$/;"	l
f0104a8e	obj/kern/kernel.asm	/^f0104a8e:	57                   	push   %edi$/;"	l
f0104a8f	obj/kern/kernel.asm	/^f0104a8f:	56                   	push   %esi$/;"	l
f0104a90	obj/kern/kernel.asm	/^f0104a90:	83 ec 20             	sub    $0x20,%esp$/;"	l
f0104a93	obj/kern/kernel.asm	/^f0104a93:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0104a96	obj/kern/kernel.asm	/^f0104a96:	fc                   	cld    $/;"	l
f0104a97	obj/kern/kernel.asm	/^f0104a97:	83 3d 8c 9e 2b f0 00 	cmpl   $0x0,0xf02b9e8c$/;"	l
f0104a9e	obj/kern/kernel.asm	/^f0104a9e:	74 01                	je     f0104aa1 <trap+0x16>$/;"	l
f0104aa0	obj/kern/kernel.asm	/^f0104aa0:	f4                   	hlt    $/;"	l
f0104aa1	obj/kern/kernel.asm	/^f0104aa1:	e8 43 21 00 00       	call   f0106be9 <cpunum>$/;"	l
f0104aa6	obj/kern/kernel.asm	/^f0104aa6:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0104aa9	obj/kern/kernel.asm	/^f0104aa9:	81 c2 20 a0 2b f0    	add    $0xf02ba020,%edx$/;"	l
f0104aaf	obj/kern/kernel.asm	/^f0104aaf:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0104ab4	obj/kern/kernel.asm	/^f0104ab4:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f0104ab8	obj/kern/kernel.asm	/^f0104ab8:	83 f8 02             	cmp    $0x2,%eax$/;"	l
f0104abb	obj/kern/kernel.asm	/^f0104abb:	75 0c                	jne    f0104ac9 <trap+0x3e>$/;"	l
f0104abd	obj/kern/kernel.asm	/^f0104abd:	c7 04 24 c0 53 12 f0 	movl   $0xf01253c0,(%esp)$/;"	l
f0104ac4	obj/kern/kernel.asm	/^f0104ac4:	e8 9e 23 00 00       	call   f0106e67 <spin_lock>$/;"	l
f0104ac9	obj/kern/kernel.asm	/^f0104ac9:	9c                   	pushf  $/;"	l
f0104aca	obj/kern/kernel.asm	/^f0104aca:	58                   	pop    %eax$/;"	l
f0104acb	obj/kern/kernel.asm	/^f0104acb:	f6 c4 02             	test   $0x2,%ah$/;"	l
f0104ace	obj/kern/kernel.asm	/^f0104ace:	74 24                	je     f0104af4 <trap+0x69>$/;"	l
f0104ad0	obj/kern/kernel.asm	/^f0104ad0:	c7 44 24 0c 8b 95 10 	movl   $0xf010958b,0xc(%esp)$/;"	l
f0104ad7	obj/kern/kernel.asm	/^f0104ad7:	f0 $/;"	l
f0104ad8	obj/kern/kernel.asm	/^f0104ad8:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0104adf	obj/kern/kernel.asm	/^f0104adf:	f0 $/;"	l
f0104ae0	obj/kern/kernel.asm	/^f0104ae0:	c7 44 24 04 57 01 00 	movl   $0x157,0x4(%esp)$/;"	l
f0104ae7	obj/kern/kernel.asm	/^f0104ae7:	00 $/;"	l
f0104ae8	obj/kern/kernel.asm	/^f0104ae8:	c7 04 24 7f 95 10 f0 	movl   $0xf010957f,(%esp)$/;"	l
f0104aef	obj/kern/kernel.asm	/^f0104aef:	e8 4c b5 ff ff       	call   f0100040 <_panic>$/;"	l
f0104af4	obj/kern/kernel.asm	/^f0104af4:	0f b7 46 34          	movzwl 0x34(%esi),%eax$/;"	l
f0104af8	obj/kern/kernel.asm	/^f0104af8:	83 e0 03             	and    $0x3,%eax$/;"	l
f0104afb	obj/kern/kernel.asm	/^f0104afb:	66 83 f8 03          	cmp    $0x3,%ax$/;"	l
f0104aff	obj/kern/kernel.asm	/^f0104aff:	0f 85 a7 00 00 00    	jne    f0104bac <trap+0x121>$/;"	l
f0104b05	obj/kern/kernel.asm	/^f0104b05:	e8 df 20 00 00       	call   f0106be9 <cpunum>$/;"	l
f0104b0a	obj/kern/kernel.asm	/^f0104b0a:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104b0d	obj/kern/kernel.asm	/^f0104b0d:	83 b8 28 a0 2b f0 00 	cmpl   $0x0,-0xfd45fd8(%eax)$/;"	l
f0104b14	obj/kern/kernel.asm	/^f0104b14:	75 24                	jne    f0104b3a <trap+0xaf>$/;"	l
f0104b16	obj/kern/kernel.asm	/^f0104b16:	c7 44 24 0c fa 97 10 	movl   $0xf01097fa,0xc(%esp)$/;"	l
f0104b1d	obj/kern/kernel.asm	/^f0104b1d:	f0 $/;"	l
f0104b1e	obj/kern/kernel.asm	/^f0104b1e:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0104b25	obj/kern/kernel.asm	/^f0104b25:	f0 $/;"	l
f0104b26	obj/kern/kernel.asm	/^f0104b26:	c7 44 24 04 5e 01 00 	movl   $0x15e,0x4(%esp)$/;"	l
f0104b2d	obj/kern/kernel.asm	/^f0104b2d:	00 $/;"	l
f0104b2e	obj/kern/kernel.asm	/^f0104b2e:	c7 04 24 7f 95 10 f0 	movl   $0xf010957f,(%esp)$/;"	l
f0104b35	obj/kern/kernel.asm	/^f0104b35:	e8 06 b5 ff ff       	call   f0100040 <_panic>$/;"	l
f0104b3a	obj/kern/kernel.asm	/^f0104b3a:	c7 04 24 c0 53 12 f0 	movl   $0xf01253c0,(%esp)$/;"	l
f0104b41	obj/kern/kernel.asm	/^f0104b41:	e8 21 23 00 00       	call   f0106e67 <spin_lock>$/;"	l
f0104b46	obj/kern/kernel.asm	/^f0104b46:	e8 9e 20 00 00       	call   f0106be9 <cpunum>$/;"	l
f0104b4b	obj/kern/kernel.asm	/^f0104b4b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104b4e	obj/kern/kernel.asm	/^f0104b4e:	8b 80 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%eax$/;"	l
f0104b54	obj/kern/kernel.asm	/^f0104b54:	83 78 54 01          	cmpl   $0x1,0x54(%eax)$/;"	l
f0104b58	obj/kern/kernel.asm	/^f0104b58:	75 2d                	jne    f0104b87 <trap+0xfc>$/;"	l
f0104b5a	obj/kern/kernel.asm	/^f0104b5a:	e8 8a 20 00 00       	call   f0106be9 <cpunum>$/;"	l
f0104b5f	obj/kern/kernel.asm	/^f0104b5f:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104b62	obj/kern/kernel.asm	/^f0104b62:	8b 80 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%eax$/;"	l
f0104b68	obj/kern/kernel.asm	/^f0104b68:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104b6b	obj/kern/kernel.asm	/^f0104b6b:	e8 cf ef ff ff       	call   f0103b3f <env_free>$/;"	l
f0104b70	obj/kern/kernel.asm	/^f0104b70:	e8 74 20 00 00       	call   f0106be9 <cpunum>$/;"	l
f0104b75	obj/kern/kernel.asm	/^f0104b75:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104b78	obj/kern/kernel.asm	/^f0104b78:	c7 80 28 a0 2b f0 00 	movl   $0x0,-0xfd45fd8(%eax)$/;"	l
f0104b7f	obj/kern/kernel.asm	/^f0104b7f:	00 00 00 $/;"	l
f0104b82	obj/kern/kernel.asm	/^f0104b82:	e8 54 03 00 00       	call   f0104edb <sched_yield>$/;"	l
f0104b87	obj/kern/kernel.asm	/^f0104b87:	e8 5d 20 00 00       	call   f0106be9 <cpunum>$/;"	l
f0104b8c	obj/kern/kernel.asm	/^f0104b8c:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104b8f	obj/kern/kernel.asm	/^f0104b8f:	8b 80 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%eax$/;"	l
f0104b95	obj/kern/kernel.asm	/^f0104b95:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f0104b9a	obj/kern/kernel.asm	/^f0104b9a:	89 c7                	mov    %eax,%edi$/;"	l
f0104b9c	obj/kern/kernel.asm	/^f0104b9c:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0104b9e	obj/kern/kernel.asm	/^f0104b9e:	e8 46 20 00 00       	call   f0106be9 <cpunum>$/;"	l
f0104ba3	obj/kern/kernel.asm	/^f0104ba3:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104ba6	obj/kern/kernel.asm	/^f0104ba6:	8b b0 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%esi$/;"	l
f0104bac	obj/kern/kernel.asm	/^f0104bac:	89 35 60 9a 2b f0    	mov    %esi,0xf02b9a60$/;"	l
f0104bb2	obj/kern/kernel.asm	/^f0104bb2:	8b 46 28             	mov    0x28(%esi),%eax$/;"	l
f0104bb5	obj/kern/kernel.asm	/^f0104bb5:	83 f8 0e             	cmp    $0xe,%eax$/;"	l
f0104bb8	obj/kern/kernel.asm	/^f0104bb8:	74 17                	je     f0104bd1 <trap+0x146>$/;"	l
f0104bba	obj/kern/kernel.asm	/^f0104bba:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f0104bbd	obj/kern/kernel.asm	/^f0104bbd:	74 1f                	je     f0104bde <trap+0x153>$/;"	l
f0104bbf	obj/kern/kernel.asm	/^f0104bbf:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f0104bc2	obj/kern/kernel.asm	/^f0104bc2:	75 4f                	jne    f0104c13 <trap+0x188>$/;"	l
f0104bc4	obj/kern/kernel.asm	/^f0104bc4:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104bc7	obj/kern/kernel.asm	/^f0104bc7:	e8 4e be ff ff       	call   f0100a1a <monitor>$/;"	l
f0104bcc	obj/kern/kernel.asm	/^f0104bcc:	e9 e2 00 00 00       	jmp    f0104cb3 <trap+0x228>$/;"	l
f0104bd1	obj/kern/kernel.asm	/^f0104bd1:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104bd4	obj/kern/kernel.asm	/^f0104bd4:	e8 19 fd ff ff       	call   f01048f2 <page_fault_handler>$/;"	l
f0104bd9	obj/kern/kernel.asm	/^f0104bd9:	e9 d5 00 00 00       	jmp    f0104cb3 <trap+0x228>$/;"	l
f0104bde	obj/kern/kernel.asm	/^f0104bde:	8b 46 04             	mov    0x4(%esi),%eax$/;"	l
f0104be1	obj/kern/kernel.asm	/^f0104be1:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
f0104be5	obj/kern/kernel.asm	/^f0104be5:	8b 06                	mov    (%esi),%eax$/;"	l
f0104be7	obj/kern/kernel.asm	/^f0104be7:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f0104beb	obj/kern/kernel.asm	/^f0104beb:	8b 46 10             	mov    0x10(%esi),%eax$/;"	l
f0104bee	obj/kern/kernel.asm	/^f0104bee:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0104bf2	obj/kern/kernel.asm	/^f0104bf2:	8b 46 18             	mov    0x18(%esi),%eax$/;"	l
f0104bf5	obj/kern/kernel.asm	/^f0104bf5:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0104bf9	obj/kern/kernel.asm	/^f0104bf9:	8b 46 14             	mov    0x14(%esi),%eax$/;"	l
f0104bfc	obj/kern/kernel.asm	/^f0104bfc:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104c00	obj/kern/kernel.asm	/^f0104c00:	8b 46 1c             	mov    0x1c(%esi),%eax$/;"	l
f0104c03	obj/kern/kernel.asm	/^f0104c03:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104c06	obj/kern/kernel.asm	/^f0104c06:	e8 a5 03 00 00       	call   f0104fb0 <syscall>$/;"	l
f0104c0b	obj/kern/kernel.asm	/^f0104c0b:	89 46 1c             	mov    %eax,0x1c(%esi)$/;"	l
f0104c0e	obj/kern/kernel.asm	/^f0104c0e:	e9 a0 00 00 00       	jmp    f0104cb3 <trap+0x228>$/;"	l
f0104c13	obj/kern/kernel.asm	/^f0104c13:	83 f8 27             	cmp    $0x27,%eax$/;"	l
f0104c16	obj/kern/kernel.asm	/^f0104c16:	75 19                	jne    f0104c31 <trap+0x1a6>$/;"	l
f0104c18	obj/kern/kernel.asm	/^f0104c18:	c7 04 24 a4 95 10 f0 	movl   $0xf01095a4,(%esp)$/;"	l
f0104c1f	obj/kern/kernel.asm	/^f0104c1f:	e8 a8 f3 ff ff       	call   f0103fcc <cprintf>$/;"	l
f0104c24	obj/kern/kernel.asm	/^f0104c24:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104c27	obj/kern/kernel.asm	/^f0104c27:	e8 29 fb ff ff       	call   f0104755 <print_trapframe>$/;"	l
f0104c2c	obj/kern/kernel.asm	/^f0104c2c:	e9 82 00 00 00       	jmp    f0104cb3 <trap+0x228>$/;"	l
f0104c31	obj/kern/kernel.asm	/^f0104c31:	83 f8 20             	cmp    $0x20,%eax$/;"	l
f0104c34	obj/kern/kernel.asm	/^f0104c34:	75 1f                	jne    f0104c55 <trap+0x1ca>$/;"	l
f0104c36	obj/kern/kernel.asm	/^f0104c36:	e8 fb 20 00 00       	call   f0106d36 <lapic_eoi>$/;"	l
f0104c3b	obj/kern/kernel.asm	/^f0104c3b:	90                   	nop$/;"	l
f0104c3c	obj/kern/kernel.asm	/^f0104c3c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0104c40	obj/kern/kernel.asm	/^f0104c40:	e8 a4 1f 00 00       	call   f0106be9 <cpunum>$/;"	l
f0104c45	obj/kern/kernel.asm	/^f0104c45:	85 c0                	test   %eax,%eax$/;"	l
f0104c47	obj/kern/kernel.asm	/^f0104c47:	75 05                	jne    f0104c4e <trap+0x1c3>$/;"	l
f0104c49	obj/kern/kernel.asm	/^f0104c49:	e8 44 31 00 00       	call   f0107d92 <time_tick>$/;"	l
f0104c4e	obj/kern/kernel.asm	/^f0104c4e:	66 90                	xchg   %ax,%ax$/;"	l
f0104c50	obj/kern/kernel.asm	/^f0104c50:	e8 86 02 00 00       	call   f0104edb <sched_yield>$/;"	l
f0104c55	obj/kern/kernel.asm	/^f0104c55:	83 f8 21             	cmp    $0x21,%eax$/;"	l
f0104c58	obj/kern/kernel.asm	/^f0104c58:	75 08                	jne    f0104c62 <trap+0x1d7>$/;"	l
f0104c5a	obj/kern/kernel.asm	/^f0104c5a:	e8 ed b9 ff ff       	call   f010064c <kbd_intr>$/;"	l
f0104c5f	obj/kern/kernel.asm	/^f0104c5f:	90                   	nop$/;"	l
f0104c60	obj/kern/kernel.asm	/^f0104c60:	eb 51                	jmp    f0104cb3 <trap+0x228>$/;"	l
f0104c62	obj/kern/kernel.asm	/^f0104c62:	83 f8 24             	cmp    $0x24,%eax$/;"	l
f0104c65	obj/kern/kernel.asm	/^f0104c65:	75 0b                	jne    f0104c72 <trap+0x1e7>$/;"	l
f0104c67	obj/kern/kernel.asm	/^f0104c67:	e8 c4 b9 ff ff       	call   f0100630 <serial_intr>$/;"	l
f0104c6c	obj/kern/kernel.asm	/^f0104c6c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0104c70	obj/kern/kernel.asm	/^f0104c70:	eb 41                	jmp    f0104cb3 <trap+0x228>$/;"	l
f0104c72	obj/kern/kernel.asm	/^f0104c72:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104c75	obj/kern/kernel.asm	/^f0104c75:	e8 db fa ff ff       	call   f0104755 <print_trapframe>$/;"	l
f0104c7a	obj/kern/kernel.asm	/^f0104c7a:	66 83 7e 34 08       	cmpw   $0x8,0x34(%esi)$/;"	l
f0104c7f	obj/kern/kernel.asm	/^f0104c7f:	75 1c                	jne    f0104c9d <trap+0x212>$/;"	l
f0104c81	obj/kern/kernel.asm	/^f0104c81:	c7 44 24 08 c1 95 10 	movl   $0xf01095c1,0x8(%esp)$/;"	l
f0104c88	obj/kern/kernel.asm	/^f0104c88:	f0 $/;"	l
f0104c89	obj/kern/kernel.asm	/^f0104c89:	c7 44 24 04 3d 01 00 	movl   $0x13d,0x4(%esp)$/;"	l
f0104c90	obj/kern/kernel.asm	/^f0104c90:	00 $/;"	l
f0104c91	obj/kern/kernel.asm	/^f0104c91:	c7 04 24 7f 95 10 f0 	movl   $0xf010957f,(%esp)$/;"	l
f0104c98	obj/kern/kernel.asm	/^f0104c98:	e8 a3 b3 ff ff       	call   f0100040 <_panic>$/;"	l
f0104c9d	obj/kern/kernel.asm	/^f0104c9d:	e8 47 1f 00 00       	call   f0106be9 <cpunum>$/;"	l
f0104ca2	obj/kern/kernel.asm	/^f0104ca2:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104ca5	obj/kern/kernel.asm	/^f0104ca5:	8b 80 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%eax$/;"	l
f0104cab	obj/kern/kernel.asm	/^f0104cab:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104cae	obj/kern/kernel.asm	/^f0104cae:	e8 57 f0 ff ff       	call   f0103d0a <env_destroy>$/;"	l
f0104cb3	obj/kern/kernel.asm	/^f0104cb3:	e8 31 1f 00 00       	call   f0106be9 <cpunum>$/;"	l
f0104cb8	obj/kern/kernel.asm	/^f0104cb8:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104cbb	obj/kern/kernel.asm	/^f0104cbb:	83 b8 28 a0 2b f0 00 	cmpl   $0x0,-0xfd45fd8(%eax)$/;"	l
f0104cc2	obj/kern/kernel.asm	/^f0104cc2:	74 2a                	je     f0104cee <trap+0x263>$/;"	l
f0104cc4	obj/kern/kernel.asm	/^f0104cc4:	e8 20 1f 00 00       	call   f0106be9 <cpunum>$/;"	l
f0104cc9	obj/kern/kernel.asm	/^f0104cc9:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104ccc	obj/kern/kernel.asm	/^f0104ccc:	8b 80 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%eax$/;"	l
f0104cd2	obj/kern/kernel.asm	/^f0104cd2:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f0104cd6	obj/kern/kernel.asm	/^f0104cd6:	75 16                	jne    f0104cee <trap+0x263>$/;"	l
f0104cd8	obj/kern/kernel.asm	/^f0104cd8:	e8 0c 1f 00 00       	call   f0106be9 <cpunum>$/;"	l
f0104cdd	obj/kern/kernel.asm	/^f0104cdd:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104ce0	obj/kern/kernel.asm	/^f0104ce0:	8b 80 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%eax$/;"	l
f0104ce6	obj/kern/kernel.asm	/^f0104ce6:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104ce9	obj/kern/kernel.asm	/^f0104ce9:	e8 bd f0 ff ff       	call   f0103dab <env_run>$/;"	l
f0104cee	obj/kern/kernel.asm	/^f0104cee:	e8 e8 01 00 00       	call   f0104edb <sched_yield>$/;"	l
f0104cf3	obj/kern/kernel.asm	/^f0104cf3:	90                   	nop$/;"	l
f0104cf4	obj/kern/kernel.asm	/^f0104cf4 <handler0>:$/;"	l
f0104cf4	obj/kern/kernel.asm	/^f0104cf4:	6a 00                	push   $0x0$/;"	l
f0104cf6	obj/kern/kernel.asm	/^f0104cf6:	6a 00                	push   $0x0$/;"	l
f0104cf8	obj/kern/kernel.asm	/^f0104cf8:	e9 ef 00 00 00       	jmp    f0104dec <_alltraps>$/;"	l
f0104cfd	obj/kern/kernel.asm	/^f0104cfd:	90                   	nop$/;"	l
f0104cfe	obj/kern/kernel.asm	/^f0104cfe <handler1>:$/;"	l
f0104cfe	obj/kern/kernel.asm	/^f0104cfe:	6a 00                	push   $0x0$/;"	l
f0104d00	obj/kern/kernel.asm	/^f0104d00:	6a 01                	push   $0x1$/;"	l
f0104d02	obj/kern/kernel.asm	/^f0104d02:	e9 e5 00 00 00       	jmp    f0104dec <_alltraps>$/;"	l
f0104d07	obj/kern/kernel.asm	/^f0104d07:	90                   	nop$/;"	l
f0104d08	obj/kern/kernel.asm	/^f0104d08 <handler2>:$/;"	l
f0104d08	obj/kern/kernel.asm	/^f0104d08:	6a 00                	push   $0x0$/;"	l
f0104d0a	obj/kern/kernel.asm	/^f0104d0a:	6a 02                	push   $0x2$/;"	l
f0104d0c	obj/kern/kernel.asm	/^f0104d0c:	e9 db 00 00 00       	jmp    f0104dec <_alltraps>$/;"	l
f0104d11	obj/kern/kernel.asm	/^f0104d11:	90                   	nop$/;"	l
f0104d12	obj/kern/kernel.asm	/^f0104d12 <handler3>:$/;"	l
f0104d12	obj/kern/kernel.asm	/^f0104d12:	6a 00                	push   $0x0$/;"	l
f0104d14	obj/kern/kernel.asm	/^f0104d14:	6a 03                	push   $0x3$/;"	l
f0104d16	obj/kern/kernel.asm	/^f0104d16:	e9 d1 00 00 00       	jmp    f0104dec <_alltraps>$/;"	l
f0104d1b	obj/kern/kernel.asm	/^f0104d1b:	90                   	nop$/;"	l
f0104d1c	obj/kern/kernel.asm	/^f0104d1c <handler4>:$/;"	l
f0104d1c	obj/kern/kernel.asm	/^f0104d1c:	6a 00                	push   $0x0$/;"	l
f0104d1e	obj/kern/kernel.asm	/^f0104d1e:	6a 04                	push   $0x4$/;"	l
f0104d20	obj/kern/kernel.asm	/^f0104d20:	e9 c7 00 00 00       	jmp    f0104dec <_alltraps>$/;"	l
f0104d25	obj/kern/kernel.asm	/^f0104d25:	90                   	nop$/;"	l
f0104d26	obj/kern/kernel.asm	/^f0104d26 <handler5>:$/;"	l
f0104d26	obj/kern/kernel.asm	/^f0104d26:	6a 00                	push   $0x0$/;"	l
f0104d28	obj/kern/kernel.asm	/^f0104d28:	6a 05                	push   $0x5$/;"	l
f0104d2a	obj/kern/kernel.asm	/^f0104d2a:	e9 bd 00 00 00       	jmp    f0104dec <_alltraps>$/;"	l
f0104d2f	obj/kern/kernel.asm	/^f0104d2f:	90                   	nop$/;"	l
f0104d30	obj/kern/kernel.asm	/^f0104d30 <handler6>:$/;"	l
f0104d30	obj/kern/kernel.asm	/^f0104d30:	6a 00                	push   $0x0$/;"	l
f0104d32	obj/kern/kernel.asm	/^f0104d32:	6a 06                	push   $0x6$/;"	l
f0104d34	obj/kern/kernel.asm	/^f0104d34:	e9 b3 00 00 00       	jmp    f0104dec <_alltraps>$/;"	l
f0104d39	obj/kern/kernel.asm	/^f0104d39:	90                   	nop$/;"	l
f0104d3a	obj/kern/kernel.asm	/^f0104d3a <handler7>:$/;"	l
f0104d3a	obj/kern/kernel.asm	/^f0104d3a:	6a 00                	push   $0x0$/;"	l
f0104d3c	obj/kern/kernel.asm	/^f0104d3c:	6a 07                	push   $0x7$/;"	l
f0104d3e	obj/kern/kernel.asm	/^f0104d3e:	e9 a9 00 00 00       	jmp    f0104dec <_alltraps>$/;"	l
f0104d43	obj/kern/kernel.asm	/^f0104d43:	90                   	nop$/;"	l
f0104d44	obj/kern/kernel.asm	/^f0104d44 <handler8>:$/;"	l
f0104d44	obj/kern/kernel.asm	/^f0104d44:	6a 08                	push   $0x8$/;"	l
f0104d46	obj/kern/kernel.asm	/^f0104d46:	e9 a1 00 00 00       	jmp    f0104dec <_alltraps>$/;"	l
f0104d4b	obj/kern/kernel.asm	/^f0104d4b:	90                   	nop$/;"	l
f0104d4c	obj/kern/kernel.asm	/^f0104d4c <handler10>:$/;"	l
f0104d4c	obj/kern/kernel.asm	/^f0104d4c:	6a 0a                	push   $0xa$/;"	l
f0104d4e	obj/kern/kernel.asm	/^f0104d4e:	e9 99 00 00 00       	jmp    f0104dec <_alltraps>$/;"	l
f0104d53	obj/kern/kernel.asm	/^f0104d53:	90                   	nop$/;"	l
f0104d54	obj/kern/kernel.asm	/^f0104d54 <handler11>:$/;"	l
f0104d54	obj/kern/kernel.asm	/^f0104d54:	6a 0b                	push   $0xb$/;"	l
f0104d56	obj/kern/kernel.asm	/^f0104d56:	e9 91 00 00 00       	jmp    f0104dec <_alltraps>$/;"	l
f0104d5b	obj/kern/kernel.asm	/^f0104d5b:	90                   	nop$/;"	l
f0104d5c	obj/kern/kernel.asm	/^f0104d5c <handler12>:$/;"	l
f0104d5c	obj/kern/kernel.asm	/^f0104d5c:	6a 0c                	push   $0xc$/;"	l
f0104d5e	obj/kern/kernel.asm	/^f0104d5e:	e9 89 00 00 00       	jmp    f0104dec <_alltraps>$/;"	l
f0104d63	obj/kern/kernel.asm	/^f0104d63:	90                   	nop$/;"	l
f0104d64	obj/kern/kernel.asm	/^f0104d64 <handler13>:$/;"	l
f0104d64	obj/kern/kernel.asm	/^f0104d64:	6a 0d                	push   $0xd$/;"	l
f0104d66	obj/kern/kernel.asm	/^f0104d66:	e9 81 00 00 00       	jmp    f0104dec <_alltraps>$/;"	l
f0104d6b	obj/kern/kernel.asm	/^f0104d6b:	90                   	nop$/;"	l
f0104d6c	obj/kern/kernel.asm	/^f0104d6c <handler14>:$/;"	l
f0104d6c	obj/kern/kernel.asm	/^f0104d6c:	6a 0e                	push   $0xe$/;"	l
f0104d6e	obj/kern/kernel.asm	/^f0104d6e:	eb 7c                	jmp    f0104dec <_alltraps>$/;"	l
f0104d70	obj/kern/kernel.asm	/^f0104d70 <handler16>:$/;"	l
f0104d70	obj/kern/kernel.asm	/^f0104d70:	6a 00                	push   $0x0$/;"	l
f0104d72	obj/kern/kernel.asm	/^f0104d72:	6a 10                	push   $0x10$/;"	l
f0104d74	obj/kern/kernel.asm	/^f0104d74:	eb 76                	jmp    f0104dec <_alltraps>$/;"	l
f0104d76	obj/kern/kernel.asm	/^f0104d76 <handler17>:$/;"	l
f0104d76	obj/kern/kernel.asm	/^f0104d76:	6a 11                	push   $0x11$/;"	l
f0104d78	obj/kern/kernel.asm	/^f0104d78:	eb 72                	jmp    f0104dec <_alltraps>$/;"	l
f0104d7a	obj/kern/kernel.asm	/^f0104d7a <handler18>:$/;"	l
f0104d7a	obj/kern/kernel.asm	/^f0104d7a:	6a 00                	push   $0x0$/;"	l
f0104d7c	obj/kern/kernel.asm	/^f0104d7c:	6a 12                	push   $0x12$/;"	l
f0104d7e	obj/kern/kernel.asm	/^f0104d7e:	eb 6c                	jmp    f0104dec <_alltraps>$/;"	l
f0104d80	obj/kern/kernel.asm	/^f0104d80 <handler19>:$/;"	l
f0104d80	obj/kern/kernel.asm	/^f0104d80:	6a 00                	push   $0x0$/;"	l
f0104d82	obj/kern/kernel.asm	/^f0104d82:	6a 13                	push   $0x13$/;"	l
f0104d84	obj/kern/kernel.asm	/^f0104d84:	eb 66                	jmp    f0104dec <_alltraps>$/;"	l
f0104d86	obj/kern/kernel.asm	/^f0104d86 <handler48>:$/;"	l
f0104d86	obj/kern/kernel.asm	/^f0104d86:	6a 00                	push   $0x0$/;"	l
f0104d88	obj/kern/kernel.asm	/^f0104d88:	6a 30                	push   $0x30$/;"	l
f0104d8a	obj/kern/kernel.asm	/^f0104d8a:	eb 60                	jmp    f0104dec <_alltraps>$/;"	l
f0104d8c	obj/kern/kernel.asm	/^f0104d8c <irq_handler0>:$/;"	l
f0104d8c	obj/kern/kernel.asm	/^f0104d8c:	6a 00                	push   $0x0$/;"	l
f0104d8e	obj/kern/kernel.asm	/^f0104d8e:	6a 20                	push   $0x20$/;"	l
f0104d90	obj/kern/kernel.asm	/^f0104d90:	eb 5a                	jmp    f0104dec <_alltraps>$/;"	l
f0104d92	obj/kern/kernel.asm	/^f0104d92 <irq_handler1>:$/;"	l
f0104d92	obj/kern/kernel.asm	/^f0104d92:	6a 00                	push   $0x0$/;"	l
f0104d94	obj/kern/kernel.asm	/^f0104d94:	6a 21                	push   $0x21$/;"	l
f0104d96	obj/kern/kernel.asm	/^f0104d96:	eb 54                	jmp    f0104dec <_alltraps>$/;"	l
f0104d98	obj/kern/kernel.asm	/^f0104d98 <irq_handler2>:$/;"	l
f0104d98	obj/kern/kernel.asm	/^f0104d98:	6a 00                	push   $0x0$/;"	l
f0104d9a	obj/kern/kernel.asm	/^f0104d9a:	6a 22                	push   $0x22$/;"	l
f0104d9c	obj/kern/kernel.asm	/^f0104d9c:	eb 4e                	jmp    f0104dec <_alltraps>$/;"	l
f0104d9e	obj/kern/kernel.asm	/^f0104d9e <irq_handler3>:$/;"	l
f0104d9e	obj/kern/kernel.asm	/^f0104d9e:	6a 00                	push   $0x0$/;"	l
f0104da0	obj/kern/kernel.asm	/^f0104da0:	6a 23                	push   $0x23$/;"	l
f0104da2	obj/kern/kernel.asm	/^f0104da2:	eb 48                	jmp    f0104dec <_alltraps>$/;"	l
f0104da4	obj/kern/kernel.asm	/^f0104da4 <irq_handler4>:$/;"	l
f0104da4	obj/kern/kernel.asm	/^f0104da4:	6a 00                	push   $0x0$/;"	l
f0104da6	obj/kern/kernel.asm	/^f0104da6:	6a 24                	push   $0x24$/;"	l
f0104da8	obj/kern/kernel.asm	/^f0104da8:	eb 42                	jmp    f0104dec <_alltraps>$/;"	l
f0104daa	obj/kern/kernel.asm	/^f0104daa <irq_handler5>:$/;"	l
f0104daa	obj/kern/kernel.asm	/^f0104daa:	6a 00                	push   $0x0$/;"	l
f0104dac	obj/kern/kernel.asm	/^f0104dac:	6a 25                	push   $0x25$/;"	l
f0104dae	obj/kern/kernel.asm	/^f0104dae:	eb 3c                	jmp    f0104dec <_alltraps>$/;"	l
f0104db0	obj/kern/kernel.asm	/^f0104db0 <irq_handler6>:$/;"	l
f0104db0	obj/kern/kernel.asm	/^f0104db0:	6a 00                	push   $0x0$/;"	l
f0104db2	obj/kern/kernel.asm	/^f0104db2:	6a 26                	push   $0x26$/;"	l
f0104db4	obj/kern/kernel.asm	/^f0104db4:	eb 36                	jmp    f0104dec <_alltraps>$/;"	l
f0104db6	obj/kern/kernel.asm	/^f0104db6 <irq_handler7>:$/;"	l
f0104db6	obj/kern/kernel.asm	/^f0104db6:	6a 00                	push   $0x0$/;"	l
f0104db8	obj/kern/kernel.asm	/^f0104db8:	6a 27                	push   $0x27$/;"	l
f0104dba	obj/kern/kernel.asm	/^f0104dba:	eb 30                	jmp    f0104dec <_alltraps>$/;"	l
f0104dbc	obj/kern/kernel.asm	/^f0104dbc <irq_handler8>:$/;"	l
f0104dbc	obj/kern/kernel.asm	/^f0104dbc:	6a 00                	push   $0x0$/;"	l
f0104dbe	obj/kern/kernel.asm	/^f0104dbe:	6a 28                	push   $0x28$/;"	l
f0104dc0	obj/kern/kernel.asm	/^f0104dc0:	eb 2a                	jmp    f0104dec <_alltraps>$/;"	l
f0104dc2	obj/kern/kernel.asm	/^f0104dc2 <irq_handler9>:$/;"	l
f0104dc2	obj/kern/kernel.asm	/^f0104dc2:	6a 00                	push   $0x0$/;"	l
f0104dc4	obj/kern/kernel.asm	/^f0104dc4:	6a 29                	push   $0x29$/;"	l
f0104dc6	obj/kern/kernel.asm	/^f0104dc6:	eb 24                	jmp    f0104dec <_alltraps>$/;"	l
f0104dc8	obj/kern/kernel.asm	/^f0104dc8 <irq_handler10>:$/;"	l
f0104dc8	obj/kern/kernel.asm	/^f0104dc8:	6a 00                	push   $0x0$/;"	l
f0104dca	obj/kern/kernel.asm	/^f0104dca:	6a 2a                	push   $0x2a$/;"	l
f0104dcc	obj/kern/kernel.asm	/^f0104dcc:	eb 1e                	jmp    f0104dec <_alltraps>$/;"	l
f0104dce	obj/kern/kernel.asm	/^f0104dce <irq_handler11>:$/;"	l
f0104dce	obj/kern/kernel.asm	/^f0104dce:	6a 00                	push   $0x0$/;"	l
f0104dd0	obj/kern/kernel.asm	/^f0104dd0:	6a 2b                	push   $0x2b$/;"	l
f0104dd2	obj/kern/kernel.asm	/^f0104dd2:	eb 18                	jmp    f0104dec <_alltraps>$/;"	l
f0104dd4	obj/kern/kernel.asm	/^f0104dd4 <irq_handler12>:$/;"	l
f0104dd4	obj/kern/kernel.asm	/^f0104dd4:	6a 00                	push   $0x0$/;"	l
f0104dd6	obj/kern/kernel.asm	/^f0104dd6:	6a 2c                	push   $0x2c$/;"	l
f0104dd8	obj/kern/kernel.asm	/^f0104dd8:	eb 12                	jmp    f0104dec <_alltraps>$/;"	l
f0104dda	obj/kern/kernel.asm	/^f0104dda <irq_handler13>:$/;"	l
f0104dda	obj/kern/kernel.asm	/^f0104dda:	6a 00                	push   $0x0$/;"	l
f0104ddc	obj/kern/kernel.asm	/^f0104ddc:	6a 2d                	push   $0x2d$/;"	l
f0104dde	obj/kern/kernel.asm	/^f0104dde:	eb 0c                	jmp    f0104dec <_alltraps>$/;"	l
f0104de0	obj/kern/kernel.asm	/^f0104de0 <irq_handler14>:$/;"	l
f0104de0	obj/kern/kernel.asm	/^f0104de0:	6a 00                	push   $0x0$/;"	l
f0104de2	obj/kern/kernel.asm	/^f0104de2:	6a 2e                	push   $0x2e$/;"	l
f0104de4	obj/kern/kernel.asm	/^f0104de4:	eb 06                	jmp    f0104dec <_alltraps>$/;"	l
f0104de6	obj/kern/kernel.asm	/^f0104de6 <irq_handler15>:$/;"	l
f0104de6	obj/kern/kernel.asm	/^f0104de6:	6a 00                	push   $0x0$/;"	l
f0104de8	obj/kern/kernel.asm	/^f0104de8:	6a 2f                	push   $0x2f$/;"	l
f0104dea	obj/kern/kernel.asm	/^f0104dea:	eb 00                	jmp    f0104dec <_alltraps>$/;"	l
f0104dec	obj/kern/kernel.asm	/^f0104dec <_alltraps>:$/;"	l
f0104dec	obj/kern/kernel.asm	/^f0104dec:	66 6a 00             	pushw  $0x0$/;"	l
f0104def	obj/kern/kernel.asm	/^f0104def:	66 1e                	pushw  %ds$/;"	l
f0104df1	obj/kern/kernel.asm	/^f0104df1:	66 6a 00             	pushw  $0x0$/;"	l
f0104df4	obj/kern/kernel.asm	/^f0104df4:	66 06                	pushw  %es$/;"	l
f0104df6	obj/kern/kernel.asm	/^f0104df6:	60                   	pusha  $/;"	l
f0104df7	obj/kern/kernel.asm	/^f0104df7:	66 b8 10 00          	mov    $0x10,%ax$/;"	l
f0104dfb	obj/kern/kernel.asm	/^f0104dfb:	8e d8                	mov    %eax,%ds$/;"	l
f0104dfd	obj/kern/kernel.asm	/^f0104dfd:	8e c0                	mov    %eax,%es$/;"	l
f0104dff	obj/kern/kernel.asm	/^f0104dff:	54                   	push   %esp$/;"	l
f0104e00	obj/kern/kernel.asm	/^f0104e00:	e8 86 fc ff ff       	call   f0104a8b <trap>$/;"	l
f0104e05	obj/kern/kernel.asm	/^f0104e05 <sched_halt>:$/;"	l
f0104e05	obj/kern/kernel.asm	/^f0104e05:	55                   	push   %ebp$/;"	l
f0104e06	obj/kern/kernel.asm	/^f0104e06:	89 e5                	mov    %esp,%ebp$/;"	l
f0104e08	obj/kern/kernel.asm	/^f0104e08:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0104e0b	obj/kern/kernel.asm	/^f0104e0b:	8b 15 48 92 2b f0    	mov    0xf02b9248,%edx$/;"	l
f0104e11	obj/kern/kernel.asm	/^f0104e11:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104e16	obj/kern/kernel.asm	/^f0104e16:	8b 4a 54             	mov    0x54(%edx),%ecx$/;"	l
f0104e19	obj/kern/kernel.asm	/^f0104e19:	83 e9 01             	sub    $0x1,%ecx$/;"	l
f0104e1c	obj/kern/kernel.asm	/^f0104e1c:	83 f9 02             	cmp    $0x2,%ecx$/;"	l
f0104e1f	obj/kern/kernel.asm	/^f0104e1f:	76 0f                	jbe    f0104e30 <sched_halt+0x2b>$/;"	l
f0104e21	obj/kern/kernel.asm	/^f0104e21:	83 c0 01             	add    $0x1,%eax$/;"	l
f0104e24	obj/kern/kernel.asm	/^f0104e24:	83 c2 7c             	add    $0x7c,%edx$/;"	l
f0104e27	obj/kern/kernel.asm	/^f0104e27:	3d 00 04 00 00       	cmp    $0x400,%eax$/;"	l
f0104e2c	obj/kern/kernel.asm	/^f0104e2c:	75 e8                	jne    f0104e16 <sched_halt+0x11>$/;"	l
f0104e2e	obj/kern/kernel.asm	/^f0104e2e:	eb 07                	jmp    f0104e37 <sched_halt+0x32>$/;"	l
f0104e30	obj/kern/kernel.asm	/^f0104e30:	3d 00 04 00 00       	cmp    $0x400,%eax$/;"	l
f0104e35	obj/kern/kernel.asm	/^f0104e35:	75 1a                	jne    f0104e51 <sched_halt+0x4c>$/;"	l
f0104e37	obj/kern/kernel.asm	/^f0104e37:	c7 04 24 b0 97 10 f0 	movl   $0xf01097b0,(%esp)$/;"	l
f0104e3e	obj/kern/kernel.asm	/^f0104e3e:	e8 89 f1 ff ff       	call   f0103fcc <cprintf>$/;"	l
f0104e43	obj/kern/kernel.asm	/^f0104e43:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0104e4a	obj/kern/kernel.asm	/^f0104e4a:	e8 cb bb ff ff       	call   f0100a1a <monitor>$/;"	l
f0104e4f	obj/kern/kernel.asm	/^f0104e4f:	eb f2                	jmp    f0104e43 <sched_halt+0x3e>$/;"	l
f0104e51	obj/kern/kernel.asm	/^f0104e51:	e8 93 1d 00 00       	call   f0106be9 <cpunum>$/;"	l
f0104e56	obj/kern/kernel.asm	/^f0104e56:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104e59	obj/kern/kernel.asm	/^f0104e59:	c7 80 28 a0 2b f0 00 	movl   $0x0,-0xfd45fd8(%eax)$/;"	l
f0104e60	obj/kern/kernel.asm	/^f0104e60:	00 00 00 $/;"	l
f0104e63	obj/kern/kernel.asm	/^f0104e63:	a1 98 9e 2b f0       	mov    0xf02b9e98,%eax$/;"	l
f0104e68	obj/kern/kernel.asm	/^f0104e68:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0104e6d	obj/kern/kernel.asm	/^f0104e6d:	77 20                	ja     f0104e8f <sched_halt+0x8a>$/;"	l
f0104e6f	obj/kern/kernel.asm	/^f0104e6f:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0104e73	obj/kern/kernel.asm	/^f0104e73:	c7 44 24 08 c8 80 10 	movl   $0xf01080c8,0x8(%esp)$/;"	l
f0104e7a	obj/kern/kernel.asm	/^f0104e7a:	f0 $/;"	l
f0104e7b	obj/kern/kernel.asm	/^f0104e7b:	c7 44 24 04 4b 00 00 	movl   $0x4b,0x4(%esp)$/;"	l
f0104e82	obj/kern/kernel.asm	/^f0104e82:	00 $/;"	l
f0104e83	obj/kern/kernel.asm	/^f0104e83:	c7 04 24 d9 97 10 f0 	movl   $0xf01097d9,(%esp)$/;"	l
f0104e8a	obj/kern/kernel.asm	/^f0104e8a:	e8 b1 b1 ff ff       	call   f0100040 <_panic>$/;"	l
f0104e8f	obj/kern/kernel.asm	/^f0104e8f:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0104e94	obj/kern/kernel.asm	/^f0104e94:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0104e97	obj/kern/kernel.asm	/^f0104e97:	e8 4d 1d 00 00       	call   f0106be9 <cpunum>$/;"	l
f0104e9c	obj/kern/kernel.asm	/^f0104e9c:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0104e9f	obj/kern/kernel.asm	/^f0104e9f:	81 c2 20 a0 2b f0    	add    $0xf02ba020,%edx$/;"	l
f0104ea5	obj/kern/kernel.asm	/^f0104ea5:	b8 02 00 00 00       	mov    $0x2,%eax$/;"	l
f0104eaa	obj/kern/kernel.asm	/^f0104eaa:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f0104eae	obj/kern/kernel.asm	/^f0104eae:	c7 04 24 c0 53 12 f0 	movl   $0xf01253c0,(%esp)$/;"	l
f0104eb5	obj/kern/kernel.asm	/^f0104eb5:	e8 59 20 00 00       	call   f0106f13 <spin_unlock>$/;"	l
f0104eba	obj/kern/kernel.asm	/^f0104eba:	f3 90                	pause  $/;"	l
f0104ebc	obj/kern/kernel.asm	/^f0104ebc:	e8 28 1d 00 00       	call   f0106be9 <cpunum>$/;"	l
f0104ec1	obj/kern/kernel.asm	/^f0104ec1:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104ec4	obj/kern/kernel.asm	/^f0104ec4:	8b 80 30 a0 2b f0    	mov    -0xfd45fd0(%eax),%eax$/;"	l
f0104eca	obj/kern/kernel.asm	/^f0104eca:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0104ecf	obj/kern/kernel.asm	/^f0104ecf:	89 c4                	mov    %eax,%esp$/;"	l
f0104ed1	obj/kern/kernel.asm	/^f0104ed1:	6a 00                	push   $0x0$/;"	l
f0104ed3	obj/kern/kernel.asm	/^f0104ed3:	6a 00                	push   $0x0$/;"	l
f0104ed5	obj/kern/kernel.asm	/^f0104ed5:	fb                   	sti    $/;"	l
f0104ed6	obj/kern/kernel.asm	/^f0104ed6:	f4                   	hlt    $/;"	l
f0104ed7	obj/kern/kernel.asm	/^f0104ed7:	eb fd                	jmp    f0104ed6 <sched_halt+0xd1>$/;"	l
f0104ed9	obj/kern/kernel.asm	/^f0104ed9:	c9                   	leave  $/;"	l
f0104eda	obj/kern/kernel.asm	/^f0104eda:	c3                   	ret    $/;"	l
f0104edb	obj/kern/kernel.asm	/^f0104edb <sched_yield>:$/;"	l
f0104edb	obj/kern/kernel.asm	/^f0104edb:	55                   	push   %ebp$/;"	l
f0104edc	obj/kern/kernel.asm	/^f0104edc:	89 e5                	mov    %esp,%ebp$/;"	l
f0104ede	obj/kern/kernel.asm	/^f0104ede:	56                   	push   %esi$/;"	l
f0104edf	obj/kern/kernel.asm	/^f0104edf:	53                   	push   %ebx$/;"	l
f0104ee0	obj/kern/kernel.asm	/^f0104ee0:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0104ee3	obj/kern/kernel.asm	/^f0104ee3:	e8 01 1d 00 00       	call   f0106be9 <cpunum>$/;"	l
f0104ee8	obj/kern/kernel.asm	/^f0104ee8:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104eeb	obj/kern/kernel.asm	/^f0104eeb:	8b 98 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%ebx$/;"	l
f0104ef1	obj/kern/kernel.asm	/^f0104ef1:	e8 f3 1c 00 00       	call   f0106be9 <cpunum>$/;"	l
f0104ef6	obj/kern/kernel.asm	/^f0104ef6:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104ef9	obj/kern/kernel.asm	/^f0104ef9:	8b b0 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%esi$/;"	l
f0104eff	obj/kern/kernel.asm	/^f0104eff:	e8 e5 1c 00 00       	call   f0106be9 <cpunum>$/;"	l
f0104f04	obj/kern/kernel.asm	/^f0104f04:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104f07	obj/kern/kernel.asm	/^f0104f07:	3b b0 28 a0 2b f0    	cmp    -0xfd45fd8(%eax),%esi$/;"	l
f0104f0d	obj/kern/kernel.asm	/^f0104f0d:	74 24                	je     f0104f33 <sched_yield+0x58>$/;"	l
f0104f0f	obj/kern/kernel.asm	/^f0104f0f:	c7 44 24 0c e6 97 10 	movl   $0xf01097e6,0xc(%esp)$/;"	l
f0104f16	obj/kern/kernel.asm	/^f0104f16:	f0 $/;"	l
f0104f17	obj/kern/kernel.asm	/^f0104f17:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0104f1e	obj/kern/kernel.asm	/^f0104f1e:	f0 $/;"	l
f0104f1f	obj/kern/kernel.asm	/^f0104f1f:	c7 44 24 04 21 00 00 	movl   $0x21,0x4(%esp)$/;"	l
f0104f26	obj/kern/kernel.asm	/^f0104f26:	00 $/;"	l
f0104f27	obj/kern/kernel.asm	/^f0104f27:	c7 04 24 d9 97 10 f0 	movl   $0xf01097d9,(%esp)$/;"	l
f0104f2e	obj/kern/kernel.asm	/^f0104f2e:	e8 0d b1 ff ff       	call   f0100040 <_panic>$/;"	l
f0104f33	obj/kern/kernel.asm	/^f0104f33:	85 db                	test   %ebx,%ebx$/;"	l
f0104f35	obj/kern/kernel.asm	/^f0104f35:	0f 44 1d 48 92 2b f0 	cmove  0xf02b9248,%ebx$/;"	l
f0104f3c	obj/kern/kernel.asm	/^f0104f3c:	8b 15 48 92 2b f0    	mov    0xf02b9248,%edx$/;"	l
f0104f42	obj/kern/kernel.asm	/^f0104f42:	8d 8a 00 f0 01 00    	lea    0x1f000(%edx),%ecx$/;"	l
f0104f48	obj/kern/kernel.asm	/^f0104f48:	b8 00 04 00 00       	mov    $0x400,%eax$/;"	l
f0104f4d	obj/kern/kernel.asm	/^f0104f4d:	39 d9                	cmp    %ebx,%ecx$/;"	l
f0104f4f	obj/kern/kernel.asm	/^f0104f4f:	0f 46 da             	cmovbe %edx,%ebx$/;"	l
f0104f52	obj/kern/kernel.asm	/^f0104f52:	83 7b 54 02          	cmpl   $0x2,0x54(%ebx)$/;"	l
f0104f56	obj/kern/kernel.asm	/^f0104f56:	75 08                	jne    f0104f60 <sched_yield+0x85>$/;"	l
f0104f58	obj/kern/kernel.asm	/^f0104f58:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0104f5b	obj/kern/kernel.asm	/^f0104f5b:	e8 4b ee ff ff       	call   f0103dab <env_run>$/;"	l
f0104f60	obj/kern/kernel.asm	/^f0104f60:	83 c3 7c             	add    $0x7c,%ebx$/;"	l
f0104f63	obj/kern/kernel.asm	/^f0104f63:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0104f66	obj/kern/kernel.asm	/^f0104f66:	75 e5                	jne    f0104f4d <sched_yield+0x72>$/;"	l
f0104f68	obj/kern/kernel.asm	/^f0104f68:	e8 7c 1c 00 00       	call   f0106be9 <cpunum>$/;"	l
f0104f6d	obj/kern/kernel.asm	/^f0104f6d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104f70	obj/kern/kernel.asm	/^f0104f70:	83 b8 28 a0 2b f0 00 	cmpl   $0x0,-0xfd45fd8(%eax)$/;"	l
f0104f77	obj/kern/kernel.asm	/^f0104f77:	74 2a                	je     f0104fa3 <sched_yield+0xc8>$/;"	l
f0104f79	obj/kern/kernel.asm	/^f0104f79:	e8 6b 1c 00 00       	call   f0106be9 <cpunum>$/;"	l
f0104f7e	obj/kern/kernel.asm	/^f0104f7e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104f81	obj/kern/kernel.asm	/^f0104f81:	8b 80 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%eax$/;"	l
f0104f87	obj/kern/kernel.asm	/^f0104f87:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f0104f8b	obj/kern/kernel.asm	/^f0104f8b:	75 16                	jne    f0104fa3 <sched_yield+0xc8>$/;"	l
f0104f8d	obj/kern/kernel.asm	/^f0104f8d:	e8 57 1c 00 00       	call   f0106be9 <cpunum>$/;"	l
f0104f92	obj/kern/kernel.asm	/^f0104f92:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104f95	obj/kern/kernel.asm	/^f0104f95:	8b 80 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%eax$/;"	l
f0104f9b	obj/kern/kernel.asm	/^f0104f9b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104f9e	obj/kern/kernel.asm	/^f0104f9e:	e8 08 ee ff ff       	call   f0103dab <env_run>$/;"	l
f0104fa3	obj/kern/kernel.asm	/^f0104fa3:	e8 5d fe ff ff       	call   f0104e05 <sched_halt>$/;"	l
f0104fa8	obj/kern/kernel.asm	/^f0104fa8:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104fab	obj/kern/kernel.asm	/^f0104fab:	5b                   	pop    %ebx$/;"	l
f0104fac	obj/kern/kernel.asm	/^f0104fac:	5e                   	pop    %esi$/;"	l
f0104fad	obj/kern/kernel.asm	/^f0104fad:	5d                   	pop    %ebp$/;"	l
f0104fae	obj/kern/kernel.asm	/^f0104fae:	c3                   	ret    $/;"	l
f0104faf	obj/kern/kernel.asm	/^f0104faf:	90                   	nop$/;"	l
f0104fb0	obj/kern/kernel.asm	/^f0104fb0 <syscall>:$/;"	l
f0104fb0	obj/kern/kernel.asm	/^f0104fb0:	55                   	push   %ebp$/;"	l
f0104fb1	obj/kern/kernel.asm	/^f0104fb1:	89 e5                	mov    %esp,%ebp$/;"	l
f0104fb3	obj/kern/kernel.asm	/^f0104fb3:	57                   	push   %edi$/;"	l
f0104fb4	obj/kern/kernel.asm	/^f0104fb4:	56                   	push   %esi$/;"	l
f0104fb5	obj/kern/kernel.asm	/^f0104fb5:	53                   	push   %ebx$/;"	l
f0104fb6	obj/kern/kernel.asm	/^f0104fb6:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0104fb9	obj/kern/kernel.asm	/^f0104fb9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104fbc	obj/kern/kernel.asm	/^f0104fbc:	83 f8 10             	cmp    $0x10,%eax$/;"	l
f0104fbf	obj/kern/kernel.asm	/^f0104fbf:	0f 87 4a 08 00 00    	ja     f010580f <syscall+0x85f>$/;"	l
f0104fc5	obj/kern/kernel.asm	/^f0104fc5:	ff 24 85 30 98 10 f0 	jmp    *-0xfef67d0(,%eax,4)$/;"	l
f0104fcc	obj/kern/kernel.asm	/^f0104fcc:	e8 18 1c 00 00       	call   f0106be9 <cpunum>$/;"	l
f0104fd1	obj/kern/kernel.asm	/^f0104fd1:	c7 44 24 0c 04 00 00 	movl   $0x4,0xc(%esp)$/;"	l
f0104fd8	obj/kern/kernel.asm	/^f0104fd8:	00 $/;"	l
f0104fd9	obj/kern/kernel.asm	/^f0104fd9:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0104fdc	obj/kern/kernel.asm	/^f0104fdc:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0104fe0	obj/kern/kernel.asm	/^f0104fe0:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0104fe3	obj/kern/kernel.asm	/^f0104fe3:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0104fe7	obj/kern/kernel.asm	/^f0104fe7:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104fea	obj/kern/kernel.asm	/^f0104fea:	8b 80 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%eax$/;"	l
f0104ff0	obj/kern/kernel.asm	/^f0104ff0:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104ff3	obj/kern/kernel.asm	/^f0104ff3:	e8 2c e6 ff ff       	call   f0103624 <user_mem_assert>$/;"	l
f0104ff8	obj/kern/kernel.asm	/^f0104ff8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0104ffb	obj/kern/kernel.asm	/^f0104ffb:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0104fff	obj/kern/kernel.asm	/^f0104fff:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0105002	obj/kern/kernel.asm	/^f0105002:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105006	obj/kern/kernel.asm	/^f0105006:	c7 04 24 01 98 10 f0 	movl   $0xf0109801,(%esp)$/;"	l
f010500d	obj/kern/kernel.asm	/^f010500d:	e8 ba ef ff ff       	call   f0103fcc <cprintf>$/;"	l
f0105012	obj/kern/kernel.asm	/^f0105012:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105017	obj/kern/kernel.asm	/^f0105017:	e9 5d 08 00 00       	jmp    f0105879 <syscall+0x8c9>$/;"	l
f010501c	obj/kern/kernel.asm	/^f010501c:	e8 3d b6 ff ff       	call   f010065e <cons_getc>$/;"	l
f0105021	obj/kern/kernel.asm	/^f0105021:	e9 53 08 00 00       	jmp    f0105879 <syscall+0x8c9>$/;"	l
f0105026	obj/kern/kernel.asm	/^f0105026:	e8 be 1b 00 00       	call   f0106be9 <cpunum>$/;"	l
f010502b	obj/kern/kernel.asm	/^f010502b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010502e	obj/kern/kernel.asm	/^f010502e:	8b 80 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%eax$/;"	l
f0105034	obj/kern/kernel.asm	/^f0105034:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0105037	obj/kern/kernel.asm	/^f0105037:	e9 3d 08 00 00       	jmp    f0105879 <syscall+0x8c9>$/;"	l
f010503c	obj/kern/kernel.asm	/^f010503c:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0105043	obj/kern/kernel.asm	/^f0105043:	00 $/;"	l
f0105044	obj/kern/kernel.asm	/^f0105044:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0105047	obj/kern/kernel.asm	/^f0105047:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010504b	obj/kern/kernel.asm	/^f010504b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010504e	obj/kern/kernel.asm	/^f010504e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105051	obj/kern/kernel.asm	/^f0105051:	e8 cd e6 ff ff       	call   f0103723 <envid2env>$/;"	l
f0105056	obj/kern/kernel.asm	/^f0105056:	89 c2                	mov    %eax,%edx$/;"	l
f0105058	obj/kern/kernel.asm	/^f0105058:	85 c0                	test   %eax,%eax$/;"	l
f010505a	obj/kern/kernel.asm	/^f010505a:	78 10                	js     f010506c <syscall+0xbc>$/;"	l
f010505c	obj/kern/kernel.asm	/^f010505c:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010505f	obj/kern/kernel.asm	/^f010505f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105062	obj/kern/kernel.asm	/^f0105062:	e8 a3 ec ff ff       	call   f0103d0a <env_destroy>$/;"	l
f0105067	obj/kern/kernel.asm	/^f0105067:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010506c	obj/kern/kernel.asm	/^f010506c:	89 d0                	mov    %edx,%eax$/;"	l
f010506e	obj/kern/kernel.asm	/^f010506e:	e9 06 08 00 00       	jmp    f0105879 <syscall+0x8c9>$/;"	l
f0105073	obj/kern/kernel.asm	/^f0105073:	e8 63 fe ff ff       	call   f0104edb <sched_yield>$/;"	l
f0105078	obj/kern/kernel.asm	/^f0105078:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f010507f	obj/kern/kernel.asm	/^f010507f:	e8 65 1b 00 00       	call   f0106be9 <cpunum>$/;"	l
f0105084	obj/kern/kernel.asm	/^f0105084:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105087	obj/kern/kernel.asm	/^f0105087:	8b 80 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%eax$/;"	l
f010508d	obj/kern/kernel.asm	/^f010508d:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0105090	obj/kern/kernel.asm	/^f0105090:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105094	obj/kern/kernel.asm	/^f0105094:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0105097	obj/kern/kernel.asm	/^f0105097:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010509a	obj/kern/kernel.asm	/^f010509a:	e8 95 e7 ff ff       	call   f0103834 <env_alloc>$/;"	l
f010509f	obj/kern/kernel.asm	/^f010509f:	89 c2                	mov    %eax,%edx$/;"	l
f01050a1	obj/kern/kernel.asm	/^f01050a1:	85 c0                	test   %eax,%eax$/;"	l
f01050a3	obj/kern/kernel.asm	/^f01050a3:	78 2e                	js     f01050d3 <syscall+0x123>$/;"	l
f01050a5	obj/kern/kernel.asm	/^f01050a5:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f01050a8	obj/kern/kernel.asm	/^f01050a8:	c7 43 54 04 00 00 00 	movl   $0x4,0x54(%ebx)$/;"	l
f01050af	obj/kern/kernel.asm	/^f01050af:	e8 35 1b 00 00       	call   f0106be9 <cpunum>$/;"	l
f01050b4	obj/kern/kernel.asm	/^f01050b4:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01050b7	obj/kern/kernel.asm	/^f01050b7:	8b b0 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%esi$/;"	l
f01050bd	obj/kern/kernel.asm	/^f01050bd:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f01050c2	obj/kern/kernel.asm	/^f01050c2:	89 df                	mov    %ebx,%edi$/;"	l
f01050c4	obj/kern/kernel.asm	/^f01050c4:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f01050c6	obj/kern/kernel.asm	/^f01050c6:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01050c9	obj/kern/kernel.asm	/^f01050c9:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)$/;"	l
f01050d0	obj/kern/kernel.asm	/^f01050d0:	8b 50 48             	mov    0x48(%eax),%edx$/;"	l
f01050d3	obj/kern/kernel.asm	/^f01050d3:	89 d0                	mov    %edx,%eax$/;"	l
f01050d5	obj/kern/kernel.asm	/^f01050d5:	e9 9f 07 00 00       	jmp    f0105879 <syscall+0x8c9>$/;"	l
f01050da	obj/kern/kernel.asm	/^f01050da:	81 7d 10 ff ff bf ee 	cmpl   $0xeebfffff,0x10(%ebp)$/;"	l
f01050e1	obj/kern/kernel.asm	/^f01050e1:	0f 87 9e 00 00 00    	ja     f0105185 <syscall+0x1d5>$/;"	l
f01050e7	obj/kern/kernel.asm	/^f01050e7:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01050ea	obj/kern/kernel.asm	/^f01050ea:	05 ff 0f 00 00       	add    $0xfff,%eax$/;"	l
f01050ef	obj/kern/kernel.asm	/^f01050ef:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01050f4	obj/kern/kernel.asm	/^f01050f4:	39 45 10             	cmp    %eax,0x10(%ebp)$/;"	l
f01050f7	obj/kern/kernel.asm	/^f01050f7:	0f 85 8f 00 00 00    	jne    f010518c <syscall+0x1dc>$/;"	l
f01050fd	obj/kern/kernel.asm	/^f01050fd:	f7 45 14 f8 f1 ff ff 	testl  $0xfffff1f8,0x14(%ebp)$/;"	l
f0105104	obj/kern/kernel.asm	/^f0105104:	0f 85 89 00 00 00    	jne    f0105193 <syscall+0x1e3>$/;"	l
f010510a	obj/kern/kernel.asm	/^f010510a:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010510d	obj/kern/kernel.asm	/^f010510d:	f7 d0                	not    %eax$/;"	l
f010510f	obj/kern/kernel.asm	/^f010510f:	83 e0 05             	and    $0x5,%eax$/;"	l
f0105112	obj/kern/kernel.asm	/^f0105112:	89 c3                	mov    %eax,%ebx$/;"	l
f0105114	obj/kern/kernel.asm	/^f0105114:	0f 85 80 00 00 00    	jne    f010519a <syscall+0x1ea>$/;"	l
f010511a	obj/kern/kernel.asm	/^f010511a:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0105121	obj/kern/kernel.asm	/^f0105121:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0105128	obj/kern/kernel.asm	/^f0105128:	00 $/;"	l
f0105129	obj/kern/kernel.asm	/^f0105129:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f010512c	obj/kern/kernel.asm	/^f010512c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105130	obj/kern/kernel.asm	/^f0105130:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105133	obj/kern/kernel.asm	/^f0105133:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105136	obj/kern/kernel.asm	/^f0105136:	e8 e8 e5 ff ff       	call   f0103723 <envid2env>$/;"	l
f010513b	obj/kern/kernel.asm	/^f010513b:	85 c0                	test   %eax,%eax$/;"	l
f010513d	obj/kern/kernel.asm	/^f010513d:	78 62                	js     f01051a1 <syscall+0x1f1>$/;"	l
f010513f	obj/kern/kernel.asm	/^f010513f:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f0105146	obj/kern/kernel.asm	/^f0105146:	e8 d0 bf ff ff       	call   f010111b <page_alloc>$/;"	l
f010514b	obj/kern/kernel.asm	/^f010514b:	89 c6                	mov    %eax,%esi$/;"	l
f010514d	obj/kern/kernel.asm	/^f010514d:	85 c0                	test   %eax,%eax$/;"	l
f010514f	obj/kern/kernel.asm	/^f010514f:	74 54                	je     f01051a5 <syscall+0x1f5>$/;"	l
f0105151	obj/kern/kernel.asm	/^f0105151:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105154	obj/kern/kernel.asm	/^f0105154:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0105158	obj/kern/kernel.asm	/^f0105158:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f010515b	obj/kern/kernel.asm	/^f010515b:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010515f	obj/kern/kernel.asm	/^f010515f:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0105163	obj/kern/kernel.asm	/^f0105163:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105166	obj/kern/kernel.asm	/^f0105166:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0105169	obj/kern/kernel.asm	/^f0105169:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010516c	obj/kern/kernel.asm	/^f010516c:	e8 ea c2 ff ff       	call   f010145b <page_insert>$/;"	l
f0105171	obj/kern/kernel.asm	/^f0105171:	89 c7                	mov    %eax,%edi$/;"	l
f0105173	obj/kern/kernel.asm	/^f0105173:	85 c0                	test   %eax,%eax$/;"	l
f0105175	obj/kern/kernel.asm	/^f0105175:	79 33                	jns    f01051aa <syscall+0x1fa>$/;"	l
f0105177	obj/kern/kernel.asm	/^f0105177:	89 34 24             	mov    %esi,(%esp)$/;"	l
f010517a	obj/kern/kernel.asm	/^f010517a:	e8 2c c0 ff ff       	call   f01011ab <page_free>$/;"	l
f010517f	obj/kern/kernel.asm	/^f010517f:	89 fb                	mov    %edi,%ebx$/;"	l
f0105181	obj/kern/kernel.asm	/^f0105181:	f7 db                	neg    %ebx$/;"	l
f0105183	obj/kern/kernel.asm	/^f0105183:	eb 25                	jmp    f01051aa <syscall+0x1fa>$/;"	l
f0105185	obj/kern/kernel.asm	/^f0105185:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f010518a	obj/kern/kernel.asm	/^f010518a:	eb 1e                	jmp    f01051aa <syscall+0x1fa>$/;"	l
f010518c	obj/kern/kernel.asm	/^f010518c:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f0105191	obj/kern/kernel.asm	/^f0105191:	eb 17                	jmp    f01051aa <syscall+0x1fa>$/;"	l
f0105193	obj/kern/kernel.asm	/^f0105193:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f0105198	obj/kern/kernel.asm	/^f0105198:	eb 10                	jmp    f01051aa <syscall+0x1fa>$/;"	l
f010519a	obj/kern/kernel.asm	/^f010519a:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f010519f	obj/kern/kernel.asm	/^f010519f:	eb 09                	jmp    f01051aa <syscall+0x1fa>$/;"	l
f01051a1	obj/kern/kernel.asm	/^f01051a1:	89 c3                	mov    %eax,%ebx$/;"	l
f01051a3	obj/kern/kernel.asm	/^f01051a3:	eb 05                	jmp    f01051aa <syscall+0x1fa>$/;"	l
f01051a5	obj/kern/kernel.asm	/^f01051a5:	bb fc ff ff ff       	mov    $0xfffffffc,%ebx$/;"	l
f01051aa	obj/kern/kernel.asm	/^f01051aa:	89 d8                	mov    %ebx,%eax$/;"	l
f01051ac	obj/kern/kernel.asm	/^f01051ac:	e9 c8 06 00 00       	jmp    f0105879 <syscall+0x8c9>$/;"	l
f01051b1	obj/kern/kernel.asm	/^f01051b1:	81 7d 10 ff ff bf ee 	cmpl   $0xeebfffff,0x10(%ebp)$/;"	l
f01051b8	obj/kern/kernel.asm	/^f01051b8:	0f 87 03 01 00 00    	ja     f01052c1 <syscall+0x311>$/;"	l
f01051be	obj/kern/kernel.asm	/^f01051be:	81 7d 18 ff ff bf ee 	cmpl   $0xeebfffff,0x18(%ebp)$/;"	l
f01051c5	obj/kern/kernel.asm	/^f01051c5:	0f 87 f6 00 00 00    	ja     f01052c1 <syscall+0x311>$/;"	l
f01051cb	obj/kern/kernel.asm	/^f01051cb:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01051ce	obj/kern/kernel.asm	/^f01051ce:	05 ff 0f 00 00       	add    $0xfff,%eax$/;"	l
f01051d3	obj/kern/kernel.asm	/^f01051d3:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01051d8	obj/kern/kernel.asm	/^f01051d8:	39 45 10             	cmp    %eax,0x10(%ebp)$/;"	l
f01051db	obj/kern/kernel.asm	/^f01051db:	0f 85 e7 00 00 00    	jne    f01052c8 <syscall+0x318>$/;"	l
f01051e1	obj/kern/kernel.asm	/^f01051e1:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
f01051e4	obj/kern/kernel.asm	/^f01051e4:	05 ff 0f 00 00       	add    $0xfff,%eax$/;"	l
f01051e9	obj/kern/kernel.asm	/^f01051e9:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01051ee	obj/kern/kernel.asm	/^f01051ee:	39 45 18             	cmp    %eax,0x18(%ebp)$/;"	l
f01051f1	obj/kern/kernel.asm	/^f01051f1:	0f 85 d8 00 00 00    	jne    f01052cf <syscall+0x31f>$/;"	l
f01051f7	obj/kern/kernel.asm	/^f01051f7:	f7 45 1c f8 f1 ff ff 	testl  $0xfffff1f8,0x1c(%ebp)$/;"	l
f01051fe	obj/kern/kernel.asm	/^f01051fe:	0f 85 d2 00 00 00    	jne    f01052d6 <syscall+0x326>$/;"	l
f0105204	obj/kern/kernel.asm	/^f0105204:	8b 45 1c             	mov    0x1c(%ebp),%eax$/;"	l
f0105207	obj/kern/kernel.asm	/^f0105207:	f7 d0                	not    %eax$/;"	l
f0105209	obj/kern/kernel.asm	/^f0105209:	a8 05                	test   $0x5,%al$/;"	l
f010520b	obj/kern/kernel.asm	/^f010520b:	0f 85 cc 00 00 00    	jne    f01052dd <syscall+0x32d>$/;"	l
f0105211	obj/kern/kernel.asm	/^f0105211:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f0105218	obj/kern/kernel.asm	/^f0105218:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f010521f	obj/kern/kernel.asm	/^f010521f:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0105226	obj/kern/kernel.asm	/^f0105226:	00 $/;"	l
f0105227	obj/kern/kernel.asm	/^f0105227:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f010522a	obj/kern/kernel.asm	/^f010522a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010522e	obj/kern/kernel.asm	/^f010522e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105231	obj/kern/kernel.asm	/^f0105231:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105234	obj/kern/kernel.asm	/^f0105234:	e8 ea e4 ff ff       	call   f0103723 <envid2env>$/;"	l
f0105239	obj/kern/kernel.asm	/^f0105239:	89 c2                	mov    %eax,%edx$/;"	l
f010523b	obj/kern/kernel.asm	/^f010523b:	85 c0                	test   %eax,%eax$/;"	l
f010523d	obj/kern/kernel.asm	/^f010523d:	0f 88 ad 00 00 00    	js     f01052f0 <syscall+0x340>$/;"	l
f0105243	obj/kern/kernel.asm	/^f0105243:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f010524a	obj/kern/kernel.asm	/^f010524a:	00 $/;"	l
f010524b	obj/kern/kernel.asm	/^f010524b:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f010524e	obj/kern/kernel.asm	/^f010524e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105252	obj/kern/kernel.asm	/^f0105252:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105255	obj/kern/kernel.asm	/^f0105255:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105258	obj/kern/kernel.asm	/^f0105258:	e8 c6 e4 ff ff       	call   f0103723 <envid2env>$/;"	l
f010525d	obj/kern/kernel.asm	/^f010525d:	89 c2                	mov    %eax,%edx$/;"	l
f010525f	obj/kern/kernel.asm	/^f010525f:	85 c0                	test   %eax,%eax$/;"	l
f0105261	obj/kern/kernel.asm	/^f0105261:	0f 88 89 00 00 00    	js     f01052f0 <syscall+0x340>$/;"	l
f0105267	obj/kern/kernel.asm	/^f0105267:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
f010526a	obj/kern/kernel.asm	/^f010526a:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010526e	obj/kern/kernel.asm	/^f010526e:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0105271	obj/kern/kernel.asm	/^f0105271:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105275	obj/kern/kernel.asm	/^f0105275:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105278	obj/kern/kernel.asm	/^f0105278:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f010527b	obj/kern/kernel.asm	/^f010527b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010527e	obj/kern/kernel.asm	/^f010527e:	e8 e1 c0 ff ff       	call   f0101364 <page_lookup>$/;"	l
f0105283	obj/kern/kernel.asm	/^f0105283:	85 c0                	test   %eax,%eax$/;"	l
f0105285	obj/kern/kernel.asm	/^f0105285:	74 5d                	je     f01052e4 <syscall+0x334>$/;"	l
f0105287	obj/kern/kernel.asm	/^f0105287:	f6 45 1c 02          	testb  $0x2,0x1c(%ebp)$/;"	l
f010528b	obj/kern/kernel.asm	/^f010528b:	74 08                	je     f0105295 <syscall+0x2e5>$/;"	l
f010528d	obj/kern/kernel.asm	/^f010528d:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0105290	obj/kern/kernel.asm	/^f0105290:	f6 02 02             	testb  $0x2,(%edx)$/;"	l
f0105293	obj/kern/kernel.asm	/^f0105293:	74 56                	je     f01052eb <syscall+0x33b>$/;"	l
f0105295	obj/kern/kernel.asm	/^f0105295:	8b 75 1c             	mov    0x1c(%ebp),%esi$/;"	l
f0105298	obj/kern/kernel.asm	/^f0105298:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f010529c	obj/kern/kernel.asm	/^f010529c:	8b 7d 18             	mov    0x18(%ebp),%edi$/;"	l
f010529f	obj/kern/kernel.asm	/^f010529f:	89 7c 24 08          	mov    %edi,0x8(%esp)$/;"	l
f01052a3	obj/kern/kernel.asm	/^f01052a3:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01052a7	obj/kern/kernel.asm	/^f01052a7:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01052aa	obj/kern/kernel.asm	/^f01052aa:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f01052ad	obj/kern/kernel.asm	/^f01052ad:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01052b0	obj/kern/kernel.asm	/^f01052b0:	e8 a6 c1 ff ff       	call   f010145b <page_insert>$/;"	l
f01052b5	obj/kern/kernel.asm	/^f01052b5:	85 c0                	test   %eax,%eax$/;"	l
f01052b7	obj/kern/kernel.asm	/^f01052b7:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01052bc	obj/kern/kernel.asm	/^f01052bc:	0f 4e d0             	cmovle %eax,%edx$/;"	l
f01052bf	obj/kern/kernel.asm	/^f01052bf:	eb 2f                	jmp    f01052f0 <syscall+0x340>$/;"	l
f01052c1	obj/kern/kernel.asm	/^f01052c1:	ba fd ff ff ff       	mov    $0xfffffffd,%edx$/;"	l
f01052c6	obj/kern/kernel.asm	/^f01052c6:	eb 28                	jmp    f01052f0 <syscall+0x340>$/;"	l
f01052c8	obj/kern/kernel.asm	/^f01052c8:	ba fd ff ff ff       	mov    $0xfffffffd,%edx$/;"	l
f01052cd	obj/kern/kernel.asm	/^f01052cd:	eb 21                	jmp    f01052f0 <syscall+0x340>$/;"	l
f01052cf	obj/kern/kernel.asm	/^f01052cf:	ba fd ff ff ff       	mov    $0xfffffffd,%edx$/;"	l
f01052d4	obj/kern/kernel.asm	/^f01052d4:	eb 1a                	jmp    f01052f0 <syscall+0x340>$/;"	l
f01052d6	obj/kern/kernel.asm	/^f01052d6:	ba fd ff ff ff       	mov    $0xfffffffd,%edx$/;"	l
f01052db	obj/kern/kernel.asm	/^f01052db:	eb 13                	jmp    f01052f0 <syscall+0x340>$/;"	l
f01052dd	obj/kern/kernel.asm	/^f01052dd:	ba fd ff ff ff       	mov    $0xfffffffd,%edx$/;"	l
f01052e2	obj/kern/kernel.asm	/^f01052e2:	eb 0c                	jmp    f01052f0 <syscall+0x340>$/;"	l
f01052e4	obj/kern/kernel.asm	/^f01052e4:	ba fd ff ff ff       	mov    $0xfffffffd,%edx$/;"	l
f01052e9	obj/kern/kernel.asm	/^f01052e9:	eb 05                	jmp    f01052f0 <syscall+0x340>$/;"	l
f01052eb	obj/kern/kernel.asm	/^f01052eb:	ba fd ff ff ff       	mov    $0xfffffffd,%edx$/;"	l
f01052f0	obj/kern/kernel.asm	/^f01052f0:	89 d0                	mov    %edx,%eax$/;"	l
f01052f2	obj/kern/kernel.asm	/^f01052f2:	e9 82 05 00 00       	jmp    f0105879 <syscall+0x8c9>$/;"	l
f01052f7	obj/kern/kernel.asm	/^f01052f7:	81 7d 10 ff ff bf ee 	cmpl   $0xeebfffff,0x10(%ebp)$/;"	l
f01052fe	obj/kern/kernel.asm	/^f01052fe:	77 55                	ja     f0105355 <syscall+0x3a5>$/;"	l
f0105300	obj/kern/kernel.asm	/^f0105300:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0105303	obj/kern/kernel.asm	/^f0105303:	05 ff 0f 00 00       	add    $0xfff,%eax$/;"	l
f0105308	obj/kern/kernel.asm	/^f0105308:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f010530d	obj/kern/kernel.asm	/^f010530d:	39 45 10             	cmp    %eax,0x10(%ebp)$/;"	l
f0105310	obj/kern/kernel.asm	/^f0105310:	75 4a                	jne    f010535c <syscall+0x3ac>$/;"	l
f0105312	obj/kern/kernel.asm	/^f0105312:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0105319	obj/kern/kernel.asm	/^f0105319:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0105320	obj/kern/kernel.asm	/^f0105320:	00 $/;"	l
f0105321	obj/kern/kernel.asm	/^f0105321:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0105324	obj/kern/kernel.asm	/^f0105324:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105328	obj/kern/kernel.asm	/^f0105328:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010532b	obj/kern/kernel.asm	/^f010532b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010532e	obj/kern/kernel.asm	/^f010532e:	e8 f0 e3 ff ff       	call   f0103723 <envid2env>$/;"	l
f0105333	obj/kern/kernel.asm	/^f0105333:	89 c2                	mov    %eax,%edx$/;"	l
f0105335	obj/kern/kernel.asm	/^f0105335:	85 c0                	test   %eax,%eax$/;"	l
f0105337	obj/kern/kernel.asm	/^f0105337:	78 28                	js     f0105361 <syscall+0x3b1>$/;"	l
f0105339	obj/kern/kernel.asm	/^f0105339:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f010533c	obj/kern/kernel.asm	/^f010533c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105340	obj/kern/kernel.asm	/^f0105340:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105343	obj/kern/kernel.asm	/^f0105343:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0105346	obj/kern/kernel.asm	/^f0105346:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105349	obj/kern/kernel.asm	/^f0105349:	e8 c4 c0 ff ff       	call   f0101412 <page_remove>$/;"	l
f010534e	obj/kern/kernel.asm	/^f010534e:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105353	obj/kern/kernel.asm	/^f0105353:	eb 0c                	jmp    f0105361 <syscall+0x3b1>$/;"	l
f0105355	obj/kern/kernel.asm	/^f0105355:	ba fd ff ff ff       	mov    $0xfffffffd,%edx$/;"	l
f010535a	obj/kern/kernel.asm	/^f010535a:	eb 05                	jmp    f0105361 <syscall+0x3b1>$/;"	l
f010535c	obj/kern/kernel.asm	/^f010535c:	ba fd ff ff ff       	mov    $0xfffffffd,%edx$/;"	l
f0105361	obj/kern/kernel.asm	/^f0105361:	89 d0                	mov    %edx,%eax$/;"	l
f0105363	obj/kern/kernel.asm	/^f0105363:	e9 11 05 00 00       	jmp    f0105879 <syscall+0x8c9>$/;"	l
f0105368	obj/kern/kernel.asm	/^f0105368:	83 7d 10 04          	cmpl   $0x4,0x10(%ebp)$/;"	l
f010536c	obj/kern/kernel.asm	/^f010536c:	74 06                	je     f0105374 <syscall+0x3c4>$/;"	l
f010536e	obj/kern/kernel.asm	/^f010536e:	83 7d 10 02          	cmpl   $0x2,0x10(%ebp)$/;"	l
f0105372	obj/kern/kernel.asm	/^f0105372:	75 3c                	jne    f01053b0 <syscall+0x400>$/;"	l
f0105374	obj/kern/kernel.asm	/^f0105374:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f010537b	obj/kern/kernel.asm	/^f010537b:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0105382	obj/kern/kernel.asm	/^f0105382:	00 $/;"	l
f0105383	obj/kern/kernel.asm	/^f0105383:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0105386	obj/kern/kernel.asm	/^f0105386:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010538a	obj/kern/kernel.asm	/^f010538a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010538d	obj/kern/kernel.asm	/^f010538d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105390	obj/kern/kernel.asm	/^f0105390:	e8 8e e3 ff ff       	call   f0103723 <envid2env>$/;"	l
f0105395	obj/kern/kernel.asm	/^f0105395:	85 c0                	test   %eax,%eax$/;"	l
f0105397	obj/kern/kernel.asm	/^f0105397:	0f 88 dc 04 00 00    	js     f0105879 <syscall+0x8c9>$/;"	l
f010539d	obj/kern/kernel.asm	/^f010539d:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01053a0	obj/kern/kernel.asm	/^f01053a0:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f01053a3	obj/kern/kernel.asm	/^f01053a3:	89 70 54             	mov    %esi,0x54(%eax)$/;"	l
f01053a6	obj/kern/kernel.asm	/^f01053a6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01053ab	obj/kern/kernel.asm	/^f01053ab:	e9 c9 04 00 00       	jmp    f0105879 <syscall+0x8c9>$/;"	l
f01053b0	obj/kern/kernel.asm	/^f01053b0:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f01053b5	obj/kern/kernel.asm	/^f01053b5:	e9 bf 04 00 00       	jmp    f0105879 <syscall+0x8c9>$/;"	l
f01053ba	obj/kern/kernel.asm	/^f01053ba:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f01053c1	obj/kern/kernel.asm	/^f01053c1:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f01053c8	obj/kern/kernel.asm	/^f01053c8:	00 $/;"	l
f01053c9	obj/kern/kernel.asm	/^f01053c9:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01053cc	obj/kern/kernel.asm	/^f01053cc:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01053d0	obj/kern/kernel.asm	/^f01053d0:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01053d3	obj/kern/kernel.asm	/^f01053d3:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01053d6	obj/kern/kernel.asm	/^f01053d6:	e8 48 e3 ff ff       	call   f0103723 <envid2env>$/;"	l
f01053db	obj/kern/kernel.asm	/^f01053db:	85 c0                	test   %eax,%eax$/;"	l
f01053dd	obj/kern/kernel.asm	/^f01053dd:	0f 88 96 04 00 00    	js     f0105879 <syscall+0x8c9>$/;"	l
f01053e3	obj/kern/kernel.asm	/^f01053e3:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01053e6	obj/kern/kernel.asm	/^f01053e6:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f01053e9	obj/kern/kernel.asm	/^f01053e9:	89 78 64             	mov    %edi,0x64(%eax)$/;"	l
f01053ec	obj/kern/kernel.asm	/^f01053ec:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01053f1	obj/kern/kernel.asm	/^f01053f1:	e9 83 04 00 00       	jmp    f0105879 <syscall+0x8c9>$/;"	l
f01053f6	obj/kern/kernel.asm	/^f01053f6:	81 7d 14 ff ff bf ee 	cmpl   $0xeebfffff,0x14(%ebp)$/;"	l
f01053fd	obj/kern/kernel.asm	/^f01053fd:	0f 87 5e 04 00 00    	ja     f0105861 <syscall+0x8b1>$/;"	l
f0105403	obj/kern/kernel.asm	/^f0105403:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105406	obj/kern/kernel.asm	/^f0105406:	05 ff 0f 00 00       	add    $0xfff,%eax$/;"	l
f010540b	obj/kern/kernel.asm	/^f010540b:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0105410	obj/kern/kernel.asm	/^f0105410:	39 45 14             	cmp    %eax,0x14(%ebp)$/;"	l
f0105413	obj/kern/kernel.asm	/^f0105413:	0f 85 ed 00 00 00    	jne    f0105506 <syscall+0x556>$/;"	l
f0105419	obj/kern/kernel.asm	/^f0105419:	f7 45 18 f8 f1 ff ff 	testl  $0xfffff1f8,0x18(%ebp)$/;"	l
f0105420	obj/kern/kernel.asm	/^f0105420:	0f 85 ea 00 00 00    	jne    f0105510 <syscall+0x560>$/;"	l
f0105426	obj/kern/kernel.asm	/^f0105426:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
f0105429	obj/kern/kernel.asm	/^f0105429:	f7 d0                	not    %eax$/;"	l
f010542b	obj/kern/kernel.asm	/^f010542b:	a8 05                	test   $0x5,%al$/;"	l
f010542d	obj/kern/kernel.asm	/^f010542d:	0f 84 ea 03 00 00    	je     f010581d <syscall+0x86d>$/;"	l
f0105433	obj/kern/kernel.asm	/^f0105433:	e9 e2 00 00 00       	jmp    f010551a <syscall+0x56a>$/;"	l
f0105438	obj/kern/kernel.asm	/^f0105438:	f6 45 18 02          	testb  $0x2,0x18(%ebp)$/;"	l
f010543c	obj/kern/kernel.asm	/^f010543c:	74 0c                	je     f010544a <syscall+0x49a>$/;"	l
f010543e	obj/kern/kernel.asm	/^f010543e:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105441	obj/kern/kernel.asm	/^f0105441:	f6 00 02             	testb  $0x2,(%eax)$/;"	l
f0105444	obj/kern/kernel.asm	/^f0105444:	0f 84 da 00 00 00    	je     f0105524 <syscall+0x574>$/;"	l
f010544a	obj/kern/kernel.asm	/^f010544a:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0105451	obj/kern/kernel.asm	/^f0105451:	00 $/;"	l
f0105452	obj/kern/kernel.asm	/^f0105452:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0105455	obj/kern/kernel.asm	/^f0105455:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105459	obj/kern/kernel.asm	/^f0105459:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010545c	obj/kern/kernel.asm	/^f010545c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010545f	obj/kern/kernel.asm	/^f010545f:	e8 bf e2 ff ff       	call   f0103723 <envid2env>$/;"	l
f0105464	obj/kern/kernel.asm	/^f0105464:	85 c0                	test   %eax,%eax$/;"	l
f0105466	obj/kern/kernel.asm	/^f0105466:	0f 88 0d 04 00 00    	js     f0105879 <syscall+0x8c9>$/;"	l
f010546c	obj/kern/kernel.asm	/^f010546c:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f010546f	obj/kern/kernel.asm	/^f010546f:	80 7a 68 00          	cmpb   $0x0,0x68(%edx)$/;"	l
f0105473	obj/kern/kernel.asm	/^f0105473:	0f 84 b5 00 00 00    	je     f010552e <syscall+0x57e>$/;"	l
f0105479	obj/kern/kernel.asm	/^f0105479:	83 7a 54 04          	cmpl   $0x4,0x54(%edx)$/;"	l
f010547d	obj/kern/kernel.asm	/^f010547d:	0f 85 b5 00 00 00    	jne    f0105538 <syscall+0x588>$/;"	l
f0105483	obj/kern/kernel.asm	/^f0105483:	81 7d 14 ff ff bf ee 	cmpl   $0xeebfffff,0x14(%ebp)$/;"	l
f010548a	obj/kern/kernel.asm	/^f010548a:	77 37                	ja     f01054c3 <syscall+0x513>$/;"	l
f010548c	obj/kern/kernel.asm	/^f010548c:	8b 42 6c             	mov    0x6c(%edx),%eax$/;"	l
f010548f	obj/kern/kernel.asm	/^f010548f:	3d ff ff bf ee       	cmp    $0xeebfffff,%eax$/;"	l
f0105494	obj/kern/kernel.asm	/^f0105494:	77 2d                	ja     f01054c3 <syscall+0x513>$/;"	l
f0105496	obj/kern/kernel.asm	/^f0105496:	8b 4d 18             	mov    0x18(%ebp),%ecx$/;"	l
f0105499	obj/kern/kernel.asm	/^f0105499:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f010549d	obj/kern/kernel.asm	/^f010549d:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01054a1	obj/kern/kernel.asm	/^f01054a1:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01054a5	obj/kern/kernel.asm	/^f01054a5:	8b 42 60             	mov    0x60(%edx),%eax$/;"	l
f01054a8	obj/kern/kernel.asm	/^f01054a8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01054ab	obj/kern/kernel.asm	/^f01054ab:	e8 ab bf ff ff       	call   f010145b <page_insert>$/;"	l
f01054b0	obj/kern/kernel.asm	/^f01054b0:	85 c0                	test   %eax,%eax$/;"	l
f01054b2	obj/kern/kernel.asm	/^f01054b2:	0f 88 c1 03 00 00    	js     f0105879 <syscall+0x8c9>$/;"	l
f01054b8	obj/kern/kernel.asm	/^f01054b8:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01054bb	obj/kern/kernel.asm	/^f01054bb:	8b 75 18             	mov    0x18(%ebp),%esi$/;"	l
f01054be	obj/kern/kernel.asm	/^f01054be:	89 70 78             	mov    %esi,0x78(%eax)$/;"	l
f01054c1	obj/kern/kernel.asm	/^f01054c1:	eb 07                	jmp    f01054ca <syscall+0x51a>$/;"	l
f01054c3	obj/kern/kernel.asm	/^f01054c3:	c7 42 78 00 00 00 00 	movl   $0x0,0x78(%edx)$/;"	l
f01054ca	obj/kern/kernel.asm	/^f01054ca:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f01054cd	obj/kern/kernel.asm	/^f01054cd:	c6 43 68 00          	movb   $0x0,0x68(%ebx)$/;"	l
f01054d1	obj/kern/kernel.asm	/^f01054d1:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01054d4	obj/kern/kernel.asm	/^f01054d4:	89 43 70             	mov    %eax,0x70(%ebx)$/;"	l
f01054d7	obj/kern/kernel.asm	/^f01054d7:	e8 0d 17 00 00       	call   f0106be9 <cpunum>$/;"	l
f01054dc	obj/kern/kernel.asm	/^f01054dc:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01054df	obj/kern/kernel.asm	/^f01054df:	8b 80 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%eax$/;"	l
f01054e5	obj/kern/kernel.asm	/^f01054e5:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f01054e8	obj/kern/kernel.asm	/^f01054e8:	89 43 74             	mov    %eax,0x74(%ebx)$/;"	l
f01054eb	obj/kern/kernel.asm	/^f01054eb:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01054ee	obj/kern/kernel.asm	/^f01054ee:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)$/;"	l
f01054f5	obj/kern/kernel.asm	/^f01054f5:	c7 40 54 02 00 00 00 	movl   $0x2,0x54(%eax)$/;"	l
f01054fc	obj/kern/kernel.asm	/^f01054fc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105501	obj/kern/kernel.asm	/^f0105501:	e9 73 03 00 00       	jmp    f0105879 <syscall+0x8c9>$/;"	l
f0105506	obj/kern/kernel.asm	/^f0105506:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f010550b	obj/kern/kernel.asm	/^f010550b:	e9 69 03 00 00       	jmp    f0105879 <syscall+0x8c9>$/;"	l
f0105510	obj/kern/kernel.asm	/^f0105510:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105515	obj/kern/kernel.asm	/^f0105515:	e9 5f 03 00 00       	jmp    f0105879 <syscall+0x8c9>$/;"	l
f010551a	obj/kern/kernel.asm	/^f010551a:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f010551f	obj/kern/kernel.asm	/^f010551f:	e9 55 03 00 00       	jmp    f0105879 <syscall+0x8c9>$/;"	l
f0105524	obj/kern/kernel.asm	/^f0105524:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105529	obj/kern/kernel.asm	/^f0105529:	e9 4b 03 00 00       	jmp    f0105879 <syscall+0x8c9>$/;"	l
f010552e	obj/kern/kernel.asm	/^f010552e:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax$/;"	l
f0105533	obj/kern/kernel.asm	/^f0105533:	e9 41 03 00 00       	jmp    f0105879 <syscall+0x8c9>$/;"	l
f0105538	obj/kern/kernel.asm	/^f0105538:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax$/;"	l
f010553d	obj/kern/kernel.asm	/^f010553d:	e9 37 03 00 00       	jmp    f0105879 <syscall+0x8c9>$/;"	l
f0105542	obj/kern/kernel.asm	/^f0105542:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105547	obj/kern/kernel.asm	/^f0105547:	e9 2d 03 00 00       	jmp    f0105879 <syscall+0x8c9>$/;"	l
f010554c	obj/kern/kernel.asm	/^f010554c:	81 7d 0c ff ff bf ee 	cmpl   $0xeebfffff,0xc(%ebp)$/;"	l
f0105553	obj/kern/kernel.asm	/^f0105553:	77 2a                	ja     f010557f <syscall+0x5cf>$/;"	l
f0105555	obj/kern/kernel.asm	/^f0105555:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105558	obj/kern/kernel.asm	/^f0105558:	05 ff 0f 00 00       	add    $0xfff,%eax$/;"	l
f010555d	obj/kern/kernel.asm	/^f010555d:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0105562	obj/kern/kernel.asm	/^f0105562:	39 45 0c             	cmp    %eax,0xc(%ebp)$/;"	l
f0105565	obj/kern/kernel.asm	/^f0105565:	0f 85 ab 02 00 00    	jne    f0105816 <syscall+0x866>$/;"	l
f010556b	obj/kern/kernel.asm	/^f010556b:	e8 79 16 00 00       	call   f0106be9 <cpunum>$/;"	l
f0105570	obj/kern/kernel.asm	/^f0105570:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105573	obj/kern/kernel.asm	/^f0105573:	8b 80 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%eax$/;"	l
f0105579	obj/kern/kernel.asm	/^f0105579:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f010557c	obj/kern/kernel.asm	/^f010557c:	89 48 6c             	mov    %ecx,0x6c(%eax)$/;"	l
f010557f	obj/kern/kernel.asm	/^f010557f:	e8 65 16 00 00       	call   f0106be9 <cpunum>$/;"	l
f0105584	obj/kern/kernel.asm	/^f0105584:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105587	obj/kern/kernel.asm	/^f0105587:	8b 80 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%eax$/;"	l
f010558d	obj/kern/kernel.asm	/^f010558d:	c6 40 68 01          	movb   $0x1,0x68(%eax)$/;"	l
f0105591	obj/kern/kernel.asm	/^f0105591:	e8 53 16 00 00       	call   f0106be9 <cpunum>$/;"	l
f0105596	obj/kern/kernel.asm	/^f0105596:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105599	obj/kern/kernel.asm	/^f0105599:	8b 80 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%eax$/;"	l
f010559f	obj/kern/kernel.asm	/^f010559f:	c7 40 54 04 00 00 00 	movl   $0x4,0x54(%eax)$/;"	l
f01055a6	obj/kern/kernel.asm	/^f01055a6:	e8 30 f9 ff ff       	call   f0104edb <sched_yield>$/;"	l
f01055ab	obj/kern/kernel.asm	/^f01055ab:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f01055ae	obj/kern/kernel.asm	/^f01055ae:	e8 36 16 00 00       	call   f0106be9 <cpunum>$/;"	l
f01055b3	obj/kern/kernel.asm	/^f01055b3:	c7 44 24 0c 05 00 00 	movl   $0x5,0xc(%esp)$/;"	l
f01055ba	obj/kern/kernel.asm	/^f01055ba:	00 $/;"	l
f01055bb	obj/kern/kernel.asm	/^f01055bb:	c7 44 24 08 44 00 00 	movl   $0x44,0x8(%esp)$/;"	l
f01055c2	obj/kern/kernel.asm	/^f01055c2:	00 $/;"	l
f01055c3	obj/kern/kernel.asm	/^f01055c3:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f01055c6	obj/kern/kernel.asm	/^f01055c6:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f01055ca	obj/kern/kernel.asm	/^f01055ca:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01055cd	obj/kern/kernel.asm	/^f01055cd:	8b 80 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%eax$/;"	l
f01055d3	obj/kern/kernel.asm	/^f01055d3:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01055d6	obj/kern/kernel.asm	/^f01055d6:	e8 49 e0 ff ff       	call   f0103624 <user_mem_assert>$/;"	l
f01055db	obj/kern/kernel.asm	/^f01055db:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f01055e2	obj/kern/kernel.asm	/^f01055e2:	00 $/;"	l
f01055e3	obj/kern/kernel.asm	/^f01055e3:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01055e6	obj/kern/kernel.asm	/^f01055e6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01055ea	obj/kern/kernel.asm	/^f01055ea:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01055ed	obj/kern/kernel.asm	/^f01055ed:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01055f0	obj/kern/kernel.asm	/^f01055f0:	e8 2e e1 ff ff       	call   f0103723 <envid2env>$/;"	l
f01055f5	obj/kern/kernel.asm	/^f01055f5:	85 c0                	test   %eax,%eax$/;"	l
f01055f7	obj/kern/kernel.asm	/^f01055f7:	0f 88 7c 02 00 00    	js     f0105879 <syscall+0x8c9>$/;"	l
f01055fd	obj/kern/kernel.asm	/^f01055fd:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f0105602	obj/kern/kernel.asm	/^f0105602:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0105605	obj/kern/kernel.asm	/^f0105605:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0105607	obj/kern/kernel.asm	/^f0105607:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010560a	obj/kern/kernel.asm	/^f010560a:	81 48 38 00 02 00 00 	orl    $0x200,0x38(%eax)$/;"	l
f0105611	obj/kern/kernel.asm	/^f0105611:	66 c7 40 34 1b 00    	movw   $0x1b,0x34(%eax)$/;"	l
f0105617	obj/kern/kernel.asm	/^f0105617:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010561c	obj/kern/kernel.asm	/^f010561c:	e9 58 02 00 00       	jmp    f0105879 <syscall+0x8c9>$/;"	l
f0105621	obj/kern/kernel.asm	/^f0105621:	e8 a6 27 00 00       	call   f0107dcc <time_msec>$/;"	l
f0105626	obj/kern/kernel.asm	/^f0105626:	e9 4e 02 00 00       	jmp    f0105879 <syscall+0x8c9>$/;"	l
f010562b	obj/kern/kernel.asm	/^f010562b:	90                   	nop$/;"	l
f010562c	obj/kern/kernel.asm	/^f010562c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0105630	obj/kern/kernel.asm	/^f0105630:	e8 b4 15 00 00       	call   f0106be9 <cpunum>$/;"	l
f0105635	obj/kern/kernel.asm	/^f0105635:	c7 44 24 0c 05 00 00 	movl   $0x5,0xc(%esp)$/;"	l
f010563c	obj/kern/kernel.asm	/^f010563c:	00 $/;"	l
f010563d	obj/kern/kernel.asm	/^f010563d:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f0105640	obj/kern/kernel.asm	/^f0105640:	89 7c 24 08          	mov    %edi,0x8(%esp)$/;"	l
f0105644	obj/kern/kernel.asm	/^f0105644:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0105647	obj/kern/kernel.asm	/^f0105647:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f010564b	obj/kern/kernel.asm	/^f010564b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010564e	obj/kern/kernel.asm	/^f010564e:	8b 80 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%eax$/;"	l
f0105654	obj/kern/kernel.asm	/^f0105654:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105657	obj/kern/kernel.asm	/^f0105657:	e8 c8 df ff ff       	call   f0103624 <user_mem_assert>$/;"	l
f010565c	obj/kern/kernel.asm	/^f010565c:	e8 88 15 00 00       	call   f0106be9 <cpunum>$/;"	l
f0105661	obj/kern/kernel.asm	/^f0105661:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f0105664	obj/kern/kernel.asm	/^f0105664:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0105668	obj/kern/kernel.asm	/^f0105668:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f010566b	obj/kern/kernel.asm	/^f010566b:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f010566f	obj/kern/kernel.asm	/^f010566f:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105672	obj/kern/kernel.asm	/^f0105672:	8b 80 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%eax$/;"	l
f0105678	obj/kern/kernel.asm	/^f0105678:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f010567b	obj/kern/kernel.asm	/^f010567b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010567e	obj/kern/kernel.asm	/^f010567e:	e8 e1 bc ff ff       	call   f0101364 <page_lookup>$/;"	l
f0105683	obj/kern/kernel.asm	/^f0105683:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0105686	obj/kern/kernel.asm	/^f0105686:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010568a	obj/kern/kernel.asm	/^f010568a:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010568d	obj/kern/kernel.asm	/^f010568d:	81 e2 ff 0f 00 00    	and    $0xfff,%edx$/;"	l
f0105693	obj/kern/kernel.asm	/^f0105693:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105696	obj/kern/kernel.asm	/^f0105696:	8b 00                	mov    (%eax),%eax$/;"	l
f0105698	obj/kern/kernel.asm	/^f0105698:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f010569d	obj/kern/kernel.asm	/^f010569d:	09 d0                	or     %edx,%eax$/;"	l
f010569f	obj/kern/kernel.asm	/^f010569f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01056a2	obj/kern/kernel.asm	/^f01056a2:	e8 26 1b 00 00       	call   f01071cd <transmit_packet>$/;"	l
f01056a7	obj/kern/kernel.asm	/^f01056a7:	85 c0                	test   %eax,%eax$/;"	l
f01056a9	obj/kern/kernel.asm	/^f01056a9:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01056ae	obj/kern/kernel.asm	/^f01056ae:	0f 4f c2             	cmovg  %edx,%eax$/;"	l
f01056b1	obj/kern/kernel.asm	/^f01056b1:	e9 c3 01 00 00       	jmp    f0105879 <syscall+0x8c9>$/;"	l
f01056b6	obj/kern/kernel.asm	/^f01056b6:	e8 2e 15 00 00       	call   f0106be9 <cpunum>$/;"	l
f01056bb	obj/kern/kernel.asm	/^f01056bb:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01056be	obj/kern/kernel.asm	/^f01056be:	8b 80 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%eax$/;"	l
f01056c4	obj/kern/kernel.asm	/^f01056c4:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f01056c7	obj/kern/kernel.asm	/^f01056c7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01056cb	obj/kern/kernel.asm	/^f01056cb:	c7 04 24 06 98 10 f0 	movl   $0xf0109806,(%esp)$/;"	l
f01056d2	obj/kern/kernel.asm	/^f01056d2:	e8 f5 e8 ff ff       	call   f0103fcc <cprintf>$/;"	l
f01056d7	obj/kern/kernel.asm	/^f01056d7:	81 7d 0c ff ff bf ee 	cmpl   $0xeebfffff,0xc(%ebp)$/;"	l
f01056de	obj/kern/kernel.asm	/^f01056de:	0f 87 1d 01 00 00    	ja     f0105801 <syscall+0x851>$/;"	l
f01056e4	obj/kern/kernel.asm	/^f01056e4:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01056e7	obj/kern/kernel.asm	/^f01056e7:	05 ff 0f 00 00       	add    $0xfff,%eax$/;"	l
f01056ec	obj/kern/kernel.asm	/^f01056ec:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01056f1	obj/kern/kernel.asm	/^f01056f1:	39 45 0c             	cmp    %eax,0xc(%ebp)$/;"	l
f01056f4	obj/kern/kernel.asm	/^f01056f4:	0f 85 0e 01 00 00    	jne    f0105808 <syscall+0x858>$/;"	l
f01056fa	obj/kern/kernel.asm	/^f01056fa:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01056fd	obj/kern/kernel.asm	/^f01056fd:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105701	obj/kern/kernel.asm	/^f0105701:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f0105704	obj/kern/kernel.asm	/^f0105704:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105707	obj/kern/kernel.asm	/^f0105707:	e8 c4 1f 00 00       	call   f01076d0 <receive_packet>$/;"	l
f010570c	obj/kern/kernel.asm	/^f010570c:	85 c0                	test   %eax,%eax$/;"	l
f010570e	obj/kern/kernel.asm	/^f010570e:	0f 88 65 01 00 00    	js     f0105879 <syscall+0x8c9>$/;"	l
f0105714	obj/kern/kernel.asm	/^f0105714:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105717	obj/kern/kernel.asm	/^f0105717:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f010571a	obj/kern/kernel.asm	/^f010571a:	3b 05 94 9e 2b f0    	cmp    0xf02b9e94,%eax$/;"	l
f0105720	obj/kern/kernel.asm	/^f0105720:	72 1c                	jb     f010573e <syscall+0x78e>$/;"	l
f0105722	obj/kern/kernel.asm	/^f0105722:	c7 44 24 08 90 87 10 	movl   $0xf0108790,0x8(%esp)$/;"	l
f0105729	obj/kern/kernel.asm	/^f0105729:	f0 $/;"	l
f010572a	obj/kern/kernel.asm	/^f010572a:	c7 44 24 04 51 00 00 	movl   $0x51,0x4(%esp)$/;"	l
f0105731	obj/kern/kernel.asm	/^f0105731:	00 $/;"	l
f0105732	obj/kern/kernel.asm	/^f0105732:	c7 04 24 fd 8f 10 f0 	movl   $0xf0108ffd,(%esp)$/;"	l
f0105739	obj/kern/kernel.asm	/^f0105739:	e8 02 a9 ff ff       	call   f0100040 <_panic>$/;"	l
f010573e	obj/kern/kernel.asm	/^f010573e:	8b 15 9c 9e 2b f0    	mov    0xf02b9e9c,%edx$/;"	l
f0105744	obj/kern/kernel.asm	/^f0105744:	8d 1c c2             	lea    (%edx,%eax,8),%ebx$/;"	l
f0105747	obj/kern/kernel.asm	/^f0105747:	e8 9d 14 00 00       	call   f0106be9 <cpunum>$/;"	l
f010574c	obj/kern/kernel.asm	/^f010574c:	c7 44 24 0c 07 00 00 	movl   $0x7,0xc(%esp)$/;"	l
f0105753	obj/kern/kernel.asm	/^f0105753:	00 $/;"	l
f0105754	obj/kern/kernel.asm	/^f0105754:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0105757	obj/kern/kernel.asm	/^f0105757:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f010575b	obj/kern/kernel.asm	/^f010575b:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f010575f	obj/kern/kernel.asm	/^f010575f:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105762	obj/kern/kernel.asm	/^f0105762:	8b 80 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%eax$/;"	l
f0105768	obj/kern/kernel.asm	/^f0105768:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f010576b	obj/kern/kernel.asm	/^f010576b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010576e	obj/kern/kernel.asm	/^f010576e:	e8 e8 bc ff ff       	call   f010145b <page_insert>$/;"	l
f0105773	obj/kern/kernel.asm	/^f0105773:	85 c0                	test   %eax,%eax$/;"	l
f0105775	obj/kern/kernel.asm	/^f0105775:	0f 88 fe 00 00 00    	js     f0105879 <syscall+0x8c9>$/;"	l
f010577b	obj/kern/kernel.asm	/^f010577b:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f010577e	obj/kern/kernel.asm	/^f010577e:	89 c2                	mov    %eax,%edx$/;"	l
f0105780	obj/kern/kernel.asm	/^f0105780:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0105783	obj/kern/kernel.asm	/^f0105783:	3b 15 94 9e 2b f0    	cmp    0xf02b9e94,%edx$/;"	l
f0105789	obj/kern/kernel.asm	/^f0105789:	72 20                	jb     f01057ab <syscall+0x7fb>$/;"	l
f010578b	obj/kern/kernel.asm	/^f010578b:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010578f	obj/kern/kernel.asm	/^f010578f:	c7 44 24 08 a4 80 10 	movl   $0xf01080a4,0x8(%esp)$/;"	l
f0105796	obj/kern/kernel.asm	/^f0105796:	f0 $/;"	l
f0105797	obj/kern/kernel.asm	/^f0105797:	c7 44 24 04 e7 01 00 	movl   $0x1e7,0x4(%esp)$/;"	l
f010579e	obj/kern/kernel.asm	/^f010579e:	00 $/;"	l
f010579f	obj/kern/kernel.asm	/^f010579f:	c7 04 24 15 98 10 f0 	movl   $0xf0109815,(%esp)$/;"	l
f01057a6	obj/kern/kernel.asm	/^f01057a6:	e8 95 a8 ff ff       	call   f0100040 <_panic>$/;"	l
f01057ab	obj/kern/kernel.asm	/^f01057ab:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f01057ae	obj/kern/kernel.asm	/^f01057ae:	89 90 00 00 00 f0    	mov    %edx,-0x10000000(%eax)$/;"	l
f01057b4	obj/kern/kernel.asm	/^f01057b4:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01057b7	obj/kern/kernel.asm	/^f01057b7:	89 c2                	mov    %eax,%edx$/;"	l
f01057b9	obj/kern/kernel.asm	/^f01057b9:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01057bc	obj/kern/kernel.asm	/^f01057bc:	3b 15 94 9e 2b f0    	cmp    0xf02b9e94,%edx$/;"	l
f01057c2	obj/kern/kernel.asm	/^f01057c2:	72 20                	jb     f01057e4 <syscall+0x834>$/;"	l
f01057c4	obj/kern/kernel.asm	/^f01057c4:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01057c8	obj/kern/kernel.asm	/^f01057c8:	c7 44 24 08 a4 80 10 	movl   $0xf01080a4,0x8(%esp)$/;"	l
f01057cf	obj/kern/kernel.asm	/^f01057cf:	f0 $/;"	l
f01057d0	obj/kern/kernel.asm	/^f01057d0:	c7 44 24 04 e8 01 00 	movl   $0x1e8,0x4(%esp)$/;"	l
f01057d7	obj/kern/kernel.asm	/^f01057d7:	00 $/;"	l
f01057d8	obj/kern/kernel.asm	/^f01057d8:	c7 04 24 15 98 10 f0 	movl   $0xf0109815,(%esp)$/;"	l
f01057df	obj/kern/kernel.asm	/^f01057df:	e8 5c a8 ff ff       	call   f0100040 <_panic>$/;"	l
f01057e4	obj/kern/kernel.asm	/^f01057e4:	8b 80 04 00 00 f0    	mov    -0xffffffc(%eax),%eax$/;"	l
f01057ea	obj/kern/kernel.asm	/^f01057ea:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01057ee	obj/kern/kernel.asm	/^f01057ee:	c7 04 24 24 98 10 f0 	movl   $0xf0109824,(%esp)$/;"	l
f01057f5	obj/kern/kernel.asm	/^f01057f5:	e8 d2 e7 ff ff       	call   f0103fcc <cprintf>$/;"	l
f01057fa	obj/kern/kernel.asm	/^f01057fa:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01057ff	obj/kern/kernel.asm	/^f01057ff:	eb 78                	jmp    f0105879 <syscall+0x8c9>$/;"	l
f0105801	obj/kern/kernel.asm	/^f0105801:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105806	obj/kern/kernel.asm	/^f0105806:	eb 71                	jmp    f0105879 <syscall+0x8c9>$/;"	l
f0105808	obj/kern/kernel.asm	/^f0105808:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f010580d	obj/kern/kernel.asm	/^f010580d:	eb 6a                	jmp    f0105879 <syscall+0x8c9>$/;"	l
f010580f	obj/kern/kernel.asm	/^f010580f:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105814	obj/kern/kernel.asm	/^f0105814:	eb 63                	jmp    f0105879 <syscall+0x8c9>$/;"	l
f0105816	obj/kern/kernel.asm	/^f0105816:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f010581b	obj/kern/kernel.asm	/^f010581b:	eb 5c                	jmp    f0105879 <syscall+0x8c9>$/;"	l
f010581d	obj/kern/kernel.asm	/^f010581d:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f0105824	obj/kern/kernel.asm	/^f0105824:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f010582b	obj/kern/kernel.asm	/^f010582b:	e8 b9 13 00 00       	call   f0106be9 <cpunum>$/;"	l
f0105830	obj/kern/kernel.asm	/^f0105830:	8d 55 e0             	lea    -0x20(%ebp),%edx$/;"	l
f0105833	obj/kern/kernel.asm	/^f0105833:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0105837	obj/kern/kernel.asm	/^f0105837:	8b 5d 14             	mov    0x14(%ebp),%ebx$/;"	l
f010583a	obj/kern/kernel.asm	/^f010583a:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f010583e	obj/kern/kernel.asm	/^f010583e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105841	obj/kern/kernel.asm	/^f0105841:	8b 80 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%eax$/;"	l
f0105847	obj/kern/kernel.asm	/^f0105847:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f010584a	obj/kern/kernel.asm	/^f010584a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010584d	obj/kern/kernel.asm	/^f010584d:	e8 12 bb ff ff       	call   f0101364 <page_lookup>$/;"	l
f0105852	obj/kern/kernel.asm	/^f0105852:	89 c3                	mov    %eax,%ebx$/;"	l
f0105854	obj/kern/kernel.asm	/^f0105854:	85 c0                	test   %eax,%eax$/;"	l
f0105856	obj/kern/kernel.asm	/^f0105856:	0f 85 dc fb ff ff    	jne    f0105438 <syscall+0x488>$/;"	l
f010585c	obj/kern/kernel.asm	/^f010585c:	e9 e1 fc ff ff       	jmp    f0105542 <syscall+0x592>$/;"	l
f0105861	obj/kern/kernel.asm	/^f0105861:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f0105868	obj/kern/kernel.asm	/^f0105868:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f010586f	obj/kern/kernel.asm	/^f010586f:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0105874	obj/kern/kernel.asm	/^f0105874:	e9 d1 fb ff ff       	jmp    f010544a <syscall+0x49a>$/;"	l
f0105879	obj/kern/kernel.asm	/^f0105879:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f010587c	obj/kern/kernel.asm	/^f010587c:	5b                   	pop    %ebx$/;"	l
f010587d	obj/kern/kernel.asm	/^f010587d:	5e                   	pop    %esi$/;"	l
f010587e	obj/kern/kernel.asm	/^f010587e:	5f                   	pop    %edi$/;"	l
f010587f	obj/kern/kernel.asm	/^f010587f:	5d                   	pop    %ebp$/;"	l
f0105880	obj/kern/kernel.asm	/^f0105880:	c3                   	ret    $/;"	l
f0105881	obj/kern/kernel.asm	/^f0105881 <stab_binsearch>:$/;"	l
f0105881	obj/kern/kernel.asm	/^f0105881:	55                   	push   %ebp$/;"	l
f0105882	obj/kern/kernel.asm	/^f0105882:	89 e5                	mov    %esp,%ebp$/;"	l
f0105884	obj/kern/kernel.asm	/^f0105884:	57                   	push   %edi$/;"	l
f0105885	obj/kern/kernel.asm	/^f0105885:	56                   	push   %esi$/;"	l
f0105886	obj/kern/kernel.asm	/^f0105886:	53                   	push   %ebx$/;"	l
f0105887	obj/kern/kernel.asm	/^f0105887:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010588a	obj/kern/kernel.asm	/^f010588a:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f010588d	obj/kern/kernel.asm	/^f010588d:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0105890	obj/kern/kernel.asm	/^f0105890:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f0105893	obj/kern/kernel.asm	/^f0105893:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0105896	obj/kern/kernel.asm	/^f0105896:	8b 1a                	mov    (%edx),%ebx$/;"	l
f0105898	obj/kern/kernel.asm	/^f0105898:	8b 01                	mov    (%ecx),%eax$/;"	l
f010589a	obj/kern/kernel.asm	/^f010589a:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f010589d	obj/kern/kernel.asm	/^f010589d:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
f01058a4	obj/kern/kernel.asm	/^f01058a4:	e9 88 00 00 00       	jmp    f0105931 <stab_binsearch+0xb0>$/;"	l
f01058a9	obj/kern/kernel.asm	/^f01058a9:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f01058ac	obj/kern/kernel.asm	/^f01058ac:	01 d8                	add    %ebx,%eax$/;"	l
f01058ae	obj/kern/kernel.asm	/^f01058ae:	89 c7                	mov    %eax,%edi$/;"	l
f01058b0	obj/kern/kernel.asm	/^f01058b0:	c1 ef 1f             	shr    $0x1f,%edi$/;"	l
f01058b3	obj/kern/kernel.asm	/^f01058b3:	01 c7                	add    %eax,%edi$/;"	l
f01058b5	obj/kern/kernel.asm	/^f01058b5:	d1 ff                	sar    %edi$/;"	d
f01058b7	obj/kern/kernel.asm	/^f01058b7:	8d 04 7f             	lea    (%edi,%edi,2),%eax$/;"	l
f01058ba	obj/kern/kernel.asm	/^f01058ba:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
f01058bd	obj/kern/kernel.asm	/^f01058bd:	8d 14 81             	lea    (%ecx,%eax,4),%edx$/;"	l
f01058c0	obj/kern/kernel.asm	/^f01058c0:	89 f8                	mov    %edi,%eax$/;"	l
f01058c2	obj/kern/kernel.asm	/^f01058c2:	eb 03                	jmp    f01058c7 <stab_binsearch+0x46>$/;"	l
f01058c4	obj/kern/kernel.asm	/^f01058c4:	83 e8 01             	sub    $0x1,%eax$/;"	l
f01058c7	obj/kern/kernel.asm	/^f01058c7:	39 c3                	cmp    %eax,%ebx$/;"	l
f01058c9	obj/kern/kernel.asm	/^f01058c9:	7f 1f                	jg     f01058ea <stab_binsearch+0x69>$/;"	l
f01058cb	obj/kern/kernel.asm	/^f01058cb:	0f b6 4a 04          	movzbl 0x4(%edx),%ecx$/;"	l
f01058cf	obj/kern/kernel.asm	/^f01058cf:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f01058d2	obj/kern/kernel.asm	/^f01058d2:	39 f1                	cmp    %esi,%ecx$/;"	l
f01058d4	obj/kern/kernel.asm	/^f01058d4:	75 ee                	jne    f01058c4 <stab_binsearch+0x43>$/;"	l
f01058d6	obj/kern/kernel.asm	/^f01058d6:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
f01058d9	obj/kern/kernel.asm	/^f01058d9:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f01058dc	obj/kern/kernel.asm	/^f01058dc:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
f01058df	obj/kern/kernel.asm	/^f01058df:	8b 54 91 08          	mov    0x8(%ecx,%edx,4),%edx$/;"	l
f01058e3	obj/kern/kernel.asm	/^f01058e3:	39 55 0c             	cmp    %edx,0xc(%ebp)$/;"	l
f01058e6	obj/kern/kernel.asm	/^f01058e6:	76 18                	jbe    f0105900 <stab_binsearch+0x7f>$/;"	l
f01058e8	obj/kern/kernel.asm	/^f01058e8:	eb 05                	jmp    f01058ef <stab_binsearch+0x6e>$/;"	l
f01058ea	obj/kern/kernel.asm	/^f01058ea:	8d 5f 01             	lea    0x1(%edi),%ebx$/;"	l
f01058ed	obj/kern/kernel.asm	/^f01058ed:	eb 42                	jmp    f0105931 <stab_binsearch+0xb0>$/;"	l
f01058ef	obj/kern/kernel.asm	/^f01058ef:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f01058f2	obj/kern/kernel.asm	/^f01058f2:	89 03                	mov    %eax,(%ebx)$/;"	l
f01058f4	obj/kern/kernel.asm	/^f01058f4:	8d 5f 01             	lea    0x1(%edi),%ebx$/;"	l
f01058f7	obj/kern/kernel.asm	/^f01058f7:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f01058fe	obj/kern/kernel.asm	/^f01058fe:	eb 31                	jmp    f0105931 <stab_binsearch+0xb0>$/;"	l
f0105900	obj/kern/kernel.asm	/^f0105900:	39 55 0c             	cmp    %edx,0xc(%ebp)$/;"	l
f0105903	obj/kern/kernel.asm	/^f0105903:	73 17                	jae    f010591c <stab_binsearch+0x9b>$/;"	l
f0105905	obj/kern/kernel.asm	/^f0105905:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f0105908	obj/kern/kernel.asm	/^f0105908:	83 e8 01             	sub    $0x1,%eax$/;"	l
f010590b	obj/kern/kernel.asm	/^f010590b:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f010590e	obj/kern/kernel.asm	/^f010590e:	8b 7d e0             	mov    -0x20(%ebp),%edi$/;"	l
f0105911	obj/kern/kernel.asm	/^f0105911:	89 07                	mov    %eax,(%edi)$/;"	l
f0105913	obj/kern/kernel.asm	/^f0105913:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f010591a	obj/kern/kernel.asm	/^f010591a:	eb 15                	jmp    f0105931 <stab_binsearch+0xb0>$/;"	l
f010591c	obj/kern/kernel.asm	/^f010591c:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f010591f	obj/kern/kernel.asm	/^f010591f:	8b 5d e8             	mov    -0x18(%ebp),%ebx$/;"	l
f0105922	obj/kern/kernel.asm	/^f0105922:	89 1f                	mov    %ebx,(%edi)$/;"	l
f0105924	obj/kern/kernel.asm	/^f0105924:	83 45 0c 01          	addl   $0x1,0xc(%ebp)$/;"	l
f0105928	obj/kern/kernel.asm	/^f0105928:	89 c3                	mov    %eax,%ebx$/;"	l
f010592a	obj/kern/kernel.asm	/^f010592a:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f0105931	obj/kern/kernel.asm	/^f0105931:	3b 5d f0             	cmp    -0x10(%ebp),%ebx$/;"	l
f0105934	obj/kern/kernel.asm	/^f0105934:	0f 8e 6f ff ff ff    	jle    f01058a9 <stab_binsearch+0x28>$/;"	l
f010593a	obj/kern/kernel.asm	/^f010593a:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
f010593e	obj/kern/kernel.asm	/^f010593e:	75 0f                	jne    f010594f <stab_binsearch+0xce>$/;"	l
f0105940	obj/kern/kernel.asm	/^f0105940:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105943	obj/kern/kernel.asm	/^f0105943:	8b 00                	mov    (%eax),%eax$/;"	l
f0105945	obj/kern/kernel.asm	/^f0105945:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0105948	obj/kern/kernel.asm	/^f0105948:	8b 7d e0             	mov    -0x20(%ebp),%edi$/;"	l
f010594b	obj/kern/kernel.asm	/^f010594b:	89 07                	mov    %eax,(%edi)$/;"	l
f010594d	obj/kern/kernel.asm	/^f010594d:	eb 2c                	jmp    f010597b <stab_binsearch+0xfa>$/;"	l
f010594f	obj/kern/kernel.asm	/^f010594f:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105952	obj/kern/kernel.asm	/^f0105952:	8b 00                	mov    (%eax),%eax$/;"	l
f0105954	obj/kern/kernel.asm	/^f0105954:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0105957	obj/kern/kernel.asm	/^f0105957:	8b 0f                	mov    (%edi),%ecx$/;"	l
f0105959	obj/kern/kernel.asm	/^f0105959:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f010595c	obj/kern/kernel.asm	/^f010595c:	8b 7d ec             	mov    -0x14(%ebp),%edi$/;"	l
f010595f	obj/kern/kernel.asm	/^f010595f:	8d 14 97             	lea    (%edi,%edx,4),%edx$/;"	l
f0105962	obj/kern/kernel.asm	/^f0105962:	eb 03                	jmp    f0105967 <stab_binsearch+0xe6>$/;"	l
f0105964	obj/kern/kernel.asm	/^f0105964:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0105967	obj/kern/kernel.asm	/^f0105967:	39 c8                	cmp    %ecx,%eax$/;"	l
f0105969	obj/kern/kernel.asm	/^f0105969:	7e 0b                	jle    f0105976 <stab_binsearch+0xf5>$/;"	l
f010596b	obj/kern/kernel.asm	/^f010596b:	0f b6 5a 04          	movzbl 0x4(%edx),%ebx$/;"	l
f010596f	obj/kern/kernel.asm	/^f010596f:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0105972	obj/kern/kernel.asm	/^f0105972:	39 f3                	cmp    %esi,%ebx$/;"	l
f0105974	obj/kern/kernel.asm	/^f0105974:	75 ee                	jne    f0105964 <stab_binsearch+0xe3>$/;"	l
f0105976	obj/kern/kernel.asm	/^f0105976:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0105979	obj/kern/kernel.asm	/^f0105979:	89 07                	mov    %eax,(%edi)$/;"	l
f010597b	obj/kern/kernel.asm	/^f010597b:	83 c4 14             	add    $0x14,%esp$/;"	l
f010597e	obj/kern/kernel.asm	/^f010597e:	5b                   	pop    %ebx$/;"	l
f010597f	obj/kern/kernel.asm	/^f010597f:	5e                   	pop    %esi$/;"	l
f0105980	obj/kern/kernel.asm	/^f0105980:	5f                   	pop    %edi$/;"	l
f0105981	obj/kern/kernel.asm	/^f0105981:	5d                   	pop    %ebp$/;"	l
f0105982	obj/kern/kernel.asm	/^f0105982:	c3                   	ret    $/;"	l
f0105983	obj/kern/kernel.asm	/^f0105983 <debuginfo_eip>:$/;"	l
f0105983	obj/kern/kernel.asm	/^f0105983:	55                   	push   %ebp$/;"	l
f0105984	obj/kern/kernel.asm	/^f0105984:	89 e5                	mov    %esp,%ebp$/;"	l
f0105986	obj/kern/kernel.asm	/^f0105986:	57                   	push   %edi$/;"	l
f0105987	obj/kern/kernel.asm	/^f0105987:	56                   	push   %esi$/;"	l
f0105988	obj/kern/kernel.asm	/^f0105988:	53                   	push   %ebx$/;"	l
f0105989	obj/kern/kernel.asm	/^f0105989:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f010598c	obj/kern/kernel.asm	/^f010598c:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f010598f	obj/kern/kernel.asm	/^f010598f:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0105992	obj/kern/kernel.asm	/^f0105992:	c7 07 74 98 10 f0    	movl   $0xf0109874,(%edi)$/;"	l
f0105998	obj/kern/kernel.asm	/^f0105998:	c7 47 04 00 00 00 00 	movl   $0x0,0x4(%edi)$/;"	l
f010599f	obj/kern/kernel.asm	/^f010599f:	c7 47 08 74 98 10 f0 	movl   $0xf0109874,0x8(%edi)$/;"	l
f01059a6	obj/kern/kernel.asm	/^f01059a6:	c7 47 0c 09 00 00 00 	movl   $0x9,0xc(%edi)$/;"	l
f01059ad	obj/kern/kernel.asm	/^f01059ad:	89 77 10             	mov    %esi,0x10(%edi)$/;"	l
f01059b0	obj/kern/kernel.asm	/^f01059b0:	c7 47 14 00 00 00 00 	movl   $0x0,0x14(%edi)$/;"	l
f01059b7	obj/kern/kernel.asm	/^f01059b7:	81 fe ff ff 7f ef    	cmp    $0xef7fffff,%esi$/;"	l
f01059bd	obj/kern/kernel.asm	/^f01059bd:	0f 87 ca 00 00 00    	ja     f0105a8d <debuginfo_eip+0x10a>$/;"	l
f01059c3	obj/kern/kernel.asm	/^f01059c3:	e8 21 12 00 00       	call   f0106be9 <cpunum>$/;"	l
f01059c8	obj/kern/kernel.asm	/^f01059c8:	c7 44 24 0c 04 00 00 	movl   $0x4,0xc(%esp)$/;"	l
f01059cf	obj/kern/kernel.asm	/^f01059cf:	00 $/;"	l
f01059d0	obj/kern/kernel.asm	/^f01059d0:	c7 44 24 08 10 00 00 	movl   $0x10,0x8(%esp)$/;"	l
f01059d7	obj/kern/kernel.asm	/^f01059d7:	00 $/;"	l
f01059d8	obj/kern/kernel.asm	/^f01059d8:	c7 44 24 04 00 00 20 	movl   $0x200000,0x4(%esp)$/;"	l
f01059df	obj/kern/kernel.asm	/^f01059df:	00 $/;"	l
f01059e0	obj/kern/kernel.asm	/^f01059e0:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01059e3	obj/kern/kernel.asm	/^f01059e3:	8b 80 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%eax$/;"	l
f01059e9	obj/kern/kernel.asm	/^f01059e9:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01059ec	obj/kern/kernel.asm	/^f01059ec:	e8 9c db ff ff       	call   f010358d <user_mem_check>$/;"	l
f01059f1	obj/kern/kernel.asm	/^f01059f1:	85 c0                	test   %eax,%eax$/;"	l
f01059f3	obj/kern/kernel.asm	/^f01059f3:	0f 85 5a 02 00 00    	jne    f0105c53 <debuginfo_eip+0x2d0>$/;"	l
f01059f9	obj/kern/kernel.asm	/^f01059f9:	a1 00 00 20 00       	mov    0x200000,%eax$/;"	l
f01059fe	obj/kern/kernel.asm	/^f01059fe:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f0105a01	obj/kern/kernel.asm	/^f0105a01:	8b 1d 04 00 20 00    	mov    0x200004,%ebx$/;"	l
f0105a07	obj/kern/kernel.asm	/^f0105a07:	8b 15 08 00 20 00    	mov    0x200008,%edx$/;"	l
f0105a0d	obj/kern/kernel.asm	/^f0105a0d:	89 55 c0             	mov    %edx,-0x40(%ebp)$/;"	l
f0105a10	obj/kern/kernel.asm	/^f0105a10:	a1 0c 00 20 00       	mov    0x20000c,%eax$/;"	l
f0105a15	obj/kern/kernel.asm	/^f0105a15:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
f0105a18	obj/kern/kernel.asm	/^f0105a18:	e8 cc 11 00 00       	call   f0106be9 <cpunum>$/;"	l
f0105a1d	obj/kern/kernel.asm	/^f0105a1d:	c7 44 24 0c 04 00 00 	movl   $0x4,0xc(%esp)$/;"	l
f0105a24	obj/kern/kernel.asm	/^f0105a24:	00 $/;"	l
f0105a25	obj/kern/kernel.asm	/^f0105a25:	89 da                	mov    %ebx,%edx$/;"	l
f0105a27	obj/kern/kernel.asm	/^f0105a27:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
f0105a2a	obj/kern/kernel.asm	/^f0105a2a:	29 ca                	sub    %ecx,%edx$/;"	l
f0105a2c	obj/kern/kernel.asm	/^f0105a2c:	c1 fa 02             	sar    $0x2,%edx$/;"	l
f0105a2f	obj/kern/kernel.asm	/^f0105a2f:	69 d2 ab aa aa aa    	imul   $0xaaaaaaab,%edx,%edx$/;"	l
f0105a35	obj/kern/kernel.asm	/^f0105a35:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0105a39	obj/kern/kernel.asm	/^f0105a39:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0105a3d	obj/kern/kernel.asm	/^f0105a3d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105a40	obj/kern/kernel.asm	/^f0105a40:	8b 80 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%eax$/;"	l
f0105a46	obj/kern/kernel.asm	/^f0105a46:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105a49	obj/kern/kernel.asm	/^f0105a49:	e8 3f db ff ff       	call   f010358d <user_mem_check>$/;"	l
f0105a4e	obj/kern/kernel.asm	/^f0105a4e:	85 c0                	test   %eax,%eax$/;"	l
f0105a50	obj/kern/kernel.asm	/^f0105a50:	0f 85 04 02 00 00    	jne    f0105c5a <debuginfo_eip+0x2d7>$/;"	l
f0105a56	obj/kern/kernel.asm	/^f0105a56:	e8 8e 11 00 00       	call   f0106be9 <cpunum>$/;"	l
f0105a5b	obj/kern/kernel.asm	/^f0105a5b:	c7 44 24 0c 04 00 00 	movl   $0x4,0xc(%esp)$/;"	l
f0105a62	obj/kern/kernel.asm	/^f0105a62:	00 $/;"	l
f0105a63	obj/kern/kernel.asm	/^f0105a63:	8b 55 bc             	mov    -0x44(%ebp),%edx$/;"	l
f0105a66	obj/kern/kernel.asm	/^f0105a66:	8b 4d c0             	mov    -0x40(%ebp),%ecx$/;"	l
f0105a69	obj/kern/kernel.asm	/^f0105a69:	29 ca                	sub    %ecx,%edx$/;"	l
f0105a6b	obj/kern/kernel.asm	/^f0105a6b:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0105a6f	obj/kern/kernel.asm	/^f0105a6f:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0105a73	obj/kern/kernel.asm	/^f0105a73:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105a76	obj/kern/kernel.asm	/^f0105a76:	8b 80 28 a0 2b f0    	mov    -0xfd45fd8(%eax),%eax$/;"	l
f0105a7c	obj/kern/kernel.asm	/^f0105a7c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105a7f	obj/kern/kernel.asm	/^f0105a7f:	e8 09 db ff ff       	call   f010358d <user_mem_check>$/;"	l
f0105a84	obj/kern/kernel.asm	/^f0105a84:	85 c0                	test   %eax,%eax$/;"	l
f0105a86	obj/kern/kernel.asm	/^f0105a86:	74 1f                	je     f0105aa7 <debuginfo_eip+0x124>$/;"	l
f0105a88	obj/kern/kernel.asm	/^f0105a88:	e9 d4 01 00 00       	jmp    f0105c61 <debuginfo_eip+0x2de>$/;"	l
f0105a8d	obj/kern/kernel.asm	/^f0105a8d:	c7 45 bc b0 a9 11 f0 	movl   $0xf011a9b0,-0x44(%ebp)$/;"	l
f0105a94	obj/kern/kernel.asm	/^f0105a94:	c7 45 c0 59 66 11 f0 	movl   $0xf0116659,-0x40(%ebp)$/;"	l
f0105a9b	obj/kern/kernel.asm	/^f0105a9b:	bb 58 66 11 f0       	mov    $0xf0116658,%ebx$/;"	l
f0105aa0	obj/kern/kernel.asm	/^f0105aa0:	c7 45 c4 7c a3 10 f0 	movl   $0xf010a37c,-0x3c(%ebp)$/;"	l
f0105aa7	obj/kern/kernel.asm	/^f0105aa7:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
f0105aaa	obj/kern/kernel.asm	/^f0105aaa:	39 45 c0             	cmp    %eax,-0x40(%ebp)$/;"	l
f0105aad	obj/kern/kernel.asm	/^f0105aad:	0f 83 b5 01 00 00    	jae    f0105c68 <debuginfo_eip+0x2e5>$/;"	l
f0105ab3	obj/kern/kernel.asm	/^f0105ab3:	80 78 ff 00          	cmpb   $0x0,-0x1(%eax)$/;"	l
f0105ab7	obj/kern/kernel.asm	/^f0105ab7:	0f 85 b2 01 00 00    	jne    f0105c6f <debuginfo_eip+0x2ec>$/;"	l
f0105abd	obj/kern/kernel.asm	/^f0105abd:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0105ac4	obj/kern/kernel.asm	/^f0105ac4:	2b 5d c4             	sub    -0x3c(%ebp),%ebx$/;"	l
f0105ac7	obj/kern/kernel.asm	/^f0105ac7:	c1 fb 02             	sar    $0x2,%ebx$/;"	l
f0105aca	obj/kern/kernel.asm	/^f0105aca:	69 c3 ab aa aa aa    	imul   $0xaaaaaaab,%ebx,%eax$/;"	l
f0105ad0	obj/kern/kernel.asm	/^f0105ad0:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0105ad3	obj/kern/kernel.asm	/^f0105ad3:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0105ad6	obj/kern/kernel.asm	/^f0105ad6:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0105ada	obj/kern/kernel.asm	/^f0105ada:	c7 04 24 64 00 00 00 	movl   $0x64,(%esp)$/;"	l
f0105ae1	obj/kern/kernel.asm	/^f0105ae1:	8d 4d e0             	lea    -0x20(%ebp),%ecx$/;"	l
f0105ae4	obj/kern/kernel.asm	/^f0105ae4:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f0105ae7	obj/kern/kernel.asm	/^f0105ae7:	8b 5d c4             	mov    -0x3c(%ebp),%ebx$/;"	l
f0105aea	obj/kern/kernel.asm	/^f0105aea:	89 d8                	mov    %ebx,%eax$/;"	l
f0105aec	obj/kern/kernel.asm	/^f0105aec:	e8 90 fd ff ff       	call   f0105881 <stab_binsearch>$/;"	l
f0105af1	obj/kern/kernel.asm	/^f0105af1:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105af4	obj/kern/kernel.asm	/^f0105af4:	85 c0                	test   %eax,%eax$/;"	l
f0105af6	obj/kern/kernel.asm	/^f0105af6:	0f 84 7a 01 00 00    	je     f0105c76 <debuginfo_eip+0x2f3>$/;"	l
f0105afc	obj/kern/kernel.asm	/^f0105afc:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0105aff	obj/kern/kernel.asm	/^f0105aff:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105b02	obj/kern/kernel.asm	/^f0105b02:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0105b05	obj/kern/kernel.asm	/^f0105b05:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0105b09	obj/kern/kernel.asm	/^f0105b09:	c7 04 24 24 00 00 00 	movl   $0x24,(%esp)$/;"	l
f0105b10	obj/kern/kernel.asm	/^f0105b10:	8d 4d d8             	lea    -0x28(%ebp),%ecx$/;"	l
f0105b13	obj/kern/kernel.asm	/^f0105b13:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f0105b16	obj/kern/kernel.asm	/^f0105b16:	89 d8                	mov    %ebx,%eax$/;"	l
f0105b18	obj/kern/kernel.asm	/^f0105b18:	e8 64 fd ff ff       	call   f0105881 <stab_binsearch>$/;"	l
f0105b1d	obj/kern/kernel.asm	/^f0105b1d:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0105b20	obj/kern/kernel.asm	/^f0105b20:	8b 5d d8             	mov    -0x28(%ebp),%ebx$/;"	l
f0105b23	obj/kern/kernel.asm	/^f0105b23:	39 d8                	cmp    %ebx,%eax$/;"	l
f0105b25	obj/kern/kernel.asm	/^f0105b25:	7f 32                	jg     f0105b59 <debuginfo_eip+0x1d6>$/;"	l
f0105b27	obj/kern/kernel.asm	/^f0105b27:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0105b2a	obj/kern/kernel.asm	/^f0105b2a:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
f0105b2d	obj/kern/kernel.asm	/^f0105b2d:	8d 14 91             	lea    (%ecx,%edx,4),%edx$/;"	l
f0105b30	obj/kern/kernel.asm	/^f0105b30:	8b 0a                	mov    (%edx),%ecx$/;"	l
f0105b32	obj/kern/kernel.asm	/^f0105b32:	89 4d b8             	mov    %ecx,-0x48(%ebp)$/;"	l
f0105b35	obj/kern/kernel.asm	/^f0105b35:	8b 4d bc             	mov    -0x44(%ebp),%ecx$/;"	l
f0105b38	obj/kern/kernel.asm	/^f0105b38:	2b 4d c0             	sub    -0x40(%ebp),%ecx$/;"	l
f0105b3b	obj/kern/kernel.asm	/^f0105b3b:	39 4d b8             	cmp    %ecx,-0x48(%ebp)$/;"	l
f0105b3e	obj/kern/kernel.asm	/^f0105b3e:	73 09                	jae    f0105b49 <debuginfo_eip+0x1c6>$/;"	l
f0105b40	obj/kern/kernel.asm	/^f0105b40:	8b 4d b8             	mov    -0x48(%ebp),%ecx$/;"	l
f0105b43	obj/kern/kernel.asm	/^f0105b43:	03 4d c0             	add    -0x40(%ebp),%ecx$/;"	l
f0105b46	obj/kern/kernel.asm	/^f0105b46:	89 4f 08             	mov    %ecx,0x8(%edi)$/;"	l
f0105b49	obj/kern/kernel.asm	/^f0105b49:	8b 52 08             	mov    0x8(%edx),%edx$/;"	l
f0105b4c	obj/kern/kernel.asm	/^f0105b4c:	89 57 10             	mov    %edx,0x10(%edi)$/;"	l
f0105b4f	obj/kern/kernel.asm	/^f0105b4f:	29 d6                	sub    %edx,%esi$/;"	l
f0105b51	obj/kern/kernel.asm	/^f0105b51:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105b54	obj/kern/kernel.asm	/^f0105b54:	89 5d d0             	mov    %ebx,-0x30(%ebp)$/;"	l
f0105b57	obj/kern/kernel.asm	/^f0105b57:	eb 0f                	jmp    f0105b68 <debuginfo_eip+0x1e5>$/;"	l
f0105b59	obj/kern/kernel.asm	/^f0105b59:	89 77 10             	mov    %esi,0x10(%edi)$/;"	l
f0105b5c	obj/kern/kernel.asm	/^f0105b5c:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105b5f	obj/kern/kernel.asm	/^f0105b5f:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105b62	obj/kern/kernel.asm	/^f0105b62:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105b65	obj/kern/kernel.asm	/^f0105b65:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0105b68	obj/kern/kernel.asm	/^f0105b68:	c7 44 24 04 3a 00 00 	movl   $0x3a,0x4(%esp)$/;"	l
f0105b6f	obj/kern/kernel.asm	/^f0105b6f:	00 $/;"	l
f0105b70	obj/kern/kernel.asm	/^f0105b70:	8b 47 08             	mov    0x8(%edi),%eax$/;"	l
f0105b73	obj/kern/kernel.asm	/^f0105b73:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105b76	obj/kern/kernel.asm	/^f0105b76:	e8 00 0a 00 00       	call   f010657b <strfind>$/;"	l
f0105b7b	obj/kern/kernel.asm	/^f0105b7b:	2b 47 08             	sub    0x8(%edi),%eax$/;"	l
f0105b7e	obj/kern/kernel.asm	/^f0105b7e:	89 47 0c             	mov    %eax,0xc(%edi)$/;"	l
f0105b81	obj/kern/kernel.asm	/^f0105b81:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0105b85	obj/kern/kernel.asm	/^f0105b85:	c7 04 24 44 00 00 00 	movl   $0x44,(%esp)$/;"	l
f0105b8c	obj/kern/kernel.asm	/^f0105b8c:	8d 4d d0             	lea    -0x30(%ebp),%ecx$/;"	l
f0105b8f	obj/kern/kernel.asm	/^f0105b8f:	8d 55 d4             	lea    -0x2c(%ebp),%edx$/;"	l
f0105b92	obj/kern/kernel.asm	/^f0105b92:	8b 75 c4             	mov    -0x3c(%ebp),%esi$/;"	l
f0105b95	obj/kern/kernel.asm	/^f0105b95:	89 f0                	mov    %esi,%eax$/;"	l
f0105b97	obj/kern/kernel.asm	/^f0105b97:	e8 e5 fc ff ff       	call   f0105881 <stab_binsearch>$/;"	l
f0105b9c	obj/kern/kernel.asm	/^f0105b9c:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0105b9f	obj/kern/kernel.asm	/^f0105b9f:	39 45 d0             	cmp    %eax,-0x30(%ebp)$/;"	l
f0105ba2	obj/kern/kernel.asm	/^f0105ba2:	0f 8c d5 00 00 00    	jl     f0105c7d <debuginfo_eip+0x2fa>$/;"	l
f0105ba8	obj/kern/kernel.asm	/^f0105ba8:	8d 04 40             	lea    (%eax,%eax,2),%eax$/;"	l
f0105bab	obj/kern/kernel.asm	/^f0105bab:	0f b7 44 86 06       	movzwl 0x6(%esi,%eax,4),%eax$/;"	l
f0105bb0	obj/kern/kernel.asm	/^f0105bb0:	89 47 04             	mov    %eax,0x4(%edi)$/;"	l
f0105bb3	obj/kern/kernel.asm	/^f0105bb3:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105bb6	obj/kern/kernel.asm	/^f0105bb6:	89 c3                	mov    %eax,%ebx$/;"	l
f0105bb8	obj/kern/kernel.asm	/^f0105bb8:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0105bbb	obj/kern/kernel.asm	/^f0105bbb:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0105bbe	obj/kern/kernel.asm	/^f0105bbe:	8d 14 96             	lea    (%esi,%edx,4),%edx$/;"	l
f0105bc1	obj/kern/kernel.asm	/^f0105bc1:	89 7d 0c             	mov    %edi,0xc(%ebp)$/;"	l
f0105bc4	obj/kern/kernel.asm	/^f0105bc4:	89 df                	mov    %ebx,%edi$/;"	l
f0105bc6	obj/kern/kernel.asm	/^f0105bc6:	eb 06                	jmp    f0105bce <debuginfo_eip+0x24b>$/;"	l
f0105bc8	obj/kern/kernel.asm	/^f0105bc8:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0105bcb	obj/kern/kernel.asm	/^f0105bcb:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0105bce	obj/kern/kernel.asm	/^f0105bce:	89 c6                	mov    %eax,%esi$/;"	l
f0105bd0	obj/kern/kernel.asm	/^f0105bd0:	39 c7                	cmp    %eax,%edi$/;"	l
f0105bd2	obj/kern/kernel.asm	/^f0105bd2:	7f 3c                	jg     f0105c10 <debuginfo_eip+0x28d>$/;"	l
f0105bd4	obj/kern/kernel.asm	/^f0105bd4:	0f b6 4a 04          	movzbl 0x4(%edx),%ecx$/;"	l
f0105bd8	obj/kern/kernel.asm	/^f0105bd8:	80 f9 84             	cmp    $0x84,%cl$/;"	l
f0105bdb	obj/kern/kernel.asm	/^f0105bdb:	75 08                	jne    f0105be5 <debuginfo_eip+0x262>$/;"	l
f0105bdd	obj/kern/kernel.asm	/^f0105bdd:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0105be0	obj/kern/kernel.asm	/^f0105be0:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105be3	obj/kern/kernel.asm	/^f0105be3:	eb 11                	jmp    f0105bf6 <debuginfo_eip+0x273>$/;"	l
f0105be5	obj/kern/kernel.asm	/^f0105be5:	80 f9 64             	cmp    $0x64,%cl$/;"	l
f0105be8	obj/kern/kernel.asm	/^f0105be8:	75 de                	jne    f0105bc8 <debuginfo_eip+0x245>$/;"	l
f0105bea	obj/kern/kernel.asm	/^f0105bea:	83 7a 08 00          	cmpl   $0x0,0x8(%edx)$/;"	l
f0105bee	obj/kern/kernel.asm	/^f0105bee:	74 d8                	je     f0105bc8 <debuginfo_eip+0x245>$/;"	l
f0105bf0	obj/kern/kernel.asm	/^f0105bf0:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0105bf3	obj/kern/kernel.asm	/^f0105bf3:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105bf6	obj/kern/kernel.asm	/^f0105bf6:	8d 04 76             	lea    (%esi,%esi,2),%eax$/;"	l
f0105bf9	obj/kern/kernel.asm	/^f0105bf9:	8b 75 c4             	mov    -0x3c(%ebp),%esi$/;"	l
f0105bfc	obj/kern/kernel.asm	/^f0105bfc:	8b 04 86             	mov    (%esi,%eax,4),%eax$/;"	l
f0105bff	obj/kern/kernel.asm	/^f0105bff:	8b 55 bc             	mov    -0x44(%ebp),%edx$/;"	l
f0105c02	obj/kern/kernel.asm	/^f0105c02:	2b 55 c0             	sub    -0x40(%ebp),%edx$/;"	l
f0105c05	obj/kern/kernel.asm	/^f0105c05:	39 d0                	cmp    %edx,%eax$/;"	l
f0105c07	obj/kern/kernel.asm	/^f0105c07:	73 0a                	jae    f0105c13 <debuginfo_eip+0x290>$/;"	l
f0105c09	obj/kern/kernel.asm	/^f0105c09:	03 45 c0             	add    -0x40(%ebp),%eax$/;"	l
f0105c0c	obj/kern/kernel.asm	/^f0105c0c:	89 07                	mov    %eax,(%edi)$/;"	l
f0105c0e	obj/kern/kernel.asm	/^f0105c0e:	eb 03                	jmp    f0105c13 <debuginfo_eip+0x290>$/;"	l
f0105c10	obj/kern/kernel.asm	/^f0105c10:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0105c13	obj/kern/kernel.asm	/^f0105c13:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0105c16	obj/kern/kernel.asm	/^f0105c16:	8b 5d d8             	mov    -0x28(%ebp),%ebx$/;"	l
f0105c19	obj/kern/kernel.asm	/^f0105c19:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105c1e	obj/kern/kernel.asm	/^f0105c1e:	39 da                	cmp    %ebx,%edx$/;"	l
f0105c20	obj/kern/kernel.asm	/^f0105c20:	7d 67                	jge    f0105c89 <debuginfo_eip+0x306>$/;"	l
f0105c22	obj/kern/kernel.asm	/^f0105c22:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105c25	obj/kern/kernel.asm	/^f0105c25:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f0105c28	obj/kern/kernel.asm	/^f0105c28:	89 d0                	mov    %edx,%eax$/;"	l
f0105c2a	obj/kern/kernel.asm	/^f0105c2a:	8d 14 52             	lea    (%edx,%edx,2),%edx$/;"	l
f0105c2d	obj/kern/kernel.asm	/^f0105c2d:	8b 75 c4             	mov    -0x3c(%ebp),%esi$/;"	l
f0105c30	obj/kern/kernel.asm	/^f0105c30:	8d 14 96             	lea    (%esi,%edx,4),%edx$/;"	l
f0105c33	obj/kern/kernel.asm	/^f0105c33:	eb 04                	jmp    f0105c39 <debuginfo_eip+0x2b6>$/;"	l
f0105c35	obj/kern/kernel.asm	/^f0105c35:	83 47 14 01          	addl   $0x1,0x14(%edi)$/;"	l
f0105c39	obj/kern/kernel.asm	/^f0105c39:	39 c3                	cmp    %eax,%ebx$/;"	l
f0105c3b	obj/kern/kernel.asm	/^f0105c3b:	7e 47                	jle    f0105c84 <debuginfo_eip+0x301>$/;"	l
f0105c3d	obj/kern/kernel.asm	/^f0105c3d:	0f b6 4a 04          	movzbl 0x4(%edx),%ecx$/;"	l
f0105c41	obj/kern/kernel.asm	/^f0105c41:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105c44	obj/kern/kernel.asm	/^f0105c44:	83 c2 0c             	add    $0xc,%edx$/;"	l
f0105c47	obj/kern/kernel.asm	/^f0105c47:	80 f9 a0             	cmp    $0xa0,%cl$/;"	l
f0105c4a	obj/kern/kernel.asm	/^f0105c4a:	74 e9                	je     f0105c35 <debuginfo_eip+0x2b2>$/;"	l
f0105c4c	obj/kern/kernel.asm	/^f0105c4c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105c51	obj/kern/kernel.asm	/^f0105c51:	eb 36                	jmp    f0105c89 <debuginfo_eip+0x306>$/;"	l
f0105c53	obj/kern/kernel.asm	/^f0105c53:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0105c58	obj/kern/kernel.asm	/^f0105c58:	eb 2f                	jmp    f0105c89 <debuginfo_eip+0x306>$/;"	l
f0105c5a	obj/kern/kernel.asm	/^f0105c5a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0105c5f	obj/kern/kernel.asm	/^f0105c5f:	eb 28                	jmp    f0105c89 <debuginfo_eip+0x306>$/;"	l
f0105c61	obj/kern/kernel.asm	/^f0105c61:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0105c66	obj/kern/kernel.asm	/^f0105c66:	eb 21                	jmp    f0105c89 <debuginfo_eip+0x306>$/;"	l
f0105c68	obj/kern/kernel.asm	/^f0105c68:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0105c6d	obj/kern/kernel.asm	/^f0105c6d:	eb 1a                	jmp    f0105c89 <debuginfo_eip+0x306>$/;"	l
f0105c6f	obj/kern/kernel.asm	/^f0105c6f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0105c74	obj/kern/kernel.asm	/^f0105c74:	eb 13                	jmp    f0105c89 <debuginfo_eip+0x306>$/;"	l
f0105c76	obj/kern/kernel.asm	/^f0105c76:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0105c7b	obj/kern/kernel.asm	/^f0105c7b:	eb 0c                	jmp    f0105c89 <debuginfo_eip+0x306>$/;"	l
f0105c7d	obj/kern/kernel.asm	/^f0105c7d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0105c82	obj/kern/kernel.asm	/^f0105c82:	eb 05                	jmp    f0105c89 <debuginfo_eip+0x306>$/;"	l
f0105c84	obj/kern/kernel.asm	/^f0105c84:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105c89	obj/kern/kernel.asm	/^f0105c89:	83 c4 4c             	add    $0x4c,%esp$/;"	l
f0105c8c	obj/kern/kernel.asm	/^f0105c8c:	5b                   	pop    %ebx$/;"	l
f0105c8d	obj/kern/kernel.asm	/^f0105c8d:	5e                   	pop    %esi$/;"	l
f0105c8e	obj/kern/kernel.asm	/^f0105c8e:	5f                   	pop    %edi$/;"	l
f0105c8f	obj/kern/kernel.asm	/^f0105c8f:	5d                   	pop    %ebp$/;"	l
f0105c90	obj/kern/kernel.asm	/^f0105c90:	c3                   	ret    $/;"	l
f0105c91	obj/kern/kernel.asm	/^f0105c91:	66 90                	xchg   %ax,%ax$/;"	l
f0105c93	obj/kern/kernel.asm	/^f0105c93:	66 90                	xchg   %ax,%ax$/;"	l
f0105c95	obj/kern/kernel.asm	/^f0105c95:	66 90                	xchg   %ax,%ax$/;"	l
f0105c97	obj/kern/kernel.asm	/^f0105c97:	66 90                	xchg   %ax,%ax$/;"	l
f0105c99	obj/kern/kernel.asm	/^f0105c99:	66 90                	xchg   %ax,%ax$/;"	l
f0105c9b	obj/kern/kernel.asm	/^f0105c9b:	66 90                	xchg   %ax,%ax$/;"	l
f0105c9d	obj/kern/kernel.asm	/^f0105c9d:	66 90                	xchg   %ax,%ax$/;"	l
f0105c9f	obj/kern/kernel.asm	/^f0105c9f:	90                   	nop$/;"	l
f0105ca0	obj/kern/kernel.asm	/^f0105ca0 <printnum>:$/;"	l
f0105ca0	obj/kern/kernel.asm	/^f0105ca0:	55                   	push   %ebp$/;"	l
f0105ca1	obj/kern/kernel.asm	/^f0105ca1:	89 e5                	mov    %esp,%ebp$/;"	l
f0105ca3	obj/kern/kernel.asm	/^f0105ca3:	57                   	push   %edi$/;"	l
f0105ca4	obj/kern/kernel.asm	/^f0105ca4:	56                   	push   %esi$/;"	l
f0105ca5	obj/kern/kernel.asm	/^f0105ca5:	53                   	push   %ebx$/;"	l
f0105ca6	obj/kern/kernel.asm	/^f0105ca6:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0105ca9	obj/kern/kernel.asm	/^f0105ca9:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0105cac	obj/kern/kernel.asm	/^f0105cac:	89 d7                	mov    %edx,%edi$/;"	l
f0105cae	obj/kern/kernel.asm	/^f0105cae:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105cb1	obj/kern/kernel.asm	/^f0105cb1:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0105cb4	obj/kern/kernel.asm	/^f0105cb4:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105cb7	obj/kern/kernel.asm	/^f0105cb7:	89 c3                	mov    %eax,%ebx$/;"	l
f0105cb9	obj/kern/kernel.asm	/^f0105cb9:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105cbc	obj/kern/kernel.asm	/^f0105cbc:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0105cbf	obj/kern/kernel.asm	/^f0105cbf:	8b 75 14             	mov    0x14(%ebp),%esi$/;"	l
f0105cc2	obj/kern/kernel.asm	/^f0105cc2:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0105cc7	obj/kern/kernel.asm	/^f0105cc7:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0105cca	obj/kern/kernel.asm	/^f0105cca:	89 4d dc             	mov    %ecx,-0x24(%ebp)$/;"	l
f0105ccd	obj/kern/kernel.asm	/^f0105ccd:	39 d9                	cmp    %ebx,%ecx$/;"	l
f0105ccf	obj/kern/kernel.asm	/^f0105ccf:	72 05                	jb     f0105cd6 <printnum+0x36>$/;"	l
f0105cd1	obj/kern/kernel.asm	/^f0105cd1:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
f0105cd4	obj/kern/kernel.asm	/^f0105cd4:	77 69                	ja     f0105d3f <printnum+0x9f>$/;"	l
f0105cd6	obj/kern/kernel.asm	/^f0105cd6:	8b 4d 18             	mov    0x18(%ebp),%ecx$/;"	l
f0105cd9	obj/kern/kernel.asm	/^f0105cd9:	89 4c 24 10          	mov    %ecx,0x10(%esp)$/;"	l
f0105cdd	obj/kern/kernel.asm	/^f0105cdd:	83 ee 01             	sub    $0x1,%esi$/;"	l
f0105ce0	obj/kern/kernel.asm	/^f0105ce0:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f0105ce4	obj/kern/kernel.asm	/^f0105ce4:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0105ce8	obj/kern/kernel.asm	/^f0105ce8:	8b 44 24 08          	mov    0x8(%esp),%eax$/;"	l
f0105cec	obj/kern/kernel.asm	/^f0105cec:	8b 54 24 0c          	mov    0xc(%esp),%edx$/;"	l
f0105cf0	obj/kern/kernel.asm	/^f0105cf0:	89 c3                	mov    %eax,%ebx$/;"	l
f0105cf2	obj/kern/kernel.asm	/^f0105cf2:	89 d6                	mov    %edx,%esi$/;"	l
f0105cf4	obj/kern/kernel.asm	/^f0105cf4:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0105cf7	obj/kern/kernel.asm	/^f0105cf7:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
f0105cfa	obj/kern/kernel.asm	/^f0105cfa:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0105cfe	obj/kern/kernel.asm	/^f0105cfe:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f0105d02	obj/kern/kernel.asm	/^f0105d02:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105d05	obj/kern/kernel.asm	/^f0105d05:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105d08	obj/kern/kernel.asm	/^f0105d08:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0105d0b	obj/kern/kernel.asm	/^f0105d0b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105d0f	obj/kern/kernel.asm	/^f0105d0f:	e8 cc 20 00 00       	call   f0107de0 <__udivdi3>$/;"	l
f0105d14	obj/kern/kernel.asm	/^f0105d14:	89 d9                	mov    %ebx,%ecx$/;"	l
f0105d16	obj/kern/kernel.asm	/^f0105d16:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0105d1a	obj/kern/kernel.asm	/^f0105d1a:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f0105d1e	obj/kern/kernel.asm	/^f0105d1e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105d21	obj/kern/kernel.asm	/^f0105d21:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0105d25	obj/kern/kernel.asm	/^f0105d25:	89 fa                	mov    %edi,%edx$/;"	l
f0105d27	obj/kern/kernel.asm	/^f0105d27:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105d2a	obj/kern/kernel.asm	/^f0105d2a:	e8 71 ff ff ff       	call   f0105ca0 <printnum>$/;"	l
f0105d2f	obj/kern/kernel.asm	/^f0105d2f:	eb 1b                	jmp    f0105d4c <printnum+0xac>$/;"	l
f0105d31	obj/kern/kernel.asm	/^f0105d31:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105d35	obj/kern/kernel.asm	/^f0105d35:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
f0105d38	obj/kern/kernel.asm	/^f0105d38:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105d3b	obj/kern/kernel.asm	/^f0105d3b:	ff d3                	call   *%ebx$/;"	l
f0105d3d	obj/kern/kernel.asm	/^f0105d3d:	eb 03                	jmp    f0105d42 <printnum+0xa2>$/;"	l
f0105d3f	obj/kern/kernel.asm	/^f0105d3f:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0105d42	obj/kern/kernel.asm	/^f0105d42:	83 ee 01             	sub    $0x1,%esi$/;"	l
f0105d45	obj/kern/kernel.asm	/^f0105d45:	85 f6                	test   %esi,%esi$/;"	l
f0105d47	obj/kern/kernel.asm	/^f0105d47:	7f e8                	jg     f0105d31 <printnum+0x91>$/;"	l
f0105d49	obj/kern/kernel.asm	/^f0105d49:	89 5d e4             	mov    %ebx,-0x1c(%ebp)$/;"	l
f0105d4c	obj/kern/kernel.asm	/^f0105d4c:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105d50	obj/kern/kernel.asm	/^f0105d50:	8b 7c 24 04          	mov    0x4(%esp),%edi$/;"	l
f0105d54	obj/kern/kernel.asm	/^f0105d54:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0105d57	obj/kern/kernel.asm	/^f0105d57:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0105d5a	obj/kern/kernel.asm	/^f0105d5a:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0105d5e	obj/kern/kernel.asm	/^f0105d5e:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0105d62	obj/kern/kernel.asm	/^f0105d62:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105d65	obj/kern/kernel.asm	/^f0105d65:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105d68	obj/kern/kernel.asm	/^f0105d68:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0105d6b	obj/kern/kernel.asm	/^f0105d6b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105d6f	obj/kern/kernel.asm	/^f0105d6f:	e8 9c 21 00 00       	call   f0107f10 <__umoddi3>$/;"	l
f0105d74	obj/kern/kernel.asm	/^f0105d74:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105d78	obj/kern/kernel.asm	/^f0105d78:	0f be 80 7e 98 10 f0 	movsbl -0xfef6782(%eax),%eax$/;"	l
f0105d7f	obj/kern/kernel.asm	/^f0105d7f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105d82	obj/kern/kernel.asm	/^f0105d82:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105d85	obj/kern/kernel.asm	/^f0105d85:	ff d0                	call   *%eax$/;"	l
f0105d87	obj/kern/kernel.asm	/^f0105d87:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f0105d8a	obj/kern/kernel.asm	/^f0105d8a:	5b                   	pop    %ebx$/;"	l
f0105d8b	obj/kern/kernel.asm	/^f0105d8b:	5e                   	pop    %esi$/;"	l
f0105d8c	obj/kern/kernel.asm	/^f0105d8c:	5f                   	pop    %edi$/;"	l
f0105d8d	obj/kern/kernel.asm	/^f0105d8d:	5d                   	pop    %ebp$/;"	l
f0105d8e	obj/kern/kernel.asm	/^f0105d8e:	c3                   	ret    $/;"	l
f0105d8f	obj/kern/kernel.asm	/^f0105d8f <getuint>:$/;"	l
f0105d8f	obj/kern/kernel.asm	/^f0105d8f:	55                   	push   %ebp$/;"	l
f0105d90	obj/kern/kernel.asm	/^f0105d90:	89 e5                	mov    %esp,%ebp$/;"	l
f0105d92	obj/kern/kernel.asm	/^f0105d92:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f0105d95	obj/kern/kernel.asm	/^f0105d95:	7e 0e                	jle    f0105da5 <getuint+0x16>$/;"	l
f0105d97	obj/kern/kernel.asm	/^f0105d97:	8b 10                	mov    (%eax),%edx$/;"	l
f0105d99	obj/kern/kernel.asm	/^f0105d99:	8d 4a 08             	lea    0x8(%edx),%ecx$/;"	l
f0105d9c	obj/kern/kernel.asm	/^f0105d9c:	89 08                	mov    %ecx,(%eax)$/;"	l
f0105d9e	obj/kern/kernel.asm	/^f0105d9e:	8b 02                	mov    (%edx),%eax$/;"	l
f0105da0	obj/kern/kernel.asm	/^f0105da0:	8b 52 04             	mov    0x4(%edx),%edx$/;"	l
f0105da3	obj/kern/kernel.asm	/^f0105da3:	eb 22                	jmp    f0105dc7 <getuint+0x38>$/;"	l
f0105da5	obj/kern/kernel.asm	/^f0105da5:	85 d2                	test   %edx,%edx$/;"	l
f0105da7	obj/kern/kernel.asm	/^f0105da7:	74 10                	je     f0105db9 <getuint+0x2a>$/;"	l
f0105da9	obj/kern/kernel.asm	/^f0105da9:	8b 10                	mov    (%eax),%edx$/;"	l
f0105dab	obj/kern/kernel.asm	/^f0105dab:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
f0105dae	obj/kern/kernel.asm	/^f0105dae:	89 08                	mov    %ecx,(%eax)$/;"	l
f0105db0	obj/kern/kernel.asm	/^f0105db0:	8b 02                	mov    (%edx),%eax$/;"	l
f0105db2	obj/kern/kernel.asm	/^f0105db2:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105db7	obj/kern/kernel.asm	/^f0105db7:	eb 0e                	jmp    f0105dc7 <getuint+0x38>$/;"	l
f0105db9	obj/kern/kernel.asm	/^f0105db9:	8b 10                	mov    (%eax),%edx$/;"	l
f0105dbb	obj/kern/kernel.asm	/^f0105dbb:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
f0105dbe	obj/kern/kernel.asm	/^f0105dbe:	89 08                	mov    %ecx,(%eax)$/;"	l
f0105dc0	obj/kern/kernel.asm	/^f0105dc0:	8b 02                	mov    (%edx),%eax$/;"	l
f0105dc2	obj/kern/kernel.asm	/^f0105dc2:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105dc7	obj/kern/kernel.asm	/^f0105dc7:	5d                   	pop    %ebp$/;"	l
f0105dc8	obj/kern/kernel.asm	/^f0105dc8:	c3                   	ret    $/;"	l
f0105dc9	obj/kern/kernel.asm	/^f0105dc9 <sprintputch>:$/;"	l
f0105dc9	obj/kern/kernel.asm	/^f0105dc9:	55                   	push   %ebp$/;"	l
f0105dca	obj/kern/kernel.asm	/^f0105dca:	89 e5                	mov    %esp,%ebp$/;"	l
f0105dcc	obj/kern/kernel.asm	/^f0105dcc:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105dcf	obj/kern/kernel.asm	/^f0105dcf:	83 40 08 01          	addl   $0x1,0x8(%eax)$/;"	l
f0105dd3	obj/kern/kernel.asm	/^f0105dd3:	8b 10                	mov    (%eax),%edx$/;"	l
f0105dd5	obj/kern/kernel.asm	/^f0105dd5:	3b 50 04             	cmp    0x4(%eax),%edx$/;"	l
f0105dd8	obj/kern/kernel.asm	/^f0105dd8:	73 0a                	jae    f0105de4 <sprintputch+0x1b>$/;"	l
f0105dda	obj/kern/kernel.asm	/^f0105dda:	8d 4a 01             	lea    0x1(%edx),%ecx$/;"	l
f0105ddd	obj/kern/kernel.asm	/^f0105ddd:	89 08                	mov    %ecx,(%eax)$/;"	l
f0105ddf	obj/kern/kernel.asm	/^f0105ddf:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105de2	obj/kern/kernel.asm	/^f0105de2:	88 02                	mov    %al,(%edx)$/;"	l
f0105de4	obj/kern/kernel.asm	/^f0105de4:	5d                   	pop    %ebp$/;"	l
f0105de5	obj/kern/kernel.asm	/^f0105de5:	c3                   	ret    $/;"	l
f0105de6	obj/kern/kernel.asm	/^f0105de6 <printfmt>:$/;"	l
f0105de6	obj/kern/kernel.asm	/^f0105de6:	55                   	push   %ebp$/;"	l
f0105de7	obj/kern/kernel.asm	/^f0105de7:	89 e5                	mov    %esp,%ebp$/;"	l
f0105de9	obj/kern/kernel.asm	/^f0105de9:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0105dec	obj/kern/kernel.asm	/^f0105dec:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0105def	obj/kern/kernel.asm	/^f0105def:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0105df3	obj/kern/kernel.asm	/^f0105df3:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0105df6	obj/kern/kernel.asm	/^f0105df6:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0105dfa	obj/kern/kernel.asm	/^f0105dfa:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105dfd	obj/kern/kernel.asm	/^f0105dfd:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105e01	obj/kern/kernel.asm	/^f0105e01:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105e04	obj/kern/kernel.asm	/^f0105e04:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105e07	obj/kern/kernel.asm	/^f0105e07:	e8 02 00 00 00       	call   f0105e0e <vprintfmt>$/;"	l
f0105e0c	obj/kern/kernel.asm	/^f0105e0c:	c9                   	leave  $/;"	l
f0105e0d	obj/kern/kernel.asm	/^f0105e0d:	c3                   	ret    $/;"	l
f0105e0e	obj/kern/kernel.asm	/^f0105e0e <vprintfmt>:$/;"	l
f0105e0e	obj/kern/kernel.asm	/^f0105e0e:	55                   	push   %ebp$/;"	l
f0105e0f	obj/kern/kernel.asm	/^f0105e0f:	89 e5                	mov    %esp,%ebp$/;"	l
f0105e11	obj/kern/kernel.asm	/^f0105e11:	57                   	push   %edi$/;"	l
f0105e12	obj/kern/kernel.asm	/^f0105e12:	56                   	push   %esi$/;"	l
f0105e13	obj/kern/kernel.asm	/^f0105e13:	53                   	push   %ebx$/;"	l
f0105e14	obj/kern/kernel.asm	/^f0105e14:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0105e17	obj/kern/kernel.asm	/^f0105e17:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0105e1a	obj/kern/kernel.asm	/^f0105e1a:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0105e1d	obj/kern/kernel.asm	/^f0105e1d:	eb 1f                	jmp    f0105e3e <vprintfmt+0x30>$/;"	l
f0105e1f	obj/kern/kernel.asm	/^f0105e1f:	85 c0                	test   %eax,%eax$/;"	l
f0105e21	obj/kern/kernel.asm	/^f0105e21:	75 0f                	jne    f0105e32 <vprintfmt+0x24>$/;"	l
f0105e23	obj/kern/kernel.asm	/^f0105e23:	c7 05 a0 9e 2b f0 00 	movl   $0x0,0xf02b9ea0$/;"	l
f0105e2a	obj/kern/kernel.asm	/^f0105e2a:	00 00 00 $/;"	l
f0105e2d	obj/kern/kernel.asm	/^f0105e2d:	e9 6e 04 00 00       	jmp    f01062a0 <vprintfmt+0x492>$/;"	l
f0105e32	obj/kern/kernel.asm	/^f0105e32:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105e36	obj/kern/kernel.asm	/^f0105e36:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105e39	obj/kern/kernel.asm	/^f0105e39:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105e3c	obj/kern/kernel.asm	/^f0105e3c:	89 f3                	mov    %esi,%ebx$/;"	l
f0105e3e	obj/kern/kernel.asm	/^f0105e3e:	8d 73 01             	lea    0x1(%ebx),%esi$/;"	l
f0105e41	obj/kern/kernel.asm	/^f0105e41:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0105e44	obj/kern/kernel.asm	/^f0105e44:	83 f8 25             	cmp    $0x25,%eax$/;"	l
f0105e47	obj/kern/kernel.asm	/^f0105e47:	75 d6                	jne    f0105e1f <vprintfmt+0x11>$/;"	l
f0105e49	obj/kern/kernel.asm	/^f0105e49:	c6 45 d8 20          	movb   $0x20,-0x28(%ebp)$/;"	l
f0105e4d	obj/kern/kernel.asm	/^f0105e4d:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f0105e54	obj/kern/kernel.asm	/^f0105e54:	c7 45 d4 ff ff ff ff 	movl   $0xffffffff,-0x2c(%ebp)$/;"	l
f0105e5b	obj/kern/kernel.asm	/^f0105e5b:	c7 45 dc ff ff ff ff 	movl   $0xffffffff,-0x24(%ebp)$/;"	l
f0105e62	obj/kern/kernel.asm	/^f0105e62:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105e67	obj/kern/kernel.asm	/^f0105e67:	eb 1d                	jmp    f0105e86 <vprintfmt+0x78>$/;"	l
f0105e69	obj/kern/kernel.asm	/^f0105e69:	89 de                	mov    %ebx,%esi$/;"	l
f0105e6b	obj/kern/kernel.asm	/^f0105e6b:	c6 45 d8 2d          	movb   $0x2d,-0x28(%ebp)$/;"	l
f0105e6f	obj/kern/kernel.asm	/^f0105e6f:	eb 15                	jmp    f0105e86 <vprintfmt+0x78>$/;"	l
f0105e71	obj/kern/kernel.asm	/^f0105e71:	89 de                	mov    %ebx,%esi$/;"	l
f0105e73	obj/kern/kernel.asm	/^f0105e73:	c6 45 d8 30          	movb   $0x30,-0x28(%ebp)$/;"	l
f0105e77	obj/kern/kernel.asm	/^f0105e77:	eb 0d                	jmp    f0105e86 <vprintfmt+0x78>$/;"	l
f0105e79	obj/kern/kernel.asm	/^f0105e79:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0105e7c	obj/kern/kernel.asm	/^f0105e7c:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0105e7f	obj/kern/kernel.asm	/^f0105e7f:	c7 45 d4 ff ff ff ff 	movl   $0xffffffff,-0x2c(%ebp)$/;"	l
f0105e86	obj/kern/kernel.asm	/^f0105e86:	8d 5e 01             	lea    0x1(%esi),%ebx$/;"	l
f0105e89	obj/kern/kernel.asm	/^f0105e89:	0f b6 06             	movzbl (%esi),%eax$/;"	l
f0105e8c	obj/kern/kernel.asm	/^f0105e8c:	0f b6 c8             	movzbl %al,%ecx$/;"	l
f0105e8f	obj/kern/kernel.asm	/^f0105e8f:	83 e8 23             	sub    $0x23,%eax$/;"	l
f0105e92	obj/kern/kernel.asm	/^f0105e92:	3c 55                	cmp    $0x55,%al$/;"	l
f0105e94	obj/kern/kernel.asm	/^f0105e94:	0f 87 45 03 00 00    	ja     f01061df <vprintfmt+0x3d1>$/;"	l
f0105e9a	obj/kern/kernel.asm	/^f0105e9a:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0105e9d	obj/kern/kernel.asm	/^f0105e9d:	ff 24 85 c0 99 10 f0 	jmp    *-0xfef6640(,%eax,4)$/;"	l
f0105ea4	obj/kern/kernel.asm	/^f0105ea4:	c7 05 a0 9e 2b f0 00 	movl   $0x0,0xf02b9ea0$/;"	l
f0105eab	obj/kern/kernel.asm	/^f0105eab:	00 00 00 $/;"	l
f0105eae	obj/kern/kernel.asm	/^f0105eae:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105eb3	obj/kern/kernel.asm	/^f0105eb3:	e9 4a 03 00 00       	jmp    f0106202 <vprintfmt+0x3f4>$/;"	l
f0105eb8	obj/kern/kernel.asm	/^f0105eb8:	89 de                	mov    %ebx,%esi$/;"	l
f0105eba	obj/kern/kernel.asm	/^f0105eba:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105ebf	obj/kern/kernel.asm	/^f0105ebf:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f0105ec2	obj/kern/kernel.asm	/^f0105ec2:	8d 44 41 d0          	lea    -0x30(%ecx,%eax,2),%eax$/;"	l
f0105ec6	obj/kern/kernel.asm	/^f0105ec6:	0f be 0e             	movsbl (%esi),%ecx$/;"	l
f0105ec9	obj/kern/kernel.asm	/^f0105ec9:	8d 59 d0             	lea    -0x30(%ecx),%ebx$/;"	l
f0105ecc	obj/kern/kernel.asm	/^f0105ecc:	83 fb 09             	cmp    $0x9,%ebx$/;"	l
f0105ecf	obj/kern/kernel.asm	/^f0105ecf:	77 39                	ja     f0105f0a <vprintfmt+0xfc>$/;"	l
f0105ed1	obj/kern/kernel.asm	/^f0105ed1:	83 c6 01             	add    $0x1,%esi$/;"	l
f0105ed4	obj/kern/kernel.asm	/^f0105ed4:	eb e9                	jmp    f0105ebf <vprintfmt+0xb1>$/;"	l
f0105ed6	obj/kern/kernel.asm	/^f0105ed6:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105ed9	obj/kern/kernel.asm	/^f0105ed9:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
f0105edc	obj/kern/kernel.asm	/^f0105edc:	89 4d 14             	mov    %ecx,0x14(%ebp)$/;"	l
f0105edf	obj/kern/kernel.asm	/^f0105edf:	8b 00                	mov    (%eax),%eax$/;"	l
f0105ee1	obj/kern/kernel.asm	/^f0105ee1:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105ee4	obj/kern/kernel.asm	/^f0105ee4:	89 de                	mov    %ebx,%esi$/;"	l
f0105ee6	obj/kern/kernel.asm	/^f0105ee6:	eb 25                	jmp    f0105f0d <vprintfmt+0xff>$/;"	l
f0105ee8	obj/kern/kernel.asm	/^f0105ee8:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
f0105eeb	obj/kern/kernel.asm	/^f0105eeb:	85 c9                	test   %ecx,%ecx$/;"	l
f0105eed	obj/kern/kernel.asm	/^f0105eed:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105ef2	obj/kern/kernel.asm	/^f0105ef2:	0f 49 c1             	cmovns %ecx,%eax$/;"	l
f0105ef5	obj/kern/kernel.asm	/^f0105ef5:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0105ef8	obj/kern/kernel.asm	/^f0105ef8:	89 de                	mov    %ebx,%esi$/;"	l
f0105efa	obj/kern/kernel.asm	/^f0105efa:	eb 8a                	jmp    f0105e86 <vprintfmt+0x78>$/;"	l
f0105efc	obj/kern/kernel.asm	/^f0105efc:	89 de                	mov    %ebx,%esi$/;"	l
f0105efe	obj/kern/kernel.asm	/^f0105efe:	c7 45 e0 01 00 00 00 	movl   $0x1,-0x20(%ebp)$/;"	l
f0105f05	obj/kern/kernel.asm	/^f0105f05:	e9 7c ff ff ff       	jmp    f0105e86 <vprintfmt+0x78>$/;"	l
f0105f0a	obj/kern/kernel.asm	/^f0105f0a:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105f0d	obj/kern/kernel.asm	/^f0105f0d:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
f0105f11	obj/kern/kernel.asm	/^f0105f11:	0f 89 6f ff ff ff    	jns    f0105e86 <vprintfmt+0x78>$/;"	l
f0105f17	obj/kern/kernel.asm	/^f0105f17:	e9 5d ff ff ff       	jmp    f0105e79 <vprintfmt+0x6b>$/;"	l
f0105f1c	obj/kern/kernel.asm	/^f0105f1c:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105f1f	obj/kern/kernel.asm	/^f0105f1f:	89 de                	mov    %ebx,%esi$/;"	l
f0105f21	obj/kern/kernel.asm	/^f0105f21:	e9 60 ff ff ff       	jmp    f0105e86 <vprintfmt+0x78>$/;"	l
f0105f26	obj/kern/kernel.asm	/^f0105f26:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105f29	obj/kern/kernel.asm	/^f0105f29:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105f2c	obj/kern/kernel.asm	/^f0105f2c:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105f2f	obj/kern/kernel.asm	/^f0105f2f:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105f33	obj/kern/kernel.asm	/^f0105f33:	8b 00                	mov    (%eax),%eax$/;"	l
f0105f35	obj/kern/kernel.asm	/^f0105f35:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105f38	obj/kern/kernel.asm	/^f0105f38:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105f3b	obj/kern/kernel.asm	/^f0105f3b:	e9 fe fe ff ff       	jmp    f0105e3e <vprintfmt+0x30>$/;"	l
f0105f40	obj/kern/kernel.asm	/^f0105f40:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105f43	obj/kern/kernel.asm	/^f0105f43:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105f46	obj/kern/kernel.asm	/^f0105f46:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105f49	obj/kern/kernel.asm	/^f0105f49:	8b 00                	mov    (%eax),%eax$/;"	l
f0105f4b	obj/kern/kernel.asm	/^f0105f4b:	99                   	cltd   $/;"	l
f0105f4c	obj/kern/kernel.asm	/^f0105f4c:	31 d0                	xor    %edx,%eax$/;"	l
f0105f4e	obj/kern/kernel.asm	/^f0105f4e:	29 d0                	sub    %edx,%eax$/;"	l
f0105f50	obj/kern/kernel.asm	/^f0105f50:	83 f8 13             	cmp    $0x13,%eax$/;"	l
f0105f53	obj/kern/kernel.asm	/^f0105f53:	7f 0b                	jg     f0105f60 <vprintfmt+0x152>$/;"	l
f0105f55	obj/kern/kernel.asm	/^f0105f55:	8b 14 85 00 9c 10 f0 	mov    -0xfef6400(,%eax,4),%edx$/;"	l
f0105f5c	obj/kern/kernel.asm	/^f0105f5c:	85 d2                	test   %edx,%edx$/;"	l
f0105f5e	obj/kern/kernel.asm	/^f0105f5e:	75 20                	jne    f0105f80 <vprintfmt+0x172>$/;"	l
f0105f60	obj/kern/kernel.asm	/^f0105f60:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0105f64	obj/kern/kernel.asm	/^f0105f64:	c7 44 24 08 96 98 10 	movl   $0xf0109896,0x8(%esp)$/;"	l
f0105f6b	obj/kern/kernel.asm	/^f0105f6b:	f0 $/;"	l
f0105f6c	obj/kern/kernel.asm	/^f0105f6c:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105f70	obj/kern/kernel.asm	/^f0105f70:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105f73	obj/kern/kernel.asm	/^f0105f73:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105f76	obj/kern/kernel.asm	/^f0105f76:	e8 6b fe ff ff       	call   f0105de6 <printfmt>$/;"	l
f0105f7b	obj/kern/kernel.asm	/^f0105f7b:	e9 be fe ff ff       	jmp    f0105e3e <vprintfmt+0x30>$/;"	l
f0105f80	obj/kern/kernel.asm	/^f0105f80:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0105f84	obj/kern/kernel.asm	/^f0105f84:	c7 44 24 08 45 90 10 	movl   $0xf0109045,0x8(%esp)$/;"	l
f0105f8b	obj/kern/kernel.asm	/^f0105f8b:	f0 $/;"	l
f0105f8c	obj/kern/kernel.asm	/^f0105f8c:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105f90	obj/kern/kernel.asm	/^f0105f90:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105f93	obj/kern/kernel.asm	/^f0105f93:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105f96	obj/kern/kernel.asm	/^f0105f96:	e8 4b fe ff ff       	call   f0105de6 <printfmt>$/;"	l
f0105f9b	obj/kern/kernel.asm	/^f0105f9b:	e9 9e fe ff ff       	jmp    f0105e3e <vprintfmt+0x30>$/;"	l
f0105fa0	obj/kern/kernel.asm	/^f0105fa0:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f0105fa3	obj/kern/kernel.asm	/^f0105fa3:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0105fa6	obj/kern/kernel.asm	/^f0105fa6:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0105fa9	obj/kern/kernel.asm	/^f0105fa9:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105fac	obj/kern/kernel.asm	/^f0105fac:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105faf	obj/kern/kernel.asm	/^f0105faf:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105fb2	obj/kern/kernel.asm	/^f0105fb2:	8b 30                	mov    (%eax),%esi$/;"	l
f0105fb4	obj/kern/kernel.asm	/^f0105fb4:	85 f6                	test   %esi,%esi$/;"	l
f0105fb6	obj/kern/kernel.asm	/^f0105fb6:	b8 8f 98 10 f0       	mov    $0xf010988f,%eax$/;"	l
f0105fbb	obj/kern/kernel.asm	/^f0105fbb:	0f 44 f0             	cmove  %eax,%esi$/;"	l
f0105fbe	obj/kern/kernel.asm	/^f0105fbe:	80 7d d8 2d          	cmpb   $0x2d,-0x28(%ebp)$/;"	l
f0105fc2	obj/kern/kernel.asm	/^f0105fc2:	0f 84 97 00 00 00    	je     f010605f <vprintfmt+0x251>$/;"	l
f0105fc8	obj/kern/kernel.asm	/^f0105fc8:	83 7d d0 00          	cmpl   $0x0,-0x30(%ebp)$/;"	l
f0105fcc	obj/kern/kernel.asm	/^f0105fcc:	0f 8e 9b 00 00 00    	jle    f010606d <vprintfmt+0x25f>$/;"	l
f0105fd2	obj/kern/kernel.asm	/^f0105fd2:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0105fd6	obj/kern/kernel.asm	/^f0105fd6:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0105fd9	obj/kern/kernel.asm	/^f0105fd9:	e8 4a 04 00 00       	call   f0106428 <strnlen>$/;"	l
f0105fde	obj/kern/kernel.asm	/^f0105fde:	8b 4d d0             	mov    -0x30(%ebp),%ecx$/;"	l
f0105fe1	obj/kern/kernel.asm	/^f0105fe1:	29 c1                	sub    %eax,%ecx$/;"	l
f0105fe3	obj/kern/kernel.asm	/^f0105fe3:	89 4d d0             	mov    %ecx,-0x30(%ebp)$/;"	l
f0105fe6	obj/kern/kernel.asm	/^f0105fe6:	0f be 45 d8          	movsbl -0x28(%ebp),%eax$/;"	l
f0105fea	obj/kern/kernel.asm	/^f0105fea:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0105fed	obj/kern/kernel.asm	/^f0105fed:	89 75 d8             	mov    %esi,-0x28(%ebp)$/;"	l
f0105ff0	obj/kern/kernel.asm	/^f0105ff0:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0105ff3	obj/kern/kernel.asm	/^f0105ff3:	89 5d 10             	mov    %ebx,0x10(%ebp)$/;"	l
f0105ff6	obj/kern/kernel.asm	/^f0105ff6:	89 cb                	mov    %ecx,%ebx$/;"	l
f0105ff8	obj/kern/kernel.asm	/^f0105ff8:	eb 0f                	jmp    f0106009 <vprintfmt+0x1fb>$/;"	l
f0105ffa	obj/kern/kernel.asm	/^f0105ffa:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105ffe	obj/kern/kernel.asm	/^f0105ffe:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0106001	obj/kern/kernel.asm	/^f0106001:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106004	obj/kern/kernel.asm	/^f0106004:	ff d6                	call   *%esi$/;"	l
f0106006	obj/kern/kernel.asm	/^f0106006:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0106009	obj/kern/kernel.asm	/^f0106009:	85 db                	test   %ebx,%ebx$/;"	l
f010600b	obj/kern/kernel.asm	/^f010600b:	7f ed                	jg     f0105ffa <vprintfmt+0x1ec>$/;"	l
f010600d	obj/kern/kernel.asm	/^f010600d:	8b 75 d8             	mov    -0x28(%ebp),%esi$/;"	l
f0106010	obj/kern/kernel.asm	/^f0106010:	8b 4d d0             	mov    -0x30(%ebp),%ecx$/;"	l
f0106013	obj/kern/kernel.asm	/^f0106013:	85 c9                	test   %ecx,%ecx$/;"	l
f0106015	obj/kern/kernel.asm	/^f0106015:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010601a	obj/kern/kernel.asm	/^f010601a:	0f 49 c1             	cmovns %ecx,%eax$/;"	l
f010601d	obj/kern/kernel.asm	/^f010601d:	29 c1                	sub    %eax,%ecx$/;"	l
f010601f	obj/kern/kernel.asm	/^f010601f:	89 7d 0c             	mov    %edi,0xc(%ebp)$/;"	l
f0106022	obj/kern/kernel.asm	/^f0106022:	89 cf                	mov    %ecx,%edi$/;"	l
f0106024	obj/kern/kernel.asm	/^f0106024:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0106027	obj/kern/kernel.asm	/^f0106027:	eb 50                	jmp    f0106079 <vprintfmt+0x26b>$/;"	l
f0106029	obj/kern/kernel.asm	/^f0106029:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
f010602d	obj/kern/kernel.asm	/^f010602d:	74 1e                	je     f010604d <vprintfmt+0x23f>$/;"	l
f010602f	obj/kern/kernel.asm	/^f010602f:	0f be d2             	movsbl %dl,%edx$/;"	l
f0106032	obj/kern/kernel.asm	/^f0106032:	83 ea 20             	sub    $0x20,%edx$/;"	l
f0106035	obj/kern/kernel.asm	/^f0106035:	83 fa 5e             	cmp    $0x5e,%edx$/;"	l
f0106038	obj/kern/kernel.asm	/^f0106038:	76 13                	jbe    f010604d <vprintfmt+0x23f>$/;"	l
f010603a	obj/kern/kernel.asm	/^f010603a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010603d	obj/kern/kernel.asm	/^f010603d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106041	obj/kern/kernel.asm	/^f0106041:	c7 04 24 3f 00 00 00 	movl   $0x3f,(%esp)$/;"	l
f0106048	obj/kern/kernel.asm	/^f0106048:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f010604b	obj/kern/kernel.asm	/^f010604b:	eb 0d                	jmp    f010605a <vprintfmt+0x24c>$/;"	l
f010604d	obj/kern/kernel.asm	/^f010604d:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0106050	obj/kern/kernel.asm	/^f0106050:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0106054	obj/kern/kernel.asm	/^f0106054:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106057	obj/kern/kernel.asm	/^f0106057:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f010605a	obj/kern/kernel.asm	/^f010605a:	83 ef 01             	sub    $0x1,%edi$/;"	l
f010605d	obj/kern/kernel.asm	/^f010605d:	eb 1a                	jmp    f0106079 <vprintfmt+0x26b>$/;"	l
f010605f	obj/kern/kernel.asm	/^f010605f:	89 7d 0c             	mov    %edi,0xc(%ebp)$/;"	l
f0106062	obj/kern/kernel.asm	/^f0106062:	8b 7d dc             	mov    -0x24(%ebp),%edi$/;"	l
f0106065	obj/kern/kernel.asm	/^f0106065:	89 5d 10             	mov    %ebx,0x10(%ebp)$/;"	l
f0106068	obj/kern/kernel.asm	/^f0106068:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f010606b	obj/kern/kernel.asm	/^f010606b:	eb 0c                	jmp    f0106079 <vprintfmt+0x26b>$/;"	l
f010606d	obj/kern/kernel.asm	/^f010606d:	89 7d 0c             	mov    %edi,0xc(%ebp)$/;"	l
f0106070	obj/kern/kernel.asm	/^f0106070:	8b 7d dc             	mov    -0x24(%ebp),%edi$/;"	l
f0106073	obj/kern/kernel.asm	/^f0106073:	89 5d 10             	mov    %ebx,0x10(%ebp)$/;"	l
f0106076	obj/kern/kernel.asm	/^f0106076:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0106079	obj/kern/kernel.asm	/^f0106079:	83 c6 01             	add    $0x1,%esi$/;"	l
f010607c	obj/kern/kernel.asm	/^f010607c:	0f b6 56 ff          	movzbl -0x1(%esi),%edx$/;"	l
f0106080	obj/kern/kernel.asm	/^f0106080:	0f be c2             	movsbl %dl,%eax$/;"	l
f0106083	obj/kern/kernel.asm	/^f0106083:	85 c0                	test   %eax,%eax$/;"	l
f0106085	obj/kern/kernel.asm	/^f0106085:	74 27                	je     f01060ae <vprintfmt+0x2a0>$/;"	l
f0106087	obj/kern/kernel.asm	/^f0106087:	85 db                	test   %ebx,%ebx$/;"	l
f0106089	obj/kern/kernel.asm	/^f0106089:	78 9e                	js     f0106029 <vprintfmt+0x21b>$/;"	l
f010608b	obj/kern/kernel.asm	/^f010608b:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f010608e	obj/kern/kernel.asm	/^f010608e:	79 99                	jns    f0106029 <vprintfmt+0x21b>$/;"	l
f0106090	obj/kern/kernel.asm	/^f0106090:	89 f8                	mov    %edi,%eax$/;"	l
f0106092	obj/kern/kernel.asm	/^f0106092:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0106095	obj/kern/kernel.asm	/^f0106095:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0106098	obj/kern/kernel.asm	/^f0106098:	89 c3                	mov    %eax,%ebx$/;"	l
f010609a	obj/kern/kernel.asm	/^f010609a:	eb 1a                	jmp    f01060b6 <vprintfmt+0x2a8>$/;"	l
f010609c	obj/kern/kernel.asm	/^f010609c:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01060a0	obj/kern/kernel.asm	/^f01060a0:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)$/;"	l
f01060a7	obj/kern/kernel.asm	/^f01060a7:	ff d6                	call   *%esi$/;"	l
f01060a9	obj/kern/kernel.asm	/^f01060a9:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f01060ac	obj/kern/kernel.asm	/^f01060ac:	eb 08                	jmp    f01060b6 <vprintfmt+0x2a8>$/;"	l
f01060ae	obj/kern/kernel.asm	/^f01060ae:	89 fb                	mov    %edi,%ebx$/;"	l
f01060b0	obj/kern/kernel.asm	/^f01060b0:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01060b3	obj/kern/kernel.asm	/^f01060b3:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f01060b6	obj/kern/kernel.asm	/^f01060b6:	85 db                	test   %ebx,%ebx$/;"	l
f01060b8	obj/kern/kernel.asm	/^f01060b8:	7f e2                	jg     f010609c <vprintfmt+0x28e>$/;"	l
f01060ba	obj/kern/kernel.asm	/^f01060ba:	89 75 08             	mov    %esi,0x8(%ebp)$/;"	l
f01060bd	obj/kern/kernel.asm	/^f01060bd:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f01060c0	obj/kern/kernel.asm	/^f01060c0:	e9 79 fd ff ff       	jmp    f0105e3e <vprintfmt+0x30>$/;"	l
f01060c5	obj/kern/kernel.asm	/^f01060c5:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f01060c8	obj/kern/kernel.asm	/^f01060c8:	7e 16                	jle    f01060e0 <vprintfmt+0x2d2>$/;"	l
f01060ca	obj/kern/kernel.asm	/^f01060ca:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01060cd	obj/kern/kernel.asm	/^f01060cd:	8d 50 08             	lea    0x8(%eax),%edx$/;"	l
f01060d0	obj/kern/kernel.asm	/^f01060d0:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f01060d3	obj/kern/kernel.asm	/^f01060d3:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
f01060d6	obj/kern/kernel.asm	/^f01060d6:	8b 00                	mov    (%eax),%eax$/;"	l
f01060d8	obj/kern/kernel.asm	/^f01060d8:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f01060db	obj/kern/kernel.asm	/^f01060db:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f01060de	obj/kern/kernel.asm	/^f01060de:	eb 32                	jmp    f0106112 <vprintfmt+0x304>$/;"	l
f01060e0	obj/kern/kernel.asm	/^f01060e0:	85 d2                	test   %edx,%edx$/;"	l
f01060e2	obj/kern/kernel.asm	/^f01060e2:	74 18                	je     f01060fc <vprintfmt+0x2ee>$/;"	l
f01060e4	obj/kern/kernel.asm	/^f01060e4:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01060e7	obj/kern/kernel.asm	/^f01060e7:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f01060ea	obj/kern/kernel.asm	/^f01060ea:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f01060ed	obj/kern/kernel.asm	/^f01060ed:	8b 30                	mov    (%eax),%esi$/;"	l
f01060ef	obj/kern/kernel.asm	/^f01060ef:	89 75 e0             	mov    %esi,-0x20(%ebp)$/;"	l
f01060f2	obj/kern/kernel.asm	/^f01060f2:	89 f0                	mov    %esi,%eax$/;"	l
f01060f4	obj/kern/kernel.asm	/^f01060f4:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
f01060f7	obj/kern/kernel.asm	/^f01060f7:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01060fa	obj/kern/kernel.asm	/^f01060fa:	eb 16                	jmp    f0106112 <vprintfmt+0x304>$/;"	l
f01060fc	obj/kern/kernel.asm	/^f01060fc:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01060ff	obj/kern/kernel.asm	/^f01060ff:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0106102	obj/kern/kernel.asm	/^f0106102:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0106105	obj/kern/kernel.asm	/^f0106105:	8b 30                	mov    (%eax),%esi$/;"	l
f0106107	obj/kern/kernel.asm	/^f0106107:	89 75 e0             	mov    %esi,-0x20(%ebp)$/;"	l
f010610a	obj/kern/kernel.asm	/^f010610a:	89 f0                	mov    %esi,%eax$/;"	l
f010610c	obj/kern/kernel.asm	/^f010610c:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
f010610f	obj/kern/kernel.asm	/^f010610f:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0106112	obj/kern/kernel.asm	/^f0106112:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0106115	obj/kern/kernel.asm	/^f0106115:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0106118	obj/kern/kernel.asm	/^f0106118:	b9 0a 00 00 00       	mov    $0xa,%ecx$/;"	l
f010611d	obj/kern/kernel.asm	/^f010611d:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f0106121	obj/kern/kernel.asm	/^f0106121:	0f 89 80 00 00 00    	jns    f01061a7 <vprintfmt+0x399>$/;"	l
f0106127	obj/kern/kernel.asm	/^f0106127:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f010612b	obj/kern/kernel.asm	/^f010612b:	c7 04 24 2d 00 00 00 	movl   $0x2d,(%esp)$/;"	l
f0106132	obj/kern/kernel.asm	/^f0106132:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0106135	obj/kern/kernel.asm	/^f0106135:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0106138	obj/kern/kernel.asm	/^f0106138:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f010613b	obj/kern/kernel.asm	/^f010613b:	f7 d8                	neg    %eax$/;"	l
f010613d	obj/kern/kernel.asm	/^f010613d:	83 d2 00             	adc    $0x0,%edx$/;"	l
f0106140	obj/kern/kernel.asm	/^f0106140:	f7 da                	neg    %edx$/;"	l
f0106142	obj/kern/kernel.asm	/^f0106142:	b9 0a 00 00 00       	mov    $0xa,%ecx$/;"	l
f0106147	obj/kern/kernel.asm	/^f0106147:	eb 5e                	jmp    f01061a7 <vprintfmt+0x399>$/;"	l
f0106149	obj/kern/kernel.asm	/^f0106149:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f010614c	obj/kern/kernel.asm	/^f010614c:	e8 3e fc ff ff       	call   f0105d8f <getuint>$/;"	l
f0106151	obj/kern/kernel.asm	/^f0106151:	b9 0a 00 00 00       	mov    $0xa,%ecx$/;"	l
f0106156	obj/kern/kernel.asm	/^f0106156:	eb 4f                	jmp    f01061a7 <vprintfmt+0x399>$/;"	l
f0106158	obj/kern/kernel.asm	/^f0106158:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f010615b	obj/kern/kernel.asm	/^f010615b:	e8 2f fc ff ff       	call   f0105d8f <getuint>$/;"	l
f0106160	obj/kern/kernel.asm	/^f0106160:	b9 08 00 00 00       	mov    $0x8,%ecx$/;"	l
f0106165	obj/kern/kernel.asm	/^f0106165:	eb 40                	jmp    f01061a7 <vprintfmt+0x399>$/;"	l
f0106167	obj/kern/kernel.asm	/^f0106167:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f010616b	obj/kern/kernel.asm	/^f010616b:	c7 04 24 30 00 00 00 	movl   $0x30,(%esp)$/;"	l
f0106172	obj/kern/kernel.asm	/^f0106172:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0106175	obj/kern/kernel.asm	/^f0106175:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0106179	obj/kern/kernel.asm	/^f0106179:	c7 04 24 78 00 00 00 	movl   $0x78,(%esp)$/;"	l
f0106180	obj/kern/kernel.asm	/^f0106180:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0106183	obj/kern/kernel.asm	/^f0106183:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0106186	obj/kern/kernel.asm	/^f0106186:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0106189	obj/kern/kernel.asm	/^f0106189:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f010618c	obj/kern/kernel.asm	/^f010618c:	8b 00                	mov    (%eax),%eax$/;"	l
f010618e	obj/kern/kernel.asm	/^f010618e:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106193	obj/kern/kernel.asm	/^f0106193:	b9 10 00 00 00       	mov    $0x10,%ecx$/;"	l
f0106198	obj/kern/kernel.asm	/^f0106198:	eb 0d                	jmp    f01061a7 <vprintfmt+0x399>$/;"	l
f010619a	obj/kern/kernel.asm	/^f010619a:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f010619d	obj/kern/kernel.asm	/^f010619d:	e8 ed fb ff ff       	call   f0105d8f <getuint>$/;"	l
f01061a2	obj/kern/kernel.asm	/^f01061a2:	b9 10 00 00 00       	mov    $0x10,%ecx$/;"	l
f01061a7	obj/kern/kernel.asm	/^f01061a7:	0f be 75 d8          	movsbl -0x28(%ebp),%esi$/;"	l
f01061ab	obj/kern/kernel.asm	/^f01061ab:	89 74 24 10          	mov    %esi,0x10(%esp)$/;"	l
f01061af	obj/kern/kernel.asm	/^f01061af:	8b 75 dc             	mov    -0x24(%ebp),%esi$/;"	l
f01061b2	obj/kern/kernel.asm	/^f01061b2:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f01061b6	obj/kern/kernel.asm	/^f01061b6:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f01061ba	obj/kern/kernel.asm	/^f01061ba:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01061bd	obj/kern/kernel.asm	/^f01061bd:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01061c1	obj/kern/kernel.asm	/^f01061c1:	89 fa                	mov    %edi,%edx$/;"	l
f01061c3	obj/kern/kernel.asm	/^f01061c3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01061c6	obj/kern/kernel.asm	/^f01061c6:	e8 d5 fa ff ff       	call   f0105ca0 <printnum>$/;"	l
f01061cb	obj/kern/kernel.asm	/^f01061cb:	e9 6e fc ff ff       	jmp    f0105e3e <vprintfmt+0x30>$/;"	l
f01061d0	obj/kern/kernel.asm	/^f01061d0:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01061d4	obj/kern/kernel.asm	/^f01061d4:	89 0c 24             	mov    %ecx,(%esp)$/;"	l
f01061d7	obj/kern/kernel.asm	/^f01061d7:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01061da	obj/kern/kernel.asm	/^f01061da:	e9 5f fc ff ff       	jmp    f0105e3e <vprintfmt+0x30>$/;"	l
f01061df	obj/kern/kernel.asm	/^f01061df:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01061e3	obj/kern/kernel.asm	/^f01061e3:	c7 04 24 25 00 00 00 	movl   $0x25,(%esp)$/;"	l
f01061ea	obj/kern/kernel.asm	/^f01061ea:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01061ed	obj/kern/kernel.asm	/^f01061ed:	89 f3                	mov    %esi,%ebx$/;"	l
f01061ef	obj/kern/kernel.asm	/^f01061ef:	eb 03                	jmp    f01061f4 <vprintfmt+0x3e6>$/;"	l
f01061f1	obj/kern/kernel.asm	/^f01061f1:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f01061f4	obj/kern/kernel.asm	/^f01061f4:	80 7b ff 25          	cmpb   $0x25,-0x1(%ebx)$/;"	l
f01061f8	obj/kern/kernel.asm	/^f01061f8:	75 f7                	jne    f01061f1 <vprintfmt+0x3e3>$/;"	l
f01061fa	obj/kern/kernel.asm	/^f01061fa:	e9 3f fc ff ff       	jmp    f0105e3e <vprintfmt+0x30>$/;"	l
f01061ff	obj/kern/kernel.asm	/^f01061ff:	83 c2 01             	add    $0x1,%edx$/;"	l
f0106202	obj/kern/kernel.asm	/^f0106202:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0106205	obj/kern/kernel.asm	/^f0106205:	0f b6 43 ff          	movzbl -0x1(%ebx),%eax$/;"	l
f0106209	obj/kern/kernel.asm	/^f0106209:	0f b6 c8             	movzbl %al,%ecx$/;"	l
f010620c	obj/kern/kernel.asm	/^f010620c:	83 e8 30             	sub    $0x30,%eax$/;"	l
f010620f	obj/kern/kernel.asm	/^f010620f:	3c 36                	cmp    $0x36,%al$/;"	l
f0106211	obj/kern/kernel.asm	/^f0106211:	0f 87 27 fc ff ff    	ja     f0105e3e <vprintfmt+0x30>$/;"	l
f0106217	obj/kern/kernel.asm	/^f0106217:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010621a	obj/kern/kernel.asm	/^f010621a:	ff 24 85 18 9b 10 f0 	jmp    *-0xfef64e8(,%eax,4)$/;"	l
f0106221	obj/kern/kernel.asm	/^f0106221:	85 d2                	test   %edx,%edx$/;"	l
f0106223	obj/kern/kernel.asm	/^f0106223:	75 0e                	jne    f0106233 <vprintfmt+0x425>$/;"	l
f0106225	obj/kern/kernel.asm	/^f0106225:	8d 41 a9             	lea    -0x57(%ecx),%eax$/;"	l
f0106228	obj/kern/kernel.asm	/^f0106228:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010622b	obj/kern/kernel.asm	/^f010622b:	09 05 a0 9e 2b f0    	or     %eax,0xf02b9ea0$/;"	l
f0106231	obj/kern/kernel.asm	/^f0106231:	eb cc                	jmp    f01061ff <vprintfmt+0x3f1>$/;"	l
f0106233	obj/kern/kernel.asm	/^f0106233:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f0106236	obj/kern/kernel.asm	/^f0106236:	75 c7                	jne    f01061ff <vprintfmt+0x3f1>$/;"	l
f0106238	obj/kern/kernel.asm	/^f0106238:	8d 41 a9             	lea    -0x57(%ecx),%eax$/;"	l
f010623b	obj/kern/kernel.asm	/^f010623b:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f010623e	obj/kern/kernel.asm	/^f010623e:	09 05 a0 9e 2b f0    	or     %eax,0xf02b9ea0$/;"	l
f0106244	obj/kern/kernel.asm	/^f0106244:	e9 f5 fb ff ff       	jmp    f0105e3e <vprintfmt+0x30>$/;"	l
f0106249	obj/kern/kernel.asm	/^f0106249:	85 d2                	test   %edx,%edx$/;"	l
f010624b	obj/kern/kernel.asm	/^f010624b:	75 0e                	jne    f010625b <vprintfmt+0x44d>$/;"	l
f010624d	obj/kern/kernel.asm	/^f010624d:	8d 41 c9             	lea    -0x37(%ecx),%eax$/;"	l
f0106250	obj/kern/kernel.asm	/^f0106250:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0106253	obj/kern/kernel.asm	/^f0106253:	09 05 a0 9e 2b f0    	or     %eax,0xf02b9ea0$/;"	l
f0106259	obj/kern/kernel.asm	/^f0106259:	eb a4                	jmp    f01061ff <vprintfmt+0x3f1>$/;"	l
f010625b	obj/kern/kernel.asm	/^f010625b:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f010625e	obj/kern/kernel.asm	/^f010625e:	75 9f                	jne    f01061ff <vprintfmt+0x3f1>$/;"	l
f0106260	obj/kern/kernel.asm	/^f0106260:	8d 41 c9             	lea    -0x37(%ecx),%eax$/;"	l
f0106263	obj/kern/kernel.asm	/^f0106263:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f0106266	obj/kern/kernel.asm	/^f0106266:	09 05 a0 9e 2b f0    	or     %eax,0xf02b9ea0$/;"	l
f010626c	obj/kern/kernel.asm	/^f010626c:	e9 cd fb ff ff       	jmp    f0105e3e <vprintfmt+0x30>$/;"	l
f0106271	obj/kern/kernel.asm	/^f0106271:	85 d2                	test   %edx,%edx$/;"	l
f0106273	obj/kern/kernel.asm	/^f0106273:	75 11                	jne    f0106286 <vprintfmt+0x478>$/;"	l
f0106275	obj/kern/kernel.asm	/^f0106275:	8d 41 d0             	lea    -0x30(%ecx),%eax$/;"	l
f0106278	obj/kern/kernel.asm	/^f0106278:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010627b	obj/kern/kernel.asm	/^f010627b:	09 05 a0 9e 2b f0    	or     %eax,0xf02b9ea0$/;"	l
f0106281	obj/kern/kernel.asm	/^f0106281:	e9 79 ff ff ff       	jmp    f01061ff <vprintfmt+0x3f1>$/;"	l
f0106286	obj/kern/kernel.asm	/^f0106286:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f0106289	obj/kern/kernel.asm	/^f0106289:	0f 85 70 ff ff ff    	jne    f01061ff <vprintfmt+0x3f1>$/;"	l
f010628f	obj/kern/kernel.asm	/^f010628f:	8d 41 d0             	lea    -0x30(%ecx),%eax$/;"	l
f0106292	obj/kern/kernel.asm	/^f0106292:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f0106295	obj/kern/kernel.asm	/^f0106295:	09 05 a0 9e 2b f0    	or     %eax,0xf02b9ea0$/;"	l
f010629b	obj/kern/kernel.asm	/^f010629b:	e9 9e fb ff ff       	jmp    f0105e3e <vprintfmt+0x30>$/;"	l
f01062a0	obj/kern/kernel.asm	/^f01062a0:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f01062a3	obj/kern/kernel.asm	/^f01062a3:	5b                   	pop    %ebx$/;"	l
f01062a4	obj/kern/kernel.asm	/^f01062a4:	5e                   	pop    %esi$/;"	l
f01062a5	obj/kern/kernel.asm	/^f01062a5:	5f                   	pop    %edi$/;"	l
f01062a6	obj/kern/kernel.asm	/^f01062a6:	5d                   	pop    %ebp$/;"	l
f01062a7	obj/kern/kernel.asm	/^f01062a7:	c3                   	ret    $/;"	l
f01062a8	obj/kern/kernel.asm	/^f01062a8 <vsnprintf>:$/;"	l
f01062a8	obj/kern/kernel.asm	/^f01062a8:	55                   	push   %ebp$/;"	l
f01062a9	obj/kern/kernel.asm	/^f01062a9:	89 e5                	mov    %esp,%ebp$/;"	l
f01062ab	obj/kern/kernel.asm	/^f01062ab:	83 ec 28             	sub    $0x28,%esp$/;"	l
f01062ae	obj/kern/kernel.asm	/^f01062ae:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01062b1	obj/kern/kernel.asm	/^f01062b1:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01062b4	obj/kern/kernel.asm	/^f01062b4:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f01062b7	obj/kern/kernel.asm	/^f01062b7:	8d 4c 10 ff          	lea    -0x1(%eax,%edx,1),%ecx$/;"	l
f01062bb	obj/kern/kernel.asm	/^f01062bb:	89 4d f0             	mov    %ecx,-0x10(%ebp)$/;"	l
f01062be	obj/kern/kernel.asm	/^f01062be:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f01062c5	obj/kern/kernel.asm	/^f01062c5:	85 c0                	test   %eax,%eax$/;"	l
f01062c7	obj/kern/kernel.asm	/^f01062c7:	74 30                	je     f01062f9 <vsnprintf+0x51>$/;"	l
f01062c9	obj/kern/kernel.asm	/^f01062c9:	85 d2                	test   %edx,%edx$/;"	l
f01062cb	obj/kern/kernel.asm	/^f01062cb:	7e 2c                	jle    f01062f9 <vsnprintf+0x51>$/;"	l
f01062cd	obj/kern/kernel.asm	/^f01062cd:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01062d0	obj/kern/kernel.asm	/^f01062d0:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01062d4	obj/kern/kernel.asm	/^f01062d4:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01062d7	obj/kern/kernel.asm	/^f01062d7:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01062db	obj/kern/kernel.asm	/^f01062db:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
f01062de	obj/kern/kernel.asm	/^f01062de:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01062e2	obj/kern/kernel.asm	/^f01062e2:	c7 04 24 c9 5d 10 f0 	movl   $0xf0105dc9,(%esp)$/;"	l
f01062e9	obj/kern/kernel.asm	/^f01062e9:	e8 20 fb ff ff       	call   f0105e0e <vprintfmt>$/;"	l
f01062ee	obj/kern/kernel.asm	/^f01062ee:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f01062f1	obj/kern/kernel.asm	/^f01062f1:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f01062f4	obj/kern/kernel.asm	/^f01062f4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01062f7	obj/kern/kernel.asm	/^f01062f7:	eb 05                	jmp    f01062fe <vsnprintf+0x56>$/;"	l
f01062f9	obj/kern/kernel.asm	/^f01062f9:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f01062fe	obj/kern/kernel.asm	/^f01062fe:	c9                   	leave  $/;"	l
f01062ff	obj/kern/kernel.asm	/^f01062ff:	c3                   	ret    $/;"	l
f0106300	obj/kern/kernel.asm	/^f0106300 <snprintf>:$/;"	l
f0106300	obj/kern/kernel.asm	/^f0106300:	55                   	push   %ebp$/;"	l
f0106301	obj/kern/kernel.asm	/^f0106301:	89 e5                	mov    %esp,%ebp$/;"	l
f0106303	obj/kern/kernel.asm	/^f0106303:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0106306	obj/kern/kernel.asm	/^f0106306:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0106309	obj/kern/kernel.asm	/^f0106309:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010630d	obj/kern/kernel.asm	/^f010630d:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0106310	obj/kern/kernel.asm	/^f0106310:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0106314	obj/kern/kernel.asm	/^f0106314:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0106317	obj/kern/kernel.asm	/^f0106317:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010631b	obj/kern/kernel.asm	/^f010631b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010631e	obj/kern/kernel.asm	/^f010631e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106321	obj/kern/kernel.asm	/^f0106321:	e8 82 ff ff ff       	call   f01062a8 <vsnprintf>$/;"	l
f0106326	obj/kern/kernel.asm	/^f0106326:	c9                   	leave  $/;"	l
f0106327	obj/kern/kernel.asm	/^f0106327:	c3                   	ret    $/;"	l
f0106328	obj/kern/kernel.asm	/^f0106328:	66 90                	xchg   %ax,%ax$/;"	l
f010632a	obj/kern/kernel.asm	/^f010632a:	66 90                	xchg   %ax,%ax$/;"	l
f010632c	obj/kern/kernel.asm	/^f010632c:	66 90                	xchg   %ax,%ax$/;"	l
f010632e	obj/kern/kernel.asm	/^f010632e:	66 90                	xchg   %ax,%ax$/;"	l
f0106330	obj/kern/kernel.asm	/^f0106330 <readline>:$/;"	l
f0106330	obj/kern/kernel.asm	/^f0106330:	55                   	push   %ebp$/;"	l
f0106331	obj/kern/kernel.asm	/^f0106331:	89 e5                	mov    %esp,%ebp$/;"	l
f0106333	obj/kern/kernel.asm	/^f0106333:	57                   	push   %edi$/;"	l
f0106334	obj/kern/kernel.asm	/^f0106334:	56                   	push   %esi$/;"	l
f0106335	obj/kern/kernel.asm	/^f0106335:	53                   	push   %ebx$/;"	l
f0106336	obj/kern/kernel.asm	/^f0106336:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0106339	obj/kern/kernel.asm	/^f0106339:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010633c	obj/kern/kernel.asm	/^f010633c:	85 c0                	test   %eax,%eax$/;"	l
f010633e	obj/kern/kernel.asm	/^f010633e:	74 10                	je     f0106350 <readline+0x20>$/;"	l
f0106340	obj/kern/kernel.asm	/^f0106340:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106344	obj/kern/kernel.asm	/^f0106344:	c7 04 24 45 90 10 f0 	movl   $0xf0109045,(%esp)$/;"	l
f010634b	obj/kern/kernel.asm	/^f010634b:	e8 7c dc ff ff       	call   f0103fcc <cprintf>$/;"	l
f0106350	obj/kern/kernel.asm	/^f0106350:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0106357	obj/kern/kernel.asm	/^f0106357:	e8 95 a4 ff ff       	call   f01007f1 <iscons>$/;"	l
f010635c	obj/kern/kernel.asm	/^f010635c:	89 c7                	mov    %eax,%edi$/;"	l
f010635e	obj/kern/kernel.asm	/^f010635e:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0106363	obj/kern/kernel.asm	/^f0106363:	e8 78 a4 ff ff       	call   f01007e0 <getchar>$/;"	l
f0106368	obj/kern/kernel.asm	/^f0106368:	89 c3                	mov    %eax,%ebx$/;"	l
f010636a	obj/kern/kernel.asm	/^f010636a:	85 c0                	test   %eax,%eax$/;"	l
f010636c	obj/kern/kernel.asm	/^f010636c:	79 25                	jns    f0106393 <readline+0x63>$/;"	l
f010636e	obj/kern/kernel.asm	/^f010636e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106373	obj/kern/kernel.asm	/^f0106373:	83 fb f8             	cmp    $0xfffffff8,%ebx$/;"	l
f0106376	obj/kern/kernel.asm	/^f0106376:	0f 84 89 00 00 00    	je     f0106405 <readline+0xd5>$/;"	l
f010637c	obj/kern/kernel.asm	/^f010637c:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0106380	obj/kern/kernel.asm	/^f0106380:	c7 04 24 6f 9c 10 f0 	movl   $0xf0109c6f,(%esp)$/;"	l
f0106387	obj/kern/kernel.asm	/^f0106387:	e8 40 dc ff ff       	call   f0103fcc <cprintf>$/;"	l
f010638c	obj/kern/kernel.asm	/^f010638c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106391	obj/kern/kernel.asm	/^f0106391:	eb 72                	jmp    f0106405 <readline+0xd5>$/;"	l
f0106393	obj/kern/kernel.asm	/^f0106393:	83 f8 7f             	cmp    $0x7f,%eax$/;"	l
f0106396	obj/kern/kernel.asm	/^f0106396:	74 05                	je     f010639d <readline+0x6d>$/;"	l
f0106398	obj/kern/kernel.asm	/^f0106398:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f010639b	obj/kern/kernel.asm	/^f010639b:	75 1a                	jne    f01063b7 <readline+0x87>$/;"	l
f010639d	obj/kern/kernel.asm	/^f010639d:	85 f6                	test   %esi,%esi$/;"	l
f010639f	obj/kern/kernel.asm	/^f010639f:	90                   	nop$/;"	l
f01063a0	obj/kern/kernel.asm	/^f01063a0:	7e 15                	jle    f01063b7 <readline+0x87>$/;"	l
f01063a2	obj/kern/kernel.asm	/^f01063a2:	85 ff                	test   %edi,%edi$/;"	l
f01063a4	obj/kern/kernel.asm	/^f01063a4:	74 0c                	je     f01063b2 <readline+0x82>$/;"	l
f01063a6	obj/kern/kernel.asm	/^f01063a6:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)$/;"	l
f01063ad	obj/kern/kernel.asm	/^f01063ad:	e8 1e a4 ff ff       	call   f01007d0 <cputchar>$/;"	l
f01063b2	obj/kern/kernel.asm	/^f01063b2:	83 ee 01             	sub    $0x1,%esi$/;"	l
f01063b5	obj/kern/kernel.asm	/^f01063b5:	eb ac                	jmp    f0106363 <readline+0x33>$/;"	l
f01063b7	obj/kern/kernel.asm	/^f01063b7:	81 fe fe 03 00 00    	cmp    $0x3fe,%esi$/;"	l
f01063bd	obj/kern/kernel.asm	/^f01063bd:	7f 1c                	jg     f01063db <readline+0xab>$/;"	l
f01063bf	obj/kern/kernel.asm	/^f01063bf:	83 fb 1f             	cmp    $0x1f,%ebx$/;"	l
f01063c2	obj/kern/kernel.asm	/^f01063c2:	7e 17                	jle    f01063db <readline+0xab>$/;"	l
f01063c4	obj/kern/kernel.asm	/^f01063c4:	85 ff                	test   %edi,%edi$/;"	l
f01063c6	obj/kern/kernel.asm	/^f01063c6:	74 08                	je     f01063d0 <readline+0xa0>$/;"	l
f01063c8	obj/kern/kernel.asm	/^f01063c8:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01063cb	obj/kern/kernel.asm	/^f01063cb:	e8 00 a4 ff ff       	call   f01007d0 <cputchar>$/;"	l
f01063d0	obj/kern/kernel.asm	/^f01063d0:	88 9e 80 9a 2b f0    	mov    %bl,-0xfd46580(%esi)$/;"	l
f01063d6	obj/kern/kernel.asm	/^f01063d6:	8d 76 01             	lea    0x1(%esi),%esi$/;"	l
f01063d9	obj/kern/kernel.asm	/^f01063d9:	eb 88                	jmp    f0106363 <readline+0x33>$/;"	l
f01063db	obj/kern/kernel.asm	/^f01063db:	83 fb 0d             	cmp    $0xd,%ebx$/;"	l
f01063de	obj/kern/kernel.asm	/^f01063de:	74 09                	je     f01063e9 <readline+0xb9>$/;"	l
f01063e0	obj/kern/kernel.asm	/^f01063e0:	83 fb 0a             	cmp    $0xa,%ebx$/;"	l
f01063e3	obj/kern/kernel.asm	/^f01063e3:	0f 85 7a ff ff ff    	jne    f0106363 <readline+0x33>$/;"	l
f01063e9	obj/kern/kernel.asm	/^f01063e9:	85 ff                	test   %edi,%edi$/;"	l
f01063eb	obj/kern/kernel.asm	/^f01063eb:	74 0c                	je     f01063f9 <readline+0xc9>$/;"	l
f01063ed	obj/kern/kernel.asm	/^f01063ed:	c7 04 24 0a 00 00 00 	movl   $0xa,(%esp)$/;"	l
f01063f4	obj/kern/kernel.asm	/^f01063f4:	e8 d7 a3 ff ff       	call   f01007d0 <cputchar>$/;"	l
f01063f9	obj/kern/kernel.asm	/^f01063f9:	c6 86 80 9a 2b f0 00 	movb   $0x0,-0xfd46580(%esi)$/;"	l
f0106400	obj/kern/kernel.asm	/^f0106400:	b8 80 9a 2b f0       	mov    $0xf02b9a80,%eax$/;"	l
f0106405	obj/kern/kernel.asm	/^f0106405:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0106408	obj/kern/kernel.asm	/^f0106408:	5b                   	pop    %ebx$/;"	l
f0106409	obj/kern/kernel.asm	/^f0106409:	5e                   	pop    %esi$/;"	l
f010640a	obj/kern/kernel.asm	/^f010640a:	5f                   	pop    %edi$/;"	l
f010640b	obj/kern/kernel.asm	/^f010640b:	5d                   	pop    %ebp$/;"	l
f010640c	obj/kern/kernel.asm	/^f010640c:	c3                   	ret    $/;"	l
f010640d	obj/kern/kernel.asm	/^f010640d:	66 90                	xchg   %ax,%ax$/;"	l
f010640f	obj/kern/kernel.asm	/^f010640f:	90                   	nop$/;"	l
f0106410	obj/kern/kernel.asm	/^f0106410 <strlen>:$/;"	l
f0106410	obj/kern/kernel.asm	/^f0106410:	55                   	push   %ebp$/;"	l
f0106411	obj/kern/kernel.asm	/^f0106411:	89 e5                	mov    %esp,%ebp$/;"	l
f0106413	obj/kern/kernel.asm	/^f0106413:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0106416	obj/kern/kernel.asm	/^f0106416:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010641b	obj/kern/kernel.asm	/^f010641b:	eb 03                	jmp    f0106420 <strlen+0x10>$/;"	l
f010641d	obj/kern/kernel.asm	/^f010641d:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106420	obj/kern/kernel.asm	/^f0106420:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)$/;"	l
f0106424	obj/kern/kernel.asm	/^f0106424:	75 f7                	jne    f010641d <strlen+0xd>$/;"	l
f0106426	obj/kern/kernel.asm	/^f0106426:	5d                   	pop    %ebp$/;"	l
f0106427	obj/kern/kernel.asm	/^f0106427:	c3                   	ret    $/;"	l
f0106428	obj/kern/kernel.asm	/^f0106428 <strnlen>:$/;"	l
f0106428	obj/kern/kernel.asm	/^f0106428:	55                   	push   %ebp$/;"	l
f0106429	obj/kern/kernel.asm	/^f0106429:	89 e5                	mov    %esp,%ebp$/;"	l
f010642b	obj/kern/kernel.asm	/^f010642b:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f010642e	obj/kern/kernel.asm	/^f010642e:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0106431	obj/kern/kernel.asm	/^f0106431:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106436	obj/kern/kernel.asm	/^f0106436:	eb 03                	jmp    f010643b <strnlen+0x13>$/;"	l
f0106438	obj/kern/kernel.asm	/^f0106438:	83 c0 01             	add    $0x1,%eax$/;"	l
f010643b	obj/kern/kernel.asm	/^f010643b:	39 d0                	cmp    %edx,%eax$/;"	l
f010643d	obj/kern/kernel.asm	/^f010643d:	74 06                	je     f0106445 <strnlen+0x1d>$/;"	l
f010643f	obj/kern/kernel.asm	/^f010643f:	80 3c 01 00          	cmpb   $0x0,(%ecx,%eax,1)$/;"	l
f0106443	obj/kern/kernel.asm	/^f0106443:	75 f3                	jne    f0106438 <strnlen+0x10>$/;"	l
f0106445	obj/kern/kernel.asm	/^f0106445:	5d                   	pop    %ebp$/;"	l
f0106446	obj/kern/kernel.asm	/^f0106446:	c3                   	ret    $/;"	l
f0106447	obj/kern/kernel.asm	/^f0106447 <strcpy>:$/;"	l
f0106447	obj/kern/kernel.asm	/^f0106447:	55                   	push   %ebp$/;"	l
f0106448	obj/kern/kernel.asm	/^f0106448:	89 e5                	mov    %esp,%ebp$/;"	l
f010644a	obj/kern/kernel.asm	/^f010644a:	53                   	push   %ebx$/;"	l
f010644b	obj/kern/kernel.asm	/^f010644b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010644e	obj/kern/kernel.asm	/^f010644e:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0106451	obj/kern/kernel.asm	/^f0106451:	89 c2                	mov    %eax,%edx$/;"	l
f0106453	obj/kern/kernel.asm	/^f0106453:	83 c2 01             	add    $0x1,%edx$/;"	l
f0106456	obj/kern/kernel.asm	/^f0106456:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0106459	obj/kern/kernel.asm	/^f0106459:	0f b6 59 ff          	movzbl -0x1(%ecx),%ebx$/;"	l
f010645d	obj/kern/kernel.asm	/^f010645d:	88 5a ff             	mov    %bl,-0x1(%edx)$/;"	l
f0106460	obj/kern/kernel.asm	/^f0106460:	84 db                	test   %bl,%bl$/;"	l
f0106462	obj/kern/kernel.asm	/^f0106462:	75 ef                	jne    f0106453 <strcpy+0xc>$/;"	l
f0106464	obj/kern/kernel.asm	/^f0106464:	5b                   	pop    %ebx$/;"	l
f0106465	obj/kern/kernel.asm	/^f0106465:	5d                   	pop    %ebp$/;"	l
f0106466	obj/kern/kernel.asm	/^f0106466:	c3                   	ret    $/;"	l
f0106467	obj/kern/kernel.asm	/^f0106467 <strcat>:$/;"	l
f0106467	obj/kern/kernel.asm	/^f0106467:	55                   	push   %ebp$/;"	l
f0106468	obj/kern/kernel.asm	/^f0106468:	89 e5                	mov    %esp,%ebp$/;"	l
f010646a	obj/kern/kernel.asm	/^f010646a:	53                   	push   %ebx$/;"	l
f010646b	obj/kern/kernel.asm	/^f010646b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010646e	obj/kern/kernel.asm	/^f010646e:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0106471	obj/kern/kernel.asm	/^f0106471:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0106474	obj/kern/kernel.asm	/^f0106474:	e8 97 ff ff ff       	call   f0106410 <strlen>$/;"	l
f0106479	obj/kern/kernel.asm	/^f0106479:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010647c	obj/kern/kernel.asm	/^f010647c:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0106480	obj/kern/kernel.asm	/^f0106480:	01 d8                	add    %ebx,%eax$/;"	l
f0106482	obj/kern/kernel.asm	/^f0106482:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106485	obj/kern/kernel.asm	/^f0106485:	e8 bd ff ff ff       	call   f0106447 <strcpy>$/;"	l
f010648a	obj/kern/kernel.asm	/^f010648a:	89 d8                	mov    %ebx,%eax$/;"	l
f010648c	obj/kern/kernel.asm	/^f010648c:	83 c4 08             	add    $0x8,%esp$/;"	l
f010648f	obj/kern/kernel.asm	/^f010648f:	5b                   	pop    %ebx$/;"	l
f0106490	obj/kern/kernel.asm	/^f0106490:	5d                   	pop    %ebp$/;"	l
f0106491	obj/kern/kernel.asm	/^f0106491:	c3                   	ret    $/;"	l
f0106492	obj/kern/kernel.asm	/^f0106492 <strncpy>:$/;"	l
f0106492	obj/kern/kernel.asm	/^f0106492:	55                   	push   %ebp$/;"	l
f0106493	obj/kern/kernel.asm	/^f0106493:	89 e5                	mov    %esp,%ebp$/;"	l
f0106495	obj/kern/kernel.asm	/^f0106495:	56                   	push   %esi$/;"	l
f0106496	obj/kern/kernel.asm	/^f0106496:	53                   	push   %ebx$/;"	l
f0106497	obj/kern/kernel.asm	/^f0106497:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f010649a	obj/kern/kernel.asm	/^f010649a:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f010649d	obj/kern/kernel.asm	/^f010649d:	89 f3                	mov    %esi,%ebx$/;"	l
f010649f	obj/kern/kernel.asm	/^f010649f:	03 5d 10             	add    0x10(%ebp),%ebx$/;"	l
f01064a2	obj/kern/kernel.asm	/^f01064a2:	89 f2                	mov    %esi,%edx$/;"	l
f01064a4	obj/kern/kernel.asm	/^f01064a4:	eb 0f                	jmp    f01064b5 <strncpy+0x23>$/;"	l
f01064a6	obj/kern/kernel.asm	/^f01064a6:	83 c2 01             	add    $0x1,%edx$/;"	l
f01064a9	obj/kern/kernel.asm	/^f01064a9:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f01064ac	obj/kern/kernel.asm	/^f01064ac:	88 42 ff             	mov    %al,-0x1(%edx)$/;"	l
f01064af	obj/kern/kernel.asm	/^f01064af:	80 39 01             	cmpb   $0x1,(%ecx)$/;"	l
f01064b2	obj/kern/kernel.asm	/^f01064b2:	83 d9 ff             	sbb    $0xffffffff,%ecx$/;"	l
f01064b5	obj/kern/kernel.asm	/^f01064b5:	39 da                	cmp    %ebx,%edx$/;"	l
f01064b7	obj/kern/kernel.asm	/^f01064b7:	75 ed                	jne    f01064a6 <strncpy+0x14>$/;"	l
f01064b9	obj/kern/kernel.asm	/^f01064b9:	89 f0                	mov    %esi,%eax$/;"	l
f01064bb	obj/kern/kernel.asm	/^f01064bb:	5b                   	pop    %ebx$/;"	l
f01064bc	obj/kern/kernel.asm	/^f01064bc:	5e                   	pop    %esi$/;"	l
f01064bd	obj/kern/kernel.asm	/^f01064bd:	5d                   	pop    %ebp$/;"	l
f01064be	obj/kern/kernel.asm	/^f01064be:	c3                   	ret    $/;"	l
f01064bf	obj/kern/kernel.asm	/^f01064bf <strlcpy>:$/;"	l
f01064bf	obj/kern/kernel.asm	/^f01064bf:	55                   	push   %ebp$/;"	l
f01064c0	obj/kern/kernel.asm	/^f01064c0:	89 e5                	mov    %esp,%ebp$/;"	l
f01064c2	obj/kern/kernel.asm	/^f01064c2:	56                   	push   %esi$/;"	l
f01064c3	obj/kern/kernel.asm	/^f01064c3:	53                   	push   %ebx$/;"	l
f01064c4	obj/kern/kernel.asm	/^f01064c4:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01064c7	obj/kern/kernel.asm	/^f01064c7:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01064ca	obj/kern/kernel.asm	/^f01064ca:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f01064cd	obj/kern/kernel.asm	/^f01064cd:	89 f0                	mov    %esi,%eax$/;"	l
f01064cf	obj/kern/kernel.asm	/^f01064cf:	8d 5c 0e ff          	lea    -0x1(%esi,%ecx,1),%ebx$/;"	l
f01064d3	obj/kern/kernel.asm	/^f01064d3:	85 c9                	test   %ecx,%ecx$/;"	l
f01064d5	obj/kern/kernel.asm	/^f01064d5:	75 0b                	jne    f01064e2 <strlcpy+0x23>$/;"	l
f01064d7	obj/kern/kernel.asm	/^f01064d7:	eb 1d                	jmp    f01064f6 <strlcpy+0x37>$/;"	l
f01064d9	obj/kern/kernel.asm	/^f01064d9:	83 c0 01             	add    $0x1,%eax$/;"	l
f01064dc	obj/kern/kernel.asm	/^f01064dc:	83 c2 01             	add    $0x1,%edx$/;"	l
f01064df	obj/kern/kernel.asm	/^f01064df:	88 48 ff             	mov    %cl,-0x1(%eax)$/;"	l
f01064e2	obj/kern/kernel.asm	/^f01064e2:	39 d8                	cmp    %ebx,%eax$/;"	l
f01064e4	obj/kern/kernel.asm	/^f01064e4:	74 0b                	je     f01064f1 <strlcpy+0x32>$/;"	l
f01064e6	obj/kern/kernel.asm	/^f01064e6:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f01064e9	obj/kern/kernel.asm	/^f01064e9:	84 c9                	test   %cl,%cl$/;"	l
f01064eb	obj/kern/kernel.asm	/^f01064eb:	75 ec                	jne    f01064d9 <strlcpy+0x1a>$/;"	l
f01064ed	obj/kern/kernel.asm	/^f01064ed:	89 c2                	mov    %eax,%edx$/;"	l
f01064ef	obj/kern/kernel.asm	/^f01064ef:	eb 02                	jmp    f01064f3 <strlcpy+0x34>$/;"	l
f01064f1	obj/kern/kernel.asm	/^f01064f1:	89 c2                	mov    %eax,%edx$/;"	l
f01064f3	obj/kern/kernel.asm	/^f01064f3:	c6 02 00             	movb   $0x0,(%edx)$/;"	l
f01064f6	obj/kern/kernel.asm	/^f01064f6:	29 f0                	sub    %esi,%eax$/;"	l
f01064f8	obj/kern/kernel.asm	/^f01064f8:	5b                   	pop    %ebx$/;"	l
f01064f9	obj/kern/kernel.asm	/^f01064f9:	5e                   	pop    %esi$/;"	l
f01064fa	obj/kern/kernel.asm	/^f01064fa:	5d                   	pop    %ebp$/;"	l
f01064fb	obj/kern/kernel.asm	/^f01064fb:	c3                   	ret    $/;"	l
f01064fc	obj/kern/kernel.asm	/^f01064fc <strcmp>:$/;"	l
f01064fc	obj/kern/kernel.asm	/^f01064fc:	55                   	push   %ebp$/;"	l
f01064fd	obj/kern/kernel.asm	/^f01064fd:	89 e5                	mov    %esp,%ebp$/;"	l
f01064ff	obj/kern/kernel.asm	/^f01064ff:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0106502	obj/kern/kernel.asm	/^f0106502:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0106505	obj/kern/kernel.asm	/^f0106505:	eb 06                	jmp    f010650d <strcmp+0x11>$/;"	l
f0106507	obj/kern/kernel.asm	/^f0106507:	83 c1 01             	add    $0x1,%ecx$/;"	l
f010650a	obj/kern/kernel.asm	/^f010650a:	83 c2 01             	add    $0x1,%edx$/;"	l
f010650d	obj/kern/kernel.asm	/^f010650d:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f0106510	obj/kern/kernel.asm	/^f0106510:	84 c0                	test   %al,%al$/;"	l
f0106512	obj/kern/kernel.asm	/^f0106512:	74 04                	je     f0106518 <strcmp+0x1c>$/;"	l
f0106514	obj/kern/kernel.asm	/^f0106514:	3a 02                	cmp    (%edx),%al$/;"	l
f0106516	obj/kern/kernel.asm	/^f0106516:	74 ef                	je     f0106507 <strcmp+0xb>$/;"	l
f0106518	obj/kern/kernel.asm	/^f0106518:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010651b	obj/kern/kernel.asm	/^f010651b:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f010651e	obj/kern/kernel.asm	/^f010651e:	29 d0                	sub    %edx,%eax$/;"	l
f0106520	obj/kern/kernel.asm	/^f0106520:	5d                   	pop    %ebp$/;"	l
f0106521	obj/kern/kernel.asm	/^f0106521:	c3                   	ret    $/;"	l
f0106522	obj/kern/kernel.asm	/^f0106522 <strncmp>:$/;"	l
f0106522	obj/kern/kernel.asm	/^f0106522:	55                   	push   %ebp$/;"	l
f0106523	obj/kern/kernel.asm	/^f0106523:	89 e5                	mov    %esp,%ebp$/;"	l
f0106525	obj/kern/kernel.asm	/^f0106525:	53                   	push   %ebx$/;"	l
f0106526	obj/kern/kernel.asm	/^f0106526:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106529	obj/kern/kernel.asm	/^f0106529:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010652c	obj/kern/kernel.asm	/^f010652c:	89 c3                	mov    %eax,%ebx$/;"	l
f010652e	obj/kern/kernel.asm	/^f010652e:	03 5d 10             	add    0x10(%ebp),%ebx$/;"	l
f0106531	obj/kern/kernel.asm	/^f0106531:	eb 06                	jmp    f0106539 <strncmp+0x17>$/;"	l
f0106533	obj/kern/kernel.asm	/^f0106533:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106536	obj/kern/kernel.asm	/^f0106536:	83 c2 01             	add    $0x1,%edx$/;"	l
f0106539	obj/kern/kernel.asm	/^f0106539:	39 d8                	cmp    %ebx,%eax$/;"	l
f010653b	obj/kern/kernel.asm	/^f010653b:	74 15                	je     f0106552 <strncmp+0x30>$/;"	l
f010653d	obj/kern/kernel.asm	/^f010653d:	0f b6 08             	movzbl (%eax),%ecx$/;"	l
f0106540	obj/kern/kernel.asm	/^f0106540:	84 c9                	test   %cl,%cl$/;"	l
f0106542	obj/kern/kernel.asm	/^f0106542:	74 04                	je     f0106548 <strncmp+0x26>$/;"	l
f0106544	obj/kern/kernel.asm	/^f0106544:	3a 0a                	cmp    (%edx),%cl$/;"	l
f0106546	obj/kern/kernel.asm	/^f0106546:	74 eb                	je     f0106533 <strncmp+0x11>$/;"	l
f0106548	obj/kern/kernel.asm	/^f0106548:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f010654b	obj/kern/kernel.asm	/^f010654b:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f010654e	obj/kern/kernel.asm	/^f010654e:	29 d0                	sub    %edx,%eax$/;"	l
f0106550	obj/kern/kernel.asm	/^f0106550:	eb 05                	jmp    f0106557 <strncmp+0x35>$/;"	l
f0106552	obj/kern/kernel.asm	/^f0106552:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106557	obj/kern/kernel.asm	/^f0106557:	5b                   	pop    %ebx$/;"	l
f0106558	obj/kern/kernel.asm	/^f0106558:	5d                   	pop    %ebp$/;"	l
f0106559	obj/kern/kernel.asm	/^f0106559:	c3                   	ret    $/;"	l
f010655a	obj/kern/kernel.asm	/^f010655a <strchr>:$/;"	l
f010655a	obj/kern/kernel.asm	/^f010655a:	55                   	push   %ebp$/;"	l
f010655b	obj/kern/kernel.asm	/^f010655b:	89 e5                	mov    %esp,%ebp$/;"	l
f010655d	obj/kern/kernel.asm	/^f010655d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106560	obj/kern/kernel.asm	/^f0106560:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f0106564	obj/kern/kernel.asm	/^f0106564:	eb 07                	jmp    f010656d <strchr+0x13>$/;"	l
f0106566	obj/kern/kernel.asm	/^f0106566:	38 ca                	cmp    %cl,%dl$/;"	l
f0106568	obj/kern/kernel.asm	/^f0106568:	74 0f                	je     f0106579 <strchr+0x1f>$/;"	l
f010656a	obj/kern/kernel.asm	/^f010656a:	83 c0 01             	add    $0x1,%eax$/;"	l
f010656d	obj/kern/kernel.asm	/^f010656d:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f0106570	obj/kern/kernel.asm	/^f0106570:	84 d2                	test   %dl,%dl$/;"	l
f0106572	obj/kern/kernel.asm	/^f0106572:	75 f2                	jne    f0106566 <strchr+0xc>$/;"	l
f0106574	obj/kern/kernel.asm	/^f0106574:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106579	obj/kern/kernel.asm	/^f0106579:	5d                   	pop    %ebp$/;"	l
f010657a	obj/kern/kernel.asm	/^f010657a:	c3                   	ret    $/;"	l
f010657b	obj/kern/kernel.asm	/^f010657b <strfind>:$/;"	l
f010657b	obj/kern/kernel.asm	/^f010657b:	55                   	push   %ebp$/;"	l
f010657c	obj/kern/kernel.asm	/^f010657c:	89 e5                	mov    %esp,%ebp$/;"	l
f010657e	obj/kern/kernel.asm	/^f010657e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106581	obj/kern/kernel.asm	/^f0106581:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f0106585	obj/kern/kernel.asm	/^f0106585:	eb 07                	jmp    f010658e <strfind+0x13>$/;"	l
f0106587	obj/kern/kernel.asm	/^f0106587:	38 ca                	cmp    %cl,%dl$/;"	l
f0106589	obj/kern/kernel.asm	/^f0106589:	74 0a                	je     f0106595 <strfind+0x1a>$/;"	l
f010658b	obj/kern/kernel.asm	/^f010658b:	83 c0 01             	add    $0x1,%eax$/;"	l
f010658e	obj/kern/kernel.asm	/^f010658e:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f0106591	obj/kern/kernel.asm	/^f0106591:	84 d2                	test   %dl,%dl$/;"	l
f0106593	obj/kern/kernel.asm	/^f0106593:	75 f2                	jne    f0106587 <strfind+0xc>$/;"	l
f0106595	obj/kern/kernel.asm	/^f0106595:	5d                   	pop    %ebp$/;"	l
f0106596	obj/kern/kernel.asm	/^f0106596:	c3                   	ret    $/;"	l
f0106597	obj/kern/kernel.asm	/^f0106597 <memset>:$/;"	l
f0106597	obj/kern/kernel.asm	/^f0106597:	55                   	push   %ebp$/;"	l
f0106598	obj/kern/kernel.asm	/^f0106598:	89 e5                	mov    %esp,%ebp$/;"	l
f010659a	obj/kern/kernel.asm	/^f010659a:	57                   	push   %edi$/;"	l
f010659b	obj/kern/kernel.asm	/^f010659b:	56                   	push   %esi$/;"	l
f010659c	obj/kern/kernel.asm	/^f010659c:	53                   	push   %ebx$/;"	l
f010659d	obj/kern/kernel.asm	/^f010659d:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f01065a0	obj/kern/kernel.asm	/^f01065a0:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f01065a3	obj/kern/kernel.asm	/^f01065a3:	85 c9                	test   %ecx,%ecx$/;"	l
f01065a5	obj/kern/kernel.asm	/^f01065a5:	74 36                	je     f01065dd <memset+0x46>$/;"	l
f01065a7	obj/kern/kernel.asm	/^f01065a7:	f7 c7 03 00 00 00    	test   $0x3,%edi$/;"	l
f01065ad	obj/kern/kernel.asm	/^f01065ad:	75 28                	jne    f01065d7 <memset+0x40>$/;"	l
f01065af	obj/kern/kernel.asm	/^f01065af:	f6 c1 03             	test   $0x3,%cl$/;"	l
f01065b2	obj/kern/kernel.asm	/^f01065b2:	75 23                	jne    f01065d7 <memset+0x40>$/;"	l
f01065b4	obj/kern/kernel.asm	/^f01065b4:	0f b6 55 0c          	movzbl 0xc(%ebp),%edx$/;"	l
f01065b8	obj/kern/kernel.asm	/^f01065b8:	89 d3                	mov    %edx,%ebx$/;"	l
f01065ba	obj/kern/kernel.asm	/^f01065ba:	c1 e3 08             	shl    $0x8,%ebx$/;"	l
f01065bd	obj/kern/kernel.asm	/^f01065bd:	89 d6                	mov    %edx,%esi$/;"	l
f01065bf	obj/kern/kernel.asm	/^f01065bf:	c1 e6 18             	shl    $0x18,%esi$/;"	l
f01065c2	obj/kern/kernel.asm	/^f01065c2:	89 d0                	mov    %edx,%eax$/;"	l
f01065c4	obj/kern/kernel.asm	/^f01065c4:	c1 e0 10             	shl    $0x10,%eax$/;"	l
f01065c7	obj/kern/kernel.asm	/^f01065c7:	09 f0                	or     %esi,%eax$/;"	l
f01065c9	obj/kern/kernel.asm	/^f01065c9:	09 c2                	or     %eax,%edx$/;"	l
f01065cb	obj/kern/kernel.asm	/^f01065cb:	89 d0                	mov    %edx,%eax$/;"	l
f01065cd	obj/kern/kernel.asm	/^f01065cd:	09 d8                	or     %ebx,%eax$/;"	l
f01065cf	obj/kern/kernel.asm	/^f01065cf:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f01065d2	obj/kern/kernel.asm	/^f01065d2:	fc                   	cld    $/;"	l
f01065d3	obj/kern/kernel.asm	/^f01065d3:	f3 ab                	rep stos %eax,%es:(%edi)$/;"	l
f01065d5	obj/kern/kernel.asm	/^f01065d5:	eb 06                	jmp    f01065dd <memset+0x46>$/;"	l
f01065d7	obj/kern/kernel.asm	/^f01065d7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01065da	obj/kern/kernel.asm	/^f01065da:	fc                   	cld    $/;"	l
f01065db	obj/kern/kernel.asm	/^f01065db:	f3 aa                	rep stos %al,%es:(%edi)$/;"	l
f01065dd	obj/kern/kernel.asm	/^f01065dd:	89 f8                	mov    %edi,%eax$/;"	l
f01065df	obj/kern/kernel.asm	/^f01065df:	5b                   	pop    %ebx$/;"	l
f01065e0	obj/kern/kernel.asm	/^f01065e0:	5e                   	pop    %esi$/;"	l
f01065e1	obj/kern/kernel.asm	/^f01065e1:	5f                   	pop    %edi$/;"	l
f01065e2	obj/kern/kernel.asm	/^f01065e2:	5d                   	pop    %ebp$/;"	l
f01065e3	obj/kern/kernel.asm	/^f01065e3:	c3                   	ret    $/;"	l
f01065e4	obj/kern/kernel.asm	/^f01065e4 <memmove>:$/;"	l
f01065e4	obj/kern/kernel.asm	/^f01065e4:	55                   	push   %ebp$/;"	l
f01065e5	obj/kern/kernel.asm	/^f01065e5:	89 e5                	mov    %esp,%ebp$/;"	l
f01065e7	obj/kern/kernel.asm	/^f01065e7:	57                   	push   %edi$/;"	l
f01065e8	obj/kern/kernel.asm	/^f01065e8:	56                   	push   %esi$/;"	l
f01065e9	obj/kern/kernel.asm	/^f01065e9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01065ec	obj/kern/kernel.asm	/^f01065ec:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f01065ef	obj/kern/kernel.asm	/^f01065ef:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f01065f2	obj/kern/kernel.asm	/^f01065f2:	39 c6                	cmp    %eax,%esi$/;"	l
f01065f4	obj/kern/kernel.asm	/^f01065f4:	73 35                	jae    f010662b <memmove+0x47>$/;"	l
f01065f6	obj/kern/kernel.asm	/^f01065f6:	8d 14 0e             	lea    (%esi,%ecx,1),%edx$/;"	l
f01065f9	obj/kern/kernel.asm	/^f01065f9:	39 d0                	cmp    %edx,%eax$/;"	l
f01065fb	obj/kern/kernel.asm	/^f01065fb:	73 2e                	jae    f010662b <memmove+0x47>$/;"	l
f01065fd	obj/kern/kernel.asm	/^f01065fd:	8d 3c 08             	lea    (%eax,%ecx,1),%edi$/;"	l
f0106600	obj/kern/kernel.asm	/^f0106600:	89 d6                	mov    %edx,%esi$/;"	l
f0106602	obj/kern/kernel.asm	/^f0106602:	09 fe                	or     %edi,%esi$/;"	l
f0106604	obj/kern/kernel.asm	/^f0106604:	f7 c6 03 00 00 00    	test   $0x3,%esi$/;"	l
f010660a	obj/kern/kernel.asm	/^f010660a:	75 13                	jne    f010661f <memmove+0x3b>$/;"	l
f010660c	obj/kern/kernel.asm	/^f010660c:	f6 c1 03             	test   $0x3,%cl$/;"	l
f010660f	obj/kern/kernel.asm	/^f010660f:	75 0e                	jne    f010661f <memmove+0x3b>$/;"	l
f0106611	obj/kern/kernel.asm	/^f0106611:	83 ef 04             	sub    $0x4,%edi$/;"	l
f0106614	obj/kern/kernel.asm	/^f0106614:	8d 72 fc             	lea    -0x4(%edx),%esi$/;"	l
f0106617	obj/kern/kernel.asm	/^f0106617:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f010661a	obj/kern/kernel.asm	/^f010661a:	fd                   	std    $/;"	l
f010661b	obj/kern/kernel.asm	/^f010661b:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f010661d	obj/kern/kernel.asm	/^f010661d:	eb 09                	jmp    f0106628 <memmove+0x44>$/;"	l
f010661f	obj/kern/kernel.asm	/^f010661f:	83 ef 01             	sub    $0x1,%edi$/;"	l
f0106622	obj/kern/kernel.asm	/^f0106622:	8d 72 ff             	lea    -0x1(%edx),%esi$/;"	l
f0106625	obj/kern/kernel.asm	/^f0106625:	fd                   	std    $/;"	l
f0106626	obj/kern/kernel.asm	/^f0106626:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f0106628	obj/kern/kernel.asm	/^f0106628:	fc                   	cld    $/;"	l
f0106629	obj/kern/kernel.asm	/^f0106629:	eb 1d                	jmp    f0106648 <memmove+0x64>$/;"	l
f010662b	obj/kern/kernel.asm	/^f010662b:	89 f2                	mov    %esi,%edx$/;"	l
f010662d	obj/kern/kernel.asm	/^f010662d:	09 c2                	or     %eax,%edx$/;"	l
f010662f	obj/kern/kernel.asm	/^f010662f:	f6 c2 03             	test   $0x3,%dl$/;"	l
f0106632	obj/kern/kernel.asm	/^f0106632:	75 0f                	jne    f0106643 <memmove+0x5f>$/;"	l
f0106634	obj/kern/kernel.asm	/^f0106634:	f6 c1 03             	test   $0x3,%cl$/;"	l
f0106637	obj/kern/kernel.asm	/^f0106637:	75 0a                	jne    f0106643 <memmove+0x5f>$/;"	l
f0106639	obj/kern/kernel.asm	/^f0106639:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f010663c	obj/kern/kernel.asm	/^f010663c:	89 c7                	mov    %eax,%edi$/;"	l
f010663e	obj/kern/kernel.asm	/^f010663e:	fc                   	cld    $/;"	l
f010663f	obj/kern/kernel.asm	/^f010663f:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0106641	obj/kern/kernel.asm	/^f0106641:	eb 05                	jmp    f0106648 <memmove+0x64>$/;"	l
f0106643	obj/kern/kernel.asm	/^f0106643:	89 c7                	mov    %eax,%edi$/;"	l
f0106645	obj/kern/kernel.asm	/^f0106645:	fc                   	cld    $/;"	l
f0106646	obj/kern/kernel.asm	/^f0106646:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f0106648	obj/kern/kernel.asm	/^f0106648:	5e                   	pop    %esi$/;"	l
f0106649	obj/kern/kernel.asm	/^f0106649:	5f                   	pop    %edi$/;"	l
f010664a	obj/kern/kernel.asm	/^f010664a:	5d                   	pop    %ebp$/;"	l
f010664b	obj/kern/kernel.asm	/^f010664b:	c3                   	ret    $/;"	l
f010664c	obj/kern/kernel.asm	/^f010664c <memcpy>:$/;"	l
f010664c	obj/kern/kernel.asm	/^f010664c:	55                   	push   %ebp$/;"	l
f010664d	obj/kern/kernel.asm	/^f010664d:	89 e5                	mov    %esp,%ebp$/;"	l
f010664f	obj/kern/kernel.asm	/^f010664f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0106652	obj/kern/kernel.asm	/^f0106652:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0106655	obj/kern/kernel.asm	/^f0106655:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0106659	obj/kern/kernel.asm	/^f0106659:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010665c	obj/kern/kernel.asm	/^f010665c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106660	obj/kern/kernel.asm	/^f0106660:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106663	obj/kern/kernel.asm	/^f0106663:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106666	obj/kern/kernel.asm	/^f0106666:	e8 79 ff ff ff       	call   f01065e4 <memmove>$/;"	l
f010666b	obj/kern/kernel.asm	/^f010666b:	c9                   	leave  $/;"	l
f010666c	obj/kern/kernel.asm	/^f010666c:	c3                   	ret    $/;"	l
f010666d	obj/kern/kernel.asm	/^f010666d <memcmp>:$/;"	l
f010666d	obj/kern/kernel.asm	/^f010666d:	55                   	push   %ebp$/;"	l
f010666e	obj/kern/kernel.asm	/^f010666e:	89 e5                	mov    %esp,%ebp$/;"	l
f0106670	obj/kern/kernel.asm	/^f0106670:	56                   	push   %esi$/;"	l
f0106671	obj/kern/kernel.asm	/^f0106671:	53                   	push   %ebx$/;"	l
f0106672	obj/kern/kernel.asm	/^f0106672:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0106675	obj/kern/kernel.asm	/^f0106675:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0106678	obj/kern/kernel.asm	/^f0106678:	89 d6                	mov    %edx,%esi$/;"	l
f010667a	obj/kern/kernel.asm	/^f010667a:	03 75 10             	add    0x10(%ebp),%esi$/;"	l
f010667d	obj/kern/kernel.asm	/^f010667d:	eb 1a                	jmp    f0106699 <memcmp+0x2c>$/;"	l
f010667f	obj/kern/kernel.asm	/^f010667f:	0f b6 02             	movzbl (%edx),%eax$/;"	l
f0106682	obj/kern/kernel.asm	/^f0106682:	0f b6 19             	movzbl (%ecx),%ebx$/;"	l
f0106685	obj/kern/kernel.asm	/^f0106685:	38 d8                	cmp    %bl,%al$/;"	l
f0106687	obj/kern/kernel.asm	/^f0106687:	74 0a                	je     f0106693 <memcmp+0x26>$/;"	l
f0106689	obj/kern/kernel.asm	/^f0106689:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010668c	obj/kern/kernel.asm	/^f010668c:	0f b6 db             	movzbl %bl,%ebx$/;"	l
f010668f	obj/kern/kernel.asm	/^f010668f:	29 d8                	sub    %ebx,%eax$/;"	l
f0106691	obj/kern/kernel.asm	/^f0106691:	eb 0f                	jmp    f01066a2 <memcmp+0x35>$/;"	l
f0106693	obj/kern/kernel.asm	/^f0106693:	83 c2 01             	add    $0x1,%edx$/;"	l
f0106696	obj/kern/kernel.asm	/^f0106696:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0106699	obj/kern/kernel.asm	/^f0106699:	39 f2                	cmp    %esi,%edx$/;"	l
f010669b	obj/kern/kernel.asm	/^f010669b:	75 e2                	jne    f010667f <memcmp+0x12>$/;"	l
f010669d	obj/kern/kernel.asm	/^f010669d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01066a2	obj/kern/kernel.asm	/^f01066a2:	5b                   	pop    %ebx$/;"	l
f01066a3	obj/kern/kernel.asm	/^f01066a3:	5e                   	pop    %esi$/;"	l
f01066a4	obj/kern/kernel.asm	/^f01066a4:	5d                   	pop    %ebp$/;"	l
f01066a5	obj/kern/kernel.asm	/^f01066a5:	c3                   	ret    $/;"	l
f01066a6	obj/kern/kernel.asm	/^f01066a6 <memfind>:$/;"	l
f01066a6	obj/kern/kernel.asm	/^f01066a6:	55                   	push   %ebp$/;"	l
f01066a7	obj/kern/kernel.asm	/^f01066a7:	89 e5                	mov    %esp,%ebp$/;"	l
f01066a9	obj/kern/kernel.asm	/^f01066a9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01066ac	obj/kern/kernel.asm	/^f01066ac:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f01066af	obj/kern/kernel.asm	/^f01066af:	89 c2                	mov    %eax,%edx$/;"	l
f01066b1	obj/kern/kernel.asm	/^f01066b1:	03 55 10             	add    0x10(%ebp),%edx$/;"	l
f01066b4	obj/kern/kernel.asm	/^f01066b4:	eb 07                	jmp    f01066bd <memfind+0x17>$/;"	l
f01066b6	obj/kern/kernel.asm	/^f01066b6:	38 08                	cmp    %cl,(%eax)$/;"	l
f01066b8	obj/kern/kernel.asm	/^f01066b8:	74 07                	je     f01066c1 <memfind+0x1b>$/;"	l
f01066ba	obj/kern/kernel.asm	/^f01066ba:	83 c0 01             	add    $0x1,%eax$/;"	l
f01066bd	obj/kern/kernel.asm	/^f01066bd:	39 d0                	cmp    %edx,%eax$/;"	l
f01066bf	obj/kern/kernel.asm	/^f01066bf:	72 f5                	jb     f01066b6 <memfind+0x10>$/;"	l
f01066c1	obj/kern/kernel.asm	/^f01066c1:	5d                   	pop    %ebp$/;"	l
f01066c2	obj/kern/kernel.asm	/^f01066c2:	c3                   	ret    $/;"	l
f01066c3	obj/kern/kernel.asm	/^f01066c3 <strtol>:$/;"	l
f01066c3	obj/kern/kernel.asm	/^f01066c3:	55                   	push   %ebp$/;"	l
f01066c4	obj/kern/kernel.asm	/^f01066c4:	89 e5                	mov    %esp,%ebp$/;"	l
f01066c6	obj/kern/kernel.asm	/^f01066c6:	57                   	push   %edi$/;"	l
f01066c7	obj/kern/kernel.asm	/^f01066c7:	56                   	push   %esi$/;"	l
f01066c8	obj/kern/kernel.asm	/^f01066c8:	53                   	push   %ebx$/;"	l
f01066c9	obj/kern/kernel.asm	/^f01066c9:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f01066cc	obj/kern/kernel.asm	/^f01066cc:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01066cf	obj/kern/kernel.asm	/^f01066cf:	eb 03                	jmp    f01066d4 <strtol+0x11>$/;"	l
f01066d1	obj/kern/kernel.asm	/^f01066d1:	83 c2 01             	add    $0x1,%edx$/;"	l
f01066d4	obj/kern/kernel.asm	/^f01066d4:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f01066d7	obj/kern/kernel.asm	/^f01066d7:	80 f9 09             	cmp    $0x9,%cl$/;"	l
f01066da	obj/kern/kernel.asm	/^f01066da:	74 f5                	je     f01066d1 <strtol+0xe>$/;"	l
f01066dc	obj/kern/kernel.asm	/^f01066dc:	80 f9 20             	cmp    $0x20,%cl$/;"	l
f01066df	obj/kern/kernel.asm	/^f01066df:	74 f0                	je     f01066d1 <strtol+0xe>$/;"	l
f01066e1	obj/kern/kernel.asm	/^f01066e1:	80 f9 2b             	cmp    $0x2b,%cl$/;"	l
f01066e4	obj/kern/kernel.asm	/^f01066e4:	75 0a                	jne    f01066f0 <strtol+0x2d>$/;"	l
f01066e6	obj/kern/kernel.asm	/^f01066e6:	83 c2 01             	add    $0x1,%edx$/;"	l
f01066e9	obj/kern/kernel.asm	/^f01066e9:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f01066ee	obj/kern/kernel.asm	/^f01066ee:	eb 11                	jmp    f0106701 <strtol+0x3e>$/;"	l
f01066f0	obj/kern/kernel.asm	/^f01066f0:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f01066f5	obj/kern/kernel.asm	/^f01066f5:	80 f9 2d             	cmp    $0x2d,%cl$/;"	l
f01066f8	obj/kern/kernel.asm	/^f01066f8:	75 07                	jne    f0106701 <strtol+0x3e>$/;"	l
f01066fa	obj/kern/kernel.asm	/^f01066fa:	8d 52 01             	lea    0x1(%edx),%edx$/;"	l
f01066fd	obj/kern/kernel.asm	/^f01066fd:	66 bf 01 00          	mov    $0x1,%di$/;"	l
f0106701	obj/kern/kernel.asm	/^f0106701:	a9 ef ff ff ff       	test   $0xffffffef,%eax$/;"	l
f0106706	obj/kern/kernel.asm	/^f0106706:	75 15                	jne    f010671d <strtol+0x5a>$/;"	l
f0106708	obj/kern/kernel.asm	/^f0106708:	80 3a 30             	cmpb   $0x30,(%edx)$/;"	l
f010670b	obj/kern/kernel.asm	/^f010670b:	75 10                	jne    f010671d <strtol+0x5a>$/;"	l
f010670d	obj/kern/kernel.asm	/^f010670d:	80 7a 01 78          	cmpb   $0x78,0x1(%edx)$/;"	l
f0106711	obj/kern/kernel.asm	/^f0106711:	75 0a                	jne    f010671d <strtol+0x5a>$/;"	l
f0106713	obj/kern/kernel.asm	/^f0106713:	83 c2 02             	add    $0x2,%edx$/;"	l
f0106716	obj/kern/kernel.asm	/^f0106716:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f010671b	obj/kern/kernel.asm	/^f010671b:	eb 10                	jmp    f010672d <strtol+0x6a>$/;"	l
f010671d	obj/kern/kernel.asm	/^f010671d:	85 c0                	test   %eax,%eax$/;"	l
f010671f	obj/kern/kernel.asm	/^f010671f:	75 0c                	jne    f010672d <strtol+0x6a>$/;"	l
f0106721	obj/kern/kernel.asm	/^f0106721:	b0 0a                	mov    $0xa,%al$/;"	l
f0106723	obj/kern/kernel.asm	/^f0106723:	80 3a 30             	cmpb   $0x30,(%edx)$/;"	l
f0106726	obj/kern/kernel.asm	/^f0106726:	75 05                	jne    f010672d <strtol+0x6a>$/;"	l
f0106728	obj/kern/kernel.asm	/^f0106728:	83 c2 01             	add    $0x1,%edx$/;"	l
f010672b	obj/kern/kernel.asm	/^f010672b:	b0 08                	mov    $0x8,%al$/;"	l
f010672d	obj/kern/kernel.asm	/^f010672d:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0106732	obj/kern/kernel.asm	/^f0106732:	89 45 10             	mov    %eax,0x10(%ebp)$/;"	l
f0106735	obj/kern/kernel.asm	/^f0106735:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f0106738	obj/kern/kernel.asm	/^f0106738:	8d 71 d0             	lea    -0x30(%ecx),%esi$/;"	l
f010673b	obj/kern/kernel.asm	/^f010673b:	89 f0                	mov    %esi,%eax$/;"	l
f010673d	obj/kern/kernel.asm	/^f010673d:	3c 09                	cmp    $0x9,%al$/;"	l
f010673f	obj/kern/kernel.asm	/^f010673f:	77 08                	ja     f0106749 <strtol+0x86>$/;"	l
f0106741	obj/kern/kernel.asm	/^f0106741:	0f be c9             	movsbl %cl,%ecx$/;"	l
f0106744	obj/kern/kernel.asm	/^f0106744:	83 e9 30             	sub    $0x30,%ecx$/;"	l
f0106747	obj/kern/kernel.asm	/^f0106747:	eb 20                	jmp    f0106769 <strtol+0xa6>$/;"	l
f0106749	obj/kern/kernel.asm	/^f0106749:	8d 71 9f             	lea    -0x61(%ecx),%esi$/;"	l
f010674c	obj/kern/kernel.asm	/^f010674c:	89 f0                	mov    %esi,%eax$/;"	l
f010674e	obj/kern/kernel.asm	/^f010674e:	3c 19                	cmp    $0x19,%al$/;"	l
f0106750	obj/kern/kernel.asm	/^f0106750:	77 08                	ja     f010675a <strtol+0x97>$/;"	l
f0106752	obj/kern/kernel.asm	/^f0106752:	0f be c9             	movsbl %cl,%ecx$/;"	l
f0106755	obj/kern/kernel.asm	/^f0106755:	83 e9 57             	sub    $0x57,%ecx$/;"	l
f0106758	obj/kern/kernel.asm	/^f0106758:	eb 0f                	jmp    f0106769 <strtol+0xa6>$/;"	l
f010675a	obj/kern/kernel.asm	/^f010675a:	8d 71 bf             	lea    -0x41(%ecx),%esi$/;"	l
f010675d	obj/kern/kernel.asm	/^f010675d:	89 f0                	mov    %esi,%eax$/;"	l
f010675f	obj/kern/kernel.asm	/^f010675f:	3c 19                	cmp    $0x19,%al$/;"	l
f0106761	obj/kern/kernel.asm	/^f0106761:	77 16                	ja     f0106779 <strtol+0xb6>$/;"	l
f0106763	obj/kern/kernel.asm	/^f0106763:	0f be c9             	movsbl %cl,%ecx$/;"	l
f0106766	obj/kern/kernel.asm	/^f0106766:	83 e9 37             	sub    $0x37,%ecx$/;"	l
f0106769	obj/kern/kernel.asm	/^f0106769:	3b 4d 10             	cmp    0x10(%ebp),%ecx$/;"	l
f010676c	obj/kern/kernel.asm	/^f010676c:	7d 0f                	jge    f010677d <strtol+0xba>$/;"	l
f010676e	obj/kern/kernel.asm	/^f010676e:	83 c2 01             	add    $0x1,%edx$/;"	l
f0106771	obj/kern/kernel.asm	/^f0106771:	0f af 5d 10          	imul   0x10(%ebp),%ebx$/;"	l
f0106775	obj/kern/kernel.asm	/^f0106775:	01 cb                	add    %ecx,%ebx$/;"	l
f0106777	obj/kern/kernel.asm	/^f0106777:	eb bc                	jmp    f0106735 <strtol+0x72>$/;"	l
f0106779	obj/kern/kernel.asm	/^f0106779:	89 d8                	mov    %ebx,%eax$/;"	l
f010677b	obj/kern/kernel.asm	/^f010677b:	eb 02                	jmp    f010677f <strtol+0xbc>$/;"	l
f010677d	obj/kern/kernel.asm	/^f010677d:	89 d8                	mov    %ebx,%eax$/;"	l
f010677f	obj/kern/kernel.asm	/^f010677f:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
f0106783	obj/kern/kernel.asm	/^f0106783:	74 05                	je     f010678a <strtol+0xc7>$/;"	l
f0106785	obj/kern/kernel.asm	/^f0106785:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0106788	obj/kern/kernel.asm	/^f0106788:	89 16                	mov    %edx,(%esi)$/;"	l
f010678a	obj/kern/kernel.asm	/^f010678a:	f7 d8                	neg    %eax$/;"	l
f010678c	obj/kern/kernel.asm	/^f010678c:	85 ff                	test   %edi,%edi$/;"	l
f010678e	obj/kern/kernel.asm	/^f010678e:	0f 44 c3             	cmove  %ebx,%eax$/;"	l
f0106791	obj/kern/kernel.asm	/^f0106791:	5b                   	pop    %ebx$/;"	l
f0106792	obj/kern/kernel.asm	/^f0106792:	5e                   	pop    %esi$/;"	l
f0106793	obj/kern/kernel.asm	/^f0106793:	5f                   	pop    %edi$/;"	l
f0106794	obj/kern/kernel.asm	/^f0106794:	5d                   	pop    %ebp$/;"	l
f0106795	obj/kern/kernel.asm	/^f0106795:	c3                   	ret    $/;"	l
f0106796	obj/kern/kernel.asm	/^f0106796:	66 90                	xchg   %ax,%ax$/;"	l
f0106798	obj/kern/kernel.asm	/^f0106798 <mpentry_start>:$/;"	l
f0106798	obj/kern/kernel.asm	/^f0106798:	fa                   	cli    $/;"	l
f0106799	obj/kern/kernel.asm	/^f0106799:	31 c0                	xor    %eax,%eax$/;"	l
f010679b	obj/kern/kernel.asm	/^f010679b:	8e d8                	mov    %eax,%ds$/;"	l
f010679d	obj/kern/kernel.asm	/^f010679d:	8e c0                	mov    %eax,%es$/;"	l
f010679f	obj/kern/kernel.asm	/^f010679f:	8e d0                	mov    %eax,%ss$/;"	l
f01067a1	obj/kern/kernel.asm	/^f01067a1:	0f 01 16             	lgdtl  (%esi)$/;"	l
f01067a4	obj/kern/kernel.asm	/^f01067a4:	74 70                	je     f0106816 <mpentry_end+0x4>$/;"	l
f01067a6	obj/kern/kernel.asm	/^f01067a6:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f01067a9	obj/kern/kernel.asm	/^f01067a9:	66 83 c8 01          	or     $0x1,%ax$/;"	l
f01067ad	obj/kern/kernel.asm	/^f01067ad:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f01067b0	obj/kern/kernel.asm	/^f01067b0:	66 ea 20 70 00 00    	ljmpw  $0x0,$0x7020$/;"	l
f01067b6	obj/kern/kernel.asm	/^f01067b6:	08 00                	or     %al,(%eax)$/;"	l
f01067b8	obj/kern/kernel.asm	/^f01067b8 <start32>:$/;"	l
f01067b8	obj/kern/kernel.asm	/^f01067b8:	66 b8 10 00          	mov    $0x10,%ax$/;"	l
f01067bc	obj/kern/kernel.asm	/^f01067bc:	8e d8                	mov    %eax,%ds$/;"	l
f01067be	obj/kern/kernel.asm	/^f01067be:	8e c0                	mov    %eax,%es$/;"	l
f01067c0	obj/kern/kernel.asm	/^f01067c0:	8e d0                	mov    %eax,%ss$/;"	l
f01067c2	obj/kern/kernel.asm	/^f01067c2:	66 b8 00 00          	mov    $0x0,%ax$/;"	l
f01067c6	obj/kern/kernel.asm	/^f01067c6:	8e e0                	mov    %eax,%fs$/;"	l
f01067c8	obj/kern/kernel.asm	/^f01067c8:	8e e8                	mov    %eax,%gs$/;"	l
f01067ca	obj/kern/kernel.asm	/^f01067ca:	b8 00 30 12 00       	mov    $0x123000,%eax$/;"	l
f01067cf	obj/kern/kernel.asm	/^f01067cf:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f01067d2	obj/kern/kernel.asm	/^f01067d2:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f01067d5	obj/kern/kernel.asm	/^f01067d5:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f01067da	obj/kern/kernel.asm	/^f01067da:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f01067dd	obj/kern/kernel.asm	/^f01067dd:	8b 25 90 9e 2b f0    	mov    0xf02b9e90,%esp$/;"	l
f01067e3	obj/kern/kernel.asm	/^f01067e3:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f01067e8	obj/kern/kernel.asm	/^f01067e8:	b8 10 02 10 f0       	mov    $0xf0100210,%eax$/;"	l
f01067ed	obj/kern/kernel.asm	/^f01067ed:	ff d0                	call   *%eax$/;"	l
f01067ef	obj/kern/kernel.asm	/^f01067ef <spin>:$/;"	l
f01067ef	obj/kern/kernel.asm	/^f01067ef:	eb fe                	jmp    f01067ef <spin>$/;"	l
f01067f1	obj/kern/kernel.asm	/^f01067f1:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f01067f4	obj/kern/kernel.asm	/^f01067f4 <gdt>:$/;"	l
f01067fc	obj/kern/kernel.asm	/^f01067fc:	ff                   	(bad)  $/;"	l
f01067fd	obj/kern/kernel.asm	/^f01067fd:	ff 00                	incl   (%eax)$/;"	l
f01067ff	obj/kern/kernel.asm	/^f01067ff:	00 00                	add    %al,(%eax)$/;"	l
f0106801	obj/kern/kernel.asm	/^f0106801:	9a cf 00 ff ff 00 00 	lcall  $0x0,$0xffff00cf$/;"	l
f0106808	obj/kern/kernel.asm	/^f0106808:	00 92 cf 00 17 00    	add    %dl,0x1700cf(%edx)$/;"	l
f010680c	obj/kern/kernel.asm	/^f010680c <gdtdesc>:$/;"	l
f010680c	obj/kern/kernel.asm	/^f010680c:	17                   	pop    %ss$/;"	l
f010680d	obj/kern/kernel.asm	/^f010680d:	00 5c 70 00          	add    %bl,0x0(%eax,%esi,2)$/;"	l
f0106812	obj/kern/kernel.asm	/^f0106812 <mpentry_end>:$/;"	l
f0106812	obj/kern/kernel.asm	/^f0106812:	90                   	nop$/;"	l
f0106813	obj/kern/kernel.asm	/^f0106813:	66 90                	xchg   %ax,%ax$/;"	l
f0106815	obj/kern/kernel.asm	/^f0106815:	66 90                	xchg   %ax,%ax$/;"	l
f0106817	obj/kern/kernel.asm	/^f0106817:	66 90                	xchg   %ax,%ax$/;"	l
f0106819	obj/kern/kernel.asm	/^f0106819:	66 90                	xchg   %ax,%ax$/;"	l
f010681b	obj/kern/kernel.asm	/^f010681b:	66 90                	xchg   %ax,%ax$/;"	l
f010681d	obj/kern/kernel.asm	/^f010681d:	66 90                	xchg   %ax,%ax$/;"	l
f010681f	obj/kern/kernel.asm	/^f010681f:	90                   	nop$/;"	l
f0106820	obj/kern/kernel.asm	/^f0106820 <mpsearch1>:$/;"	l
f0106820	obj/kern/kernel.asm	/^f0106820:	55                   	push   %ebp$/;"	l
f0106821	obj/kern/kernel.asm	/^f0106821:	89 e5                	mov    %esp,%ebp$/;"	l
f0106823	obj/kern/kernel.asm	/^f0106823:	56                   	push   %esi$/;"	l
f0106824	obj/kern/kernel.asm	/^f0106824:	53                   	push   %ebx$/;"	l
f0106825	obj/kern/kernel.asm	/^f0106825:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0106828	obj/kern/kernel.asm	/^f0106828:	8b 0d 94 9e 2b f0    	mov    0xf02b9e94,%ecx$/;"	l
f010682e	obj/kern/kernel.asm	/^f010682e:	89 c3                	mov    %eax,%ebx$/;"	l
f0106830	obj/kern/kernel.asm	/^f0106830:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f0106833	obj/kern/kernel.asm	/^f0106833:	39 cb                	cmp    %ecx,%ebx$/;"	l
f0106835	obj/kern/kernel.asm	/^f0106835:	72 20                	jb     f0106857 <mpsearch1+0x37>$/;"	l
f0106837	obj/kern/kernel.asm	/^f0106837:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010683b	obj/kern/kernel.asm	/^f010683b:	c7 44 24 08 a4 80 10 	movl   $0xf01080a4,0x8(%esp)$/;"	l
f0106842	obj/kern/kernel.asm	/^f0106842:	f0 $/;"	l
f0106843	obj/kern/kernel.asm	/^f0106843:	c7 44 24 04 57 00 00 	movl   $0x57,0x4(%esp)$/;"	l
f010684a	obj/kern/kernel.asm	/^f010684a:	00 $/;"	l
f010684b	obj/kern/kernel.asm	/^f010684b:	c7 04 24 0d 9e 10 f0 	movl   $0xf0109e0d,(%esp)$/;"	l
f0106852	obj/kern/kernel.asm	/^f0106852:	e8 e9 97 ff ff       	call   f0100040 <_panic>$/;"	l
f0106857	obj/kern/kernel.asm	/^f0106857:	8d 98 00 00 00 f0    	lea    -0x10000000(%eax),%ebx$/;"	l
f010685d	obj/kern/kernel.asm	/^f010685d:	01 d0                	add    %edx,%eax$/;"	l
f010685f	obj/kern/kernel.asm	/^f010685f:	89 c2                	mov    %eax,%edx$/;"	l
f0106861	obj/kern/kernel.asm	/^f0106861:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0106864	obj/kern/kernel.asm	/^f0106864:	39 d1                	cmp    %edx,%ecx$/;"	l
f0106866	obj/kern/kernel.asm	/^f0106866:	77 20                	ja     f0106888 <mpsearch1+0x68>$/;"	l
f0106868	obj/kern/kernel.asm	/^f0106868:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010686c	obj/kern/kernel.asm	/^f010686c:	c7 44 24 08 a4 80 10 	movl   $0xf01080a4,0x8(%esp)$/;"	l
f0106873	obj/kern/kernel.asm	/^f0106873:	f0 $/;"	l
f0106874	obj/kern/kernel.asm	/^f0106874:	c7 44 24 04 57 00 00 	movl   $0x57,0x4(%esp)$/;"	l
f010687b	obj/kern/kernel.asm	/^f010687b:	00 $/;"	l
f010687c	obj/kern/kernel.asm	/^f010687c:	c7 04 24 0d 9e 10 f0 	movl   $0xf0109e0d,(%esp)$/;"	l
f0106883	obj/kern/kernel.asm	/^f0106883:	e8 b8 97 ff ff       	call   f0100040 <_panic>$/;"	l
f0106888	obj/kern/kernel.asm	/^f0106888:	8d b0 00 00 00 f0    	lea    -0x10000000(%eax),%esi$/;"	l
f010688e	obj/kern/kernel.asm	/^f010688e:	eb 36                	jmp    f01068c6 <mpsearch1+0xa6>$/;"	l
f0106890	obj/kern/kernel.asm	/^f0106890:	c7 44 24 08 04 00 00 	movl   $0x4,0x8(%esp)$/;"	l
f0106897	obj/kern/kernel.asm	/^f0106897:	00 $/;"	l
f0106898	obj/kern/kernel.asm	/^f0106898:	c7 44 24 04 1d 9e 10 	movl   $0xf0109e1d,0x4(%esp)$/;"	l
f010689f	obj/kern/kernel.asm	/^f010689f:	f0 $/;"	l
f01068a0	obj/kern/kernel.asm	/^f01068a0:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01068a3	obj/kern/kernel.asm	/^f01068a3:	e8 c5 fd ff ff       	call   f010666d <memcmp>$/;"	l
f01068a8	obj/kern/kernel.asm	/^f01068a8:	85 c0                	test   %eax,%eax$/;"	l
f01068aa	obj/kern/kernel.asm	/^f01068aa:	75 17                	jne    f01068c3 <mpsearch1+0xa3>$/;"	l
f01068ac	obj/kern/kernel.asm	/^f01068ac:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01068b1	obj/kern/kernel.asm	/^f01068b1:	0f b6 0c 13          	movzbl (%ebx,%edx,1),%ecx$/;"	l
f01068b5	obj/kern/kernel.asm	/^f01068b5:	01 c8                	add    %ecx,%eax$/;"	l
f01068b7	obj/kern/kernel.asm	/^f01068b7:	83 c2 01             	add    $0x1,%edx$/;"	l
f01068ba	obj/kern/kernel.asm	/^f01068ba:	83 fa 10             	cmp    $0x10,%edx$/;"	l
f01068bd	obj/kern/kernel.asm	/^f01068bd:	75 f2                	jne    f01068b1 <mpsearch1+0x91>$/;"	l
f01068bf	obj/kern/kernel.asm	/^f01068bf:	84 c0                	test   %al,%al$/;"	l
f01068c1	obj/kern/kernel.asm	/^f01068c1:	74 0e                	je     f01068d1 <mpsearch1+0xb1>$/;"	l
f01068c3	obj/kern/kernel.asm	/^f01068c3:	83 c3 10             	add    $0x10,%ebx$/;"	l
f01068c6	obj/kern/kernel.asm	/^f01068c6:	39 f3                	cmp    %esi,%ebx$/;"	l
f01068c8	obj/kern/kernel.asm	/^f01068c8:	72 c6                	jb     f0106890 <mpsearch1+0x70>$/;"	l
f01068ca	obj/kern/kernel.asm	/^f01068ca:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01068cf	obj/kern/kernel.asm	/^f01068cf:	eb 02                	jmp    f01068d3 <mpsearch1+0xb3>$/;"	l
f01068d1	obj/kern/kernel.asm	/^f01068d1:	89 d8                	mov    %ebx,%eax$/;"	l
f01068d3	obj/kern/kernel.asm	/^f01068d3:	83 c4 10             	add    $0x10,%esp$/;"	l
f01068d6	obj/kern/kernel.asm	/^f01068d6:	5b                   	pop    %ebx$/;"	l
f01068d7	obj/kern/kernel.asm	/^f01068d7:	5e                   	pop    %esi$/;"	l
f01068d8	obj/kern/kernel.asm	/^f01068d8:	5d                   	pop    %ebp$/;"	l
f01068d9	obj/kern/kernel.asm	/^f01068d9:	c3                   	ret    $/;"	l
f01068da	obj/kern/kernel.asm	/^f01068da <mp_init>:$/;"	l
f01068da	obj/kern/kernel.asm	/^f01068da:	55                   	push   %ebp$/;"	l
f01068db	obj/kern/kernel.asm	/^f01068db:	89 e5                	mov    %esp,%ebp$/;"	l
f01068dd	obj/kern/kernel.asm	/^f01068dd:	57                   	push   %edi$/;"	l
f01068de	obj/kern/kernel.asm	/^f01068de:	56                   	push   %esi$/;"	l
f01068df	obj/kern/kernel.asm	/^f01068df:	53                   	push   %ebx$/;"	l
f01068e0	obj/kern/kernel.asm	/^f01068e0:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f01068e3	obj/kern/kernel.asm	/^f01068e3:	c7 05 c0 a3 2b f0 20 	movl   $0xf02ba020,0xf02ba3c0$/;"	l
f01068ea	obj/kern/kernel.asm	/^f01068ea:	a0 2b f0 $/;"	l
f01068ed	obj/kern/kernel.asm	/^f01068ed:	83 3d 94 9e 2b f0 00 	cmpl   $0x0,0xf02b9e94$/;"	l
f01068f4	obj/kern/kernel.asm	/^f01068f4:	75 24                	jne    f010691a <mp_init+0x40>$/;"	l
f01068f6	obj/kern/kernel.asm	/^f01068f6:	c7 44 24 0c 00 04 00 	movl   $0x400,0xc(%esp)$/;"	l
f01068fd	obj/kern/kernel.asm	/^f01068fd:	00 $/;"	l
f01068fe	obj/kern/kernel.asm	/^f01068fe:	c7 44 24 08 a4 80 10 	movl   $0xf01080a4,0x8(%esp)$/;"	l
f0106905	obj/kern/kernel.asm	/^f0106905:	f0 $/;"	l
f0106906	obj/kern/kernel.asm	/^f0106906:	c7 44 24 04 6f 00 00 	movl   $0x6f,0x4(%esp)$/;"	l
f010690d	obj/kern/kernel.asm	/^f010690d:	00 $/;"	l
f010690e	obj/kern/kernel.asm	/^f010690e:	c7 04 24 0d 9e 10 f0 	movl   $0xf0109e0d,(%esp)$/;"	l
f0106915	obj/kern/kernel.asm	/^f0106915:	e8 26 97 ff ff       	call   f0100040 <_panic>$/;"	l
f010691a	obj/kern/kernel.asm	/^f010691a:	0f b7 05 0e 04 00 f0 	movzwl 0xf000040e,%eax$/;"	l
f0106921	obj/kern/kernel.asm	/^f0106921:	85 c0                	test   %eax,%eax$/;"	l
f0106923	obj/kern/kernel.asm	/^f0106923:	74 16                	je     f010693b <mp_init+0x61>$/;"	l
f0106925	obj/kern/kernel.asm	/^f0106925:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f0106928	obj/kern/kernel.asm	/^f0106928:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f010692d	obj/kern/kernel.asm	/^f010692d:	e8 ee fe ff ff       	call   f0106820 <mpsearch1>$/;"	l
f0106932	obj/kern/kernel.asm	/^f0106932:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0106935	obj/kern/kernel.asm	/^f0106935:	85 c0                	test   %eax,%eax$/;"	l
f0106937	obj/kern/kernel.asm	/^f0106937:	75 3c                	jne    f0106975 <mp_init+0x9b>$/;"	l
f0106939	obj/kern/kernel.asm	/^f0106939:	eb 20                	jmp    f010695b <mp_init+0x81>$/;"	l
f010693b	obj/kern/kernel.asm	/^f010693b:	0f b7 05 13 04 00 f0 	movzwl 0xf0000413,%eax$/;"	l
f0106942	obj/kern/kernel.asm	/^f0106942:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f0106945	obj/kern/kernel.asm	/^f0106945:	2d 00 04 00 00       	sub    $0x400,%eax$/;"	l
f010694a	obj/kern/kernel.asm	/^f010694a:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f010694f	obj/kern/kernel.asm	/^f010694f:	e8 cc fe ff ff       	call   f0106820 <mpsearch1>$/;"	l
f0106954	obj/kern/kernel.asm	/^f0106954:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0106957	obj/kern/kernel.asm	/^f0106957:	85 c0                	test   %eax,%eax$/;"	l
f0106959	obj/kern/kernel.asm	/^f0106959:	75 1a                	jne    f0106975 <mp_init+0x9b>$/;"	l
f010695b	obj/kern/kernel.asm	/^f010695b:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0106960	obj/kern/kernel.asm	/^f0106960:	b8 00 00 0f 00       	mov    $0xf0000,%eax$/;"	l
f0106965	obj/kern/kernel.asm	/^f0106965:	e8 b6 fe ff ff       	call   f0106820 <mpsearch1>$/;"	l
f010696a	obj/kern/kernel.asm	/^f010696a:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f010696d	obj/kern/kernel.asm	/^f010696d:	85 c0                	test   %eax,%eax$/;"	l
f010696f	obj/kern/kernel.asm	/^f010696f:	0f 84 54 02 00 00    	je     f0106bc9 <mp_init+0x2ef>$/;"	l
f0106975	obj/kern/kernel.asm	/^f0106975:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0106978	obj/kern/kernel.asm	/^f0106978:	8b 70 04             	mov    0x4(%eax),%esi$/;"	l
f010697b	obj/kern/kernel.asm	/^f010697b:	85 f6                	test   %esi,%esi$/;"	l
f010697d	obj/kern/kernel.asm	/^f010697d:	74 06                	je     f0106985 <mp_init+0xab>$/;"	l
f010697f	obj/kern/kernel.asm	/^f010697f:	80 78 0b 00          	cmpb   $0x0,0xb(%eax)$/;"	l
f0106983	obj/kern/kernel.asm	/^f0106983:	74 11                	je     f0106996 <mp_init+0xbc>$/;"	l
f0106985	obj/kern/kernel.asm	/^f0106985:	c7 04 24 80 9c 10 f0 	movl   $0xf0109c80,(%esp)$/;"	l
f010698c	obj/kern/kernel.asm	/^f010698c:	e8 3b d6 ff ff       	call   f0103fcc <cprintf>$/;"	l
f0106991	obj/kern/kernel.asm	/^f0106991:	e9 33 02 00 00       	jmp    f0106bc9 <mp_init+0x2ef>$/;"	l
f0106996	obj/kern/kernel.asm	/^f0106996:	89 f0                	mov    %esi,%eax$/;"	l
f0106998	obj/kern/kernel.asm	/^f0106998:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f010699b	obj/kern/kernel.asm	/^f010699b:	3b 05 94 9e 2b f0    	cmp    0xf02b9e94,%eax$/;"	l
f01069a1	obj/kern/kernel.asm	/^f01069a1:	72 20                	jb     f01069c3 <mp_init+0xe9>$/;"	l
f01069a3	obj/kern/kernel.asm	/^f01069a3:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f01069a7	obj/kern/kernel.asm	/^f01069a7:	c7 44 24 08 a4 80 10 	movl   $0xf01080a4,0x8(%esp)$/;"	l
f01069ae	obj/kern/kernel.asm	/^f01069ae:	f0 $/;"	l
f01069af	obj/kern/kernel.asm	/^f01069af:	c7 44 24 04 90 00 00 	movl   $0x90,0x4(%esp)$/;"	l
f01069b6	obj/kern/kernel.asm	/^f01069b6:	00 $/;"	l
f01069b7	obj/kern/kernel.asm	/^f01069b7:	c7 04 24 0d 9e 10 f0 	movl   $0xf0109e0d,(%esp)$/;"	l
f01069be	obj/kern/kernel.asm	/^f01069be:	e8 7d 96 ff ff       	call   f0100040 <_panic>$/;"	l
f01069c3	obj/kern/kernel.asm	/^f01069c3:	8d 9e 00 00 00 f0    	lea    -0x10000000(%esi),%ebx$/;"	l
f01069c9	obj/kern/kernel.asm	/^f01069c9:	c7 44 24 08 04 00 00 	movl   $0x4,0x8(%esp)$/;"	l
f01069d0	obj/kern/kernel.asm	/^f01069d0:	00 $/;"	l
f01069d1	obj/kern/kernel.asm	/^f01069d1:	c7 44 24 04 22 9e 10 	movl   $0xf0109e22,0x4(%esp)$/;"	l
f01069d8	obj/kern/kernel.asm	/^f01069d8:	f0 $/;"	l
f01069d9	obj/kern/kernel.asm	/^f01069d9:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01069dc	obj/kern/kernel.asm	/^f01069dc:	e8 8c fc ff ff       	call   f010666d <memcmp>$/;"	l
f01069e1	obj/kern/kernel.asm	/^f01069e1:	85 c0                	test   %eax,%eax$/;"	l
f01069e3	obj/kern/kernel.asm	/^f01069e3:	74 11                	je     f01069f6 <mp_init+0x11c>$/;"	l
f01069e5	obj/kern/kernel.asm	/^f01069e5:	c7 04 24 b0 9c 10 f0 	movl   $0xf0109cb0,(%esp)$/;"	l
f01069ec	obj/kern/kernel.asm	/^f01069ec:	e8 db d5 ff ff       	call   f0103fcc <cprintf>$/;"	l
f01069f1	obj/kern/kernel.asm	/^f01069f1:	e9 d3 01 00 00       	jmp    f0106bc9 <mp_init+0x2ef>$/;"	l
f01069f6	obj/kern/kernel.asm	/^f01069f6:	0f b7 43 04          	movzwl 0x4(%ebx),%eax$/;"	l
f01069fa	obj/kern/kernel.asm	/^f01069fa:	66 89 45 e2          	mov    %ax,-0x1e(%ebp)$/;"	l
f01069fe	obj/kern/kernel.asm	/^f01069fe:	0f b7 f8             	movzwl %ax,%edi$/;"	l
f0106a01	obj/kern/kernel.asm	/^f0106a01:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106a06	obj/kern/kernel.asm	/^f0106a06:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106a0b	obj/kern/kernel.asm	/^f0106a0b:	eb 0d                	jmp    f0106a1a <mp_init+0x140>$/;"	l
f0106a0d	obj/kern/kernel.asm	/^f0106a0d:	0f b6 8c 30 00 00 00 	movzbl -0x10000000(%eax,%esi,1),%ecx$/;"	l
f0106a14	obj/kern/kernel.asm	/^f0106a14:	f0 $/;"	l
f0106a15	obj/kern/kernel.asm	/^f0106a15:	01 ca                	add    %ecx,%edx$/;"	l
f0106a17	obj/kern/kernel.asm	/^f0106a17:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106a1a	obj/kern/kernel.asm	/^f0106a1a:	39 c7                	cmp    %eax,%edi$/;"	l
f0106a1c	obj/kern/kernel.asm	/^f0106a1c:	7f ef                	jg     f0106a0d <mp_init+0x133>$/;"	l
f0106a1e	obj/kern/kernel.asm	/^f0106a1e:	84 d2                	test   %dl,%dl$/;"	l
f0106a20	obj/kern/kernel.asm	/^f0106a20:	74 11                	je     f0106a33 <mp_init+0x159>$/;"	l
f0106a22	obj/kern/kernel.asm	/^f0106a22:	c7 04 24 e4 9c 10 f0 	movl   $0xf0109ce4,(%esp)$/;"	l
f0106a29	obj/kern/kernel.asm	/^f0106a29:	e8 9e d5 ff ff       	call   f0103fcc <cprintf>$/;"	l
f0106a2e	obj/kern/kernel.asm	/^f0106a2e:	e9 96 01 00 00       	jmp    f0106bc9 <mp_init+0x2ef>$/;"	l
f0106a33	obj/kern/kernel.asm	/^f0106a33:	0f b6 43 06          	movzbl 0x6(%ebx),%eax$/;"	l
f0106a37	obj/kern/kernel.asm	/^f0106a37:	3c 04                	cmp    $0x4,%al$/;"	l
f0106a39	obj/kern/kernel.asm	/^f0106a39:	74 1f                	je     f0106a5a <mp_init+0x180>$/;"	l
f0106a3b	obj/kern/kernel.asm	/^f0106a3b:	3c 01                	cmp    $0x1,%al$/;"	l
f0106a3d	obj/kern/kernel.asm	/^f0106a3d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0106a40	obj/kern/kernel.asm	/^f0106a40:	74 18                	je     f0106a5a <mp_init+0x180>$/;"	l
f0106a42	obj/kern/kernel.asm	/^f0106a42:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0106a45	obj/kern/kernel.asm	/^f0106a45:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106a49	obj/kern/kernel.asm	/^f0106a49:	c7 04 24 08 9d 10 f0 	movl   $0xf0109d08,(%esp)$/;"	l
f0106a50	obj/kern/kernel.asm	/^f0106a50:	e8 77 d5 ff ff       	call   f0103fcc <cprintf>$/;"	l
f0106a55	obj/kern/kernel.asm	/^f0106a55:	e9 6f 01 00 00       	jmp    f0106bc9 <mp_init+0x2ef>$/;"	l
f0106a5a	obj/kern/kernel.asm	/^f0106a5a:	0f b7 73 28          	movzwl 0x28(%ebx),%esi$/;"	l
f0106a5e	obj/kern/kernel.asm	/^f0106a5e:	0f b7 7d e2          	movzwl -0x1e(%ebp),%edi$/;"	l
f0106a62	obj/kern/kernel.asm	/^f0106a62:	01 df                	add    %ebx,%edi$/;"	l
f0106a64	obj/kern/kernel.asm	/^f0106a64:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106a69	obj/kern/kernel.asm	/^f0106a69:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106a6e	obj/kern/kernel.asm	/^f0106a6e:	eb 09                	jmp    f0106a79 <mp_init+0x19f>$/;"	l
f0106a70	obj/kern/kernel.asm	/^f0106a70:	0f b6 0c 07          	movzbl (%edi,%eax,1),%ecx$/;"	l
f0106a74	obj/kern/kernel.asm	/^f0106a74:	01 ca                	add    %ecx,%edx$/;"	l
f0106a76	obj/kern/kernel.asm	/^f0106a76:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106a79	obj/kern/kernel.asm	/^f0106a79:	39 c6                	cmp    %eax,%esi$/;"	l
f0106a7b	obj/kern/kernel.asm	/^f0106a7b:	7f f3                	jg     f0106a70 <mp_init+0x196>$/;"	l
f0106a7d	obj/kern/kernel.asm	/^f0106a7d:	02 53 2a             	add    0x2a(%ebx),%dl$/;"	l
f0106a80	obj/kern/kernel.asm	/^f0106a80:	84 d2                	test   %dl,%dl$/;"	l
f0106a82	obj/kern/kernel.asm	/^f0106a82:	74 11                	je     f0106a95 <mp_init+0x1bb>$/;"	l
f0106a84	obj/kern/kernel.asm	/^f0106a84:	c7 04 24 28 9d 10 f0 	movl   $0xf0109d28,(%esp)$/;"	l
f0106a8b	obj/kern/kernel.asm	/^f0106a8b:	e8 3c d5 ff ff       	call   f0103fcc <cprintf>$/;"	l
f0106a90	obj/kern/kernel.asm	/^f0106a90:	e9 34 01 00 00       	jmp    f0106bc9 <mp_init+0x2ef>$/;"	l
f0106a95	obj/kern/kernel.asm	/^f0106a95:	85 db                	test   %ebx,%ebx$/;"	l
f0106a97	obj/kern/kernel.asm	/^f0106a97:	0f 84 2c 01 00 00    	je     f0106bc9 <mp_init+0x2ef>$/;"	l
f0106a9d	obj/kern/kernel.asm	/^f0106a9d:	c7 05 00 a0 2b f0 01 	movl   $0x1,0xf02ba000$/;"	l
f0106aa4	obj/kern/kernel.asm	/^f0106aa4:	00 00 00 $/;"	l
f0106aa7	obj/kern/kernel.asm	/^f0106aa7:	8b 43 24             	mov    0x24(%ebx),%eax$/;"	l
f0106aaa	obj/kern/kernel.asm	/^f0106aaa:	a3 00 b0 2f f0       	mov    %eax,0xf02fb000$/;"	l
f0106aaf	obj/kern/kernel.asm	/^f0106aaf:	8d 7b 2c             	lea    0x2c(%ebx),%edi$/;"	l
f0106ab2	obj/kern/kernel.asm	/^f0106ab2:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0106ab7	obj/kern/kernel.asm	/^f0106ab7:	e9 86 00 00 00       	jmp    f0106b42 <mp_init+0x268>$/;"	l
f0106abc	obj/kern/kernel.asm	/^f0106abc:	0f b6 07             	movzbl (%edi),%eax$/;"	l
f0106abf	obj/kern/kernel.asm	/^f0106abf:	84 c0                	test   %al,%al$/;"	l
f0106ac1	obj/kern/kernel.asm	/^f0106ac1:	74 06                	je     f0106ac9 <mp_init+0x1ef>$/;"	l
f0106ac3	obj/kern/kernel.asm	/^f0106ac3:	3c 04                	cmp    $0x4,%al$/;"	l
f0106ac5	obj/kern/kernel.asm	/^f0106ac5:	77 57                	ja     f0106b1e <mp_init+0x244>$/;"	l
f0106ac7	obj/kern/kernel.asm	/^f0106ac7:	eb 50                	jmp    f0106b19 <mp_init+0x23f>$/;"	l
f0106ac9	obj/kern/kernel.asm	/^f0106ac9:	f6 47 03 02          	testb  $0x2,0x3(%edi)$/;"	l
f0106acd	obj/kern/kernel.asm	/^f0106acd:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0106ad0	obj/kern/kernel.asm	/^f0106ad0:	74 11                	je     f0106ae3 <mp_init+0x209>$/;"	l
f0106ad2	obj/kern/kernel.asm	/^f0106ad2:	6b 05 c4 a3 2b f0 74 	imul   $0x74,0xf02ba3c4,%eax$/;"	l
f0106ad9	obj/kern/kernel.asm	/^f0106ad9:	05 20 a0 2b f0       	add    $0xf02ba020,%eax$/;"	l
f0106ade	obj/kern/kernel.asm	/^f0106ade:	a3 c0 a3 2b f0       	mov    %eax,0xf02ba3c0$/;"	l
f0106ae3	obj/kern/kernel.asm	/^f0106ae3:	a1 c4 a3 2b f0       	mov    0xf02ba3c4,%eax$/;"	l
f0106ae8	obj/kern/kernel.asm	/^f0106ae8:	83 f8 07             	cmp    $0x7,%eax$/;"	l
f0106aeb	obj/kern/kernel.asm	/^f0106aeb:	7f 13                	jg     f0106b00 <mp_init+0x226>$/;"	l
f0106aed	obj/kern/kernel.asm	/^f0106aed:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0106af0	obj/kern/kernel.asm	/^f0106af0:	88 82 20 a0 2b f0    	mov    %al,-0xfd45fe0(%edx)$/;"	l
f0106af6	obj/kern/kernel.asm	/^f0106af6:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106af9	obj/kern/kernel.asm	/^f0106af9:	a3 c4 a3 2b f0       	mov    %eax,0xf02ba3c4$/;"	l
f0106afe	obj/kern/kernel.asm	/^f0106afe:	eb 14                	jmp    f0106b14 <mp_init+0x23a>$/;"	l
f0106b00	obj/kern/kernel.asm	/^f0106b00:	0f b6 47 01          	movzbl 0x1(%edi),%eax$/;"	l
f0106b04	obj/kern/kernel.asm	/^f0106b04:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106b08	obj/kern/kernel.asm	/^f0106b08:	c7 04 24 58 9d 10 f0 	movl   $0xf0109d58,(%esp)$/;"	l
f0106b0f	obj/kern/kernel.asm	/^f0106b0f:	e8 b8 d4 ff ff       	call   f0103fcc <cprintf>$/;"	l
f0106b14	obj/kern/kernel.asm	/^f0106b14:	83 c7 14             	add    $0x14,%edi$/;"	l
f0106b17	obj/kern/kernel.asm	/^f0106b17:	eb 26                	jmp    f0106b3f <mp_init+0x265>$/;"	l
f0106b19	obj/kern/kernel.asm	/^f0106b19:	83 c7 08             	add    $0x8,%edi$/;"	l
f0106b1c	obj/kern/kernel.asm	/^f0106b1c:	eb 21                	jmp    f0106b3f <mp_init+0x265>$/;"	l
f0106b1e	obj/kern/kernel.asm	/^f0106b1e:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0106b21	obj/kern/kernel.asm	/^f0106b21:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106b25	obj/kern/kernel.asm	/^f0106b25:	c7 04 24 80 9d 10 f0 	movl   $0xf0109d80,(%esp)$/;"	l
f0106b2c	obj/kern/kernel.asm	/^f0106b2c:	e8 9b d4 ff ff       	call   f0103fcc <cprintf>$/;"	l
f0106b31	obj/kern/kernel.asm	/^f0106b31:	c7 05 00 a0 2b f0 00 	movl   $0x0,0xf02ba000$/;"	l
f0106b38	obj/kern/kernel.asm	/^f0106b38:	00 00 00 $/;"	l
f0106b3b	obj/kern/kernel.asm	/^f0106b3b:	0f b7 73 22          	movzwl 0x22(%ebx),%esi$/;"	l
f0106b3f	obj/kern/kernel.asm	/^f0106b3f:	83 c6 01             	add    $0x1,%esi$/;"	l
f0106b42	obj/kern/kernel.asm	/^f0106b42:	0f b7 43 22          	movzwl 0x22(%ebx),%eax$/;"	l
f0106b46	obj/kern/kernel.asm	/^f0106b46:	39 c6                	cmp    %eax,%esi$/;"	l
f0106b48	obj/kern/kernel.asm	/^f0106b48:	0f 82 6e ff ff ff    	jb     f0106abc <mp_init+0x1e2>$/;"	l
f0106b4e	obj/kern/kernel.asm	/^f0106b4e:	a1 c0 a3 2b f0       	mov    0xf02ba3c0,%eax$/;"	l
f0106b53	obj/kern/kernel.asm	/^f0106b53:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)$/;"	l
f0106b5a	obj/kern/kernel.asm	/^f0106b5a:	83 3d 00 a0 2b f0 00 	cmpl   $0x0,0xf02ba000$/;"	l
f0106b61	obj/kern/kernel.asm	/^f0106b61:	75 22                	jne    f0106b85 <mp_init+0x2ab>$/;"	l
f0106b63	obj/kern/kernel.asm	/^f0106b63:	c7 05 c4 a3 2b f0 01 	movl   $0x1,0xf02ba3c4$/;"	l
f0106b6a	obj/kern/kernel.asm	/^f0106b6a:	00 00 00 $/;"	l
f0106b6d	obj/kern/kernel.asm	/^f0106b6d:	c7 05 00 b0 2f f0 00 	movl   $0x0,0xf02fb000$/;"	l
f0106b74	obj/kern/kernel.asm	/^f0106b74:	00 00 00 $/;"	l
f0106b77	obj/kern/kernel.asm	/^f0106b77:	c7 04 24 a0 9d 10 f0 	movl   $0xf0109da0,(%esp)$/;"	l
f0106b7e	obj/kern/kernel.asm	/^f0106b7e:	e8 49 d4 ff ff       	call   f0103fcc <cprintf>$/;"	l
f0106b83	obj/kern/kernel.asm	/^f0106b83:	eb 44                	jmp    f0106bc9 <mp_init+0x2ef>$/;"	l
f0106b85	obj/kern/kernel.asm	/^f0106b85:	8b 15 c4 a3 2b f0    	mov    0xf02ba3c4,%edx$/;"	l
f0106b8b	obj/kern/kernel.asm	/^f0106b8b:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0106b8f	obj/kern/kernel.asm	/^f0106b8f:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0106b92	obj/kern/kernel.asm	/^f0106b92:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106b96	obj/kern/kernel.asm	/^f0106b96:	c7 04 24 27 9e 10 f0 	movl   $0xf0109e27,(%esp)$/;"	l
f0106b9d	obj/kern/kernel.asm	/^f0106b9d:	e8 2a d4 ff ff       	call   f0103fcc <cprintf>$/;"	l
f0106ba2	obj/kern/kernel.asm	/^f0106ba2:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0106ba5	obj/kern/kernel.asm	/^f0106ba5:	80 78 0c 00          	cmpb   $0x0,0xc(%eax)$/;"	l
f0106ba9	obj/kern/kernel.asm	/^f0106ba9:	74 1e                	je     f0106bc9 <mp_init+0x2ef>$/;"	l
f0106bab	obj/kern/kernel.asm	/^f0106bab:	c7 04 24 cc 9d 10 f0 	movl   $0xf0109dcc,(%esp)$/;"	l
f0106bb2	obj/kern/kernel.asm	/^f0106bb2:	e8 15 d4 ff ff       	call   f0103fcc <cprintf>$/;"	l
f0106bb7	obj/kern/kernel.asm	/^f0106bb7:	ba 22 00 00 00       	mov    $0x22,%edx$/;"	l
f0106bbc	obj/kern/kernel.asm	/^f0106bbc:	b8 70 00 00 00       	mov    $0x70,%eax$/;"	l
f0106bc1	obj/kern/kernel.asm	/^f0106bc1:	ee                   	out    %al,(%dx)$/;"	l
f0106bc2	obj/kern/kernel.asm	/^f0106bc2:	b2 23                	mov    $0x23,%dl$/;"	l
f0106bc4	obj/kern/kernel.asm	/^f0106bc4:	ec                   	in     (%dx),%al$/;"	l
f0106bc5	obj/kern/kernel.asm	/^f0106bc5:	83 c8 01             	or     $0x1,%eax$/;"	l
f0106bc8	obj/kern/kernel.asm	/^f0106bc8:	ee                   	out    %al,(%dx)$/;"	l
f0106bc9	obj/kern/kernel.asm	/^f0106bc9:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0106bcc	obj/kern/kernel.asm	/^f0106bcc:	5b                   	pop    %ebx$/;"	l
f0106bcd	obj/kern/kernel.asm	/^f0106bcd:	5e                   	pop    %esi$/;"	l
f0106bce	obj/kern/kernel.asm	/^f0106bce:	5f                   	pop    %edi$/;"	l
f0106bcf	obj/kern/kernel.asm	/^f0106bcf:	5d                   	pop    %ebp$/;"	l
f0106bd0	obj/kern/kernel.asm	/^f0106bd0:	c3                   	ret    $/;"	l
f0106bd1	obj/kern/kernel.asm	/^f0106bd1 <lapicw>:$/;"	l
f0106bd1	obj/kern/kernel.asm	/^f0106bd1:	55                   	push   %ebp$/;"	l
f0106bd2	obj/kern/kernel.asm	/^f0106bd2:	89 e5                	mov    %esp,%ebp$/;"	l
f0106bd4	obj/kern/kernel.asm	/^f0106bd4:	8b 0d 04 b0 2f f0    	mov    0xf02fb004,%ecx$/;"	l
f0106bda	obj/kern/kernel.asm	/^f0106bda:	8d 04 81             	lea    (%ecx,%eax,4),%eax$/;"	l
f0106bdd	obj/kern/kernel.asm	/^f0106bdd:	89 10                	mov    %edx,(%eax)$/;"	l
f0106bdf	obj/kern/kernel.asm	/^f0106bdf:	a1 04 b0 2f f0       	mov    0xf02fb004,%eax$/;"	l
f0106be4	obj/kern/kernel.asm	/^f0106be4:	8b 40 20             	mov    0x20(%eax),%eax$/;"	l
f0106be7	obj/kern/kernel.asm	/^f0106be7:	5d                   	pop    %ebp$/;"	l
f0106be8	obj/kern/kernel.asm	/^f0106be8:	c3                   	ret    $/;"	l
f0106be9	obj/kern/kernel.asm	/^f0106be9 <cpunum>:$/;"	l
f0106be9	obj/kern/kernel.asm	/^f0106be9:	55                   	push   %ebp$/;"	l
f0106bea	obj/kern/kernel.asm	/^f0106bea:	89 e5                	mov    %esp,%ebp$/;"	l
f0106bec	obj/kern/kernel.asm	/^f0106bec:	a1 04 b0 2f f0       	mov    0xf02fb004,%eax$/;"	l
f0106bf1	obj/kern/kernel.asm	/^f0106bf1:	85 c0                	test   %eax,%eax$/;"	l
f0106bf3	obj/kern/kernel.asm	/^f0106bf3:	74 08                	je     f0106bfd <cpunum+0x14>$/;"	l
f0106bf5	obj/kern/kernel.asm	/^f0106bf5:	8b 40 20             	mov    0x20(%eax),%eax$/;"	l
f0106bf8	obj/kern/kernel.asm	/^f0106bf8:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f0106bfb	obj/kern/kernel.asm	/^f0106bfb:	eb 05                	jmp    f0106c02 <cpunum+0x19>$/;"	l
f0106bfd	obj/kern/kernel.asm	/^f0106bfd:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106c02	obj/kern/kernel.asm	/^f0106c02:	5d                   	pop    %ebp$/;"	l
f0106c03	obj/kern/kernel.asm	/^f0106c03:	c3                   	ret    $/;"	l
f0106c04	obj/kern/kernel.asm	/^f0106c04 <lapic_init>:$/;"	l
f0106c04	obj/kern/kernel.asm	/^f0106c04:	a1 00 b0 2f f0       	mov    0xf02fb000,%eax$/;"	l
f0106c09	obj/kern/kernel.asm	/^f0106c09:	85 c0                	test   %eax,%eax$/;"	l
f0106c0b	obj/kern/kernel.asm	/^f0106c0b:	0f 84 23 01 00 00    	je     f0106d34 <lapic_init+0x130>$/;"	l
f0106c11	obj/kern/kernel.asm	/^f0106c11:	55                   	push   %ebp$/;"	l
f0106c12	obj/kern/kernel.asm	/^f0106c12:	89 e5                	mov    %esp,%ebp$/;"	l
f0106c14	obj/kern/kernel.asm	/^f0106c14:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0106c17	obj/kern/kernel.asm	/^f0106c17:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0106c1e	obj/kern/kernel.asm	/^f0106c1e:	00 $/;"	l
f0106c1f	obj/kern/kernel.asm	/^f0106c1f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106c22	obj/kern/kernel.asm	/^f0106c22:	e8 ce a8 ff ff       	call   f01014f5 <mmio_map_region>$/;"	l
f0106c27	obj/kern/kernel.asm	/^f0106c27:	a3 04 b0 2f f0       	mov    %eax,0xf02fb004$/;"	l
f0106c2c	obj/kern/kernel.asm	/^f0106c2c:	ba 27 01 00 00       	mov    $0x127,%edx$/;"	l
f0106c31	obj/kern/kernel.asm	/^f0106c31:	b8 3c 00 00 00       	mov    $0x3c,%eax$/;"	l
f0106c36	obj/kern/kernel.asm	/^f0106c36:	e8 96 ff ff ff       	call   f0106bd1 <lapicw>$/;"	l
f0106c3b	obj/kern/kernel.asm	/^f0106c3b:	ba 0b 00 00 00       	mov    $0xb,%edx$/;"	l
f0106c40	obj/kern/kernel.asm	/^f0106c40:	b8 f8 00 00 00       	mov    $0xf8,%eax$/;"	l
f0106c45	obj/kern/kernel.asm	/^f0106c45:	e8 87 ff ff ff       	call   f0106bd1 <lapicw>$/;"	l
f0106c4a	obj/kern/kernel.asm	/^f0106c4a:	ba 20 00 02 00       	mov    $0x20020,%edx$/;"	l
f0106c4f	obj/kern/kernel.asm	/^f0106c4f:	b8 c8 00 00 00       	mov    $0xc8,%eax$/;"	l
f0106c54	obj/kern/kernel.asm	/^f0106c54:	e8 78 ff ff ff       	call   f0106bd1 <lapicw>$/;"	l
f0106c59	obj/kern/kernel.asm	/^f0106c59:	ba 80 96 98 00       	mov    $0x989680,%edx$/;"	l
f0106c5e	obj/kern/kernel.asm	/^f0106c5e:	b8 e0 00 00 00       	mov    $0xe0,%eax$/;"	l
f0106c63	obj/kern/kernel.asm	/^f0106c63:	e8 69 ff ff ff       	call   f0106bd1 <lapicw>$/;"	l
f0106c68	obj/kern/kernel.asm	/^f0106c68:	e8 7c ff ff ff       	call   f0106be9 <cpunum>$/;"	l
f0106c6d	obj/kern/kernel.asm	/^f0106c6d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0106c70	obj/kern/kernel.asm	/^f0106c70:	05 20 a0 2b f0       	add    $0xf02ba020,%eax$/;"	l
f0106c75	obj/kern/kernel.asm	/^f0106c75:	39 05 c0 a3 2b f0    	cmp    %eax,0xf02ba3c0$/;"	l
f0106c7b	obj/kern/kernel.asm	/^f0106c7b:	74 0f                	je     f0106c8c <lapic_init+0x88>$/;"	l
f0106c7d	obj/kern/kernel.asm	/^f0106c7d:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0106c82	obj/kern/kernel.asm	/^f0106c82:	b8 d4 00 00 00       	mov    $0xd4,%eax$/;"	l
f0106c87	obj/kern/kernel.asm	/^f0106c87:	e8 45 ff ff ff       	call   f0106bd1 <lapicw>$/;"	l
f0106c8c	obj/kern/kernel.asm	/^f0106c8c:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0106c91	obj/kern/kernel.asm	/^f0106c91:	b8 d8 00 00 00       	mov    $0xd8,%eax$/;"	l
f0106c96	obj/kern/kernel.asm	/^f0106c96:	e8 36 ff ff ff       	call   f0106bd1 <lapicw>$/;"	l
f0106c9b	obj/kern/kernel.asm	/^f0106c9b:	a1 04 b0 2f f0       	mov    0xf02fb004,%eax$/;"	l
f0106ca0	obj/kern/kernel.asm	/^f0106ca0:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
f0106ca3	obj/kern/kernel.asm	/^f0106ca3:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0106ca6	obj/kern/kernel.asm	/^f0106ca6:	3c 03                	cmp    $0x3,%al$/;"	l
f0106ca8	obj/kern/kernel.asm	/^f0106ca8:	76 0f                	jbe    f0106cb9 <lapic_init+0xb5>$/;"	l
f0106caa	obj/kern/kernel.asm	/^f0106caa:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0106caf	obj/kern/kernel.asm	/^f0106caf:	b8 d0 00 00 00       	mov    $0xd0,%eax$/;"	l
f0106cb4	obj/kern/kernel.asm	/^f0106cb4:	e8 18 ff ff ff       	call   f0106bd1 <lapicw>$/;"	l
f0106cb9	obj/kern/kernel.asm	/^f0106cb9:	ba 33 00 00 00       	mov    $0x33,%edx$/;"	l
f0106cbe	obj/kern/kernel.asm	/^f0106cbe:	b8 dc 00 00 00       	mov    $0xdc,%eax$/;"	l
f0106cc3	obj/kern/kernel.asm	/^f0106cc3:	e8 09 ff ff ff       	call   f0106bd1 <lapicw>$/;"	l
f0106cc8	obj/kern/kernel.asm	/^f0106cc8:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106ccd	obj/kern/kernel.asm	/^f0106ccd:	b8 a0 00 00 00       	mov    $0xa0,%eax$/;"	l
f0106cd2	obj/kern/kernel.asm	/^f0106cd2:	e8 fa fe ff ff       	call   f0106bd1 <lapicw>$/;"	l
f0106cd7	obj/kern/kernel.asm	/^f0106cd7:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106cdc	obj/kern/kernel.asm	/^f0106cdc:	b8 a0 00 00 00       	mov    $0xa0,%eax$/;"	l
f0106ce1	obj/kern/kernel.asm	/^f0106ce1:	e8 eb fe ff ff       	call   f0106bd1 <lapicw>$/;"	l
f0106ce6	obj/kern/kernel.asm	/^f0106ce6:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106ceb	obj/kern/kernel.asm	/^f0106ceb:	b8 2c 00 00 00       	mov    $0x2c,%eax$/;"	l
f0106cf0	obj/kern/kernel.asm	/^f0106cf0:	e8 dc fe ff ff       	call   f0106bd1 <lapicw>$/;"	l
f0106cf5	obj/kern/kernel.asm	/^f0106cf5:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106cfa	obj/kern/kernel.asm	/^f0106cfa:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0106cff	obj/kern/kernel.asm	/^f0106cff:	e8 cd fe ff ff       	call   f0106bd1 <lapicw>$/;"	l
f0106d04	obj/kern/kernel.asm	/^f0106d04:	ba 00 85 08 00       	mov    $0x88500,%edx$/;"	l
f0106d09	obj/kern/kernel.asm	/^f0106d09:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106d0e	obj/kern/kernel.asm	/^f0106d0e:	e8 be fe ff ff       	call   f0106bd1 <lapicw>$/;"	l
f0106d13	obj/kern/kernel.asm	/^f0106d13:	8b 15 04 b0 2f f0    	mov    0xf02fb004,%edx$/;"	l
f0106d19	obj/kern/kernel.asm	/^f0106d19:	8b 82 00 03 00 00    	mov    0x300(%edx),%eax$/;"	l
f0106d1f	obj/kern/kernel.asm	/^f0106d1f:	f6 c4 10             	test   $0x10,%ah$/;"	l
f0106d22	obj/kern/kernel.asm	/^f0106d22:	75 f5                	jne    f0106d19 <lapic_init+0x115>$/;"	l
f0106d24	obj/kern/kernel.asm	/^f0106d24:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106d29	obj/kern/kernel.asm	/^f0106d29:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0106d2e	obj/kern/kernel.asm	/^f0106d2e:	e8 9e fe ff ff       	call   f0106bd1 <lapicw>$/;"	l
f0106d33	obj/kern/kernel.asm	/^f0106d33:	c9                   	leave  $/;"	l
f0106d34	obj/kern/kernel.asm	/^f0106d34:	f3 c3                	repz ret $/;"	l
f0106d36	obj/kern/kernel.asm	/^f0106d36 <lapic_eoi>:$/;"	l
f0106d36	obj/kern/kernel.asm	/^f0106d36:	83 3d 04 b0 2f f0 00 	cmpl   $0x0,0xf02fb004$/;"	l
f0106d3d	obj/kern/kernel.asm	/^f0106d3d:	74 13                	je     f0106d52 <lapic_eoi+0x1c>$/;"	l
f0106d3f	obj/kern/kernel.asm	/^f0106d3f:	55                   	push   %ebp$/;"	l
f0106d40	obj/kern/kernel.asm	/^f0106d40:	89 e5                	mov    %esp,%ebp$/;"	l
f0106d42	obj/kern/kernel.asm	/^f0106d42:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106d47	obj/kern/kernel.asm	/^f0106d47:	b8 2c 00 00 00       	mov    $0x2c,%eax$/;"	l
f0106d4c	obj/kern/kernel.asm	/^f0106d4c:	e8 80 fe ff ff       	call   f0106bd1 <lapicw>$/;"	l
f0106d51	obj/kern/kernel.asm	/^f0106d51:	5d                   	pop    %ebp$/;"	l
f0106d52	obj/kern/kernel.asm	/^f0106d52:	f3 c3                	repz ret $/;"	l
f0106d54	obj/kern/kernel.asm	/^f0106d54 <lapic_startap>:$/;"	l
f0106d54	obj/kern/kernel.asm	/^f0106d54:	55                   	push   %ebp$/;"	l
f0106d55	obj/kern/kernel.asm	/^f0106d55:	89 e5                	mov    %esp,%ebp$/;"	l
f0106d57	obj/kern/kernel.asm	/^f0106d57:	56                   	push   %esi$/;"	l
f0106d58	obj/kern/kernel.asm	/^f0106d58:	53                   	push   %ebx$/;"	l
f0106d59	obj/kern/kernel.asm	/^f0106d59:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0106d5c	obj/kern/kernel.asm	/^f0106d5c:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0106d5f	obj/kern/kernel.asm	/^f0106d5f:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0106d62	obj/kern/kernel.asm	/^f0106d62:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0106d67	obj/kern/kernel.asm	/^f0106d67:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f0106d6c	obj/kern/kernel.asm	/^f0106d6c:	ee                   	out    %al,(%dx)$/;"	l
f0106d6d	obj/kern/kernel.asm	/^f0106d6d:	b2 71                	mov    $0x71,%dl$/;"	l
f0106d6f	obj/kern/kernel.asm	/^f0106d6f:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0106d74	obj/kern/kernel.asm	/^f0106d74:	ee                   	out    %al,(%dx)$/;"	l
f0106d75	obj/kern/kernel.asm	/^f0106d75:	83 3d 94 9e 2b f0 00 	cmpl   $0x0,0xf02b9e94$/;"	l
f0106d7c	obj/kern/kernel.asm	/^f0106d7c:	75 24                	jne    f0106da2 <lapic_startap+0x4e>$/;"	l
f0106d7e	obj/kern/kernel.asm	/^f0106d7e:	c7 44 24 0c 67 04 00 	movl   $0x467,0xc(%esp)$/;"	l
f0106d85	obj/kern/kernel.asm	/^f0106d85:	00 $/;"	l
f0106d86	obj/kern/kernel.asm	/^f0106d86:	c7 44 24 08 a4 80 10 	movl   $0xf01080a4,0x8(%esp)$/;"	l
f0106d8d	obj/kern/kernel.asm	/^f0106d8d:	f0 $/;"	l
f0106d8e	obj/kern/kernel.asm	/^f0106d8e:	c7 44 24 04 98 00 00 	movl   $0x98,0x4(%esp)$/;"	l
f0106d95	obj/kern/kernel.asm	/^f0106d95:	00 $/;"	l
f0106d96	obj/kern/kernel.asm	/^f0106d96:	c7 04 24 44 9e 10 f0 	movl   $0xf0109e44,(%esp)$/;"	l
f0106d9d	obj/kern/kernel.asm	/^f0106d9d:	e8 9e 92 ff ff       	call   f0100040 <_panic>$/;"	l
f0106da2	obj/kern/kernel.asm	/^f0106da2:	66 c7 05 67 04 00 f0 	movw   $0x0,0xf0000467$/;"	l
f0106da9	obj/kern/kernel.asm	/^f0106da9:	00 00 $/;"	l
f0106dab	obj/kern/kernel.asm	/^f0106dab:	89 f0                	mov    %esi,%eax$/;"	l
f0106dad	obj/kern/kernel.asm	/^f0106dad:	c1 e8 04             	shr    $0x4,%eax$/;"	l
f0106db0	obj/kern/kernel.asm	/^f0106db0:	66 a3 69 04 00 f0    	mov    %ax,0xf0000469$/;"	l
f0106db6	obj/kern/kernel.asm	/^f0106db6:	c1 e3 18             	shl    $0x18,%ebx$/;"	l
f0106db9	obj/kern/kernel.asm	/^f0106db9:	89 da                	mov    %ebx,%edx$/;"	l
f0106dbb	obj/kern/kernel.asm	/^f0106dbb:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0106dc0	obj/kern/kernel.asm	/^f0106dc0:	e8 0c fe ff ff       	call   f0106bd1 <lapicw>$/;"	l
f0106dc5	obj/kern/kernel.asm	/^f0106dc5:	ba 00 c5 00 00       	mov    $0xc500,%edx$/;"	l
f0106dca	obj/kern/kernel.asm	/^f0106dca:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106dcf	obj/kern/kernel.asm	/^f0106dcf:	e8 fd fd ff ff       	call   f0106bd1 <lapicw>$/;"	l
f0106dd4	obj/kern/kernel.asm	/^f0106dd4:	ba 00 85 00 00       	mov    $0x8500,%edx$/;"	l
f0106dd9	obj/kern/kernel.asm	/^f0106dd9:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106dde	obj/kern/kernel.asm	/^f0106dde:	e8 ee fd ff ff       	call   f0106bd1 <lapicw>$/;"	l
f0106de3	obj/kern/kernel.asm	/^f0106de3:	c1 ee 0c             	shr    $0xc,%esi$/;"	l
f0106de6	obj/kern/kernel.asm	/^f0106de6:	81 ce 00 06 00 00    	or     $0x600,%esi$/;"	l
f0106dec	obj/kern/kernel.asm	/^f0106dec:	89 da                	mov    %ebx,%edx$/;"	l
f0106dee	obj/kern/kernel.asm	/^f0106dee:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0106df3	obj/kern/kernel.asm	/^f0106df3:	e8 d9 fd ff ff       	call   f0106bd1 <lapicw>$/;"	l
f0106df8	obj/kern/kernel.asm	/^f0106df8:	89 f2                	mov    %esi,%edx$/;"	l
f0106dfa	obj/kern/kernel.asm	/^f0106dfa:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106dff	obj/kern/kernel.asm	/^f0106dff:	e8 cd fd ff ff       	call   f0106bd1 <lapicw>$/;"	l
f0106e04	obj/kern/kernel.asm	/^f0106e04:	89 da                	mov    %ebx,%edx$/;"	l
f0106e06	obj/kern/kernel.asm	/^f0106e06:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0106e0b	obj/kern/kernel.asm	/^f0106e0b:	e8 c1 fd ff ff       	call   f0106bd1 <lapicw>$/;"	l
f0106e10	obj/kern/kernel.asm	/^f0106e10:	89 f2                	mov    %esi,%edx$/;"	l
f0106e12	obj/kern/kernel.asm	/^f0106e12:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106e17	obj/kern/kernel.asm	/^f0106e17:	e8 b5 fd ff ff       	call   f0106bd1 <lapicw>$/;"	l
f0106e1c	obj/kern/kernel.asm	/^f0106e1c:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106e1f	obj/kern/kernel.asm	/^f0106e1f:	5b                   	pop    %ebx$/;"	l
f0106e20	obj/kern/kernel.asm	/^f0106e20:	5e                   	pop    %esi$/;"	l
f0106e21	obj/kern/kernel.asm	/^f0106e21:	5d                   	pop    %ebp$/;"	l
f0106e22	obj/kern/kernel.asm	/^f0106e22:	c3                   	ret    $/;"	l
f0106e23	obj/kern/kernel.asm	/^f0106e23 <lapic_ipi>:$/;"	l
f0106e23	obj/kern/kernel.asm	/^f0106e23:	55                   	push   %ebp$/;"	l
f0106e24	obj/kern/kernel.asm	/^f0106e24:	89 e5                	mov    %esp,%ebp$/;"	l
f0106e26	obj/kern/kernel.asm	/^f0106e26:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0106e29	obj/kern/kernel.asm	/^f0106e29:	81 ca 00 00 0c 00    	or     $0xc0000,%edx$/;"	l
f0106e2f	obj/kern/kernel.asm	/^f0106e2f:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106e34	obj/kern/kernel.asm	/^f0106e34:	e8 98 fd ff ff       	call   f0106bd1 <lapicw>$/;"	l
f0106e39	obj/kern/kernel.asm	/^f0106e39:	8b 15 04 b0 2f f0    	mov    0xf02fb004,%edx$/;"	l
f0106e3f	obj/kern/kernel.asm	/^f0106e3f:	8b 82 00 03 00 00    	mov    0x300(%edx),%eax$/;"	l
f0106e45	obj/kern/kernel.asm	/^f0106e45:	f6 c4 10             	test   $0x10,%ah$/;"	l
f0106e48	obj/kern/kernel.asm	/^f0106e48:	75 f5                	jne    f0106e3f <lapic_ipi+0x1c>$/;"	l
f0106e4a	obj/kern/kernel.asm	/^f0106e4a:	5d                   	pop    %ebp$/;"	l
f0106e4b	obj/kern/kernel.asm	/^f0106e4b:	c3                   	ret    $/;"	l
f0106e4c	obj/kern/kernel.asm	/^f0106e4c <__spin_initlock>:$/;"	l
f0106e4c	obj/kern/kernel.asm	/^f0106e4c:	55                   	push   %ebp$/;"	l
f0106e4d	obj/kern/kernel.asm	/^f0106e4d:	89 e5                	mov    %esp,%ebp$/;"	l
f0106e4f	obj/kern/kernel.asm	/^f0106e4f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106e52	obj/kern/kernel.asm	/^f0106e52:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0106e58	obj/kern/kernel.asm	/^f0106e58:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0106e5b	obj/kern/kernel.asm	/^f0106e5b:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
f0106e5e	obj/kern/kernel.asm	/^f0106e5e:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
f0106e65	obj/kern/kernel.asm	/^f0106e65:	5d                   	pop    %ebp$/;"	l
f0106e66	obj/kern/kernel.asm	/^f0106e66:	c3                   	ret    $/;"	l
f0106e67	obj/kern/kernel.asm	/^f0106e67 <spin_lock>:$/;"	l
f0106e67	obj/kern/kernel.asm	/^f0106e67:	55                   	push   %ebp$/;"	l
f0106e68	obj/kern/kernel.asm	/^f0106e68:	89 e5                	mov    %esp,%ebp$/;"	l
f0106e6a	obj/kern/kernel.asm	/^f0106e6a:	56                   	push   %esi$/;"	l
f0106e6b	obj/kern/kernel.asm	/^f0106e6b:	53                   	push   %ebx$/;"	l
f0106e6c	obj/kern/kernel.asm	/^f0106e6c:	83 ec 20             	sub    $0x20,%esp$/;"	l
f0106e6f	obj/kern/kernel.asm	/^f0106e6f:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0106e72	obj/kern/kernel.asm	/^f0106e72:	83 3b 00             	cmpl   $0x0,(%ebx)$/;"	l
f0106e75	obj/kern/kernel.asm	/^f0106e75:	75 07                	jne    f0106e7e <spin_lock+0x17>$/;"	l
f0106e77	obj/kern/kernel.asm	/^f0106e77:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
f0106e7c	obj/kern/kernel.asm	/^f0106e7c:	eb 42                	jmp    f0106ec0 <spin_lock+0x59>$/;"	l
f0106e7e	obj/kern/kernel.asm	/^f0106e7e:	8b 73 08             	mov    0x8(%ebx),%esi$/;"	l
f0106e81	obj/kern/kernel.asm	/^f0106e81:	e8 63 fd ff ff       	call   f0106be9 <cpunum>$/;"	l
f0106e86	obj/kern/kernel.asm	/^f0106e86:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0106e89	obj/kern/kernel.asm	/^f0106e89:	05 20 a0 2b f0       	add    $0xf02ba020,%eax$/;"	l
f0106e8e	obj/kern/kernel.asm	/^f0106e8e:	39 c6                	cmp    %eax,%esi$/;"	l
f0106e90	obj/kern/kernel.asm	/^f0106e90:	75 e5                	jne    f0106e77 <spin_lock+0x10>$/;"	l
f0106e92	obj/kern/kernel.asm	/^f0106e92:	8b 5b 04             	mov    0x4(%ebx),%ebx$/;"	l
f0106e95	obj/kern/kernel.asm	/^f0106e95:	e8 4f fd ff ff       	call   f0106be9 <cpunum>$/;"	l
f0106e9a	obj/kern/kernel.asm	/^f0106e9a:	89 5c 24 10          	mov    %ebx,0x10(%esp)$/;"	l
f0106e9e	obj/kern/kernel.asm	/^f0106e9e:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0106ea2	obj/kern/kernel.asm	/^f0106ea2:	c7 44 24 08 54 9e 10 	movl   $0xf0109e54,0x8(%esp)$/;"	l
f0106ea9	obj/kern/kernel.asm	/^f0106ea9:	f0 $/;"	l
f0106eaa	obj/kern/kernel.asm	/^f0106eaa:	c7 44 24 04 41 00 00 	movl   $0x41,0x4(%esp)$/;"	l
f0106eb1	obj/kern/kernel.asm	/^f0106eb1:	00 $/;"	l
f0106eb2	obj/kern/kernel.asm	/^f0106eb2:	c7 04 24 b6 9e 10 f0 	movl   $0xf0109eb6,(%esp)$/;"	l
f0106eb9	obj/kern/kernel.asm	/^f0106eb9:	e8 82 91 ff ff       	call   f0100040 <_panic>$/;"	l
f0106ebe	obj/kern/kernel.asm	/^f0106ebe:	f3 90                	pause  $/;"	l
f0106ec0	obj/kern/kernel.asm	/^f0106ec0:	89 d0                	mov    %edx,%eax$/;"	l
f0106ec2	obj/kern/kernel.asm	/^f0106ec2:	f0 87 03             	lock xchg %eax,(%ebx)$/;"	l
f0106ec5	obj/kern/kernel.asm	/^f0106ec5:	85 c0                	test   %eax,%eax$/;"	l
f0106ec7	obj/kern/kernel.asm	/^f0106ec7:	75 f5                	jne    f0106ebe <spin_lock+0x57>$/;"	l
f0106ec9	obj/kern/kernel.asm	/^f0106ec9:	e8 1b fd ff ff       	call   f0106be9 <cpunum>$/;"	l
f0106ece	obj/kern/kernel.asm	/^f0106ece:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0106ed1	obj/kern/kernel.asm	/^f0106ed1:	05 20 a0 2b f0       	add    $0xf02ba020,%eax$/;"	l
f0106ed6	obj/kern/kernel.asm	/^f0106ed6:	89 43 08             	mov    %eax,0x8(%ebx)$/;"	l
f0106ed9	obj/kern/kernel.asm	/^f0106ed9:	83 c3 0c             	add    $0xc,%ebx$/;"	l
f0106edc	obj/kern/kernel.asm	/^f0106edc:	89 ea                	mov    %ebp,%edx$/;"	l
f0106ede	obj/kern/kernel.asm	/^f0106ede:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106ee3	obj/kern/kernel.asm	/^f0106ee3:	81 fa ff ff 7f ef    	cmp    $0xef7fffff,%edx$/;"	l
f0106ee9	obj/kern/kernel.asm	/^f0106ee9:	76 12                	jbe    f0106efd <spin_lock+0x96>$/;"	l
f0106eeb	obj/kern/kernel.asm	/^f0106eeb:	8b 4a 04             	mov    0x4(%edx),%ecx$/;"	l
f0106eee	obj/kern/kernel.asm	/^f0106eee:	89 0c 83             	mov    %ecx,(%ebx,%eax,4)$/;"	l
f0106ef1	obj/kern/kernel.asm	/^f0106ef1:	8b 12                	mov    (%edx),%edx$/;"	l
f0106ef3	obj/kern/kernel.asm	/^f0106ef3:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106ef6	obj/kern/kernel.asm	/^f0106ef6:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
f0106ef9	obj/kern/kernel.asm	/^f0106ef9:	75 e8                	jne    f0106ee3 <spin_lock+0x7c>$/;"	l
f0106efb	obj/kern/kernel.asm	/^f0106efb:	eb 0f                	jmp    f0106f0c <spin_lock+0xa5>$/;"	l
f0106efd	obj/kern/kernel.asm	/^f0106efd:	c7 04 83 00 00 00 00 	movl   $0x0,(%ebx,%eax,4)$/;"	l
f0106f04	obj/kern/kernel.asm	/^f0106f04:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106f07	obj/kern/kernel.asm	/^f0106f07:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f0106f0a	obj/kern/kernel.asm	/^f0106f0a:	7e f1                	jle    f0106efd <spin_lock+0x96>$/;"	l
f0106f0c	obj/kern/kernel.asm	/^f0106f0c:	83 c4 20             	add    $0x20,%esp$/;"	l
f0106f0f	obj/kern/kernel.asm	/^f0106f0f:	5b                   	pop    %ebx$/;"	l
f0106f10	obj/kern/kernel.asm	/^f0106f10:	5e                   	pop    %esi$/;"	l
f0106f11	obj/kern/kernel.asm	/^f0106f11:	5d                   	pop    %ebp$/;"	l
f0106f12	obj/kern/kernel.asm	/^f0106f12:	c3                   	ret    $/;"	l
f0106f13	obj/kern/kernel.asm	/^f0106f13 <spin_unlock>:$/;"	l
f0106f13	obj/kern/kernel.asm	/^f0106f13:	55                   	push   %ebp$/;"	l
f0106f14	obj/kern/kernel.asm	/^f0106f14:	89 e5                	mov    %esp,%ebp$/;"	l
f0106f16	obj/kern/kernel.asm	/^f0106f16:	57                   	push   %edi$/;"	l
f0106f17	obj/kern/kernel.asm	/^f0106f17:	56                   	push   %esi$/;"	l
f0106f18	obj/kern/kernel.asm	/^f0106f18:	53                   	push   %ebx$/;"	l
f0106f19	obj/kern/kernel.asm	/^f0106f19:	83 ec 6c             	sub    $0x6c,%esp$/;"	l
f0106f1c	obj/kern/kernel.asm	/^f0106f1c:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0106f1f	obj/kern/kernel.asm	/^f0106f1f:	83 3e 00             	cmpl   $0x0,(%esi)$/;"	l
f0106f22	obj/kern/kernel.asm	/^f0106f22:	74 18                	je     f0106f3c <spin_unlock+0x29>$/;"	l
f0106f24	obj/kern/kernel.asm	/^f0106f24:	8b 5e 08             	mov    0x8(%esi),%ebx$/;"	l
f0106f27	obj/kern/kernel.asm	/^f0106f27:	e8 bd fc ff ff       	call   f0106be9 <cpunum>$/;"	l
f0106f2c	obj/kern/kernel.asm	/^f0106f2c:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0106f2f	obj/kern/kernel.asm	/^f0106f2f:	05 20 a0 2b f0       	add    $0xf02ba020,%eax$/;"	l
f0106f34	obj/kern/kernel.asm	/^f0106f34:	39 c3                	cmp    %eax,%ebx$/;"	l
f0106f36	obj/kern/kernel.asm	/^f0106f36:	0f 84 ce 00 00 00    	je     f010700a <spin_unlock+0xf7>$/;"	l
f0106f3c	obj/kern/kernel.asm	/^f0106f3c:	c7 44 24 08 28 00 00 	movl   $0x28,0x8(%esp)$/;"	l
f0106f43	obj/kern/kernel.asm	/^f0106f43:	00 $/;"	l
f0106f44	obj/kern/kernel.asm	/^f0106f44:	8d 46 0c             	lea    0xc(%esi),%eax$/;"	l
f0106f47	obj/kern/kernel.asm	/^f0106f47:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106f4b	obj/kern/kernel.asm	/^f0106f4b:	8d 5d c0             	lea    -0x40(%ebp),%ebx$/;"	l
f0106f4e	obj/kern/kernel.asm	/^f0106f4e:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0106f51	obj/kern/kernel.asm	/^f0106f51:	e8 8e f6 ff ff       	call   f01065e4 <memmove>$/;"	l
f0106f56	obj/kern/kernel.asm	/^f0106f56:	8b 46 08             	mov    0x8(%esi),%eax$/;"	l
f0106f59	obj/kern/kernel.asm	/^f0106f59:	0f b6 38             	movzbl (%eax),%edi$/;"	l
f0106f5c	obj/kern/kernel.asm	/^f0106f5c:	8b 76 04             	mov    0x4(%esi),%esi$/;"	l
f0106f5f	obj/kern/kernel.asm	/^f0106f5f:	e8 85 fc ff ff       	call   f0106be9 <cpunum>$/;"	l
f0106f64	obj/kern/kernel.asm	/^f0106f64:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f0106f68	obj/kern/kernel.asm	/^f0106f68:	89 74 24 08          	mov    %esi,0x8(%esp)$/;"	l
f0106f6c	obj/kern/kernel.asm	/^f0106f6c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106f70	obj/kern/kernel.asm	/^f0106f70:	c7 04 24 80 9e 10 f0 	movl   $0xf0109e80,(%esp)$/;"	l
f0106f77	obj/kern/kernel.asm	/^f0106f77:	e8 50 d0 ff ff       	call   f0103fcc <cprintf>$/;"	l
f0106f7c	obj/kern/kernel.asm	/^f0106f7c:	8d 7d a8             	lea    -0x58(%ebp),%edi$/;"	l
f0106f7f	obj/kern/kernel.asm	/^f0106f7f:	eb 65                	jmp    f0106fe6 <spin_unlock+0xd3>$/;"	l
f0106f81	obj/kern/kernel.asm	/^f0106f81:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0106f85	obj/kern/kernel.asm	/^f0106f85:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106f88	obj/kern/kernel.asm	/^f0106f88:	e8 f6 e9 ff ff       	call   f0105983 <debuginfo_eip>$/;"	l
f0106f8d	obj/kern/kernel.asm	/^f0106f8d:	85 c0                	test   %eax,%eax$/;"	l
f0106f8f	obj/kern/kernel.asm	/^f0106f8f:	78 39                	js     f0106fca <spin_unlock+0xb7>$/;"	l
f0106f91	obj/kern/kernel.asm	/^f0106f91:	8b 06                	mov    (%esi),%eax$/;"	l
f0106f93	obj/kern/kernel.asm	/^f0106f93:	89 c2                	mov    %eax,%edx$/;"	l
f0106f95	obj/kern/kernel.asm	/^f0106f95:	2b 55 b8             	sub    -0x48(%ebp),%edx$/;"	l
f0106f98	obj/kern/kernel.asm	/^f0106f98:	89 54 24 18          	mov    %edx,0x18(%esp)$/;"	l
f0106f9c	obj/kern/kernel.asm	/^f0106f9c:	8b 55 b0             	mov    -0x50(%ebp),%edx$/;"	l
f0106f9f	obj/kern/kernel.asm	/^f0106f9f:	89 54 24 14          	mov    %edx,0x14(%esp)$/;"	l
f0106fa3	obj/kern/kernel.asm	/^f0106fa3:	8b 55 b4             	mov    -0x4c(%ebp),%edx$/;"	l
f0106fa6	obj/kern/kernel.asm	/^f0106fa6:	89 54 24 10          	mov    %edx,0x10(%esp)$/;"	l
f0106faa	obj/kern/kernel.asm	/^f0106faa:	8b 55 ac             	mov    -0x54(%ebp),%edx$/;"	l
f0106fad	obj/kern/kernel.asm	/^f0106fad:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0106fb1	obj/kern/kernel.asm	/^f0106fb1:	8b 55 a8             	mov    -0x58(%ebp),%edx$/;"	l
f0106fb4	obj/kern/kernel.asm	/^f0106fb4:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0106fb8	obj/kern/kernel.asm	/^f0106fb8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106fbc	obj/kern/kernel.asm	/^f0106fbc:	c7 04 24 c6 9e 10 f0 	movl   $0xf0109ec6,(%esp)$/;"	l
f0106fc3	obj/kern/kernel.asm	/^f0106fc3:	e8 04 d0 ff ff       	call   f0103fcc <cprintf>$/;"	l
f0106fc8	obj/kern/kernel.asm	/^f0106fc8:	eb 12                	jmp    f0106fdc <spin_unlock+0xc9>$/;"	l
f0106fca	obj/kern/kernel.asm	/^f0106fca:	8b 06                	mov    (%esi),%eax$/;"	l
f0106fcc	obj/kern/kernel.asm	/^f0106fcc:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106fd0	obj/kern/kernel.asm	/^f0106fd0:	c7 04 24 dd 9e 10 f0 	movl   $0xf0109edd,(%esp)$/;"	l
f0106fd7	obj/kern/kernel.asm	/^f0106fd7:	e8 f0 cf ff ff       	call   f0103fcc <cprintf>$/;"	l
f0106fdc	obj/kern/kernel.asm	/^f0106fdc:	83 c3 04             	add    $0x4,%ebx$/;"	l
f0106fdf	obj/kern/kernel.asm	/^f0106fdf:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
f0106fe2	obj/kern/kernel.asm	/^f0106fe2:	39 c3                	cmp    %eax,%ebx$/;"	l
f0106fe4	obj/kern/kernel.asm	/^f0106fe4:	74 08                	je     f0106fee <spin_unlock+0xdb>$/;"	l
f0106fe6	obj/kern/kernel.asm	/^f0106fe6:	89 de                	mov    %ebx,%esi$/;"	l
f0106fe8	obj/kern/kernel.asm	/^f0106fe8:	8b 03                	mov    (%ebx),%eax$/;"	l
f0106fea	obj/kern/kernel.asm	/^f0106fea:	85 c0                	test   %eax,%eax$/;"	l
f0106fec	obj/kern/kernel.asm	/^f0106fec:	75 93                	jne    f0106f81 <spin_unlock+0x6e>$/;"	l
f0106fee	obj/kern/kernel.asm	/^f0106fee:	c7 44 24 08 e5 9e 10 	movl   $0xf0109ee5,0x8(%esp)$/;"	l
f0106ff5	obj/kern/kernel.asm	/^f0106ff5:	f0 $/;"	l
f0106ff6	obj/kern/kernel.asm	/^f0106ff6:	c7 44 24 04 67 00 00 	movl   $0x67,0x4(%esp)$/;"	l
f0106ffd	obj/kern/kernel.asm	/^f0106ffd:	00 $/;"	l
f0106ffe	obj/kern/kernel.asm	/^f0106ffe:	c7 04 24 b6 9e 10 f0 	movl   $0xf0109eb6,(%esp)$/;"	l
f0107005	obj/kern/kernel.asm	/^f0107005:	e8 36 90 ff ff       	call   f0100040 <_panic>$/;"	l
f010700a	obj/kern/kernel.asm	/^f010700a:	c7 46 0c 00 00 00 00 	movl   $0x0,0xc(%esi)$/;"	l
f0107011	obj/kern/kernel.asm	/^f0107011:	c7 46 08 00 00 00 00 	movl   $0x0,0x8(%esi)$/;"	l
f0107018	obj/kern/kernel.asm	/^f0107018:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010701d	obj/kern/kernel.asm	/^f010701d:	f0 87 06             	lock xchg %eax,(%esi)$/;"	l
f0107020	obj/kern/kernel.asm	/^f0107020:	83 c4 6c             	add    $0x6c,%esp$/;"	l
f0107023	obj/kern/kernel.asm	/^f0107023:	5b                   	pop    %ebx$/;"	l
f0107024	obj/kern/kernel.asm	/^f0107024:	5e                   	pop    %esi$/;"	l
f0107025	obj/kern/kernel.asm	/^f0107025:	5f                   	pop    %edi$/;"	l
f0107026	obj/kern/kernel.asm	/^f0107026:	5d                   	pop    %ebp$/;"	l
f0107027	obj/kern/kernel.asm	/^f0107027:	c3                   	ret    $/;"	l
f0107028	obj/kern/kernel.asm	/^f0107028 <init_transmit>:$/;"	l
f0107028	obj/kern/kernel.asm	/^f0107028:	55                   	push   %ebp$/;"	l
f0107029	obj/kern/kernel.asm	/^f0107029:	89 e5                	mov    %esp,%ebp$/;"	l
f010702b	obj/kern/kernel.asm	/^f010702b:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010702e	obj/kern/kernel.asm	/^f010702e:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f0107035	obj/kern/kernel.asm	/^f0107035:	e8 e1 a0 ff ff       	call   f010111b <page_alloc>$/;"	l
f010703a	obj/kern/kernel.asm	/^f010703a:	85 c0                	test   %eax,%eax$/;"	l
f010703c	obj/kern/kernel.asm	/^f010703c:	75 1c                	jne    f010705a <init_transmit+0x32>$/;"	l
f010703e	obj/kern/kernel.asm	/^f010703e:	c7 44 24 08 00 9f 10 	movl   $0xf0109f00,0x8(%esp)$/;"	l
f0107045	obj/kern/kernel.asm	/^f0107045:	f0 $/;"	l
f0107046	obj/kern/kernel.asm	/^f0107046:	c7 44 24 04 32 00 00 	movl   $0x32,0x4(%esp)$/;"	l
f010704d	obj/kern/kernel.asm	/^f010704d:	00 $/;"	l
f010704e	obj/kern/kernel.asm	/^f010704e:	c7 04 24 03 a1 10 f0 	movl   $0xf010a103,(%esp)$/;"	l
f0107055	obj/kern/kernel.asm	/^f0107055:	e8 e6 8f ff ff       	call   f0100040 <_panic>$/;"	l
f010705a	obj/kern/kernel.asm	/^f010705a:	2b 05 9c 9e 2b f0    	sub    0xf02b9e9c,%eax$/;"	l
f0107060	obj/kern/kernel.asm	/^f0107060:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0107063	obj/kern/kernel.asm	/^f0107063:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0107066	obj/kern/kernel.asm	/^f0107066:	89 c2                	mov    %eax,%edx$/;"	l
f0107068	obj/kern/kernel.asm	/^f0107068:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f010706b	obj/kern/kernel.asm	/^f010706b:	3b 15 94 9e 2b f0    	cmp    0xf02b9e94,%edx$/;"	l
f0107071	obj/kern/kernel.asm	/^f0107071:	72 20                	jb     f0107093 <init_transmit+0x6b>$/;"	l
f0107073	obj/kern/kernel.asm	/^f0107073:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0107077	obj/kern/kernel.asm	/^f0107077:	c7 44 24 08 a4 80 10 	movl   $0xf01080a4,0x8(%esp)$/;"	l
f010707e	obj/kern/kernel.asm	/^f010707e:	f0 $/;"	l
f010707f	obj/kern/kernel.asm	/^f010707f:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0107086	obj/kern/kernel.asm	/^f0107086:	00 $/;"	l
f0107087	obj/kern/kernel.asm	/^f0107087:	c7 04 24 fd 8f 10 f0 	movl   $0xf0108ffd,(%esp)$/;"	l
f010708e	obj/kern/kernel.asm	/^f010708e:	e8 ad 8f ff ff       	call   f0100040 <_panic>$/;"	l
f0107093	obj/kern/kernel.asm	/^f0107093:	8d 88 00 00 00 f0    	lea    -0x10000000(%eax),%ecx$/;"	l
f0107099	obj/kern/kernel.asm	/^f0107099:	89 0d 20 b0 2f f0    	mov    %ecx,0xf02fb020$/;"	l
f010709f	obj/kern/kernel.asm	/^f010709f:	8b 15 28 b0 2f f0    	mov    0xf02fb028,%edx$/;"	l
f01070a5	obj/kern/kernel.asm	/^f01070a5:	81 f9 ff ff ff ef    	cmp    $0xefffffff,%ecx$/;"	l
f01070ab	obj/kern/kernel.asm	/^f01070ab:	77 20                	ja     f01070cd <init_transmit+0xa5>$/;"	l
f01070ad	obj/kern/kernel.asm	/^f01070ad:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f01070b1	obj/kern/kernel.asm	/^f01070b1:	c7 44 24 08 c8 80 10 	movl   $0xf01080c8,0x8(%esp)$/;"	l
f01070b8	obj/kern/kernel.asm	/^f01070b8:	f0 $/;"	l
f01070b9	obj/kern/kernel.asm	/^f01070b9:	c7 44 24 04 35 00 00 	movl   $0x35,0x4(%esp)$/;"	l
f01070c0	obj/kern/kernel.asm	/^f01070c0:	00 $/;"	l
f01070c1	obj/kern/kernel.asm	/^f01070c1:	c7 04 24 03 a1 10 f0 	movl   $0xf010a103,(%esp)$/;"	l
f01070c8	obj/kern/kernel.asm	/^f01070c8:	e8 73 8f ff ff       	call   f0100040 <_panic>$/;"	l
f01070cd	obj/kern/kernel.asm	/^f01070cd:	89 82 00 38 00 00    	mov    %eax,0x3800(%edx)$/;"	l
f01070d3	obj/kern/kernel.asm	/^f01070d3:	c7 82 04 38 00 00 00 	movl   $0x0,0x3804(%edx)$/;"	l
f01070da	obj/kern/kernel.asm	/^f01070da:	00 00 00 $/;"	l
f01070dd	obj/kern/kernel.asm	/^f01070dd:	c7 82 08 38 00 00 00 	movl   $0x1000,0x3808(%edx)$/;"	l
f01070e4	obj/kern/kernel.asm	/^f01070e4:	10 00 00 $/;"	l
f01070e7	obj/kern/kernel.asm	/^f01070e7:	c7 82 10 38 00 00 00 	movl   $0x0,0x3810(%edx)$/;"	l
f01070ee	obj/kern/kernel.asm	/^f01070ee:	00 00 00 $/;"	l
f01070f1	obj/kern/kernel.asm	/^f01070f1:	c7 82 18 38 00 00 00 	movl   $0x0,0x3818(%edx)$/;"	l
f01070f8	obj/kern/kernel.asm	/^f01070f8:	00 00 00 $/;"	l
f01070fb	obj/kern/kernel.asm	/^f01070fb:	8b 82 00 04 00 00    	mov    0x400(%edx),%eax$/;"	l
f0107101	obj/kern/kernel.asm	/^f0107101:	83 c8 0a             	or     $0xa,%eax$/;"	l
f0107104	obj/kern/kernel.asm	/^f0107104:	89 82 00 04 00 00    	mov    %eax,0x400(%edx)$/;"	l
f010710a	obj/kern/kernel.asm	/^f010710a:	8b 82 00 04 00 00    	mov    0x400(%edx),%eax$/;"	l
f0107110	obj/kern/kernel.asm	/^f0107110:	25 0f f0 ff ff       	and    $0xfffff00f,%eax$/;"	l
f0107115	obj/kern/kernel.asm	/^f0107115:	89 82 00 04 00 00    	mov    %eax,0x400(%edx)$/;"	l
f010711b	obj/kern/kernel.asm	/^f010711b:	8b 82 00 04 00 00    	mov    0x400(%edx),%eax$/;"	l
f0107121	obj/kern/kernel.asm	/^f0107121:	80 cc 01             	or     $0x1,%ah$/;"	l
f0107124	obj/kern/kernel.asm	/^f0107124:	89 82 00 04 00 00    	mov    %eax,0x400(%edx)$/;"	l
f010712a	obj/kern/kernel.asm	/^f010712a:	8b 82 00 04 00 00    	mov    0x400(%edx),%eax$/;"	l
f0107130	obj/kern/kernel.asm	/^f0107130:	25 ff 0f c0 ff       	and    $0xffc00fff,%eax$/;"	l
f0107135	obj/kern/kernel.asm	/^f0107135:	89 82 00 04 00 00    	mov    %eax,0x400(%edx)$/;"	l
f010713b	obj/kern/kernel.asm	/^f010713b:	8b 82 00 04 00 00    	mov    0x400(%edx),%eax$/;"	l
f0107141	obj/kern/kernel.asm	/^f0107141:	0d 00 00 04 00       	or     $0x40000,%eax$/;"	l
f0107146	obj/kern/kernel.asm	/^f0107146:	89 82 00 04 00 00    	mov    %eax,0x400(%edx)$/;"	l
f010714c	obj/kern/kernel.asm	/^f010714c:	8b 82 10 04 00 00    	mov    0x410(%edx),%eax$/;"	l
f0107152	obj/kern/kernel.asm	/^f0107152:	25 00 fc ff ff       	and    $0xfffffc00,%eax$/;"	l
f0107157	obj/kern/kernel.asm	/^f0107157:	89 82 10 04 00 00    	mov    %eax,0x410(%edx)$/;"	l
f010715d	obj/kern/kernel.asm	/^f010715d:	8b 82 10 04 00 00    	mov    0x410(%edx),%eax$/;"	l
f0107163	obj/kern/kernel.asm	/^f0107163:	83 c8 0a             	or     $0xa,%eax$/;"	l
f0107166	obj/kern/kernel.asm	/^f0107166:	89 82 10 04 00 00    	mov    %eax,0x410(%edx)$/;"	l
f010716c	obj/kern/kernel.asm	/^f010716c:	8b 82 10 04 00 00    	mov    0x410(%edx),%eax$/;"	l
f0107172	obj/kern/kernel.asm	/^f0107172:	25 ff 03 f0 ff       	and    $0xfff003ff,%eax$/;"	l
f0107177	obj/kern/kernel.asm	/^f0107177:	89 82 10 04 00 00    	mov    %eax,0x410(%edx)$/;"	l
f010717d	obj/kern/kernel.asm	/^f010717d:	8b 82 10 04 00 00    	mov    0x410(%edx),%eax$/;"	l
f0107183	obj/kern/kernel.asm	/^f0107183:	80 cc 20             	or     $0x20,%ah$/;"	l
f0107186	obj/kern/kernel.asm	/^f0107186:	89 82 10 04 00 00    	mov    %eax,0x410(%edx)$/;"	l
f010718c	obj/kern/kernel.asm	/^f010718c:	8b 82 10 04 00 00    	mov    0x410(%edx),%eax$/;"	l
f0107192	obj/kern/kernel.asm	/^f0107192:	25 ff ff 0f c0       	and    $0xc00fffff,%eax$/;"	l
f0107197	obj/kern/kernel.asm	/^f0107197:	89 82 10 04 00 00    	mov    %eax,0x410(%edx)$/;"	l
f010719d	obj/kern/kernel.asm	/^f010719d:	8b 82 10 04 00 00    	mov    0x410(%edx),%eax$/;"	l
f01071a3	obj/kern/kernel.asm	/^f01071a3:	0d 00 00 60 00       	or     $0x600000,%eax$/;"	l
f01071a8	obj/kern/kernel.asm	/^f01071a8:	89 82 10 04 00 00    	mov    %eax,0x410(%edx)$/;"	l
f01071ae	obj/kern/kernel.asm	/^f01071ae:	8b 82 10 04 00 00    	mov    0x410(%edx),%eax$/;"	l
f01071b4	obj/kern/kernel.asm	/^f01071b4:	25 ff ff ff 3f       	and    $0x3fffffff,%eax$/;"	l
f01071b9	obj/kern/kernel.asm	/^f01071b9:	89 82 10 04 00 00    	mov    %eax,0x410(%edx)$/;"	l
f01071bf	obj/kern/kernel.asm	/^f01071bf:	8b 82 10 04 00 00    	mov    0x410(%edx),%eax$/;"	l
f01071c5	obj/kern/kernel.asm	/^f01071c5:	89 82 10 04 00 00    	mov    %eax,0x410(%edx)$/;"	l
f01071cb	obj/kern/kernel.asm	/^f01071cb:	c9                   	leave  $/;"	l
f01071cc	obj/kern/kernel.asm	/^f01071cc:	c3                   	ret    $/;"	l
f01071cd	obj/kern/kernel.asm	/^f01071cd <transmit_packet>:$/;"	l
f01071cd	obj/kern/kernel.asm	/^f01071cd:	55                   	push   %ebp$/;"	l
f01071ce	obj/kern/kernel.asm	/^f01071ce:	89 e5                	mov    %esp,%ebp$/;"	l
f01071d0	obj/kern/kernel.asm	/^f01071d0:	56                   	push   %esi$/;"	l
f01071d1	obj/kern/kernel.asm	/^f01071d1:	53                   	push   %ebx$/;"	l
f01071d2	obj/kern/kernel.asm	/^f01071d2:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01071d5	obj/kern/kernel.asm	/^f01071d5:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f01071d8	obj/kern/kernel.asm	/^f01071d8:	a1 28 b0 2f f0       	mov    0xf02fb028,%eax$/;"	l
f01071dd	obj/kern/kernel.asm	/^f01071dd:	8b 98 18 38 00 00    	mov    0x3818(%eax),%ebx$/;"	l
f01071e3	obj/kern/kernel.asm	/^f01071e3:	c1 e3 04             	shl    $0x4,%ebx$/;"	l
f01071e6	obj/kern/kernel.asm	/^f01071e6:	03 1d 20 b0 2f f0    	add    0xf02fb020,%ebx$/;"	l
f01071ec	obj/kern/kernel.asm	/^f01071ec:	83 3d f4 53 12 f0 00 	cmpl   $0x0,0xf01253f4$/;"	l
f01071f3	obj/kern/kernel.asm	/^f01071f3:	75 0a                	jne    f01071ff <transmit_packet+0x32>$/;"	l
f01071f5	obj/kern/kernel.asm	/^f01071f5:	f6 43 0c 01          	testb  $0x1,0xc(%ebx)$/;"	l
f01071f9	obj/kern/kernel.asm	/^f01071f9:	0f 84 87 00 00 00    	je     f0107286 <transmit_packet+0xb9>$/;"	l
f01071ff	obj/kern/kernel.asm	/^f01071ff:	81 fe a0 3f 00 00    	cmp    $0x3fa0,%esi$/;"	l
f0107205	obj/kern/kernel.asm	/^f0107205:	0f 87 82 00 00 00    	ja     f010728d <transmit_packet+0xc0>$/;"	l
f010720b	obj/kern/kernel.asm	/^f010720b:	c7 44 24 08 10 00 00 	movl   $0x10,0x8(%esp)$/;"	l
f0107212	obj/kern/kernel.asm	/^f0107212:	00 $/;"	l
f0107213	obj/kern/kernel.asm	/^f0107213:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f010721a	obj/kern/kernel.asm	/^f010721a:	00 $/;"	l
f010721b	obj/kern/kernel.asm	/^f010721b:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010721e	obj/kern/kernel.asm	/^f010721e:	e8 74 f3 ff ff       	call   f0106597 <memset>$/;"	l
f0107223	obj/kern/kernel.asm	/^f0107223:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0107226	obj/kern/kernel.asm	/^f0107226:	89 03                	mov    %eax,(%ebx)$/;"	l
f0107228	obj/kern/kernel.asm	/^f0107228:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)$/;"	l
f010722f	obj/kern/kernel.asm	/^f010722f:	66 89 73 08          	mov    %si,0x8(%ebx)$/;"	l
f0107233	obj/kern/kernel.asm	/^f0107233:	81 4b 08 00 00 00 09 	orl    $0x9000000,0x8(%ebx)$/;"	l
f010723a	obj/kern/kernel.asm	/^f010723a:	a1 28 b0 2f f0       	mov    0xf02fb028,%eax$/;"	l
f010723f	obj/kern/kernel.asm	/^f010723f:	8b 88 18 38 00 00    	mov    0x3818(%eax),%ecx$/;"	l
f0107245	obj/kern/kernel.asm	/^f0107245:	8b 90 08 38 00 00    	mov    0x3808(%eax),%edx$/;"	l
f010724b	obj/kern/kernel.asm	/^f010724b:	83 c1 01             	add    $0x1,%ecx$/;"	l
f010724e	obj/kern/kernel.asm	/^f010724e:	c1 e1 04             	shl    $0x4,%ecx$/;"	l
f0107251	obj/kern/kernel.asm	/^f0107251:	39 d1                	cmp    %edx,%ecx$/;"	l
f0107253	obj/kern/kernel.asm	/^f0107253:	72 1b                	jb     f0107270 <transmit_packet+0xa3>$/;"	l
f0107255	obj/kern/kernel.asm	/^f0107255:	c7 05 f4 53 12 f0 00 	movl   $0x0,0xf01253f4$/;"	l
f010725c	obj/kern/kernel.asm	/^f010725c:	00 00 00 $/;"	l
f010725f	obj/kern/kernel.asm	/^f010725f:	c7 80 18 38 00 00 00 	movl   $0x0,0x3818(%eax)$/;"	l
f0107266	obj/kern/kernel.asm	/^f0107266:	00 00 00 $/;"	l
f0107269	obj/kern/kernel.asm	/^f0107269:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010726e	obj/kern/kernel.asm	/^f010726e:	eb 22                	jmp    f0107292 <transmit_packet+0xc5>$/;"	l
f0107270	obj/kern/kernel.asm	/^f0107270:	8b 90 18 38 00 00    	mov    0x3818(%eax),%edx$/;"	l
f0107276	obj/kern/kernel.asm	/^f0107276:	83 c2 01             	add    $0x1,%edx$/;"	l
f0107279	obj/kern/kernel.asm	/^f0107279:	89 90 18 38 00 00    	mov    %edx,0x3818(%eax)$/;"	l
f010727f	obj/kern/kernel.asm	/^f010727f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0107284	obj/kern/kernel.asm	/^f0107284:	eb 0c                	jmp    f0107292 <transmit_packet+0xc5>$/;"	l
f0107286	obj/kern/kernel.asm	/^f0107286:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax$/;"	l
f010728b	obj/kern/kernel.asm	/^f010728b:	eb 05                	jmp    f0107292 <transmit_packet+0xc5>$/;"	l
f010728d	obj/kern/kernel.asm	/^f010728d:	b8 ef ff ff ff       	mov    $0xffffffef,%eax$/;"	l
f0107292	obj/kern/kernel.asm	/^f0107292:	83 c4 10             	add    $0x10,%esp$/;"	l
f0107295	obj/kern/kernel.asm	/^f0107295:	5b                   	pop    %ebx$/;"	l
f0107296	obj/kern/kernel.asm	/^f0107296:	5e                   	pop    %esi$/;"	l
f0107297	obj/kern/kernel.asm	/^f0107297:	5d                   	pop    %ebp$/;"	l
f0107298	obj/kern/kernel.asm	/^f0107298:	c3                   	ret    $/;"	l
f0107299	obj/kern/kernel.asm	/^f0107299 <init_receive>:$/;"	l
f0107299	obj/kern/kernel.asm	/^f0107299:	55                   	push   %ebp$/;"	l
f010729a	obj/kern/kernel.asm	/^f010729a:	89 e5                	mov    %esp,%ebp$/;"	l
f010729c	obj/kern/kernel.asm	/^f010729c:	56                   	push   %esi$/;"	l
f010729d	obj/kern/kernel.asm	/^f010729d:	53                   	push   %ebx$/;"	l
f010729e	obj/kern/kernel.asm	/^f010729e:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01072a1	obj/kern/kernel.asm	/^f01072a1:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f01072a8	obj/kern/kernel.asm	/^f01072a8:	e8 6e 9e ff ff       	call   f010111b <page_alloc>$/;"	l
f01072ad	obj/kern/kernel.asm	/^f01072ad:	85 c0                	test   %eax,%eax$/;"	l
f01072af	obj/kern/kernel.asm	/^f01072af:	75 1c                	jne    f01072cd <init_receive+0x34>$/;"	l
f01072b1	obj/kern/kernel.asm	/^f01072b1:	c7 44 24 08 24 9f 10 	movl   $0xf0109f24,0x8(%esp)$/;"	l
f01072b8	obj/kern/kernel.asm	/^f01072b8:	f0 $/;"	l
f01072b9	obj/kern/kernel.asm	/^f01072b9:	c7 44 24 04 6a 00 00 	movl   $0x6a,0x4(%esp)$/;"	l
f01072c0	obj/kern/kernel.asm	/^f01072c0:	00 $/;"	l
f01072c1	obj/kern/kernel.asm	/^f01072c1:	c7 04 24 03 a1 10 f0 	movl   $0xf010a103,(%esp)$/;"	l
f01072c8	obj/kern/kernel.asm	/^f01072c8:	e8 73 8d ff ff       	call   f0100040 <_panic>$/;"	l
f01072cd	obj/kern/kernel.asm	/^f01072cd:	2b 05 9c 9e 2b f0    	sub    0xf02b9e9c,%eax$/;"	l
f01072d3	obj/kern/kernel.asm	/^f01072d3:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01072d6	obj/kern/kernel.asm	/^f01072d6:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01072d9	obj/kern/kernel.asm	/^f01072d9:	89 c2                	mov    %eax,%edx$/;"	l
f01072db	obj/kern/kernel.asm	/^f01072db:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01072de	obj/kern/kernel.asm	/^f01072de:	3b 15 94 9e 2b f0    	cmp    0xf02b9e94,%edx$/;"	l
f01072e4	obj/kern/kernel.asm	/^f01072e4:	72 20                	jb     f0107306 <init_receive+0x6d>$/;"	l
f01072e6	obj/kern/kernel.asm	/^f01072e6:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01072ea	obj/kern/kernel.asm	/^f01072ea:	c7 44 24 08 a4 80 10 	movl   $0xf01080a4,0x8(%esp)$/;"	l
f01072f1	obj/kern/kernel.asm	/^f01072f1:	f0 $/;"	l
f01072f2	obj/kern/kernel.asm	/^f01072f2:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f01072f9	obj/kern/kernel.asm	/^f01072f9:	00 $/;"	l
f01072fa	obj/kern/kernel.asm	/^f01072fa:	c7 04 24 fd 8f 10 f0 	movl   $0xf0108ffd,(%esp)$/;"	l
f0107301	obj/kern/kernel.asm	/^f0107301:	e8 3a 8d ff ff       	call   f0100040 <_panic>$/;"	l
f0107306	obj/kern/kernel.asm	/^f0107306:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f010730b	obj/kern/kernel.asm	/^f010730b:	a3 24 b0 2f f0       	mov    %eax,0xf02fb024$/;"	l
f0107310	obj/kern/kernel.asm	/^f0107310:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f0107317	obj/kern/kernel.asm	/^f0107317:	e8 ff 9d ff ff       	call   f010111b <page_alloc>$/;"	l
f010731c	obj/kern/kernel.asm	/^f010731c:	85 c0                	test   %eax,%eax$/;"	l
f010731e	obj/kern/kernel.asm	/^f010731e:	75 1c                	jne    f010733c <init_receive+0xa3>$/;"	l
f0107320	obj/kern/kernel.asm	/^f0107320:	c7 44 24 08 24 9f 10 	movl   $0xf0109f24,0x8(%esp)$/;"	l
f0107327	obj/kern/kernel.asm	/^f0107327:	f0 $/;"	l
f0107328	obj/kern/kernel.asm	/^f0107328:	c7 44 24 04 6e 00 00 	movl   $0x6e,0x4(%esp)$/;"	l
f010732f	obj/kern/kernel.asm	/^f010732f:	00 $/;"	l
f0107330	obj/kern/kernel.asm	/^f0107330:	c7 04 24 03 a1 10 f0 	movl   $0xf010a103,(%esp)$/;"	l
f0107337	obj/kern/kernel.asm	/^f0107337:	e8 04 8d ff ff       	call   f0100040 <_panic>$/;"	l
f010733c	obj/kern/kernel.asm	/^f010733c:	a1 28 b0 2f f0       	mov    0xf02fb028,%eax$/;"	l
f0107341	obj/kern/kernel.asm	/^f0107341:	c7 80 00 54 00 00 52 	movl   $0x12005452,0x5400(%eax)$/;"	l
f0107348	obj/kern/kernel.asm	/^f0107348:	54 00 12 $/;"	l
f010734b	obj/kern/kernel.asm	/^f010734b:	c7 80 04 54 00 00 34 	movl   $0x80005634,0x5404(%eax)$/;"	l
f0107352	obj/kern/kernel.asm	/^f0107352:	56 00 80 $/;"	l
f0107355	obj/kern/kernel.asm	/^f0107355:	b8 00 52 00 00       	mov    $0x5200,%eax$/;"	l
f010735a	obj/kern/kernel.asm	/^f010735a:	89 c2                	mov    %eax,%edx$/;"	l
f010735c	obj/kern/kernel.asm	/^f010735c:	03 15 28 b0 2f f0    	add    0xf02fb028,%edx$/;"	l
f0107362	obj/kern/kernel.asm	/^f0107362:	c7 02 00 00 00 00    	movl   $0x0,(%edx)$/;"	l
f0107368	obj/kern/kernel.asm	/^f0107368:	83 c0 04             	add    $0x4,%eax$/;"	l
f010736b	obj/kern/kernel.asm	/^f010736b:	3d 00 54 00 00       	cmp    $0x5400,%eax$/;"	l
f0107370	obj/kern/kernel.asm	/^f0107370:	75 e8                	jne    f010735a <init_receive+0xc1>$/;"	l
f0107372	obj/kern/kernel.asm	/^f0107372:	a1 28 b0 2f f0       	mov    0xf02fb028,%eax$/;"	l
f0107377	obj/kern/kernel.asm	/^f0107377:	8b 15 24 b0 2f f0    	mov    0xf02fb024,%edx$/;"	l
f010737d	obj/kern/kernel.asm	/^f010737d:	81 fa ff ff ff ef    	cmp    $0xefffffff,%edx$/;"	l
f0107383	obj/kern/kernel.asm	/^f0107383:	77 20                	ja     f01073a5 <init_receive+0x10c>$/;"	l
f0107385	obj/kern/kernel.asm	/^f0107385:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0107389	obj/kern/kernel.asm	/^f0107389:	c7 44 24 08 c8 80 10 	movl   $0xf01080c8,0x8(%esp)$/;"	l
f0107390	obj/kern/kernel.asm	/^f0107390:	f0 $/;"	l
f0107391	obj/kern/kernel.asm	/^f0107391:	c7 44 24 04 79 00 00 	movl   $0x79,0x4(%esp)$/;"	l
f0107398	obj/kern/kernel.asm	/^f0107398:	00 $/;"	l
f0107399	obj/kern/kernel.asm	/^f0107399:	c7 04 24 03 a1 10 f0 	movl   $0xf010a103,(%esp)$/;"	l
f01073a0	obj/kern/kernel.asm	/^f01073a0:	e8 9b 8c ff ff       	call   f0100040 <_panic>$/;"	l
f01073a5	obj/kern/kernel.asm	/^f01073a5:	81 c2 00 00 00 10    	add    $0x10000000,%edx$/;"	l
f01073ab	obj/kern/kernel.asm	/^f01073ab:	89 90 00 28 00 00    	mov    %edx,0x2800(%eax)$/;"	l
f01073b1	obj/kern/kernel.asm	/^f01073b1:	c7 80 04 28 00 00 00 	movl   $0x0,0x2804(%eax)$/;"	l
f01073b8	obj/kern/kernel.asm	/^f01073b8:	00 00 00 $/;"	l
f01073bb	obj/kern/kernel.asm	/^f01073bb:	c7 80 08 28 00 00 00 	movl   $0x1000,0x2808(%eax)$/;"	l
f01073c2	obj/kern/kernel.asm	/^f01073c2:	10 00 00 $/;"	l
f01073c5	obj/kern/kernel.asm	/^f01073c5:	c7 80 10 28 00 00 00 	movl   $0x0,0x2810(%eax)$/;"	l
f01073cc	obj/kern/kernel.asm	/^f01073cc:	00 00 00 $/;"	l
f01073cf	obj/kern/kernel.asm	/^f01073cf:	c7 80 18 28 00 00 ff 	movl   $0xff,0x2818(%eax)$/;"	l
f01073d6	obj/kern/kernel.asm	/^f01073d6:	00 00 00 $/;"	l
f01073d9	obj/kern/kernel.asm	/^f01073d9:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01073de	obj/kern/kernel.asm	/^f01073de:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f01073e5	obj/kern/kernel.asm	/^f01073e5:	e8 31 9d ff ff       	call   f010111b <page_alloc>$/;"	l
f01073ea	obj/kern/kernel.asm	/^f01073ea:	85 c0                	test   %eax,%eax$/;"	l
f01073ec	obj/kern/kernel.asm	/^f01073ec:	75 1c                	jne    f010740a <init_receive+0x171>$/;"	l
f01073ee	obj/kern/kernel.asm	/^f01073ee:	c7 44 24 08 24 9f 10 	movl   $0xf0109f24,0x8(%esp)$/;"	l
f01073f5	obj/kern/kernel.asm	/^f01073f5:	f0 $/;"	l
f01073f6	obj/kern/kernel.asm	/^f01073f6:	c7 44 24 04 81 00 00 	movl   $0x81,0x4(%esp)$/;"	l
f01073fd	obj/kern/kernel.asm	/^f01073fd:	00 $/;"	l
f01073fe	obj/kern/kernel.asm	/^f01073fe:	c7 04 24 03 a1 10 f0 	movl   $0xf010a103,(%esp)$/;"	l
f0107405	obj/kern/kernel.asm	/^f0107405:	e8 36 8c ff ff       	call   f0100040 <_panic>$/;"	l
f010740a	obj/kern/kernel.asm	/^f010740a:	2b 05 9c 9e 2b f0    	sub    0xf02b9e9c,%eax$/;"	l
f0107410	obj/kern/kernel.asm	/^f0107410:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0107413	obj/kern/kernel.asm	/^f0107413:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0107416	obj/kern/kernel.asm	/^f0107416:	89 c2                	mov    %eax,%edx$/;"	l
f0107418	obj/kern/kernel.asm	/^f0107418:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f010741b	obj/kern/kernel.asm	/^f010741b:	3b 15 94 9e 2b f0    	cmp    0xf02b9e94,%edx$/;"	l
f0107421	obj/kern/kernel.asm	/^f0107421:	72 20                	jb     f0107443 <init_receive+0x1aa>$/;"	l
f0107423	obj/kern/kernel.asm	/^f0107423:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0107427	obj/kern/kernel.asm	/^f0107427:	c7 44 24 08 a4 80 10 	movl   $0xf01080a4,0x8(%esp)$/;"	l
f010742e	obj/kern/kernel.asm	/^f010742e:	f0 $/;"	l
f010742f	obj/kern/kernel.asm	/^f010742f:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0107436	obj/kern/kernel.asm	/^f0107436:	00 $/;"	l
f0107437	obj/kern/kernel.asm	/^f0107437:	c7 04 24 fd 8f 10 f0 	movl   $0xf0108ffd,(%esp)$/;"	l
f010743e	obj/kern/kernel.asm	/^f010743e:	e8 fd 8b ff ff       	call   f0100040 <_panic>$/;"	l
f0107443	obj/kern/kernel.asm	/^f0107443:	8d 90 00 00 00 f0    	lea    -0x10000000(%eax),%edx$/;"	l
f0107449	obj/kern/kernel.asm	/^f0107449:	89 14 9d 40 b0 2f f0 	mov    %edx,-0xfd04fc0(,%ebx,4)$/;"	l
f0107450	obj/kern/kernel.asm	/^f0107450:	89 da                	mov    %ebx,%edx$/;"	l
f0107452	obj/kern/kernel.asm	/^f0107452:	c1 e2 04             	shl    $0x4,%edx$/;"	l
f0107455	obj/kern/kernel.asm	/^f0107455:	89 d6                	mov    %edx,%esi$/;"	l
f0107457	obj/kern/kernel.asm	/^f0107457:	03 35 24 b0 2f f0    	add    0xf02fb024,%esi$/;"	l
f010745d	obj/kern/kernel.asm	/^f010745d:	8d 88 04 00 00 f0    	lea    -0xffffffc(%eax),%ecx$/;"	l
f0107463	obj/kern/kernel.asm	/^f0107463:	81 f9 ff ff ff ef    	cmp    $0xefffffff,%ecx$/;"	l
f0107469	obj/kern/kernel.asm	/^f0107469:	77 20                	ja     f010748b <init_receive+0x1f2>$/;"	l
f010746b	obj/kern/kernel.asm	/^f010746b:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f010746f	obj/kern/kernel.asm	/^f010746f:	c7 44 24 08 c8 80 10 	movl   $0xf01080c8,0x8(%esp)$/;"	l
f0107476	obj/kern/kernel.asm	/^f0107476:	f0 $/;"	l
f0107477	obj/kern/kernel.asm	/^f0107477:	c7 44 24 04 83 00 00 	movl   $0x83,0x4(%esp)$/;"	l
f010747e	obj/kern/kernel.asm	/^f010747e:	00 $/;"	l
f010747f	obj/kern/kernel.asm	/^f010747f:	c7 04 24 03 a1 10 f0 	movl   $0xf010a103,(%esp)$/;"	l
f0107486	obj/kern/kernel.asm	/^f0107486:	e8 b5 8b ff ff       	call   f0100040 <_panic>$/;"	l
f010748b	obj/kern/kernel.asm	/^f010748b:	83 c0 04             	add    $0x4,%eax$/;"	l
f010748e	obj/kern/kernel.asm	/^f010748e:	89 06                	mov    %eax,(%esi)$/;"	l
f0107490	obj/kern/kernel.asm	/^f0107490:	c7 46 04 00 00 00 00 	movl   $0x0,0x4(%esi)$/;"	l
f0107497	obj/kern/kernel.asm	/^f0107497:	a1 24 b0 2f f0       	mov    0xf02fb024,%eax$/;"	l
f010749c	obj/kern/kernel.asm	/^f010749c:	66 c7 44 10 08 00 10 	movw   $0x1000,0x8(%eax,%edx,1)$/;"	l
f01074a3	obj/kern/kernel.asm	/^f01074a3:	83 c3 01             	add    $0x1,%ebx$/;"	l
f01074a6	obj/kern/kernel.asm	/^f01074a6:	81 fb 00 01 00 00    	cmp    $0x100,%ebx$/;"	l
f01074ac	obj/kern/kernel.asm	/^f01074ac:	0f 85 2c ff ff ff    	jne    f01073de <init_receive+0x145>$/;"	l
f01074b2	obj/kern/kernel.asm	/^f01074b2:	a1 28 b0 2f f0       	mov    0xf02fb028,%eax$/;"	l
f01074b7	obj/kern/kernel.asm	/^f01074b7:	8b 90 00 01 00 00    	mov    0x100(%eax),%edx$/;"	l
f01074bd	obj/kern/kernel.asm	/^f01074bd:	80 e2 1d             	and    $0x1d,%dl$/;"	l
f01074c0	obj/kern/kernel.asm	/^f01074c0:	89 90 00 01 00 00    	mov    %edx,0x100(%eax)$/;"	l
f01074c6	obj/kern/kernel.asm	/^f01074c6:	8b 90 00 01 00 00    	mov    0x100(%eax),%edx$/;"	l
f01074cc	obj/kern/kernel.asm	/^f01074cc:	80 ce 83             	or     $0x83,%dh$/;"	l
f01074cf	obj/kern/kernel.asm	/^f01074cf:	89 90 00 01 00 00    	mov    %edx,0x100(%eax)$/;"	l
f01074d5	obj/kern/kernel.asm	/^f01074d5:	8b 90 00 01 00 00    	mov    0x100(%eax),%edx$/;"	l
f01074db	obj/kern/kernel.asm	/^f01074db:	81 ca 00 00 03 06    	or     $0x6030000,%edx$/;"	l
f01074e1	obj/kern/kernel.asm	/^f01074e1:	89 90 00 01 00 00    	mov    %edx,0x100(%eax)$/;"	l
f01074e7	obj/kern/kernel.asm	/^f01074e7:	8b 90 00 01 00 00    	mov    0x100(%eax),%edx$/;"	l
f01074ed	obj/kern/kernel.asm	/^f01074ed:	83 ca 02             	or     $0x2,%edx$/;"	l
f01074f0	obj/kern/kernel.asm	/^f01074f0:	89 90 00 01 00 00    	mov    %edx,0x100(%eax)$/;"	l
f01074f6	obj/kern/kernel.asm	/^f01074f6:	8b 90 00 01 00 00    	mov    0x100(%eax),%edx$/;"	l
f01074fc	obj/kern/kernel.asm	/^f01074fc:	f6 c2 02             	test   $0x2,%dl$/;"	l
f01074ff	obj/kern/kernel.asm	/^f01074ff:	75 24                	jne    f0107525 <init_receive+0x28c>$/;"	l
f0107501	obj/kern/kernel.asm	/^f0107501:	c7 44 24 0c 48 9f 10 	movl   $0xf0109f48,0xc(%esp)$/;"	l
f0107508	obj/kern/kernel.asm	/^f0107508:	f0 $/;"	l
f0107509	obj/kern/kernel.asm	/^f0107509:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0107510	obj/kern/kernel.asm	/^f0107510:	f0 $/;"	l
f0107511	obj/kern/kernel.asm	/^f0107511:	c7 44 24 04 8e 00 00 	movl   $0x8e,0x4(%esp)$/;"	l
f0107518	obj/kern/kernel.asm	/^f0107518:	00 $/;"	l
f0107519	obj/kern/kernel.asm	/^f0107519:	c7 04 24 03 a1 10 f0 	movl   $0xf010a103,(%esp)$/;"	l
f0107520	obj/kern/kernel.asm	/^f0107520:	e8 1b 8b ff ff       	call   f0100040 <_panic>$/;"	l
f0107525	obj/kern/kernel.asm	/^f0107525:	8b 90 00 01 00 00    	mov    0x100(%eax),%edx$/;"	l
f010752b	obj/kern/kernel.asm	/^f010752b:	f6 c2 20             	test   $0x20,%dl$/;"	l
f010752e	obj/kern/kernel.asm	/^f010752e:	74 24                	je     f0107554 <init_receive+0x2bb>$/;"	l
f0107530	obj/kern/kernel.asm	/^f0107530:	c7 44 24 0c 80 9f 10 	movl   $0xf0109f80,0xc(%esp)$/;"	l
f0107537	obj/kern/kernel.asm	/^f0107537:	f0 $/;"	l
f0107538	obj/kern/kernel.asm	/^f0107538:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f010753f	obj/kern/kernel.asm	/^f010753f:	f0 $/;"	l
f0107540	obj/kern/kernel.asm	/^f0107540:	c7 44 24 04 8f 00 00 	movl   $0x8f,0x4(%esp)$/;"	l
f0107547	obj/kern/kernel.asm	/^f0107547:	00 $/;"	l
f0107548	obj/kern/kernel.asm	/^f0107548:	c7 04 24 03 a1 10 f0 	movl   $0xf010a103,(%esp)$/;"	l
f010754f	obj/kern/kernel.asm	/^f010754f:	e8 ec 8a ff ff       	call   f0100040 <_panic>$/;"	l
f0107554	obj/kern/kernel.asm	/^f0107554:	8b 90 00 01 00 00    	mov    0x100(%eax),%edx$/;"	l
f010755a	obj/kern/kernel.asm	/^f010755a:	f6 c2 c0             	test   $0xc0,%dl$/;"	l
f010755d	obj/kern/kernel.asm	/^f010755d:	74 24                	je     f0107583 <init_receive+0x2ea>$/;"	l
f010755f	obj/kern/kernel.asm	/^f010755f:	c7 44 24 0c ac 9f 10 	movl   $0xf0109fac,0xc(%esp)$/;"	l
f0107566	obj/kern/kernel.asm	/^f0107566:	f0 $/;"	l
f0107567	obj/kern/kernel.asm	/^f0107567:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f010756e	obj/kern/kernel.asm	/^f010756e:	f0 $/;"	l
f010756f	obj/kern/kernel.asm	/^f010756f:	c7 44 24 04 90 00 00 	movl   $0x90,0x4(%esp)$/;"	l
f0107576	obj/kern/kernel.asm	/^f0107576:	00 $/;"	l
f0107577	obj/kern/kernel.asm	/^f0107577:	c7 04 24 03 a1 10 f0 	movl   $0xf010a103,(%esp)$/;"	l
f010757e	obj/kern/kernel.asm	/^f010757e:	e8 bd 8a ff ff       	call   f0100040 <_panic>$/;"	l
f0107583	obj/kern/kernel.asm	/^f0107583:	8b 90 00 01 00 00    	mov    0x100(%eax),%edx$/;"	l
f0107589	obj/kern/kernel.asm	/^f0107589:	81 e2 00 03 00 00    	and    $0x300,%edx$/;"	l
f010758f	obj/kern/kernel.asm	/^f010758f:	81 fa 00 03 00 00    	cmp    $0x300,%edx$/;"	l
f0107595	obj/kern/kernel.asm	/^f0107595:	74 24                	je     f01075bb <init_receive+0x322>$/;"	l
f0107597	obj/kern/kernel.asm	/^f0107597:	c7 44 24 0c d8 9f 10 	movl   $0xf0109fd8,0xc(%esp)$/;"	l
f010759e	obj/kern/kernel.asm	/^f010759e:	f0 $/;"	l
f010759f	obj/kern/kernel.asm	/^f010759f:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f01075a6	obj/kern/kernel.asm	/^f01075a6:	f0 $/;"	l
f01075a7	obj/kern/kernel.asm	/^f01075a7:	c7 44 24 04 91 00 00 	movl   $0x91,0x4(%esp)$/;"	l
f01075ae	obj/kern/kernel.asm	/^f01075ae:	00 $/;"	l
f01075af	obj/kern/kernel.asm	/^f01075af:	c7 04 24 03 a1 10 f0 	movl   $0xf010a103,(%esp)$/;"	l
f01075b6	obj/kern/kernel.asm	/^f01075b6:	e8 85 8a ff ff       	call   f0100040 <_panic>$/;"	l
f01075bb	obj/kern/kernel.asm	/^f01075bb:	8b 90 00 01 00 00    	mov    0x100(%eax),%edx$/;"	l
f01075c1	obj/kern/kernel.asm	/^f01075c1:	8b 90 00 01 00 00    	mov    0x100(%eax),%edx$/;"	l
f01075c7	obj/kern/kernel.asm	/^f01075c7:	f6 c6 80             	test   $0x80,%dh$/;"	l
f01075ca	obj/kern/kernel.asm	/^f01075ca:	75 24                	jne    f01075f0 <init_receive+0x357>$/;"	l
f01075cc	obj/kern/kernel.asm	/^f01075cc:	c7 44 24 0c 14 a0 10 	movl   $0xf010a014,0xc(%esp)$/;"	l
f01075d3	obj/kern/kernel.asm	/^f01075d3:	f0 $/;"	l
f01075d4	obj/kern/kernel.asm	/^f01075d4:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f01075db	obj/kern/kernel.asm	/^f01075db:	f0 $/;"	l
f01075dc	obj/kern/kernel.asm	/^f01075dc:	c7 44 24 04 93 00 00 	movl   $0x93,0x4(%esp)$/;"	l
f01075e3	obj/kern/kernel.asm	/^f01075e3:	00 $/;"	l
f01075e4	obj/kern/kernel.asm	/^f01075e4:	c7 04 24 03 a1 10 f0 	movl   $0xf010a103,(%esp)$/;"	l
f01075eb	obj/kern/kernel.asm	/^f01075eb:	e8 50 8a ff ff       	call   f0100040 <_panic>$/;"	l
f01075f0	obj/kern/kernel.asm	/^f01075f0:	8b 90 00 01 00 00    	mov    0x100(%eax),%edx$/;"	l
f01075f6	obj/kern/kernel.asm	/^f01075f6:	81 e2 00 00 03 00    	and    $0x30000,%edx$/;"	l
f01075fc	obj/kern/kernel.asm	/^f01075fc:	81 fa 00 00 03 00    	cmp    $0x30000,%edx$/;"	l
f0107602	obj/kern/kernel.asm	/^f0107602:	74 24                	je     f0107628 <init_receive+0x38f>$/;"	l
f0107604	obj/kern/kernel.asm	/^f0107604:	c7 44 24 0c 4c a0 10 	movl   $0xf010a04c,0xc(%esp)$/;"	l
f010760b	obj/kern/kernel.asm	/^f010760b:	f0 $/;"	l
f010760c	obj/kern/kernel.asm	/^f010760c:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0107613	obj/kern/kernel.asm	/^f0107613:	f0 $/;"	l
f0107614	obj/kern/kernel.asm	/^f0107614:	c7 44 24 04 94 00 00 	movl   $0x94,0x4(%esp)$/;"	l
f010761b	obj/kern/kernel.asm	/^f010761b:	00 $/;"	l
f010761c	obj/kern/kernel.asm	/^f010761c:	c7 04 24 03 a1 10 f0 	movl   $0xf010a103,(%esp)$/;"	l
f0107623	obj/kern/kernel.asm	/^f0107623:	e8 18 8a ff ff       	call   f0100040 <_panic>$/;"	l
f0107628	obj/kern/kernel.asm	/^f0107628:	8b 90 00 01 00 00    	mov    0x100(%eax),%edx$/;"	l
f010762e	obj/kern/kernel.asm	/^f010762e:	f7 c2 00 00 00 02    	test   $0x2000000,%edx$/;"	l
f0107634	obj/kern/kernel.asm	/^f0107634:	75 24                	jne    f010765a <init_receive+0x3c1>$/;"	l
f0107636	obj/kern/kernel.asm	/^f0107636:	c7 44 24 0c 8c a0 10 	movl   $0xf010a08c,0xc(%esp)$/;"	l
f010763d	obj/kern/kernel.asm	/^f010763d:	f0 $/;"	l
f010763e	obj/kern/kernel.asm	/^f010763e:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0107645	obj/kern/kernel.asm	/^f0107645:	f0 $/;"	l
f0107646	obj/kern/kernel.asm	/^f0107646:	c7 44 24 04 95 00 00 	movl   $0x95,0x4(%esp)$/;"	l
f010764d	obj/kern/kernel.asm	/^f010764d:	00 $/;"	l
f010764e	obj/kern/kernel.asm	/^f010764e:	c7 04 24 03 a1 10 f0 	movl   $0xf010a103,(%esp)$/;"	l
f0107655	obj/kern/kernel.asm	/^f0107655:	e8 e6 89 ff ff       	call   f0100040 <_panic>$/;"	l
f010765a	obj/kern/kernel.asm	/^f010765a:	8b 80 00 01 00 00    	mov    0x100(%eax),%eax$/;"	l
f0107660	obj/kern/kernel.asm	/^f0107660:	a9 00 00 00 04       	test   $0x4000000,%eax$/;"	l
f0107665	obj/kern/kernel.asm	/^f0107665:	75 24                	jne    f010768b <init_receive+0x3f2>$/;"	l
f0107667	obj/kern/kernel.asm	/^f0107667:	c7 44 24 0c c8 a0 10 	movl   $0xf010a0c8,0xc(%esp)$/;"	l
f010766e	obj/kern/kernel.asm	/^f010766e:	f0 $/;"	l
f010766f	obj/kern/kernel.asm	/^f010766f:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0107676	obj/kern/kernel.asm	/^f0107676:	f0 $/;"	l
f0107677	obj/kern/kernel.asm	/^f0107677:	c7 44 24 04 96 00 00 	movl   $0x96,0x4(%esp)$/;"	l
f010767e	obj/kern/kernel.asm	/^f010767e:	00 $/;"	l
f010767f	obj/kern/kernel.asm	/^f010767f:	c7 04 24 03 a1 10 f0 	movl   $0xf010a103,(%esp)$/;"	l
f0107686	obj/kern/kernel.asm	/^f0107686:	e8 b5 89 ff ff       	call   f0100040 <_panic>$/;"	l
f010768b	obj/kern/kernel.asm	/^f010768b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010768e	obj/kern/kernel.asm	/^f010768e:	5b                   	pop    %ebx$/;"	l
f010768f	obj/kern/kernel.asm	/^f010768f:	5e                   	pop    %esi$/;"	l
f0107690	obj/kern/kernel.asm	/^f0107690:	5d                   	pop    %ebp$/;"	l
f0107691	obj/kern/kernel.asm	/^f0107691:	c3                   	ret    $/;"	l
f0107692	obj/kern/kernel.asm	/^f0107692 <pci_e1000_attach>:$/;"	l
f0107692	obj/kern/kernel.asm	/^f0107692:	55                   	push   %ebp$/;"	l
f0107693	obj/kern/kernel.asm	/^f0107693:	89 e5                	mov    %esp,%ebp$/;"	l
f0107695	obj/kern/kernel.asm	/^f0107695:	53                   	push   %ebx$/;"	l
f0107696	obj/kern/kernel.asm	/^f0107696:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0107699	obj/kern/kernel.asm	/^f0107699:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f010769c	obj/kern/kernel.asm	/^f010769c:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010769f	obj/kern/kernel.asm	/^f010769f:	e8 55 05 00 00       	call   f0107bf9 <pci_func_enable>$/;"	l
f01076a4	obj/kern/kernel.asm	/^f01076a4:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f01076a7	obj/kern/kernel.asm	/^f01076a7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01076ab	obj/kern/kernel.asm	/^f01076ab:	8b 43 14             	mov    0x14(%ebx),%eax$/;"	l
f01076ae	obj/kern/kernel.asm	/^f01076ae:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01076b1	obj/kern/kernel.asm	/^f01076b1:	e8 3f 9e ff ff       	call   f01014f5 <mmio_map_region>$/;"	l
f01076b6	obj/kern/kernel.asm	/^f01076b6:	a3 28 b0 2f f0       	mov    %eax,0xf02fb028$/;"	l
f01076bb	obj/kern/kernel.asm	/^f01076bb:	e8 d9 fb ff ff       	call   f0107299 <init_receive>$/;"	l
f01076c0	obj/kern/kernel.asm	/^f01076c0:	e8 63 f9 ff ff       	call   f0107028 <init_transmit>$/;"	l
f01076c5	obj/kern/kernel.asm	/^f01076c5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01076ca	obj/kern/kernel.asm	/^f01076ca:	83 c4 14             	add    $0x14,%esp$/;"	l
f01076cd	obj/kern/kernel.asm	/^f01076cd:	5b                   	pop    %ebx$/;"	l
f01076ce	obj/kern/kernel.asm	/^f01076ce:	5d                   	pop    %ebp$/;"	l
f01076cf	obj/kern/kernel.asm	/^f01076cf:	c3                   	ret    $/;"	l
f01076d0	obj/kern/kernel.asm	/^f01076d0 <receive_packet>:$/;"	l
f01076d0	obj/kern/kernel.asm	/^f01076d0:	55                   	push   %ebp$/;"	l
f01076d1	obj/kern/kernel.asm	/^f01076d1:	89 e5                	mov    %esp,%ebp$/;"	l
f01076d3	obj/kern/kernel.asm	/^f01076d3:	57                   	push   %edi$/;"	l
f01076d4	obj/kern/kernel.asm	/^f01076d4:	56                   	push   %esi$/;"	l
f01076d5	obj/kern/kernel.asm	/^f01076d5:	53                   	push   %ebx$/;"	l
f01076d6	obj/kern/kernel.asm	/^f01076d6:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01076d9	obj/kern/kernel.asm	/^f01076d9:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01076dc	obj/kern/kernel.asm	/^f01076dc:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f01076df	obj/kern/kernel.asm	/^f01076df:	a1 28 b0 2f f0       	mov    0xf02fb028,%eax$/;"	l
f01076e4	obj/kern/kernel.asm	/^f01076e4:	8b 88 18 28 00 00    	mov    0x2818(%eax),%ecx$/;"	l
f01076ea	obj/kern/kernel.asm	/^f01076ea:	83 c1 01             	add    $0x1,%ecx$/;"	l
f01076ed	obj/kern/kernel.asm	/^f01076ed:	0f b6 c9             	movzbl %cl,%ecx$/;"	l
f01076f0	obj/kern/kernel.asm	/^f01076f0:	c1 e1 04             	shl    $0x4,%ecx$/;"	l
f01076f3	obj/kern/kernel.asm	/^f01076f3:	03 0d 24 b0 2f f0    	add    0xf02fb024,%ecx$/;"	l
f01076f9	obj/kern/kernel.asm	/^f01076f9:	f6 41 0c 01          	testb  $0x1,0xc(%ecx)$/;"	l
f01076fd	obj/kern/kernel.asm	/^f01076fd:	74 7b                	je     f010777a <receive_packet+0xaa>$/;"	l
f01076ff	obj/kern/kernel.asm	/^f01076ff:	8b b8 18 28 00 00    	mov    0x2818(%eax),%edi$/;"	l
f0107705	obj/kern/kernel.asm	/^f0107705:	8b 90 08 28 00 00    	mov    0x2808(%eax),%edx$/;"	l
f010770b	obj/kern/kernel.asm	/^f010770b:	83 c7 01             	add    $0x1,%edi$/;"	l
f010770e	obj/kern/kernel.asm	/^f010770e:	c1 e7 04             	shl    $0x4,%edi$/;"	l
f0107711	obj/kern/kernel.asm	/^f0107711:	39 d7                	cmp    %edx,%edi$/;"	l
f0107713	obj/kern/kernel.asm	/^f0107713:	72 0c                	jb     f0107721 <receive_packet+0x51>$/;"	l
f0107715	obj/kern/kernel.asm	/^f0107715:	c7 80 18 28 00 00 00 	movl   $0x0,0x2818(%eax)$/;"	l
f010771c	obj/kern/kernel.asm	/^f010771c:	00 00 00 $/;"	l
f010771f	obj/kern/kernel.asm	/^f010771f:	eb 0f                	jmp    f0107730 <receive_packet+0x60>$/;"	l
f0107721	obj/kern/kernel.asm	/^f0107721:	8b 90 18 28 00 00    	mov    0x2818(%eax),%edx$/;"	l
f0107727	obj/kern/kernel.asm	/^f0107727:	83 c2 01             	add    $0x1,%edx$/;"	l
f010772a	obj/kern/kernel.asm	/^f010772a:	89 90 18 28 00 00    	mov    %edx,0x2818(%eax)$/;"	l
f0107730	obj/kern/kernel.asm	/^f0107730:	8b 01                	mov    (%ecx),%eax$/;"	l
f0107732	obj/kern/kernel.asm	/^f0107732:	89 03                	mov    %eax,(%ebx)$/;"	l
f0107734	obj/kern/kernel.asm	/^f0107734:	0f b7 41 08          	movzwl 0x8(%ecx),%eax$/;"	l
f0107738	obj/kern/kernel.asm	/^f0107738:	89 06                	mov    %eax,(%esi)$/;"	l
f010773a	obj/kern/kernel.asm	/^f010773a:	8b 01                	mov    (%ecx),%eax$/;"	l
f010773c	obj/kern/kernel.asm	/^f010773c:	8b 51 04             	mov    0x4(%ecx),%edx$/;"	l
f010773f	obj/kern/kernel.asm	/^f010773f:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0107743	obj/kern/kernel.asm	/^f0107743:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0107747	obj/kern/kernel.asm	/^f0107747:	0f b7 41 08          	movzwl 0x8(%ecx),%eax$/;"	l
f010774b	obj/kern/kernel.asm	/^f010774b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010774f	obj/kern/kernel.asm	/^f010774f:	c7 04 24 10 a1 10 f0 	movl   $0xf010a110,(%esp)$/;"	l
f0107756	obj/kern/kernel.asm	/^f0107756:	e8 71 c8 ff ff       	call   f0103fcc <cprintf>$/;"	l
f010775b	obj/kern/kernel.asm	/^f010775b:	8b 06                	mov    (%esi),%eax$/;"	l
f010775d	obj/kern/kernel.asm	/^f010775d:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0107761	obj/kern/kernel.asm	/^f0107761:	8b 03                	mov    (%ebx),%eax$/;"	l
f0107763	obj/kern/kernel.asm	/^f0107763:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0107767	obj/kern/kernel.asm	/^f0107767:	c7 04 24 10 a1 10 f0 	movl   $0xf010a110,(%esp)$/;"	l
f010776e	obj/kern/kernel.asm	/^f010776e:	e8 59 c8 ff ff       	call   f0103fcc <cprintf>$/;"	l
f0107773	obj/kern/kernel.asm	/^f0107773:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0107778	obj/kern/kernel.asm	/^f0107778:	eb 05                	jmp    f010777f <receive_packet+0xaf>$/;"	l
f010777a	obj/kern/kernel.asm	/^f010777a:	b8 ee ff ff ff       	mov    $0xffffffee,%eax$/;"	l
f010777f	obj/kern/kernel.asm	/^f010777f:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0107782	obj/kern/kernel.asm	/^f0107782:	5b                   	pop    %ebx$/;"	l
f0107783	obj/kern/kernel.asm	/^f0107783:	5e                   	pop    %esi$/;"	l
f0107784	obj/kern/kernel.asm	/^f0107784:	5f                   	pop    %edi$/;"	l
f0107785	obj/kern/kernel.asm	/^f0107785:	5d                   	pop    %ebp$/;"	l
f0107786	obj/kern/kernel.asm	/^f0107786:	c3                   	ret    $/;"	l
f0107787	obj/kern/kernel.asm	/^f0107787 <pci_attach_match>:$/;"	l
f0107787	obj/kern/kernel.asm	/^f0107787:	55                   	push   %ebp$/;"	l
f0107788	obj/kern/kernel.asm	/^f0107788:	89 e5                	mov    %esp,%ebp$/;"	l
f010778a	obj/kern/kernel.asm	/^f010778a:	57                   	push   %edi$/;"	l
f010778b	obj/kern/kernel.asm	/^f010778b:	56                   	push   %esi$/;"	l
f010778c	obj/kern/kernel.asm	/^f010778c:	53                   	push   %ebx$/;"	l
f010778d	obj/kern/kernel.asm	/^f010778d:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0107790	obj/kern/kernel.asm	/^f0107790:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0107793	obj/kern/kernel.asm	/^f0107793:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0107796	obj/kern/kernel.asm	/^f0107796:	eb 41                	jmp    f01077d9 <pci_attach_match+0x52>$/;"	l
f0107798	obj/kern/kernel.asm	/^f0107798:	39 3b                	cmp    %edi,(%ebx)$/;"	l
f010779a	obj/kern/kernel.asm	/^f010779a:	75 3a                	jne    f01077d6 <pci_attach_match+0x4f>$/;"	l
f010779c	obj/kern/kernel.asm	/^f010779c:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010779f	obj/kern/kernel.asm	/^f010779f:	39 56 04             	cmp    %edx,0x4(%esi)$/;"	l
f01077a2	obj/kern/kernel.asm	/^f01077a2:	75 32                	jne    f01077d6 <pci_attach_match+0x4f>$/;"	l
f01077a4	obj/kern/kernel.asm	/^f01077a4:	8b 4d 14             	mov    0x14(%ebp),%ecx$/;"	l
f01077a7	obj/kern/kernel.asm	/^f01077a7:	89 0c 24             	mov    %ecx,(%esp)$/;"	l
f01077aa	obj/kern/kernel.asm	/^f01077aa:	ff d0                	call   *%eax$/;"	l
f01077ac	obj/kern/kernel.asm	/^f01077ac:	85 c0                	test   %eax,%eax$/;"	l
f01077ae	obj/kern/kernel.asm	/^f01077ae:	7f 32                	jg     f01077e2 <pci_attach_match+0x5b>$/;"	l
f01077b0	obj/kern/kernel.asm	/^f01077b0:	85 c0                	test   %eax,%eax$/;"	l
f01077b2	obj/kern/kernel.asm	/^f01077b2:	79 22                	jns    f01077d6 <pci_attach_match+0x4f>$/;"	l
f01077b4	obj/kern/kernel.asm	/^f01077b4:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f01077b8	obj/kern/kernel.asm	/^f01077b8:	8b 46 08             	mov    0x8(%esi),%eax$/;"	l
f01077bb	obj/kern/kernel.asm	/^f01077bb:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01077bf	obj/kern/kernel.asm	/^f01077bf:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01077c2	obj/kern/kernel.asm	/^f01077c2:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01077c6	obj/kern/kernel.asm	/^f01077c6:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01077ca	obj/kern/kernel.asm	/^f01077ca:	c7 04 24 24 a1 10 f0 	movl   $0xf010a124,(%esp)$/;"	l
f01077d1	obj/kern/kernel.asm	/^f01077d1:	e8 f6 c7 ff ff       	call   f0103fcc <cprintf>$/;"	l
f01077d6	obj/kern/kernel.asm	/^f01077d6:	83 c3 0c             	add    $0xc,%ebx$/;"	l
f01077d9	obj/kern/kernel.asm	/^f01077d9:	89 de                	mov    %ebx,%esi$/;"	l
f01077db	obj/kern/kernel.asm	/^f01077db:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f01077de	obj/kern/kernel.asm	/^f01077de:	85 c0                	test   %eax,%eax$/;"	l
f01077e0	obj/kern/kernel.asm	/^f01077e0:	75 b6                	jne    f0107798 <pci_attach_match+0x11>$/;"	l
f01077e2	obj/kern/kernel.asm	/^f01077e2:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f01077e5	obj/kern/kernel.asm	/^f01077e5:	5b                   	pop    %ebx$/;"	l
f01077e6	obj/kern/kernel.asm	/^f01077e6:	5e                   	pop    %esi$/;"	l
f01077e7	obj/kern/kernel.asm	/^f01077e7:	5f                   	pop    %edi$/;"	l
f01077e8	obj/kern/kernel.asm	/^f01077e8:	5d                   	pop    %ebp$/;"	l
f01077e9	obj/kern/kernel.asm	/^f01077e9:	c3                   	ret    $/;"	l
f01077ea	obj/kern/kernel.asm	/^f01077ea <pci_conf1_set_addr>:$/;"	l
f01077ea	obj/kern/kernel.asm	/^f01077ea:	55                   	push   %ebp$/;"	l
f01077eb	obj/kern/kernel.asm	/^f01077eb:	89 e5                	mov    %esp,%ebp$/;"	l
f01077ed	obj/kern/kernel.asm	/^f01077ed:	56                   	push   %esi$/;"	l
f01077ee	obj/kern/kernel.asm	/^f01077ee:	53                   	push   %ebx$/;"	l
f01077ef	obj/kern/kernel.asm	/^f01077ef:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01077f2	obj/kern/kernel.asm	/^f01077f2:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01077f5	obj/kern/kernel.asm	/^f01077f5:	3d ff 00 00 00       	cmp    $0xff,%eax$/;"	l
f01077fa	obj/kern/kernel.asm	/^f01077fa:	76 24                	jbe    f0107820 <pci_conf1_set_addr+0x36>$/;"	l
f01077fc	obj/kern/kernel.asm	/^f01077fc:	c7 44 24 0c 7c a2 10 	movl   $0xf010a27c,0xc(%esp)$/;"	l
f0107803	obj/kern/kernel.asm	/^f0107803:	f0 $/;"	l
f0107804	obj/kern/kernel.asm	/^f0107804:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f010780b	obj/kern/kernel.asm	/^f010780b:	f0 $/;"	l
f010780c	obj/kern/kernel.asm	/^f010780c:	c7 44 24 04 2c 00 00 	movl   $0x2c,0x4(%esp)$/;"	l
f0107813	obj/kern/kernel.asm	/^f0107813:	00 $/;"	l
f0107814	obj/kern/kernel.asm	/^f0107814:	c7 04 24 86 a2 10 f0 	movl   $0xf010a286,(%esp)$/;"	l
f010781b	obj/kern/kernel.asm	/^f010781b:	e8 20 88 ff ff       	call   f0100040 <_panic>$/;"	l
f0107820	obj/kern/kernel.asm	/^f0107820:	83 fa 1f             	cmp    $0x1f,%edx$/;"	l
f0107823	obj/kern/kernel.asm	/^f0107823:	76 24                	jbe    f0107849 <pci_conf1_set_addr+0x5f>$/;"	l
f0107825	obj/kern/kernel.asm	/^f0107825:	c7 44 24 0c 91 a2 10 	movl   $0xf010a291,0xc(%esp)$/;"	l
f010782c	obj/kern/kernel.asm	/^f010782c:	f0 $/;"	l
f010782d	obj/kern/kernel.asm	/^f010782d:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0107834	obj/kern/kernel.asm	/^f0107834:	f0 $/;"	l
f0107835	obj/kern/kernel.asm	/^f0107835:	c7 44 24 04 2d 00 00 	movl   $0x2d,0x4(%esp)$/;"	l
f010783c	obj/kern/kernel.asm	/^f010783c:	00 $/;"	l
f010783d	obj/kern/kernel.asm	/^f010783d:	c7 04 24 86 a2 10 f0 	movl   $0xf010a286,(%esp)$/;"	l
f0107844	obj/kern/kernel.asm	/^f0107844:	e8 f7 87 ff ff       	call   f0100040 <_panic>$/;"	l
f0107849	obj/kern/kernel.asm	/^f0107849:	83 f9 07             	cmp    $0x7,%ecx$/;"	l
f010784c	obj/kern/kernel.asm	/^f010784c:	76 24                	jbe    f0107872 <pci_conf1_set_addr+0x88>$/;"	l
f010784e	obj/kern/kernel.asm	/^f010784e:	c7 44 24 0c 9a a2 10 	movl   $0xf010a29a,0xc(%esp)$/;"	l
f0107855	obj/kern/kernel.asm	/^f0107855:	f0 $/;"	l
f0107856	obj/kern/kernel.asm	/^f0107856:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f010785d	obj/kern/kernel.asm	/^f010785d:	f0 $/;"	l
f010785e	obj/kern/kernel.asm	/^f010785e:	c7 44 24 04 2e 00 00 	movl   $0x2e,0x4(%esp)$/;"	l
f0107865	obj/kern/kernel.asm	/^f0107865:	00 $/;"	l
f0107866	obj/kern/kernel.asm	/^f0107866:	c7 04 24 86 a2 10 f0 	movl   $0xf010a286,(%esp)$/;"	l
f010786d	obj/kern/kernel.asm	/^f010786d:	e8 ce 87 ff ff       	call   f0100040 <_panic>$/;"	l
f0107872	obj/kern/kernel.asm	/^f0107872:	81 fb ff 00 00 00    	cmp    $0xff,%ebx$/;"	l
f0107878	obj/kern/kernel.asm	/^f0107878:	76 24                	jbe    f010789e <pci_conf1_set_addr+0xb4>$/;"	l
f010787a	obj/kern/kernel.asm	/^f010787a:	c7 44 24 0c a3 a2 10 	movl   $0xf010a2a3,0xc(%esp)$/;"	l
f0107881	obj/kern/kernel.asm	/^f0107881:	f0 $/;"	l
f0107882	obj/kern/kernel.asm	/^f0107882:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f0107889	obj/kern/kernel.asm	/^f0107889:	f0 $/;"	l
f010788a	obj/kern/kernel.asm	/^f010788a:	c7 44 24 04 2f 00 00 	movl   $0x2f,0x4(%esp)$/;"	l
f0107891	obj/kern/kernel.asm	/^f0107891:	00 $/;"	l
f0107892	obj/kern/kernel.asm	/^f0107892:	c7 04 24 86 a2 10 f0 	movl   $0xf010a286,(%esp)$/;"	l
f0107899	obj/kern/kernel.asm	/^f0107899:	e8 a2 87 ff ff       	call   f0100040 <_panic>$/;"	l
f010789e	obj/kern/kernel.asm	/^f010789e:	f6 c3 03             	test   $0x3,%bl$/;"	l
f01078a1	obj/kern/kernel.asm	/^f01078a1:	74 24                	je     f01078c7 <pci_conf1_set_addr+0xdd>$/;"	l
f01078a3	obj/kern/kernel.asm	/^f01078a3:	c7 44 24 0c b0 a2 10 	movl   $0xf010a2b0,0xc(%esp)$/;"	l
f01078aa	obj/kern/kernel.asm	/^f01078aa:	f0 $/;"	l
f01078ab	obj/kern/kernel.asm	/^f01078ab:	c7 44 24 08 33 90 10 	movl   $0xf0109033,0x8(%esp)$/;"	l
f01078b2	obj/kern/kernel.asm	/^f01078b2:	f0 $/;"	l
f01078b3	obj/kern/kernel.asm	/^f01078b3:	c7 44 24 04 30 00 00 	movl   $0x30,0x4(%esp)$/;"	l
f01078ba	obj/kern/kernel.asm	/^f01078ba:	00 $/;"	l
f01078bb	obj/kern/kernel.asm	/^f01078bb:	c7 04 24 86 a2 10 f0 	movl   $0xf010a286,(%esp)$/;"	l
f01078c2	obj/kern/kernel.asm	/^f01078c2:	e8 79 87 ff ff       	call   f0100040 <_panic>$/;"	l
f01078c7	obj/kern/kernel.asm	/^f01078c7:	81 cb 00 00 00 80    	or     $0x80000000,%ebx$/;"	l
f01078cd	obj/kern/kernel.asm	/^f01078cd:	c1 e1 08             	shl    $0x8,%ecx$/;"	l
f01078d0	obj/kern/kernel.asm	/^f01078d0:	09 cb                	or     %ecx,%ebx$/;"	l
f01078d2	obj/kern/kernel.asm	/^f01078d2:	89 d6                	mov    %edx,%esi$/;"	l
f01078d4	obj/kern/kernel.asm	/^f01078d4:	c1 e6 0b             	shl    $0xb,%esi$/;"	l
f01078d7	obj/kern/kernel.asm	/^f01078d7:	09 f3                	or     %esi,%ebx$/;"	l
f01078d9	obj/kern/kernel.asm	/^f01078d9:	c1 e0 10             	shl    $0x10,%eax$/;"	l
f01078dc	obj/kern/kernel.asm	/^f01078dc:	89 c6                	mov    %eax,%esi$/;"	l
f01078de	obj/kern/kernel.asm	/^f01078de:	89 d8                	mov    %ebx,%eax$/;"	l
f01078e0	obj/kern/kernel.asm	/^f01078e0:	09 f0                	or     %esi,%eax$/;"	l
f01078e2	obj/kern/kernel.asm	/^f01078e2:	ba f8 0c 00 00       	mov    $0xcf8,%edx$/;"	l
f01078e7	obj/kern/kernel.asm	/^f01078e7:	ef                   	out    %eax,(%dx)$/;"	l
f01078e8	obj/kern/kernel.asm	/^f01078e8:	83 c4 10             	add    $0x10,%esp$/;"	l
f01078eb	obj/kern/kernel.asm	/^f01078eb:	5b                   	pop    %ebx$/;"	l
f01078ec	obj/kern/kernel.asm	/^f01078ec:	5e                   	pop    %esi$/;"	l
f01078ed	obj/kern/kernel.asm	/^f01078ed:	5d                   	pop    %ebp$/;"	l
f01078ee	obj/kern/kernel.asm	/^f01078ee:	c3                   	ret    $/;"	l
f01078ef	obj/kern/kernel.asm	/^f01078ef <pci_conf_read>:$/;"	l
f01078ef	obj/kern/kernel.asm	/^f01078ef:	55                   	push   %ebp$/;"	l
f01078f0	obj/kern/kernel.asm	/^f01078f0:	89 e5                	mov    %esp,%ebp$/;"	l
f01078f2	obj/kern/kernel.asm	/^f01078f2:	53                   	push   %ebx$/;"	l
f01078f3	obj/kern/kernel.asm	/^f01078f3:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01078f6	obj/kern/kernel.asm	/^f01078f6:	8b 48 08             	mov    0x8(%eax),%ecx$/;"	l
f01078f9	obj/kern/kernel.asm	/^f01078f9:	8b 58 04             	mov    0x4(%eax),%ebx$/;"	l
f01078fc	obj/kern/kernel.asm	/^f01078fc:	8b 00                	mov    (%eax),%eax$/;"	l
f01078fe	obj/kern/kernel.asm	/^f01078fe:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0107901	obj/kern/kernel.asm	/^f0107901:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0107904	obj/kern/kernel.asm	/^f0107904:	89 da                	mov    %ebx,%edx$/;"	l
f0107906	obj/kern/kernel.asm	/^f0107906:	e8 df fe ff ff       	call   f01077ea <pci_conf1_set_addr>$/;"	l
f010790b	obj/kern/kernel.asm	/^f010790b:	ba fc 0c 00 00       	mov    $0xcfc,%edx$/;"	l
f0107910	obj/kern/kernel.asm	/^f0107910:	ed                   	in     (%dx),%eax$/;"	l
f0107911	obj/kern/kernel.asm	/^f0107911:	83 c4 14             	add    $0x14,%esp$/;"	l
f0107914	obj/kern/kernel.asm	/^f0107914:	5b                   	pop    %ebx$/;"	l
f0107915	obj/kern/kernel.asm	/^f0107915:	5d                   	pop    %ebp$/;"	l
f0107916	obj/kern/kernel.asm	/^f0107916:	c3                   	ret    $/;"	l
f0107917	obj/kern/kernel.asm	/^f0107917 <pci_scan_bus>:$/;"	l
f0107917	obj/kern/kernel.asm	/^f0107917:	55                   	push   %ebp$/;"	l
f0107918	obj/kern/kernel.asm	/^f0107918:	89 e5                	mov    %esp,%ebp$/;"	l
f010791a	obj/kern/kernel.asm	/^f010791a:	57                   	push   %edi$/;"	l
f010791b	obj/kern/kernel.asm	/^f010791b:	56                   	push   %esi$/;"	l
f010791c	obj/kern/kernel.asm	/^f010791c:	53                   	push   %ebx$/;"	l
f010791d	obj/kern/kernel.asm	/^f010791d:	81 ec 1c 01 00 00    	sub    $0x11c,%esp$/;"	l
f0107923	obj/kern/kernel.asm	/^f0107923:	89 c3                	mov    %eax,%ebx$/;"	l
f0107925	obj/kern/kernel.asm	/^f0107925:	c7 44 24 08 48 00 00 	movl   $0x48,0x8(%esp)$/;"	l
f010792c	obj/kern/kernel.asm	/^f010792c:	00 $/;"	l
f010792d	obj/kern/kernel.asm	/^f010792d:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0107934	obj/kern/kernel.asm	/^f0107934:	00 $/;"	l
f0107935	obj/kern/kernel.asm	/^f0107935:	8d 45 a0             	lea    -0x60(%ebp),%eax$/;"	l
f0107938	obj/kern/kernel.asm	/^f0107938:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010793b	obj/kern/kernel.asm	/^f010793b:	e8 57 ec ff ff       	call   f0106597 <memset>$/;"	l
f0107940	obj/kern/kernel.asm	/^f0107940:	89 5d a0             	mov    %ebx,-0x60(%ebp)$/;"	l
f0107943	obj/kern/kernel.asm	/^f0107943:	c7 45 a4 00 00 00 00 	movl   $0x0,-0x5c(%ebp)$/;"	l
f010794a	obj/kern/kernel.asm	/^f010794a:	c7 85 00 ff ff ff 00 	movl   $0x0,-0x100(%ebp)$/;"	l
f0107951	obj/kern/kernel.asm	/^f0107951:	00 00 00 $/;"	l
f0107954	obj/kern/kernel.asm	/^f0107954:	ba 0c 00 00 00       	mov    $0xc,%edx$/;"	l
f0107959	obj/kern/kernel.asm	/^f0107959:	8d 45 a0             	lea    -0x60(%ebp),%eax$/;"	l
f010795c	obj/kern/kernel.asm	/^f010795c:	e8 8e ff ff ff       	call   f01078ef <pci_conf_read>$/;"	l
f0107961	obj/kern/kernel.asm	/^f0107961:	89 c2                	mov    %eax,%edx$/;"	l
f0107963	obj/kern/kernel.asm	/^f0107963:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0107966	obj/kern/kernel.asm	/^f0107966:	83 e2 7f             	and    $0x7f,%edx$/;"	l
f0107969	obj/kern/kernel.asm	/^f0107969:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f010796c	obj/kern/kernel.asm	/^f010796c:	0f 87 6f 01 00 00    	ja     f0107ae1 <pci_scan_bus+0x1ca>$/;"	l
f0107972	obj/kern/kernel.asm	/^f0107972:	83 85 00 ff ff ff 01 	addl   $0x1,-0x100(%ebp)$/;"	l
f0107979	obj/kern/kernel.asm	/^f0107979:	b9 12 00 00 00       	mov    $0x12,%ecx$/;"	l
f010797e	obj/kern/kernel.asm	/^f010797e:	8d bd 10 ff ff ff    	lea    -0xf0(%ebp),%edi$/;"	l
f0107984	obj/kern/kernel.asm	/^f0107984:	8d 75 a0             	lea    -0x60(%ebp),%esi$/;"	l
f0107987	obj/kern/kernel.asm	/^f0107987:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0107989	obj/kern/kernel.asm	/^f0107989:	c7 85 18 ff ff ff 00 	movl   $0x0,-0xe8(%ebp)$/;"	l
f0107990	obj/kern/kernel.asm	/^f0107990:	00 00 00 $/;"	l
f0107993	obj/kern/kernel.asm	/^f0107993:	25 00 00 80 00       	and    $0x800000,%eax$/;"	l
f0107998	obj/kern/kernel.asm	/^f0107998:	89 85 04 ff ff ff    	mov    %eax,-0xfc(%ebp)$/;"	l
f010799e	obj/kern/kernel.asm	/^f010799e:	8d 9d 58 ff ff ff    	lea    -0xa8(%ebp),%ebx$/;"	l
f01079a4	obj/kern/kernel.asm	/^f01079a4:	e9 1d 01 00 00       	jmp    f0107ac6 <pci_scan_bus+0x1af>$/;"	l
f01079a9	obj/kern/kernel.asm	/^f01079a9:	b9 12 00 00 00       	mov    $0x12,%ecx$/;"	l
f01079ae	obj/kern/kernel.asm	/^f01079ae:	89 df                	mov    %ebx,%edi$/;"	l
f01079b0	obj/kern/kernel.asm	/^f01079b0:	8d b5 10 ff ff ff    	lea    -0xf0(%ebp),%esi$/;"	l
f01079b6	obj/kern/kernel.asm	/^f01079b6:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f01079b8	obj/kern/kernel.asm	/^f01079b8:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01079bd	obj/kern/kernel.asm	/^f01079bd:	8d 85 10 ff ff ff    	lea    -0xf0(%ebp),%eax$/;"	l
f01079c3	obj/kern/kernel.asm	/^f01079c3:	e8 27 ff ff ff       	call   f01078ef <pci_conf_read>$/;"	l
f01079c8	obj/kern/kernel.asm	/^f01079c8:	89 85 64 ff ff ff    	mov    %eax,-0x9c(%ebp)$/;"	l
f01079ce	obj/kern/kernel.asm	/^f01079ce:	66 83 f8 ff          	cmp    $0xffff,%ax$/;"	l
f01079d2	obj/kern/kernel.asm	/^f01079d2:	0f 84 e7 00 00 00    	je     f0107abf <pci_scan_bus+0x1a8>$/;"	l
f01079d8	obj/kern/kernel.asm	/^f01079d8:	ba 3c 00 00 00       	mov    $0x3c,%edx$/;"	l
f01079dd	obj/kern/kernel.asm	/^f01079dd:	89 d8                	mov    %ebx,%eax$/;"	l
f01079df	obj/kern/kernel.asm	/^f01079df:	e8 0b ff ff ff       	call   f01078ef <pci_conf_read>$/;"	l
f01079e4	obj/kern/kernel.asm	/^f01079e4:	88 45 9c             	mov    %al,-0x64(%ebp)$/;"	l
f01079e7	obj/kern/kernel.asm	/^f01079e7:	ba 08 00 00 00       	mov    $0x8,%edx$/;"	l
f01079ec	obj/kern/kernel.asm	/^f01079ec:	89 d8                	mov    %ebx,%eax$/;"	l
f01079ee	obj/kern/kernel.asm	/^f01079ee:	e8 fc fe ff ff       	call   f01078ef <pci_conf_read>$/;"	l
f01079f3	obj/kern/kernel.asm	/^f01079f3:	89 85 68 ff ff ff    	mov    %eax,-0x98(%ebp)$/;"	l
f01079f9	obj/kern/kernel.asm	/^f01079f9:	89 c2                	mov    %eax,%edx$/;"	l
f01079fb	obj/kern/kernel.asm	/^f01079fb:	c1 ea 18             	shr    $0x18,%edx$/;"	l
f01079fe	obj/kern/kernel.asm	/^f01079fe:	b9 c4 a2 10 f0       	mov    $0xf010a2c4,%ecx$/;"	l
f0107a03	obj/kern/kernel.asm	/^f0107a03:	83 fa 06             	cmp    $0x6,%edx$/;"	l
f0107a06	obj/kern/kernel.asm	/^f0107a06:	77 07                	ja     f0107a0f <pci_scan_bus+0xf8>$/;"	l
f0107a08	obj/kern/kernel.asm	/^f0107a08:	8b 0c 95 38 a3 10 f0 	mov    -0xfef5cc8(,%edx,4),%ecx$/;"	l
f0107a0f	obj/kern/kernel.asm	/^f0107a0f:	8b b5 64 ff ff ff    	mov    -0x9c(%ebp),%esi$/;"	l
f0107a15	obj/kern/kernel.asm	/^f0107a15:	0f b6 7d 9c          	movzbl -0x64(%ebp),%edi$/;"	l
f0107a19	obj/kern/kernel.asm	/^f0107a19:	89 7c 24 24          	mov    %edi,0x24(%esp)$/;"	l
f0107a1d	obj/kern/kernel.asm	/^f0107a1d:	89 4c 24 20          	mov    %ecx,0x20(%esp)$/;"	l
f0107a21	obj/kern/kernel.asm	/^f0107a21:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0107a24	obj/kern/kernel.asm	/^f0107a24:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0107a27	obj/kern/kernel.asm	/^f0107a27:	89 44 24 1c          	mov    %eax,0x1c(%esp)$/;"	l
f0107a2b	obj/kern/kernel.asm	/^f0107a2b:	89 54 24 18          	mov    %edx,0x18(%esp)$/;"	l
f0107a2f	obj/kern/kernel.asm	/^f0107a2f:	89 f0                	mov    %esi,%eax$/;"	l
f0107a31	obj/kern/kernel.asm	/^f0107a31:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0107a34	obj/kern/kernel.asm	/^f0107a34:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
f0107a38	obj/kern/kernel.asm	/^f0107a38:	0f b7 f6             	movzwl %si,%esi$/;"	l
f0107a3b	obj/kern/kernel.asm	/^f0107a3b:	89 74 24 10          	mov    %esi,0x10(%esp)$/;"	l
f0107a3f	obj/kern/kernel.asm	/^f0107a3f:	8b 85 60 ff ff ff    	mov    -0xa0(%ebp),%eax$/;"	l
f0107a45	obj/kern/kernel.asm	/^f0107a45:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0107a49	obj/kern/kernel.asm	/^f0107a49:	8b 85 5c ff ff ff    	mov    -0xa4(%ebp),%eax$/;"	l
f0107a4f	obj/kern/kernel.asm	/^f0107a4f:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0107a53	obj/kern/kernel.asm	/^f0107a53:	8b 85 58 ff ff ff    	mov    -0xa8(%ebp),%eax$/;"	l
f0107a59	obj/kern/kernel.asm	/^f0107a59:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0107a5c	obj/kern/kernel.asm	/^f0107a5c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0107a60	obj/kern/kernel.asm	/^f0107a60:	c7 04 24 50 a1 10 f0 	movl   $0xf010a150,(%esp)$/;"	l
f0107a67	obj/kern/kernel.asm	/^f0107a67:	e8 60 c5 ff ff       	call   f0103fcc <cprintf>$/;"	l
f0107a6c	obj/kern/kernel.asm	/^f0107a6c:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax$/;"	l
f0107a72	obj/kern/kernel.asm	/^f0107a72:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f0107a76	obj/kern/kernel.asm	/^f0107a76:	c7 44 24 08 10 54 12 	movl   $0xf0125410,0x8(%esp)$/;"	l
f0107a7d	obj/kern/kernel.asm	/^f0107a7d:	f0 $/;"	l
f0107a7e	obj/kern/kernel.asm	/^f0107a7e:	89 c2                	mov    %eax,%edx$/;"	l
f0107a80	obj/kern/kernel.asm	/^f0107a80:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0107a83	obj/kern/kernel.asm	/^f0107a83:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0107a86	obj/kern/kernel.asm	/^f0107a86:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0107a8a	obj/kern/kernel.asm	/^f0107a8a:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f0107a8d	obj/kern/kernel.asm	/^f0107a8d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0107a90	obj/kern/kernel.asm	/^f0107a90:	e8 f2 fc ff ff       	call   f0107787 <pci_attach_match>$/;"	l
f0107a95	obj/kern/kernel.asm	/^f0107a95:	85 c0                	test   %eax,%eax$/;"	l
f0107a97	obj/kern/kernel.asm	/^f0107a97:	75 26                	jne    f0107abf <pci_scan_bus+0x1a8>$/;"	l
f0107a99	obj/kern/kernel.asm	/^f0107a99:	8b 85 64 ff ff ff    	mov    -0x9c(%ebp),%eax$/;"	l
f0107a9f	obj/kern/kernel.asm	/^f0107a9f:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f0107aa3	obj/kern/kernel.asm	/^f0107aa3:	c7 44 24 08 f8 53 12 	movl   $0xf01253f8,0x8(%esp)$/;"	l
f0107aaa	obj/kern/kernel.asm	/^f0107aaa:	f0 $/;"	l
f0107aab	obj/kern/kernel.asm	/^f0107aab:	89 c2                	mov    %eax,%edx$/;"	l
f0107aad	obj/kern/kernel.asm	/^f0107aad:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0107ab0	obj/kern/kernel.asm	/^f0107ab0:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0107ab4	obj/kern/kernel.asm	/^f0107ab4:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0107ab7	obj/kern/kernel.asm	/^f0107ab7:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0107aba	obj/kern/kernel.asm	/^f0107aba:	e8 c8 fc ff ff       	call   f0107787 <pci_attach_match>$/;"	l
f0107abf	obj/kern/kernel.asm	/^f0107abf:	83 85 18 ff ff ff 01 	addl   $0x1,-0xe8(%ebp)$/;"	l
f0107ac6	obj/kern/kernel.asm	/^f0107ac6:	83 bd 04 ff ff ff 01 	cmpl   $0x1,-0xfc(%ebp)$/;"	l
f0107acd	obj/kern/kernel.asm	/^f0107acd:	19 c0                	sbb    %eax,%eax$/;"	l
f0107acf	obj/kern/kernel.asm	/^f0107acf:	83 e0 f9             	and    $0xfffffff9,%eax$/;"	l
f0107ad2	obj/kern/kernel.asm	/^f0107ad2:	83 c0 08             	add    $0x8,%eax$/;"	l
f0107ad5	obj/kern/kernel.asm	/^f0107ad5:	3b 85 18 ff ff ff    	cmp    -0xe8(%ebp),%eax$/;"	l
f0107adb	obj/kern/kernel.asm	/^f0107adb:	0f 87 c8 fe ff ff    	ja     f01079a9 <pci_scan_bus+0x92>$/;"	l
f0107ae1	obj/kern/kernel.asm	/^f0107ae1:	8b 45 a4             	mov    -0x5c(%ebp),%eax$/;"	l
f0107ae4	obj/kern/kernel.asm	/^f0107ae4:	83 c0 01             	add    $0x1,%eax$/;"	l
f0107ae7	obj/kern/kernel.asm	/^f0107ae7:	89 45 a4             	mov    %eax,-0x5c(%ebp)$/;"	l
f0107aea	obj/kern/kernel.asm	/^f0107aea:	83 f8 1f             	cmp    $0x1f,%eax$/;"	l
f0107aed	obj/kern/kernel.asm	/^f0107aed:	0f 86 61 fe ff ff    	jbe    f0107954 <pci_scan_bus+0x3d>$/;"	l
f0107af3	obj/kern/kernel.asm	/^f0107af3:	8b 85 00 ff ff ff    	mov    -0x100(%ebp),%eax$/;"	l
f0107af9	obj/kern/kernel.asm	/^f0107af9:	81 c4 1c 01 00 00    	add    $0x11c,%esp$/;"	l
f0107aff	obj/kern/kernel.asm	/^f0107aff:	5b                   	pop    %ebx$/;"	l
f0107b00	obj/kern/kernel.asm	/^f0107b00:	5e                   	pop    %esi$/;"	l
f0107b01	obj/kern/kernel.asm	/^f0107b01:	5f                   	pop    %edi$/;"	l
f0107b02	obj/kern/kernel.asm	/^f0107b02:	5d                   	pop    %ebp$/;"	l
f0107b03	obj/kern/kernel.asm	/^f0107b03:	c3                   	ret    $/;"	l
f0107b04	obj/kern/kernel.asm	/^f0107b04 <pci_bridge_attach>:$/;"	l
f0107b04	obj/kern/kernel.asm	/^f0107b04:	55                   	push   %ebp$/;"	l
f0107b05	obj/kern/kernel.asm	/^f0107b05:	89 e5                	mov    %esp,%ebp$/;"	l
f0107b07	obj/kern/kernel.asm	/^f0107b07:	57                   	push   %edi$/;"	l
f0107b08	obj/kern/kernel.asm	/^f0107b08:	56                   	push   %esi$/;"	l
f0107b09	obj/kern/kernel.asm	/^f0107b09:	53                   	push   %ebx$/;"	l
f0107b0a	obj/kern/kernel.asm	/^f0107b0a:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0107b0d	obj/kern/kernel.asm	/^f0107b0d:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0107b10	obj/kern/kernel.asm	/^f0107b10:	ba 1c 00 00 00       	mov    $0x1c,%edx$/;"	l
f0107b15	obj/kern/kernel.asm	/^f0107b15:	89 d8                	mov    %ebx,%eax$/;"	l
f0107b17	obj/kern/kernel.asm	/^f0107b17:	e8 d3 fd ff ff       	call   f01078ef <pci_conf_read>$/;"	l
f0107b1c	obj/kern/kernel.asm	/^f0107b1c:	89 c7                	mov    %eax,%edi$/;"	l
f0107b1e	obj/kern/kernel.asm	/^f0107b1e:	ba 18 00 00 00       	mov    $0x18,%edx$/;"	l
f0107b23	obj/kern/kernel.asm	/^f0107b23:	89 d8                	mov    %ebx,%eax$/;"	l
f0107b25	obj/kern/kernel.asm	/^f0107b25:	e8 c5 fd ff ff       	call   f01078ef <pci_conf_read>$/;"	l
f0107b2a	obj/kern/kernel.asm	/^f0107b2a:	83 e7 0f             	and    $0xf,%edi$/;"	l
f0107b2d	obj/kern/kernel.asm	/^f0107b2d:	83 ff 01             	cmp    $0x1,%edi$/;"	l
f0107b30	obj/kern/kernel.asm	/^f0107b30:	75 2a                	jne    f0107b5c <pci_bridge_attach+0x58>$/;"	l
f0107b32	obj/kern/kernel.asm	/^f0107b32:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0107b35	obj/kern/kernel.asm	/^f0107b35:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0107b39	obj/kern/kernel.asm	/^f0107b39:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f0107b3c	obj/kern/kernel.asm	/^f0107b3c:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0107b40	obj/kern/kernel.asm	/^f0107b40:	8b 03                	mov    (%ebx),%eax$/;"	l
f0107b42	obj/kern/kernel.asm	/^f0107b42:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0107b45	obj/kern/kernel.asm	/^f0107b45:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0107b49	obj/kern/kernel.asm	/^f0107b49:	c7 04 24 8c a1 10 f0 	movl   $0xf010a18c,(%esp)$/;"	l
f0107b50	obj/kern/kernel.asm	/^f0107b50:	e8 77 c4 ff ff       	call   f0103fcc <cprintf>$/;"	l
f0107b55	obj/kern/kernel.asm	/^f0107b55:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0107b5a	obj/kern/kernel.asm	/^f0107b5a:	eb 67                	jmp    f0107bc3 <pci_bridge_attach+0xbf>$/;"	l
f0107b5c	obj/kern/kernel.asm	/^f0107b5c:	89 c6                	mov    %eax,%esi$/;"	l
f0107b5e	obj/kern/kernel.asm	/^f0107b5e:	c7 44 24 08 08 00 00 	movl   $0x8,0x8(%esp)$/;"	l
f0107b65	obj/kern/kernel.asm	/^f0107b65:	00 $/;"	l
f0107b66	obj/kern/kernel.asm	/^f0107b66:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0107b6d	obj/kern/kernel.asm	/^f0107b6d:	00 $/;"	l
f0107b6e	obj/kern/kernel.asm	/^f0107b6e:	8d 7d e0             	lea    -0x20(%ebp),%edi$/;"	l
f0107b71	obj/kern/kernel.asm	/^f0107b71:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0107b74	obj/kern/kernel.asm	/^f0107b74:	e8 1e ea ff ff       	call   f0106597 <memset>$/;"	l
f0107b79	obj/kern/kernel.asm	/^f0107b79:	89 5d e0             	mov    %ebx,-0x20(%ebp)$/;"	l
f0107b7c	obj/kern/kernel.asm	/^f0107b7c:	89 f0                	mov    %esi,%eax$/;"	l
f0107b7e	obj/kern/kernel.asm	/^f0107b7e:	0f b6 c4             	movzbl %ah,%eax$/;"	l
f0107b81	obj/kern/kernel.asm	/^f0107b81:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0107b84	obj/kern/kernel.asm	/^f0107b84:	89 f2                	mov    %esi,%edx$/;"	l
f0107b86	obj/kern/kernel.asm	/^f0107b86:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0107b89	obj/kern/kernel.asm	/^f0107b89:	0f b6 f2             	movzbl %dl,%esi$/;"	l
f0107b8c	obj/kern/kernel.asm	/^f0107b8c:	89 74 24 14          	mov    %esi,0x14(%esp)$/;"	l
f0107b90	obj/kern/kernel.asm	/^f0107b90:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f0107b94	obj/kern/kernel.asm	/^f0107b94:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0107b97	obj/kern/kernel.asm	/^f0107b97:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0107b9b	obj/kern/kernel.asm	/^f0107b9b:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f0107b9e	obj/kern/kernel.asm	/^f0107b9e:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0107ba2	obj/kern/kernel.asm	/^f0107ba2:	8b 03                	mov    (%ebx),%eax$/;"	l
f0107ba4	obj/kern/kernel.asm	/^f0107ba4:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0107ba7	obj/kern/kernel.asm	/^f0107ba7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0107bab	obj/kern/kernel.asm	/^f0107bab:	c7 04 24 c0 a1 10 f0 	movl   $0xf010a1c0,(%esp)$/;"	l
f0107bb2	obj/kern/kernel.asm	/^f0107bb2:	e8 15 c4 ff ff       	call   f0103fcc <cprintf>$/;"	l
f0107bb7	obj/kern/kernel.asm	/^f0107bb7:	89 f8                	mov    %edi,%eax$/;"	l
f0107bb9	obj/kern/kernel.asm	/^f0107bb9:	e8 59 fd ff ff       	call   f0107917 <pci_scan_bus>$/;"	l
f0107bbe	obj/kern/kernel.asm	/^f0107bbe:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0107bc3	obj/kern/kernel.asm	/^f0107bc3:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f0107bc6	obj/kern/kernel.asm	/^f0107bc6:	5b                   	pop    %ebx$/;"	l
f0107bc7	obj/kern/kernel.asm	/^f0107bc7:	5e                   	pop    %esi$/;"	l
f0107bc8	obj/kern/kernel.asm	/^f0107bc8:	5f                   	pop    %edi$/;"	l
f0107bc9	obj/kern/kernel.asm	/^f0107bc9:	5d                   	pop    %ebp$/;"	l
f0107bca	obj/kern/kernel.asm	/^f0107bca:	c3                   	ret    $/;"	l
f0107bcb	obj/kern/kernel.asm	/^f0107bcb <pci_conf_write>:$/;"	l
f0107bcb	obj/kern/kernel.asm	/^f0107bcb:	55                   	push   %ebp$/;"	l
f0107bcc	obj/kern/kernel.asm	/^f0107bcc:	89 e5                	mov    %esp,%ebp$/;"	l
f0107bce	obj/kern/kernel.asm	/^f0107bce:	56                   	push   %esi$/;"	l
f0107bcf	obj/kern/kernel.asm	/^f0107bcf:	53                   	push   %ebx$/;"	l
f0107bd0	obj/kern/kernel.asm	/^f0107bd0:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0107bd3	obj/kern/kernel.asm	/^f0107bd3:	89 cb                	mov    %ecx,%ebx$/;"	l
f0107bd5	obj/kern/kernel.asm	/^f0107bd5:	8b 48 08             	mov    0x8(%eax),%ecx$/;"	l
f0107bd8	obj/kern/kernel.asm	/^f0107bd8:	8b 70 04             	mov    0x4(%eax),%esi$/;"	l
f0107bdb	obj/kern/kernel.asm	/^f0107bdb:	8b 00                	mov    (%eax),%eax$/;"	l
f0107bdd	obj/kern/kernel.asm	/^f0107bdd:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0107be0	obj/kern/kernel.asm	/^f0107be0:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0107be3	obj/kern/kernel.asm	/^f0107be3:	89 f2                	mov    %esi,%edx$/;"	l
f0107be5	obj/kern/kernel.asm	/^f0107be5:	e8 00 fc ff ff       	call   f01077ea <pci_conf1_set_addr>$/;"	l
f0107bea	obj/kern/kernel.asm	/^f0107bea:	ba fc 0c 00 00       	mov    $0xcfc,%edx$/;"	l
f0107bef	obj/kern/kernel.asm	/^f0107bef:	89 d8                	mov    %ebx,%eax$/;"	l
f0107bf1	obj/kern/kernel.asm	/^f0107bf1:	ef                   	out    %eax,(%dx)$/;"	l
f0107bf2	obj/kern/kernel.asm	/^f0107bf2:	83 c4 10             	add    $0x10,%esp$/;"	l
f0107bf5	obj/kern/kernel.asm	/^f0107bf5:	5b                   	pop    %ebx$/;"	l
f0107bf6	obj/kern/kernel.asm	/^f0107bf6:	5e                   	pop    %esi$/;"	l
f0107bf7	obj/kern/kernel.asm	/^f0107bf7:	5d                   	pop    %ebp$/;"	l
f0107bf8	obj/kern/kernel.asm	/^f0107bf8:	c3                   	ret    $/;"	l
f0107bf9	obj/kern/kernel.asm	/^f0107bf9 <pci_func_enable>:$/;"	l
f0107bf9	obj/kern/kernel.asm	/^f0107bf9:	55                   	push   %ebp$/;"	l
f0107bfa	obj/kern/kernel.asm	/^f0107bfa:	89 e5                	mov    %esp,%ebp$/;"	l
f0107bfc	obj/kern/kernel.asm	/^f0107bfc:	57                   	push   %edi$/;"	l
f0107bfd	obj/kern/kernel.asm	/^f0107bfd:	56                   	push   %esi$/;"	l
f0107bfe	obj/kern/kernel.asm	/^f0107bfe:	53                   	push   %ebx$/;"	l
f0107bff	obj/kern/kernel.asm	/^f0107bff:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f0107c02	obj/kern/kernel.asm	/^f0107c02:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0107c05	obj/kern/kernel.asm	/^f0107c05:	b9 07 00 00 00       	mov    $0x7,%ecx$/;"	l
f0107c0a	obj/kern/kernel.asm	/^f0107c0a:	ba 04 00 00 00       	mov    $0x4,%edx$/;"	l
f0107c0f	obj/kern/kernel.asm	/^f0107c0f:	89 f8                	mov    %edi,%eax$/;"	l
f0107c11	obj/kern/kernel.asm	/^f0107c11:	e8 b5 ff ff ff       	call   f0107bcb <pci_conf_write>$/;"	l
f0107c16	obj/kern/kernel.asm	/^f0107c16:	be 10 00 00 00       	mov    $0x10,%esi$/;"	l
f0107c1b	obj/kern/kernel.asm	/^f0107c1b:	89 f2                	mov    %esi,%edx$/;"	l
f0107c1d	obj/kern/kernel.asm	/^f0107c1d:	89 f8                	mov    %edi,%eax$/;"	l
f0107c1f	obj/kern/kernel.asm	/^f0107c1f:	e8 cb fc ff ff       	call   f01078ef <pci_conf_read>$/;"	l
f0107c24	obj/kern/kernel.asm	/^f0107c24:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0107c27	obj/kern/kernel.asm	/^f0107c27:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx$/;"	l
f0107c2c	obj/kern/kernel.asm	/^f0107c2c:	89 f2                	mov    %esi,%edx$/;"	l
f0107c2e	obj/kern/kernel.asm	/^f0107c2e:	89 f8                	mov    %edi,%eax$/;"	l
f0107c30	obj/kern/kernel.asm	/^f0107c30:	e8 96 ff ff ff       	call   f0107bcb <pci_conf_write>$/;"	l
f0107c35	obj/kern/kernel.asm	/^f0107c35:	89 f2                	mov    %esi,%edx$/;"	l
f0107c37	obj/kern/kernel.asm	/^f0107c37:	89 f8                	mov    %edi,%eax$/;"	l
f0107c39	obj/kern/kernel.asm	/^f0107c39:	e8 b1 fc ff ff       	call   f01078ef <pci_conf_read>$/;"	l
f0107c3e	obj/kern/kernel.asm	/^f0107c3e:	bb 04 00 00 00       	mov    $0x4,%ebx$/;"	l
f0107c43	obj/kern/kernel.asm	/^f0107c43:	85 c0                	test   %eax,%eax$/;"	l
f0107c45	obj/kern/kernel.asm	/^f0107c45:	0f 84 c1 00 00 00    	je     f0107d0c <pci_func_enable+0x113>$/;"	l
f0107c4b	obj/kern/kernel.asm	/^f0107c4b:	8d 56 f0             	lea    -0x10(%esi),%edx$/;"	l
f0107c4e	obj/kern/kernel.asm	/^f0107c4e:	c1 ea 02             	shr    $0x2,%edx$/;"	l
f0107c51	obj/kern/kernel.asm	/^f0107c51:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f0107c54	obj/kern/kernel.asm	/^f0107c54:	a8 01                	test   $0x1,%al$/;"	l
f0107c56	obj/kern/kernel.asm	/^f0107c56:	75 2c                	jne    f0107c84 <pci_func_enable+0x8b>$/;"	l
f0107c58	obj/kern/kernel.asm	/^f0107c58:	89 c2                	mov    %eax,%edx$/;"	l
f0107c5a	obj/kern/kernel.asm	/^f0107c5a:	83 e2 06             	and    $0x6,%edx$/;"	l
f0107c5d	obj/kern/kernel.asm	/^f0107c5d:	83 fa 04             	cmp    $0x4,%edx$/;"	l
f0107c60	obj/kern/kernel.asm	/^f0107c60:	0f 94 c3             	sete   %bl$/;"	l
f0107c63	obj/kern/kernel.asm	/^f0107c63:	0f b6 db             	movzbl %bl,%ebx$/;"	l
f0107c66	obj/kern/kernel.asm	/^f0107c66:	8d 1c 9d 04 00 00 00 	lea    0x4(,%ebx,4),%ebx$/;"	l
f0107c6d	obj/kern/kernel.asm	/^f0107c6d:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
f0107c70	obj/kern/kernel.asm	/^f0107c70:	89 c2                	mov    %eax,%edx$/;"	l
f0107c72	obj/kern/kernel.asm	/^f0107c72:	f7 da                	neg    %edx$/;"	l
f0107c74	obj/kern/kernel.asm	/^f0107c74:	21 d0                	and    %edx,%eax$/;"	l
f0107c76	obj/kern/kernel.asm	/^f0107c76:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0107c79	obj/kern/kernel.asm	/^f0107c79:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0107c7c	obj/kern/kernel.asm	/^f0107c7c:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
f0107c7f	obj/kern/kernel.asm	/^f0107c7f:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0107c82	obj/kern/kernel.asm	/^f0107c82:	eb 1a                	jmp    f0107c9e <pci_func_enable+0xa5>$/;"	l
f0107c84	obj/kern/kernel.asm	/^f0107c84:	83 e0 fc             	and    $0xfffffffc,%eax$/;"	l
f0107c87	obj/kern/kernel.asm	/^f0107c87:	89 c2                	mov    %eax,%edx$/;"	l
f0107c89	obj/kern/kernel.asm	/^f0107c89:	f7 da                	neg    %edx$/;"	l
f0107c8b	obj/kern/kernel.asm	/^f0107c8b:	21 d0                	and    %edx,%eax$/;"	l
f0107c8d	obj/kern/kernel.asm	/^f0107c8d:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0107c90	obj/kern/kernel.asm	/^f0107c90:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0107c93	obj/kern/kernel.asm	/^f0107c93:	83 e0 fc             	and    $0xfffffffc,%eax$/;"	l
f0107c96	obj/kern/kernel.asm	/^f0107c96:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0107c99	obj/kern/kernel.asm	/^f0107c99:	bb 04 00 00 00       	mov    $0x4,%ebx$/;"	l
f0107c9e	obj/kern/kernel.asm	/^f0107c9e:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f0107ca1	obj/kern/kernel.asm	/^f0107ca1:	89 f2                	mov    %esi,%edx$/;"	l
f0107ca3	obj/kern/kernel.asm	/^f0107ca3:	89 f8                	mov    %edi,%eax$/;"	l
f0107ca5	obj/kern/kernel.asm	/^f0107ca5:	e8 21 ff ff ff       	call   f0107bcb <pci_conf_write>$/;"	l
f0107caa	obj/kern/kernel.asm	/^f0107caa:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0107cad	obj/kern/kernel.asm	/^f0107cad:	8d 04 87             	lea    (%edi,%eax,4),%eax$/;"	l
f0107cb0	obj/kern/kernel.asm	/^f0107cb0:	8b 4d d8             	mov    -0x28(%ebp),%ecx$/;"	l
f0107cb3	obj/kern/kernel.asm	/^f0107cb3:	89 48 14             	mov    %ecx,0x14(%eax)$/;"	l
f0107cb6	obj/kern/kernel.asm	/^f0107cb6:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0107cb9	obj/kern/kernel.asm	/^f0107cb9:	89 50 2c             	mov    %edx,0x2c(%eax)$/;"	l
f0107cbc	obj/kern/kernel.asm	/^f0107cbc:	85 c9                	test   %ecx,%ecx$/;"	l
f0107cbe	obj/kern/kernel.asm	/^f0107cbe:	75 4c                	jne    f0107d0c <pci_func_enable+0x113>$/;"	l
f0107cc0	obj/kern/kernel.asm	/^f0107cc0:	85 d2                	test   %edx,%edx$/;"	l
f0107cc2	obj/kern/kernel.asm	/^f0107cc2:	74 48                	je     f0107d0c <pci_func_enable+0x113>$/;"	l
f0107cc4	obj/kern/kernel.asm	/^f0107cc4:	8b 47 0c             	mov    0xc(%edi),%eax$/;"	l
f0107cc7	obj/kern/kernel.asm	/^f0107cc7:	89 54 24 20          	mov    %edx,0x20(%esp)$/;"	l
f0107ccb	obj/kern/kernel.asm	/^f0107ccb:	8b 4d d8             	mov    -0x28(%ebp),%ecx$/;"	l
f0107cce	obj/kern/kernel.asm	/^f0107cce:	89 4c 24 1c          	mov    %ecx,0x1c(%esp)$/;"	l
f0107cd2	obj/kern/kernel.asm	/^f0107cd2:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
f0107cd5	obj/kern/kernel.asm	/^f0107cd5:	89 4c 24 18          	mov    %ecx,0x18(%esp)$/;"	l
f0107cd9	obj/kern/kernel.asm	/^f0107cd9:	89 c2                	mov    %eax,%edx$/;"	l
f0107cdb	obj/kern/kernel.asm	/^f0107cdb:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0107cde	obj/kern/kernel.asm	/^f0107cde:	89 54 24 14          	mov    %edx,0x14(%esp)$/;"	l
f0107ce2	obj/kern/kernel.asm	/^f0107ce2:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0107ce5	obj/kern/kernel.asm	/^f0107ce5:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f0107ce9	obj/kern/kernel.asm	/^f0107ce9:	8b 47 08             	mov    0x8(%edi),%eax$/;"	l
f0107cec	obj/kern/kernel.asm	/^f0107cec:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0107cf0	obj/kern/kernel.asm	/^f0107cf0:	8b 47 04             	mov    0x4(%edi),%eax$/;"	l
f0107cf3	obj/kern/kernel.asm	/^f0107cf3:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0107cf7	obj/kern/kernel.asm	/^f0107cf7:	8b 07                	mov    (%edi),%eax$/;"	l
f0107cf9	obj/kern/kernel.asm	/^f0107cf9:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0107cfc	obj/kern/kernel.asm	/^f0107cfc:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0107d00	obj/kern/kernel.asm	/^f0107d00:	c7 04 24 f0 a1 10 f0 	movl   $0xf010a1f0,(%esp)$/;"	l
f0107d07	obj/kern/kernel.asm	/^f0107d07:	e8 c0 c2 ff ff       	call   f0103fcc <cprintf>$/;"	l
f0107d0c	obj/kern/kernel.asm	/^f0107d0c:	01 de                	add    %ebx,%esi$/;"	l
f0107d0e	obj/kern/kernel.asm	/^f0107d0e:	83 fe 27             	cmp    $0x27,%esi$/;"	l
f0107d11	obj/kern/kernel.asm	/^f0107d11:	0f 86 04 ff ff ff    	jbe    f0107c1b <pci_func_enable+0x22>$/;"	l
f0107d17	obj/kern/kernel.asm	/^f0107d17:	8b 47 0c             	mov    0xc(%edi),%eax$/;"	l
f0107d1a	obj/kern/kernel.asm	/^f0107d1a:	89 c2                	mov    %eax,%edx$/;"	l
f0107d1c	obj/kern/kernel.asm	/^f0107d1c:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0107d1f	obj/kern/kernel.asm	/^f0107d1f:	89 54 24 14          	mov    %edx,0x14(%esp)$/;"	l
f0107d23	obj/kern/kernel.asm	/^f0107d23:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0107d26	obj/kern/kernel.asm	/^f0107d26:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f0107d2a	obj/kern/kernel.asm	/^f0107d2a:	8b 47 08             	mov    0x8(%edi),%eax$/;"	l
f0107d2d	obj/kern/kernel.asm	/^f0107d2d:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0107d31	obj/kern/kernel.asm	/^f0107d31:	8b 47 04             	mov    0x4(%edi),%eax$/;"	l
f0107d34	obj/kern/kernel.asm	/^f0107d34:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0107d38	obj/kern/kernel.asm	/^f0107d38:	8b 07                	mov    (%edi),%eax$/;"	l
f0107d3a	obj/kern/kernel.asm	/^f0107d3a:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0107d3d	obj/kern/kernel.asm	/^f0107d3d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0107d41	obj/kern/kernel.asm	/^f0107d41:	c7 04 24 4c a2 10 f0 	movl   $0xf010a24c,(%esp)$/;"	l
f0107d48	obj/kern/kernel.asm	/^f0107d48:	e8 7f c2 ff ff       	call   f0103fcc <cprintf>$/;"	l
f0107d4d	obj/kern/kernel.asm	/^f0107d4d:	83 c4 4c             	add    $0x4c,%esp$/;"	l
f0107d50	obj/kern/kernel.asm	/^f0107d50:	5b                   	pop    %ebx$/;"	l
f0107d51	obj/kern/kernel.asm	/^f0107d51:	5e                   	pop    %esi$/;"	l
f0107d52	obj/kern/kernel.asm	/^f0107d52:	5f                   	pop    %edi$/;"	l
f0107d53	obj/kern/kernel.asm	/^f0107d53:	5d                   	pop    %ebp$/;"	l
f0107d54	obj/kern/kernel.asm	/^f0107d54:	c3                   	ret    $/;"	l
f0107d55	obj/kern/kernel.asm	/^f0107d55 <pci_init>:$/;"	l
f0107d55	obj/kern/kernel.asm	/^f0107d55:	55                   	push   %ebp$/;"	l
f0107d56	obj/kern/kernel.asm	/^f0107d56:	89 e5                	mov    %esp,%ebp$/;"	l
f0107d58	obj/kern/kernel.asm	/^f0107d58:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0107d5b	obj/kern/kernel.asm	/^f0107d5b:	c7 44 24 08 08 00 00 	movl   $0x8,0x8(%esp)$/;"	l
f0107d62	obj/kern/kernel.asm	/^f0107d62:	00 $/;"	l
f0107d63	obj/kern/kernel.asm	/^f0107d63:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0107d6a	obj/kern/kernel.asm	/^f0107d6a:	00 $/;"	l
f0107d6b	obj/kern/kernel.asm	/^f0107d6b:	c7 04 24 80 9e 2b f0 	movl   $0xf02b9e80,(%esp)$/;"	l
f0107d72	obj/kern/kernel.asm	/^f0107d72:	e8 20 e8 ff ff       	call   f0106597 <memset>$/;"	l
f0107d77	obj/kern/kernel.asm	/^f0107d77:	b8 80 9e 2b f0       	mov    $0xf02b9e80,%eax$/;"	l
f0107d7c	obj/kern/kernel.asm	/^f0107d7c:	e8 96 fb ff ff       	call   f0107917 <pci_scan_bus>$/;"	l
f0107d81	obj/kern/kernel.asm	/^f0107d81:	c9                   	leave  $/;"	l
f0107d82	obj/kern/kernel.asm	/^f0107d82:	c3                   	ret    $/;"	l
f0107d83	obj/kern/kernel.asm	/^f0107d83 <time_init>:$/;"	l
f0107d83	obj/kern/kernel.asm	/^f0107d83:	55                   	push   %ebp$/;"	l
f0107d84	obj/kern/kernel.asm	/^f0107d84:	89 e5                	mov    %esp,%ebp$/;"	l
f0107d86	obj/kern/kernel.asm	/^f0107d86:	c7 05 88 9e 2b f0 00 	movl   $0x0,0xf02b9e88$/;"	l
f0107d8d	obj/kern/kernel.asm	/^f0107d8d:	00 00 00 $/;"	l
f0107d90	obj/kern/kernel.asm	/^f0107d90:	5d                   	pop    %ebp$/;"	l
f0107d91	obj/kern/kernel.asm	/^f0107d91:	c3                   	ret    $/;"	l
f0107d92	obj/kern/kernel.asm	/^f0107d92 <time_tick>:$/;"	l
f0107d92	obj/kern/kernel.asm	/^f0107d92:	a1 88 9e 2b f0       	mov    0xf02b9e88,%eax$/;"	l
f0107d97	obj/kern/kernel.asm	/^f0107d97:	83 c0 01             	add    $0x1,%eax$/;"	l
f0107d9a	obj/kern/kernel.asm	/^f0107d9a:	a3 88 9e 2b f0       	mov    %eax,0xf02b9e88$/;"	l
f0107d9f	obj/kern/kernel.asm	/^f0107d9f:	8d 14 80             	lea    (%eax,%eax,4),%edx$/;"	l
f0107da2	obj/kern/kernel.asm	/^f0107da2:	01 d2                	add    %edx,%edx$/;"	l
f0107da4	obj/kern/kernel.asm	/^f0107da4:	39 d0                	cmp    %edx,%eax$/;"	l
f0107da6	obj/kern/kernel.asm	/^f0107da6:	76 22                	jbe    f0107dca <time_tick+0x38>$/;"	l
f0107da8	obj/kern/kernel.asm	/^f0107da8:	55                   	push   %ebp$/;"	l
f0107da9	obj/kern/kernel.asm	/^f0107da9:	89 e5                	mov    %esp,%ebp$/;"	l
f0107dab	obj/kern/kernel.asm	/^f0107dab:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0107dae	obj/kern/kernel.asm	/^f0107dae:	c7 44 24 08 54 a3 10 	movl   $0xf010a354,0x8(%esp)$/;"	l
f0107db5	obj/kern/kernel.asm	/^f0107db5:	f0 $/;"	l
f0107db6	obj/kern/kernel.asm	/^f0107db6:	c7 44 24 04 13 00 00 	movl   $0x13,0x4(%esp)$/;"	l
f0107dbd	obj/kern/kernel.asm	/^f0107dbd:	00 $/;"	l
f0107dbe	obj/kern/kernel.asm	/^f0107dbe:	c7 04 24 6f a3 10 f0 	movl   $0xf010a36f,(%esp)$/;"	l
f0107dc5	obj/kern/kernel.asm	/^f0107dc5:	e8 76 82 ff ff       	call   f0100040 <_panic>$/;"	l
f0107dca	obj/kern/kernel.asm	/^f0107dca:	f3 c3                	repz ret $/;"	l
f0107dcc	obj/kern/kernel.asm	/^f0107dcc <time_msec>:$/;"	l
f0107dcc	obj/kern/kernel.asm	/^f0107dcc:	55                   	push   %ebp$/;"	l
f0107dcd	obj/kern/kernel.asm	/^f0107dcd:	89 e5                	mov    %esp,%ebp$/;"	l
f0107dcf	obj/kern/kernel.asm	/^f0107dcf:	a1 88 9e 2b f0       	mov    0xf02b9e88,%eax$/;"	l
f0107dd4	obj/kern/kernel.asm	/^f0107dd4:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f0107dd7	obj/kern/kernel.asm	/^f0107dd7:	01 c0                	add    %eax,%eax$/;"	l
f0107dd9	obj/kern/kernel.asm	/^f0107dd9:	5d                   	pop    %ebp$/;"	l
f0107dda	obj/kern/kernel.asm	/^f0107dda:	c3                   	ret    $/;"	l
f0107ddb	obj/kern/kernel.asm	/^f0107ddb:	66 90                	xchg   %ax,%ax$/;"	l
f0107ddd	obj/kern/kernel.asm	/^f0107ddd:	66 90                	xchg   %ax,%ax$/;"	l
f0107ddf	obj/kern/kernel.asm	/^f0107ddf:	90                   	nop$/;"	l
f0107de0	obj/kern/kernel.asm	/^f0107de0 <__udivdi3>:$/;"	l
f0107de0	obj/kern/kernel.asm	/^f0107de0:	55                   	push   %ebp$/;"	l
f0107de1	obj/kern/kernel.asm	/^f0107de1:	57                   	push   %edi$/;"	l
f0107de2	obj/kern/kernel.asm	/^f0107de2:	56                   	push   %esi$/;"	l
f0107de3	obj/kern/kernel.asm	/^f0107de3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0107de6	obj/kern/kernel.asm	/^f0107de6:	8b 44 24 28          	mov    0x28(%esp),%eax$/;"	l
f0107dea	obj/kern/kernel.asm	/^f0107dea:	8b 7c 24 1c          	mov    0x1c(%esp),%edi$/;"	l
f0107dee	obj/kern/kernel.asm	/^f0107dee:	8b 6c 24 20          	mov    0x20(%esp),%ebp$/;"	l
f0107df2	obj/kern/kernel.asm	/^f0107df2:	8b 4c 24 24          	mov    0x24(%esp),%ecx$/;"	l
f0107df6	obj/kern/kernel.asm	/^f0107df6:	85 c0                	test   %eax,%eax$/;"	l
f0107df8	obj/kern/kernel.asm	/^f0107df8:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0107dfc	obj/kern/kernel.asm	/^f0107dfc:	89 ea                	mov    %ebp,%edx$/;"	l
f0107dfe	obj/kern/kernel.asm	/^f0107dfe:	89 0c 24             	mov    %ecx,(%esp)$/;"	l
f0107e01	obj/kern/kernel.asm	/^f0107e01:	75 2d                	jne    f0107e30 <__udivdi3+0x50>$/;"	l
f0107e03	obj/kern/kernel.asm	/^f0107e03:	39 e9                	cmp    %ebp,%ecx$/;"	l
f0107e05	obj/kern/kernel.asm	/^f0107e05:	77 61                	ja     f0107e68 <__udivdi3+0x88>$/;"	l
f0107e07	obj/kern/kernel.asm	/^f0107e07:	85 c9                	test   %ecx,%ecx$/;"	l
f0107e09	obj/kern/kernel.asm	/^f0107e09:	89 ce                	mov    %ecx,%esi$/;"	l
f0107e0b	obj/kern/kernel.asm	/^f0107e0b:	75 0b                	jne    f0107e18 <__udivdi3+0x38>$/;"	l
f0107e0d	obj/kern/kernel.asm	/^f0107e0d:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0107e12	obj/kern/kernel.asm	/^f0107e12:	31 d2                	xor    %edx,%edx$/;"	l
f0107e14	obj/kern/kernel.asm	/^f0107e14:	f7 f1                	div    %ecx$/;"	l
f0107e16	obj/kern/kernel.asm	/^f0107e16:	89 c6                	mov    %eax,%esi$/;"	l
f0107e18	obj/kern/kernel.asm	/^f0107e18:	31 d2                	xor    %edx,%edx$/;"	l
f0107e1a	obj/kern/kernel.asm	/^f0107e1a:	89 e8                	mov    %ebp,%eax$/;"	l
f0107e1c	obj/kern/kernel.asm	/^f0107e1c:	f7 f6                	div    %esi$/;"	l
f0107e1e	obj/kern/kernel.asm	/^f0107e1e:	89 c5                	mov    %eax,%ebp$/;"	l
f0107e20	obj/kern/kernel.asm	/^f0107e20:	89 f8                	mov    %edi,%eax$/;"	l
f0107e22	obj/kern/kernel.asm	/^f0107e22:	f7 f6                	div    %esi$/;"	l
f0107e24	obj/kern/kernel.asm	/^f0107e24:	89 ea                	mov    %ebp,%edx$/;"	l
f0107e26	obj/kern/kernel.asm	/^f0107e26:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0107e29	obj/kern/kernel.asm	/^f0107e29:	5e                   	pop    %esi$/;"	l
f0107e2a	obj/kern/kernel.asm	/^f0107e2a:	5f                   	pop    %edi$/;"	l
f0107e2b	obj/kern/kernel.asm	/^f0107e2b:	5d                   	pop    %ebp$/;"	l
f0107e2c	obj/kern/kernel.asm	/^f0107e2c:	c3                   	ret    $/;"	l
f0107e2d	obj/kern/kernel.asm	/^f0107e2d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0107e30	obj/kern/kernel.asm	/^f0107e30:	39 e8                	cmp    %ebp,%eax$/;"	l
f0107e32	obj/kern/kernel.asm	/^f0107e32:	77 24                	ja     f0107e58 <__udivdi3+0x78>$/;"	l
f0107e34	obj/kern/kernel.asm	/^f0107e34:	0f bd e8             	bsr    %eax,%ebp$/;"	l
f0107e37	obj/kern/kernel.asm	/^f0107e37:	83 f5 1f             	xor    $0x1f,%ebp$/;"	l
f0107e3a	obj/kern/kernel.asm	/^f0107e3a:	75 3c                	jne    f0107e78 <__udivdi3+0x98>$/;"	l
f0107e3c	obj/kern/kernel.asm	/^f0107e3c:	8b 74 24 04          	mov    0x4(%esp),%esi$/;"	l
f0107e40	obj/kern/kernel.asm	/^f0107e40:	39 34 24             	cmp    %esi,(%esp)$/;"	l
f0107e43	obj/kern/kernel.asm	/^f0107e43:	0f 86 9f 00 00 00    	jbe    f0107ee8 <__udivdi3+0x108>$/;"	l
f0107e49	obj/kern/kernel.asm	/^f0107e49:	39 d0                	cmp    %edx,%eax$/;"	l
f0107e4b	obj/kern/kernel.asm	/^f0107e4b:	0f 82 97 00 00 00    	jb     f0107ee8 <__udivdi3+0x108>$/;"	l
f0107e51	obj/kern/kernel.asm	/^f0107e51:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0107e58	obj/kern/kernel.asm	/^f0107e58:	31 d2                	xor    %edx,%edx$/;"	l
f0107e5a	obj/kern/kernel.asm	/^f0107e5a:	31 c0                	xor    %eax,%eax$/;"	l
f0107e5c	obj/kern/kernel.asm	/^f0107e5c:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0107e5f	obj/kern/kernel.asm	/^f0107e5f:	5e                   	pop    %esi$/;"	l
f0107e60	obj/kern/kernel.asm	/^f0107e60:	5f                   	pop    %edi$/;"	l
f0107e61	obj/kern/kernel.asm	/^f0107e61:	5d                   	pop    %ebp$/;"	l
f0107e62	obj/kern/kernel.asm	/^f0107e62:	c3                   	ret    $/;"	l
f0107e63	obj/kern/kernel.asm	/^f0107e63:	90                   	nop$/;"	l
f0107e64	obj/kern/kernel.asm	/^f0107e64:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0107e68	obj/kern/kernel.asm	/^f0107e68:	89 f8                	mov    %edi,%eax$/;"	l
f0107e6a	obj/kern/kernel.asm	/^f0107e6a:	f7 f1                	div    %ecx$/;"	l
f0107e6c	obj/kern/kernel.asm	/^f0107e6c:	31 d2                	xor    %edx,%edx$/;"	l
f0107e6e	obj/kern/kernel.asm	/^f0107e6e:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0107e71	obj/kern/kernel.asm	/^f0107e71:	5e                   	pop    %esi$/;"	l
f0107e72	obj/kern/kernel.asm	/^f0107e72:	5f                   	pop    %edi$/;"	l
f0107e73	obj/kern/kernel.asm	/^f0107e73:	5d                   	pop    %ebp$/;"	l
f0107e74	obj/kern/kernel.asm	/^f0107e74:	c3                   	ret    $/;"	l
f0107e75	obj/kern/kernel.asm	/^f0107e75:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0107e78	obj/kern/kernel.asm	/^f0107e78:	89 e9                	mov    %ebp,%ecx$/;"	l
f0107e7a	obj/kern/kernel.asm	/^f0107e7a:	8b 3c 24             	mov    (%esp),%edi$/;"	l
f0107e7d	obj/kern/kernel.asm	/^f0107e7d:	d3 e0                	shl    %cl,%eax$/;"	d
f0107e7f	obj/kern/kernel.asm	/^f0107e7f:	89 c6                	mov    %eax,%esi$/;"	l
f0107e81	obj/kern/kernel.asm	/^f0107e81:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0107e86	obj/kern/kernel.asm	/^f0107e86:	29 e8                	sub    %ebp,%eax$/;"	l
f0107e88	obj/kern/kernel.asm	/^f0107e88:	89 c1                	mov    %eax,%ecx$/;"	l
f0107e8a	obj/kern/kernel.asm	/^f0107e8a:	d3 ef                	shr    %cl,%edi$/;"	d
f0107e8c	obj/kern/kernel.asm	/^f0107e8c:	89 e9                	mov    %ebp,%ecx$/;"	l
f0107e8e	obj/kern/kernel.asm	/^f0107e8e:	89 7c 24 08          	mov    %edi,0x8(%esp)$/;"	l
f0107e92	obj/kern/kernel.asm	/^f0107e92:	8b 3c 24             	mov    (%esp),%edi$/;"	l
f0107e95	obj/kern/kernel.asm	/^f0107e95:	09 74 24 08          	or     %esi,0x8(%esp)$/;"	l
f0107e99	obj/kern/kernel.asm	/^f0107e99:	89 d6                	mov    %edx,%esi$/;"	l
f0107e9b	obj/kern/kernel.asm	/^f0107e9b:	d3 e7                	shl    %cl,%edi$/;"	d
f0107e9d	obj/kern/kernel.asm	/^f0107e9d:	89 c1                	mov    %eax,%ecx$/;"	l
f0107e9f	obj/kern/kernel.asm	/^f0107e9f:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0107ea2	obj/kern/kernel.asm	/^f0107ea2:	8b 7c 24 04          	mov    0x4(%esp),%edi$/;"	l
f0107ea6	obj/kern/kernel.asm	/^f0107ea6:	d3 ee                	shr    %cl,%esi$/;"	d
f0107ea8	obj/kern/kernel.asm	/^f0107ea8:	89 e9                	mov    %ebp,%ecx$/;"	l
f0107eaa	obj/kern/kernel.asm	/^f0107eaa:	d3 e2                	shl    %cl,%edx$/;"	d
f0107eac	obj/kern/kernel.asm	/^f0107eac:	89 c1                	mov    %eax,%ecx$/;"	l
f0107eae	obj/kern/kernel.asm	/^f0107eae:	d3 ef                	shr    %cl,%edi$/;"	d
f0107eb0	obj/kern/kernel.asm	/^f0107eb0:	09 d7                	or     %edx,%edi$/;"	l
f0107eb2	obj/kern/kernel.asm	/^f0107eb2:	89 f2                	mov    %esi,%edx$/;"	l
f0107eb4	obj/kern/kernel.asm	/^f0107eb4:	89 f8                	mov    %edi,%eax$/;"	l
f0107eb6	obj/kern/kernel.asm	/^f0107eb6:	f7 74 24 08          	divl   0x8(%esp)$/;"	l
f0107eba	obj/kern/kernel.asm	/^f0107eba:	89 d6                	mov    %edx,%esi$/;"	l
f0107ebc	obj/kern/kernel.asm	/^f0107ebc:	89 c7                	mov    %eax,%edi$/;"	l
f0107ebe	obj/kern/kernel.asm	/^f0107ebe:	f7 24 24             	mull   (%esp)$/;"	l
f0107ec1	obj/kern/kernel.asm	/^f0107ec1:	39 d6                	cmp    %edx,%esi$/;"	l
f0107ec3	obj/kern/kernel.asm	/^f0107ec3:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0107ec6	obj/kern/kernel.asm	/^f0107ec6:	72 30                	jb     f0107ef8 <__udivdi3+0x118>$/;"	l
f0107ec8	obj/kern/kernel.asm	/^f0107ec8:	8b 54 24 04          	mov    0x4(%esp),%edx$/;"	l
f0107ecc	obj/kern/kernel.asm	/^f0107ecc:	89 e9                	mov    %ebp,%ecx$/;"	l
f0107ece	obj/kern/kernel.asm	/^f0107ece:	d3 e2                	shl    %cl,%edx$/;"	d
f0107ed0	obj/kern/kernel.asm	/^f0107ed0:	39 c2                	cmp    %eax,%edx$/;"	l
f0107ed2	obj/kern/kernel.asm	/^f0107ed2:	73 05                	jae    f0107ed9 <__udivdi3+0xf9>$/;"	l
f0107ed4	obj/kern/kernel.asm	/^f0107ed4:	3b 34 24             	cmp    (%esp),%esi$/;"	l
f0107ed7	obj/kern/kernel.asm	/^f0107ed7:	74 1f                	je     f0107ef8 <__udivdi3+0x118>$/;"	l
f0107ed9	obj/kern/kernel.asm	/^f0107ed9:	89 f8                	mov    %edi,%eax$/;"	l
f0107edb	obj/kern/kernel.asm	/^f0107edb:	31 d2                	xor    %edx,%edx$/;"	l
f0107edd	obj/kern/kernel.asm	/^f0107edd:	e9 7a ff ff ff       	jmp    f0107e5c <__udivdi3+0x7c>$/;"	l
f0107ee2	obj/kern/kernel.asm	/^f0107ee2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
f0107ee8	obj/kern/kernel.asm	/^f0107ee8:	31 d2                	xor    %edx,%edx$/;"	l
f0107eea	obj/kern/kernel.asm	/^f0107eea:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0107eef	obj/kern/kernel.asm	/^f0107eef:	e9 68 ff ff ff       	jmp    f0107e5c <__udivdi3+0x7c>$/;"	l
f0107ef4	obj/kern/kernel.asm	/^f0107ef4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0107ef8	obj/kern/kernel.asm	/^f0107ef8:	8d 47 ff             	lea    -0x1(%edi),%eax$/;"	l
f0107efb	obj/kern/kernel.asm	/^f0107efb:	31 d2                	xor    %edx,%edx$/;"	l
f0107efd	obj/kern/kernel.asm	/^f0107efd:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0107f00	obj/kern/kernel.asm	/^f0107f00:	5e                   	pop    %esi$/;"	l
f0107f01	obj/kern/kernel.asm	/^f0107f01:	5f                   	pop    %edi$/;"	l
f0107f02	obj/kern/kernel.asm	/^f0107f02:	5d                   	pop    %ebp$/;"	l
f0107f03	obj/kern/kernel.asm	/^f0107f03:	c3                   	ret    $/;"	l
f0107f04	obj/kern/kernel.asm	/^f0107f04:	66 90                	xchg   %ax,%ax$/;"	l
f0107f06	obj/kern/kernel.asm	/^f0107f06:	66 90                	xchg   %ax,%ax$/;"	l
f0107f08	obj/kern/kernel.asm	/^f0107f08:	66 90                	xchg   %ax,%ax$/;"	l
f0107f0a	obj/kern/kernel.asm	/^f0107f0a:	66 90                	xchg   %ax,%ax$/;"	l
f0107f0c	obj/kern/kernel.asm	/^f0107f0c:	66 90                	xchg   %ax,%ax$/;"	l
f0107f0e	obj/kern/kernel.asm	/^f0107f0e:	66 90                	xchg   %ax,%ax$/;"	l
f0107f10	obj/kern/kernel.asm	/^f0107f10 <__umoddi3>:$/;"	l
f0107f10	obj/kern/kernel.asm	/^f0107f10:	55                   	push   %ebp$/;"	l
f0107f11	obj/kern/kernel.asm	/^f0107f11:	57                   	push   %edi$/;"	l
f0107f12	obj/kern/kernel.asm	/^f0107f12:	56                   	push   %esi$/;"	l
f0107f13	obj/kern/kernel.asm	/^f0107f13:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0107f16	obj/kern/kernel.asm	/^f0107f16:	8b 44 24 28          	mov    0x28(%esp),%eax$/;"	l
f0107f1a	obj/kern/kernel.asm	/^f0107f1a:	8b 4c 24 24          	mov    0x24(%esp),%ecx$/;"	l
f0107f1e	obj/kern/kernel.asm	/^f0107f1e:	8b 74 24 2c          	mov    0x2c(%esp),%esi$/;"	l
f0107f22	obj/kern/kernel.asm	/^f0107f22:	89 c7                	mov    %eax,%edi$/;"	l
f0107f24	obj/kern/kernel.asm	/^f0107f24:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0107f28	obj/kern/kernel.asm	/^f0107f28:	8b 44 24 30          	mov    0x30(%esp),%eax$/;"	l
f0107f2c	obj/kern/kernel.asm	/^f0107f2c:	89 4c 24 10          	mov    %ecx,0x10(%esp)$/;"	l
f0107f30	obj/kern/kernel.asm	/^f0107f30:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0107f33	obj/kern/kernel.asm	/^f0107f33:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0107f37	obj/kern/kernel.asm	/^f0107f37:	85 c0                	test   %eax,%eax$/;"	l
f0107f39	obj/kern/kernel.asm	/^f0107f39:	89 c2                	mov    %eax,%edx$/;"	l
f0107f3b	obj/kern/kernel.asm	/^f0107f3b:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f0107f3f	obj/kern/kernel.asm	/^f0107f3f:	75 17                	jne    f0107f58 <__umoddi3+0x48>$/;"	l
f0107f41	obj/kern/kernel.asm	/^f0107f41:	39 fe                	cmp    %edi,%esi$/;"	l
f0107f43	obj/kern/kernel.asm	/^f0107f43:	76 4b                	jbe    f0107f90 <__umoddi3+0x80>$/;"	l
f0107f45	obj/kern/kernel.asm	/^f0107f45:	89 c8                	mov    %ecx,%eax$/;"	l
f0107f47	obj/kern/kernel.asm	/^f0107f47:	89 fa                	mov    %edi,%edx$/;"	l
f0107f49	obj/kern/kernel.asm	/^f0107f49:	f7 f6                	div    %esi$/;"	l
f0107f4b	obj/kern/kernel.asm	/^f0107f4b:	89 d0                	mov    %edx,%eax$/;"	l
f0107f4d	obj/kern/kernel.asm	/^f0107f4d:	31 d2                	xor    %edx,%edx$/;"	l
f0107f4f	obj/kern/kernel.asm	/^f0107f4f:	83 c4 14             	add    $0x14,%esp$/;"	l
f0107f52	obj/kern/kernel.asm	/^f0107f52:	5e                   	pop    %esi$/;"	l
f0107f53	obj/kern/kernel.asm	/^f0107f53:	5f                   	pop    %edi$/;"	l
f0107f54	obj/kern/kernel.asm	/^f0107f54:	5d                   	pop    %ebp$/;"	l
f0107f55	obj/kern/kernel.asm	/^f0107f55:	c3                   	ret    $/;"	l
f0107f56	obj/kern/kernel.asm	/^f0107f56:	66 90                	xchg   %ax,%ax$/;"	l
f0107f58	obj/kern/kernel.asm	/^f0107f58:	39 f8                	cmp    %edi,%eax$/;"	l
f0107f5a	obj/kern/kernel.asm	/^f0107f5a:	77 54                	ja     f0107fb0 <__umoddi3+0xa0>$/;"	l
f0107f5c	obj/kern/kernel.asm	/^f0107f5c:	0f bd e8             	bsr    %eax,%ebp$/;"	l
f0107f5f	obj/kern/kernel.asm	/^f0107f5f:	83 f5 1f             	xor    $0x1f,%ebp$/;"	l
f0107f62	obj/kern/kernel.asm	/^f0107f62:	75 5c                	jne    f0107fc0 <__umoddi3+0xb0>$/;"	l
f0107f64	obj/kern/kernel.asm	/^f0107f64:	8b 7c 24 08          	mov    0x8(%esp),%edi$/;"	l
f0107f68	obj/kern/kernel.asm	/^f0107f68:	39 3c 24             	cmp    %edi,(%esp)$/;"	l
f0107f6b	obj/kern/kernel.asm	/^f0107f6b:	0f 87 e7 00 00 00    	ja     f0108058 <__umoddi3+0x148>$/;"	l
f0107f71	obj/kern/kernel.asm	/^f0107f71:	8b 7c 24 04          	mov    0x4(%esp),%edi$/;"	l
f0107f75	obj/kern/kernel.asm	/^f0107f75:	29 f1                	sub    %esi,%ecx$/;"	l
f0107f77	obj/kern/kernel.asm	/^f0107f77:	19 c7                	sbb    %eax,%edi$/;"	l
f0107f79	obj/kern/kernel.asm	/^f0107f79:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0107f7d	obj/kern/kernel.asm	/^f0107f7d:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f0107f81	obj/kern/kernel.asm	/^f0107f81:	8b 44 24 08          	mov    0x8(%esp),%eax$/;"	l
f0107f85	obj/kern/kernel.asm	/^f0107f85:	8b 54 24 0c          	mov    0xc(%esp),%edx$/;"	l
f0107f89	obj/kern/kernel.asm	/^f0107f89:	83 c4 14             	add    $0x14,%esp$/;"	l
f0107f8c	obj/kern/kernel.asm	/^f0107f8c:	5e                   	pop    %esi$/;"	l
f0107f8d	obj/kern/kernel.asm	/^f0107f8d:	5f                   	pop    %edi$/;"	l
f0107f8e	obj/kern/kernel.asm	/^f0107f8e:	5d                   	pop    %ebp$/;"	l
f0107f8f	obj/kern/kernel.asm	/^f0107f8f:	c3                   	ret    $/;"	l
f0107f90	obj/kern/kernel.asm	/^f0107f90:	85 f6                	test   %esi,%esi$/;"	l
f0107f92	obj/kern/kernel.asm	/^f0107f92:	89 f5                	mov    %esi,%ebp$/;"	l
f0107f94	obj/kern/kernel.asm	/^f0107f94:	75 0b                	jne    f0107fa1 <__umoddi3+0x91>$/;"	l
f0107f96	obj/kern/kernel.asm	/^f0107f96:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0107f9b	obj/kern/kernel.asm	/^f0107f9b:	31 d2                	xor    %edx,%edx$/;"	l
f0107f9d	obj/kern/kernel.asm	/^f0107f9d:	f7 f6                	div    %esi$/;"	l
f0107f9f	obj/kern/kernel.asm	/^f0107f9f:	89 c5                	mov    %eax,%ebp$/;"	l
f0107fa1	obj/kern/kernel.asm	/^f0107fa1:	8b 44 24 04          	mov    0x4(%esp),%eax$/;"	l
f0107fa5	obj/kern/kernel.asm	/^f0107fa5:	31 d2                	xor    %edx,%edx$/;"	l
f0107fa7	obj/kern/kernel.asm	/^f0107fa7:	f7 f5                	div    %ebp$/;"	l
f0107fa9	obj/kern/kernel.asm	/^f0107fa9:	89 c8                	mov    %ecx,%eax$/;"	l
f0107fab	obj/kern/kernel.asm	/^f0107fab:	f7 f5                	div    %ebp$/;"	l
f0107fad	obj/kern/kernel.asm	/^f0107fad:	eb 9c                	jmp    f0107f4b <__umoddi3+0x3b>$/;"	l
f0107faf	obj/kern/kernel.asm	/^f0107faf:	90                   	nop$/;"	l
f0107fb0	obj/kern/kernel.asm	/^f0107fb0:	89 c8                	mov    %ecx,%eax$/;"	l
f0107fb2	obj/kern/kernel.asm	/^f0107fb2:	89 fa                	mov    %edi,%edx$/;"	l
f0107fb4	obj/kern/kernel.asm	/^f0107fb4:	83 c4 14             	add    $0x14,%esp$/;"	l
f0107fb7	obj/kern/kernel.asm	/^f0107fb7:	5e                   	pop    %esi$/;"	l
f0107fb8	obj/kern/kernel.asm	/^f0107fb8:	5f                   	pop    %edi$/;"	l
f0107fb9	obj/kern/kernel.asm	/^f0107fb9:	5d                   	pop    %ebp$/;"	l
f0107fba	obj/kern/kernel.asm	/^f0107fba:	c3                   	ret    $/;"	l
f0107fbb	obj/kern/kernel.asm	/^f0107fbb:	90                   	nop$/;"	l
f0107fbc	obj/kern/kernel.asm	/^f0107fbc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0107fc0	obj/kern/kernel.asm	/^f0107fc0:	8b 04 24             	mov    (%esp),%eax$/;"	l
f0107fc3	obj/kern/kernel.asm	/^f0107fc3:	be 20 00 00 00       	mov    $0x20,%esi$/;"	l
f0107fc8	obj/kern/kernel.asm	/^f0107fc8:	89 e9                	mov    %ebp,%ecx$/;"	l
f0107fca	obj/kern/kernel.asm	/^f0107fca:	29 ee                	sub    %ebp,%esi$/;"	l
f0107fcc	obj/kern/kernel.asm	/^f0107fcc:	d3 e2                	shl    %cl,%edx$/;"	d
f0107fce	obj/kern/kernel.asm	/^f0107fce:	89 f1                	mov    %esi,%ecx$/;"	l
f0107fd0	obj/kern/kernel.asm	/^f0107fd0:	d3 e8                	shr    %cl,%eax$/;"	d
f0107fd2	obj/kern/kernel.asm	/^f0107fd2:	89 e9                	mov    %ebp,%ecx$/;"	l
f0107fd4	obj/kern/kernel.asm	/^f0107fd4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0107fd8	obj/kern/kernel.asm	/^f0107fd8:	8b 04 24             	mov    (%esp),%eax$/;"	l
f0107fdb	obj/kern/kernel.asm	/^f0107fdb:	09 54 24 04          	or     %edx,0x4(%esp)$/;"	l
f0107fdf	obj/kern/kernel.asm	/^f0107fdf:	89 fa                	mov    %edi,%edx$/;"	l
f0107fe1	obj/kern/kernel.asm	/^f0107fe1:	d3 e0                	shl    %cl,%eax$/;"	d
f0107fe3	obj/kern/kernel.asm	/^f0107fe3:	89 f1                	mov    %esi,%ecx$/;"	l
f0107fe5	obj/kern/kernel.asm	/^f0107fe5:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0107fe9	obj/kern/kernel.asm	/^f0107fe9:	8b 44 24 10          	mov    0x10(%esp),%eax$/;"	l
f0107fed	obj/kern/kernel.asm	/^f0107fed:	d3 ea                	shr    %cl,%edx$/;"	d
f0107fef	obj/kern/kernel.asm	/^f0107fef:	89 e9                	mov    %ebp,%ecx$/;"	l
f0107ff1	obj/kern/kernel.asm	/^f0107ff1:	d3 e7                	shl    %cl,%edi$/;"	d
f0107ff3	obj/kern/kernel.asm	/^f0107ff3:	89 f1                	mov    %esi,%ecx$/;"	l
f0107ff5	obj/kern/kernel.asm	/^f0107ff5:	d3 e8                	shr    %cl,%eax$/;"	d
f0107ff7	obj/kern/kernel.asm	/^f0107ff7:	89 e9                	mov    %ebp,%ecx$/;"	l
f0107ff9	obj/kern/kernel.asm	/^f0107ff9:	09 f8                	or     %edi,%eax$/;"	l
f0107ffb	obj/kern/kernel.asm	/^f0107ffb:	8b 7c 24 10          	mov    0x10(%esp),%edi$/;"	l
f0107fff	obj/kern/kernel.asm	/^f0107fff:	f7 74 24 04          	divl   0x4(%esp)$/;"	l
f0108003	obj/kern/kernel.asm	/^f0108003:	d3 e7                	shl    %cl,%edi$/;"	d
f0108005	obj/kern/kernel.asm	/^f0108005:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f0108009	obj/kern/kernel.asm	/^f0108009:	89 d7                	mov    %edx,%edi$/;"	l
f010800b	obj/kern/kernel.asm	/^f010800b:	f7 64 24 08          	mull   0x8(%esp)$/;"	l
f010800f	obj/kern/kernel.asm	/^f010800f:	39 d7                	cmp    %edx,%edi$/;"	l
f0108011	obj/kern/kernel.asm	/^f0108011:	89 c1                	mov    %eax,%ecx$/;"	l
f0108013	obj/kern/kernel.asm	/^f0108013:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0108016	obj/kern/kernel.asm	/^f0108016:	72 2c                	jb     f0108044 <__umoddi3+0x134>$/;"	l
f0108018	obj/kern/kernel.asm	/^f0108018:	39 44 24 0c          	cmp    %eax,0xc(%esp)$/;"	l
f010801c	obj/kern/kernel.asm	/^f010801c:	72 22                	jb     f0108040 <__umoddi3+0x130>$/;"	l
f010801e	obj/kern/kernel.asm	/^f010801e:	8b 44 24 0c          	mov    0xc(%esp),%eax$/;"	l
f0108022	obj/kern/kernel.asm	/^f0108022:	29 c8                	sub    %ecx,%eax$/;"	l
f0108024	obj/kern/kernel.asm	/^f0108024:	19 d7                	sbb    %edx,%edi$/;"	l
f0108026	obj/kern/kernel.asm	/^f0108026:	89 e9                	mov    %ebp,%ecx$/;"	l
f0108028	obj/kern/kernel.asm	/^f0108028:	89 fa                	mov    %edi,%edx$/;"	l
f010802a	obj/kern/kernel.asm	/^f010802a:	d3 e8                	shr    %cl,%eax$/;"	d
f010802c	obj/kern/kernel.asm	/^f010802c:	89 f1                	mov    %esi,%ecx$/;"	l
f010802e	obj/kern/kernel.asm	/^f010802e:	d3 e2                	shl    %cl,%edx$/;"	d
f0108030	obj/kern/kernel.asm	/^f0108030:	89 e9                	mov    %ebp,%ecx$/;"	l
f0108032	obj/kern/kernel.asm	/^f0108032:	d3 ef                	shr    %cl,%edi$/;"	d
f0108034	obj/kern/kernel.asm	/^f0108034:	09 d0                	or     %edx,%eax$/;"	l
f0108036	obj/kern/kernel.asm	/^f0108036:	89 fa                	mov    %edi,%edx$/;"	l
f0108038	obj/kern/kernel.asm	/^f0108038:	83 c4 14             	add    $0x14,%esp$/;"	l
f010803b	obj/kern/kernel.asm	/^f010803b:	5e                   	pop    %esi$/;"	l
f010803c	obj/kern/kernel.asm	/^f010803c:	5f                   	pop    %edi$/;"	l
f010803d	obj/kern/kernel.asm	/^f010803d:	5d                   	pop    %ebp$/;"	l
f010803e	obj/kern/kernel.asm	/^f010803e:	c3                   	ret    $/;"	l
f010803f	obj/kern/kernel.asm	/^f010803f:	90                   	nop$/;"	l
f0108040	obj/kern/kernel.asm	/^f0108040:	39 d7                	cmp    %edx,%edi$/;"	l
f0108042	obj/kern/kernel.asm	/^f0108042:	75 da                	jne    f010801e <__umoddi3+0x10e>$/;"	l
f0108044	obj/kern/kernel.asm	/^f0108044:	8b 14 24             	mov    (%esp),%edx$/;"	l
f0108047	obj/kern/kernel.asm	/^f0108047:	89 c1                	mov    %eax,%ecx$/;"	l
f0108049	obj/kern/kernel.asm	/^f0108049:	2b 4c 24 08          	sub    0x8(%esp),%ecx$/;"	l
f010804d	obj/kern/kernel.asm	/^f010804d:	1b 54 24 04          	sbb    0x4(%esp),%edx$/;"	l
f0108051	obj/kern/kernel.asm	/^f0108051:	eb cb                	jmp    f010801e <__umoddi3+0x10e>$/;"	l
f0108053	obj/kern/kernel.asm	/^f0108053:	90                   	nop$/;"	l
f0108054	obj/kern/kernel.asm	/^f0108054:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0108058	obj/kern/kernel.asm	/^f0108058:	3b 44 24 0c          	cmp    0xc(%esp),%eax$/;"	l
f010805c	obj/kern/kernel.asm	/^f010805c:	0f 82 0f ff ff ff    	jb     f0107f71 <__umoddi3+0x61>$/;"	l
f0108062	obj/kern/kernel.asm	/^f0108062:	e9 1a ff ff ff       	jmp    f0107f81 <__umoddi3+0x71>$/;"	l
f_direct	inc/fs.h	/^	uint32_t f_direct[NDIRECT];	\/\/ direct blocks$/;"	m	struct:File
f_indirect	inc/fs.h	/^	uint32_t f_indirect;		\/\/ indirect block$/;"	m	struct:File
f_name	inc/fs.h	/^	char f_name[MAXNAMELEN];	\/\/ filename$/;"	m	struct:File
f_pad	inc/fs.h	/^	uint8_t f_pad[256 - MAXNAMELEN - 8 - 4*NDIRECT - 4];$/;"	m	struct:File
f_size	inc/fs.h	/^	off_t f_size;			\/\/ file size in bytes$/;"	m	struct:File
f_type	inc/fs.h	/^	uint32_t f_type;		\/\/ file type$/;"	m	struct:File
false	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon46
fault_va	obj/kern/kernel.asm	/^	fault_va = rcr2();$/;"	d
fcstab	net/lwip/netif/ppp/ppp.c	/^static const u_short fcstab[256] = {$/;"	v	file:
fd	lib/fprintf.c	/^	int fd;		\/\/ file descriptor$/;"	m	struct:printbuf	file:
fd	net/lwip/netif/ppp/ppp.c	/^  sio_fd_t fd;                  \/* File device ID of port. *\/$/;"	m	struct:PPPControl_s	file:
fd	obj/fs/fs.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/fs/fs.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/net/ns.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/net/ns.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/net/testinput.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/net/testinput.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/net/testoutput.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/net/testoutput.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/badsegment.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/badsegment.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/breakpoint.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/breakpoint.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/buggyhello.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/buggyhello.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/buggyhello2.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/buggyhello2.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/cat.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/cat.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/divzero.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/divzero.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/dumbfork.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/dumbfork.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/echo.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/echo.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/echosrv.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/echosrv.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/echotest.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/echotest.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/evilhello.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/evilhello.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/fairness.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/fairness.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultalloc.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultalloc.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultallocbad.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultallocbad.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultbadhandler.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultbadhandler.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultdie.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultdie.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultevilhandler.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultevilhandler.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultnostack.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultnostack.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultread.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultread.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultreadkernel.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultreadkernel.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultregs.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultregs.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultwrite.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultwrite.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultwritekernel.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultwritekernel.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/forktree.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/forktree.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/hello.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/hello.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/httpd.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/httpd.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/icode.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/icode.asm	/^	fd = -1;$/;"	d
fd	obj/user/icode.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/icode.asm	/^	fd = r;$/;"	d
fd	obj/user/idle.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/idle.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/init.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/init.asm	/^	fd = -1;$/;"	d
fd	obj/user/init.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/init.asm	/^	fd = r;$/;"	d
fd	obj/user/ls.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/ls.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/lsfd.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/lsfd.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/num.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/num.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/pingpong.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/pingpong.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/pingpongs.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/pingpongs.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/primes.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/primes.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/primespipe.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/primespipe.asm	/^		fd = pfd[0];$/;"	d
fd	obj/user/primespipe.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/sendpage.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/sendpage.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/sh.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/sh.asm	/^	fd = -1;$/;"	d
fd	obj/user/sh.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/sh.asm	/^	fd = r;$/;"	d
fd	obj/user/softint.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/softint.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/spawnhello.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/spawnhello.asm	/^	fd = -1;$/;"	d
fd	obj/user/spawnhello.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/spawnhello.asm	/^	fd = r;$/;"	d
fd	obj/user/spin.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/spin.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/stresssched.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/stresssched.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testbss.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testbss.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testfdsharing.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testfdsharing.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testfile.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testfile.asm	/^	fd = (struct Fd*) (0xD0000000 + r*PGSIZE);$/;"	d
fd	obj/user/testfile.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testkbd.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testkbd.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpipe.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testpipe.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpiperace.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testpiperace.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpiperace2.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testpiperace2.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpteshare.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testpteshare.asm	/^	fd = -1;$/;"	d
fd	obj/user/testpteshare.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpteshare.asm	/^	fd = r;$/;"	d
fd	obj/user/testshell.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testshell.asm	/^	fd = -1;$/;"	d
fd	obj/user/testshell.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testshell.asm	/^	fd = r;$/;"	d
fd	obj/user/testtime.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testtime.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/yield.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/yield.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd2data	lib/fd.c	/^fd2data(struct Fd *fd)$/;"	f
fd2num	lib/fd.c	/^fd2num(struct Fd *fd)$/;"	f
fd2sockid	lib/sockets.c	/^fd2sockid(int fd)$/;"	f	file:
fd_alloc	lib/fd.c	/^fd_alloc(struct Fd **fd_store)$/;"	f
fd_bits	net/lwip/include/lwip/sockets.h	/^          unsigned char fd_bits [(FD_SETSIZE+7)\/8];$/;"	m	struct:fd_set
fd_close	lib/fd.c	/^fd_close(struct Fd *fd, bool must_exist)$/;"	f
fd_dev_id	inc/fd.h	/^	int fd_dev_id;$/;"	m	struct:Fd
fd_file	inc/fd.h	/^		struct FdFile fd_file;$/;"	m	union:Fd::__anon47	typeref:struct:Fd::__anon47::FdFile
fd_lookup	lib/fd.c	/^fd_lookup(int fdnum, struct Fd **fd_store)$/;"	f
fd_offset	inc/fd.h	/^	off_t fd_offset;$/;"	m	struct:Fd
fd_omode	inc/fd.h	/^	int fd_omode;$/;"	m	struct:Fd
fd_set	net/lwip/include/lwip/sockets.h	/^        } fd_set;$/;"	t	typeref:struct:fd_set
fd_set	net/lwip/include/lwip/sockets.h	/^  typedef struct fd_set {$/;"	s
fd_sock	inc/fd.h	/^		struct FdSock fd_sock;$/;"	m	union:Fd::__anon47	typeref:struct:Fd::__anon47::FdSock
fdcopy	obj/user/testfile.asm	/^	fdcopy = *FVA;$/;"	d
feature	kern/mpconfig.c	/^	uint32_t feature;               \/\/ feature flags from CPUID instruction$/;"	m	struct:mpproc	file:
field_len	obj/net/ns.asm	/^        field_len = DHCP_FILE_LEN + DHCP_SNAME_LEN;$/;"	d
field_len	obj/net/ns.asm	/^        field_len = DHCP_FILE_LEN;$/;"	d
field_len	obj/net/ns.asm	/^        field_len = DHCP_SNAME_LEN;$/;"	d
fields	kern/e1000.h	/^        uint32_t fields;$/;"	m	union:e1000_tx_desc::__anon39
file	net/lwip/core/memp.c	/^  const char *file;$/;"	m	struct:memp	file:
file_block_walk	fs/fs.c	/^file_block_walk(struct File *f, uint32_t filebno, uint32_t **ppdiskbno, bool alloc)$/;"	f	file:
file_create	fs/fs.c	/^file_create(const char *path, struct File **pf)$/;"	f
file_flush	fs/fs.c	/^file_flush(struct File *f)$/;"	f
file_free_block	fs/fs.c	/^file_free_block(struct File *f, uint32_t filebno)$/;"	f	file:
file_get_block	fs/fs.c	/^file_get_block(struct File *f, uint32_t filebno, char **blk)$/;"	f
file_open	fs/fs.c	/^file_open(const char *path, struct File **pf)$/;"	f
file_read	fs/fs.c	/^file_read(struct File *f, void *buf, size_t count, off_t offset)$/;"	f
file_set_size	fs/fs.c	/^file_set_size(struct File *f, off_t newsize)$/;"	f
file_truncate_blocks	fs/fs.c	/^file_truncate_blocks(struct File *f, off_t newsize)$/;"	f	file:
file_write	fs/fs.c	/^file_write(struct File *f, const void *buf, size_t count, off_t offset)$/;"	f
fileid	obj/fs/fs.asm	/^	fileid = r;$/;"	d
fileno	gradelib.py	/^    def fileno(self):$/;"	f
fileno	gradelib.py	/^    def fileno(self):$/;"	m	class:GDBClient
find_entry	net/lwip/netif/etharp.c	/^find_entry(struct ip_addr *ipaddr, u8_t flags, struct netif *netif)$/;"	f	file:
finishdir	fs/fsformat.c	/^finishdir(struct Dir *d)$/;"	f
finishdisk	fs/fsformat.c	/^finishdisk(void)$/;"	f
finished	net/lwip/netif/ppp/fsm.h	/^  void (*finished)(fsm*);                           \/* Called when we don't want the lower layer *\/$/;"	m	struct:fsm_callbacks
finishfile	fs/fsformat.c	/^finishfile(struct File *f, uint32_t start, uint32_t len)$/;"	f
first	obj/net/ns.asm	/^        first = 0;$/;"	d
first	obj/net/testinput.asm	/^		first = 0;$/;"	d
first_free_page	obj/kern/kernel.asm	/^	first_free_page = (char *) boot_alloc(0);$/;"	d
firstround_t	kern/e1000.c	/^uint32_t firstround_t = 1;$/;"	v
firstround_t	obj/kern/kernel.asm	/^		firstround_t = 0;$/;"	d
fl	obj/kern/kernel.asm	/^	fl = page_free_list;$/;"	d
flag	user/ls.c	/^int flag[256];$/;"	v
flags	kern/e1000.h	/^        uint32_t flags;$/;"	m	union:e1000_tx_desc::__anon37
flags	kern/mpconfig.c	/^	uint8_t flags;                  \/\/ CPU flags$/;"	m	struct:mpproc	file:
flags	net/lwip/api/sockets.c	/^  u16_t flags;$/;"	m	struct:lwip_socket	file:
flags	net/lwip/core/tcp_in.c	/^static u8_t flags;$/;"	v	file:
flags	net/lwip/include/ipv4/lwip/ip_frag.h	/^  u8_t flags;$/;"	m	struct:ip_reassdata
flags	net/lwip/include/lwip/netif.h	/^  u8_t flags;$/;"	m	struct:netif
flags	net/lwip/include/lwip/pbuf.h	/^  u8_t flags;$/;"	m	struct:pbuf
flags	net/lwip/include/lwip/tcp.h	/^  u8_t flags;$/;"	m	struct:tcp_pcb
flags	net/lwip/include/lwip/udp.h	/^  u8_t flags;$/;"	m	struct:udp_pcb
flags	net/lwip/netif/ppp/fsm.h	/^  int flags;                       \/* Contains option bits *\/$/;"	m	struct:fsm
flags	net/lwip/netif/ppp/vj.h	/^  u_short flags;$/;"	m	struct:vjcompress
flags	obj/net/ns.asm	/^  flags = TCPH_FLAGS(tcphdr) & TCP_FLAGS;$/;"	d
flags1	net/lwip/core/dns.c	/^  u8_t flags1;$/;"	m	struct:dns_hdr	file:
flags2	net/lwip/core/dns.c	/^  u8_t flags2;$/;"	m	struct:dns_hdr	file:
flow1	net/lwip/include/ipv6/lwip/ip.h	/^  u8_t flow1:4, tclass2:4;  $/;"	m	struct:ip_hdr
flow2	net/lwip/include/ipv6/lwip/ip.h	/^  u16_t flow2;$/;"	m	struct:ip_hdr
flush	inc/fs.h	/^	} flush;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_flush
flush_block	fs/bc.c	/^flush_block(void *addr)$/;"	f
for_us	obj/net/ns.asm	/^    for_us = 0;$/;"	d
for_us	obj/net/ns.asm	/^    for_us = ip_addr_cmp(&dipaddr, &(netif->ip_addr));$/;"	d
fork	lib/fork.c	/^fork(void)$/;"	f
forkchild	user/forktree.c	/^forkchild(const char *cur, char branch)$/;"	f
forktree	user/forktree.c	/^forktree(const char *cur)$/;"	f
found	net/lwip/core/dns.c	/^  dns_found_callback found;$/;"	m	struct:dns_table_entry	file:
fprintf	lib/fprintf.c	/^fprintf(int fd, const char *fmt, ...)$/;"	f
fraghdr	obj/net/ns.asm	/^    fraghdr = (struct ip_hdr*)(ipr->p->payload);$/;"	d
fraghdr	obj/net/ns.asm	/^  fraghdr = (struct ip_hdr*)new_p->payload; $/;"	d
fraghdr	obj/net/ns.asm	/^  fraghdr = (struct ip_hdr*)p->payload;$/;"	d
free	lib/malloc.c	/^free(void *v)$/;"	f
free_block	fs/fs.c	/^free_block(uint32_t blockno)$/;"	f
free_etharp_q	net/lwip/netif/etharp.c	/^free_etharp_q(struct etharp_q_entry *q)$/;"	f	file:
free_msg	net/lwip/jos/arch/sys_arch.c	/^    sys_sem_t free_msg;$/;"	m	struct:sys_mbox_entry	file:
free_pbuf_and_return	obj/net/ns.asm	/^free_pbuf_and_return:$/;"	l
freeaddrinfo	net/lwip/include/lwip/netdb.h	104;"	d
freed	net/lwip/jos/arch/sys_arch.c	/^    int freed;$/;"	m	struct:sys_mbox_entry	file:
freed	net/lwip/jos/arch/sys_arch.c	/^    int freed;$/;"	m	struct:sys_sem_entry	file:
freepbuf	obj/net/ns.asm	/^freepbuf:$/;"	l
fs_init	fs/fs.c	/^fs_init(void)$/;"	f
fs_sync	fs/fs.c	/^fs_sync(void)$/;"	f
fs_test	fs/test.c	/^fs_test(void)$/;"	f
fsenv	obj/fs/fs.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/net/ns.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/net/testinput.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/net/testoutput.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/badsegment.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/breakpoint.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/buggyhello.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/buggyhello2.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/cat.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/divzero.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/dumbfork.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/echo.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/echosrv.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/echotest.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/evilhello.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/fairness.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultalloc.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultallocbad.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultbadhandler.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultdie.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultevilhandler.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultnostack.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultread.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultreadkernel.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultregs.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultwrite.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultwritekernel.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/forktree.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/hello.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/httpd.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/icode.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/idle.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/init.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/ls.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/lsfd.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/num.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/pingpong.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/pingpongs.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/primes.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/primespipe.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/sendpage.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/sh.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/softint.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/spawnhello.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/spin.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/stresssched.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testbss.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testfdsharing.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testfile.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testfile.asm	/^	fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testkbd.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testpipe.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testpiperace.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testpiperace2.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testpteshare.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testshell.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testtime.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/yield.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fshandler	fs/serv.c	/^typedef int (*fshandler)(envid_t envid, union Fsipc *req);$/;"	t	file:
fsipc	lib/file.c	/^fsipc(unsigned type, void *dstva)$/;"	f	file:
fsipcbuf	lib/file.c	/^union Fsipc fsipcbuf __attribute__((aligned(PGSIZE)));$/;"	v	typeref:union:Fsipc
fsm	net/lwip/netif/ppp/fsm.h	/^typedef struct fsm {$/;"	s
fsm	net/lwip/netif/ppp/fsm.h	/^} fsm;$/;"	t	typeref:struct:fsm
fsm_callbacks	net/lwip/netif/ppp/fsm.h	/^typedef struct fsm_callbacks {$/;"	s
fsm_callbacks	net/lwip/netif/ppp/fsm.h	/^} fsm_callbacks;$/;"	t	typeref:struct:fsm_callbacks
fsm_close	net/lwip/netif/ppp/fsm.c	/^fsm_close(fsm *f, char *reason)$/;"	f
fsm_init	net/lwip/netif/ppp/fsm.c	/^fsm_init(fsm *f)$/;"	f
fsm_input	net/lwip/netif/ppp/fsm.c	/^fsm_input(fsm *f, u_char *inpacket, int l)$/;"	f
fsm_lowerdown	net/lwip/netif/ppp/fsm.c	/^fsm_lowerdown(fsm *f)$/;"	f
fsm_lowerup	net/lwip/netif/ppp/fsm.c	/^fsm_lowerup(fsm *f)$/;"	f
fsm_open	net/lwip/netif/ppp/fsm.c	/^fsm_open(fsm *f)$/;"	f
fsm_protreject	net/lwip/netif/ppp/fsm.c	/^fsm_protreject(fsm *f)$/;"	f
fsm_rcoderej	net/lwip/netif/ppp/fsm.c	/^fsm_rcoderej(fsm *f, u_char *inp, int len)$/;"	f	file:
fsm_rconfack	net/lwip/netif/ppp/fsm.c	/^fsm_rconfack(fsm *f, int id, u_char *inp, int len)$/;"	f	file:
fsm_rconfnakrej	net/lwip/netif/ppp/fsm.c	/^fsm_rconfnakrej(fsm *f, int code, int id, u_char *inp, int len)$/;"	f	file:
fsm_rconfreq	net/lwip/netif/ppp/fsm.c	/^fsm_rconfreq(fsm *f, u_char id, u_char *inp, int len)$/;"	f	file:
fsm_rtermack	net/lwip/netif/ppp/fsm.c	/^fsm_rtermack(fsm *f)$/;"	f	file:
fsm_rtermreq	net/lwip/netif/ppp/fsm.c	/^fsm_rtermreq(fsm *f, int id, u_char *p, int len)$/;"	f	file:
fsm_sconfreq	net/lwip/netif/ppp/fsm.c	/^fsm_sconfreq(fsm *f, int retransmit)$/;"	f	file:
fsm_sdata	net/lwip/netif/ppp/fsm.c	/^fsm_sdata( fsm *f, u_char code, u_char id, u_char *data, int datalen)$/;"	f
fsm_timeout	net/lwip/netif/ppp/fsm.c	/^fsm_timeout(void *arg)$/;"	f	file:
fsreq	fs/serv.c	/^union Fsipc *fsreq = (union Fsipc *)0x0ffff000;$/;"	v	typeref:union:Fsipc
fstat	lib/fd.c	/^fstat(int fdnum, struct Stat *stat)$/;"	f
ftruncate	lib/fd.c	/^ftruncate(int fdnum, off_t newsize)$/;"	f
func	kern/monitor.c	/^	int (*func)(int argc, char** argv, struct Trapframe* tf);$/;"	m	struct:Command	file:
func	kern/pci.h	/^    uint32_t func;$/;"	m	struct:pci_func
func	net/lwip/jos/arch/sys_arch.c	/^    void (*func)(void *arg);$/;"	m	struct:lwip_thread	file:
func	net/serv.c	/^	void (*func)(void);$/;"	m	struct:timer_thread	file:
function	net/lwip/include/lwip/api_msg.h	/^  void (* function)(struct api_msg_msg *msg);$/;"	m	struct:api_msg
function	net/lwip/include/lwip/netifapi.h	/^  void (* function)(struct netifapi_msg_msg *msg);$/;"	m	struct:netifapi_msg
fw	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER fw;               \/* Forwarded packets. *\/$/;"	m	struct:stats_proto
gd_args	inc/mmu.h	/^	unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:Gatedesc
gd_dpl	inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:Gatedesc
gd_off_15_0	inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:Gatedesc
gd_off_31_16	inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:Gatedesc
gd_p	inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:Gatedesc
gd_rsv1	inc/mmu.h	/^	unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:Gatedesc
gd_s	inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:Gatedesc
gd_sel	inc/mmu.h	/^	unsigned gd_sel : 16;        \/\/ segment selector$/;"	m	struct:Gatedesc
gd_type	inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:Gatedesc
gdt	boot/boot.S	/^gdt:$/;"	l
gdt	kern/env.c	/^struct Segdesc gdt[NCPU + 5] =$/;"	v	typeref:struct:Segdesc
gdt	kern/mpentry.S	/^gdt:$/;"	l
gdt_pd	kern/env.c	/^struct Pseudodesc gdt_pd = {$/;"	v	typeref:struct:Pseudodesc
gdtdesc	boot/boot.S	/^gdtdesc:$/;"	l
gdtdesc	kern/mpentry.S	/^gdtdesc:$/;"	l
gen	net/lwip/jos/arch/sys_arch.c	/^    int gen;$/;"	m	struct:sys_sem_entry	file:
gen_primes	grade-lab5	/^def gen_primes(n):$/;"	f
gen_trap	net/lwip/include/lwip/snmp_msg.h	/^  u32_t gen_trap;$/;"	m	struct:snmp_msg_trap
generation	obj/kern/kernel.asm	/^		generation = 1 << ENVGENSHIFT;$/;"	d
generation	obj/kern/kernel.asm	/^	generation = (e->env_id + (1 << ENVGENSHIFT)) & ~(NENV - 1);$/;"	d
get_buffer	net/serv.c	/^get_buffer(void) {$/;"	f	file:
get_caller_pcs	kern/spinlock.c	/^get_caller_pcs(uint32_t pcs[])$/;"	f	file:
get_current_test	gradelib.py	/^def get_current_test():$/;"	f
get_gdb_port	gradelib.py	/^    def get_gdb_port():$/;"	f
get_idle_time	net/lwip/netif/ppp/ppp.c	/^get_idle_time(int u, struct ppp_idle *ip)$/;"	f
get_object_def	net/lwip/include/lwip/snmp_structs.h	/^  void (* const get_object_def)(u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_array_node
get_object_def	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def)(u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_external_node
get_object_def	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def)(u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_list_rootnode
get_object_def	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def)(u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_node
get_object_def	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def)(u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_ram_array_node
get_object_def_a	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def_a)(u8_t rid, u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_external_node
get_object_def_pc	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def_pc)(u8_t rid, u8_t ident_len, s32_t *ident);$/;"	m	struct:mib_external_node
get_object_def_q	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def_q)(void* addr_inf, u8_t rid, u8_t ident_len, s32_t *ident);$/;"	m	struct:mib_external_node
get_objid	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_objid)(void* addr_inf, u8_t level, u16_t idx, s32_t *sub_id);$/;"	m	struct:mib_external_node
get_pap_passwd	net/lwip/netif/ppp/auth.c	/^get_pap_passwd(int unit, char *user, char *passwd)$/;"	f	file:
get_secret	net/lwip/netif/ppp/auth.c	/^int get_secret( int unit, char *client, char *server, char *secret, int *secret_len, int save_addrs)$/;"	f
get_socket	net/lwip/api/sockets.c	/^get_socket(int s)$/;"	f	file:
get_value	net/lwip/include/lwip/snmp_structs.h	/^  void (* const get_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_array_node
get_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node
get_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_list_rootnode
get_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_node
get_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_ram_array_node
get_value_a	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value_a)(u8_t rid, struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node
get_value_pc	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value_pc)(u8_t rid, struct obj_def *od);$/;"	m	struct:mib_external_node
get_value_q	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value_q)(u8_t rid, struct obj_def *od);$/;"	m	struct:mib_external_node
getaddrinfo	net/lwip/include/lwip/netdb.h	105;"	d
getchar	kern/console.c	/^getchar(void)$/;"	f
getchar	lib/console.c	/^getchar(void)$/;"	f
gethostbyname	net/lwip/include/lwip/netdb.h	101;"	d
gethostbyname_r	net/lwip/include/lwip/netdb.h	102;"	d
gethostbyname_r_helper	net/lwip/api/netdb.c	/^struct gethostbyname_r_helper {$/;"	s	file:
getint	lib/printfmt.c	/^getint(va_list *ap, int lflag)$/;"	f	file:
getip_hl	net/lwip/netif/ppp/vj.c	51;"	d	file:
getip_hl	net/lwip/netif/ppp/vj.c	54;"	d	file:
getpeername	net/lwip/include/lwip/sockets.h	332;"	d
getsockname	net/lwip/include/lwip/sockets.h	331;"	d
getsockopt	net/lwip/include/lwip/sockets.h	334;"	d
getth_off	net/lwip/netif/ppp/vj.c	52;"	d	file:
getth_off	net/lwip/netif/ppp/vj.c	55;"	d	file:
gettoken	user/sh.c	/^gettoken(char *s, char **p1)$/;"	f
getuint	lib/printfmt.c	/^getuint(va_list *ap, int lflag)$/;"	f	file:
group_address	net/lwip/include/ipv4/lwip/igmp.h	/^  struct ip_addr     group_address;$/;"	m	struct:igmp_group	typeref:struct:igmp_group::ip_addr
group_query_rxed	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER group_query_rxed; \/* *\/$/;"	m	struct:stats_igmp
group_state	net/lwip/include/ipv4/lwip/igmp.h	/^  u8_t               group_state;$/;"	m	struct:igmp_group
grow	obj/net/ns.asm	/^  grow = new_len - p->tot_len;$/;"	d
gtrplen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t gtrplen;$/;"	m	struct:snmp_trap_header_lengths
gtrplenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t gtrplenlen;$/;"	m	struct:snmp_trap_header_lengths
gw	net/lwip/include/lwip/netif.h	/^  struct ip_addr gw;$/;"	m	struct:netif	typeref:struct:netif::ip_addr
gw	net/lwip/include/lwip/netifapi.h	/^      struct ip_addr *gw;$/;"	m	struct:netifapi_msg_msg::__anon22::__anon23	typeref:struct:netifapi_msg_msg::__anon22::__anon23::ip_addr
h	net/lwip/include/lwip/sys.h	/^  sys_timeout_handler h;$/;"	m	struct:sys_timeo
h	net/lwip/include/lwip/tcpip.h	/^      sys_timeout_handler h;$/;"	m	struct:tcpip_msg::__anon17::__anon20
h	obj/net/ns.asm	/^      h   = tmptimeout->h;$/;"	d
h	obj/net/ns.asm	/^      h = tmptimeout->h;$/;"	d
h_addr	net/lwip/include/lwip/netdb.h	71;"	d
h_addr_list	net/lwip/include/lwip/netdb.h	/^    char **h_addr_list; \/* A pointer to an array of pointers to network addresses (in$/;"	m	struct:hostent
h_addrtype	net/lwip/include/lwip/netdb.h	/^    int    h_addrtype;  \/* Address type. *\/$/;"	m	struct:hostent
h_aliases	net/lwip/include/lwip/netdb.h	/^    char **h_aliases;   \/* A pointer to an array of pointers to alternative host names,$/;"	m	struct:hostent
h_errno	net/lwip/api/netdb.c	/^int h_errno;$/;"	v
h_length	net/lwip/include/lwip/netdb.h	/^    int    h_length;    \/* The length, in bytes, of the address. *\/$/;"	m	struct:hostent
h_name	net/lwip/include/lwip/netdb.h	/^    char  *h_name;      \/* Official name of the host. *\/$/;"	m	struct:hostent
handle_client	user/echosrv.c	/^handle_client(int sock)$/;"	f
handle_client	user/httpd.c	/^handle_client(int sock)$/;"	f	file:
handle_output	gradelib.py	/^        def handle_output(output):$/;"	f	function:call_on_line.setup_call_on_line
handle_read	gradelib.py	/^    def handle_read(self):$/;"	f
handle_read	gradelib.py	/^    def handle_read(self):$/;"	m	class:GDBClient
handler	user/faultalloc.c	/^handler(struct UTrapframe *utf)$/;"	f
handler	user/faultallocbad.c	/^handler(struct UTrapframe *utf)$/;"	f
handler	user/faultdie.c	/^handler(struct UTrapframe *utf)$/;"	f
handlers	fs/serv.c	/^fshandler handlers[] = {$/;"	v
have_chap_secret	net/lwip/netif/ppp/auth.c	/^have_chap_secret(char *client, char *server, u32_t remote)$/;"	f	file:
have_pap_secret	net/lwip/netif/ppp/auth.c	/^have_pap_secret(void)$/;"	f	file:
hdr	obj/net/ns.asm	/^  hdr = p->payload;$/;"	d
hdrlen	obj/net/ns.asm	/^  hdrlen = TCPH_HDRLEN(tcphdr);$/;"	d
head	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind *head;$/;"	m	struct:snmp_varbind_root	typeref:struct:snmp_varbind_root::snmp_varbind
head	net/lwip/include/lwip/snmp_structs.h	/^  struct mib_list_node *head;$/;"	m	struct:mib_list_rootnode	typeref:struct:mib_list_rootnode::mib_list_node
head	net/lwip/jos/arch/sys_arch.c	/^    int head, nextq;$/;"	m	struct:sys_mbox_entry	file:
header	obj/net/ns.asm	/^    header = pbuf_alloc(PBUF_LINK, 0, PBUF_RAM);$/;"	d
header	user/httpd.c	/^	char *header;$/;"	m	struct:responce_header	file:
headers	user/httpd.c	/^struct responce_header headers[] = {$/;"	v	typeref:struct:responce_header
hello	user/buggyhello2.c	/^const char *hello = "hello, world\\n";$/;"	v
hexdump	grade-lab6	/^def hexdump(data):$/;"	f
hexdump	net/testinput.c	/^hexdump(const char *prefix, const void *data, int len)$/;"	f	file:
his_ipaddr	net/lwip/netif/ppp/ppp.h	/^  struct ip_addr our_ipaddr, his_ipaddr, netmask, dns1, dns2;$/;"	m	struct:ppp_addrs	typeref:struct:ppp_addrs::
hisaddr	net/lwip/netif/ppp/ipcp.h	/^  u32_t   ouraddr, hisaddr;  \/* Addresses in NETWORK BYTE ORDER *\/$/;"	m	struct:ipcp_options
hlen	obj/net/ns.asm	/^  hlen = IPH_HL(iphdr) * 4;$/;"	d
holding	kern/spinlock.c	/^holding(struct spinlock *lock)$/;"	f	file:
hoplim	net/lwip/include/ipv6/lwip/ip.h	/^  u8_t hoplim;              \/* hop limit (TTL) *\/$/;"	m	struct:ip_hdr
hostent	net/lwip/include/lwip/netdb.h	/^struct hostent {$/;"	s
hostname	net/lwip/include/lwip/netif.h	/^  char*  hostname;$/;"	m	struct:netif
htonl	net/lwip/core/ipv4/inet.c	/^htonl(u32_t n)$/;"	f
htonl	net/lwip/include/ipv4/lwip/inet.h	56;"	d
htonl	net/lwip/include/ipv4/lwip/inet.h	72;"	d
htonl	net/lwip/include/ipv4/lwip/inet.h	79;"	d
htonl	net/lwip/include/ipv4/lwip/inet.h	85;"	d
htons	net/lwip/core/ipv4/inet.c	/^htons(u16_t n)$/;"	f
htons	net/lwip/include/ipv4/lwip/inet.h	53;"	d
htons	net/lwip/include/ipv4/lwip/inet.h	70;"	d
htons	net/lwip/include/ipv4/lwip/inet.h	77;"	d
htons	net/lwip/include/ipv4/lwip/inet.h	83;"	d
http_port	grade-lab6	/^http_port = QEMU.get_gdb_port() + 2$/;"	v
http_request	user/httpd.c	/^struct http_request {$/;"	s	file:
http_request_parse	user/httpd.c	/^http_request_parse(struct http_request *req, char *request)$/;"	f	file:
hwaddr	net/lwip/include/lwip/netif.h	/^  u8_t hwaddr[NETIF_MAX_HWADDR_LEN];$/;"	m	struct:netif
hwaddr_len	net/lwip/include/lwip/netif.h	/^  u8_t hwaddr_len;$/;"	m	struct:netif
i	net/lwip/netif/ppp/md5.h	/^  u32_t i[2];               \/* number of _bits_ handled mod 2^64 *\/$/;"	m	struct:__anon4
i	obj/kern/kernel.asm	/^			i = conf->entry;$/;"	d
i	obj/kern/kernel.asm	/^	i = 0;$/;"	d
i	obj/net/ns.asm	/^    i = 0;$/;"	d
i	obj/net/ns.asm	/^    i = empty;$/;"	d
i	obj/net/ns.asm	/^    i = old_pending;$/;"	d
i	obj/net/ns.asm	/^    i = old_queue;$/;"	d
i	obj/net/ns.asm	/^    i = old_stable;$/;"	d
i	obj/net/ns.asm	/^    i = sys_sem_wait_timeout(select_cb.sem, msectimeout);$/;"	d
i	obj/net/ns.asm	/^  i = alloc_socket(conn);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, ETHARP_FIND_ONLY);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, ETHARP_FIND_ONLY, NULL);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, ETHARP_TRY_HARD);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, ETHARP_TRY_HARD, netif);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, flags);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, flags, netif);$/;"	d
i	obj/net/testinput.asm	/^    i = 0;$/;"	d
i	obj/user/echosrv.asm	/^    i = 0;$/;"	d
i	obj/user/echotest.asm	/^    i = 0;$/;"	d
i	obj/user/httpd.asm	/^    i = 0;$/;"	d
i	obj/user/pingpongs.asm	/^	i = 0;$/;"	d
i	obj/user/primes.asm	/^		i = ipc_recv(&envid, 0, 0);$/;"	d
i	obj/user/sh.asm	/^	i = 0;$/;"	d
i	obj/user/testkbd.asm	/^	i = 0;$/;"	d
i	obj/user/testpipe.asm	/^		i = readn(p[0], buf, sizeof buf-1);$/;"	d
i386_detect_memory	kern/pmap.c	/^i386_detect_memory(void)$/;"	f	file:
i386_init	init.s	/^i386_init:$/;"	l
i386_init	kern/init.c	/^i386_init(void)$/;"	f
icmp	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node icmp = {$/;"	v	typeref:struct:mib_array_node
icmp	net/lwip/include/lwip/stats.h	/^  struct stats_proto icmp;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
icmp_dest_unreach	net/lwip/core/ipv4/icmp.c	/^icmp_dest_unreach(struct pbuf *p, enum icmp_dur_type t)$/;"	f
icmp_dest_unreach	net/lwip/core/ipv6/icmp6.c	/^icmp_dest_unreach(struct pbuf *p, enum icmp_dur_type t)$/;"	f
icmp_dur_hdr	net/lwip/include/ipv4/lwip/icmp.h	/^struct icmp_dur_hdr {$/;"	s
icmp_dur_hdr	net/lwip/include/ipv6/lwip/icmp.h	/^struct icmp_dur_hdr {$/;"	s
icmp_dur_type	net/lwip/include/ipv4/lwip/icmp.h	/^enum icmp_dur_type {$/;"	g
icmp_dur_type	net/lwip/include/ipv6/lwip/icmp.h	/^enum icmp_dur_type {$/;"	g
icmp_echo_hdr	net/lwip/include/ipv4/lwip/icmp.h	/^struct icmp_echo_hdr {$/;"	s
icmp_echo_hdr	net/lwip/include/ipv6/lwip/icmp.h	/^struct icmp_echo_hdr {$/;"	s
icmp_get_object_def	net/lwip/core/snmp/mib2.c	/^icmp_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
icmp_get_value	net/lwip/core/snmp/mib2.c	/^icmp_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
icmp_ids	net/lwip/core/snmp/mib2.c	/^const s32_t icmp_ids[26] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 };$/;"	v
icmp_input	net/lwip/core/ipv4/icmp.c	/^icmp_input(struct pbuf *p, struct netif *inp)$/;"	f
icmp_input	net/lwip/core/ipv6/icmp6.c	/^icmp_input(struct pbuf *p, struct netif *inp)$/;"	f
icmp_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const icmp_nodes[26] = {$/;"	v
icmp_scalar	net/lwip/core/snmp/mib2.c	/^const mib_scalar_node icmp_scalar = {$/;"	v
icmp_te_hdr	net/lwip/include/ipv4/lwip/icmp.h	/^struct icmp_te_hdr {$/;"	s
icmp_te_hdr	net/lwip/include/ipv6/lwip/icmp.h	/^struct icmp_te_hdr {$/;"	s
icmp_te_type	net/lwip/include/ipv4/lwip/icmp.h	/^enum icmp_te_type {$/;"	g
icmp_te_type	net/lwip/include/ipv6/lwip/icmp.h	/^enum icmp_te_type {$/;"	g
icmp_time_exceeded	net/lwip/core/ipv4/icmp.c	/^icmp_time_exceeded(struct pbuf *p, enum icmp_te_type t)$/;"	f
icmp_time_exceeded	net/lwip/core/ipv6/icmp6.c	/^icmp_time_exceeded(struct pbuf *p, enum icmp_te_type t)$/;"	f
icmpinaddrmaskreps	net/lwip/core/snmp/mib2.c	/^             icmpinaddrmaskreps = 0,$/;"	v	file:
icmpinaddrmasks	net/lwip/core/snmp/mib2.c	/^             icmpinaddrmasks = 0,$/;"	v	file:
icmpindestunreachs	net/lwip/core/snmp/mib2.c	/^             icmpindestunreachs = 0,$/;"	v	file:
icmpinechoreps	net/lwip/core/snmp/mib2.c	/^             icmpinechoreps = 0,$/;"	v	file:
icmpinechos	net/lwip/core/snmp/mib2.c	/^             icmpinechos = 0,$/;"	v	file:
icmpinerrors	net/lwip/core/snmp/mib2.c	/^             icmpinerrors = 0,$/;"	v	file:
icmpinmsgs	net/lwip/core/snmp/mib2.c	/^static u32_t icmpinmsgs = 0,$/;"	v	file:
icmpinparmprobs	net/lwip/core/snmp/mib2.c	/^             icmpinparmprobs = 0,$/;"	v	file:
icmpinredirects	net/lwip/core/snmp/mib2.c	/^             icmpinredirects = 0,$/;"	v	file:
icmpinsrcquenchs	net/lwip/core/snmp/mib2.c	/^             icmpinsrcquenchs = 0,$/;"	v	file:
icmpintimeexcds	net/lwip/core/snmp/mib2.c	/^             icmpintimeexcds = 0,$/;"	v	file:
icmpintimestampreps	net/lwip/core/snmp/mib2.c	/^             icmpintimestampreps = 0,$/;"	v	file:
icmpintimestamps	net/lwip/core/snmp/mib2.c	/^             icmpintimestamps = 0,$/;"	v	file:
icmpoutaddrmaskreps	net/lwip/core/snmp/mib2.c	/^             icmpoutaddrmaskreps = 0;$/;"	v	file:
icmpoutaddrmasks	net/lwip/core/snmp/mib2.c	/^             icmpoutaddrmasks = 0,$/;"	v	file:
icmpoutdestunreachs	net/lwip/core/snmp/mib2.c	/^             icmpoutdestunreachs = 0,$/;"	v	file:
icmpoutechoreps	net/lwip/core/snmp/mib2.c	/^             icmpoutechoreps = 0,$/;"	v	file:
icmpoutechos	net/lwip/core/snmp/mib2.c	/^             icmpoutechos = 0,$/;"	v	file:
icmpouterrors	net/lwip/core/snmp/mib2.c	/^             icmpouterrors = 0,$/;"	v	file:
icmpoutmsgs	net/lwip/core/snmp/mib2.c	/^             icmpoutmsgs = 0,$/;"	v	file:
icmpoutparmprobs	net/lwip/core/snmp/mib2.c	/^             icmpoutparmprobs = 0,$/;"	v	file:
icmpoutredirects	net/lwip/core/snmp/mib2.c	/^             icmpoutredirects = 0,$/;"	v	file:
icmpoutsrcquenchs	net/lwip/core/snmp/mib2.c	/^             icmpoutsrcquenchs = 0,$/;"	v	file:
icmpouttimeexcds	net/lwip/core/snmp/mib2.c	/^             icmpouttimeexcds = 0,$/;"	v	file:
icmpouttimestampreps	net/lwip/core/snmp/mib2.c	/^             icmpouttimestampreps = 0,$/;"	v	file:
icmpouttimestamps	net/lwip/core/snmp/mib2.c	/^             icmpouttimestamps = 0,$/;"	v	file:
icode	net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t icode;$/;"	m	struct:icmp_dur_hdr
icode	net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t icode;$/;"	m	struct:icmp_echo_hdr
icode	net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t icode;$/;"	m	struct:icmp_te_hdr
id	inc/fd.h	/^	int id;$/;"	m	struct:FdFile
id	net/lwip/core/dns.c	/^  u16_t id;$/;"	m	struct:dns_hdr	file:
id	net/lwip/include/ipv6/lwip/icmp.h	/^  u16_t id;$/;"	m	struct:icmp_echo_hdr
id	net/lwip/include/lwip/snmp.h	/^  s32_t id[LWIP_SNMP_OBJ_ID_LEN];$/;"	m	struct:snmp_obj_id
id	net/lwip/netif/ppp/chap.h	/^  u_char id;                              \/* Current id *\/$/;"	m	struct:chap_state
id	net/lwip/netif/ppp/fsm.h	/^  u_char id;                       \/* Current id *\/$/;"	m	struct:fsm
id	obj/user/fairness.asm	/^	id = sys_getenvid();$/;"	d
id_inst_len	net/lwip/include/lwip/snmp_structs.h	/^  u8_t  id_inst_len;$/;"	m	struct:obj_def
id_inst_ptr	net/lwip/include/lwip/snmp_structs.h	/^  s32_t *id_inst_ptr;$/;"	m	struct:obj_def
ide_probe_disk1	fs/ide.c	/^ide_probe_disk1(void)$/;"	f
ide_read	fs/ide.c	/^ide_read(uint32_t secno, void *dst, size_t nsecs)$/;"	f
ide_set_disk	fs/ide.c	/^ide_set_disk(int d)$/;"	f
ide_wait_ready	fs/ide.c	/^ide_wait_ready(bool check_error)$/;"	f	file:
ide_write	fs/ide.c	/^ide_write(uint32_t secno, const void *src, size_t nsecs)$/;"	f
ident	net/lwip/include/lwip/snmp_msg.h	/^  s32_t *ident;$/;"	m	struct:snmp_varbind
ident	net/lwip/include/lwip/snmp_structs.h	/^  s32_t *ident;$/;"	m	struct:snmp_name_ptr
ident_cmp	net/lwip/include/lwip/snmp_structs.h	/^  s32_t (*ident_cmp)(void* addr_inf, u8_t level, u16_t idx, s32_t sub_id);$/;"	m	struct:mib_external_node
ident_len	net/lwip/include/lwip/snmp_msg.h	/^  u8_t ident_len;$/;"	m	struct:snmp_varbind
ident_len	net/lwip/include/lwip/snmp_structs.h	/^  u8_t ident_len;$/;"	m	struct:snmp_name_ptr
idle_time_limit	net/lwip/netif/ppp/ppp.h	/^  u_short idle_time_limit;            \/* Shut down link if idle for this long *\/$/;"	m	struct:ppp_settings
idt	kern/trap.c	/^struct Gatedesc idt[256] = { { 0 } };$/;"	v	typeref:struct:Gatedesc
idt_pd	kern/trap.c	/^struct Pseudodesc idt_pd = {$/;"	v	typeref:struct:Pseudodesc
idur	obj/net/ns.asm	/^  idur = q->payload;$/;"	d
idx	lib/fprintf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	file:
idx	lib/printf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	file:
iecho	obj/net/ns.asm	/^    iecho = p->payload;$/;"	d
if_up	net/lwip/netif/ppp/ppp.c	/^  int  if_up;                   \/* True when the interface is up. *\/$/;"	m	struct:PPPControl_s	file:
ifentry	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node ifentry = {$/;"	v	typeref:struct:mib_array_node
ifentry_get_object_def	net/lwip/core/snmp/mib2.c	/^ifentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
ifentry_get_value	net/lwip/core/snmp/mib2.c	/^ifentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ifentry_ids	net/lwip/core/snmp/mib2.c	/^const s32_t ifentry_ids[22] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22 };$/;"	v
ifentry_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const ifentry_nodes[22] = {$/;"	v
ifentry_set_test	net/lwip/core/snmp/mib2.c	/^ifentry_set_test (struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ifentry_set_value	net/lwip/core/snmp/mib2.c	/^ifentry_set_value (struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ifindiscards	net/lwip/include/lwip/netif.h	/^  u32_t ifindiscards;$/;"	m	struct:netif
ifinnucastpkts	net/lwip/include/lwip/netif.h	/^  u32_t ifinnucastpkts;$/;"	m	struct:netif
ifinoctets	net/lwip/include/lwip/netif.h	/^  u32_t ifinoctets;$/;"	m	struct:netif
ifinucastpkts	net/lwip/include/lwip/netif.h	/^  u32_t ifinucastpkts;$/;"	m	struct:netif
iflist_root	net/lwip/core/snmp/mib2.c	/^struct mib_list_rootnode iflist_root = {$/;"	v	typeref:struct:mib_list_rootnode
ifoutdiscards	net/lwip/include/lwip/netif.h	/^  u32_t ifoutdiscards;$/;"	m	struct:netif
ifoutnucastpkts	net/lwip/include/lwip/netif.h	/^  u32_t ifoutnucastpkts;$/;"	m	struct:netif
ifoutoctets	net/lwip/include/lwip/netif.h	/^  u32_t ifoutoctets;$/;"	m	struct:netif
ifoutucastpkts	net/lwip/include/lwip/netif.h	/^  u32_t ifoutucastpkts;$/;"	m	struct:netif
ifspecific	net/lwip/core/snmp/mib2.c	/^static const struct snmp_obj_id ifspecific = {2, {0, 0}};$/;"	v	typeref:struct:snmp_obj_id	file:
iftable	net/lwip/core/snmp/mib2.c	/^struct mib_ram_array_node iftable = {$/;"	v	typeref:struct:mib_ram_array_node
iftable_id	net/lwip/core/snmp/mib2.c	/^s32_t iftable_id = 1;$/;"	v
iftable_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* iftable_node = (struct mib_node* const)&ifentry;$/;"	v	typeref:struct:mib_node
igmp	net/lwip/include/lwip/stats.h	/^  struct stats_igmp igmp;$/;"	m	struct:stats_	typeref:struct:stats_::stats_igmp
igmp_delaying_member	net/lwip/core/ipv4/igmp.c	/^igmp_delaying_member( struct igmp_group *group, u8_t maxresp)$/;"	f
igmp_dump_group_list	net/lwip/core/ipv4/igmp.c	/^igmp_dump_group_list()$/;"	f
igmp_dump_group_list	net/lwip/core/ipv4/igmp.c	137;"	d	file:
igmp_group	net/lwip/include/ipv4/lwip/igmp.h	/^struct igmp_group {$/;"	s
igmp_group_list	net/lwip/core/ipv4/igmp.c	/^static struct igmp_group* igmp_group_list;$/;"	v	typeref:struct:igmp_group	file:
igmp_init	net/lwip/core/ipv4/igmp.c	/^igmp_init(void)$/;"	f
igmp_input	net/lwip/core/ipv4/igmp.c	/^igmp_input(struct pbuf *p, struct netif *inp, struct ip_addr *dest)$/;"	f
igmp_ip_output_if	net/lwip/core/ipv4/igmp.c	/^igmp_ip_output_if(struct pbuf *p, struct ip_addr *src, struct ip_addr *dest,$/;"	f
igmp_joingroup	net/lwip/core/ipv4/igmp.c	/^igmp_joingroup(struct ip_addr *ifaddr, struct ip_addr *groupaddr)$/;"	f
igmp_leavegroup	net/lwip/core/ipv4/igmp.c	/^igmp_leavegroup(struct ip_addr *ifaddr, struct ip_addr *groupaddr)$/;"	f
igmp_lookfor_group	net/lwip/core/ipv4/igmp.c	/^igmp_lookfor_group(struct netif *ifp, struct ip_addr *addr)$/;"	f
igmp_lookup_group	net/lwip/core/ipv4/igmp.c	/^igmp_lookup_group(struct netif *ifp, struct ip_addr *addr)$/;"	f
igmp_mac_filter	net/lwip/include/lwip/netif.h	/^  err_t (*igmp_mac_filter)( struct netif *netif, struct ip_addr *group, u8_t action);$/;"	m	struct:netif
igmp_msg	net/lwip/include/ipv4/lwip/igmp.h	/^struct igmp_msg {$/;"	s
igmp_remove_group	net/lwip/core/ipv4/igmp.c	/^igmp_remove_group(struct igmp_group *group)$/;"	f
igmp_report_groups	net/lwip/core/ipv4/igmp.c	/^igmp_report_groups( struct netif *netif)$/;"	f
igmp_send	net/lwip/core/ipv4/igmp.c	/^igmp_send(struct igmp_group *group, u8_t type)$/;"	f
igmp_start	net/lwip/core/ipv4/igmp.c	/^igmp_start(struct netif *netif)$/;"	f
igmp_start_timer	net/lwip/core/ipv4/igmp.c	/^igmp_start_timer(struct igmp_group *group, u8_t max_time)$/;"	f
igmp_stop	net/lwip/core/ipv4/igmp.c	/^igmp_stop(struct netif *netif)$/;"	f
igmp_stop_timer	net/lwip/core/ipv4/igmp.c	/^igmp_stop_timer(struct igmp_group *group)$/;"	f
igmp_timeout	net/lwip/core/ipv4/igmp.c	/^igmp_timeout(struct igmp_group *group)$/;"	f
igmp_timer	net/lwip/api/tcpip.c	/^igmp_timer(void *arg)$/;"	f	file:
igmp_tmr	net/lwip/core/ipv4/igmp.c	/^igmp_tmr(void)$/;"	f
illegal	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER illegal;$/;"	m	struct:stats_mem
imcrp	kern/mpconfig.c	/^	uint8_t imcrp;$/;"	m	struct:mp	file:
imr_interface	net/lwip/include/lwip/sockets.h	/^    struct in_addr imr_interface; \/* local IP address of interface *\/$/;"	m	struct:ip_mreq	typeref:struct:ip_mreq::in_addr
imr_multiaddr	net/lwip/include/lwip/sockets.h	/^    struct in_addr imr_multiaddr; \/* IP multicast address of group *\/$/;"	m	struct:ip_mreq	typeref:struct:ip_mreq::in_addr
in	net/lwip/netif/ppp/md5.h	/^  unsigned char in[64];     \/* input buffer *\/$/;"	m	struct:__anon4
inACCM	net/lwip/netif/ppp/ppp.c	/^  ext_accm inACCM;              \/* Async-Ctl-Char-Map for input. *\/$/;"	m	struct:PPPControl_s	file:
inEscaped	net/lwip/netif/ppp/ppp.c	/^  char inEscaped;               \/* Escape next character. *\/$/;"	m	struct:PPPControl_s	file:
inFCS	net/lwip/netif/ppp/ppp.c	/^  u16_t inFCS;                  \/* Input Frame Check Sequence value. *\/$/;"	m	struct:PPPControl_s	file:
inHead	net/lwip/netif/ppp/ppp.c	/^  struct pbuf *inHead, *inTail; \/* The input packet. *\/$/;"	m	struct:PPPControl_s	typeref:struct:PPPControl_s::pbuf	file:
inProtocol	net/lwip/netif/ppp/ppp.c	/^  u16_t inProtocol;             \/* The input protocol code. *\/$/;"	m	struct:PPPControl_s	file:
inState	net/lwip/netif/ppp/ppp.c	/^  PPPDevStates inState;         \/* The input process state. *\/$/;"	m	struct:PPPControl_s	file:
inTail	net/lwip/netif/ppp/ppp.c	/^  struct pbuf *inHead, *inTail; \/* The input packet. *\/$/;"	m	struct:PPPControl_s	typeref:struct:PPPControl_s::	file:
in_addr	net/lwip/include/ipv4/lwip/inet.h	/^struct in_addr {$/;"	s
in_range	net/lwip/core/ipv4/inet.c	45;"	d	file:
inactive	obj/net/ns.asm	/^      inactive = pcb;$/;"	d
inactive	obj/net/ns.asm	/^  inactive = NULL;$/;"	d
inactivity	obj/net/ns.asm	/^      inactivity = tcp_ticks - pcb->tmr;$/;"	d
inactivity	obj/net/ns.asm	/^  inactivity = 0;$/;"	d
inb	inc/x86.h	/^inb(int port)$/;"	f
increment_magnitude	obj/net/ns.asm	/^    increment_magnitude = -header_size_increment;$/;"	d
increment_magnitude	obj/net/ns.asm	/^    increment_magnitude = header_size_increment;$/;"	d
inet_addr	net/lwip/core/ipv4/inet.c	/^inet_addr(const char *cp)$/;"	f
inet_aton	net/lwip/core/ipv4/inet.c	/^inet_aton(const char *cp, struct in_addr *addr)$/;"	f
inet_chksum	net/lwip/core/ipv4/inet_chksum.c	/^inet_chksum(void *dataptr, u16_t len)$/;"	f
inet_chksum	net/lwip/core/ipv6/inet6.c	/^inet_chksum(void *dataptr, u16_t len)$/;"	f
inet_chksum_pbuf	net/lwip/core/ipv4/inet_chksum.c	/^inet_chksum_pbuf(struct pbuf *p)$/;"	f
inet_chksum_pbuf	net/lwip/core/ipv6/inet6.c	/^inet_chksum_pbuf(struct pbuf *p)$/;"	f
inet_chksum_pseudo	net/lwip/core/ipv4/inet_chksum.c	/^inet_chksum_pseudo(struct pbuf *p,$/;"	f
inet_chksum_pseudo	net/lwip/core/ipv6/inet6.c	/^inet_chksum_pseudo(struct pbuf *p,$/;"	f
inet_chksum_pseudo_partial	net/lwip/core/ipv4/inet_chksum.c	/^inet_chksum_pseudo_partial(struct pbuf *p,$/;"	f
inet_ntoa	net/lwip/core/ipv4/inet.c	/^inet_ntoa(struct in_addr addr)$/;"	f
inet_ntoa	net/lwip/netif/ppp/ipcp.c	199;"	d	file:
init	net/lwip/include/lwip/netifapi.h	/^      err_t (* init) (struct netif *netif);$/;"	m	struct:netifapi_msg_msg::__anon22::__anon23
init	net/lwip/netif/ppp/ppp.h	/^    void (*init) (int unit);$/;"	m	struct:protent
init_receive	kern/e1000.c	/^init_receive()$/;"	f
init_stack	lib/spawn.c	/^init_stack(envid_t child, const char **argv, uintptr_t *init_esp)$/;"	f	file:
init_transmit	kern/e1000.c	/^init_transmit()$/;"	f
inl	inc/x86.h	/^inl(int port)$/;"	f
inp	net/lwip/include/lwip/tcpip.h	/^    } inp;$/;"	m	union:tcpip_msg::__anon17	typeref:struct:tcpip_msg::__anon17::__anon18
input	net/input.c	/^input(envid_t ns_envid)$/;"	f
input	net/lwip/include/lwip/netif.h	/^  err_t (* input)(struct pbuf *p, struct netif *inp);$/;"	m	struct:netif
input	net/lwip/include/lwip/netifapi.h	/^      err_t (* input)(struct pbuf *p, struct netif *netif);$/;"	m	struct:netifapi_msg_msg::__anon22::__anon23
input	net/lwip/netif/ppp/ppp.h	/^    void (*input) (int unit, u_char *pkt, int len);$/;"	m	struct:protent
input_envid	net/serv.c	/^static envid_t input_envid;$/;"	v	file:
input_envid	net/testinput.c	/^static envid_t input_envid;$/;"	v	file:
input_envid	obj/net/ns.asm	/^	input_envid = fork();$/;"	d
input_envid	obj/net/testinput.asm	/^	input_envid = fork();$/;"	d
insb	inc/x86.h	/^insb(int port, void *addr, int cnt)$/;"	f
inseg	net/lwip/core/tcp_in.c	/^static struct tcp_seg inseg;$/;"	v	typeref:struct:tcp_seg	file:
insl	inc/x86.h	/^insl(int port, void *addr, int cnt)$/;"	f
instance	net/lwip/include/lwip/snmp_structs.h	/^  u8_t instance;$/;"	m	struct:obj_def
insw	inc/x86.h	/^insw(int port, void *addr, int cnt)$/;"	f
int	obj/fs/fs.asm	/^int $/;"	l
int	obj/fs/fs.asm	/^int color;$/;"	l
int	obj/fs/fs.asm	/^int$/;"	l
int	obj/kern/kernel.asm	/^int $/;"	l
int	obj/kern/kernel.asm	/^int color;$/;"	l
int	obj/kern/kernel.asm	/^int x = 1, y = 3, z = 4;$/;"	l
int	obj/kern/kernel.asm	/^int$/;"	l
int	obj/net/ns.asm	/^int $/;"	l
int	obj/net/ns.asm	/^int color;$/;"	l
int	obj/net/ns.asm	/^int$/;"	l
int	obj/net/testinput.asm	/^int $/;"	l
int	obj/net/testinput.asm	/^int color;$/;"	l
int	obj/net/testinput.asm	/^int$/;"	l
int	obj/net/testoutput.asm	/^int $/;"	l
int	obj/net/testoutput.asm	/^int color;$/;"	l
int	obj/net/testoutput.asm	/^int$/;"	l
int	obj/user/badsegment.asm	/^int $/;"	l
int	obj/user/badsegment.asm	/^int color;$/;"	l
int	obj/user/badsegment.asm	/^int$/;"	l
int	obj/user/breakpoint.asm	/^int $/;"	l
int	obj/user/breakpoint.asm	/^int color;$/;"	l
int	obj/user/breakpoint.asm	/^int$/;"	l
int	obj/user/buggyhello.asm	/^int $/;"	l
int	obj/user/buggyhello.asm	/^int color;$/;"	l
int	obj/user/buggyhello.asm	/^int$/;"	l
int	obj/user/buggyhello2.asm	/^int $/;"	l
int	obj/user/buggyhello2.asm	/^int color;$/;"	l
int	obj/user/buggyhello2.asm	/^int$/;"	l
int	obj/user/cat.asm	/^int $/;"	l
int	obj/user/cat.asm	/^int color;$/;"	l
int	obj/user/cat.asm	/^int$/;"	l
int	obj/user/divzero.asm	/^int $/;"	l
int	obj/user/divzero.asm	/^int color;$/;"	l
int	obj/user/divzero.asm	/^int zero;$/;"	l
int	obj/user/divzero.asm	/^int$/;"	l
int	obj/user/dumbfork.asm	/^int $/;"	l
int	obj/user/dumbfork.asm	/^int color;$/;"	l
int	obj/user/dumbfork.asm	/^int$/;"	l
int	obj/user/echo.asm	/^int $/;"	l
int	obj/user/echo.asm	/^int color;$/;"	l
int	obj/user/echo.asm	/^int$/;"	l
int	obj/user/echosrv.asm	/^int $/;"	l
int	obj/user/echosrv.asm	/^int color;$/;"	l
int	obj/user/echosrv.asm	/^int$/;"	l
int	obj/user/echotest.asm	/^int $/;"	l
int	obj/user/echotest.asm	/^int color;$/;"	l
int	obj/user/echotest.asm	/^int$/;"	l
int	obj/user/evilhello.asm	/^int $/;"	l
int	obj/user/evilhello.asm	/^int color;$/;"	l
int	obj/user/evilhello.asm	/^int$/;"	l
int	obj/user/fairness.asm	/^int $/;"	l
int	obj/user/fairness.asm	/^int color;$/;"	l
int	obj/user/fairness.asm	/^int$/;"	l
int	obj/user/faultalloc.asm	/^int $/;"	l
int	obj/user/faultalloc.asm	/^int color;$/;"	l
int	obj/user/faultalloc.asm	/^int$/;"	l
int	obj/user/faultallocbad.asm	/^int $/;"	l
int	obj/user/faultallocbad.asm	/^int color;$/;"	l
int	obj/user/faultallocbad.asm	/^int$/;"	l
int	obj/user/faultbadhandler.asm	/^int $/;"	l
int	obj/user/faultbadhandler.asm	/^int color;$/;"	l
int	obj/user/faultbadhandler.asm	/^int$/;"	l
int	obj/user/faultdie.asm	/^int $/;"	l
int	obj/user/faultdie.asm	/^int color;$/;"	l
int	obj/user/faultdie.asm	/^int$/;"	l
int	obj/user/faultevilhandler.asm	/^int $/;"	l
int	obj/user/faultevilhandler.asm	/^int color;$/;"	l
int	obj/user/faultevilhandler.asm	/^int$/;"	l
int	obj/user/faultnostack.asm	/^int $/;"	l
int	obj/user/faultnostack.asm	/^int color;$/;"	l
int	obj/user/faultnostack.asm	/^int$/;"	l
int	obj/user/faultread.asm	/^int $/;"	l
int	obj/user/faultread.asm	/^int color;$/;"	l
int	obj/user/faultread.asm	/^int$/;"	l
int	obj/user/faultreadkernel.asm	/^int $/;"	l
int	obj/user/faultreadkernel.asm	/^int color;$/;"	l
int	obj/user/faultreadkernel.asm	/^int$/;"	l
int	obj/user/faultregs.asm	/^int $/;"	l
int	obj/user/faultregs.asm	/^int color;$/;"	l
int	obj/user/faultregs.asm	/^int$/;"	l
int	obj/user/faultwrite.asm	/^int $/;"	l
int	obj/user/faultwrite.asm	/^int color;$/;"	l
int	obj/user/faultwrite.asm	/^int$/;"	l
int	obj/user/faultwritekernel.asm	/^int $/;"	l
int	obj/user/faultwritekernel.asm	/^int color;$/;"	l
int	obj/user/faultwritekernel.asm	/^int$/;"	l
int	obj/user/forktree.asm	/^int $/;"	l
int	obj/user/forktree.asm	/^int color;$/;"	l
int	obj/user/forktree.asm	/^int$/;"	l
int	obj/user/hello.asm	/^int $/;"	l
int	obj/user/hello.asm	/^int color;$/;"	l
int	obj/user/hello.asm	/^int$/;"	l
int	obj/user/httpd.asm	/^int $/;"	l
int	obj/user/httpd.asm	/^int color;$/;"	l
int	obj/user/httpd.asm	/^int$/;"	l
int	obj/user/icode.asm	/^int $/;"	l
int	obj/user/icode.asm	/^int color;$/;"	l
int	obj/user/icode.asm	/^int$/;"	l
int	obj/user/idle.asm	/^int $/;"	l
int	obj/user/idle.asm	/^int color;$/;"	l
int	obj/user/idle.asm	/^int$/;"	l
int	obj/user/init.asm	/^int $/;"	l
int	obj/user/init.asm	/^int color;$/;"	l
int	obj/user/init.asm	/^int$/;"	l
int	obj/user/ls.asm	/^int $/;"	l
int	obj/user/ls.asm	/^int color;$/;"	l
int	obj/user/ls.asm	/^int$/;"	l
int	obj/user/lsfd.asm	/^int $/;"	l
int	obj/user/lsfd.asm	/^int color;$/;"	l
int	obj/user/lsfd.asm	/^int$/;"	l
int	obj/user/num.asm	/^int $/;"	l
int	obj/user/num.asm	/^int bol = 1;$/;"	l
int	obj/user/num.asm	/^int color;$/;"	l
int	obj/user/num.asm	/^int line = 0;$/;"	l
int	obj/user/num.asm	/^int$/;"	l
int	obj/user/pingpong.asm	/^int $/;"	l
int	obj/user/pingpong.asm	/^int color;$/;"	l
int	obj/user/pingpong.asm	/^int$/;"	l
int	obj/user/pingpongs.asm	/^int $/;"	l
int	obj/user/pingpongs.asm	/^int color;$/;"	l
int	obj/user/pingpongs.asm	/^int$/;"	l
int	obj/user/primes.asm	/^int $/;"	l
int	obj/user/primes.asm	/^int color;$/;"	l
int	obj/user/primes.asm	/^int$/;"	l
int	obj/user/primespipe.asm	/^int $/;"	l
int	obj/user/primespipe.asm	/^int color;$/;"	l
int	obj/user/primespipe.asm	/^int$/;"	l
int	obj/user/sendpage.asm	/^int $/;"	l
int	obj/user/sendpage.asm	/^int color;$/;"	l
int	obj/user/sendpage.asm	/^int$/;"	l
int	obj/user/sh.asm	/^int $/;"	l
int	obj/user/sh.asm	/^int color;$/;"	l
int	obj/user/sh.asm	/^int$/;"	l
int	obj/user/softint.asm	/^int $/;"	l
int	obj/user/softint.asm	/^int color;$/;"	l
int	obj/user/softint.asm	/^int$/;"	l
int	obj/user/spawnhello.asm	/^int $/;"	l
int	obj/user/spawnhello.asm	/^int color;$/;"	l
int	obj/user/spawnhello.asm	/^int$/;"	l
int	obj/user/spin.asm	/^int $/;"	l
int	obj/user/spin.asm	/^int color;$/;"	l
int	obj/user/spin.asm	/^int$/;"	l
int	obj/user/stresssched.asm	/^int $/;"	l
int	obj/user/stresssched.asm	/^int color;$/;"	l
int	obj/user/stresssched.asm	/^int$/;"	l
int	obj/user/testbss.asm	/^int $/;"	l
int	obj/user/testbss.asm	/^int color;$/;"	l
int	obj/user/testbss.asm	/^int$/;"	l
int	obj/user/testfdsharing.asm	/^int $/;"	l
int	obj/user/testfdsharing.asm	/^int color;$/;"	l
int	obj/user/testfdsharing.asm	/^int$/;"	l
int	obj/user/testfile.asm	/^int $/;"	l
int	obj/user/testfile.asm	/^int color;$/;"	l
int	obj/user/testfile.asm	/^int$/;"	l
int	obj/user/testkbd.asm	/^int $/;"	l
int	obj/user/testkbd.asm	/^int color;$/;"	l
int	obj/user/testkbd.asm	/^int$/;"	l
int	obj/user/testpipe.asm	/^int $/;"	l
int	obj/user/testpipe.asm	/^int color;$/;"	l
int	obj/user/testpipe.asm	/^int$/;"	l
int	obj/user/testpiperace.asm	/^int $/;"	l
int	obj/user/testpiperace.asm	/^int color;$/;"	l
int	obj/user/testpiperace.asm	/^int$/;"	l
int	obj/user/testpiperace2.asm	/^int $/;"	l
int	obj/user/testpiperace2.asm	/^int color;$/;"	l
int	obj/user/testpiperace2.asm	/^int$/;"	l
int	obj/user/testpteshare.asm	/^int $/;"	l
int	obj/user/testpteshare.asm	/^int color;$/;"	l
int	obj/user/testpteshare.asm	/^int$/;"	l
int	obj/user/testshell.asm	/^int $/;"	l
int	obj/user/testshell.asm	/^int color;$/;"	l
int	obj/user/testshell.asm	/^int$/;"	l
int	obj/user/testtime.asm	/^int $/;"	l
int	obj/user/testtime.asm	/^int color;$/;"	l
int	obj/user/testtime.asm	/^int$/;"	l
int	obj/user/yield.asm	/^int $/;"	l
int	obj/user/yield.asm	/^int color;$/;"	l
int	obj/user/yield.asm	/^int$/;"	l
int16_t	inc/types.h	/^typedef short int16_t;$/;"	t
int32_t	inc/types.h	/^typedef int int32_t;$/;"	t
int32_t	obj/fs/fs.asm	/^int32_t$/;"	l
int32_t	obj/kern/kernel.asm	/^int32_t$/;"	l
int32_t	obj/net/ns.asm	/^int32_t$/;"	l
int32_t	obj/net/testinput.asm	/^int32_t$/;"	l
int32_t	obj/net/testoutput.asm	/^int32_t$/;"	l
int32_t	obj/user/badsegment.asm	/^int32_t$/;"	l
int32_t	obj/user/breakpoint.asm	/^int32_t$/;"	l
int32_t	obj/user/buggyhello.asm	/^int32_t$/;"	l
int32_t	obj/user/buggyhello2.asm	/^int32_t$/;"	l
int32_t	obj/user/cat.asm	/^int32_t$/;"	l
int32_t	obj/user/divzero.asm	/^int32_t$/;"	l
int32_t	obj/user/dumbfork.asm	/^int32_t$/;"	l
int32_t	obj/user/echo.asm	/^int32_t$/;"	l
int32_t	obj/user/echosrv.asm	/^int32_t$/;"	l
int32_t	obj/user/echotest.asm	/^int32_t$/;"	l
int32_t	obj/user/evilhello.asm	/^int32_t$/;"	l
int32_t	obj/user/fairness.asm	/^int32_t$/;"	l
int32_t	obj/user/faultalloc.asm	/^int32_t$/;"	l
int32_t	obj/user/faultallocbad.asm	/^int32_t$/;"	l
int32_t	obj/user/faultbadhandler.asm	/^int32_t$/;"	l
int32_t	obj/user/faultdie.asm	/^int32_t$/;"	l
int32_t	obj/user/faultevilhandler.asm	/^int32_t$/;"	l
int32_t	obj/user/faultnostack.asm	/^int32_t$/;"	l
int32_t	obj/user/faultread.asm	/^int32_t$/;"	l
int32_t	obj/user/faultreadkernel.asm	/^int32_t$/;"	l
int32_t	obj/user/faultregs.asm	/^int32_t$/;"	l
int32_t	obj/user/faultwrite.asm	/^int32_t$/;"	l
int32_t	obj/user/faultwritekernel.asm	/^int32_t$/;"	l
int32_t	obj/user/forktree.asm	/^int32_t$/;"	l
int32_t	obj/user/hello.asm	/^int32_t$/;"	l
int32_t	obj/user/httpd.asm	/^int32_t$/;"	l
int32_t	obj/user/icode.asm	/^int32_t$/;"	l
int32_t	obj/user/idle.asm	/^int32_t$/;"	l
int32_t	obj/user/init.asm	/^int32_t$/;"	l
int32_t	obj/user/ls.asm	/^int32_t$/;"	l
int32_t	obj/user/lsfd.asm	/^int32_t$/;"	l
int32_t	obj/user/num.asm	/^int32_t$/;"	l
int32_t	obj/user/pingpong.asm	/^int32_t$/;"	l
int32_t	obj/user/pingpongs.asm	/^int32_t$/;"	l
int32_t	obj/user/primes.asm	/^int32_t$/;"	l
int32_t	obj/user/primespipe.asm	/^int32_t$/;"	l
int32_t	obj/user/sendpage.asm	/^int32_t$/;"	l
int32_t	obj/user/sh.asm	/^int32_t$/;"	l
int32_t	obj/user/softint.asm	/^int32_t$/;"	l
int32_t	obj/user/spawnhello.asm	/^int32_t$/;"	l
int32_t	obj/user/spin.asm	/^int32_t$/;"	l
int32_t	obj/user/stresssched.asm	/^int32_t$/;"	l
int32_t	obj/user/testbss.asm	/^int32_t$/;"	l
int32_t	obj/user/testfdsharing.asm	/^int32_t$/;"	l
int32_t	obj/user/testfile.asm	/^int32_t$/;"	l
int32_t	obj/user/testkbd.asm	/^int32_t$/;"	l
int32_t	obj/user/testpipe.asm	/^int32_t$/;"	l
int32_t	obj/user/testpiperace.asm	/^int32_t$/;"	l
int32_t	obj/user/testpiperace2.asm	/^int32_t$/;"	l
int32_t	obj/user/testpteshare.asm	/^int32_t$/;"	l
int32_t	obj/user/testshell.asm	/^int32_t$/;"	l
int32_t	obj/user/testtime.asm	/^int32_t$/;"	l
int32_t	obj/user/yield.asm	/^int32_t$/;"	l
int64_t	inc/types.h	/^typedef long long int64_t;$/;"	t
int8_t	inc/types.h	/^typedef __signed char int8_t;$/;"	t
interactive	obj/user/sh.asm	/^			interactive = 1;$/;"	d
interactive	obj/user/sh.asm	/^		interactive = iscons(0);$/;"	d
interactive	obj/user/sh.asm	/^	interactive = '?';$/;"	d
interface	net/lwip/include/ipv4/lwip/igmp.h	/^  struct netif      *interface;$/;"	m	struct:igmp_group	typeref:struct:igmp_group::netif
interface	net/lwip/include/lwip/api_msg.h	/^      struct ip_addr *interface;$/;"	m	struct:api_msg_msg::__anon25::__anon31	typeref:struct:api_msg_msg::__anon25::__anon31::ip_addr
interfaces	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node interfaces = {$/;"	v	typeref:struct:mib_array_node
interfaces_get_object_def	net/lwip/core/snmp/mib2.c	/^interfaces_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
interfaces_get_value	net/lwip/core/snmp/mib2.c	/^interfaces_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
interfaces_ids	net/lwip/core/snmp/mib2.c	/^const s32_t interfaces_ids[2] = { 1, 2 };$/;"	v
interfaces_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const interfaces_nodes[2] = {$/;"	v
interfaces_scalar	net/lwip/core/snmp/mib2.c	/^const mib_scalar_node interfaces_scalar = {$/;"	v
internet	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node internet = {$/;"	v	typeref:struct:mib_array_node
internet_ids	net/lwip/core/snmp/mib2.c	/^const s32_t internet_ids[1] = { 2 };$/;"	v
internet_ids	net/lwip/core/snmp/mib2.c	/^s32_t internet_ids[2] = { 2, 4 };$/;"	v
internet_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const internet_nodes[1] = { (struct mib_node* const)&mgmt };$/;"	v
internet_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const internet_nodes[2] = { (struct mib_node* const)&mgmt, (struct mib_node* const)&private };$/;"	v
intptr_t	inc/types.h	/^typedef int32_t intptr_t;$/;"	t
invb	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind_root invb;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_varbind_root
invlpg	inc/x86.h	/^invlpg(void *addr)$/;"	f
inw	inc/x86.h	/^inw(int port)$/;"	f
ioctlsocket	net/lwip/include/lwip/sockets.h	342;"	d
ip	net/lwip/include/lwip/api.h	/^    struct ip_pcb  *ip;$/;"	m	union:netconn::__anon21	typeref:struct:netconn::__anon21::ip_pcb
ip	net/lwip/include/lwip/stats.h	/^  struct stats_proto ip;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
ip	net/lwip/netif/ppp/vjbsdhdr.h	/^struct ip$/;"	s
ip4_addr1	net/lwip/include/ipv4/lwip/ip_addr.h	156;"	d
ip4_addr2	net/lwip/include/ipv4/lwip/ip_addr.h	157;"	d
ip4_addr3	net/lwip/include/ipv4/lwip/ip_addr.h	158;"	d
ip4_addr4	net/lwip/include/ipv4/lwip/ip_addr.h	159;"	d
ip_addr	net/lwip/include/ipv4/lwip/ip_addr.h	/^struct ip_addr {$/;"	s
ip_addr	net/lwip/include/ipv6/lwip/ip_addr.h	/^ struct ip_addr {$/;"	s
ip_addr	net/lwip/include/lwip/netif.h	/^  struct ip_addr ip_addr;$/;"	m	struct:netif	typeref:struct:netif::ip_addr
ip_addr2	net/lwip/include/ipv4/lwip/ip_addr.h	/^struct ip_addr2 {$/;"	s
ip_addr2	net/lwip/include/ipv6/lwip/ip_addr.h	/^struct ip_addr2 {$/;"	s
ip_addr_any	net/lwip/core/ipv4/ip_addr.c	/^const struct ip_addr ip_addr_any = { IP_ADDR_ANY_VALUE };$/;"	v	typeref:struct:ip_addr
ip_addr_broadcast	net/lwip/core/ipv4/ip_addr.c	/^const struct ip_addr ip_addr_broadcast = { IP_ADDR_BROADCAST_VALUE };$/;"	v	typeref:struct:ip_addr
ip_addr_check	net/lwip/netif/ppp/auth.c	/^ip_addr_check(u32_t addr, struct wordlist *addrs)$/;"	f	file:
ip_addr_cmp	net/lwip/core/ipv6/ip6_addr.c	/^ip_addr_cmp(struct ip_addr *addr1, struct ip_addr *addr2)$/;"	f
ip_addr_cmp	net/lwip/include/ipv4/lwip/ip_addr.h	137;"	d
ip_addr_debug_print	net/lwip/include/ipv4/lwip/ip_addr.h	147;"	d
ip_addr_debug_print	net/lwip/include/ipv6/lwip/ip_addr.h	82;"	d
ip_addr_isany	net/lwip/core/ipv6/ip6_addr.c	/^ip_addr_isany(struct ip_addr *addr)$/;"	f
ip_addr_isany	net/lwip/include/ipv4/lwip/ip_addr.h	139;"	d
ip_addr_isbroadcast	net/lwip/core/ipv4/ip_addr.c	/^u8_t ip_addr_isbroadcast(struct ip_addr *addr, struct netif *netif)$/;"	f
ip_addr_islinklocal	net/lwip/include/ipv4/lwip/ip_addr.h	145;"	d
ip_addr_ismulticast	net/lwip/include/ipv4/lwip/ip_addr.h	143;"	d
ip_addr_netcmp	net/lwip/core/ipv6/ip6_addr.c	/^ip_addr_netcmp(struct ip_addr *addr1, struct ip_addr *addr2,$/;"	f
ip_addr_netcmp	net/lwip/include/ipv4/lwip/ip_addr.h	133;"	d
ip_addr_set	net/lwip/core/ipv6/ip6_addr.c	/^ip_addr_set(struct ip_addr *dest, struct ip_addr *src)$/;"	f
ip_addr_set	net/lwip/include/ipv4/lwip/ip_addr.h	122;"	d
ip_addrentry_get_object_def	net/lwip/core/snmp/mib2.c	/^ip_addrentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
ip_addrentry_get_value	net/lwip/core/snmp/mib2.c	/^ip_addrentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ip_debug_print	net/lwip/core/ipv4/ip.c	/^ip_debug_print(struct pbuf *p)$/;"	f
ip_debug_print	net/lwip/core/ipv6/ip6.c	/^ip_debug_print(struct pbuf *p)$/;"	f
ip_dst	net/lwip/netif/ppp/vjbsdhdr.h	/^  struct  in_addr ip_src,ip_dst; \/* source and dest address *\/$/;"	m	struct:ip	typeref:struct:ip::
ip_forward	net/lwip/core/ipv4/ip.c	/^ip_forward(struct pbuf *p, struct ip_hdr *iphdr, struct netif *inp)$/;"	f	file:
ip_forward	net/lwip/core/ipv6/ip6.c	/^ip_forward(struct pbuf *p, struct ip_hdr *iphdr)$/;"	f	file:
ip_frag	net/lwip/core/ipv4/ip_frag.c	/^ip_frag(struct pbuf *p, struct netif *netif, struct ip_addr *dest)$/;"	f
ip_frag	net/lwip/include/lwip/stats.h	/^  struct stats_proto ip_frag;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
ip_get_object_def	net/lwip/core/snmp/mib2.c	/^ip_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
ip_get_value	net/lwip/core/snmp/mib2.c	/^ip_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ip_hdr	net/lwip/include/ipv4/lwip/ip.h	/^struct ip_hdr {$/;"	s
ip_hdr	net/lwip/include/ipv6/lwip/ip.h	/^struct ip_hdr {$/;"	s
ip_hl_v	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char   ip_hl_v;  \/* bug in GCC for mips means the bitfield stuff will sometimes break - so we use a char for both and get round it with macro's instead... *\/$/;"	m	struct:ip
ip_id	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short ip_id;                 \/* identification *\/$/;"	m	struct:ip
ip_ids	net/lwip/core/snmp/mib2.c	/^const s32_t ip_ids[23] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 };$/;"	v
ip_init	net/lwip/core/ipv6/ip6.c	/^ip_init(void)$/;"	f
ip_init	net/lwip/include/ipv4/lwip/ip.h	46;"	d
ip_input	net/lwip/core/ipv4/ip.c	/^ip_input(struct pbuf *p, struct netif *inp)$/;"	f
ip_input	net/lwip/core/ipv6/ip6.c	/^ip_input(struct pbuf *p, struct netif *inp) {$/;"	f
ip_len	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short ip_len;                \/* total length *\/$/;"	m	struct:ip
ip_mreq	net/lwip/include/lwip/sockets.h	/^typedef struct ip_mreq {$/;"	s
ip_mreq	net/lwip/include/lwip/sockets.h	/^} ip_mreq;$/;"	t	typeref:struct:ip_mreq
ip_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const ip_nodes[23] = {$/;"	v
ip_ntomentry_get_object_def	net/lwip/core/snmp/mib2.c	/^ip_ntomentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
ip_ntomentry_get_value	net/lwip/core/snmp/mib2.c	/^ip_ntomentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ip_off	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short ip_off;                \/* fragment offset field *\/$/;"	m	struct:ip
ip_output	net/lwip/core/ipv4/ip.c	/^ip_output(struct pbuf *p, struct ip_addr *src, struct ip_addr *dest,$/;"	f
ip_output	net/lwip/core/ipv6/ip6.c	/^ip_output(struct pbuf *p, struct ip_addr *src, struct ip_addr *dest,$/;"	f
ip_output_if	net/lwip/core/ipv4/ip.c	/^ip_output_if(struct pbuf *p, struct ip_addr *src, struct ip_addr *dest,$/;"	f
ip_output_if	net/lwip/core/ipv6/ip6.c	/^ip_output_if (struct pbuf *p, struct ip_addr *src, struct ip_addr *dest,$/;"	f
ip_p	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char  ip_p;                  \/* protocol *\/$/;"	m	struct:ip
ip_pcb	net/lwip/include/ipv4/lwip/ip.h	/^struct ip_pcb {$/;"	s
ip_reass	net/lwip/core/ipv4/ip_frag.c	/^ip_reass(struct pbuf *p)$/;"	f
ip_reass_chain_frag_into_datagram_and_validate	net/lwip/core/ipv4/ip_frag.c	/^ip_reass_chain_frag_into_datagram_and_validate(struct ip_reassdata *ipr, struct pbuf *new_p)$/;"	f	file:
ip_reass_dequeue_datagram	net/lwip/core/ipv4/ip_frag.c	/^ip_reass_dequeue_datagram(struct ip_reassdata *ipr, struct ip_reassdata *prev)$/;"	f	file:
ip_reass_enqueue_new_datagram	net/lwip/core/ipv4/ip_frag.c	/^ip_reass_enqueue_new_datagram(struct ip_hdr *fraghdr, int clen)$/;"	f	file:
ip_reass_free_complete_datagram	net/lwip/core/ipv4/ip_frag.c	/^ip_reass_free_complete_datagram(struct ip_reassdata *ipr, struct ip_reassdata *prev)$/;"	f	file:
ip_reass_helper	net/lwip/core/ipv4/ip_frag.c	/^struct ip_reass_helper {$/;"	s	file:
ip_reass_pbufcount	net/lwip/core/ipv4/ip_frag.c	/^static u16_t ip_reass_pbufcount;$/;"	v	file:
ip_reass_remove_oldest_datagram	net/lwip/core/ipv4/ip_frag.c	/^ip_reass_remove_oldest_datagram(struct ip_hdr *fraghdr, int pbufs_needed)$/;"	f	file:
ip_reass_timer	net/lwip/api/tcpip.c	/^ip_reass_timer(void *arg)$/;"	f	file:
ip_reass_tmr	net/lwip/core/ipv4/ip_frag.c	/^ip_reass_tmr(void)$/;"	f
ip_reassdata	net/lwip/include/ipv4/lwip/ip_frag.h	/^struct ip_reassdata {$/;"	s
ip_route	net/lwip/core/ipv4/ip.c	/^ip_route(struct ip_addr *dest)$/;"	f
ip_route	net/lwip/core/ipv6/ip6.c	/^ip_route(struct ip_addr *dest)$/;"	f
ip_rteentry_get_object_def	net/lwip/core/snmp/mib2.c	/^ip_rteentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
ip_rteentry_get_value	net/lwip/core/snmp/mib2.c	/^ip_rteentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ip_scalar	net/lwip/core/snmp/mib2.c	/^const mib_scalar_node ip_scalar = {$/;"	v
ip_set_test	net/lwip/core/snmp/mib2.c	/^ip_set_test(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ip_src	net/lwip/netif/ppp/vjbsdhdr.h	/^  struct  in_addr ip_src,ip_dst; \/* source and dest address *\/$/;"	m	struct:ip	typeref:struct:ip::in_addr
ip_sum	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short ip_sum;                \/* checksum *\/$/;"	m	struct:ip
ip_tos	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char  ip_tos;                \/* type of service *\/$/;"	m	struct:ip
ip_ttl	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char  ip_ttl;                \/* time to live *\/$/;"	m	struct:ip
ipaddr	net/lwip/core/dns.c	/^  struct ip_addr ipaddr;$/;"	m	struct:dns_table_entry	typeref:struct:dns_table_entry::ip_addr	file:
ipaddr	net/lwip/include/lwip/api_msg.h	/^      struct ip_addr *ipaddr;$/;"	m	struct:api_msg_msg::__anon25::__anon27	typeref:struct:api_msg_msg::__anon25::__anon27::ip_addr
ipaddr	net/lwip/include/lwip/api_msg.h	/^      struct ip_addr *ipaddr;$/;"	m	struct:api_msg_msg::__anon25::__anon28	typeref:struct:api_msg_msg::__anon25::__anon28::ip_addr
ipaddr	net/lwip/include/lwip/netifapi.h	/^      struct ip_addr *ipaddr;$/;"	m	struct:netifapi_msg_msg::__anon22::__anon23	typeref:struct:netifapi_msg_msg::__anon22::__anon23::ip_addr
ipaddr	net/lwip/netif/etharp.c	/^  struct ip_addr ipaddr;$/;"	m	struct:etharp_entry	typeref:struct:etharp_entry::ip_addr	file:
ipaddr	obj/net/ns.asm	/^        ipaddr = &(netif->gw);$/;"	d
ipaddrentry	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node ipaddrentry = {$/;"	v	typeref:struct:mib_array_node
ipaddrentry_ids	net/lwip/core/snmp/mib2.c	/^const s32_t ipaddrentry_ids[5] = { 1, 2, 3, 4, 5 };$/;"	v
ipaddrentry_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const ipaddrentry_nodes[5] = {$/;"	v
ipaddrtable	net/lwip/core/snmp/mib2.c	/^struct mib_ram_array_node ipaddrtable = {$/;"	v	typeref:struct:mib_ram_array_node
ipaddrtable_id	net/lwip/core/snmp/mib2.c	/^s32_t ipaddrtable_id = 1;$/;"	v
ipaddrtable_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* ipaddrtable_node = (struct mib_node* const)&ipaddrentry;$/;"	v	typeref:struct:mib_node
ipaddrtree_root	net/lwip/core/snmp/mib2.c	/^struct mib_list_rootnode ipaddrtree_root = {$/;"	v	typeref:struct:mib_list_rootnode
ipc_find_env	lib/ipc.c	/^ipc_find_env(enum EnvType type)$/;"	f
ipc_recv	lib/ipc.c	/^ipc_recv(envid_t *from_env_store, void *pg, int *perm_store)$/;"	f
ipc_send	lib/ipc.c	/^ipc_send(envid_t to_env, uint32_t val, void *pg, int perm)$/;"	f
ipcb	obj/net/ns.asm	/^        ipcb = ipcb->next;$/;"	d
ipcb	obj/net/ns.asm	/^        ipcb = udp_pcbs;$/;"	d
ipcb	obj/net/ns.asm	/^    ipcb = udp_pcbs;$/;"	d
ipcbuf	net/input.c	/^union Nsipc *ipcbuf;$/;"	v	typeref:union:Nsipc
ipcp_ackci	net/lwip/netif/ppp/ipcp.c	/^ipcp_ackci(fsm *f, u_char *p, int len)$/;"	f	file:
ipcp_addci	net/lwip/netif/ppp/ipcp.c	/^ipcp_addci(fsm *f, u_char *ucp, int *lenp)$/;"	f	file:
ipcp_allowoptions	net/lwip/netif/ppp/ipcp.c	/^ipcp_options ipcp_allowoptions[NUM_PPP]; \/* Options we allow peer to request *\/$/;"	v
ipcp_callbacks	net/lwip/netif/ppp/ipcp.c	/^static fsm_callbacks ipcp_callbacks = { \/* IPCP callback routines *\/$/;"	v	file:
ipcp_cilen	net/lwip/netif/ppp/ipcp.c	/^ipcp_cilen(fsm *f)$/;"	f	file:
ipcp_clear_addrs	net/lwip/netif/ppp/ipcp.c	/^ipcp_clear_addrs(int unit)$/;"	f	file:
ipcp_close	net/lwip/netif/ppp/ipcp.c	/^ipcp_close(int unit, char *reason)$/;"	f	file:
ipcp_down	net/lwip/netif/ppp/ipcp.c	/^ipcp_down(fsm *f)$/;"	f	file:
ipcp_finished	net/lwip/netif/ppp/ipcp.c	/^ipcp_finished(fsm *f)$/;"	f	file:
ipcp_fsm	net/lwip/netif/ppp/ipcp.c	/^fsm ipcp_fsm[NUM_PPP]; \/* IPCP fsm structure *\/$/;"	v
ipcp_gotoptions	net/lwip/netif/ppp/ipcp.c	/^ipcp_options ipcp_gotoptions[NUM_PPP];   \/* Options that peer ack'd *\/$/;"	v
ipcp_hisoptions	net/lwip/netif/ppp/ipcp.c	/^ipcp_options ipcp_hisoptions[NUM_PPP];   \/* Options that we ack'd *\/$/;"	v
ipcp_init	net/lwip/netif/ppp/ipcp.c	/^ipcp_init(int unit)$/;"	f	file:
ipcp_input	net/lwip/netif/ppp/ipcp.c	/^ipcp_input(int unit, u_char *p, int len)$/;"	f	file:
ipcp_lowerdown	net/lwip/netif/ppp/ipcp.c	/^ipcp_lowerdown(int unit)$/;"	f	file:
ipcp_lowerup	net/lwip/netif/ppp/ipcp.c	/^ipcp_lowerup(int unit)$/;"	f	file:
ipcp_nakci	net/lwip/netif/ppp/ipcp.c	/^ipcp_nakci(fsm *f, u_char *p, int len)$/;"	f	file:
ipcp_open	net/lwip/netif/ppp/ipcp.c	/^ipcp_open(int unit)$/;"	f	file:
ipcp_options	net/lwip/netif/ppp/ipcp.h	/^typedef struct ipcp_options {$/;"	s
ipcp_options	net/lwip/netif/ppp/ipcp.h	/^} ipcp_options;$/;"	t	typeref:struct:ipcp_options
ipcp_protent	net/lwip/netif/ppp/ipcp.c	/^struct protent ipcp_protent = {$/;"	v	typeref:struct:protent
ipcp_protrej	net/lwip/netif/ppp/ipcp.c	/^ipcp_protrej(int unit)$/;"	f	file:
ipcp_rejci	net/lwip/netif/ppp/ipcp.c	/^ipcp_rejci(fsm *f, u_char *p, int len)$/;"	f	file:
ipcp_reqci	net/lwip/netif/ppp/ipcp.c	/^ipcp_reqci(fsm *f, u_char *inp\/* Requested CIs *\/,int *len\/* Length of requested CIs *\/,int reject_if_disagree)$/;"	f	file:
ipcp_resetci	net/lwip/netif/ppp/ipcp.c	/^ipcp_resetci(fsm *f)$/;"	f	file:
ipcp_up	net/lwip/netif/ppp/ipcp.c	/^ipcp_up(fsm *f)$/;"	f	file:
ipcp_wantoptions	net/lwip/netif/ppp/ipcp.c	/^ipcp_options ipcp_wantoptions[NUM_PPP];  \/* Options that we want to request *\/$/;"	v
ipforwdatagrams	net/lwip/core/snmp/mib2.c	/^             ipforwdatagrams = 0,$/;"	v	file:
ipfragcreates	net/lwip/core/snmp/mib2.c	/^             ipfragcreates = 0,$/;"	v	file:
ipfragfails	net/lwip/core/snmp/mib2.c	/^             ipfragfails = 0,$/;"	v	file:
ipfragoks	net/lwip/core/snmp/mib2.c	/^             ipfragoks = 0,$/;"	v	file:
iphdr	net/lwip/core/tcp_in.c	/^static struct ip_hdr *iphdr;$/;"	v	typeref:struct:ip_hdr	file:
iphdr	net/lwip/include/ipv4/lwip/ip_frag.h	/^  struct ip_hdr iphdr;$/;"	m	struct:ip_reassdata	typeref:struct:ip_reassdata::ip_hdr
iphdr	obj/net/ns.asm	/^      iphdr = r->payload;$/;"	d
iphdr	obj/net/ns.asm	/^    iphdr = p->payload;$/;"	d
iphdr	obj/net/ns.asm	/^  iphdr = original_iphdr;$/;"	d
iphdr	obj/net/ns.asm	/^  iphdr = p->payload;$/;"	d
iphdr	obj/net/ns.asm	/^  iphdr = rambuf->payload;$/;"	d
iphdr_hlen	obj/net/ns.asm	/^  iphdr_hlen = IPH_HL(iphdr);$/;"	d
iphdr_len	obj/net/ns.asm	/^  iphdr_len = ntohs(IPH_LEN(iphdr));$/;"	d
ipinaddrerrors	net/lwip/core/snmp/mib2.c	/^             ipinaddrerrors = 0,$/;"	v	file:
ipindelivers	net/lwip/core/snmp/mib2.c	/^             ipindelivers = 0,$/;"	v	file:
ipindiscards	net/lwip/core/snmp/mib2.c	/^             ipindiscards = 0,$/;"	v	file:
ipinhdrerrors	net/lwip/core/snmp/mib2.c	/^             ipinhdrerrors = 0,$/;"	v	file:
ipinreceives	net/lwip/core/snmp/mib2.c	/^static u32_t ipinreceives = 0,$/;"	v	file:
ipinunknownprotos	net/lwip/core/snmp/mib2.c	/^             ipinunknownprotos = 0,$/;"	v	file:
ipntomentry	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node ipntomentry = {$/;"	v	typeref:struct:mib_array_node
ipntomentry_ids	net/lwip/core/snmp/mib2.c	/^const s32_t ipntomentry_ids[4] = { 1, 2, 3, 4 };$/;"	v
ipntomentry_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const ipntomentry_nodes[4] = {$/;"	v
ipntomtable	net/lwip/core/snmp/mib2.c	/^struct mib_ram_array_node ipntomtable = {$/;"	v	typeref:struct:mib_ram_array_node
ipntomtable_id	net/lwip/core/snmp/mib2.c	/^s32_t ipntomtable_id = 1;$/;"	v
ipntomtable_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* ipntomtable_node = (struct mib_node* const)&ipntomentry;$/;"	v	typeref:struct:mib_node
ipntomtree_root	net/lwip/core/snmp/mib2.c	/^struct mib_list_rootnode ipntomtree_root = {$/;"	v	typeref:struct:mib_list_rootnode
ipoutdiscards	net/lwip/core/snmp/mib2.c	/^             ipoutdiscards = 0,$/;"	v	file:
ipoutnoroutes	net/lwip/core/snmp/mib2.c	/^             ipoutnoroutes = 0,$/;"	v	file:
ipoutrequests	net/lwip/core/snmp/mib2.c	/^             ipoutrequests = 0,$/;"	v	file:
ipr	obj/net/ns.asm	/^      ipr = memp_malloc(MEMP_REASSDATA);$/;"	d
ipr	obj/net/ns.asm	/^  ipr = memp_malloc(MEMP_REASSDATA);$/;"	d
ipreasmfails	net/lwip/core/snmp/mib2.c	/^             ipreasmfails = 0,$/;"	v	file:
ipreasmoks	net/lwip/core/snmp/mib2.c	/^             ipreasmoks = 0,$/;"	v	file:
ipreasmreqds	net/lwip/core/snmp/mib2.c	/^             ipreasmreqds = 0,$/;"	v	file:
iprh	obj/net/ns.asm	/^          iprh = (struct ip_reass_helper*)q->payload;$/;"	d
iprh	obj/net/ns.asm	/^      iprh = (struct ip_reass_helper*)r->payload;$/;"	d
iprh	obj/net/ns.asm	/^    iprh = (struct ip_reass_helper *)p->payload;$/;"	d
iprh	obj/net/ns.asm	/^  iprh = (struct ip_reass_helper *)ipr->p->payload;$/;"	d
iprh	obj/net/ns.asm	/^  iprh = (struct ip_reass_helper*)new_p->payload;$/;"	d
iprh_prev	obj/net/ns.asm	/^          iprh_prev = iprh;$/;"	d
iprh_prev	obj/net/ns.asm	/^        iprh_prev = iprh;$/;"	d
iprh_prev	obj/net/ns.asm	/^    iprh_prev = iprh_tmp;$/;"	d
iprh_tmp	obj/net/ns.asm	/^    iprh_tmp = (struct ip_reass_helper*)q->payload;$/;"	d
iprouteinfo	net/lwip/core/snmp/mib2.c	/^static const struct snmp_obj_id iprouteinfo = {2, {0, 0}};$/;"	v	typeref:struct:snmp_obj_id	file:
iproutingdiscards	net/lwip/core/snmp/mib2.c	/^             iproutingdiscards = 0;$/;"	v	file:
iprteentry	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node iprteentry = {$/;"	v	typeref:struct:mib_array_node
iprteentry_ids	net/lwip/core/snmp/mib2.c	/^const s32_t iprteentry_ids[13] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 };$/;"	v
iprteentry_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const iprteentry_nodes[13] = {$/;"	v
iprtetable	net/lwip/core/snmp/mib2.c	/^struct mib_ram_array_node iprtetable = {$/;"	v	typeref:struct:mib_ram_array_node
iprtetable_id	net/lwip/core/snmp/mib2.c	/^s32_t iprtetable_id = 1;$/;"	v
iprtetable_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* iprtetable_node = (struct mib_node* const)&iprteentry;$/;"	v	typeref:struct:mib_node
iprtetree_root	net/lwip/core/snmp/mib2.c	/^struct mib_list_rootnode iprtetree_root = {$/;"	v	typeref:struct:mib_list_rootnode
irq_eoi	kern/picirq.c	/^irq_eoi(void)$/;"	f
irq_line	kern/pci.h	/^    uint8_t irq_line;$/;"	m	struct:pci_func
irq_mask_8259A	kern/picirq.c	/^uint16_t irq_mask_8259A = 0xFFFF & ~(1<<IRQ_SLAVE);$/;"	v
irq_mask_8259A	obj/kern/kernel.asm	/^	irq_mask_8259A = mask;$/;"	d
irq_setmask_8259A	kern/picirq.c	/^irq_setmask_8259A(uint16_t mask)$/;"	f
iscons	kern/console.c	/^iscons(int fdnum)$/;"	f
iscons	lib/console.c	/^iscons(int fdnum)$/;"	f
isdigit	net/lwip/core/ipv4/inet.c	47;"	d	file:
isfree	lib/malloc.c	/^isfree(void *v, size_t n)$/;"	f	file:
islower	net/lwip/core/ipv4/inet.c	49;"	d	file:
ismp	kern/mpconfig.c	/^int ismp;$/;"	v
ismp	obj/kern/kernel.asm	/^			ismp = 0;$/;"	d
ismp	obj/kern/kernel.asm	/^	ismp = 1;$/;"	d
isprint	net/lwip/core/ipv4/inet.c	46;"	d	file:
iss	obj/net/ns.asm	/^    iss = tcp_next_iss();$/;"	d
iss	obj/net/ns.asm	/^  iss = tcp_next_iss();$/;"	d
isspace	net/lwip/core/ipv4/inet.c	50;"	d	file:
isxdigit	net/lwip/core/ipv4/inet.c	48;"	d	file:
jb_ebp	net/lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_ebp;$/;"	m	struct:jos_jmp_buf
jb_ebx	net/lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_ebx;$/;"	m	struct:jos_jmp_buf
jb_edi	net/lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_edi;$/;"	m	struct:jos_jmp_buf
jb_eip	net/lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_eip;$/;"	m	struct:jos_jmp_buf
jb_esi	net/lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_esi;$/;"	m	struct:jos_jmp_buf
jb_esp	net/lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_esp;$/;"	m	struct:jos_jmp_buf
jif	net/lwip/jos/jif/jif.c	/^struct jif {$/;"	s	file:
jif	obj/net/ns.asm	/^    jif = mem_malloc(sizeof(struct jif));$/;"	d
jif	obj/net/ns.asm	/^    jif = netif->state;$/;"	d
jif_init	net/lwip/jos/jif/jif.c	/^jif_init(struct netif *netif)$/;"	f
jif_input	net/lwip/jos/jif/jif.c	/^jif_input(struct netif *netif, void *va)$/;"	f
jif_output	net/lwip/jos/jif/jif.c	/^jif_output(struct netif *netif, struct pbuf *p,$/;"	f	file:
jif_pkt	inc/ns.h	/^struct jif_pkt {$/;"	s
jl	net/lwip/include/lwip/api_msg.h	/^    } jl;$/;"	m	union:api_msg_msg::__anon25	typeref:struct:api_msg_msg::__anon25::__anon31
join_or_leave	net/lwip/include/lwip/api_msg.h	/^      enum netconn_igmp join_or_leave;$/;"	m	struct:api_msg_msg::__anon25::__anon31	typeref:enum:api_msg_msg::__anon25::__anon31::netconn_igmp
join_sent	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER join_sent;        \/* *\/$/;"	m	struct:stats_igmp
jos_jmp_buf	net/lwip/jos/arch/i386/setjmp.h	/^struct jos_jmp_buf {$/;"	s
jp_data	inc/ns.h	/^	char jp_data[0];$/;"	m	struct:jif_pkt
jp_len	inc/ns.h	/^	int jp_len;$/;"	m	struct:jif_pkt
k	obj/net/ns.asm	/^  k = ETHARP_HWADDR_LEN;$/;"	d
kbd_init	kern/console.c	/^kbd_init(void)$/;"	f	file:
kbd_intr	kern/console.c	/^kbd_intr(void)$/;"	f
kbd_proc_data	kern/console.c	/^kbd_proc_data(void)$/;"	f	file:
keep_cnt	net/lwip/include/lwip/tcp.h	/^  u32_t keep_cnt;$/;"	m	struct:tcp_pcb
keep_cnt_sent	net/lwip/include/lwip/tcp.h	/^  u8_t keep_cnt_sent;$/;"	m	struct:tcp_pcb
keep_idle	net/lwip/include/lwip/tcp.h	/^  u32_t keep_idle;$/;"	m	struct:tcp_pcb
keep_intvl	net/lwip/include/lwip/tcp.h	/^  u32_t keep_intvl;$/;"	m	struct:tcp_pcb
kern_pgdir	kern/pmap.c	/^pde_t *kern_pgdir;		\/\/ Kernel's initial page directory$/;"	v
kern_pgdir	obj/kern/kernel.asm	/^	kern_pgdir = (pde_t *) boot_alloc(PGSIZE);$/;"	d
kernel_lock	kern/spinlock.c	/^struct spinlock kernel_lock = {$/;"	v	typeref:struct:spinlock
key1	kern/pci.c	/^	uint32_t key1, key2;$/;"	m	struct:pci_driver	file:
key2	kern/pci.c	/^	uint32_t key1, key2;$/;"	m	struct:pci_driver	file:
kid	obj/user/testpiperace.asm	/^	kid = &envs[ENVX(pid)];$/;"	d
kid	obj/user/testpiperace2.asm	/^	kid = &envs[ENVX(r)];$/;"	d
kill	gradelib.py	/^    def kill(self):$/;"	f
kill_link	net/lwip/netif/ppp/ppp.c	/^  int  kill_link;               \/* Shut the link down. *\/$/;"	m	struct:PPPControl_s	file:
kill_queue	net/lwip/jos/arch/thread.c	/^static struct thread_queue kill_queue;$/;"	v	typeref:struct:thread_queue	file:
l	obj/kern/kernel.asm	/^			l = m;$/;"	d
l	obj/kern/kernel.asm	/^			l = true_m + 1;$/;"	d
l_linger	net/lwip/include/lwip/sockets.h	/^       int l_linger;               \/* linger time *\/$/;"	m	struct:linger
l_onoff	net/lwip/include/lwip/sockets.h	/^       int l_onoff;                \/* option on\/off *\/$/;"	m	struct:linger
lapic	kern/lapic.c	/^volatile uint32_t *lapic;$/;"	v
lapic	obj/kern/kernel.asm	/^	lapic = mmio_map_region(lapicaddr, 4096);$/;"	d
lapic_eoi	kern/lapic.c	/^lapic_eoi(void)$/;"	f
lapic_init	kern/lapic.c	/^lapic_init(void)$/;"	f
lapic_ipi	kern/lapic.c	/^lapic_ipi(int vector)$/;"	f
lapic_startap	kern/lapic.c	/^lapic_startap(uint8_t apicid, uint32_t addr)$/;"	f
lapicaddr	kern/lapic.c	/^physaddr_t lapicaddr;        \/\/ Initialized in mpconfig.c$/;"	v
lapicaddr	kern/mpconfig.c	/^	physaddr_t lapicaddr;           \/\/ address of local APIC$/;"	m	struct:mpconf	file:
lapicaddr	obj/kern/kernel.asm	/^		lapicaddr = 0;$/;"	d
lapicaddr	obj/kern/kernel.asm	/^	lapicaddr = conf->lapicaddr;$/;"	d
lapicw	kern/lapic.c	/^lapicw(int index, int value)$/;"	f	file:
last	obj/net/ns.asm	/^    last = (left <= mtu - IP_HLEN);$/;"	d
lastXMit	net/lwip/netif/ppp/ppp.c	/^  u_long lastXMit;              \/* Time of last transmission. *\/$/;"	m	struct:PPPControl_s	file:
last_cs	net/lwip/netif/ppp/vj.h	/^  struct cstate *last_cs;          \/* most recently used tstate *\/$/;"	m	struct:vjcompress	typeref:struct:vjcompress::cstate
last_recv	net/lwip/netif/ppp/vj.h	/^  u_char last_recv;                \/* last rcvd conn. id *\/$/;"	m	struct:vjcompress
last_reporter_flag	net/lwip/include/ipv4/lwip/igmp.h	/^  u8_t               last_reporter_flag; \/* signifies we were the last person to report *\/$/;"	m	struct:igmp_group
last_tf	kern/trap.c	/^static struct Trapframe *last_tf;$/;"	v	typeref:struct:Trapframe	file:
last_tf	obj/kern/kernel.asm	/^	last_tf = tf;$/;"	d
last_xmit	net/lwip/netif/ppp/vj.h	/^  u_char last_xmit;                \/* last sent conn. id *\/$/;"	m	struct:vjcompress
lastack	net/lwip/include/lwip/tcp.h	/^  u32_t lastack; \/* Highest acknowledged seqno. *\/$/;"	m	struct:tcp_pcb
lastconflict	net/lwip/include/ipv4/lwip/autoip.h	/^  u8_t lastconflict;        \/* ticks until a conflict can be solved by defending *\/$/;"	m	struct:autoip
lastdata	net/lwip/api/sockets.c	/^  struct netbuf *lastdata;$/;"	m	struct:lwip_socket	typeref:struct:lwip_socket::netbuf	file:
lastoffset	net/lwip/api/sockets.c	/^  u16_t lastoffset;$/;"	m	struct:lwip_socket	file:
lb	net/lwip/include/lwip/api_msg.h	/^    } lb;$/;"	m	union:api_msg_msg::__anon25	typeref:struct:api_msg_msg::__anon25::__anon32
lba_length	inc/partition.h	/^	uint32_t lba_length;$/;"	m	struct:Partitiondesc
lba_start	inc/partition.h	/^	uint32_t lba_start;$/;"	m	struct:Partitiondesc
lcp_ackci	net/lwip/netif/ppp/lcp.c	/^lcp_ackci(fsm *f, u_char *p, int len)$/;"	f	file:
lcp_addci	net/lwip/netif/ppp/lcp.c	/^lcp_addci(fsm *f, u_char *ucp, int *lenp)$/;"	f	file:
lcp_allowoptions	net/lwip/netif/ppp/lcp.c	/^lcp_options lcp_allowoptions[NUM_PPP]; \/* Options we allow peer to request *\/$/;"	v
lcp_callbacks	net/lwip/netif/ppp/lcp.c	/^static fsm_callbacks lcp_callbacks = { \/* LCP callback routines *\/$/;"	v	file:
lcp_cilen	net/lwip/netif/ppp/lcp.c	/^static int lcp_cilen(fsm *f)$/;"	f	file:
lcp_close	net/lwip/netif/ppp/lcp.c	/^lcp_close(int unit, char *reason)$/;"	f
lcp_down	net/lwip/netif/ppp/lcp.c	/^lcp_down(fsm *f)$/;"	f	file:
lcp_echo_fails	net/lwip/netif/ppp/lcp.c	/^static u_int lcp_echo_fails         = LCP_MAXECHOFAILS; \/* Tolerance to unanswered echo-requests *\/$/;"	v	file:
lcp_echo_interval	net/lwip/netif/ppp/lcp.c	/^static u_int lcp_echo_interval      = LCP_ECHOINTERVAL; \/* Interval between LCP echo-requests *\/$/;"	v	file:
lcp_echo_lowerdown	net/lwip/netif/ppp/lcp.c	/^lcp_echo_lowerdown (int unit)$/;"	f	file:
lcp_echo_lowerup	net/lwip/netif/ppp/lcp.c	/^lcp_echo_lowerup (int unit)$/;"	f	file:
lcp_echo_number	net/lwip/netif/ppp/lcp.c	/^static u32_t lcp_echo_number        = 0;                \/* ID number of next echo frame *\/$/;"	v	file:
lcp_echo_timer_running	net/lwip/netif/ppp/lcp.c	/^static u32_t lcp_echo_timer_running = 0;                \/* TRUE if a timer is running *\/$/;"	v	file:
lcp_echos_pending	net/lwip/netif/ppp/lcp.c	/^static u32_t lcp_echos_pending      = 0;                \/* Number of outstanding echo msgs *\/$/;"	v	file:
lcp_extcode	net/lwip/netif/ppp/lcp.c	/^lcp_extcode(fsm *f, int code, u_char id, u_char *inp, int len)$/;"	f	file:
lcp_finished	net/lwip/netif/ppp/lcp.c	/^lcp_finished(fsm *f)$/;"	f	file:
lcp_fsm	net/lwip/netif/ppp/lcp.c	/^static fsm lcp_fsm[NUM_PPP];                            \/* LCP fsm structure (global)*\/$/;"	v	file:
lcp_gotoptions	net/lwip/netif/ppp/lcp.c	/^lcp_options lcp_gotoptions[NUM_PPP];   \/* Options that peer ack'd *\/$/;"	v
lcp_hisoptions	net/lwip/netif/ppp/lcp.c	/^lcp_options lcp_hisoptions[NUM_PPP];   \/* Options that we ack'd *\/$/;"	v
lcp_init	net/lwip/netif/ppp/lcp.c	/^lcp_init(int unit)$/;"	f
lcp_input	net/lwip/netif/ppp/lcp.c	/^lcp_input(int unit, u_char *p, int len)$/;"	f	file:
lcp_loopbackfail	net/lwip/netif/ppp/lcp.c	/^int lcp_loopbackfail = DEFLOOPBACKFAIL;$/;"	v
lcp_lowerdown	net/lwip/netif/ppp/lcp.c	/^lcp_lowerdown(int unit)$/;"	f
lcp_lowerup	net/lwip/netif/ppp/lcp.c	/^lcp_lowerup(int unit)$/;"	f
lcp_nakci	net/lwip/netif/ppp/lcp.c	/^lcp_nakci(fsm *f, u_char *p, int len)$/;"	f	file:
lcp_open	net/lwip/netif/ppp/lcp.c	/^lcp_open(int unit)$/;"	f
lcp_options	net/lwip/netif/ppp/lcp.h	/^typedef struct lcp_options {$/;"	s
lcp_options	net/lwip/netif/ppp/lcp.h	/^} lcp_options;$/;"	t	typeref:struct:lcp_options
lcp_phase	net/lwip/netif/ppp/lcp.c	/^LinkPhase lcp_phase[NUM_PPP];          \/* Phase of link session (RFC 1661) *\/$/;"	v
lcp_protent	net/lwip/netif/ppp/lcp.c	/^struct protent lcp_protent = {$/;"	v	typeref:struct:protent
lcp_protrej	net/lwip/netif/ppp/lcp.c	/^lcp_protrej(int unit)$/;"	f	file:
lcp_received_echo_reply	net/lwip/netif/ppp/lcp.c	/^lcp_received_echo_reply (fsm *f, int id, u_char *inp, int len)$/;"	f	file:
lcp_rejci	net/lwip/netif/ppp/lcp.c	/^lcp_rejci(fsm *f, u_char *p, int len)$/;"	f	file:
lcp_reqci	net/lwip/netif/ppp/lcp.c	/^lcp_reqci(fsm *f, $/;"	f	file:
lcp_resetci	net/lwip/netif/ppp/lcp.c	/^lcp_resetci(fsm *f)$/;"	f	file:
lcp_rprotrej	net/lwip/netif/ppp/lcp.c	/^lcp_rprotrej(fsm *f, u_char *inp, int len)$/;"	f	file:
lcp_sprotrej	net/lwip/netif/ppp/lcp.c	/^lcp_sprotrej(int unit, u_char *p, int len)$/;"	f
lcp_starting	net/lwip/netif/ppp/lcp.c	/^lcp_starting(fsm *f)$/;"	f	file:
lcp_up	net/lwip/netif/ppp/lcp.c	/^lcp_up(fsm *f)$/;"	f	file:
lcp_wantoptions	net/lwip/netif/ppp/lcp.c	/^lcp_options lcp_wantoptions[NUM_PPP];  \/* Options that we want to request *\/$/;"	v
lcr0	inc/x86.h	/^lcr0(uint32_t val)$/;"	f
lcr3	inc/x86.h	/^lcr3(uint32_t val)$/;"	f
lcr4	inc/x86.h	/^lcr4(uint32_t val)$/;"	f
leave_sent	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER leave_sent;       \/* *\/$/;"	m	struct:stats_igmp
left	obj/net/ns.asm	/^  left = len;$/;"	d
left	obj/net/ns.asm	/^  left = p->tot_len - IP_HLEN;$/;"	d
len	net/lwip/core/dns.c	/^  u16_t len;$/;"	m	struct:dns_answer	file:
len	net/lwip/include/ipv6/lwip/ip.h	/^  u16_t len;                \/* payload length *\/$/;"	m	struct:ip_hdr
len	net/lwip/include/lwip/api_msg.h	/^      int len;$/;"	m	struct:api_msg_msg::__anon25::__anon29
len	net/lwip/include/lwip/api_msg.h	/^      u16_t len;$/;"	m	struct:api_msg_msg::__anon25::__anon30
len	net/lwip/include/lwip/pbuf.h	/^  u16_t len;  $/;"	m	struct:pbuf
len	net/lwip/include/lwip/snmp.h	/^  u8_t len;$/;"	m	struct:snmp_obj_id
len	net/lwip/include/lwip/tcp.h	/^  u16_t len;               \/* the TCP length of this segment *\/$/;"	m	struct:tcp_seg
len	obj/net/ns.asm	/^      len = 0;$/;"	d
len	obj/net/ns.asm	/^      len = p->tot_len;$/;"	d
len	obj/net/ns.asm	/^      len = p_from->len - offset_from;$/;"	d
len	obj/net/ns.asm	/^      len = p_to->len - offset_to;$/;"	d
len	obj/net/ns.asm	/^    len = 0;$/;"	d
len	obj/net/ns.asm	/^    len = 0xffff;$/;"	d
len	obj/net/ns.asm	/^    len = conn->write_msg->msg.w.len - conn->write_offset;$/;"	d
len	obj/net/ns.asm	/^    len = p->tot_len;$/;"	d
len	obj/net/ns.asm	/^  len = (u16_t)((u8_t *)seg->tcphdr - (u8_t *)seg->p->payload);$/;"	d
len	obj/net/ns.asm	/^  len = 0;$/;"	d
len	obj/net/ns.asm	/^  len = ntohs(IPH_LEN(fraghdr)) - IPH_HL(fraghdr) * 4;$/;"	d
lenerr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER lenerr;           \/* Invalid length error. *\/$/;"	m	struct:stats_igmp
lenerr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER lenerr;           \/* Invalid length error. *\/$/;"	m	struct:stats_proto
lenerr	obj/net/ns.asm	/^lenerr:$/;"	l
length	kern/e1000.h	/^            uint16_t length;    \/* Data buffer length *\/$/;"	m	struct:e1000_tx_desc::__anon37::__anon38
length	kern/e1000.h	/^    uint16_t length;     \/* Length of data DMAed into data buffer *\/$/;"	m	struct:e1000_rx_desc
length	kern/mpconfig.c	/^	uint16_t length;                \/\/ total table length$/;"	m	struct:mpconf	file:
length	kern/mpconfig.c	/^	uint8_t length;                 \/\/ 1$/;"	m	struct:mp	file:
level	net/lwip/api/sockets.c	/^  int level;$/;"	m	struct:lwip_setgetsockopt_data	file:
level	obj/net/ns.asm	/^  level = data->level;$/;"	d
level_length	net/lwip/include/lwip/snmp_structs.h	/^  u16_t (*level_length)(void* addr_inf, u8_t level);$/;"	m	struct:mib_external_node
lexceptset	obj/net/ns.asm	/^      lexceptset = *exceptset;$/;"	d
lexceptset	obj/net/ns.asm	/^    lexceptset = *exceptset;$/;"	d
lfile	obj/kern/kernel.asm	/^	lfile = 0;$/;"	d
lflag	obj/fs/fs.asm	/^		lflag = 0;$/;"	d
lflag	obj/kern/kernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/net/ns.asm	/^		lflag = 0;$/;"	d
lflag	obj/net/testinput.asm	/^		lflag = 0;$/;"	d
lflag	obj/net/testoutput.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/badsegment.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/breakpoint.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/buggyhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/buggyhello2.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/cat.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/divzero.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/dumbfork.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/echo.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/echosrv.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/echotest.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/evilhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/fairness.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultalloc.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultallocbad.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultbadhandler.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultdie.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultevilhandler.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultnostack.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultread.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultreadkernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultregs.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultwrite.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultwritekernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/forktree.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/hello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/httpd.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/icode.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/idle.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/init.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/ls.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/lsfd.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/num.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/pingpong.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/pingpongs.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/primes.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/primespipe.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/sendpage.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/sh.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/softint.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/spawnhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/spin.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/stresssched.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testbss.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testfdsharing.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testfile.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testkbd.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testpipe.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testpiperace.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testpiperace2.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testpteshare.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testshell.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testtime.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/yield.asm	/^		lflag = 0;$/;"	d
lfree	net/lwip/core/mem.c	/^static struct mem *lfree;$/;"	v	typeref:struct:mem	file:
lfree	obj/net/ns.asm	/^            lfree = (struct mem *)&ram[lfree->next];$/;"	d
lfree	obj/net/ns.asm	/^      lfree = (struct mem *)&ram[ptr2];$/;"	d
lfree	obj/net/ns.asm	/^      lfree = mem2;$/;"	d
lfree	obj/net/ns.asm	/^      lfree = mem;$/;"	d
lfree	obj/net/ns.asm	/^      lfree = pmem;$/;"	d
lfree	obj/net/ns.asm	/^    lfree = mem;$/;"	d
lfree	obj/net/ns.asm	/^  lfree = (struct mem *)ram;$/;"	d
lfun	obj/kern/kernel.asm	/^	lfun = lfile;$/;"	d
lgdt	inc/x86.h	/^lgdt(void *p)$/;"	f
libmain	lib/libmain.c	/^libmain(int argc, char **argv)$/;"	f
lidt	inc/x86.h	/^lidt(void *p)$/;"	f
line	net/lwip/core/memp.c	/^  int line;$/;"	m	struct:memp	file:
line	user/num.c	/^int line = 0;$/;"	v
linger	net/lwip/include/lwip/sockets.h	/^struct linger {$/;"	s
link	net/lwip/include/lwip/stats.h	/^  struct stats_proto link;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
linkStatusCB	net/lwip/netif/ppp/ppp.c	/^  void (*linkStatusCB)(void *ctx, int errCode, void *arg);$/;"	m	struct:PPPControl_s	file:
linkStatusCtx	net/lwip/netif/ppp/ppp.c	/^  void *linkStatusCtx;$/;"	m	struct:PPPControl_s	file:
link_callback	net/lwip/include/lwip/netif.h	/^  void (* link_callback)(struct netif *netif);$/;"	m	struct:netif
link_down	net/lwip/netif/ppp/auth.c	/^link_down(int unit)$/;"	f
link_established	net/lwip/netif/ppp/auth.c	/^link_established(int unit)$/;"	f
link_required	net/lwip/netif/ppp/auth.c	/^link_required(int unit)$/;"	f
link_speed	net/lwip/include/lwip/netif.h	/^  u32_t link_speed;$/;"	m	struct:netif
link_terminated	net/lwip/netif/ppp/auth.c	/^link_terminated(int unit)$/;"	f
link_type	net/lwip/include/lwip/netif.h	/^  u8_t link_type;$/;"	m	struct:netif
linkoutput	net/lwip/include/lwip/netif.h	/^  err_t (* linkoutput)(struct netif *netif, struct pbuf *p);$/;"	m	struct:netif
listen	inc/ns.h	/^	} listen;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_listen
listen	lib/sockets.c	/^listen(int s, int backlog)$/;"	f
listen	net/lwip/include/lwip/sockets.h	335;"	d
listen_pcbs	net/lwip/include/lwip/tcp.h	/^  struct tcp_pcb_listen *listen_pcbs; $/;"	m	union:tcp_listen_pcbs_t	typeref:struct:tcp_listen_pcbs_t::tcp_pcb_listen
lldt	inc/x86.h	/^lldt(uint16_t sel)$/;"	f
lline	obj/kern/kernel.asm	/^		lline = lfile;$/;"	d
lline	obj/kern/kernel.asm	/^		lline = lfun;$/;"	d
llipaddr	net/lwip/include/ipv4/lwip/autoip.h	/^  struct ip_addr llipaddr;  \/* the currently selected, probed, announced or used LL IP-Address *\/$/;"	m	struct:autoip	typeref:struct:autoip::ip_addr
load_icode	kern/env.c	/^load_icode(struct Env *e, uint8_t *binary)$/;"	f	file:
local	net/lwip/include/lwip/api_msg.h	/^      u8_t local;$/;"	m	struct:api_msg_msg::__anon25::__anon28
local_match	obj/net/ns.asm	/^        local_match = 1;$/;"	d
local_match	obj/net/ns.asm	/^    local_match = 0;$/;"	d
local_mem_free_count	obj/net/ns.asm	/^        local_mem_free_count = mem_free_count;$/;"	d
local_port	net/lwip/include/lwip/udp.h	/^  u16_t local_port, remote_port;$/;"	m	struct:udp_pcb
local_port	obj/net/ns.asm	/^    local_port = pcb->local_port;$/;"	d
lock_kernel	kern/spinlock.h	/^lock_kernel(void)$/;"	f
lock_tcpip_core	net/lwip/api/tcpip.c	/^sys_sem_t lock_tcpip_core;$/;"	v
lock_tcpip_core	obj/net/ns.asm	/^  lock_tcpip_core = sys_sem_new(1);$/;"	d
locked	kern/spinlock.h	/^	unsigned locked;       \/\/ Is the lock held?$/;"	m	struct:spinlock
logged_in	net/lwip/netif/ppp/auth.c	/^static int logged_in;$/;"	v	file:
logout	net/lwip/netif/ppp/auth.c	/^logout(void)$/;"	f	file:
long	obj/fs/fs.asm	/^long$/;"	l
long	obj/kern/kernel.asm	/^long$/;"	l
long	obj/net/ns.asm	/^long$/;"	l
long	obj/net/testinput.asm	/^long$/;"	l
long	obj/net/testoutput.asm	/^long$/;"	l
long	obj/user/badsegment.asm	/^long$/;"	l
long	obj/user/breakpoint.asm	/^long$/;"	l
long	obj/user/buggyhello.asm	/^long$/;"	l
long	obj/user/buggyhello2.asm	/^long$/;"	l
long	obj/user/cat.asm	/^long$/;"	l
long	obj/user/divzero.asm	/^long$/;"	l
long	obj/user/dumbfork.asm	/^long$/;"	l
long	obj/user/echo.asm	/^long$/;"	l
long	obj/user/echosrv.asm	/^long$/;"	l
long	obj/user/echotest.asm	/^long$/;"	l
long	obj/user/evilhello.asm	/^long$/;"	l
long	obj/user/fairness.asm	/^long$/;"	l
long	obj/user/faultalloc.asm	/^long$/;"	l
long	obj/user/faultallocbad.asm	/^long$/;"	l
long	obj/user/faultbadhandler.asm	/^long$/;"	l
long	obj/user/faultdie.asm	/^long$/;"	l
long	obj/user/faultevilhandler.asm	/^long$/;"	l
long	obj/user/faultnostack.asm	/^long$/;"	l
long	obj/user/faultread.asm	/^long$/;"	l
long	obj/user/faultreadkernel.asm	/^long$/;"	l
long	obj/user/faultregs.asm	/^long$/;"	l
long	obj/user/faultwrite.asm	/^long$/;"	l
long	obj/user/faultwritekernel.asm	/^long$/;"	l
long	obj/user/forktree.asm	/^long$/;"	l
long	obj/user/hello.asm	/^long$/;"	l
long	obj/user/httpd.asm	/^long$/;"	l
long	obj/user/icode.asm	/^long$/;"	l
long	obj/user/idle.asm	/^long$/;"	l
long	obj/user/init.asm	/^long$/;"	l
long	obj/user/ls.asm	/^long$/;"	l
long	obj/user/lsfd.asm	/^long$/;"	l
long	obj/user/num.asm	/^long$/;"	l
long	obj/user/pingpong.asm	/^long$/;"	l
long	obj/user/pingpongs.asm	/^long$/;"	l
long	obj/user/primes.asm	/^long$/;"	l
long	obj/user/primespipe.asm	/^long$/;"	l
long	obj/user/sendpage.asm	/^long$/;"	l
long	obj/user/sh.asm	/^long$/;"	l
long	obj/user/softint.asm	/^long$/;"	l
long	obj/user/spawnhello.asm	/^long$/;"	l
long	obj/user/spin.asm	/^long$/;"	l
long	obj/user/stresssched.asm	/^long$/;"	l
long	obj/user/testbss.asm	/^long$/;"	l
long	obj/user/testfdsharing.asm	/^long$/;"	l
long	obj/user/testfile.asm	/^long$/;"	l
long	obj/user/testkbd.asm	/^long$/;"	l
long	obj/user/testpipe.asm	/^long$/;"	l
long	obj/user/testpiperace.asm	/^long$/;"	l
long	obj/user/testpiperace2.asm	/^long$/;"	l
long	obj/user/testpteshare.asm	/^long$/;"	l
long	obj/user/testshell.asm	/^long$/;"	l
long	obj/user/testtime.asm	/^long$/;"	l
long	obj/user/yield.asm	/^long$/;"	l
loop_cnt_current	net/lwip/include/lwip/netif.h	/^  u16_t loop_cnt_current;$/;"	m	struct:netif
loop_first	net/lwip/include/lwip/netif.h	/^  struct pbuf *loop_first;$/;"	m	struct:netif	typeref:struct:netif::pbuf
loop_last	net/lwip/include/lwip/netif.h	/^  struct pbuf *loop_last;$/;"	m	struct:netif	typeref:struct:netif::pbuf
loopif_init	net/lwip/netif/loopif.c	/^loopif_init(struct netif *netif)$/;"	f
loopif_poll	net/lwip/include/netif/loopif.h	44;"	d
low_level_init	net/lwip/jos/jif/jif.c	/^low_level_init(struct netif *netif)$/;"	f	file:
low_level_input	net/lwip/jos/jif/jif.c	/^low_level_input(void *va)$/;"	f	file:
low_level_output	net/lwip/jos/jif/jif.c	/^low_level_output(struct netif *netif, struct pbuf *p)$/;"	f	file:
lower	kern/e1000.h	/^    } lower;$/;"	m	struct:e1000_tx_desc	typeref:union:e1000_tx_desc::__anon37
lowerdown	net/lwip/netif/ppp/ppp.h	/^    void (*lowerdown) (int unit);$/;"	m	struct:protent
lowerup	net/lwip/netif/ppp/ppp.h	/^    void (*lowerup) (int unit);$/;"	m	struct:protent
lpcb	obj/net/ns.asm	/^  lpcb = memp_malloc(MEMP_TCP_PCB_LISTEN);$/;"	d
lpt_putc	kern/console.c	/^lpt_putc(int c)$/;"	f	file:
lqr_period	net/lwip/netif/ppp/lcp.h	/^    u32_t lqr_period;            \/* Reporting period for LQR 1\/100ths second *\/$/;"	m	struct:lcp_options
lreadset	obj/net/ns.asm	/^      lreadset = *readset;$/;"	d
lreadset	obj/net/ns.asm	/^    lreadset = *readset;$/;"	d
ls	user/ls.c	/^ls(const char *path, const char *prefix)$/;"	f
ls1	user/ls.c	/^ls1(const char *prefix, bool isdir, off_t size, const char *name)$/;"	f
lsdir	user/ls.c	/^lsdir(const char *path, const char *prefix)$/;"	f
ltr	inc/x86.h	/^ltr(uint16_t sel)$/;"	f
lwip_accept	net/lwip/api/sockets.c	/^lwip_accept(int s, struct sockaddr *addr, socklen_t *addrlen)$/;"	f
lwip_bind	net/lwip/api/sockets.c	/^lwip_bind(int s, struct sockaddr *name, socklen_t namelen)$/;"	f
lwip_close	net/lwip/api/sockets.c	/^lwip_close(int s)$/;"	f
lwip_connect	net/lwip/api/sockets.c	/^lwip_connect(int s, const struct sockaddr *name, socklen_t namelen)$/;"	f
lwip_core_lock	net/lwip/jos/arch/sys_arch.c	/^lwip_core_lock(void)$/;"	f
lwip_core_unlock	net/lwip/jos/arch/sys_arch.c	/^lwip_core_unlock(void)$/;"	f
lwip_event	net/lwip/include/lwip/tcp.h	/^enum lwip_event {$/;"	g
lwip_freeaddrinfo	net/lwip/api/netdb.c	/^lwip_freeaddrinfo(struct addrinfo *ai)$/;"	f
lwip_getaddrinfo	net/lwip/api/netdb.c	/^lwip_getaddrinfo(const char *nodename, const char *servname,$/;"	f
lwip_getaddrname	net/lwip/api/sockets.c	/^lwip_getaddrname(int s, struct sockaddr *name, socklen_t *namelen, u8_t local)$/;"	f	file:
lwip_gethostbyname	net/lwip/api/netdb.c	/^lwip_gethostbyname(const char *name)$/;"	f
lwip_gethostbyname_r	net/lwip/api/netdb.c	/^lwip_gethostbyname_r(const char *name, struct hostent *ret, char *buf,$/;"	f
lwip_getpeername	net/lwip/api/sockets.c	/^lwip_getpeername(int s, struct sockaddr *name, socklen_t *namelen)$/;"	f
lwip_getsockname	net/lwip/api/sockets.c	/^lwip_getsockname(int s, struct sockaddr *name, socklen_t *namelen)$/;"	f
lwip_getsockopt	net/lwip/api/sockets.c	/^lwip_getsockopt(int s, int level, int optname, void *optval, socklen_t *optlen)$/;"	f
lwip_getsockopt_internal	net/lwip/api/sockets.c	/^lwip_getsockopt_internal(void *arg)$/;"	f	file:
lwip_init	net/lwip/core/init.c	/^lwip_init(void)$/;"	f
lwip_init	net/serv.c	/^lwip_init(struct netif *nif, void *if_state,$/;"	f	file:
lwip_ioctl	net/lwip/api/sockets.c	/^lwip_ioctl(int s, long cmd, void *argp)$/;"	f
lwip_listen	net/lwip/api/sockets.c	/^lwip_listen(int s, int backlog)$/;"	f
lwip_read	net/lwip/api/sockets.c	/^lwip_read(int s, void *mem, int len)$/;"	f
lwip_recv	net/lwip/api/sockets.c	/^lwip_recv(int s, void *mem, int len, unsigned int flags)$/;"	f
lwip_recvfrom	net/lwip/api/sockets.c	/^lwip_recvfrom(int s, void *mem, int len, unsigned int flags,$/;"	f
lwip_sanity_check	net/lwip/core/init.c	/^lwip_sanity_check(void)$/;"	f	file:
lwip_sanity_check	net/lwip/core/init.c	209;"	d	file:
lwip_select	net/lwip/api/sockets.c	/^lwip_select(int maxfdp1, fd_set *readset, fd_set *writeset, fd_set *exceptset,$/;"	f
lwip_select_cb	net/lwip/api/sockets.c	/^struct lwip_select_cb {$/;"	s	file:
lwip_selscan	net/lwip/api/sockets.c	/^lwip_selscan(int maxfdp1, fd_set *readset, fd_set *writeset, fd_set *exceptset)$/;"	f	file:
lwip_send	net/lwip/api/sockets.c	/^lwip_send(int s, const void *data, int size, unsigned int flags)$/;"	f
lwip_sendto	net/lwip/api/sockets.c	/^lwip_sendto(int s, const void *data, int size, unsigned int flags,$/;"	f
lwip_setgetsockopt_data	net/lwip/api/sockets.c	/^struct lwip_setgetsockopt_data {$/;"	s	file:
lwip_setsockopt	net/lwip/api/sockets.c	/^lwip_setsockopt(int s, int level, int optname, const void *optval, socklen_t optlen)$/;"	f
lwip_setsockopt_internal	net/lwip/api/sockets.c	/^lwip_setsockopt_internal(void *arg)$/;"	f	file:
lwip_shutdown	net/lwip/api/sockets.c	/^lwip_shutdown(int s, int how)$/;"	f
lwip_socket	net/lwip/api/sockets.c	/^lwip_socket(int domain, int type, int protocol)$/;"	f
lwip_socket	net/lwip/api/sockets.c	/^struct lwip_socket {$/;"	s	file:
lwip_socket_init	net/lwip/api/sockets.c	/^lwip_socket_init(void)$/;"	f
lwip_standard_chksum	net/lwip/core/ipv4/inet_chksum.c	/^lwip_standard_chksum(void *dataptr, int len)$/;"	f	file:
lwip_standard_chksum	net/lwip/core/ipv4/inet_chksum.c	/^lwip_standard_chksum(void *dataptr, u16_t len)$/;"	f	file:
lwip_stats	net/lwip/core/stats.c	/^struct stats_ lwip_stats;$/;"	v	typeref:struct:stats_
lwip_strerr	net/lwip/api/err.c	/^lwip_strerr(err_t err)$/;"	f
lwip_strerr	net/lwip/include/lwip/err.h	80;"	d
lwip_thread	net/lwip/jos/arch/sys_arch.c	/^struct lwip_thread {$/;"	s	file:
lwip_thread_entry	net/lwip/jos/arch/sys_arch.c	/^lwip_thread_entry(uint32_t arg)$/;"	f	file:
lwip_write	net/lwip/api/sockets.c	/^lwip_write(int s, const void *data, int size)$/;"	f
lwriteset	obj/net/ns.asm	/^      lwriteset = *writeset;$/;"	d
lwriteset	obj/net/ns.asm	/^    lwriteset = *writeset;$/;"	d
m	obj/fs/fs.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/fs/fs.asm	/^		m = n - tot;$/;"	d
m	obj/fs/fs.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/net/ns.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/net/ns.asm	/^		m = n - tot;$/;"	d
m	obj/net/ns.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/net/ns.asm	/^        m = -m;$/;"	d
m	obj/net/ns.asm	/^      m = (s16_t)(tcp_ticks - pcb->rttest);$/;"	d
m	obj/net/ns.asm	/^      m = m - (pcb->sa >> 3);$/;"	d
m	obj/net/ns.asm	/^      m = m - (pcb->sv >> 2);$/;"	d
m	obj/net/testinput.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/net/testinput.asm	/^		m = n - tot;$/;"	d
m	obj/net/testinput.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/net/testoutput.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/net/testoutput.asm	/^		m = n - tot;$/;"	d
m	obj/net/testoutput.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/badsegment.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/badsegment.asm	/^		m = n - tot;$/;"	d
m	obj/user/badsegment.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/breakpoint.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/breakpoint.asm	/^		m = n - tot;$/;"	d
m	obj/user/breakpoint.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/buggyhello.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/buggyhello.asm	/^		m = n - tot;$/;"	d
m	obj/user/buggyhello.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/buggyhello2.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/buggyhello2.asm	/^		m = n - tot;$/;"	d
m	obj/user/buggyhello2.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/cat.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/cat.asm	/^		m = n - tot;$/;"	d
m	obj/user/cat.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/divzero.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/divzero.asm	/^		m = n - tot;$/;"	d
m	obj/user/divzero.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/dumbfork.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/dumbfork.asm	/^		m = n - tot;$/;"	d
m	obj/user/dumbfork.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/echo.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/echo.asm	/^		m = n - tot;$/;"	d
m	obj/user/echo.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/echosrv.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/echosrv.asm	/^		m = n - tot;$/;"	d
m	obj/user/echosrv.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/echotest.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/echotest.asm	/^		m = n - tot;$/;"	d
m	obj/user/echotest.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/evilhello.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/evilhello.asm	/^		m = n - tot;$/;"	d
m	obj/user/evilhello.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/fairness.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/fairness.asm	/^		m = n - tot;$/;"	d
m	obj/user/fairness.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultalloc.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultalloc.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultalloc.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultallocbad.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultallocbad.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultallocbad.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultbadhandler.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultbadhandler.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultbadhandler.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultdie.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultdie.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultdie.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultevilhandler.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultevilhandler.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultevilhandler.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultnostack.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultnostack.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultnostack.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultread.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultread.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultread.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultreadkernel.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultreadkernel.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultreadkernel.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultregs.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultregs.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultregs.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultwrite.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultwrite.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultwrite.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultwritekernel.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultwritekernel.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultwritekernel.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/forktree.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/forktree.asm	/^		m = n - tot;$/;"	d
m	obj/user/forktree.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/hello.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/hello.asm	/^		m = n - tot;$/;"	d
m	obj/user/hello.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/httpd.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/httpd.asm	/^		m = n - tot;$/;"	d
m	obj/user/httpd.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/icode.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/icode.asm	/^		m = n - tot;$/;"	d
m	obj/user/icode.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/idle.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/idle.asm	/^		m = n - tot;$/;"	d
m	obj/user/idle.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/init.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/init.asm	/^		m = n - tot;$/;"	d
m	obj/user/init.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/ls.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/ls.asm	/^		m = n - tot;$/;"	d
m	obj/user/ls.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/lsfd.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/lsfd.asm	/^		m = n - tot;$/;"	d
m	obj/user/lsfd.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/num.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/num.asm	/^		m = n - tot;$/;"	d
m	obj/user/num.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/pingpong.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/pingpong.asm	/^		m = n - tot;$/;"	d
m	obj/user/pingpong.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/pingpongs.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/pingpongs.asm	/^		m = n - tot;$/;"	d
m	obj/user/pingpongs.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/primes.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/primes.asm	/^		m = n - tot;$/;"	d
m	obj/user/primes.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/primespipe.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/primespipe.asm	/^		m = n - tot;$/;"	d
m	obj/user/primespipe.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/sendpage.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/sendpage.asm	/^		m = n - tot;$/;"	d
m	obj/user/sendpage.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/sh.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/sh.asm	/^		m = n - tot;$/;"	d
m	obj/user/sh.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/softint.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/softint.asm	/^		m = n - tot;$/;"	d
m	obj/user/softint.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/spawnhello.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/spawnhello.asm	/^		m = n - tot;$/;"	d
m	obj/user/spawnhello.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/spin.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/spin.asm	/^		m = n - tot;$/;"	d
m	obj/user/spin.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/stresssched.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/stresssched.asm	/^		m = n - tot;$/;"	d
m	obj/user/stresssched.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testbss.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testbss.asm	/^		m = n - tot;$/;"	d
m	obj/user/testbss.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testfdsharing.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testfdsharing.asm	/^		m = n - tot;$/;"	d
m	obj/user/testfdsharing.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testfile.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testfile.asm	/^		m = n - tot;$/;"	d
m	obj/user/testfile.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testkbd.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testkbd.asm	/^		m = n - tot;$/;"	d
m	obj/user/testkbd.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testpipe.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testpipe.asm	/^		m = n - tot;$/;"	d
m	obj/user/testpipe.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testpiperace.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testpiperace.asm	/^		m = n - tot;$/;"	d
m	obj/user/testpiperace.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testpiperace2.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testpiperace2.asm	/^		m = n - tot;$/;"	d
m	obj/user/testpiperace2.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testpteshare.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testpteshare.asm	/^		m = n - tot;$/;"	d
m	obj/user/testpteshare.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testshell.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testshell.asm	/^		m = n - tot;$/;"	d
m	obj/user/testshell.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testtime.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testtime.asm	/^		m = n - tot;$/;"	d
m	obj/user/testtime.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/yield.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/yield.asm	/^		m = n - tot;$/;"	d
m	obj/user/yield.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
magic	net/lwip/netif/ppp/magic.c	/^u32_t magic()$/;"	f
magicInit	net/lwip/netif/ppp/magic.c	/^void magicInit()$/;"	f
magicnumber	net/lwip/netif/ppp/lcp.h	/^    u32_t magicnumber;$/;"	m	struct:lcp_options
main	fs/fsformat.c	/^main(int argc, char **argv)$/;"	f
make	gradelib.py	/^def make(*target):$/;"	f
malloc	lib/malloc.c	/^malloc(size_t n)$/;"	f
map_segment	lib/spawn.c	/^map_segment(envid_t child, uintptr_t va, size_t memsz,$/;"	f	file:
match	gradelib.py	/^    def match(self, *args, **kwargs):$/;"	m	class:Runner
match_packet_seq	grade-lab6	/^def match_packet_seq(got, expect):$/;"	f
matchtest	grade-lab5	/^def matchtest(parent, name, *args, **kw):$/;"	f
max	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER max;$/;"	m	struct:stats_syselem
max	net/lwip/include/lwip/stats.h	/^  mem_size_t max;$/;"	m	struct:stats_mem
max	obj/user/testpiperace.asm	/^	max = 200;$/;"	d
maxSlotIndex	net/lwip/netif/ppp/vj.h	/^  u_char maxSlotIndex;$/;"	m	struct:vjcompress
max_tid	net/lwip/jos/arch/thread.c	/^static thread_id_t max_tid;$/;"	v	file:
max_tid	obj/net/ns.asm	/^    max_tid = 0;$/;"	d
max_transmits	net/lwip/netif/ppp/chap.h	/^  int max_transmits;                      \/* Maximum # of challenge transmissions *\/$/;"	m	struct:chap_state
maxconfreqtransmits	net/lwip/netif/ppp/fsm.h	/^  int maxconfreqtransmits;         \/* Maximum Configure-Request transmissions *\/$/;"	m	struct:fsm
maxconnect	net/lwip/netif/ppp/ppp.h	/^  int  maxconnect;                    \/* Maximum connect time (seconds) *\/$/;"	m	struct:ppp_settings
maxlength	net/lwip/include/lwip/snmp_structs.h	/^  const u16_t maxlength;$/;"	m	struct:mib_array_node
maxlength	net/lwip/include/lwip/snmp_structs.h	/^  const u16_t maxlength;$/;"	m	struct:mib_node
maxlength	net/lwip/include/lwip/snmp_structs.h	/^  u16_t maxlength;$/;"	m	struct:mib_external_node
maxlength	net/lwip/include/lwip/snmp_structs.h	/^  u16_t maxlength;$/;"	m	struct:mib_list_rootnode
maxlength	net/lwip/include/lwip/snmp_structs.h	/^  u16_t maxlength;$/;"	m	struct:mib_ram_array_node
maxnakloops	net/lwip/netif/ppp/fsm.h	/^  int maxnakloops;                 \/* Maximum number of nak loops tolerated *\/$/;"	m	struct:fsm
maxslotindex	net/lwip/netif/ppp/ipcp.h	/^  u_char  maxslotindex;      \/* VJ slots - 1. *\/$/;"	m	struct:ipcp_options
maxtermtransmits	net/lwip/netif/ppp/fsm.h	/^  int maxtermtransmits;            \/* Maximum Terminate-Request transmissions *\/$/;"	m	struct:fsm
maybe_unlink	gradelib.py	/^def maybe_unlink(*paths):$/;"	f
mbegin	lib/malloc.c	/^static uint8_t *mbegin = (uint8_t*) 0x08000000;$/;"	v	file:
mbox	net/lwip/api/tcpip.c	/^static sys_mbox_t mbox = SYS_MBOX_NULL;$/;"	v	file:
mbox	net/lwip/include/lwip/stats.h	/^  struct stats_syselem mbox;$/;"	m	struct:stats_sys	typeref:struct:stats_sys::stats_syselem
mbox	obj/net/ns.asm	/^  mbox = sys_mbox_new(TCPIP_MBOX_SIZE);$/;"	d
mboxes	net/lwip/jos/arch/sys_arch.c	/^static struct sys_mbox_entry mboxes[NMBOX];$/;"	v	typeref:struct:sys_mbox_entry	file:
mc146818_read	kern/kclock.c	/^mc146818_read(unsigned reg)$/;"	f
mc146818_write	kern/kclock.c	/^mc146818_write(unsigned reg, unsigned datum)$/;"	f
mem	net/lwip/core/mem.c	/^struct mem {$/;"	s	file:
mem	net/lwip/include/lwip/stats.h	/^  struct stats_mem mem;$/;"	m	struct:stats_	typeref:struct:stats_::stats_mem
mem	obj/net/ns.asm	/^      mem = (struct mem *)&ram[ptr];$/;"	d
mem	obj/net/ns.asm	/^  mem = (struct mem *)((u8_t *)rmem - SIZEOF_STRUCT_MEM);$/;"	d
mem	obj/net/ns.asm	/^  mem = (struct mem *)ram;$/;"	d
mem2	obj/net/ns.asm	/^          mem2 = (struct mem *)&ram[ptr2];$/;"	d
mem2	obj/net/ns.asm	/^    mem2 = (struct mem *)&ram[ptr2];$/;"	d
mem2	obj/net/ns.asm	/^  mem2 = (struct mem *)&ram[mem->next];$/;"	d
mem_calloc	net/lwip/core/mem.c	/^void *mem_calloc(mem_size_t count, mem_size_t size)$/;"	f
mem_calloc	net/lwip/include/lwip/mem.h	59;"	d
mem_free	net/lwip/core/mem.c	/^mem_free(void *rmem)$/;"	f
mem_free	net/lwip/include/lwip/mem.h	53;"	d
mem_free_callback	net/lwip/api/tcpip.c	/^mem_free_callback(void *m)$/;"	f
mem_free_count	net/lwip/core/mem.c	/^static volatile u8_t mem_free_count;$/;"	v	file:
mem_free_count	obj/net/ns.asm	/^      mem_free_count = 0;$/;"	d
mem_free_count	obj/net/ns.asm	/^  mem_free_count = 1;$/;"	d
mem_helper	net/lwip/core/mem.c	/^struct mem_helper$/;"	s	file:
mem_init	kern/pmap.c	/^mem_init(void)$/;"	f
mem_init	net/lwip/core/mem.c	/^mem_init(void)$/;"	f
mem_init	net/lwip/include/lwip/mem.h	48;"	d
mem_init	net/lwip/include/lwip/mem.h	77;"	d
mem_init_mp	kern/pmap.c	/^mem_init_mp(void)$/;"	f	file:
mem_malloc	net/lwip/core/mem.c	/^mem_malloc(mem_size_t size)$/;"	f
mem_malloc	net/lwip/include/lwip/mem.h	56;"	d
mem_ptr_t	net/lwip/jos/arch/cc.h	/^typedef uintptr_t mem_ptr_t;$/;"	t
mem_realloc	net/lwip/core/mem.c	/^mem_realloc(void *rmem, mem_size_t newsize)$/;"	f
mem_realloc	net/lwip/include/lwip/mem.h	62;"	d
mem_realloc	net/lwip/include/lwip/mem.h	80;"	d
mem_sem	net/lwip/core/mem.c	/^static sys_sem_t mem_sem;$/;"	v	file:
mem_sem	obj/net/ns.asm	/^  mem_sem = sys_sem_new(1);$/;"	d
mem_size_t	net/lwip/include/lwip/mem.h	/^typedef size_t mem_size_t;$/;"	t
mem_size_t	net/lwip/include/lwip/mem.h	/^typedef u16_t mem_size_t;$/;"	t
mem_size_t	net/lwip/include/lwip/mem.h	/^typedef u32_t mem_size_t;$/;"	t
memcmp	lib/string.c	/^memcmp(const void *v1, const void *v2, size_t n)$/;"	f
memcpy	lib/string.c	/^memcpy(void *dst, const void *src, size_t n)$/;"	f
memerr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER memerr;           \/* Out of memory error. *\/$/;"	m	struct:stats_proto
memerr	obj/net/ns.asm	/^memerr:$/;"	l
memfind	lib/string.c	/^memfind(const void *s, int c, size_t n)$/;"	f
memmove	lib/string.c	/^memmove(void *dst, const void *src, size_t n)$/;"	f
memp	net/lwip/core/memp.c	/^struct memp {$/;"	s	file:
memp	net/lwip/include/lwip/stats.h	/^  struct stats_mem memp[MEMP_MAX];$/;"	m	struct:stats_	typeref:struct:stats_::stats_mem
memp	obj/net/ns.asm	/^      memp = (struct memp *)((u8_t *)memp + MEMP_SIZE + memp_sizes[i]);$/;"	d
memp	obj/net/ns.asm	/^  memp = LWIP_MEM_ALIGN(memp_memory);$/;"	d
memp	obj/net/ns.asm	/^  memp = memp_tab[type];$/;"	d
memp_desc	net/lwip/core/memp.c	/^static const char *memp_desc[MEMP_MAX] = {$/;"	v	file:
memp_free	net/lwip/core/memp.c	/^memp_free(memp_t type, void *mem)$/;"	f
memp_init	net/lwip/core/memp.c	/^memp_init(void)$/;"	f
memp_malloc	net/lwip/core/memp.c	/^memp_malloc(memp_t type)$/;"	f
memp_malloc	net/lwip/include/lwip/memp.h	84;"	d
memp_memory	net/lwip/core/memp.c	/^static u8_t memp_memory[MEM_ALIGNMENT - 1 $/;"	v	file:
memp_num	net/lwip/core/memp.c	/^static const u16_t memp_num[MEMP_MAX] = {$/;"	v	file:
memp_overflow_check_all	net/lwip/core/memp.c	/^memp_overflow_check_all(void)$/;"	f	file:
memp_overflow_check_element	net/lwip/core/memp.c	/^memp_overflow_check_element(struct memp *p, u16_t memp_size)$/;"	f	file:
memp_overflow_init	net/lwip/core/memp.c	/^memp_overflow_init(void)$/;"	f	file:
memp_pool_helper_t	net/lwip/include/lwip/memp.h	/^} memp_pool_helper_t;$/;"	t	typeref:enum:__anon16
memp_sanity	net/lwip/core/memp.c	/^memp_sanity(void)$/;"	f	file:
memp_sizes	net/lwip/core/memp.c	/^const u16_t memp_sizes[MEMP_MAX] = {$/;"	v	file:
memp_t	net/lwip/include/lwip/memp.h	/^} memp_t;$/;"	t	typeref:enum:__anon15
memp_tab	net/lwip/core/memp.c	/^static struct memp *memp_tab[MEMP_MAX];$/;"	v	typeref:struct:memp	file:
memset	lib/string.c	/^memset(void *v, int c, size_t n)$/;"	f
mend	lib/malloc.c	/^static uint8_t *mend   = (uint8_t*) 0x10000000;$/;"	v	file:
mgmt	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node mgmt = {$/;"	v	typeref:struct:mib_array_node
mgmt_ids	net/lwip/core/snmp/mib2.c	/^const s32_t mgmt_ids[1] = { 1 };$/;"	v
mgmt_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const mgmt_nodes[1] = { (struct mib_node* const)&mib2 };$/;"	v
mib2	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node mib2 = {$/;"	v	typeref:struct:mib_array_node
mib2_at_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* mib2_at_node = (struct mib_node* const)&attable;$/;"	v	typeref:struct:mib_node
mib2_ids	net/lwip/core/snmp/mib2.c	/^const s32_t mib2_ids[MIB2_GROUPS] =$/;"	v
mib2_ip	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node mib2_ip = {$/;"	v	typeref:struct:mib_array_node
mib2_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const mib2_nodes[MIB2_GROUPS] = {$/;"	v
mib_array_node	net/lwip/include/lwip/snmp_structs.h	/^struct mib_array_node$/;"	s
mib_external_node	net/lwip/include/lwip/snmp_structs.h	/^struct mib_external_node$/;"	s
mib_list_node	net/lwip/include/lwip/snmp_structs.h	/^struct mib_list_node$/;"	s
mib_list_rootnode	net/lwip/include/lwip/snmp_structs.h	/^struct mib_list_rootnode$/;"	s
mib_node	net/lwip/include/lwip/snmp_structs.h	/^struct mib_node$/;"	s
mib_ram_array_node	net/lwip/include/lwip/snmp_structs.h	/^struct mib_ram_array_node$/;"	s
mib_scalar_node	net/lwip/include/lwip/snmp_structs.h	/^typedef struct mib_node mib_scalar_node;$/;"	t	typeref:struct:mib_node
microdelay	kern/lapic.c	/^microdelay(int us)$/;"	f	file:
mime_type	user/httpd.c	/^mime_type(const char *file)$/;"	f	file:
mismatch	obj/user/faultregs.asm	/^			mismatch = 1;					\\$/;"	d
mk_test_httpd	grade-lab6	/^def mk_test_httpd(url, expect_code, expect_data):$/;"	f
mm1	obj/kern/kernel.asm	/^	mm1 = (uintptr_t) mmio_map_region(0, 4097);$/;"	d
mm2	obj/kern/kernel.asm	/^	mm2 = (uintptr_t) mmio_map_region(0, 4096);$/;"	d
mmio_map_region	kern/pmap.c	/^mmio_map_region(physaddr_t pa, size_t size)$/;"	f
mode	net/lwip/netif/ppp/ppp.c	/^  enum NPmode mode;$/;"	m	struct:npioctl	typeref:enum:npioctl::NPmode	file:
mon_backtrace	kern/monitor.c	/^mon_backtrace(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_help	kern/monitor.c	/^mon_help(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_kerninfo	kern/monitor.c	/^mon_kerninfo(int argc, char **argv, struct Trapframe *tf)$/;"	f
monitor	kern/monitor.c	/^monitor(struct Trapframe *tf)$/;"	f
mp	kern/mpconfig.c	/^struct mp {             \/\/ floating pointer [MP 4.1]$/;"	s	file:
mp_init	kern/mpconfig.c	/^mp_init(void)$/;"	f
mp_main	kern/init.c	/^mp_main(void)$/;"	f
mpconf	kern/mpconfig.c	/^struct mpconf {         \/\/ configuration table header [MP 4.2]$/;"	s	file:
mpconfig	kern/mpconfig.c	/^mpconfig(struct mp **pmp)$/;"	f	file:
mpentry_end	kern/mpentry.S	/^mpentry_end:$/;"	l
mpentry_end	obj/kern/kernel.asm	/^mpentry_end:$/;"	l
mpentry_kstack	kern/init.c	/^void *mpentry_kstack;$/;"	v
mpentry_kstack	obj/kern/kernel.asm	/^		mpentry_kstack = percpu_kstacks[c - cpus] + KSTKSIZE;$/;"	d
mpentry_start	kern/mpentry.S	/^mpentry_start:$/;"	l
mpentry_start	obj/kern/kernel.asm	/^mpentry_start:$/;"	l
mpproc	kern/mpconfig.c	/^struct mpproc {         \/\/ processor table entry [MP 4.3.1]$/;"	s	file:
mprio	obj/net/ns.asm	/^      mprio = pcb->prio;$/;"	d
mprio	obj/net/ns.asm	/^  mprio = TCP_PRIO_MAX;$/;"	d
mpsearch	kern/mpconfig.c	/^mpsearch(void)$/;"	f	file:
mpsearch1	kern/mpconfig.c	/^mpsearch1(physaddr_t a, int len)$/;"	f	file:
mptr	lib/malloc.c	/^static uint8_t *mptr;$/;"	v	file:
mptr	obj/net/ns.asm	/^			mptr = mbegin;$/;"	d
mptr	obj/net/ns.asm	/^		mptr = ROUNDDOWN(mptr + PGSIZE, PGSIZE);$/;"	d
mptr	obj/net/ns.asm	/^		mptr = mbegin;$/;"	d
mptr	obj/user/httpd.asm	/^			mptr = mbegin;$/;"	d
mptr	obj/user/httpd.asm	/^		mptr = ROUNDDOWN(mptr + PGSIZE, PGSIZE);$/;"	d
mptr	obj/user/httpd.asm	/^		mptr = mbegin;$/;"	d
mrru	net/lwip/netif/ppp/lcp.h	/^    u_short mrru;                \/* Value of MRRU, and multilink enable *\/$/;"	m	struct:lcp_options
mru	net/lwip/netif/ppp/lcp.h	/^    u_short mru;                 \/* Value of MRU *\/$/;"	m	struct:lcp_options
msec	net/serv.c	/^	uint32_t msec;$/;"	m	struct:timer_thread	file:
msecs	net/lwip/include/lwip/tcpip.h	/^      u32_t msecs;$/;"	m	struct:tcpip_msg::__anon17::__anon20
msecs	obj/net/ns.asm	/^  msecs = 10*1000;$/;"	d
msecs	obj/net/ns.asm	/^  msecs = 500;$/;"	d
msecs	obj/net/ns.asm	/^  msecs = dhcp->tries < 10 ? dhcp->tries * 1000 : 10 * 1000;$/;"	d
msecs	obj/net/ns.asm	/^  msecs = dhcp->tries < 10 ? dhcp->tries * 2000 : 20 * 1000;$/;"	d
msecs	obj/net/ns.asm	/^  msecs = dhcp->tries < 4 ? (dhcp->tries + 1) * 1000 : 10 * 1000;$/;"	d
msecs	obj/net/ns.asm	/^  msecs = dhcp->tries < 4 ? dhcp->tries * 1000 : 4 * 1000;$/;"	d
msectimeout	obj/net/ns.asm	/^        msectimeout = 1;$/;"	d
msectimeout	obj/net/ns.asm	/^      msectimeout =  ((timeout->tv_sec * 1000) + ((timeout->tv_usec + 500)\/1000));$/;"	d
msectimeout	obj/net/ns.asm	/^      msectimeout = 0;$/;"	d
msg	fs/test.c	/^static char *msg = "This is the NEW message of the day!\\n\\n";$/;"	v	file:
msg	net/lwip/include/lwip/api_msg.h	/^  struct api_msg_msg msg;$/;"	m	struct:api_msg	typeref:struct:api_msg::api_msg_msg
msg	net/lwip/include/lwip/api_msg.h	/^  } msg;$/;"	m	struct:api_msg_msg	typeref:union:api_msg_msg::__anon25
msg	net/lwip/include/lwip/netifapi.h	/^  struct netifapi_msg_msg msg;$/;"	m	struct:netifapi_msg	typeref:struct:netifapi_msg::netifapi_msg_msg
msg	net/lwip/include/lwip/netifapi.h	/^  } msg;$/;"	m	struct:netifapi_msg_msg	typeref:union:netifapi_msg_msg::__anon22
msg	net/lwip/include/lwip/tcpip.h	/^  } msg;$/;"	m	struct:tcpip_msg	typeref:union:tcpip_msg::__anon17
msg	net/lwip/jos/arch/sys_arch.c	/^    void *msg[MBOXSLOTS];$/;"	m	struct:sys_mbox_entry	file:
msg	obj/net/ns.asm	/^    msg = memp_malloc(MEMP_TCPIP_MSG_API);$/;"	d
msg	obj/net/ns.asm	/^    msg = memp_malloc(MEMP_TCPIP_MSG_INPKT);$/;"	d
msg	user/echotest.c	/^const char *msg = "Hello world!\\n";$/;"	v
msg	user/httpd.c	/^	char *msg;$/;"	m	struct:error_messages	file:
msg	user/testfile.c	/^const char *msg = "This is the NEW message of the day!\\n\\n";$/;"	v
msg	user/testpipe.c	/^char *msg = "Now is the time for all good men to come to the aid of their party.";$/;"	v
msg	user/testptelibrary.c	/^const char *msg = "hello, world\\n";$/;"	v
msg	user/testpteshare.c	/^const char *msg = "hello, world\\n";$/;"	v
msg1	user/init.c	/^	char msg1[5000];$/;"	m	struct:__anon41	file:
msg2	user/init.c	/^	char msg2[1000];$/;"	m	struct:__anon41	file:
msg2	user/testptelibrary.c	/^const char *msg2 = "goodbye, world\\n";$/;"	v
msg2	user/testpteshare.c	/^const char *msg2 = "goodbye, world\\n";$/;"	v
msg_in	net/lwip/include/lwip/dhcp.h	/^  struct dhcp_msg *msg_in;$/;"	m	struct:dhcp	typeref:struct:dhcp::dhcp_msg
msg_input_list	net/lwip/core/snmp/msg_in.c	/^struct snmp_msg_pstat msg_input_list[SNMP_CONCURRENT_REQUESTS];$/;"	v	typeref:struct:snmp_msg_pstat
msg_out	net/lwip/include/lwip/dhcp.h	/^  struct dhcp_msg *msg_out; \/* outgoing msg *\/$/;"	m	struct:dhcp	typeref:struct:dhcp::dhcp_msg
msg_type	obj/net/ns.asm	/^  msg_type = dhcp_get_option_byte(options_ptr + 2);$/;"	d
mss	net/lwip/include/lwip/tcp.h	/^  u16_t mss;   \/* maximum segment size *\/$/;"	m	struct:tcp_pcb
mss	obj/net/ns.asm	/^        mss = (opts[c + 2] << 8) | opts[c + 3];$/;"	d
mss_s	obj/net/ns.asm	/^    mss_s = outif->mtu - IP_HLEN - TCP_HLEN;$/;"	d
mtu	net/lwip/include/lwip/netif.h	/^  u16_t mtu;$/;"	m	struct:netif
mtu	net/lwip/netif/ppp/ppp.c	/^  int  mtu;                     \/* Peer's mru *\/$/;"	m	struct:PPPControl_s	file:
multiaddr	net/lwip/include/lwip/api_msg.h	/^      struct ip_addr *multiaddr;$/;"	m	struct:api_msg_msg::__anon25::__anon31	typeref:struct:api_msg_msg::__anon25::__anon31::ip_addr
multicast_ip	net/lwip/include/lwip/udp.h	/^  struct ip_addr multicast_ip;$/;"	m	struct:udp_pcb	typeref:struct:udp_pcb::ip_addr
n	fs/fsformat.c	/^	int n;$/;"	m	struct:Dir	file:
n	net/lwip/include/lwip/api_msg.h	/^    } n;$/;"	m	union:api_msg_msg::__anon25	typeref:struct:api_msg_msg::__anon25::__anon26
n	obj/fs/fs.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/kern/kernel.asm	/^	n = PGNUM(ROUNDUP(len, PGSIZE));$/;"	d
n	obj/kern/kernel.asm	/^	n = ROUNDUP(NENV*sizeof(struct Env), PGSIZE);$/;"	d
n	obj/kern/kernel.asm	/^	n = ROUNDUP(npages*sizeof(struct PageInfo), PGSIZE);$/;"	d
n	obj/net/ns.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/net/ns.asm	/^	n = ROUNDUP(n, 4);$/;"	d
n	obj/net/ns.asm	/^  n = pp - parts + 1;$/;"	d
n	obj/net/testinput.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/net/testinput.asm	/^  n = pp - parts + 1;$/;"	d
n	obj/net/testoutput.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/badsegment.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/breakpoint.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/buggyhello.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/buggyhello2.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/cat.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/divzero.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/dumbfork.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/echo.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/echosrv.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/echosrv.asm	/^  n = pp - parts + 1;$/;"	d
n	obj/user/echotest.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/echotest.asm	/^  n = pp - parts + 1;$/;"	d
n	obj/user/evilhello.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/fairness.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultalloc.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultallocbad.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultbadhandler.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultdie.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultevilhandler.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultnostack.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultread.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultreadkernel.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultregs.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultwrite.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultwritekernel.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/forktree.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/hello.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/httpd.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/httpd.asm	/^	n = ROUNDUP(n, 4);$/;"	d
n	obj/user/httpd.asm	/^  n = pp - parts + 1;$/;"	d
n	obj/user/icode.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/idle.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/init.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/ls.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/lsfd.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/num.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/pingpong.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/pingpongs.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/primes.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/primespipe.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/sendpage.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/sh.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/softint.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/spawnhello.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/spin.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/stresssched.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testbss.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testfdsharing.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testfile.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testkbd.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testpipe.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testpiperace.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testpiperace2.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testpteshare.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testshell.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testtime.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/yield.asm	/^		n = thisenv->env_runs;$/;"	d
n1	obj/user/testshell.asm	/^		n1 = read(rfd, &c1, 1);$/;"	d
n2	obj/user/testshell.asm	/^		n2 = read(kfd, &c2, 1);$/;"	d
nPut	net/lwip/netif/ppp/ppp.c	/^nPut(PPPControl *pc, struct pbuf *nb)$/;"	f	file:
n_desc	inc/stab.h	/^	uint16_t n_desc;        \/\/ description field$/;"	m	struct:Stab
n_other	inc/stab.h	/^	uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:Stab
n_strx	inc/stab.h	/^	uint32_t n_strx;	\/\/ index into string table of name$/;"	m	struct:Stab
n_type	inc/stab.h	/^	uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:Stab
n_value	inc/stab.h	/^	uintptr_t n_value;	\/\/ value of symbol$/;"	m	struct:Stab
nak_buffer	net/lwip/netif/ppp/lcp.c	/^static u_char nak_buffer[PPP_MRU]; \/* where we construct a nak packet *\/$/;"	v	file:
nakci	net/lwip/netif/ppp/fsm.h	/^  int  (*nakci)(fsm*, u_char*, int);                \/* NAK our Configuration Information *\/$/;"	m	struct:fsm_callbacks
nakloops	net/lwip/netif/ppp/fsm.h	/^  int nakloops;                    \/* Number of nak loops since last ack *\/$/;"	m	struct:fsm
name	kern/monitor.c	/^	const char *name;$/;"	m	struct:Command	file:
name	kern/spinlock.h	/^	char *name;            \/\/ Name of lock.$/;"	m	struct:spinlock
name	kern/trapentry.S	/^	name:								\\$/;"	l
name	kern/trapentry.S	/^	name:			\/* function starts here *\/		\\$/;"	l
name	net/lwip/core/dns.c	/^  char name[DNS_MAX_NAME_LENGTH];$/;"	m	struct:dns_table_entry	file:
name	net/lwip/include/lwip/api_msg.h	/^  const char *name;$/;"	m	struct:dns_api_msg
name	net/lwip/include/lwip/netif.h	/^  char name[2];$/;"	m	struct:netif
name	net/lwip/netif/ppp/ppp.h	/^    char *name;         \/* Text name of protocol *\/$/;"	m	struct:protent
name	net/serv.c	/^	const char *name;$/;"	m	struct:timer_thread	file:
name_size	net/lwip/jos/arch/threadq.h	/^enum { name_size = 32 };$/;"	e	enum:__anon11
nblock	obj/fs/fs.asm	/^	nblock = dir->f_size \/ BLKSIZE;$/;"	d
nblocks	fs/fsformat.c	/^uint32_t nblocks;$/;"	v
nc	obj/user/sh.asm	/^		nc = _gettoken(s, &np1, &np2);$/;"	d
nc	obj/user/sh.asm	/^	nc = _gettoken(np2, &np1, &np2);$/;"	d
ncpu	kern/mpconfig.c	/^int ncpu;$/;"	v
ncpu	obj/kern/kernel.asm	/^		ncpu = 1;$/;"	d
ndesc	obj/kern/kernel.asm	/^	ndesc = PGSIZE\/sizeof(struct e1000_rx_desc);$/;"	d
neg_accompression	net/lwip/netif/ppp/lcp.h	/^    u_int neg_accompression : 1; \/* HDLC Address\/Control Field Compression? *\/$/;"	m	struct:lcp_options
neg_addr	net/lwip/netif/ppp/ipcp.h	/^  u_int   neg_addr      : 1; \/* Negotiate IP Address? *\/$/;"	m	struct:ipcp_options
neg_asyncmap	net/lwip/netif/ppp/lcp.h	/^    u_int neg_asyncmap      : 1; \/* Negotiate the async map? *\/$/;"	m	struct:lcp_options
neg_cbcp	net/lwip/netif/ppp/lcp.h	/^    u_int neg_cbcp          : 1; \/* Negotiate use of CBCP *\/$/;"	m	struct:lcp_options
neg_chap	net/lwip/netif/ppp/lcp.h	/^    u_int neg_chap          : 1; \/* Ask for CHAP authentication? *\/$/;"	m	struct:lcp_options
neg_endpoint	net/lwip/netif/ppp/lcp.h	/^    u_int neg_endpoint      : 1; \/* Negotiate endpoint discriminator *\/$/;"	m	struct:lcp_options
neg_lqr	net/lwip/netif/ppp/lcp.h	/^    u_int neg_lqr           : 1; \/* Negotiate use of Link Quality Reports *\/$/;"	m	struct:lcp_options
neg_magicnumber	net/lwip/netif/ppp/lcp.h	/^    u_int neg_magicnumber   : 1; \/* Ask for magic number? *\/$/;"	m	struct:lcp_options
neg_mrru	net/lwip/netif/ppp/lcp.h	/^    u_int neg_mrru          : 1; \/* Negotiate multilink MRRU *\/$/;"	m	struct:lcp_options
neg_mru	net/lwip/netif/ppp/lcp.h	/^    u_int neg_mru           : 1; \/* Negotiate the MRU? *\/$/;"	m	struct:lcp_options
neg_pcompression	net/lwip/netif/ppp/lcp.h	/^    u_int neg_pcompression  : 1; \/* HDLC Protocol Field Compression? *\/$/;"	m	struct:lcp_options
neg_ssnhf	net/lwip/netif/ppp/lcp.h	/^    u_int neg_ssnhf         : 1; \/* Negotiate short sequence numbers *\/$/;"	m	struct:lcp_options
neg_upap	net/lwip/netif/ppp/lcp.h	/^    u_int neg_upap          : 1; \/* Ask for UPAP authentication? *\/$/;"	m	struct:lcp_options
neg_vj	net/lwip/netif/ppp/ipcp.h	/^  u_int   neg_vj        : 1; \/* Van Jacobson Compression? *\/$/;"	m	struct:ipcp_options
net_timer	net/serv.c	/^net_timer(uint32_t arg)$/;"	f	file:
netbuf	net/lwip/include/lwip/netbuf.h	/^struct netbuf {$/;"	s
netbuf	obj/net/ns.asm	/^netbuf *netbuf_new(void)$/;"	l
netbuf_alloc	net/lwip/api/netbuf.c	/^netbuf_alloc(struct netbuf *buf, u16_t size)$/;"	f
netbuf_chain	net/lwip/api/netbuf.c	/^netbuf_chain(struct netbuf *head, struct netbuf *tail)$/;"	f
netbuf_copy	net/lwip/include/lwip/netbuf.h	67;"	d
netbuf_copy_partial	net/lwip/include/lwip/netbuf.h	65;"	d
netbuf_data	net/lwip/api/netbuf.c	/^netbuf_data(struct netbuf *buf, void **dataptr, u16_t *len)$/;"	f
netbuf_delete	net/lwip/api/netbuf.c	/^netbuf_delete(struct netbuf *buf)$/;"	f
netbuf_first	net/lwip/api/netbuf.c	/^netbuf_first(struct netbuf *buf)$/;"	f
netbuf_free	net/lwip/api/netbuf.c	/^netbuf_free(struct netbuf *buf)$/;"	f
netbuf_fromaddr	net/lwip/include/lwip/netbuf.h	69;"	d
netbuf_fromport	net/lwip/include/lwip/netbuf.h	70;"	d
netbuf_len	net/lwip/include/lwip/netbuf.h	68;"	d
netbuf_new	net/lwip/api/netbuf.c	/^netbuf *netbuf_new(void)$/;"	f
netbuf_next	net/lwip/api/netbuf.c	/^netbuf_next(struct netbuf *buf)$/;"	f
netbuf_ref	net/lwip/api/netbuf.c	/^netbuf_ref(struct netbuf *buf, const void *dataptr, u16_t size)$/;"	f
netconn	net/lwip/include/lwip/api.h	/^struct netconn {$/;"	s
netconn_accept	net/lwip/api/api_lib.c	/^netconn_accept(struct netconn *conn)$/;"	f
netconn_addr	net/lwip/include/lwip/api.h	176;"	d
netconn_alloc	net/lwip/api/api_msg.c	/^netconn_alloc(enum netconn_type t, netconn_callback callback)$/;"	f
netconn_bind	net/lwip/api/api_lib.c	/^netconn_bind(struct netconn *conn, struct ip_addr *addr, u16_t port)$/;"	f
netconn_callback	net/lwip/include/lwip/api.h	/^typedef void (* netconn_callback)(struct netconn *, enum netconn_evt, u16_t len);$/;"	t
netconn_close	net/lwip/api/api_lib.c	/^netconn_close(struct netconn *conn)$/;"	f
netconn_connect	net/lwip/api/api_lib.c	/^netconn_connect(struct netconn *conn, struct ip_addr *addr, u16_t port)$/;"	f
netconn_delete	net/lwip/api/api_lib.c	/^netconn_delete(struct netconn *conn)$/;"	f
netconn_disconnect	net/lwip/api/api_lib.c	/^netconn_disconnect(struct netconn *conn)$/;"	f
netconn_err	net/lwip/include/lwip/api.h	208;"	d
netconn_evt	net/lwip/include/lwip/api.h	/^enum netconn_evt {$/;"	g
netconn_free	net/lwip/api/api_msg.c	/^netconn_free(struct netconn *conn)$/;"	f
netconn_getaddr	net/lwip/api/api_lib.c	/^netconn_getaddr(struct netconn *conn, struct ip_addr *addr, u16_t *port, u8_t local)$/;"	f
netconn_gethostbyname	net/lwip/api/api_lib.c	/^netconn_gethostbyname(const char *name, struct ip_addr *addr)$/;"	f
netconn_igmp	net/lwip/include/lwip/api.h	/^enum netconn_igmp {$/;"	g
netconn_join_leave_group	net/lwip/api/api_lib.c	/^netconn_join_leave_group(struct netconn *conn,$/;"	f
netconn_listen	net/lwip/include/lwip/api.h	186;"	d
netconn_listen_with_backlog	net/lwip/api/api_lib.c	/^netconn_listen_with_backlog(struct netconn *conn, u8_t backlog)$/;"	f
netconn_new	net/lwip/include/lwip/api.h	163;"	d
netconn_new_with_callback	net/lwip/include/lwip/api.h	164;"	d
netconn_new_with_proto_and_callback	net/lwip/api/api_lib.c	/^netconn_new_with_proto_and_callback(enum netconn_type t, u8_t proto, netconn_callback callback)$/;"	f
netconn_peer	net/lwip/include/lwip/api.h	175;"	d
netconn_recv	net/lwip/api/api_lib.c	/^netconn_recv(struct netconn *conn)$/;"	f
netconn_recv_bufsize	net/lwip/include/lwip/api.h	209;"	d
netconn_send	net/lwip/api/api_lib.c	/^netconn_send(struct netconn *conn, struct netbuf *buf)$/;"	f
netconn_sendto	net/lwip/api/api_lib.c	/^netconn_sendto(struct netconn *conn, struct netbuf *buf, struct ip_addr *addr, u16_t port)$/;"	f
netconn_state	net/lwip/include/lwip/api.h	/^enum netconn_state {$/;"	g
netconn_type	net/lwip/api/api_lib.c	/^netconn_type(struct netconn *conn)$/;"	f
netconn_type	net/lwip/include/lwip/api.h	/^enum netconn_type {$/;"	g
netconn_write	net/lwip/api/api_lib.c	/^netconn_write(struct netconn *conn, const void *dataptr, int size, u8_t apiflags)$/;"	f
netif	net/lwip/include/lwip/netif.h	/^struct netif {$/;"	s
netif	net/lwip/include/lwip/netifapi.h	/^  struct netif *netif;$/;"	m	struct:netifapi_msg_msg	typeref:struct:netifapi_msg_msg::netif
netif	net/lwip/include/lwip/tcpip.h	/^      struct netif *netif;$/;"	m	struct:tcpip_msg::__anon17::__anon18	typeref:struct:tcpip_msg::__anon17::__anon18::netif
netif	net/lwip/netif/etharp.c	/^  struct netif *netif;$/;"	m	struct:etharp_entry	typeref:struct:etharp_entry::netif	file:
netif	net/lwip/netif/ppp/ppp.c	/^  struct netif netif;$/;"	m	struct:PPPControl_s	typeref:struct:PPPControl_s::netif	file:
netif	obj/net/ns.asm	/^        netif = inp;$/;"	d
netif	obj/net/ns.asm	/^        netif = netif->next;$/;"	d
netif	obj/net/ns.asm	/^        netif = netif_list;$/;"	d
netif	obj/net/ns.asm	/^    netif = inp;$/;"	d
netif	obj/net/ns.asm	/^    netif = ip_route(&(pcb->remote_ip));$/;"	d
netif	obj/net/ns.asm	/^    netif = netif->next;$/;"	d
netif	obj/net/ns.asm	/^  netif = ip_route((ip_addr_ismulticast(dst_ip))?(&(pcb->multicast_ip)):(dst_ip));$/;"	d
netif	obj/net/ns.asm	/^  netif = ip_route(dst_ip);$/;"	d
netif_add	net/lwip/core/netif.c	/^netif_add(struct netif *netif, struct ip_addr *ipaddr, struct ip_addr *netmask,$/;"	f
netif_default	net/lwip/core/netif.c	/^struct netif *netif_default;$/;"	v	typeref:struct:netif
netif_default	obj/net/ns.asm	/^  netif_default = netif;$/;"	d
netif_find	net/lwip/core/netif.c	/^netif_find(char *name)$/;"	f
netif_init	net/lwip/include/lwip/netif.h	205;"	d
netif_is_link_up	net/lwip/core/netif.c	/^u8_t netif_is_link_up(struct netif *netif)$/;"	f
netif_is_up	net/lwip/core/netif.c	/^u8_t netif_is_up(struct netif *netif)$/;"	f
netif_list	net/lwip/core/netif.c	/^struct netif *netif_list;$/;"	v	typeref:struct:netif
netif_list	obj/net/ns.asm	/^    netif_list = netif->next;$/;"	d
netif_list	obj/net/ns.asm	/^  netif_list = netif;$/;"	d
netif_loop_output	net/lwip/core/netif.c	/^netif_loop_output(struct netif *netif, struct pbuf *p,$/;"	f
netif_poll	net/lwip/core/netif.c	/^netif_poll(struct netif *netif)$/;"	f
netif_poll_all	net/lwip/core/netif.c	/^netif_poll_all(void)$/;"	f
netif_remove	net/lwip/core/netif.c	/^void netif_remove(struct netif * netif)$/;"	f
netif_set_addr	net/lwip/core/netif.c	/^netif_set_addr(struct netif *netif, struct ip_addr *ipaddr, struct ip_addr *netmask,$/;"	f
netif_set_default	net/lwip/core/netif.c	/^netif_set_default(struct netif *netif)$/;"	f
netif_set_down	net/lwip/core/netif.c	/^void netif_set_down(struct netif *netif)$/;"	f
netif_set_gw	net/lwip/core/netif.c	/^netif_set_gw(struct netif *netif, struct ip_addr *gw)$/;"	f
netif_set_ipaddr	net/lwip/core/netif.c	/^netif_set_ipaddr(struct netif *netif, struct ip_addr *ipaddr)$/;"	f
netif_set_link_callback	net/lwip/core/netif.c	/^void netif_set_link_callback(struct netif *netif, void (* link_callback)(struct netif *netif ))$/;"	f
netif_set_link_down	net/lwip/core/netif.c	/^void netif_set_link_down(struct netif *netif )$/;"	f
netif_set_link_up	net/lwip/core/netif.c	/^void netif_set_link_up(struct netif *netif )$/;"	f
netif_set_netmask	net/lwip/core/netif.c	/^netif_set_netmask(struct netif *netif, struct ip_addr *netmask)$/;"	f
netif_set_status_callback	net/lwip/core/netif.c	/^void netif_set_status_callback(struct netif *netif, void (* status_callback)(struct netif *netif ))$/;"	f
netif_set_up	net/lwip/core/netif.c	/^void netif_set_up(struct netif *netif)$/;"	f
netifapi_autoip_start	net/lwip/include/lwip/netifapi.h	91;"	d
netifapi_autoip_stop	net/lwip/include/lwip/netifapi.h	92;"	d
netifapi_dhcp_start	net/lwip/include/lwip/netifapi.h	89;"	d
netifapi_dhcp_stop	net/lwip/include/lwip/netifapi.h	90;"	d
netifapi_msg	net/lwip/include/lwip/netifapi.h	/^struct netifapi_msg {$/;"	s
netifapi_msg_msg	net/lwip/include/lwip/netifapi.h	/^struct netifapi_msg_msg {$/;"	s
netifapi_netif_add	net/lwip/api/netifapi.c	/^netifapi_netif_add(struct netif *netif,$/;"	f
netifapi_netif_common	net/lwip/api/netifapi.c	/^netifapi_netif_common( struct netif *netif,$/;"	f
netifapi_netif_remove	net/lwip/include/lwip/netifapi.h	85;"	d
netifapi_netif_set_default	net/lwip/include/lwip/netifapi.h	88;"	d
netifapi_netif_set_down	net/lwip/include/lwip/netifapi.h	87;"	d
netifapi_netif_set_up	net/lwip/include/lwip/netifapi.h	86;"	d
netifapimsg	net/lwip/include/lwip/tcpip.h	/^    struct netifapi_msg *netifapimsg;$/;"	m	union:tcpip_msg::__anon17	typeref:struct:tcpip_msg::__anon17::netifapi_msg
netmask	net/lwip/include/lwip/netif.h	/^  struct ip_addr netmask;$/;"	m	struct:netif	typeref:struct:netif::ip_addr
netmask	net/lwip/include/lwip/netifapi.h	/^      struct ip_addr *netmask;$/;"	m	struct:netifapi_msg_msg::__anon22::__anon23	typeref:struct:netifapi_msg_msg::__anon22::__anon23::ip_addr
netmask	net/lwip/netif/ppp/ppp.h	/^  struct ip_addr our_ipaddr, his_ipaddr, netmask, dns1, dns2;$/;"	m	struct:ppp_addrs	typeref:struct:ppp_addrs::
network_phase	net/lwip/netif/ppp/auth.c	/^network_phase(int unit)$/;"	f	file:
newPage	obj/kern/kernel.asm	/^		newPage = page_alloc(0);$/;"	d
new_entry	obj/net/ns.asm	/^        new_entry = memp_malloc(MEMP_ARP_QUEUE);$/;"	d
new_nblocks	obj/fs/fs.asm	/^	new_nblocks = (newsize + BLKSIZE - 1) \/ BLKSIZE;$/;"	d
new_tot_len	obj/net/ns.asm	/^        new_tot_len = (u16_t)(inseg.p->tot_len - off);$/;"	d
newconn	obj/net/ns.asm	/^    newconn = NULL;$/;"	d
newconn	obj/net/ns.asm	/^  newconn = netconn_accept(sock->conn);$/;"	d
newconn	obj/net/ns.asm	/^  newconn = netconn_alloc(conn->type, conn->callback);$/;"	d
newfd	obj/fs/fs.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/net/ns.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/net/testinput.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/net/testoutput.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/badsegment.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/breakpoint.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/buggyhello.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/buggyhello2.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/cat.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/divzero.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/dumbfork.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/echo.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/echosrv.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/echotest.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/evilhello.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/fairness.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultalloc.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultallocbad.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultbadhandler.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultdie.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultevilhandler.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultnostack.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultread.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultreadkernel.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultregs.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultwrite.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultwritekernel.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/forktree.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/hello.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/httpd.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/icode.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/idle.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/init.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/ls.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/lsfd.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/num.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/pingpong.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/pingpongs.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/primes.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/primespipe.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/sendpage.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/sh.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/softint.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/spawnhello.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/spin.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/stresssched.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testbss.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testfdsharing.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testfile.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testkbd.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testpipe.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testpiperace.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testpiperace2.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testpteshare.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testshell.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testtime.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/yield.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newsize	obj/net/ns.asm	/^    newsize = MIN_SIZE_ALIGNED;$/;"	d
newsize	obj/net/ns.asm	/^  newsize = LWIP_MEM_ALIGN_SIZE(newsize);$/;"	d
newsock	obj/net/ns.asm	/^  newsock = alloc_socket(newconn);$/;"	d
next	net/lwip/api/sockets.c	/^  struct lwip_select_cb *next;$/;"	m	struct:lwip_select_cb	typeref:struct:lwip_select_cb::lwip_select_cb	file:
next	net/lwip/core/mem.c	/^  mem_size_t next;$/;"	m	struct:mem	file:
next	net/lwip/core/memp.c	/^  struct memp *next;$/;"	m	struct:memp	typeref:struct:memp::memp	file:
next	net/lwip/include/ipv4/lwip/igmp.h	/^  struct igmp_group *next;$/;"	m	struct:igmp_group	typeref:struct:igmp_group::igmp_group
next	net/lwip/include/ipv4/lwip/ip_frag.h	/^  struct ip_reassdata *next;$/;"	m	struct:ip_reassdata	typeref:struct:ip_reassdata::ip_reassdata
next	net/lwip/include/lwip/netif.h	/^  struct netif *next;$/;"	m	struct:netif	typeref:struct:netif::netif
next	net/lwip/include/lwip/pbuf.h	/^  struct pbuf *next;$/;"	m	struct:pbuf	typeref:struct:pbuf::pbuf
next	net/lwip/include/lwip/raw.h	/^  struct raw_pcb *next;$/;"	m	struct:raw_pcb	typeref:struct:raw_pcb::raw_pcb
next	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind *next;$/;"	m	struct:snmp_varbind	typeref:struct:snmp_varbind::snmp_varbind
next	net/lwip/include/lwip/snmp_structs.h	/^  struct mib_list_node *next;$/;"	m	struct:mib_list_node	typeref:struct:mib_list_node::mib_list_node
next	net/lwip/include/lwip/sys.h	/^  struct sys_timeo *next;$/;"	m	struct:sys_timeo	typeref:struct:sys_timeo::sys_timeo
next	net/lwip/include/lwip/sys.h	/^  struct sys_timeo *next;$/;"	m	struct:sys_timeouts	typeref:struct:sys_timeouts::sys_timeo
next	net/lwip/include/lwip/tcp.h	/^  struct tcp_seg *next;    \/* used when putting segements on a queue *\/$/;"	m	struct:tcp_seg	typeref:struct:tcp_seg::tcp_seg
next	net/lwip/include/lwip/udp.h	/^  struct udp_pcb *next;$/;"	m	struct:udp_pcb	typeref:struct:udp_pcb::udp_pcb
next	net/lwip/include/netif/etharp.h	/^  struct etharp_q_entry *next;$/;"	m	struct:etharp_q_entry	typeref:struct:etharp_q_entry::etharp_q_entry
next	net/lwip/netif/ppp/auth.c	/^  struct wordlist *next;$/;"	m	struct:wordlist	typeref:struct:wordlist::wordlist	file:
next	obj/net/ns.asm	/^                    next = cseg->next;$/;"	d
next	obj/net/ns.asm	/^        next = pcb->unacked;$/;"	d
next	obj/net/ns.asm	/^      next = pcb->unsent;$/;"	d
next	obj/net/ns.asm	/^    next = mem2->next;$/;"	d
next	obj/net/ns.asm	/^    next = seg->next;$/;"	d
next_i	net/serv.c	/^static int next_i(int i) { return (i+1) % QUEUE_SIZE; }$/;"	f	file:
next_pbuf	net/lwip/core/ipv4/ip_frag.c	/^  struct pbuf *next_pbuf;$/;"	m	struct:ip_reass_helper	typeref:struct:ip_reass_helper::pbuf	file:
nextfree	obj/kern/kernel.asm	/^		nextfree = ROUNDUP((char *) end, PGSIZE);$/;"	d
nextfree	obj/kern/kernel.asm	/^	nextfree = ROUNDUP((char *) nextfree, PGSIZE);$/;"	d
nextfree	obj/kern/kernel.asm	/^	nextfree = nextfree + n;$/;"	d
nexthdr	net/lwip/include/ipv6/lwip/ip.h	/^  u8_t nexthdr;             \/* next header *\/$/;"	m	struct:ip_hdr
nextq	net/lwip/jos/arch/sys_arch.c	/^    int head, nextq;$/;"	m	struct:sys_mbox_entry	file:
nfb	obj/net/ns.asm	/^  nfb = (mtu - IP_HLEN) \/ 8;$/;"	d
nflag	obj/user/echo.asm	/^		nflag = 1;$/;"	d
nflag	obj/user/echo.asm	/^	nflag = 0;$/;"	d
nif	net/serv.c	/^struct netif nif;$/;"	v	typeref:struct:netif
nloff	obj/user/testshell.asm	/^			nloff = off+1;$/;"	d
nloff	obj/user/testshell.asm	/^	nloff = 0;$/;"	d
nmem	obj/net/ns.asm	/^  nmem = (struct mem *)&ram[mem->next];$/;"	d
nn	obj/fs/fs.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/net/ns.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/net/testinput.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/net/testoutput.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/badsegment.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/breakpoint.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/buggyhello.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/buggyhello2.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/cat.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/divzero.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/dumbfork.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/echo.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/echosrv.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/echotest.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/evilhello.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/fairness.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultalloc.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultallocbad.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultbadhandler.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultdie.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultevilhandler.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultnostack.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultread.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultreadkernel.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultregs.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultwrite.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultwritekernel.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/forktree.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/hello.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/httpd.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/icode.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/idle.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/init.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/ls.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/lsfd.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/num.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/pingpong.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/pingpongs.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/primes.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/primespipe.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/sendpage.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/sh.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/softint.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/spawnhello.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/spin.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/stresssched.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testbss.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testfdsharing.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testfile.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testkbd.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testpipe.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testpiperace.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testpiperace2.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testpteshare.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testshell.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testtime.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/yield.asm	/^		nn = thisenv->env_runs;$/;"	d
node_stack	net/lwip/core/snmp/mib_structs.c	/^static struct nse node_stack[NODE_STACK_SIZE];$/;"	v	typeref:struct:nse	file:
node_stack_cnt	net/lwip/core/snmp/mib_structs.c	/^static u8_t node_stack_cnt;$/;"	v	file:
node_type	net/lwip/include/lwip/snmp_structs.h	/^  const u8_t node_type;$/;"	m	struct:mib_array_node
node_type	net/lwip/include/lwip/snmp_structs.h	/^  const u8_t node_type;$/;"	m	struct:mib_node
node_type	net/lwip/include/lwip/snmp_structs.h	/^  u8_t node_type;$/;"	m	struct:mib_external_node
node_type	net/lwip/include/lwip/snmp_structs.h	/^  u8_t node_type;$/;"	m	struct:mib_list_rootnode
node_type	net/lwip/include/lwip/snmp_structs.h	/^  u8_t node_type;$/;"	m	struct:mib_ram_array_node
noleafs_get_object_def	net/lwip/core/snmp/mib2.c	/^noleafs_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f
noleafs_get_value	net/lwip/core/snmp/mib2.c	/^noleafs_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f
noleafs_set_test	net/lwip/core/snmp/mib2.c	/^noleafs_set_test(struct obj_def *od, u16_t len, void *value)$/;"	f
noleafs_set_value	net/lwip/core/snmp/mib2.c	/^noleafs_set_value(struct obj_def *od, u16_t len, void *value)$/;"	f
normalmap	kern/console.c	/^static uint8_t normalmap[256] =$/;"	v	file:
now	obj/net/ns.asm	/^	now = sys_time_msec();$/;"	d
np_down	net/lwip/netif/ppp/auth.c	/^np_down(int unit, u16_t proto)$/;"	f
np_finished	net/lwip/netif/ppp/auth.c	/^np_finished(int unit, u16_t proto)$/;"	f
np_up	net/lwip/netif/ppp/auth.c	/^np_up(int unit, u16_t proto)$/;"	f
npages	kern/pmap.c	/^size_t npages;			\/\/ Amount of physical memory (in pages)$/;"	v
npages	obj/kern/kernel.asm	/^		npages = (EXTPHYSMEM \/ PGSIZE) + npages_extmem;$/;"	d
npages	obj/kern/kernel.asm	/^		npages = npages_basemem;$/;"	d
npages_basemem	kern/pmap.c	/^static size_t npages_basemem;	\/\/ Amount of base memory (in pages)$/;"	v	file:
npages_basemem	obj/kern/kernel.asm	/^	npages_basemem = (nvram_read(NVRAM_BASELO) * 1024) \/ PGSIZE;$/;"	d
npages_extmem	obj/kern/kernel.asm	/^	npages_extmem = (nvram_read(NVRAM_EXTLO) * 1024) \/ PGSIZE;$/;"	d
npcb	obj/net/ns.asm	/^    npcb = tcp_alloc(pcb->prio);$/;"	d
npioctl	net/lwip/netif/ppp/ppp.c	/^struct npioctl {$/;"	s	file:
nptr	net/lwip/include/lwip/snmp_structs.h	/^  struct mib_node **nptr;$/;"	m	struct:mib_ram_array_node	typeref:struct:mib_ram_array_node::mib_node
nptr	net/lwip/include/lwip/snmp_structs.h	/^  struct mib_node *nptr;$/;"	m	struct:mib_list_node	typeref:struct:mib_list_node::mib_node
nptr	net/lwip/include/lwip/snmp_structs.h	/^  struct mib_node* const *nptr;$/;"	m	struct:mib_array_node
nready	obj/net/ns.asm	/^    nready = lwip_selscan(maxfdp1, &lreadset, &lwriteset, &lexceptset);$/;"	d
nready	obj/net/ns.asm	/^  nready = lwip_selscan(maxfdp1, &lreadset, &lwriteset, &lexceptset);$/;"	d
nrtx	net/lwip/include/lwip/tcp.h	/^  u8_t nrtx;    \/* number of retransmissions *\/$/;"	m	struct:tcp_pcb
nse	net/lwip/core/snmp/mib_structs.c	/^struct nse$/;"	s	file:
nsenv	obj/fs/fs.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/net/ns.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/net/testinput.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/net/testoutput.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/badsegment.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/breakpoint.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/buggyhello.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/buggyhello2.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/cat.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/divzero.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/dumbfork.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/echo.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/echosrv.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/echotest.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/evilhello.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/fairness.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultalloc.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultallocbad.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultbadhandler.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultdie.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultevilhandler.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultnostack.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultread.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultreadkernel.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultregs.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultwrite.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultwritekernel.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/forktree.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/hello.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/httpd.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/icode.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/idle.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/init.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/ls.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/lsfd.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/num.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/pingpong.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/pingpongs.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/primes.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/primespipe.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/sendpage.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/sh.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/softint.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/spawnhello.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/spin.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/stresssched.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testbss.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testfdsharing.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testfile.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testkbd.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testpipe.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testpiperace.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testpiperace2.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testpteshare.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testshell.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testtime.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/yield.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsipc	lib/nsipc.c	/^nsipc(unsigned type)$/;"	f	file:
nsipc_accept	lib/nsipc.c	/^nsipc_accept(int s, struct sockaddr *addr, socklen_t *addrlen)$/;"	f
nsipc_bind	lib/nsipc.c	/^nsipc_bind(int s, struct sockaddr *name, socklen_t namelen)$/;"	f
nsipc_close	lib/nsipc.c	/^nsipc_close(int s)$/;"	f
nsipc_connect	lib/nsipc.c	/^nsipc_connect(int s, const struct sockaddr *name, socklen_t namelen)$/;"	f
nsipc_listen	lib/nsipc.c	/^nsipc_listen(int s, int backlog)$/;"	f
nsipc_recv	lib/nsipc.c	/^nsipc_recv(int s, void *mem, int len, unsigned int flags)$/;"	f
nsipc_send	lib/nsipc.c	/^nsipc_send(int s, const void *buf, int size, unsigned int flags)$/;"	f
nsipc_shutdown	lib/nsipc.c	/^nsipc_shutdown(int s, int how)$/;"	f
nsipc_socket	lib/nsipc.c	/^nsipc_socket(int domain, int type, int protocol)$/;"	f
nsipcbuf	lib/nsipc.c	/^union Nsipc nsipcbuf __attribute__((aligned(PGSIZE)));$/;"	v	typeref:union:Nsipc
nsock	obj/net/ns.asm	/^  nsock = &sockets[newsock];$/;"	d
nsoutreq	net/output.c	/^union Nsipc *nsoutreq = (union Nsipc *)0x0ffff000;$/;"	v	typeref:union:Nsipc
ntohl	net/lwip/core/ipv4/inet.c	/^ntohl(u32_t n)$/;"	f
ntohl	net/lwip/include/ipv4/lwip/inet.h	62;"	d
ntohl	net/lwip/include/ipv4/lwip/inet.h	73;"	d
ntohl	net/lwip/include/ipv4/lwip/inet.h	80;"	d
ntohl	net/lwip/include/ipv4/lwip/inet.h	86;"	d
ntohs	net/lwip/core/ipv4/inet.c	/^ntohs(u16_t n)$/;"	f
ntohs	net/lwip/include/ipv4/lwip/inet.h	59;"	d
ntohs	net/lwip/include/ipv4/lwip/inet.h	71;"	d
ntohs	net/lwip/include/ipv4/lwip/inet.h	78;"	d
ntohs	net/lwip/include/ipv4/lwip/inet.h	84;"	d
null_login	net/lwip/netif/ppp/auth.c	/^null_login(int unit)$/;"	f	file:
nullreturn	obj/net/ns.asm	/^nullreturn:$/;"	l
num	net/lwip/include/lwip/netif.h	/^  u8_t num;$/;"	m	struct:netif
num	obj/fs/fs.asm	/^				num = -(long long) num;$/;"	d
num	obj/fs/fs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/fs/fs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/fs/fs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/kern/kernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/kern/kernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/kern/kernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/kern/kernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/net/ns.asm	/^				num = -(long long) num;$/;"	d
num	obj/net/ns.asm	/^			num = (unsigned long long)$/;"	d
num	obj/net/ns.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/net/ns.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/net/ns.asm	/^  num = name[2] - '0';$/;"	d
num	obj/net/testinput.asm	/^				num = -(long long) num;$/;"	d
num	obj/net/testinput.asm	/^			num = (unsigned long long)$/;"	d
num	obj/net/testinput.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/net/testinput.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/net/testoutput.asm	/^				num = -(long long) num;$/;"	d
num	obj/net/testoutput.asm	/^			num = (unsigned long long)$/;"	d
num	obj/net/testoutput.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/net/testoutput.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/badsegment.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/badsegment.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/breakpoint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/breakpoint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/breakpoint.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/breakpoint.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/buggyhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/buggyhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/buggyhello2.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello2.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello2.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/buggyhello2.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/cat.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/cat.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/cat.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/cat.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/divzero.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/divzero.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/dumbfork.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/dumbfork.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/dumbfork.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/dumbfork.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/echo.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/echo.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/echo.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/echo.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/echosrv.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/echosrv.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/echosrv.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/echosrv.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/echotest.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/echotest.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/echotest.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/echotest.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/evilhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/evilhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/evilhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/evilhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/fairness.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/fairness.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/fairness.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/fairness.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultalloc.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultalloc.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultalloc.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultalloc.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultallocbad.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultallocbad.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultallocbad.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultallocbad.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultbadhandler.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultdie.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultdie.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultdie.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultdie.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultevilhandler.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultnostack.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultnostack.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultnostack.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultnostack.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultread.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultread.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultregs.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultregs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultregs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultregs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultwrite.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwrite.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwrite.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultwrite.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultwritekernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/forktree.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/forktree.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/hello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/hello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/httpd.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/httpd.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/httpd.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/httpd.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/icode.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/icode.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/icode.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/icode.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/idle.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/idle.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/idle.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/idle.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/init.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/init.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/init.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/init.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/ls.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/ls.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/ls.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/ls.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/lsfd.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/lsfd.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/lsfd.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/lsfd.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/num.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/num.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/num.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/num.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/pingpong.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/pingpong.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/pingpong.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/pingpong.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/pingpongs.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/pingpongs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/pingpongs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/pingpongs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/primes.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/primes.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/primes.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/primes.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/primespipe.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/primespipe.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/primespipe.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/primespipe.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/sendpage.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/sendpage.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/sendpage.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/sendpage.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/sh.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/sh.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/sh.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/sh.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/softint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/softint.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/spawnhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/spawnhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/spawnhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/spawnhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/spin.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/spin.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/stresssched.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/stresssched.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/stresssched.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/stresssched.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testbss.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testbss.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testfdsharing.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testfdsharing.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testfdsharing.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testfdsharing.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testfile.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testfile.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testfile.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testfile.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testkbd.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testkbd.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testkbd.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testkbd.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testpipe.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testpipe.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testpipe.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testpipe.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testpiperace.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testpiperace.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testpiperace.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testpiperace.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testpiperace2.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testpiperace2.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testpiperace2.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testpiperace2.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testpteshare.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testpteshare.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testpteshare.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testpteshare.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testshell.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testshell.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testshell.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testshell.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testtime.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testtime.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testtime.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testtime.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/yield.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/yield.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	user/num.c	/^num(int f, const char *s)$/;"	f
num_np_open	net/lwip/netif/ppp/auth.c	/^static int num_np_open;$/;"	v	file:
num_np_up	net/lwip/netif/ppp/auth.c	/^static int num_np_up;$/;"	v	file:
numanswers	net/lwip/core/dns.c	/^  u16_t numanswers;$/;"	m	struct:dns_hdr	file:
numauthrr	net/lwip/core/dns.c	/^  u16_t numauthrr;$/;"	m	struct:dns_hdr	file:
number	obj/fs/fs.asm	/^		number:$/;"	l
number	obj/kern/kernel.asm	/^		number:$/;"	l
number	obj/net/ns.asm	/^		number:$/;"	l
number	obj/net/testinput.asm	/^		number:$/;"	l
number	obj/net/testoutput.asm	/^		number:$/;"	l
number	obj/user/badsegment.asm	/^		number:$/;"	l
number	obj/user/breakpoint.asm	/^		number:$/;"	l
number	obj/user/buggyhello.asm	/^		number:$/;"	l
number	obj/user/buggyhello2.asm	/^		number:$/;"	l
number	obj/user/cat.asm	/^		number:$/;"	l
number	obj/user/divzero.asm	/^		number:$/;"	l
number	obj/user/dumbfork.asm	/^		number:$/;"	l
number	obj/user/echo.asm	/^		number:$/;"	l
number	obj/user/echosrv.asm	/^		number:$/;"	l
number	obj/user/echotest.asm	/^		number:$/;"	l
number	obj/user/evilhello.asm	/^		number:$/;"	l
number	obj/user/fairness.asm	/^		number:$/;"	l
number	obj/user/faultalloc.asm	/^		number:$/;"	l
number	obj/user/faultallocbad.asm	/^		number:$/;"	l
number	obj/user/faultbadhandler.asm	/^		number:$/;"	l
number	obj/user/faultdie.asm	/^		number:$/;"	l
number	obj/user/faultevilhandler.asm	/^		number:$/;"	l
number	obj/user/faultnostack.asm	/^		number:$/;"	l
number	obj/user/faultread.asm	/^		number:$/;"	l
number	obj/user/faultreadkernel.asm	/^		number:$/;"	l
number	obj/user/faultregs.asm	/^		number:$/;"	l
number	obj/user/faultwrite.asm	/^		number:$/;"	l
number	obj/user/faultwritekernel.asm	/^		number:$/;"	l
number	obj/user/forktree.asm	/^		number:$/;"	l
number	obj/user/hello.asm	/^		number:$/;"	l
number	obj/user/httpd.asm	/^		number:$/;"	l
number	obj/user/icode.asm	/^		number:$/;"	l
number	obj/user/idle.asm	/^		number:$/;"	l
number	obj/user/init.asm	/^		number:$/;"	l
number	obj/user/ls.asm	/^		number:$/;"	l
number	obj/user/lsfd.asm	/^		number:$/;"	l
number	obj/user/num.asm	/^		number:$/;"	l
number	obj/user/pingpong.asm	/^		number:$/;"	l
number	obj/user/pingpongs.asm	/^		number:$/;"	l
number	obj/user/primes.asm	/^		number:$/;"	l
number	obj/user/primespipe.asm	/^		number:$/;"	l
number	obj/user/sendpage.asm	/^		number:$/;"	l
number	obj/user/sh.asm	/^		number:$/;"	l
number	obj/user/softint.asm	/^		number:$/;"	l
number	obj/user/spawnhello.asm	/^		number:$/;"	l
number	obj/user/spin.asm	/^		number:$/;"	l
number	obj/user/stresssched.asm	/^		number:$/;"	l
number	obj/user/testbss.asm	/^		number:$/;"	l
number	obj/user/testfdsharing.asm	/^		number:$/;"	l
number	obj/user/testfile.asm	/^		number:$/;"	l
number	obj/user/testkbd.asm	/^		number:$/;"	l
number	obj/user/testpipe.asm	/^		number:$/;"	l
number	obj/user/testpiperace.asm	/^		number:$/;"	l
number	obj/user/testpiperace2.asm	/^		number:$/;"	l
number	obj/user/testpteshare.asm	/^		number:$/;"	l
number	obj/user/testshell.asm	/^		number:$/;"	l
number	obj/user/testtime.asm	/^		number:$/;"	l
number	obj/user/yield.asm	/^		number:$/;"	l
numdns	net/lwip/core/dns.c	/^  u8_t  numdns;$/;"	m	struct:dns_table_entry	file:
numextrarr	net/lwip/core/dns.c	/^  u16_t numextrarr;$/;"	m	struct:dns_hdr	file:
numloops	net/lwip/netif/ppp/lcp.h	/^    int numloops;                \/* Number of loops during magic number neg. *\/$/;"	m	struct:lcp_options
numquestions	net/lwip/core/dns.c	/^  u16_t numquestions;$/;"	m	struct:dns_hdr	file:
nva	obj/fs/fs.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/net/ns.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/net/testinput.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/net/testoutput.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/badsegment.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/breakpoint.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/buggyhello.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/buggyhello2.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/cat.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/divzero.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/dumbfork.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/echo.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/echosrv.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/echotest.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/evilhello.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/fairness.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultalloc.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultallocbad.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultbadhandler.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultdie.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultevilhandler.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultnostack.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultread.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultreadkernel.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultregs.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultwrite.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultwritekernel.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/forktree.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/hello.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/httpd.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/icode.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/idle.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/init.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/ls.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/lsfd.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/num.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/pingpong.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/pingpongs.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/primes.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/primespipe.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/sendpage.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/sh.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/softint.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/spawnhello.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/spin.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/stresssched.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testbss.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testfdsharing.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testfile.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testkbd.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testpipe.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testpiperace.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testpiperace2.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testpteshare.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testshell.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testtime.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/yield.asm	/^	nva = fd2data(newfd);$/;"	d
nvram_read	kern/pmap.c	/^nvram_read(int r)$/;"	f	file:
nwrap	obj/net/ns.asm	/^	nwrap = 0;$/;"	d
nwrap	obj/user/httpd.asm	/^	nwrap = 0;$/;"	d
o	obj/fs/fs.asm	/^	o = &opentab[fileid % MAXOPEN];$/;"	d
o_fd	fs/serv.c	/^	struct Fd *o_fd;	\/\/ Fd page$/;"	m	struct:OpenFile	typeref:struct:OpenFile::Fd	file:
o_file	fs/serv.c	/^	struct File *o_file;	\/\/ mapped descriptor for open file$/;"	m	struct:OpenFile	typeref:struct:OpenFile::File	file:
o_fileid	fs/serv.c	/^	uint32_t o_fileid;	\/\/ file id$/;"	m	struct:OpenFile	file:
o_mode	fs/serv.c	/^	int o_mode;		\/\/ open mode$/;"	m	struct:OpenFile	file:
obj_def	net/lwip/include/lwip/snmp_structs.h	/^struct obj_def$/;"	s
objectidncpy	net/lwip/core/snmp/mib2.c	/^void objectidncpy(s32_t *dst, s32_t *src, u8_t n)$/;"	f
objid	net/lwip/include/lwip/snmp_structs.h	/^  const s32_t *objid;$/;"	m	struct:mib_array_node
objid	net/lwip/include/lwip/snmp_structs.h	/^  s32_t *objid;$/;"	m	struct:mib_ram_array_node
objid	net/lwip/include/lwip/snmp_structs.h	/^  s32_t objid;$/;"	m	struct:mib_list_node
ocstrncpy	net/lwip/core/snmp/mib2.c	/^void ocstrncpy(u8_t *dst, u8_t *src, u8_t n)$/;"	f
octetptr	obj/net/ns.asm	/^  octetptr = (u8_t*)dataptr;$/;"	d
oemlength	kern/mpconfig.c	/^	uint16_t oemlength;             \/\/ OEM table length$/;"	m	struct:mpconf	file:
oemtable	kern/mpconfig.c	/^	physaddr_t oemtable;            \/\/ OEM table pointer$/;"	m	struct:mpconf	file:
off	obj/net/ns.asm	/^      off = pcb->rcv_nxt - seqno;$/;"	d
off_t	fs/fsformat.c	/^typedef uint32_t off_t;$/;"	t	file:
off_t	fs/fsformat.c	20;"	d	file:
off_t	fs/fsformat.c	6;"	d	file:
off_t	inc/types.h	/^typedef int32_t off_t;$/;"	t
offered_bc_addr	net/lwip/include/lwip/dhcp.h	/^  struct ip_addr offered_bc_addr;$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr
offered_dns_addr	net/lwip/include/lwip/dhcp.h	/^  struct ip_addr offered_dns_addr[DHCP_MAX_DNS]; \/* DNS server addresses *\/$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr
offered_gw_addr	net/lwip/include/lwip/dhcp.h	/^  struct ip_addr offered_gw_addr;$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr
offered_ip_addr	net/lwip/include/lwip/dhcp.h	/^  struct ip_addr offered_ip_addr;$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr
offered_sn_mask	net/lwip/include/lwip/dhcp.h	/^  struct ip_addr offered_sn_mask;$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr
offered_t0_lease	net/lwip/include/lwip/dhcp.h	/^  u32_t offered_t0_lease; \/* lease period (in seconds) *\/$/;"	m	struct:dhcp
offered_t1_renew	net/lwip/include/lwip/dhcp.h	/^  u32_t offered_t1_renew; \/* recommended renew time (usually 50% of lease period) *\/$/;"	m	struct:dhcp
offered_t2_rebind	net/lwip/include/lwip/dhcp.h	/^  u32_t offered_t2_rebind; \/* recommended rebind time (usually 66% of lease period)  *\/$/;"	m	struct:dhcp
offset	obj/boot/boot.asm	/^	offset = (offset \/ SECTSIZE) + 1;$/;"	d
offset	obj/net/ns.asm	/^      offset = 0;$/;"	d
offset	obj/net/ns.asm	/^  offset = (ntohs(IPH_OFFSET(fraghdr)) & IP_OFFMASK) * 8;$/;"	d
offset	obj/net/ns.asm	/^  offset = 0;$/;"	d
offset_from	obj/net/ns.asm	/^      offset_from = 0;$/;"	d
offset_to	obj/net/ns.asm	/^      offset_to = 0;$/;"	d
offsetof	inc/types.h	71;"	d
ofo	obj/net/ns.asm	/^  ofo = tmp & IP_OFFMASK;$/;"	d
old_addrs	net/lwip/netif/ppp/ipcp.h	/^  u_int   old_addrs     : 1; \/* Use old (IP-Addresses) option? *\/$/;"	m	struct:ipcp_options
old_cwnd	obj/net/ns.asm	/^        old_cwnd = pcb->cwnd;$/;"	d
old_nblocks	obj/fs/fs.asm	/^	old_nblocks = (f->f_size + BLKSIZE - 1) \/ BLKSIZE;$/;"	d
old_pending	obj/net/ns.asm	/^          old_pending = i;$/;"	d
old_queue	obj/net/ns.asm	/^          old_queue = i;$/;"	d
old_stable	obj/net/ns.asm	/^        old_stable = i;$/;"	d
old_vj	net/lwip/netif/ppp/ipcp.h	/^  u_int   old_vj        : 1; \/* use old (short) form of VJ option? *\/$/;"	m	struct:ipcp_options
oldest	obj/net/ns.asm	/^          oldest = r;$/;"	d
oldest	obj/net/ns.asm	/^    oldest = NULL;$/;"	d
olen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t olen;$/;"	m	struct:snmp_varbind
olenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t olenlen;$/;"	m	struct:snmp_varbind
omf	obj/net/ns.asm	/^  omf = tmp & IP_MF;$/;"	d
ooseq	net/lwip/include/lwip/tcp.h	/^  struct tcp_seg *ooseq;    \/* Received out of sequence segments. *\/$/;"	m	struct:tcp_pcb	typeref:struct:tcp_pcb::tcp_seg
op_completed	net/lwip/include/lwip/api.h	/^  sys_sem_t op_completed;$/;"	m	struct:netconn
open	inc/fs.h	/^	} open;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_open
open	lib/file.c	/^open(const char *path, int mode)$/;"	f
open	net/lwip/netif/ppp/ppp.h	/^    void (*open) (int unit);$/;"	m	struct:protent
openFlag	net/lwip/netif/ppp/ppp.c	/^  char openFlag;                \/* True when in use. *\/$/;"	m	struct:PPPControl_s	file:
opencons	lib/console.c	/^opencons(void)$/;"	f
opendisk	fs/fsformat.c	/^opendisk(const char *name)$/;"	f
openfile_alloc	fs/serv.c	/^openfile_alloc(struct OpenFile **o)$/;"	f
openfile_lookup	fs/serv.c	/^openfile_lookup(envid_t envid, uint32_t fileid, struct OpenFile **po)$/;"	f
opentab	fs/serv.c	/^struct OpenFile opentab[MAXOPEN] = {$/;"	v	typeref:struct:OpenFile
opt	obj/net/ns.asm	/^      opt = opts[c];$/;"	d
optdata	obj/net/ns.asm	/^    optdata = TCP_BUILD_MSS_OPTION();$/;"	d
optdata	obj/net/ns.asm	/^  optdata = TCP_BUILD_MSS_OPTION();$/;"	d
opterr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER opterr;           \/* Error in options. *\/$/;"	m	struct:stats_proto
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_BROADCAST);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_DNS_SERVER);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_LEASE_TIME);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_ROUTER);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_SUBNET_MASK);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_T1);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_T2);$/;"	d
options	obj/net/ns.asm	/^        options = (u8_t *)&dhcp->msg_in->file;$/;"	d
options	obj/net/ns.asm	/^        options = (u8_t *)&dhcp->msg_in->sname;$/;"	d
options_in	net/lwip/include/lwip/dhcp.h	/^  struct dhcp_msg *options_in; $/;"	m	struct:dhcp	typeref:struct:dhcp::dhcp_msg
options_in_len	net/lwip/include/lwip/dhcp.h	/^  u16_t options_in_len;$/;"	m	struct:dhcp
options_out_len	net/lwip/include/lwip/dhcp.h	/^  u16_t options_out_len; \/* outgoing msg options length *\/$/;"	m	struct:dhcp
options_ptr	obj/net/ns.asm	/^  options_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_MESSAGE_TYPE);$/;"	d
optlen	net/lwip/api/sockets.c	/^  socklen_t *optlen;$/;"	m	struct:lwip_setgetsockopt_data	file:
optname	net/lwip/api/sockets.c	/^  int optname;$/;"	m	struct:lwip_setgetsockopt_data	file:
optname	obj/net/ns.asm	/^  optname = data->optname;$/;"	d
opts	obj/net/ns.asm	/^  opts = (u8_t *)tcphdr + TCP_HLEN;$/;"	d
optval	net/lwip/api/sockets.c	/^  void *optval;$/;"	m	struct:lwip_setgetsockopt_data	file:
optval	obj/net/ns.asm	/^  optval = data->optval;$/;"	d
original_iphdr	obj/net/ns.asm	/^  original_iphdr = p->payload;$/;"	d
other_datagrams	obj/net/ns.asm	/^    other_datagrams = 0;$/;"	d
our_ipaddr	net/lwip/netif/ppp/ppp.h	/^  struct ip_addr our_ipaddr, his_ipaddr, netmask, dns1, dns2;$/;"	m	struct:ppp_addrs	typeref:struct:ppp_addrs::ip_addr
our_name	net/lwip/netif/ppp/ppp.h	/^  char our_name   [MAXNAMELEN   + 1]; \/* Our name for authentication purposes *\/$/;"	m	struct:ppp_settings
ouraddr	net/lwip/netif/ppp/ipcp.h	/^  u32_t   ouraddr, hisaddr;  \/* Addresses in NETWORK BYTE ORDER *\/$/;"	m	struct:ipcp_options
out	obj/net/ns.asm	/^out:$/;"	l
out	obj/net/testinput.asm	/^			out = buf + snprintf(buf, end - buf,$/;"	d
outACCM	net/lwip/netif/ppp/ppp.c	/^  ext_accm outACCM;             \/* Async-Ctl-Char-Map for output. *\/$/;"	m	struct:PPPControl_s	file:
outb	inc/x86.h	/^outb(int port, uint8_t data)$/;"	f
outif	obj/net/ns.asm	/^  outif = ip_route(addr);$/;"	d
outl	inc/x86.h	/^outl(int port, uint32_t data)$/;"	f
outpacket_buf	net/lwip/netif/ppp/ppp.c	/^u_char *outpacket_buf[NUM_PPP];  $/;"	v
output	net/lwip/include/lwip/netif.h	/^  err_t (* output)(struct netif *netif, struct pbuf *p,$/;"	m	struct:netif
output	net/output.c	/^output(envid_t ns_envid)$/;"	f
output_envid	net/serv.c	/^static envid_t output_envid;$/;"	v	file:
output_envid	net/testinput.c	/^static envid_t output_envid;$/;"	v	file:
output_envid	net/testoutput.c	/^static envid_t output_envid;$/;"	v	file:
output_envid	obj/net/ns.asm	/^	output_envid = fork();$/;"	d
output_envid	obj/net/ns.asm	/^    output_envid = (envid_t *)netif->state;$/;"	d
output_envid	obj/net/testinput.asm	/^	output_envid = fork();$/;"	d
output_envid	obj/net/testoutput.asm	/^	output_envid = fork();$/;"	d
outsb	inc/x86.h	/^outsb(int port, const void *addr, int cnt)$/;"	f
outsl	inc/x86.h	/^outsl(int port, const void *addr, int cnt)$/;"	f
outsw	inc/x86.h	/^outsw(int port, const void *addr, int cnt)$/;"	f
outvb	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind_root outvb;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_varbind_root
outvb	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind_root outvb;$/;"	m	struct:snmp_msg_trap	typeref:struct:snmp_msg_trap::snmp_varbind_root
outw	inc/x86.h	/^outw(int port, uint16_t data)$/;"	f
ova	obj/fs/fs.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/net/ns.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/net/testinput.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/net/testoutput.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/badsegment.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/breakpoint.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/buggyhello.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/buggyhello2.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/cat.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/divzero.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/dumbfork.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/echo.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/echosrv.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/echotest.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/evilhello.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/fairness.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultalloc.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultallocbad.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultbadhandler.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultdie.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultevilhandler.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultnostack.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultread.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultreadkernel.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultregs.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultwrite.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultwritekernel.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/forktree.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/hello.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/httpd.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/icode.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/idle.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/init.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/ls.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/lsfd.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/num.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/pingpong.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/pingpongs.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/primes.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/primespipe.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/sendpage.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/sh.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/softint.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/spawnhello.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/spin.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/stresssched.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testbss.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testfdsharing.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testfile.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testkbd.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testpipe.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testpiperace.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testpiperace2.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testpteshare.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testshell.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testtime.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/yield.asm	/^	ova = fd2data(oldfd);$/;"	d
overload	obj/net/ns.asm	/^        overload = options[offset++];$/;"	d
p	net/lwip/include/ipv4/lwip/ip_frag.h	/^  struct pbuf *p;$/;"	m	struct:ip_reassdata	typeref:struct:ip_reassdata::pbuf
p	net/lwip/include/lwip/dhcp.h	/^  struct pbuf *p;$/;"	m	struct:dhcp	typeref:struct:dhcp::pbuf
p	net/lwip/include/lwip/netbuf.h	/^  struct pbuf *p, *ptr;$/;"	m	struct:netbuf	typeref:struct:netbuf::pbuf
p	net/lwip/include/lwip/tcp.h	/^  struct pbuf *p;          \/* buffer containing data + TCP header *\/$/;"	m	struct:tcp_seg	typeref:struct:tcp_seg::pbuf
p	net/lwip/include/lwip/tcpip.h	/^      struct pbuf *p;$/;"	m	struct:tcpip_msg::__anon17::__anon18	typeref:struct:tcpip_msg::__anon17::__anon18::pbuf
p	net/lwip/include/netif/etharp.h	/^  struct pbuf *p;$/;"	m	struct:etharp_q_entry	typeref:struct:etharp_q_entry::pbuf
p	obj/fs/fs.asm	/^				p = "(null)";$/;"	d
p	obj/fs/fs.asm	/^		p = path;$/;"	d
p	obj/fs/fs.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/fs/fs.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/kern/kernel.asm	/^				p = "(null)";$/;"	d
p	obj/kern/kernel.asm	/^		p = *(uint16_t *) (bda + 0x13) * 1024;$/;"	d
p	obj/kern/kernel.asm	/^		p = envs;$/;"	d
p	obj/kern/kernel.asm	/^	p = (pte_t*) KADDR(PTE_ADDR(*pgdir));$/;"	d
p	obj/net/ns.asm	/^				p = "(null)";$/;"	d
p	obj/net/ns.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/net/ns.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/net/ns.asm	/^	p = sys_time_msec();$/;"	d
p	obj/net/ns.asm	/^          p = NULL;$/;"	d
p	obj/net/ns.asm	/^          p = p->next;$/;"	d
p	obj/net/ns.asm	/^        p = NULL;$/;"	d
p	obj/net/ns.asm	/^        p = p->next;$/;"	d
p	obj/net/ns.asm	/^        p = pbuf_alloc(PBUF_RAW, p->tot_len, PBUF_RAM);$/;"	d
p	obj/net/ns.asm	/^        p = q;$/;"	d
p	obj/net/ns.asm	/^      p = NULL;$/;"	d
p	obj/net/ns.asm	/^      p = inseg.p;$/;"	d
p	obj/net/ns.asm	/^      p = memp_malloc(MEMP_PBUF_POOL);$/;"	d
p	obj/net/ns.asm	/^      p = q;$/;"	d
p	obj/net/ns.asm	/^      p = r;$/;"	d
p	obj/net/ns.asm	/^    p = (struct pbuf*)mem_malloc(LWIP_MEM_ALIGN_SIZE(SIZEOF_STRUCT_PBUF + offset) + LWIP_MEM_ALIGN_SIZE(length));$/;"	d
p	obj/net/ns.asm	/^    p = ip_reass(p);$/;"	d
p	obj/net/ns.asm	/^    p = ipr->p;$/;"	d
p	obj/net/ns.asm	/^    p = iprh->next_pbuf;$/;"	d
p	obj/net/ns.asm	/^    p = memp_malloc(MEMP_PBUF);$/;"	d
p	obj/net/ns.asm	/^    p = p->next;$/;"	d
p	obj/net/ns.asm	/^    p = pbuf_alloc(PBUF_IP, TCP_HLEN, PBUF_RAM);$/;"	d
p	obj/net/ns.asm	/^    p = q->p;$/;"	d
p	obj/net/ns.asm	/^  p = NULL;$/;"	d
p	obj/net/ns.asm	/^  p = ipr->p;$/;"	d
p	obj/net/ns.asm	/^  p = mem_malloc(count * size);$/;"	d
p	obj/net/ns.asm	/^  p = pbuf_alloc(PBUF_IP, TCP_HLEN + 1, PBUF_RAM);$/;"	d
p	obj/net/ns.asm	/^  p = pbuf_alloc(PBUF_IP, TCP_HLEN, PBUF_RAM);$/;"	d
p	obj/net/ns.asm	/^  p = pbuf_alloc(PBUF_LINK, sizeof(struct etharp_hdr), PBUF_RAM);$/;"	d
p	obj/net/testinput.asm	/^				p = "(null)";$/;"	d
p	obj/net/testinput.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/net/testinput.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/net/testoutput.asm	/^				p = "(null)";$/;"	d
p	obj/net/testoutput.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/net/testoutput.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/badsegment.asm	/^				p = "(null)";$/;"	d
p	obj/user/badsegment.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/badsegment.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/breakpoint.asm	/^				p = "(null)";$/;"	d
p	obj/user/breakpoint.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/breakpoint.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/buggyhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/buggyhello.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/buggyhello2.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello2.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/buggyhello2.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/cat.asm	/^				p = "(null)";$/;"	d
p	obj/user/cat.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/cat.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/divzero.asm	/^				p = "(null)";$/;"	d
p	obj/user/divzero.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/divzero.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/dumbfork.asm	/^				p = "(null)";$/;"	d
p	obj/user/dumbfork.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/dumbfork.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/echo.asm	/^				p = "(null)";$/;"	d
p	obj/user/echo.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/echo.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/echosrv.asm	/^				p = "(null)";$/;"	d
p	obj/user/echosrv.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/echosrv.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/echotest.asm	/^				p = "(null)";$/;"	d
p	obj/user/echotest.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/echotest.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/evilhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/evilhello.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/evilhello.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/fairness.asm	/^				p = "(null)";$/;"	d
p	obj/user/fairness.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/fairness.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultalloc.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultalloc.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultalloc.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultallocbad.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultallocbad.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultallocbad.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultbadhandler.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultbadhandler.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultbadhandler.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultdie.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultdie.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultdie.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultevilhandler.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultevilhandler.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultevilhandler.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultnostack.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultnostack.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultnostack.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultread.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultread.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultread.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultreadkernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultreadkernel.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultreadkernel.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultregs.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultregs.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultregs.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultwrite.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwrite.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultwrite.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultwritekernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwritekernel.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultwritekernel.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/forktree.asm	/^				p = "(null)";$/;"	d
p	obj/user/forktree.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/forktree.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/hello.asm	/^				p = "(null)";$/;"	d
p	obj/user/hello.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/hello.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/httpd.asm	/^				p = "(null)";$/;"	d
p	obj/user/httpd.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/httpd.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/icode.asm	/^				p = "(null)";$/;"	d
p	obj/user/icode.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/icode.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/idle.asm	/^				p = "(null)";$/;"	d
p	obj/user/idle.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/idle.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/init.asm	/^				p = "(null)";$/;"	d
p	obj/user/init.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/init.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/ls.asm	/^				p = "(null)";$/;"	d
p	obj/user/ls.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/ls.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/lsfd.asm	/^				p = "(null)";$/;"	d
p	obj/user/lsfd.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/lsfd.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/num.asm	/^				p = "(null)";$/;"	d
p	obj/user/num.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/num.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/pingpong.asm	/^				p = "(null)";$/;"	d
p	obj/user/pingpong.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/pingpong.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/pingpongs.asm	/^				p = "(null)";$/;"	d
p	obj/user/pingpongs.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/pingpongs.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/primes.asm	/^				p = "(null)";$/;"	d
p	obj/user/primes.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/primes.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/primes.asm	/^	p = ipc_recv(&envid, 0, 0);$/;"	d
p	obj/user/primespipe.asm	/^				p = "(null)";$/;"	d
p	obj/user/primespipe.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/primespipe.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/sendpage.asm	/^				p = "(null)";$/;"	d
p	obj/user/sendpage.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/sendpage.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/sh.asm	/^				p = "(null)";$/;"	d
p	obj/user/sh.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/sh.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/softint.asm	/^				p = "(null)";$/;"	d
p	obj/user/softint.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/softint.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/spawnhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/spawnhello.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/spawnhello.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/spin.asm	/^				p = "(null)";$/;"	d
p	obj/user/spin.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/spin.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/stresssched.asm	/^				p = "(null)";$/;"	d
p	obj/user/stresssched.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/stresssched.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testbss.asm	/^				p = "(null)";$/;"	d
p	obj/user/testbss.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testbss.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testfdsharing.asm	/^				p = "(null)";$/;"	d
p	obj/user/testfdsharing.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testfdsharing.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testfile.asm	/^				p = "(null)";$/;"	d
p	obj/user/testfile.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testfile.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testkbd.asm	/^				p = "(null)";$/;"	d
p	obj/user/testkbd.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testkbd.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testpipe.asm	/^				p = "(null)";$/;"	d
p	obj/user/testpipe.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testpipe.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testpiperace.asm	/^				p = "(null)";$/;"	d
p	obj/user/testpiperace.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testpiperace.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testpiperace2.asm	/^				p = "(null)";$/;"	d
p	obj/user/testpiperace2.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testpiperace2.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testpteshare.asm	/^				p = "(null)";$/;"	d
p	obj/user/testpteshare.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testpteshare.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testshell.asm	/^				p = "(null)";$/;"	d
p	obj/user/testshell.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testshell.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testtime.asm	/^				p = "(null)";$/;"	d
p	obj/user/testtime.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testtime.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/yield.asm	/^				p = "(null)";$/;"	d
p	obj/user/yield.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/yield.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p_align	inc/elf.h	/^	uint32_t p_align;$/;"	m	struct:Proghdr
p_buf	lib/pipe.c	/^	uint8_t p_buf[PIPEBUFSIZ];	\/\/ data buffer$/;"	m	struct:Pipe	file:
p_filesz	inc/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:Proghdr
p_flags	inc/elf.h	/^	uint32_t p_flags;$/;"	m	struct:Proghdr
p_from	obj/net/ns.asm	/^      p_from = p_from->next;$/;"	d
p_memsz	inc/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:Proghdr
p_offset	inc/elf.h	/^	uint32_t p_offset;$/;"	m	struct:Proghdr
p_out	net/lwip/include/lwip/dhcp.h	/^  struct pbuf *p_out; \/* pbuf of outcoming msg *\/$/;"	m	struct:dhcp	typeref:struct:dhcp::pbuf
p_pa	inc/elf.h	/^	uint32_t p_pa;$/;"	m	struct:Proghdr
p_rpos	lib/pipe.c	/^	off_t p_rpos;		\/\/ read position$/;"	m	struct:Pipe	file:
p_sock	obj/net/ns.asm	/^      p_sock = get_socket(i);$/;"	d
p_to	obj/net/ns.asm	/^      p_to = p_to->next;$/;"	d
p_type	inc/elf.h	/^	uint32_t p_type;$/;"	m	struct:Proghdr
p_va	inc/elf.h	/^	uint32_t p_va;$/;"	m	struct:Proghdr
p_wpos	lib/pipe.c	/^	off_t p_wpos;		\/\/ write position$/;"	m	struct:Pipe	file:
pa	obj/kern/kernel.asm	/^		pa = PTE_ADDR(e->env_pgdir[pdeno]);$/;"	d
pa	obj/kern/kernel.asm	/^	pa = PADDR(e->env_pgdir);$/;"	d
pa	obj/kern/kernel.asm	/^	pa = PTE_ADDR(*pte) | PGOFF(va);$/;"	d
pa2page	kern/pmap.h	/^pa2page(physaddr_t pa)$/;"	f
padc	obj/fs/fs.asm	/^			padc = '-';$/;"	d
padc	obj/fs/fs.asm	/^			padc = '0';$/;"	d
padc	obj/kern/kernel.asm	/^			padc = '-';$/;"	d
padc	obj/kern/kernel.asm	/^			padc = '0';$/;"	d
padc	obj/net/ns.asm	/^			padc = '-';$/;"	d
padc	obj/net/ns.asm	/^			padc = '0';$/;"	d
padc	obj/net/testinput.asm	/^			padc = '-';$/;"	d
padc	obj/net/testinput.asm	/^			padc = '0';$/;"	d
padc	obj/net/testoutput.asm	/^			padc = '-';$/;"	d
padc	obj/net/testoutput.asm	/^			padc = '0';$/;"	d
padc	obj/user/badsegment.asm	/^			padc = '-';$/;"	d
padc	obj/user/badsegment.asm	/^			padc = '0';$/;"	d
padc	obj/user/breakpoint.asm	/^			padc = '-';$/;"	d
padc	obj/user/breakpoint.asm	/^			padc = '0';$/;"	d
padc	obj/user/buggyhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/buggyhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/buggyhello2.asm	/^			padc = '-';$/;"	d
padc	obj/user/buggyhello2.asm	/^			padc = '0';$/;"	d
padc	obj/user/cat.asm	/^			padc = '-';$/;"	d
padc	obj/user/cat.asm	/^			padc = '0';$/;"	d
padc	obj/user/divzero.asm	/^			padc = '-';$/;"	d
padc	obj/user/divzero.asm	/^			padc = '0';$/;"	d
padc	obj/user/dumbfork.asm	/^			padc = '-';$/;"	d
padc	obj/user/dumbfork.asm	/^			padc = '0';$/;"	d
padc	obj/user/echo.asm	/^			padc = '-';$/;"	d
padc	obj/user/echo.asm	/^			padc = '0';$/;"	d
padc	obj/user/echosrv.asm	/^			padc = '-';$/;"	d
padc	obj/user/echosrv.asm	/^			padc = '0';$/;"	d
padc	obj/user/echotest.asm	/^			padc = '-';$/;"	d
padc	obj/user/echotest.asm	/^			padc = '0';$/;"	d
padc	obj/user/evilhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/evilhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/fairness.asm	/^			padc = '-';$/;"	d
padc	obj/user/fairness.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultalloc.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultalloc.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultallocbad.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultallocbad.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultbadhandler.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultbadhandler.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultdie.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultdie.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultevilhandler.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultevilhandler.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultnostack.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultnostack.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultread.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultread.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultreadkernel.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultreadkernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultregs.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultregs.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultwrite.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultwrite.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultwritekernel.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultwritekernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/forktree.asm	/^			padc = '-';$/;"	d
padc	obj/user/forktree.asm	/^			padc = '0';$/;"	d
padc	obj/user/hello.asm	/^			padc = '-';$/;"	d
padc	obj/user/hello.asm	/^			padc = '0';$/;"	d
padc	obj/user/httpd.asm	/^			padc = '-';$/;"	d
padc	obj/user/httpd.asm	/^			padc = '0';$/;"	d
padc	obj/user/icode.asm	/^			padc = '-';$/;"	d
padc	obj/user/icode.asm	/^			padc = '0';$/;"	d
padc	obj/user/idle.asm	/^			padc = '-';$/;"	d
padc	obj/user/idle.asm	/^			padc = '0';$/;"	d
padc	obj/user/init.asm	/^			padc = '-';$/;"	d
padc	obj/user/init.asm	/^			padc = '0';$/;"	d
padc	obj/user/ls.asm	/^			padc = '-';$/;"	d
padc	obj/user/ls.asm	/^			padc = '0';$/;"	d
padc	obj/user/lsfd.asm	/^			padc = '-';$/;"	d
padc	obj/user/lsfd.asm	/^			padc = '0';$/;"	d
padc	obj/user/num.asm	/^			padc = '-';$/;"	d
padc	obj/user/num.asm	/^			padc = '0';$/;"	d
padc	obj/user/pingpong.asm	/^			padc = '-';$/;"	d
padc	obj/user/pingpong.asm	/^			padc = '0';$/;"	d
padc	obj/user/pingpongs.asm	/^			padc = '-';$/;"	d
padc	obj/user/pingpongs.asm	/^			padc = '0';$/;"	d
padc	obj/user/primes.asm	/^			padc = '-';$/;"	d
padc	obj/user/primes.asm	/^			padc = '0';$/;"	d
padc	obj/user/primespipe.asm	/^			padc = '-';$/;"	d
padc	obj/user/primespipe.asm	/^			padc = '0';$/;"	d
padc	obj/user/sendpage.asm	/^			padc = '-';$/;"	d
padc	obj/user/sendpage.asm	/^			padc = '0';$/;"	d
padc	obj/user/sh.asm	/^			padc = '-';$/;"	d
padc	obj/user/sh.asm	/^			padc = '0';$/;"	d
padc	obj/user/softint.asm	/^			padc = '-';$/;"	d
padc	obj/user/softint.asm	/^			padc = '0';$/;"	d
padc	obj/user/spawnhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/spawnhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/spin.asm	/^			padc = '-';$/;"	d
padc	obj/user/spin.asm	/^			padc = '0';$/;"	d
padc	obj/user/stresssched.asm	/^			padc = '-';$/;"	d
padc	obj/user/stresssched.asm	/^			padc = '0';$/;"	d
padc	obj/user/testbss.asm	/^			padc = '-';$/;"	d
padc	obj/user/testbss.asm	/^			padc = '0';$/;"	d
padc	obj/user/testfdsharing.asm	/^			padc = '-';$/;"	d
padc	obj/user/testfdsharing.asm	/^			padc = '0';$/;"	d
padc	obj/user/testfile.asm	/^			padc = '-';$/;"	d
padc	obj/user/testfile.asm	/^			padc = '0';$/;"	d
padc	obj/user/testkbd.asm	/^			padc = '-';$/;"	d
padc	obj/user/testkbd.asm	/^			padc = '0';$/;"	d
padc	obj/user/testpipe.asm	/^			padc = '-';$/;"	d
padc	obj/user/testpipe.asm	/^			padc = '0';$/;"	d
padc	obj/user/testpiperace.asm	/^			padc = '-';$/;"	d
padc	obj/user/testpiperace.asm	/^			padc = '0';$/;"	d
padc	obj/user/testpiperace2.asm	/^			padc = '-';$/;"	d
padc	obj/user/testpiperace2.asm	/^			padc = '0';$/;"	d
padc	obj/user/testpteshare.asm	/^			padc = '-';$/;"	d
padc	obj/user/testpteshare.asm	/^			padc = '0';$/;"	d
padc	obj/user/testshell.asm	/^			padc = '-';$/;"	d
padc	obj/user/testshell.asm	/^			padc = '0';$/;"	d
padc	obj/user/testtime.asm	/^			padc = '-';$/;"	d
padc	obj/user/testtime.asm	/^			padc = '0';$/;"	d
padc	obj/user/yield.asm	/^			padc = '-';$/;"	d
padc	obj/user/yield.asm	/^			padc = '0';$/;"	d
page2kva	kern/pmap.h	/^page2kva(struct PageInfo *pp)$/;"	f
page2pa	kern/pmap.h	/^page2pa(struct PageInfo *pp)$/;"	f
page_alloc	kern/pmap.c	/^page_alloc(int alloc_flags)$/;"	f
page_decref	kern/pmap.c	/^page_decref(struct PageInfo* pp)$/;"	f
page_fault_handler	kern/trap.c	/^page_fault_handler(struct Trapframe *tf)$/;"	f
page_free	kern/pmap.c	/^page_free(struct PageInfo *pp)$/;"	f
page_free_list	kern/pmap.c	/^static struct PageInfo *page_free_list;	\/\/ Free list of physical pages$/;"	v	typeref:struct:PageInfo	file:
page_free_list	obj/kern/kernel.asm	/^		page_free_list = &pages[i];$/;"	d
page_free_list	obj/kern/kernel.asm	/^		page_free_list = pp1;$/;"	d
page_free_list	obj/kern/kernel.asm	/^		page_free_list = pp;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = 0;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = fl;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = page_free_list->pp_link; $/;"	d
page_init	kern/pmap.c	/^page_init(void)$/;"	f
page_insert	kern/pmap.c	/^page_insert(pde_t *pgdir, struct PageInfo *pp, void *va, int perm)$/;"	f
page_lookup	kern/pmap.c	/^page_lookup(pde_t *pgdir, void *va, pte_t **pte_store)$/;"	f
page_remove	kern/pmap.c	/^page_remove(pde_t *pgdir, void *va)$/;"	f
pageref	lib/pageref.c	/^pageref(void *v)$/;"	f
pages	kern/pmap.c	/^struct PageInfo *pages;		\/\/ Physical page state array$/;"	v	typeref:struct:PageInfo
pages	obj/kern/kernel.asm	/^	pages = (struct PageInfo *)boot_alloc(sizeof(struct PageInfo) * npages);$/;"	d
panic	fs/fsformat.c	/^panic(const char *fmt, ...)$/;"	f
panic	inc/assert.h	12;"	d
panicstr	kern/init.c	/^const char *panicstr;$/;"	v
panicstr	obj/kern/kernel.asm	/^	panicstr = fmt;$/;"	d
pap_protent	net/lwip/netif/ppp/pap.c	/^struct protent pap_protent = {$/;"	v	typeref:struct:protent
parent_bridge	kern/pci.h	/^    struct pci_func *parent_bridge;$/;"	m	struct:pci_bus	typeref:struct:pci_bus::pci_func
passive	net/lwip/netif/ppp/lcp.h	/^    u_int passive           : 1; \/* Don't die if we don't get a response *\/$/;"	m	struct:lcp_options
passwd	net/lwip/netif/ppp/ppp.h	/^  char passwd     [MAXSECRETLEN + 1]; \/* Password for PAP, secret for CHAP *\/$/;"	m	struct:ppp_settings
passwd_from_file	net/lwip/netif/ppp/auth.c	/^static int passwd_from_file;$/;"	v	file:
path	obj/fs/fs.asm	/^		path = skip_slash(path);$/;"	d
path	obj/fs/fs.asm	/^	path = skip_slash(path);$/;"	d
payload	net/lwip/include/lwip/pbuf.h	/^  void *payload;$/;"	m	struct:pbuf
payload	obj/net/ns.asm	/^  payload = p->payload;$/;"	d
pbuf	net/lwip/include/lwip/pbuf.h	/^struct pbuf {$/;"	s
pbuf_alloc	net/lwip/core/pbuf.c	/^pbuf_alloc(pbuf_layer layer, u16_t length, pbuf_type type)$/;"	f
pbuf_cat	net/lwip/core/pbuf.c	/^pbuf_cat(struct pbuf *h, struct pbuf *t)$/;"	f
pbuf_chain	net/lwip/core/pbuf.c	/^pbuf_chain(struct pbuf *h, struct pbuf *t)$/;"	f
pbuf_clen	net/lwip/core/pbuf.c	/^pbuf_clen(struct pbuf *p)$/;"	f
pbuf_copy	net/lwip/core/pbuf.c	/^pbuf_copy(struct pbuf *p_to, struct pbuf *p_from)$/;"	f
pbuf_copy_partial	net/lwip/core/pbuf.c	/^pbuf_copy_partial(struct pbuf *buf, void *dataptr, u16_t len, u16_t offset)$/;"	f
pbuf_dechain	net/lwip/core/pbuf.c	/^pbuf_dechain(struct pbuf *p)$/;"	f
pbuf_free	net/lwip/core/pbuf.c	/^pbuf_free(struct pbuf *p)$/;"	f
pbuf_free_callback	net/lwip/api/tcpip.c	/^pbuf_free_callback(struct pbuf *p)$/;"	f
pbuf_free_int	net/lwip/api/tcpip.c	/^pbuf_free_int(void *p)$/;"	f	file:
pbuf_header	net/lwip/core/pbuf.c	/^pbuf_header(struct pbuf *p, s16_t header_size_increment)$/;"	f
pbuf_init	net/lwip/include/lwip/pbuf.h	99;"	d
pbuf_layer	net/lwip/include/lwip/pbuf.h	/^} pbuf_layer;$/;"	t	typeref:enum:__anon13
pbuf_realloc	net/lwip/core/pbuf.c	/^pbuf_realloc(struct pbuf *p, u16_t new_len)$/;"	f
pbuf_ref	net/lwip/core/pbuf.c	/^pbuf_ref(struct pbuf *p)$/;"	f
pbuf_type	net/lwip/include/lwip/pbuf.h	/^} pbuf_type;$/;"	t	typeref:enum:__anon14
pbufs_freed_current	obj/net/ns.asm	/^      pbufs_freed_current = ip_reass_free_complete_datagram(oldest, prev);$/;"	d
pcb	net/lwip/include/lwip/api.h	/^  } pcb;$/;"	m	struct:netconn	typeref:union:netconn::__anon21
pcb	net/lwip/include/lwip/dhcp.h	/^  struct udp_pcb *pcb;$/;"	m	struct:dhcp	typeref:struct:dhcp::udp_pcb
pcb	net/lwip/include/lwip/snmp_msg.h	/^  struct udp_pcb *pcb;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::udp_pcb
pcb	net/lwip/include/lwip/snmp_msg.h	/^  struct udp_pcb *pcb;$/;"	m	struct:snmp_msg_trap	typeref:struct:snmp_msg_trap::udp_pcb
pcb	obj/net/ns.asm	/^        pcb = next;$/;"	d
pcb	obj/net/ns.asm	/^        pcb = pcb->next;$/;"	d
pcb	obj/net/ns.asm	/^      pcb = memp_malloc(MEMP_TCP_PCB);$/;"	d
pcb	obj/net/ns.asm	/^      pcb = pcb->next;$/;"	d
pcb	obj/net/ns.asm	/^      pcb = pcb2;$/;"	d
pcb	obj/net/ns.asm	/^      pcb = uncon_pcb;$/;"	d
pcb	obj/net/ns.asm	/^    pcb = NULL;$/;"	d
pcb	obj/net/ns.asm	/^    pcb = memp_malloc(MEMP_TCP_PCB);$/;"	d
pcb	obj/net/ns.asm	/^    pcb = pcb->next;$/;"	d
pcb	obj/net/ns.asm	/^    pcb = tcp_active_pcbs;$/;"	d
pcb	obj/net/ns.asm	/^  pcb = NULL;$/;"	d
pcb	obj/net/ns.asm	/^  pcb = conn->pcb.tcp;$/;"	d
pcb	obj/net/ns.asm	/^  pcb = memp_malloc(MEMP_RAW_PCB);$/;"	d
pcb	obj/net/ns.asm	/^  pcb = memp_malloc(MEMP_TCP_PCB);$/;"	d
pcb	obj/net/ns.asm	/^  pcb = memp_malloc(MEMP_UDP_PCB);$/;"	d
pcb	obj/net/ns.asm	/^  pcb = raw_pcbs;$/;"	d
pcb	obj/net/ns.asm	/^  pcb = tcp_active_pcbs;$/;"	d
pcb	obj/net/ns.asm	/^  pcb = tcp_tw_pcbs;$/;"	d
pcb2	obj/net/ns.asm	/^      pcb2 = pcb->next;$/;"	d
pcb_new	net/lwip/api/api_msg.c	/^pcb_new(struct api_msg_msg *msg)$/;"	f	file:
pcb_remove	obj/net/ns.asm	/^    pcb_remove = 0;$/;"	d
pcbs	net/lwip/include/lwip/tcp.h	/^  struct tcp_pcb *pcbs;$/;"	m	union:tcp_listen_pcbs_t	typeref:struct:tcp_listen_pcbs_t::tcp_pcb
pci_attach	kern/pci.c	/^pci_attach(struct pci_func *f)$/;"	f	file:
pci_attach_class	kern/pci.c	/^struct pci_driver pci_attach_class[] = {$/;"	v	typeref:struct:pci_driver
pci_attach_match	kern/pci.c	/^pci_attach_match(uint32_t key1, uint32_t key2,$/;"	f	file:
pci_attach_vendor	kern/pci.c	/^struct pci_driver pci_attach_vendor[] = {$/;"	v	typeref:struct:pci_driver
pci_bridge_attach	kern/pci.c	/^pci_bridge_attach(struct pci_func *pcif)$/;"	f	file:
pci_bus	kern/pci.h	/^struct pci_bus {$/;"	s
pci_class	kern/pci.c	/^static const char *pci_class[] =$/;"	v	file:
pci_class_t	kern/pcireg.h	/^typedef uint8_t pci_class_t;$/;"	t
pci_conf1_addr_ioport	kern/pci.c	/^static uint32_t pci_conf1_addr_ioport = 0x0cf8;$/;"	v	file:
pci_conf1_data_ioport	kern/pci.c	/^static uint32_t pci_conf1_data_ioport = 0x0cfc;$/;"	v	file:
pci_conf1_set_addr	kern/pci.c	/^pci_conf1_set_addr(uint32_t bus,$/;"	f	file:
pci_conf_read	kern/pci.c	/^pci_conf_read(struct pci_func *f, uint32_t off)$/;"	f	file:
pci_conf_write	kern/pci.c	/^pci_conf_write(struct pci_func *f, uint32_t off, uint32_t v)$/;"	f	file:
pci_driver	kern/pci.c	/^struct pci_driver {$/;"	s	file:
pci_e1000_attach	kern/e1000.c	/^pci_e1000_attach(struct pci_func *pcif)$/;"	f
pci_func	kern/pci.h	/^struct pci_func {$/;"	s
pci_func_enable	kern/pci.c	/^pci_func_enable(struct pci_func *f)$/;"	f
pci_init	kern/pci.c	/^pci_init(void)$/;"	f
pci_interface_t	kern/pcireg.h	/^typedef uint8_t pci_interface_t;$/;"	t
pci_intr_grant_t	kern/pcireg.h	/^typedef uint8_t pci_intr_grant_t;$/;"	t
pci_intr_latency_t	kern/pcireg.h	/^typedef uint8_t pci_intr_latency_t;$/;"	t
pci_intr_line_t	kern/pcireg.h	/^typedef uint8_t pci_intr_line_t;$/;"	t
pci_intr_pin_t	kern/pcireg.h	/^typedef uint8_t pci_intr_pin_t;$/;"	t
pci_print_func	kern/pci.c	/^pci_print_func(struct pci_func *f)$/;"	f	file:
pci_product_id_t	kern/pcireg.h	/^typedef uint16_t pci_product_id_t;$/;"	t
pci_res_bus	kern/pci.h	/^enum { pci_res_bus, pci_res_mem, pci_res_io, pci_res_max };$/;"	e	enum:__anon36
pci_res_io	kern/pci.h	/^enum { pci_res_bus, pci_res_mem, pci_res_io, pci_res_max };$/;"	e	enum:__anon36
pci_res_max	kern/pci.h	/^enum { pci_res_bus, pci_res_mem, pci_res_io, pci_res_max };$/;"	e	enum:__anon36
pci_res_mem	kern/pci.h	/^enum { pci_res_bus, pci_res_mem, pci_res_io, pci_res_max };$/;"	e	enum:__anon36
pci_revision_t	kern/pcireg.h	/^typedef uint8_t pci_revision_t;$/;"	t
pci_scan_bus	kern/pci.c	/^pci_scan_bus(struct pci_bus *bus)$/;"	f	file:
pci_show_addrs	kern/pci.c	/^static int pci_show_addrs = 0;$/;"	v	file:
pci_show_devs	kern/pci.c	/^static int pci_show_devs = 1;$/;"	v	file:
pci_subclass_t	kern/pcireg.h	/^typedef uint8_t pci_subclass_t;$/;"	t
pci_vendor_id_t	kern/pcireg.h	/^typedef uint16_t pci_vendor_id_t;$/;"	t
pci_vpd	kern/pcireg.h	/^struct pci_vpd {$/;"	s
pci_vpd_largeres	kern/pcireg.h	/^struct pci_vpd_largeres {$/;"	s
pci_vpd_smallres	kern/pcireg.h	/^struct pci_vpd_smallres {$/;"	s
pcomp	net/lwip/netif/ppp/ppp.c	/^  int  pcomp;                   \/* Does peer accept protocol compression? *\/$/;"	m	struct:PPPControl_s	file:
pcs	kern/spinlock.h	/^	uintptr_t pcs[10];     \/\/ The call stack (an array of program counters)$/;"	m	struct:spinlock
pcur	obj/net/ns.asm	/^    pcur = p;$/;"	d
pd_base	inc/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc
pd_lim	inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc
pde_t	inc/memlayout.h	/^typedef uint32_t pde_t;$/;"	t
pdulen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t pdulen;$/;"	m	struct:snmp_resp_header_lengths
pdulen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t pdulen;$/;"	m	struct:snmp_trap_header_lengths
pdulenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t pdulenlen;$/;"	m	struct:snmp_resp_header_lengths
pdulenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t pdulenlen;$/;"	m	struct:snmp_trap_header_lengths
peer_authname	net/lwip/netif/ppp/auth.c	/^static char peer_authname[MAXNAMELEN];$/;"	v	file:
peer_mru	net/lwip/netif/ppp/fsm.c	/^int peer_mru[NUM_PPP];$/;"	v
percpu_kstacks	kern/mpconfig.c	/^unsigned char percpu_kstacks[NCPU][KSTKSIZE]$/;"	v
perm	obj/fs/fs.asm	/^		perm = 0;$/;"	d
perm	obj/net/ns.asm	/^		perm = 0;$/;"	d
perm	obj/net/ns.asm	/^	perm = PTE_P | PTE_U | PTE_W;$/;"	d
perm	obj/net/testinput.asm	/^		perm = 0;$/;"	d
perm	obj/net/testinput.asm	/^	perm = PTE_P | PTE_U | PTE_W;$/;"	d
perm	obj/net/testoutput.asm	/^		perm = 0;$/;"	d
perm	obj/net/testoutput.asm	/^	perm = PTE_P | PTE_U | PTE_W;$/;"	d
perm	obj/user/icode.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/init.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/sh.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/spawnhello.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/testpteshare.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/testshell.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perror	net/lwip/jos/arch/perror.c	/^perror(const char *s) {$/;"	f
persist_backoff	net/lwip/include/lwip/tcp.h	/^  u8_t persist_backoff;$/;"	m	struct:tcp_pcb
persist_cnt	net/lwip/include/lwip/tcp.h	/^  u32_t persist_cnt;$/;"	m	struct:tcp_pcb
pg	obj/fs/fs.asm	/^		pg = NULL;$/;"	d
pg	obj/net/ns.asm	/^		pg = NULL;$/;"	d
pg	obj/net/testinput.asm	/^		pg = NULL;$/;"	d
pg	obj/net/testoutput.asm	/^		pg = NULL;$/;"	d
pgdir	obj/kern/kernel.asm	/^	pgdir = &pgdir[PDX(va)];$/;"	d
pgdir	obj/kern/kernel.asm	/^	pgdir = kern_pgdir;$/;"	d
pgdir_walk	kern/pmap.c	/^pgdir_walk(pde_t *pgdir, const void *va, int create)$/;"	f
pgfault	lib/fork.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:
pgfault	user/faultregs.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:
ph	obj/boot/boot.asm	/^	ph = (struct Proghdr *) ((uint8_t *) ELFHDR + ELFHDR->e_phoff);$/;"	d
ph	obj/kern/kernel.asm	/^	ph = (struct Proghdr *) ((char *)elfhdr + elfhdr->e_phoff);$/;"	d
ph	obj/user/icode.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/init.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/sh.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/spawnhello.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/testpteshare.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/testshell.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
physaddr	kern/mpconfig.c	/^	physaddr_t physaddr;            \/\/ phys addr of MP config table$/;"	m	struct:mp	file:
physaddr_t	fs/fsformat.c	/^typedef uint32_t physaddr_t;$/;"	t	file:
physaddr_t	inc/types.h	/^typedef uint32_t physaddr_t;$/;"	t
physaddr_t	obj/kern/kernel.asm	/^physaddr_t lapicaddr;        \/\/ Initialized in mpconfig.c$/;"	l
pic_init	kern/picirq.c	/^pic_init(void)$/;"	f
pid	obj/user/testpiperace.asm	/^	pid = r;$/;"	d
pipe	lib/pipe.c	/^pipe(int pfd[2])$/;"	f
pipe_child	obj/user/sh.asm	/^				pipe_child = r;$/;"	d
pipe_child	obj/user/sh.asm	/^	pipe_child = 0;$/;"	d
pipeisclosed	lib/pipe.c	/^pipeisclosed(int fdnum)$/;"	f
pkt	inc/ns.h	/^	struct jif_pkt pkt;$/;"	m	union:Nsipc	typeref:struct:Nsipc::jif_pkt
pkt	net/testinput.c	/^static struct jif_pkt *pkt = (struct jif_pkt*)REQVA;$/;"	v	typeref:struct:jif_pkt	file:
pkt	net/testoutput.c	/^static struct jif_pkt *pkt = (struct jif_pkt*)REQVA;$/;"	v	typeref:struct:jif_pkt	file:
plug_holes	net/lwip/core/mem.c	/^plug_holes(struct mem *mem)$/;"	f	file:
pmem	obj/net/ns.asm	/^  pmem = (struct mem *)&ram[mem->prev];$/;"	d
poff	obj/net/ns.asm	/^    poff = newpbuflen;$/;"	d
poll	net/lwip/include/lwip/tcp.h	/^  err_t (* poll)(void *arg, struct tcp_pcb *pcb);$/;"	m	struct:tcp_pcb
poll_tcp	net/lwip/api/api_msg.c	/^poll_tcp(void *arg, struct tcp_pcb *pcb)$/;"	f	file:
pollinterval	net/lwip/include/lwip/tcp.h	/^  u8_t polltmr, pollinterval;$/;"	m	struct:tcp_pcb
polltmr	net/lwip/include/lwip/tcp.h	/^  u8_t polltmr, pollinterval;$/;"	m	struct:tcp_pcb
poolnr	net/lwip/core/mem.c	/^   memp_t poolnr;$/;"	m	struct:mem_helper	file:
pop_node	net/lwip/core/snmp/mib_structs.c	/^pop_node(struct nse* node)$/;"	f	file:
port	net/lwip/include/lwip/api_msg.h	/^      u16_t *port;$/;"	m	struct:api_msg_msg::__anon25::__anon28
port	net/lwip/include/lwip/api_msg.h	/^      u16_t port;$/;"	m	struct:api_msg_msg::__anon25::__anon27
port	net/lwip/include/lwip/netbuf.h	/^  u16_t port;$/;"	m	struct:netbuf
port	obj/net/ns.asm	/^      port = netbuf_fromport(buf);$/;"	d
port	obj/net/ns.asm	/^    port = TCP_LOCAL_PORT_RANGE_START;$/;"	d
port	obj/net/ns.asm	/^    port = UDP_LOCAL_PORT_RANGE_START;$/;"	d
port	obj/net/ns.asm	/^    port = tcp_new_port();$/;"	d
pos	obj/kern/kernel.asm	/^	pos = inb(addr_6845 + 1) << 8;$/;"	d
post_make	gradelib.py	/^def post_make():$/;"	f
pp0	obj/kern/kernel.asm	/^	pp0 = pp1 = pp2 = 0;$/;"	d
pp1	obj/kern/kernel.asm	/^	pp1 = pp2 = 0;$/;"	d
pp_link	inc/memlayout.h	/^	struct PageInfo *pp_link;$/;"	m	struct:PageInfo	typeref:struct:PageInfo::PageInfo
pp_ref	inc/memlayout.h	/^	uint16_t pp_ref;$/;"	m	struct:PageInfo
ppn_t	inc/types.h	/^typedef uint32_t ppn_t;$/;"	t
pppACCMMask	net/lwip/netif/ppp/ppp.c	/^static u_char pppACCMMask[] = {$/;"	v	file:
pppAppend	net/lwip/netif/ppp/ppp.c	/^pppAppend(u_char c, struct pbuf *nb, ext_accm *outACCM)$/;"	f	file:
pppAuthType	net/lwip/netif/ppp/ppp.h	/^enum pppAuthType {$/;"	g
pppClose	net/lwip/netif/ppp/ppp.c	/^pppClose(int pd)$/;"	f
pppControl	net/lwip/netif/ppp/ppp.c	/^static PPPControl pppControl[NUM_PPP]; \/* The PPP interface control blocks. *\/$/;"	v	file:
pppDrop	net/lwip/netif/ppp/ppp.c	/^pppDrop(PPPControl *pc)$/;"	f	file:
pppHupCB	net/lwip/netif/ppp/ppp.c	/^pppHupCB(void *arg)$/;"	f	file:
pppIOCtl	net/lwip/netif/ppp/ppp.c	/^pppIOCtl(int pd, int cmd, void *arg)$/;"	f
pppInProc	net/lwip/netif/ppp/ppp.c	/^pppInProc(int pd, u_char *s, int l)$/;"	f	file:
pppInProcOverEthernet	net/lwip/netif/ppp/ppp.c	/^pppInProcOverEthernet(int pd, struct pbuf *pb)$/;"	f
pppInit	net/lwip/netif/ppp/ppp.c	/^pppInit(void)$/;"	f
pppInput	net/lwip/netif/ppp/ppp.c	/^pppInput(void *arg)$/;"	f	file:
pppInputHeader	net/lwip/netif/ppp/ppp.c	/^struct pppInputHeader {$/;"	s	file:
pppLinkDown	net/lwip/netif/ppp/ppp.c	/^pppLinkDown(int pd)$/;"	f
pppLinkTerminated	net/lwip/netif/ppp/ppp.c	/^pppLinkTerminated(int pd)$/;"	f
pppMTU	net/lwip/netif/ppp/ppp.c	/^pppMTU(int pd)$/;"	f
pppMain	net/lwip/netif/ppp/ppp.c	/^pppMain(void *arg)$/;"	f	file:
pppMainWakeup	net/lwip/netif/ppp/ppp.c	/^pppMainWakeup(int pd)$/;"	f
pppOpen	net/lwip/netif/ppp/ppp.h	393;"	d
pppOverEthernetClose	net/lwip/netif/ppp/ppp.c	/^pppOverEthernetClose(int pd)$/;"	f
pppOverEthernetInitFailed	net/lwip/netif/ppp/ppp.c	/^pppOverEthernetInitFailed(void* arg)$/;"	f
pppOverEthernetLinkStatusCB	net/lwip/netif/ppp/ppp.c	/^pppOverEthernetLinkStatusCB(int pd, int up)$/;"	f	file:
pppOverEthernetOpen	net/lwip/netif/ppp/ppp.c	/^int pppOverEthernetOpen(struct netif *ethif, const char *service_name, const char *concentrator_name, void (*linkStatusCB)(void *ctx, int errCode, void *arg), void *linkStatusCtx)$/;"	f
pppOverSerialOpen	net/lwip/netif/ppp/ppp.c	/^pppOverSerialOpen(sio_fd_t fd, void (*linkStatusCB)(void *ctx, int errCode, void *arg), void *linkStatusCtx)$/;"	f
pppSetAuth	net/lwip/netif/ppp/ppp.c	/^pppSetAuth(enum pppAuthType authType, const char *user, const char *passwd)$/;"	f
pppSigHUP	net/lwip/netif/ppp/ppp.c	/^pppSigHUP(int pd)$/;"	f
pppSingleBuf	net/lwip/netif/ppp/ppp.c	/^pppSingleBuf(struct pbuf *p)$/;"	f
pppStartCB	net/lwip/netif/ppp/ppp.c	/^pppStartCB(void *arg)$/;"	f	file:
pppStopCB	net/lwip/netif/ppp/ppp.c	/^pppStopCB(void *arg)$/;"	f	file:
pppWrite	net/lwip/netif/ppp/ppp.c	/^pppWrite(int pd, const u_char *s, int n)$/;"	f
pppWriteOverEthernet	net/lwip/netif/ppp/ppp.c	/^pppWriteOverEthernet(int pd, const u_char *s, int n)$/;"	f
ppp_addrs	net/lwip/netif/ppp/ppp.h	/^struct ppp_addrs {$/;"	s
ppp_idle	net/lwip/netif/ppp/ppp.h	/^struct ppp_idle {$/;"	s
ppp_protocols	net/lwip/netif/ppp/ppp.c	/^struct protent *ppp_protocols[] = {$/;"	v	typeref:struct:protent
ppp_recv_config	net/lwip/netif/ppp/ppp.c	/^ppp_recv_config( int unit, int mru, u32_t asyncmap, int pcomp, int accomp)$/;"	f
ppp_send_config	net/lwip/netif/ppp/ppp.c	/^ppp_send_config( int unit, int mtu, u32_t asyncmap, int pcomp, int accomp)$/;"	f
ppp_set_xaccm	net/lwip/netif/ppp/ppp.c	/^ppp_set_xaccm(int unit, ext_accm *accm)$/;"	f
ppp_settings	net/lwip/netif/ppp/ppp.c	/^struct ppp_settings ppp_settings;$/;"	v	typeref:struct:ppp_settings
ppp_settings	net/lwip/netif/ppp/ppp.h	/^struct ppp_settings {$/;"	s
ppperr_strerr	net/lwip/netif/ppp/fsm.c	/^static const char *ppperr_strerr[] = {$/;"	v	file:
pppifNetifInit	net/lwip/netif/ppp/ppp.c	/^pppifNetifInit(struct netif *netif)$/;"	f	file:
pppifOutput	net/lwip/netif/ppp/ppp.c	/^pppifOutput(struct netif *netif, struct pbuf *pb, struct ip_addr *ipaddr)$/;"	f	file:
pppifOutputOverEthernet	net/lwip/netif/ppp/ppp.c	/^pppifOutputOverEthernet(int pd, struct pbuf *p)$/;"	f	file:
pppoe_abort_connect	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_abort_connect(struct pppoe_softc *sc)$/;"	f	file:
pppoe_clear_softc	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_clear_softc(struct pppoe_softc *sc, const char *message)$/;"	f	file:
pppoe_connect	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_connect(struct pppoe_softc *sc)$/;"	f
pppoe_create	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_create(struct netif *ethif, int pd, void (*linkStatusCB)(int pd, int up), struct pppoe_softc **scptr)$/;"	f
pppoe_data_input	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_data_input(struct netif *netif, struct pbuf *pb)$/;"	f
pppoe_destroy	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_destroy(struct netif *ifp)$/;"	f
pppoe_disc_input	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_disc_input(struct netif *netif, struct pbuf *p)$/;"	f
pppoe_disconnect	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_disconnect(struct pppoe_softc *sc)$/;"	f
pppoe_dispatch_disc_pkt	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_dispatch_disc_pkt(struct netif *netif, struct pbuf *pb)$/;"	f	file:
pppoe_do_disconnect	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_do_disconnect(struct pppoe_softc *sc)$/;"	f	file:
pppoe_find_softc_by_hunique	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_find_softc_by_hunique(u8_t *token, size_t len, struct netif *rcvif)$/;"	f	file:
pppoe_find_softc_by_session	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_find_softc_by_session(u_int session, struct netif *rcvif)$/;"	f	file:
pppoe_hdrlen	net/lwip/netif/ppp/ppp_oe.c	/^int pppoe_hdrlen;$/;"	v
pppoe_init	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_init(void)$/;"	f
pppoe_linkstatus_up	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_linkstatus_up(void *arg)$/;"	f	file:
pppoe_output	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_output(struct pppoe_softc *sc, struct pbuf *pb)$/;"	f	file:
pppoe_sc	net/lwip/netif/ppp/ppp.c	/^  struct pppoe_softc *pppoe_sc;$/;"	m	struct:PPPControl_s	typeref:struct:PPPControl_s::pppoe_softc	file:
pppoe_send_padi	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_send_padi(struct pppoe_softc *sc)$/;"	f	file:
pppoe_send_pado	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_send_pado(struct pppoe_softc *sc)$/;"	f	file:
pppoe_send_padr	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_send_padr(struct pppoe_softc *sc)$/;"	f	file:
pppoe_send_pads	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_send_pads(struct pppoe_softc *sc)$/;"	f	file:
pppoe_send_padt	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_send_padt(struct netif *outgoing_if, u_int session, const u8_t *dest)$/;"	f	file:
pppoe_softc	net/lwip/netif/ppp/ppp_oe.c	/^struct pppoe_softc {$/;"	s	file:
pppoe_timeout	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_timeout(void *arg)$/;"	f	file:
pppoe_xmit	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_xmit(struct pppoe_softc *sc, struct pbuf *pb)$/;"	f
pppoehdr	net/lwip/include/netif/ppp_oe.h	/^struct pppoehdr {$/;"	s
pppoetag	net/lwip/include/netif/ppp_oe.h	/^struct pppoetag {$/;"	s
pre_make	gradelib.py	/^def pre_make():$/;"	f
precision	obj/fs/fs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/fs/fs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/kern/kernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/kern/kernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/net/ns.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/net/ns.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/net/testinput.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/net/testinput.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/net/testoutput.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/net/testoutput.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/badsegment.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/badsegment.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/breakpoint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/breakpoint.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/buggyhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/buggyhello2.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello2.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/cat.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/cat.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/divzero.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/divzero.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/dumbfork.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/dumbfork.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/echo.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/echo.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/echosrv.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/echosrv.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/echotest.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/echotest.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/evilhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/evilhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/fairness.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/fairness.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultalloc.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultalloc.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultallocbad.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultallocbad.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultbadhandler.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultbadhandler.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultdie.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultdie.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultevilhandler.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultevilhandler.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultnostack.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultnostack.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultread.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultread.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultreadkernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultreadkernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultregs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultregs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultwrite.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwrite.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultwritekernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwritekernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/forktree.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/forktree.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/hello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/hello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/httpd.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/httpd.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/icode.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/icode.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/idle.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/idle.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/init.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/init.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/ls.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/ls.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/lsfd.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/lsfd.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/num.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/num.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/pingpong.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pingpong.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/pingpongs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pingpongs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/primes.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/primes.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/primespipe.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/primespipe.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/sendpage.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/sendpage.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/sh.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/sh.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/softint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/softint.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/spawnhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/spawnhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/spin.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/spin.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/stresssched.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/stresssched.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testbss.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testbss.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testfdsharing.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testfdsharing.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testfile.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testfile.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testkbd.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testkbd.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testpipe.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testpipe.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testpiperace.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testpiperace.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testpiperace2.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testpiperace2.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testpteshare.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testpteshare.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testshell.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testshell.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testtime.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testtime.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/yield.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/yield.asm	/^			precision = va_arg(ap, int);$/;"	d
prefix	net/lwip/core/snmp/mib_structs.c	/^const s32_t prefix[4] = {1, 3, 6, 1};$/;"	v
prev	net/lwip/core/mem.c	/^  mem_size_t prev;$/;"	m	struct:mem	file:
prev	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind *prev;$/;"	m	struct:snmp_varbind	typeref:struct:snmp_varbind::snmp_varbind
prev	net/lwip/include/lwip/snmp_structs.h	/^  struct mib_list_node *prev;  $/;"	m	struct:mib_list_node	typeref:struct:mib_list_node::mib_list_node
prev	obj/net/ns.asm	/^          prev = NULL;$/;"	d
prev	obj/net/ns.asm	/^        prev = r;$/;"	d
prev	obj/net/ns.asm	/^      prev = pcb;$/;"	d
prev	obj/net/ns.asm	/^      prev = r;$/;"	d
prev	obj/net/ns.asm	/^    prev = NULL;$/;"	d
prev	obj/net/ns.asm	/^    prev = pcb;$/;"	d
prev	obj/net/ns.asm	/^  prev = NULL;    $/;"	d
prev	obj/net/ns.asm	/^  prev = NULL;$/;"	d
prev_i	net/serv.c	/^static int prev_i(int i) { return (i ? i-1 : QUEUE_SIZE-1); }$/;"	f	file:
primeproc	user/primes.c	/^primeproc(void)$/;"	f
primeproc	user/primespipe.c	/^primeproc(int fd)$/;"	f
print_jb	net/lwip/jos/arch/thread.c	/^print_jb(struct thread_context *tc) {$/;"	f	file:
print_regs	kern/trap.c	/^print_regs(struct PushRegs *regs)$/;"	f
print_trapframe	kern/trap.c	/^print_trapframe(struct Trapframe *tf)$/;"	f
printbuf	lib/fprintf.c	/^struct printbuf {$/;"	s	file:
printbuf	lib/printf.c	/^struct printbuf {$/;"	s	file:
printf	lib/fprintf.c	/^printf(const char *fmt, ...)$/;"	f
printfmt	lib/printfmt.c	/^printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...)$/;"	f
printnum	lib/printfmt.c	/^printnum(void (*putch)(int, void*), void *putdat,$/;"	f	file:
proc	obj/kern/kernel.asm	/^			proc = (struct mpproc *)p;$/;"	d
process_precision	obj/fs/fs.asm	/^		process_precision:$/;"	l
process_precision	obj/kern/kernel.asm	/^		process_precision:$/;"	l
process_precision	obj/net/ns.asm	/^		process_precision:$/;"	l
process_precision	obj/net/testinput.asm	/^		process_precision:$/;"	l
process_precision	obj/net/testoutput.asm	/^		process_precision:$/;"	l
process_precision	obj/user/badsegment.asm	/^		process_precision:$/;"	l
process_precision	obj/user/breakpoint.asm	/^		process_precision:$/;"	l
process_precision	obj/user/buggyhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/buggyhello2.asm	/^		process_precision:$/;"	l
process_precision	obj/user/cat.asm	/^		process_precision:$/;"	l
process_precision	obj/user/divzero.asm	/^		process_precision:$/;"	l
process_precision	obj/user/dumbfork.asm	/^		process_precision:$/;"	l
process_precision	obj/user/echo.asm	/^		process_precision:$/;"	l
process_precision	obj/user/echosrv.asm	/^		process_precision:$/;"	l
process_precision	obj/user/echotest.asm	/^		process_precision:$/;"	l
process_precision	obj/user/evilhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/fairness.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultalloc.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultallocbad.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultbadhandler.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultdie.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultevilhandler.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultnostack.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultread.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultreadkernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultregs.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultwrite.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultwritekernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/forktree.asm	/^		process_precision:$/;"	l
process_precision	obj/user/hello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/httpd.asm	/^		process_precision:$/;"	l
process_precision	obj/user/icode.asm	/^		process_precision:$/;"	l
process_precision	obj/user/idle.asm	/^		process_precision:$/;"	l
process_precision	obj/user/init.asm	/^		process_precision:$/;"	l
process_precision	obj/user/ls.asm	/^		process_precision:$/;"	l
process_precision	obj/user/lsfd.asm	/^		process_precision:$/;"	l
process_precision	obj/user/num.asm	/^		process_precision:$/;"	l
process_precision	obj/user/pingpong.asm	/^		process_precision:$/;"	l
process_precision	obj/user/pingpongs.asm	/^		process_precision:$/;"	l
process_precision	obj/user/primes.asm	/^		process_precision:$/;"	l
process_precision	obj/user/primespipe.asm	/^		process_precision:$/;"	l
process_precision	obj/user/sendpage.asm	/^		process_precision:$/;"	l
process_precision	obj/user/sh.asm	/^		process_precision:$/;"	l
process_precision	obj/user/softint.asm	/^		process_precision:$/;"	l
process_precision	obj/user/spawnhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/spin.asm	/^		process_precision:$/;"	l
process_precision	obj/user/stresssched.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testbss.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testfdsharing.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testfile.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testkbd.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testpipe.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testpiperace.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testpiperace2.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testpteshare.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testshell.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testtime.asm	/^		process_precision:$/;"	l
process_precision	obj/user/yield.asm	/^		process_precision:$/;"	l
process_timer	net/serv.c	/^process_timer(envid_t envid) {$/;"	f	file:
product	kern/mpconfig.c	/^	uint8_t product[20];            \/\/ product id$/;"	m	struct:mpconf	file:
protcseg	boot/boot.S	/^protcseg:$/;"	l
protcseg	obj/boot/boot.asm	/^protcseg:$/;"	l
protent	net/lwip/netif/ppp/ppp.h	/^struct protent {$/;"	s
proterr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER proterr;          \/* Protocol error. *\/$/;"	m	struct:stats_proto
proto	net/lwip/include/lwip/api_msg.h	/^      u8_t proto;$/;"	m	struct:api_msg_msg::__anon25::__anon26
proto	net/lwip/netif/ppp/ppp.c	/^  u16_t proto;$/;"	m	struct:pppInputHeader	file:
proto	obj/net/ns.asm	/^  proto = IPH_PROTO(iphdr);$/;"	d
proto_name	net/lwip/netif/ppp/fsm.h	/^  char *proto_name;                                 \/* String name for protocol (for messages) *\/$/;"	m	struct:fsm_callbacks
protocol	net/lwip/include/lwip/raw.h	/^  u8_t protocol;$/;"	m	struct:raw_pcb
protocol	net/lwip/netif/ppp/fsm.h	/^  u_short protocol;                \/* Data Link Layer Protocol field value *\/$/;"	m	struct:fsm
protocol	net/lwip/netif/ppp/ppp.c	/^  int         protocol; \/* PPP procotol, e.g. PPP_IP *\/$/;"	m	struct:npioctl	file:
protocol	net/lwip/netif/ppp/ppp.h	/^    u_short protocol;       \/* PPP protocol number *\/$/;"	m	struct:protent
protrej	net/lwip/netif/ppp/ppp.h	/^    void (*protrej) (int unit);$/;"	m	struct:protent
protreject	net/lwip/netif/ppp/fsm.h	/^  void (*protreject)(int);                          \/* Called when Protocol-Reject received *\/$/;"	m	struct:fsm_callbacks
proxy_arp	net/lwip/netif/ppp/ipcp.h	/^  u_int   proxy_arp     : 1; \/* Make proxy ARP entry for peer? *\/$/;"	m	struct:ipcp_options
psem	net/lwip/core/sys.c	/^  sys_sem_t *psem;$/;"	m	struct:sswt_cb	file:
pt	obj/kern/kernel.asm	/^		pt = (pte_t*) KADDR(pa);$/;"	d
pte	obj/fs/fs.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/kern/kernel.asm	/^		pte = (pte_t *)(physaddr_t)pgdir_walk(pgdir, va + PGADDR(0, i, 0), true);$/;"	d
pte	obj/net/ns.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/net/testinput.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/net/testoutput.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/badsegment.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/breakpoint.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/buggyhello.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/buggyhello2.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/cat.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/divzero.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/dumbfork.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/echo.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/echosrv.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/echotest.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/evilhello.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/fairness.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultalloc.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultallocbad.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultbadhandler.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultdie.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultevilhandler.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultnostack.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultread.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultreadkernel.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultregs.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultwrite.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultwritekernel.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/forktree.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/hello.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/httpd.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/icode.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/idle.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/init.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/ls.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/lsfd.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/num.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/pingpong.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/pingpongs.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/primes.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/primespipe.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/sendpage.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/sh.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/softint.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/spawnhello.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/spin.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/stresssched.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testbss.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testfdsharing.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testfile.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testkbd.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testpipe.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testpiperace.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testpiperace2.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testpteshare.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testshell.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testtime.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/yield.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte_t	inc/memlayout.h	/^typedef uint32_t pte_t;$/;"	t
pte_t	obj/kern/kernel.asm	/^pte_t *$/;"	l
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(PGSIZE)]));$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) page2kva(pp0);$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = pgdir_walk(kern_pgdir, va, 1);$/;"	d
ptep1	obj/kern/kernel.asm	/^	ptep1 = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(va)]));$/;"	d
ptr	net/lwip/include/lwip/netbuf.h	/^  struct pbuf *p, *ptr;$/;"	m	struct:netbuf	typeref:struct:netbuf::
ptr	obj/net/ns.asm	/^         ptr = ((struct mem *)&ram[ptr])->next) {$/;"	d
ptr	obj/net/ns.asm	/^    ptr = (void *)((u8_t *)ptr + seglen);$/;"	d
ptr	obj/net/ns.asm	/^  ptr = (u8_t *)mem - ram;$/;"	d
ptr	obj/net/ns.asm	/^  ptr = arg;$/;"	d
ptr2	obj/net/ns.asm	/^          ptr2 = ptr + SIZEOF_STRUCT_MEM + size;$/;"	d
ptr2	obj/net/ns.asm	/^    ptr2 = ptr + SIZEOF_STRUCT_MEM + newsize;$/;"	d
push_node	net/lwip/core/snmp/mib_structs.c	/^push_node(struct nse* node)$/;"	f	file:
put_buffer	net/serv.c	/^put_buffer(void *va) {$/;"	f	file:
putch	kern/printf.c	/^putch(int ch, int *cnt)$/;"	f	file:
putch	lib/fprintf.c	/^putch(int ch, void *thunk)$/;"	f	file:
putch	lib/printf.c	/^putch(int ch, struct printbuf *b)$/;"	f	file:
q	net/lwip/netif/etharp.c	/^  struct etharp_q_entry *q;$/;"	m	struct:etharp_entry	typeref:struct:etharp_entry::etharp_q_entry	file:
q	obj/net/ns.asm	/^          q = iprh->next_pbuf;$/;"	d
q	obj/net/ns.asm	/^        q = NULL;$/;"	d
q	obj/net/ns.asm	/^        q = iprh->next_pbuf;$/;"	d
q	obj/net/ns.asm	/^      q = memp_malloc(MEMP_PBUF_POOL);$/;"	d
q	obj/net/ns.asm	/^      q = p->next;$/;"	d
q	obj/net/ns.asm	/^    q = NULL;$/;"	d
q	obj/net/ns.asm	/^    q = iprh_tmp->next_pbuf;$/;"	d
q	obj/net/ns.asm	/^    q = mem_realloc(q, (u8_t *)q->payload - (u8_t *)q + rem_len);$/;"	d
q	obj/net/ns.asm	/^    q = p;$/;"	d
q	obj/net/ns.asm	/^    q = pbuf_alloc(PBUF_IP, 0, PBUF_RAM);$/;"	d
q	obj/net/ns.asm	/^    q = pbuf_alloc(PBUF_IP, UDP_HLEN, PBUF_RAM);$/;"	d
q	obj/net/ns.asm	/^    q = pbuf_alloc(PBUF_RAW, p->tot_len, PBUF_RAM);$/;"	d
q	obj/net/ns.asm	/^    q = q->next;$/;"	d
q	obj/net/ns.asm	/^  q = p->next;$/;"	d
q	obj/net/ns.asm	/^  q = p;$/;"	d
q	obj/net/ns.asm	/^  q = pbuf_alloc(PBUF_IP, sizeof(struct icmp_dur_hdr) + IP_HLEN + ICMP_DEST_UNREACH_DATASIZE,$/;"	d
queue	obj/net/ns.asm	/^      queue = seg;$/;"	d
queued_msg	net/lwip/jos/arch/sys_arch.c	/^    sys_sem_t queued_msg;$/;"	m	struct:sys_mbox_entry	file:
queuelen	obj/net/ns.asm	/^  queuelen = pcb->snd_queuelen;$/;"	d
r	grade-lab1	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab2	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab3	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab4	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab5	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab6	/^r = Runner(save("jos.out"),$/;"	v
r	net/lwip/include/lwip/api_msg.h	/^    } r;$/;"	m	union:api_msg_msg::__anon25	typeref:struct:api_msg_msg::__anon25::__anon30
r	obj/fs/fs.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/fs/fs.asm	/^			r = -E_INVAL;$/;"	d
r	obj/fs/fs.asm	/^			r = 0;$/;"	d
r	obj/fs/fs.asm	/^			r = handlers[req](whom, fsreq);$/;"	d
r	obj/fs/fs.asm	/^			r = serve_open(whom, (struct Fsreq_open*)fsreq, &pg, &perm);$/;"	d
r	obj/fs/fs.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/fs/fs.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/kern/kernel.asm	/^			r = m - 1;$/;"	d
r	obj/net/ns.asm	/^				r = -E_TX_BAD_LEN;$/;"	d
r	obj/net/ns.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/net/ns.asm	/^			r = -E_INVAL;$/;"	d
r	obj/net/ns.asm	/^			r = 0;$/;"	d
r	obj/net/ns.asm	/^		r = -E_INVAL;$/;"	d
r	obj/net/ns.asm	/^		r = 0;$/;"	d
r	obj/net/ns.asm	/^		r = lwip_accept(req->accept.req_s, &ret.ret_addr,$/;"	d
r	obj/net/ns.asm	/^		r = lwip_bind(req->bind.req_s, &req->bind.req_name,$/;"	d
r	obj/net/ns.asm	/^		r = lwip_close(req->close.req_s);$/;"	d
r	obj/net/ns.asm	/^		r = lwip_connect(req->connect.req_s, &req->connect.req_name,$/;"	d
r	obj/net/ns.asm	/^		r = lwip_listen(req->listen.req_s, req->listen.req_backlog);$/;"	d
r	obj/net/ns.asm	/^		r = lwip_recv(req->recv.req_s, req->recvRet.ret_buf,$/;"	d
r	obj/net/ns.asm	/^		r = lwip_send(req->send.req_s, &req->send.req_buf,$/;"	d
r	obj/net/ns.asm	/^		r = lwip_shutdown(req->shutdown.req_s, req->shutdown.req_how);$/;"	d
r	obj/net/ns.asm	/^		r = lwip_socket(req->socket.req_domain, req->socket.req_type,$/;"	d
r	obj/net/ns.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/net/ns.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/net/ns.asm	/^              r = r->next;$/;"	d
r	obj/net/ns.asm	/^            r = arp_table[i].q;$/;"	d
r	obj/net/ns.asm	/^      r = iprh->next_pbuf;$/;"	d
r	obj/net/ns.asm	/^      r = pbuf_alloc(PBUF_LINK, p->tot_len, PBUF_RAM);$/;"	d
r	obj/net/ns.asm	/^      r = q;$/;"	d
r	obj/net/ns.asm	/^      r = r->next;$/;"	d
r	obj/net/ns.asm	/^    r = ((struct ip_reass_helper*)ipr->p->payload)->next_pbuf;$/;"	d
r	obj/net/ns.asm	/^    r = p;$/;"	d
r	obj/net/ns.asm	/^    r = q;$/;"	d
r	obj/net/ns.asm	/^    r = reassdatagrams;$/;"	d
r	obj/net/ns.asm	/^  r = reassdatagrams;$/;"	d
r	obj/net/testinput.asm	/^				r = -E_TX_BAD_LEN;$/;"	d
r	obj/net/testinput.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/net/testinput.asm	/^			r = -E_INVAL;$/;"	d
r	obj/net/testinput.asm	/^			r = 0;$/;"	d
r	obj/net/testinput.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/net/testinput.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/net/testoutput.asm	/^				r = -E_TX_BAD_LEN;$/;"	d
r	obj/net/testoutput.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/net/testoutput.asm	/^			r = -E_INVAL;$/;"	d
r	obj/net/testoutput.asm	/^			r = 0;$/;"	d
r	obj/net/testoutput.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/net/testoutput.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/badsegment.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/badsegment.asm	/^			r = 0;$/;"	d
r	obj/user/badsegment.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/badsegment.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/breakpoint.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/breakpoint.asm	/^			r = 0;$/;"	d
r	obj/user/breakpoint.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/breakpoint.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/buggyhello.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/buggyhello.asm	/^			r = 0;$/;"	d
r	obj/user/buggyhello.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/buggyhello.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/buggyhello2.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/buggyhello2.asm	/^			r = 0;$/;"	d
r	obj/user/buggyhello2.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/buggyhello2.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/cat.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/cat.asm	/^			r = 0;$/;"	d
r	obj/user/cat.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/cat.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/divzero.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/divzero.asm	/^			r = 0;$/;"	d
r	obj/user/divzero.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/divzero.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/dumbfork.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/dumbfork.asm	/^			r = 0;$/;"	d
r	obj/user/dumbfork.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/dumbfork.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/echo.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/echo.asm	/^			r = 0;$/;"	d
r	obj/user/echo.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/echo.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/echosrv.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/echosrv.asm	/^			r = 0;$/;"	d
r	obj/user/echosrv.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/echosrv.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/echotest.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/echotest.asm	/^			r = 0;$/;"	d
r	obj/user/echotest.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/echotest.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/evilhello.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/evilhello.asm	/^			r = 0;$/;"	d
r	obj/user/evilhello.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/evilhello.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/fairness.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/fairness.asm	/^			r = 0;$/;"	d
r	obj/user/fairness.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/fairness.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultalloc.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultalloc.asm	/^			r = 0;$/;"	d
r	obj/user/faultalloc.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultalloc.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultallocbad.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultallocbad.asm	/^			r = 0;$/;"	d
r	obj/user/faultallocbad.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultallocbad.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultbadhandler.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultbadhandler.asm	/^			r = 0;$/;"	d
r	obj/user/faultbadhandler.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultbadhandler.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultdie.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultdie.asm	/^			r = 0;$/;"	d
r	obj/user/faultdie.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultdie.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultevilhandler.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultevilhandler.asm	/^			r = 0;$/;"	d
r	obj/user/faultevilhandler.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultevilhandler.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultnostack.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultnostack.asm	/^			r = 0;$/;"	d
r	obj/user/faultnostack.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultnostack.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultread.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultread.asm	/^			r = 0;$/;"	d
r	obj/user/faultread.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultread.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultreadkernel.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultreadkernel.asm	/^			r = 0;$/;"	d
r	obj/user/faultreadkernel.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultreadkernel.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultregs.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultregs.asm	/^			r = 0;$/;"	d
r	obj/user/faultregs.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultregs.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultwrite.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultwrite.asm	/^			r = 0;$/;"	d
r	obj/user/faultwrite.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultwrite.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultwritekernel.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultwritekernel.asm	/^			r = 0;$/;"	d
r	obj/user/faultwritekernel.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultwritekernel.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/forktree.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/forktree.asm	/^			r = 0;$/;"	d
r	obj/user/forktree.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/forktree.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/hello.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/hello.asm	/^			r = 0;$/;"	d
r	obj/user/hello.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/hello.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/httpd.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/httpd.asm	/^			r = 0;$/;"	d
r	obj/user/httpd.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/httpd.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/httpd.asm	/^	r = snprintf(buf, 512, "HTTP\/" HTTP_VERSION" %d %s\\r\\n"$/;"	d
r	obj/user/icode.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/icode.asm	/^			r = 0;$/;"	d
r	obj/user/icode.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/icode.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/idle.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/idle.asm	/^			r = 0;$/;"	d
r	obj/user/idle.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/idle.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/init.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/init.asm	/^			r = 0;$/;"	d
r	obj/user/init.asm	/^		r = spawnl("\/sh", "sh", (char*)0);$/;"	d
r	obj/user/init.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/init.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/ls.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/ls.asm	/^			r = 0;$/;"	d
r	obj/user/ls.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/ls.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/lsfd.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/lsfd.asm	/^			r = 0;$/;"	d
r	obj/user/lsfd.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/lsfd.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/num.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/num.asm	/^			r = 0;$/;"	d
r	obj/user/num.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/num.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/pingpong.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/pingpong.asm	/^			r = 0;$/;"	d
r	obj/user/pingpong.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/pingpong.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/pingpongs.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/pingpongs.asm	/^			r = 0;$/;"	d
r	obj/user/pingpongs.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/pingpongs.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/primes.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/primes.asm	/^			r = 0;$/;"	d
r	obj/user/primes.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/primes.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/primespipe.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/primespipe.asm	/^			r = 0;$/;"	d
r	obj/user/primespipe.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/primespipe.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/sendpage.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/sendpage.asm	/^			r = 0;$/;"	d
r	obj/user/sendpage.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/sendpage.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/sh.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/sh.asm	/^			r = 0;$/;"	d
r	obj/user/sh.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/sh.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/softint.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/softint.asm	/^			r = 0;$/;"	d
r	obj/user/softint.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/softint.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/spawnhello.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/spawnhello.asm	/^			r = 0;$/;"	d
r	obj/user/spawnhello.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/spawnhello.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/spin.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/spin.asm	/^			r = 0;$/;"	d
r	obj/user/spin.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/spin.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/stresssched.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/stresssched.asm	/^			r = 0;$/;"	d
r	obj/user/stresssched.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/stresssched.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testbss.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testbss.asm	/^			r = 0;$/;"	d
r	obj/user/testbss.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testbss.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testfdsharing.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testfdsharing.asm	/^			r = 0;$/;"	d
r	obj/user/testfdsharing.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testfdsharing.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testfile.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testfile.asm	/^			r = 0;$/;"	d
r	obj/user/testfile.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testfile.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testkbd.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testkbd.asm	/^			r = 0;$/;"	d
r	obj/user/testkbd.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testkbd.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testpipe.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testpipe.asm	/^			r = 0;$/;"	d
r	obj/user/testpipe.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testpipe.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testpiperace.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testpiperace.asm	/^			r = 0;$/;"	d
r	obj/user/testpiperace.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testpiperace.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testpiperace2.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testpiperace2.asm	/^			r = 0;$/;"	d
r	obj/user/testpiperace2.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testpiperace2.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testpteshare.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testpteshare.asm	/^			r = 0;$/;"	d
r	obj/user/testpteshare.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testpteshare.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testshell.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testshell.asm	/^			r = 0;$/;"	d
r	obj/user/testshell.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testshell.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testtime.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testtime.asm	/^			r = 0;$/;"	d
r	obj/user/testtime.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testtime.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/yield.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/yield.asm	/^			r = 0;$/;"	d
r	obj/user/yield.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/yield.asm	/^	r = read(0, &c, 1);$/;"	d
r_id	net/lwip/core/snmp/mib_structs.c	/^  s32_t r_id;$/;"	m	struct:nse	file:
r_nl	net/lwip/core/snmp/mib_structs.c	/^  u8_t r_nl;$/;"	m	struct:nse	file:
r_ptr	net/lwip/core/snmp/mib_structs.c	/^  struct mib_node* r_ptr;$/;"	m	struct:nse	typeref:struct:nse::mib_node	file:
ram	net/lwip/core/mem.c	/^static u8_t *ram;$/;"	v	file:
ram	obj/net/ns.asm	/^  ram = LWIP_MEM_ALIGN(ram_heap);$/;"	d
ram_end	net/lwip/core/mem.c	/^static struct mem *ram_end;$/;"	v	typeref:struct:mem	file:
ram_end	obj/net/ns.asm	/^  ram_end = (struct mem *)&ram[MEM_SIZE_ALIGNED];$/;"	d
ram_heap	net/lwip/core/mem.c	/^static u8_t ram_heap[MEM_SIZE_ALIGNED + (2*SIZEOF_STRUCT_MEM) + MEM_ALIGNMENT];$/;"	v	file:
rambuf	obj/net/ns.asm	/^  rambuf = pbuf_alloc(PBUF_LINK, 0, PBUF_REF);$/;"	d
randCount	net/lwip/netif/ppp/randm.c	/^static long randCount = 0;      \/* Pseudo-random incrementer *\/$/;"	v	file:
randPool	net/lwip/netif/ppp/randm.c	/^static char randPool[RANDPOOLSZ];   \/* Pool of randomness. *\/$/;"	v	file:
raw	net/lwip/include/lwip/api.h	/^    struct raw_pcb *raw;$/;"	m	union:netconn::__anon21	typeref:struct:netconn::__anon21::raw_pcb
raw_bind	net/lwip/core/raw.c	/^raw_bind(struct raw_pcb *pcb, struct ip_addr *ipaddr)$/;"	f
raw_connect	net/lwip/core/raw.c	/^raw_connect(struct raw_pcb *pcb, struct ip_addr *ipaddr)$/;"	f
raw_init	net/lwip/include/lwip/raw.h	89;"	d
raw_input	net/lwip/core/raw.c	/^raw_input(struct pbuf *p, struct netif *inp)$/;"	f
raw_new	net/lwip/core/raw.c	/^raw_new(u8_t proto) {$/;"	f
raw_pcb	net/lwip/include/lwip/raw.h	/^struct raw_pcb {$/;"	s
raw_pcbs	net/lwip/core/raw.c	/^static struct raw_pcb *raw_pcbs;$/;"	v	typeref:struct:raw_pcb	file:
raw_pcbs	obj/net/ns.asm	/^            raw_pcbs = pcb;$/;"	d
raw_pcbs	obj/net/ns.asm	/^    raw_pcbs = pcb;$/;"	d
raw_pcbs	obj/net/ns.asm	/^    raw_pcbs = raw_pcbs->next;$/;"	d
raw_recv	net/lwip/core/raw.c	/^raw_recv(struct raw_pcb *pcb,$/;"	f
raw_remove	net/lwip/core/raw.c	/^raw_remove(struct raw_pcb *pcb)$/;"	f
raw_send	net/lwip/core/raw.c	/^raw_send(struct raw_pcb *pcb, struct pbuf *p)$/;"	f
raw_sendto	net/lwip/core/raw.c	/^raw_sendto(struct raw_pcb *pcb, struct pbuf *p, struct ip_addr *ipaddr)$/;"	f
rc	obj/fs/fs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/kern/kernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/net/ns.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/net/testinput.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/net/testoutput.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/badsegment.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/breakpoint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/buggyhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/buggyhello2.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/cat.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/divzero.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/dumbfork.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/echo.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/echosrv.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/echotest.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/evilhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/fairness.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultalloc.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultallocbad.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultbadhandler.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultdie.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultevilhandler.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultnostack.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultread.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultreadkernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultregs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultwrite.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultwritekernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/forktree.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/hello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/httpd.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/icode.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/idle.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/init.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/ls.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/lsfd.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/num.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/pingpong.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/pingpongs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/primes.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/primespipe.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/sendpage.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/sh.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/softint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/spawnhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/spin.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/stresssched.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testbss.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testfdsharing.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testfile.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testkbd.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testpipe.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testpiperace.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testpiperace2.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testpteshare.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testshell.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testtime.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/yield.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rcr0	inc/x86.h	/^rcr0(void)$/;"	f
rcr2	inc/x86.h	/^rcr2(void)$/;"	f
rcr3	inc/x86.h	/^rcr3(void)$/;"	f
rcr4	inc/x86.h	/^rcr4(void)$/;"	f
rcv_ann_wnd	net/lwip/include/lwip/tcp.h	/^  u16_t rcv_ann_wnd; \/* announced receive window *\/$/;"	m	struct:tcp_pcb
rcv_nxt	net/lwip/include/lwip/tcp.h	/^  u32_t rcv_nxt;   \/* next seqno expected *\/$/;"	m	struct:tcp_pcb
rcv_wnd	net/lwip/include/lwip/tcp.h	/^  u16_t rcv_wnd;   \/* receiver window *\/$/;"	m	struct:tcp_pcb
rcvevent	net/lwip/api/sockets.c	/^  u16_t rcvevent;$/;"	m	struct:lwip_socket	file:
read	inc/fs.h	/^	} read;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_read
read	lib/fd.c	/^read(int fdnum, void *buf, size_t n)$/;"	f
read	net/lwip/include/lwip/sockets.h	345;"	d
readRet	inc/fs.h	/^	} readRet;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsret_read
read_ebp	inc/x86.h	/^read_ebp(void)$/;"	f
read_eflags	inc/x86.h	/^read_eflags(void)$/;"	f
read_esp	inc/x86.h	/^read_esp(void)$/;"	f
read_pcap	grade-lab6	/^def read_pcap():$/;"	f
read_tsc	inc/x86.h	/^read_tsc(void)$/;"	f
readdeps	mergedep.pl	/^sub readdeps {$/;"	s
readline	lib/readline.c	/^readline(const char *prompt)$/;"	f
readn	fs/fsformat.c	/^readn(int f, void *out, size_t n)$/;"	f
readn	lib/fd.c	/^readn(int fdnum, void *buf, size_t n)$/;"	f
readsect	boot/main.c	/^readsect(void *dst, uint32_t offset)$/;"	f
readseg	boot/main.c	/^readseg(uint32_t pa, uint32_t count, uint32_t offset)$/;"	f
readset	net/lwip/api/sockets.c	/^  fd_set *readset;$/;"	m	struct:lwip_select_cb	file:
ready	grade-lab6	/^        def ready(line):$/;"	f	function:mk_test_httpd.test_httpd_test
ready	grade-lab6	/^    def ready(line):$/;"	f	function:test_echosrv
reassdatagrams	net/lwip/core/ipv4/ip_frag.c	/^static struct ip_reassdata *reassdatagrams;$/;"	v	typeref:struct:ip_reassdata	file:
reassdatagrams	obj/net/ns.asm	/^    reassdatagrams = ipr->next;$/;"	d
reassdatagrams	obj/net/ns.asm	/^  reassdatagrams = ipr;$/;"	d
rebind	obj/net/ns.asm	/^      rebind = 1;$/;"	d
rebind	obj/net/ns.asm	/^  rebind = 0;$/;"	d
receive_buf	kern/e1000.c	/^uint32_t receive_buf[PGSIZE\/sizeof(struct e1000_rx_desc)];$/;"	v
receive_packet	kern/e1000.c	/^receive_packet(uint32_t *pa, uint32_t *len)$/;"	f
recv	inc/ns.h	/^	} recv;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_recv
recv	net/lwip/include/lwip/raw.h	/^  u8_t (* recv)(void *arg, struct raw_pcb *pcb, struct pbuf *p,$/;"	m	struct:raw_pcb
recv	net/lwip/include/lwip/sockets.h	336;"	d
recv	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER recv;             \/* Received packets. *\/$/;"	m	struct:stats_proto
recv	net/lwip/include/lwip/tcp.h	/^  err_t (* recv)(void *arg, struct tcp_pcb *pcb, struct pbuf *p, err_t err);$/;"	m	struct:tcp_pcb
recv	net/lwip/include/lwip/udp.h	/^  void (* recv)(void *arg, struct udp_pcb *pcb, struct pbuf *p,$/;"	m	struct:udp_pcb
recvRet	inc/ns.h	/^	} recvRet;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsret_recv
recv_arg	net/lwip/include/lwip/raw.h	/^  void *recv_arg;$/;"	m	struct:raw_pcb
recv_arg	net/lwip/include/lwip/udp.h	/^  void *recv_arg;  $/;"	m	struct:udp_pcb
recv_avail	net/lwip/include/lwip/api.h	/^  u16_t recv_avail;$/;"	m	struct:netconn
recv_bufsize	net/lwip/include/lwip/api.h	/^  int recv_bufsize;$/;"	m	struct:netconn
recv_data	net/lwip/core/tcp_in.c	/^static struct pbuf *recv_data;$/;"	v	typeref:struct:pbuf	file:
recv_data	obj/net/ns.asm	/^              recv_data = cseg->p;$/;"	d
recv_data	obj/net/ns.asm	/^          recv_data = inseg.p;$/;"	d
recv_data	obj/net/ns.asm	/^    recv_data = NULL;$/;"	d
recv_flags	net/lwip/core/tcp_in.c	/^static u8_t recv_flags;$/;"	v	file:
recv_flags	obj/net/ns.asm	/^            recv_flags = TF_GOT_FIN;$/;"	d
recv_flags	obj/net/ns.asm	/^          recv_flags = TF_GOT_FIN;$/;"	d
recv_flags	obj/net/ns.asm	/^      recv_flags = TF_CLOSED;$/;"	d
recv_flags	obj/net/ns.asm	/^      recv_flags = TF_RESET;$/;"	d
recv_flags	obj/net/ns.asm	/^    recv_flags = 0;$/;"	d
recv_idle	net/lwip/netif/ppp/ppp.h	/^  u_short recv_idle;      \/* seconds since last NP packet received *\/$/;"	m	struct:ppp_idle
recv_raw	net/lwip/api/api_msg.c	/^recv_raw(void *arg, struct raw_pcb *pcb, struct pbuf *p,$/;"	f	file:
recv_tcp	net/lwip/api/api_msg.c	/^recv_tcp(void *arg, struct tcp_pcb *pcb, struct pbuf *p, err_t err)$/;"	f	file:
recv_timeout	net/lwip/include/lwip/api.h	/^  int recv_timeout;$/;"	m	struct:netconn
recv_udp	net/lwip/api/api_msg.c	/^recv_udp(void *arg, struct udp_pcb *pcb, struct pbuf *p,$/;"	f	file:
recvfrom	net/lwip/include/lwip/sockets.h	337;"	d
recvmbox	net/lwip/include/lwip/api.h	/^  sys_mbox_t recvmbox;$/;"	m	struct:netconn
recvqueue	kern/e1000.c	/^struct e1000_rx_desc *recvqueue;$/;"	v	typeref:struct:e1000_rx_desc
recvqueue	obj/kern/kernel.asm	/^	recvqueue = (struct e1000_rx_desc *)page2kva(pp);$/;"	d
ref	net/lwip/include/lwip/pbuf.h	/^  u16_t ref;$/;"	m	struct:pbuf
ref	obj/net/ns.asm	/^		ref = (uint32_t*) (ROUNDUP(mptr, PGSIZE) - 4);$/;"	d
ref	obj/net/ns.asm	/^	ref = (uint32_t*) (c + PGSIZE - 4);$/;"	d
ref	obj/net/ns.asm	/^	ref = (uint32_t*) (mptr + i - 4);$/;"	d
ref	obj/net/ns.asm	/^    ref = --(p->ref);$/;"	d
ref	obj/user/httpd.asm	/^		ref = (uint32_t*) (ROUNDUP(mptr, PGSIZE) - 4);$/;"	d
ref	obj/user/httpd.asm	/^	ref = (uint32_t*) (c + PGSIZE - 4);$/;"	d
ref	obj/user/httpd.asm	/^	ref = (uint32_t*) (mptr + i - 4);$/;"	d
refuse_chap	net/lwip/netif/ppp/ppp.h	/^  u_int  refuse_chap       : 1;       \/* Don't wanna auth. ourselves with CHAP *\/$/;"	m	struct:ppp_settings
refuse_pap	net/lwip/netif/ppp/ppp.h	/^  u_int  refuse_pap        : 1;       \/* Don't wanna auth. ourselves with PAP *\/$/;"	m	struct:ppp_settings
refused_data	net/lwip/include/lwip/tcp.h	/^  struct pbuf *refused_data; \/* Data previously received but not yet taken by upper layer *\/$/;"	m	struct:tcp_pcb	typeref:struct:tcp_pcb::pbuf
reg_base	kern/pci.h	/^    uint32_t reg_base[6];$/;"	m	struct:pci_func
reg_eax	inc/trap.h	/^	uint32_t reg_eax;$/;"	m	struct:PushRegs
reg_ebp	inc/trap.h	/^	uint32_t reg_ebp;$/;"	m	struct:PushRegs
reg_ebx	inc/trap.h	/^	uint32_t reg_ebx;$/;"	m	struct:PushRegs
reg_ecx	inc/trap.h	/^	uint32_t reg_ecx;$/;"	m	struct:PushRegs
reg_edi	inc/trap.h	/^	uint32_t reg_edi;$/;"	m	struct:PushRegs
reg_edx	inc/trap.h	/^	uint32_t reg_edx;$/;"	m	struct:PushRegs
reg_esi	inc/trap.h	/^	uint32_t reg_esi;$/;"	m	struct:PushRegs
reg_oesp	inc/trap.h	/^	uint32_t reg_oesp;		\/* Useless *\/$/;"	m	struct:PushRegs
reg_size	kern/pci.h	/^    uint32_t reg_size[6];$/;"	m	struct:pci_func
region_alloc	kern/env.c	/^region_alloc(struct Env *e, void *va, size_t len)$/;"	f	file:
register_test	gradelib.py	/^    def register_test(fn, title=title):$/;"	f	function:test
regs	user/faultregs.c	/^	struct PushRegs regs;$/;"	m	struct:regs	typeref:struct:regs::PushRegs	file:
regs	user/faultregs.c	/^struct regs$/;"	s	file:
rejci	net/lwip/netif/ppp/fsm.h	/^  int  (*rejci)(fsm*, u_char*, int);                \/* Reject our Configuration Information *\/$/;"	m	struct:fsm_callbacks
relocated	kern/entry.S	/^relocated:$/;"	l
relocated	obj/kern/kernel.asm	/^relocated:$/;"	l
rem	obj/net/ns.asm	/^      rem = *ap % (u8_t)10;$/;"	d
rem	obj/net/testinput.asm	/^      rem = *ap % (u8_t)10;$/;"	d
rem	obj/user/echosrv.asm	/^      rem = *ap % (u8_t)10;$/;"	d
rem	obj/user/echotest.asm	/^      rem = *ap % (u8_t)10;$/;"	d
rem	obj/user/httpd.asm	/^      rem = *ap % (u8_t)10;$/;"	d
rem_len	obj/net/ns.asm	/^    rem_len = length - p->len;$/;"	d
rem_len	obj/net/ns.asm	/^  rem_len = new_len;$/;"	d
remote_name	net/lwip/netif/ppp/ppp.h	/^  char remote_name[MAXNAMELEN   + 1]; \/* Peer's name for authentication *\/$/;"	m	struct:ppp_settings
remote_port	net/lwip/include/lwip/tcp.h	/^  u16_t remote_port;$/;"	m	struct:tcp_pcb
remote_port	net/lwip/include/lwip/udp.h	/^  u16_t local_port, remote_port;$/;"	m	struct:udp_pcb
remote_port	obj/net/ns.asm	/^    remote_port      = 0;$/;"	d
remote_port	obj/net/ns.asm	/^    remote_port      = ntohs(((struct sockaddr_in *)to)->sin_port);$/;"	d
remote_port	obj/net/ns.asm	/^    remote_port = pcb->remote_port;$/;"	d
remove	inc/fs.h	/^	} remove;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_remove
report_rxed	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER report_rxed;      \/* *\/$/;"	m	struct:stats_igmp
report_sent	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER report_sent;      \/* *\/$/;"	m	struct:stats_igmp
req	net/serv.c	/^	union Nsipc *req;$/;"	m	struct:st_args	typeref:union:st_args::Nsipc	file:
req	obj/fs/fs.asm	/^		req = ipc_recv((int32_t *) &whom, fsreq, &perm);$/;"	d
req	obj/net/ns.asm	/^		req = ipc_recv((int32_t *) &whom, nsoutreq, &perm);$/;"	d
req	obj/net/testinput.asm	/^		req = ipc_recv((int32_t *) &whom, nsoutreq, &perm);$/;"	d
req	obj/net/testoutput.asm	/^		req = ipc_recv((int32_t *) &whom, nsoutreq, &perm);$/;"	d
req_addr	net/lwip/netif/ppp/ipcp.h	/^  u_int   req_addr      : 1; \/* Ask peer to send IP address? *\/$/;"	m	struct:ipcp_options
req_addrlen	inc/ns.h	/^		socklen_t req_addrlen;$/;"	m	struct:Nsipc::Nsreq_accept
req_backlog	inc/ns.h	/^		int req_backlog;$/;"	m	struct:Nsipc::Nsreq_listen
req_buf	inc/fs.h	/^		char req_buf[PGSIZE - (sizeof(int) + sizeof(size_t))];$/;"	m	struct:Fsipc::Fsreq_write
req_buf	inc/ns.h	/^		char req_buf[0];$/;"	m	struct:Nsipc::Nsreq_send
req_dns1	net/lwip/netif/ppp/ipcp.h	/^  u_int   req_dns1      : 1; \/* Ask peer to send primary DNS address? *\/$/;"	m	struct:ipcp_options
req_dns2	net/lwip/netif/ppp/ipcp.h	/^  u_int   req_dns2      : 1; \/* Ask peer to send secondary DNS address? *\/$/;"	m	struct:ipcp_options
req_domain	inc/ns.h	/^		int req_domain;$/;"	m	struct:Nsipc::Nsreq_socket
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_flush
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_read
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_set_size
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_stat
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_write
req_flags	inc/ns.h	/^		unsigned int req_flags;$/;"	m	struct:Nsipc::Nsreq_recv
req_flags	inc/ns.h	/^		unsigned int req_flags;$/;"	m	struct:Nsipc::Nsreq_send
req_free	user/httpd.c	/^req_free(struct http_request *req)$/;"	f	file:
req_how	inc/ns.h	/^		int req_how;$/;"	m	struct:Nsipc::Nsreq_shutdown
req_len	inc/ns.h	/^		int req_len;$/;"	m	struct:Nsipc::Nsreq_recv
req_n	inc/fs.h	/^		size_t req_n;$/;"	m	struct:Fsipc::Fsreq_read
req_n	inc/fs.h	/^		size_t req_n;$/;"	m	struct:Fsipc::Fsreq_write
req_name	inc/ns.h	/^		struct sockaddr req_name;$/;"	m	struct:Nsipc::Nsreq_bind	typeref:struct:Nsipc::Nsreq_bind::sockaddr
req_name	inc/ns.h	/^		struct sockaddr req_name;$/;"	m	struct:Nsipc::Nsreq_connect	typeref:struct:Nsipc::Nsreq_connect::sockaddr
req_namelen	inc/ns.h	/^		socklen_t req_namelen;$/;"	m	struct:Nsipc::Nsreq_bind
req_namelen	inc/ns.h	/^		socklen_t req_namelen;$/;"	m	struct:Nsipc::Nsreq_connect
req_omode	inc/fs.h	/^		int req_omode;$/;"	m	struct:Fsipc::Fsreq_open
req_path	inc/fs.h	/^		char req_path[MAXPATHLEN];$/;"	m	struct:Fsipc::Fsreq_open
req_path	inc/fs.h	/^		char req_path[MAXPATHLEN];$/;"	m	struct:Fsipc::Fsreq_remove
req_protocol	inc/ns.h	/^		int req_protocol;$/;"	m	struct:Nsipc::Nsreq_socket
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_accept
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_bind
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_close
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_connect
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_listen
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_recv
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_send
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_shutdown
req_size	inc/fs.h	/^		off_t req_size;$/;"	m	struct:Fsipc::Fsreq_set_size
req_size	inc/ns.h	/^		int req_size;$/;"	m	struct:Nsipc::Nsreq_send
req_type	inc/ns.h	/^		int req_type;$/;"	m	struct:Nsipc::Nsreq_socket
reqci	net/lwip/netif/ppp/fsm.h	/^  int  (*reqci)(fsm*, u_char*, int*, int);          \/* Request peer's Configuration Information *\/$/;"	m	struct:fsm_callbacks
reqid	net/lwip/netif/ppp/fsm.h	/^  u_char reqid;                    \/* Current request id *\/$/;"	m	struct:fsm
reqno	net/serv.c	/^	int32_t reqno;$/;"	m	struct:st_args	file:
reqno	obj/net/ns.asm	/^		reqno = ipc_recv((int32_t *) &whom, (void *) va, &perm);$/;"	d
request_timeout	net/lwip/include/lwip/dhcp.h	/^  u16_t request_timeout; \/* #ticks with period DHCP_FINE_TIMER_SECS for request timeout *\/$/;"	m	struct:dhcp
reserved	kern/mpconfig.c	/^	uint8_t reserved;$/;"	m	struct:mpconf	file:
reserved	kern/mpconfig.c	/^	uint8_t reserved[3];$/;"	m	struct:mp	file:
reserved	kern/mpconfig.c	/^	uint8_t reserved[8];$/;"	m	struct:mpproc	file:
reset_fs	gradelib.py	/^def reset_fs():$/;"	f
resetci	net/lwip/netif/ppp/fsm.h	/^  void (*resetci)(fsm*);                            \/* Reset our Configuration Information *\/$/;"	m	struct:fsm_callbacks
resp_id	net/lwip/netif/ppp/chap.h	/^  u_char resp_id;                         \/* ID for response messages *\/$/;"	m	struct:chap_state
resp_length	net/lwip/netif/ppp/chap.h	/^  u_char resp_length;                     \/* length of response *\/$/;"	m	struct:chap_state
resp_name	net/lwip/netif/ppp/chap.h	/^  char *resp_name;                        \/* Our name to send with response *\/$/;"	m	struct:chap_state
resp_transmits	net/lwip/netif/ppp/chap.h	/^  int resp_transmits;                     \/* Number of transmissions of response *\/$/;"	m	struct:chap_state
resp_type	net/lwip/netif/ppp/chap.h	/^  u_char resp_type;                       \/* hash algorithm for responses *\/$/;"	m	struct:chap_state
responce_header	user/httpd.c	/^struct responce_header {$/;"	s	file:
response	net/lwip/netif/ppp/chap.h	/^  u_char response[MAX_RESPONSE_LENGTH];   \/* Response to send *\/$/;"	m	struct:chap_state
restart	net/lwip/netif/ppp/lcp.h	/^    u_int restart           : 1; \/* Restart vs. exit after close *\/$/;"	m	struct:lcp_options
result	lib/fprintf.c	/^	ssize_t result;	\/\/ accumulated results from write$/;"	m	struct:printbuf	file:
result	obj/kern/kernel.asm	/^	result = nextfree;$/;"	d
result	obj/kern/kernel.asm	/^	result = page_free_list;$/;"	d
result	obj/net/ns.asm	/^          result = ERR_OK;$/;"	d
result	obj/net/ns.asm	/^      result = etharp_send_ip(netif, q, srcaddr, &(arp_table[i].ethaddr));$/;"	d
result	obj/net/ns.asm	/^    result = etharp_request(netif, ipaddr);$/;"	d
result	obj/net/ns.asm	/^  result = dhcp_create_request(netif);$/;"	d
result	obj/net/ns.asm	/^  result = dhcp_discover(netif);$/;"	d
result	obj/net/ns.asm	/^  result = etharp_query(netif, &dhcp->offered_ip_addr, NULL);$/;"	d
result	obj/net/ns.asm	/^  result = netif->linkoutput(netif, p);$/;"	d
reswitch	obj/fs/fs.asm	/^	reswitch:$/;"	l
reswitch	obj/kern/kernel.asm	/^	reswitch:$/;"	l
reswitch	obj/net/ns.asm	/^	reswitch:$/;"	l
reswitch	obj/net/testinput.asm	/^	reswitch:$/;"	l
reswitch	obj/net/testoutput.asm	/^	reswitch:$/;"	l
reswitch	obj/user/badsegment.asm	/^	reswitch:$/;"	l
reswitch	obj/user/breakpoint.asm	/^	reswitch:$/;"	l
reswitch	obj/user/buggyhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/buggyhello2.asm	/^	reswitch:$/;"	l
reswitch	obj/user/cat.asm	/^	reswitch:$/;"	l
reswitch	obj/user/divzero.asm	/^	reswitch:$/;"	l
reswitch	obj/user/dumbfork.asm	/^	reswitch:$/;"	l
reswitch	obj/user/echo.asm	/^	reswitch:$/;"	l
reswitch	obj/user/echosrv.asm	/^	reswitch:$/;"	l
reswitch	obj/user/echotest.asm	/^	reswitch:$/;"	l
reswitch	obj/user/evilhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/fairness.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultalloc.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultallocbad.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultbadhandler.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultdie.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultevilhandler.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultnostack.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultread.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultreadkernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultregs.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultwrite.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultwritekernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/forktree.asm	/^	reswitch:$/;"	l
reswitch	obj/user/hello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/httpd.asm	/^	reswitch:$/;"	l
reswitch	obj/user/icode.asm	/^	reswitch:$/;"	l
reswitch	obj/user/idle.asm	/^	reswitch:$/;"	l
reswitch	obj/user/init.asm	/^	reswitch:$/;"	l
reswitch	obj/user/ls.asm	/^	reswitch:$/;"	l
reswitch	obj/user/lsfd.asm	/^	reswitch:$/;"	l
reswitch	obj/user/num.asm	/^	reswitch:$/;"	l
reswitch	obj/user/pingpong.asm	/^	reswitch:$/;"	l
reswitch	obj/user/pingpongs.asm	/^	reswitch:$/;"	l
reswitch	obj/user/primes.asm	/^	reswitch:$/;"	l
reswitch	obj/user/primespipe.asm	/^	reswitch:$/;"	l
reswitch	obj/user/sendpage.asm	/^	reswitch:$/;"	l
reswitch	obj/user/sh.asm	/^	reswitch:$/;"	l
reswitch	obj/user/softint.asm	/^	reswitch:$/;"	l
reswitch	obj/user/spawnhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/spin.asm	/^	reswitch:$/;"	l
reswitch	obj/user/stresssched.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testbss.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testfdsharing.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testfile.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testkbd.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testpipe.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testpiperace.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testpiperace2.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testpteshare.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testshell.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testtime.asm	/^	reswitch:$/;"	l
reswitch	obj/user/yield.asm	/^	reswitch:$/;"	l
ret	obj/fs/fs.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/fs/fs.asm	/^	ret = dst;$/;"	d
ret	obj/kern/kernel.asm	/^			ret = syscall(	$/;"	d
ret	obj/kern/kernel.asm	/^	ret = dst;$/;"	d
ret	obj/net/ns.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/net/ns.asm	/^	ret = dst;$/;"	d
ret	obj/net/ns.asm	/^      ret = ip_output_if(p, &(iphdr->src), IP_HDRINCL,$/;"	d
ret	obj/net/ns.asm	/^    ret = pbuf_copy_partial(dhcp->p, dhcp->options_in, dhcp->options_in_len, sizeof(struct dhcp_msg) - DHCP_OPTIONS_LEN);$/;"	d
ret	obj/net/ns.asm	/^  ret = pbuf_copy_partial(dhcp->p, dhcp->msg_in, sizeof(struct dhcp_msg) - DHCP_OPTIONS_LEN, 0);$/;"	d
ret	obj/net/ns.asm	/^  ret = tcp_enqueue(pcb, NULL, 0, TCP_SYN, 0, (u8_t *)&optdata, 4);$/;"	d
ret	obj/net/testinput.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/net/testinput.asm	/^	ret = dst;$/;"	d
ret	obj/net/testoutput.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/net/testoutput.asm	/^	ret = dst;$/;"	d
ret	obj/user/badsegment.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/badsegment.asm	/^	ret = dst;$/;"	d
ret	obj/user/breakpoint.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/breakpoint.asm	/^	ret = dst;$/;"	d
ret	obj/user/buggyhello.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/buggyhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/buggyhello2.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/buggyhello2.asm	/^	ret = dst;$/;"	d
ret	obj/user/cat.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/cat.asm	/^	ret = dst;$/;"	d
ret	obj/user/divzero.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/divzero.asm	/^	ret = dst;$/;"	d
ret	obj/user/dumbfork.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/dumbfork.asm	/^	ret = dst;$/;"	d
ret	obj/user/echo.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/echo.asm	/^	ret = dst;$/;"	d
ret	obj/user/echosrv.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/echosrv.asm	/^	ret = dst;$/;"	d
ret	obj/user/echotest.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/echotest.asm	/^	ret = dst;$/;"	d
ret	obj/user/evilhello.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/evilhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/fairness.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/fairness.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultalloc.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultalloc.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultallocbad.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultallocbad.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultbadhandler.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultbadhandler.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultdie.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultdie.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultevilhandler.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultevilhandler.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultnostack.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultnostack.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultread.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultread.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultreadkernel.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultreadkernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultregs.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultregs.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultwrite.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultwrite.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultwritekernel.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultwritekernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/forktree.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/forktree.asm	/^	ret = dst;$/;"	d
ret	obj/user/hello.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/hello.asm	/^	ret = dst;$/;"	d
ret	obj/user/httpd.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/httpd.asm	/^	ret = dst;$/;"	d
ret	obj/user/icode.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/icode.asm	/^	ret = dst;$/;"	d
ret	obj/user/idle.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/idle.asm	/^	ret = dst;$/;"	d
ret	obj/user/init.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/init.asm	/^	ret = dst;$/;"	d
ret	obj/user/ls.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/ls.asm	/^	ret = dst;$/;"	d
ret	obj/user/lsfd.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/lsfd.asm	/^	ret = dst;$/;"	d
ret	obj/user/num.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/num.asm	/^	ret = dst;$/;"	d
ret	obj/user/pingpong.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/pingpong.asm	/^	ret = dst;$/;"	d
ret	obj/user/pingpongs.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/pingpongs.asm	/^	ret = dst;$/;"	d
ret	obj/user/primes.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/primes.asm	/^	ret = dst;$/;"	d
ret	obj/user/primespipe.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/primespipe.asm	/^	ret = dst;$/;"	d
ret	obj/user/sendpage.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/sendpage.asm	/^	ret = dst;$/;"	d
ret	obj/user/sh.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/sh.asm	/^	ret = dst;$/;"	d
ret	obj/user/softint.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/softint.asm	/^	ret = dst;$/;"	d
ret	obj/user/spawnhello.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/spawnhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/spin.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/spin.asm	/^	ret = dst;$/;"	d
ret	obj/user/stresssched.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/stresssched.asm	/^	ret = dst;$/;"	d
ret	obj/user/testbss.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testbss.asm	/^	ret = dst;$/;"	d
ret	obj/user/testfdsharing.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testfdsharing.asm	/^	ret = dst;$/;"	d
ret	obj/user/testfile.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testfile.asm	/^	ret = dst;$/;"	d
ret	obj/user/testkbd.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testkbd.asm	/^	ret = dst;$/;"	d
ret	obj/user/testpipe.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testpipe.asm	/^	ret = dst;$/;"	d
ret	obj/user/testpiperace.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testpiperace.asm	/^	ret = dst;$/;"	d
ret	obj/user/testpiperace2.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testpiperace2.asm	/^	ret = dst;$/;"	d
ret	obj/user/testpteshare.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testpteshare.asm	/^	ret = dst;$/;"	d
ret	obj/user/testshell.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testshell.asm	/^	ret = dst;$/;"	d
ret	obj/user/testtime.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testtime.asm	/^	ret = dst;$/;"	d
ret	obj/user/yield.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/yield.asm	/^	ret = dst;$/;"	d
ret_addr	inc/ns.h	/^		struct sockaddr ret_addr;$/;"	m	struct:Nsipc::Nsret_accept	typeref:struct:Nsipc::Nsret_accept::sockaddr
ret_addrlen	inc/ns.h	/^		socklen_t ret_addrlen;$/;"	m	struct:Nsipc::Nsret_accept
ret_buf	inc/fs.h	/^		char ret_buf[PGSIZE];$/;"	m	struct:Fsipc::Fsret_read
ret_buf	inc/ns.h	/^		char ret_buf[0];$/;"	m	struct:Nsipc::Nsret_recv
ret_isdir	inc/fs.h	/^		int ret_isdir;$/;"	m	struct:Fsipc::Fsret_stat
ret_name	inc/fs.h	/^		char ret_name[MAXNAMELEN];$/;"	m	struct:Fsipc::Fsret_stat
ret_size	inc/fs.h	/^		off_t ret_size;$/;"	m	struct:Fsipc::Fsret_stat
retransmit	net/lwip/netif/ppp/fsm.h	/^  void (*retransmit)(fsm*);                         \/* Retransmission is necessary *\/$/;"	m	struct:fsm_callbacks
retransmits	net/lwip/netif/ppp/fsm.h	/^  int retransmits;                 \/* Number of retransmissions left *\/$/;"	m	struct:fsm
retries	net/lwip/core/dns.c	/^  u8_t  retries;$/;"	m	struct:dns_table_entry	file:
rfd	obj/user/testshell.asm	/^	rfd = pfds[0];$/;"	d
rfile	obj/kern/kernel.asm	/^	rfile = (stab_end - stabs) - 1;$/;"	d
rfun	obj/kern/kernel.asm	/^	rfun = rfile;$/;"	d
rhl	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_resp_header_lengths rhl;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_resp_header_lengths
rid	net/lwip/include/lwip/snmp_msg.h	/^  s32_t rid;$/;"	m	struct:snmp_msg_pstat
ridlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t ridlen;$/;"	m	struct:snmp_resp_header_lengths
ridlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t ridlenlen;$/;"	m	struct:snmp_resp_header_lengths
right_wnd_edge	obj/net/ns.asm	/^    right_wnd_edge = pcb->snd_wnd + pcb->snd_wl1;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfun;$/;"	d
rp	obj/net/ns.asm	/^  rp = str;$/;"	d
rp	obj/net/testinput.asm	/^  rp = str;$/;"	d
rp	obj/user/echosrv.asm	/^  rp = str;$/;"	d
rp	obj/user/echotest.asm	/^  rp = str;$/;"	d
rp	obj/user/httpd.asm	/^  rp = str;$/;"	d
rpos	kern/console.c	/^	uint32_t rpos;$/;"	m	struct:__anon34	file:
rseg	obj/net/ns.asm	/^      rseg = pcb->unacked;$/;"	d
rstate	net/lwip/netif/ppp/vj.h	/^  struct cstate rstate[MAX_SLOTS]; \/* receive connection states *\/$/;"	m	struct:vjcompress	typeref:struct:vjcompress::cstate
rt	net/lwip/include/lwip/snmp_msg.h	/^  u8_t rt;$/;"	m	struct:snmp_msg_pstat
rterr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER rterr;            \/* Routing error. *\/$/;"	m	struct:stats_proto
rtime	net/lwip/include/lwip/tcp.h	/^  s16_t rtime;$/;"	m	struct:tcp_pcb
rto	net/lwip/include/lwip/tcp.h	/^  s16_t rto;    \/* retransmission time-out *\/$/;"	m	struct:tcp_pcb
rtseq	net/lwip/include/lwip/tcp.h	/^  u32_t rtseq;  \/* sequence number being timed *\/$/;"	m	struct:tcp_pcb
rttest	net/lwip/include/lwip/tcp.h	/^  u32_t rttest; \/* RTT estimate in 500ms ticks *\/$/;"	m	struct:tcp_pcb
run_qemu	gradelib.py	/^    def run_qemu(self, *monitors, **kw):$/;"	m	class:Runner
run_qemu_kw	gradelib.py	/^        def run_qemu_kw(target_base="qemu", make_args=[], timeout=30):$/;"	f	function:Runner.run_qemu
run_test	gradelib.py	/^        def run_test():$/;"	f	function:test.register_test
run_tests	gradelib.py	/^def run_tests():$/;"	f
runcmd	kern/monitor.c	/^runcmd(char *buf, struct Trapframe *tf)$/;"	f	file:
runcmd	user/sh.c	/^runcmd(char* s)$/;"	f
runit	obj/user/sh.asm	/^runit:$/;"	l
s	net/lwip/api/sockets.c	/^  int s;$/;"	m	struct:lwip_setgetsockopt_data	file:
s	obj/fs/fs.asm	/^	s = src;$/;"	d
s	obj/kern/kernel.asm	/^	s = src;$/;"	d
s	obj/net/ns.asm	/^	s = src;$/;"	d
s	obj/net/ns.asm	/^    s = conn->socket;$/;"	d
s	obj/net/ns.asm	/^  s = data->s;$/;"	d
s	obj/net/testinput.asm	/^	s = src;$/;"	d
s	obj/net/testoutput.asm	/^	s = src;$/;"	d
s	obj/user/badsegment.asm	/^	s = src;$/;"	d
s	obj/user/breakpoint.asm	/^	s = src;$/;"	d
s	obj/user/buggyhello.asm	/^	s = src;$/;"	d
s	obj/user/buggyhello2.asm	/^	s = src;$/;"	d
s	obj/user/cat.asm	/^	s = src;$/;"	d
s	obj/user/divzero.asm	/^	s = src;$/;"	d
s	obj/user/dumbfork.asm	/^	s = src;$/;"	d
s	obj/user/echo.asm	/^	s = src;$/;"	d
s	obj/user/echosrv.asm	/^	s = src;$/;"	d
s	obj/user/echotest.asm	/^	s = src;$/;"	d
s	obj/user/evilhello.asm	/^	s = src;$/;"	d
s	obj/user/fairness.asm	/^	s = src;$/;"	d
s	obj/user/faultalloc.asm	/^	s = src;$/;"	d
s	obj/user/faultallocbad.asm	/^	s = src;$/;"	d
s	obj/user/faultbadhandler.asm	/^	s = src;$/;"	d
s	obj/user/faultdie.asm	/^	s = src;$/;"	d
s	obj/user/faultevilhandler.asm	/^	s = src;$/;"	d
s	obj/user/faultnostack.asm	/^	s = src;$/;"	d
s	obj/user/faultread.asm	/^	s = src;$/;"	d
s	obj/user/faultreadkernel.asm	/^	s = src;$/;"	d
s	obj/user/faultregs.asm	/^	s = src;$/;"	d
s	obj/user/faultwrite.asm	/^	s = src;$/;"	d
s	obj/user/faultwritekernel.asm	/^	s = src;$/;"	d
s	obj/user/forktree.asm	/^	s = src;$/;"	d
s	obj/user/hello.asm	/^	s = src;$/;"	d
s	obj/user/httpd.asm	/^	s = src;$/;"	d
s	obj/user/icode.asm	/^	s = src;$/;"	d
s	obj/user/idle.asm	/^	s = src;$/;"	d
s	obj/user/init.asm	/^	s = src;$/;"	d
s	obj/user/ls.asm	/^	s = src;$/;"	d
s	obj/user/lsfd.asm	/^	s = src;$/;"	d
s	obj/user/num.asm	/^	s = src;$/;"	d
s	obj/user/pingpong.asm	/^	s = src;$/;"	d
s	obj/user/pingpongs.asm	/^	s = src;$/;"	d
s	obj/user/primes.asm	/^	s = src;$/;"	d
s	obj/user/primespipe.asm	/^	s = src;$/;"	d
s	obj/user/sendpage.asm	/^	s = src;$/;"	d
s	obj/user/sh.asm	/^	s = src;$/;"	d
s	obj/user/softint.asm	/^	s = src;$/;"	d
s	obj/user/spawnhello.asm	/^	s = src;$/;"	d
s	obj/user/spin.asm	/^	s = src;$/;"	d
s	obj/user/stresssched.asm	/^	s = src;$/;"	d
s	obj/user/testbss.asm	/^	s = src;$/;"	d
s	obj/user/testfdsharing.asm	/^	s = src;$/;"	d
s	obj/user/testfile.asm	/^	s = src;$/;"	d
s	obj/user/testkbd.asm	/^	s = src;$/;"	d
s	obj/user/testpipe.asm	/^	s = src;$/;"	d
s	obj/user/testpiperace.asm	/^	s = src;$/;"	d
s	obj/user/testpiperace2.asm	/^	s = src;$/;"	d
s	obj/user/testpteshare.asm	/^	s = src;$/;"	d
s	obj/user/testshell.asm	/^	s = src;$/;"	d
s	obj/user/testtime.asm	/^	s = src;$/;"	d
s	obj/user/yield.asm	/^	s = src;$/;"	d
s16_t	net/lwip/jos/arch/cc.h	/^typedef int16_t s16_t;$/;"	t
s32_t	net/lwip/jos/arch/cc.h	/^typedef int32_t s32_t;$/;"	t
s64_t	net/lwip/jos/arch/cc.h	/^typedef int64_t s64_t;$/;"	t
s8_t	net/lwip/jos/arch/cc.h	/^typedef int8_t s8_t;$/;"	t
s8_t	obj/net/ns.asm	/^s8_t$/;"	l
s_addr	net/lwip/include/ipv4/lwip/inet.h	/^  u32_t s_addr;$/;"	m	struct:in_addr
s_magic	inc/fs.h	/^	uint32_t s_magic;		\/\/ Magic number: FS_MAGIC$/;"	m	struct:Super
s_nblocks	inc/fs.h	/^	uint32_t s_nblocks;		\/\/ Total number of blocks on disk$/;"	m	struct:Super
s_root	inc/fs.h	/^	struct File s_root;		\/\/ Root directory node$/;"	m	struct:Super	typeref:struct:Super::File
sa	net/lwip/include/lwip/tcp.h	/^  s16_t sa, sv; \/* @todo document this *\/$/;"	m	struct:tcp_pcb
sa_data	net/lwip/include/lwip/sockets.h	/^  char sa_data[14];$/;"	m	struct:sockaddr
sa_family	net/lwip/include/lwip/sockets.h	/^  u8_t sa_family;$/;"	m	struct:sockaddr
sa_len	net/lwip/include/lwip/sockets.h	/^  u8_t sa_len;$/;"	m	struct:sockaddr
save	gradelib.py	/^def save(path):$/;"	f
save_on_finish	gradelib.py	/^    def save_on_finish(fail):$/;"	f	function:save
save_pcap	grade-lab6	/^    def save_pcap(fail):$/;"	f	function:save_pcap_on_fail
save_pcap_on_fail	grade-lab6	/^def save_pcap_on_fail():$/;"	f
sc_ac_cookie	net/lwip/netif/ppp/ppp_oe.c	/^  u8_t *sc_ac_cookie;          \/* content of AC cookie we must echo back *\/$/;"	m	struct:pppoe_softc	file:
sc_ac_cookie_len	net/lwip/netif/ppp/ppp_oe.c	/^  size_t sc_ac_cookie_len;     \/* length of cookie data *\/$/;"	m	struct:pppoe_softc	file:
sc_concentrator_name	net/lwip/netif/ppp/ppp_oe.c	/^  char *sc_concentrator_name;  \/* if != NULL: requested concentrator id *\/$/;"	m	struct:pppoe_softc	file:
sc_dest	net/lwip/netif/ppp/ppp_oe.c	/^  struct eth_addr sc_dest;     \/* hardware address of concentrator *\/$/;"	m	struct:pppoe_softc	typeref:struct:pppoe_softc::eth_addr	file:
sc_ethif	net/lwip/netif/ppp/ppp_oe.c	/^  struct netif *sc_ethif;      \/* ethernet interface we are using *\/$/;"	m	struct:pppoe_softc	typeref:struct:pppoe_softc::netif	file:
sc_hunique	net/lwip/netif/ppp/ppp_oe.c	/^  u8_t *sc_hunique;            \/* content of host unique we must echo back *\/$/;"	m	struct:pppoe_softc	file:
sc_hunique_len	net/lwip/netif/ppp/ppp_oe.c	/^  size_t sc_hunique_len;       \/* length of host unique *\/$/;"	m	struct:pppoe_softc	file:
sc_linkStatusCB	net/lwip/netif/ppp/ppp_oe.c	/^  void (*sc_linkStatusCB)(int pd, int up);$/;"	m	struct:pppoe_softc	file:
sc_padi_retried	net/lwip/netif/ppp/ppp_oe.c	/^  int sc_padi_retried;         \/* number of PADI retries already done *\/$/;"	m	struct:pppoe_softc	file:
sc_padr_retried	net/lwip/netif/ppp/ppp_oe.c	/^  int sc_padr_retried;         \/* number of PADR retries already done *\/$/;"	m	struct:pppoe_softc	file:
sc_pd	net/lwip/netif/ppp/ppp_oe.c	/^  int sc_pd;                   \/* ppp unit number *\/$/;"	m	struct:pppoe_softc	file:
sc_service_name	net/lwip/netif/ppp/ppp_oe.c	/^  char *sc_service_name;       \/* if != NULL: requested name of service *\/$/;"	m	struct:pppoe_softc	file:
sc_session	net/lwip/netif/ppp/ppp_oe.c	/^  u16_t sc_session;            \/* PPPoE session id *\/$/;"	m	struct:pppoe_softc	file:
sc_state	net/lwip/netif/ppp/ppp_oe.c	/^  int sc_state;                \/* discovery phase or session connected *\/$/;"	m	struct:pppoe_softc	file:
sched_halt	kern/sched.c	/^sched_halt(void)$/;"	f
sched_yield	kern/sched.c	/^sched_yield(void)$/;"	f
sd_avl	inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:Segdesc
sd_base_15_0	inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:Segdesc
sd_base_23_16	inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:Segdesc
sd_base_31_24	inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:Segdesc
sd_db	inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:Segdesc
sd_dpl	inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:Segdesc
sd_g	inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:Segdesc
sd_lim_15_0	inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:Segdesc
sd_lim_19_16	inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:Segdesc
sd_p	inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:Segdesc
sd_rsv1	inc/mmu.h	/^	unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	struct:Segdesc
sd_s	inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:Segdesc
sd_type	inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:Segdesc
seek	lib/fd.c	/^seek(int fdnum, off_t offset)$/;"	f
seen_ack	net/lwip/netif/ppp/fsm.h	/^  u_char seen_ack;                 \/* Have received valid Ack\/Nak\/Rej to Req *\/$/;"	m	struct:fsm
seg	obj/net/ns.asm	/^      seg = NULL;$/;"	d
seg	obj/net/ns.asm	/^    seg = memp_malloc(MEMP_TCP_SEG);$/;"	d
seg	obj/net/ns.asm	/^    seg = next;$/;"	d
seg	obj/net/ns.asm	/^    seg = pcb->unsent;$/;"	d
seg	obj/net/ns.asm	/^  seg = pcb->unacked->next;$/;"	d
seg	obj/net/ns.asm	/^  seg = pcb->unacked;$/;"	d
seg	obj/net/ns.asm	/^  seg = pcb->unsent;$/;"	d
seglen	obj/net/ns.asm	/^    seglen = left > pcb->mss? pcb->mss: left;$/;"	d
seglen	obj/net/ns.asm	/^  seglen = 0;$/;"	d
select	net/lwip/include/lwip/sockets.h	341;"	d
select_cb_list	net/lwip/api/sockets.c	/^static struct lwip_select_cb *select_cb_list;$/;"	v	typeref:struct:lwip_select_cb	file:
select_cb_list	obj/net/ns.asm	/^      select_cb_list = select_cb.next;$/;"	d
select_cb_list	obj/net/ns.asm	/^    select_cb_list = &select_cb;$/;"	d
selectsem	net/lwip/api/sockets.c	/^static sys_sem_t selectsem;$/;"	v	file:
selectsem	obj/net/ns.asm	/^  selectsem = sys_sem_new(1);$/;"	d
sem	net/lwip/api/sockets.c	/^  sys_sem_t sem;$/;"	m	struct:lwip_select_cb	file:
sem	net/lwip/include/lwip/api_msg.h	/^  sys_sem_t sem;$/;"	m	struct:dns_api_msg
sem	net/lwip/include/lwip/netifapi.h	/^  sys_sem_t sem;$/;"	m	struct:netifapi_msg_msg
sem	net/lwip/include/lwip/stats.h	/^  struct stats_syselem sem;$/;"	m	struct:stats_sys	typeref:struct:stats_sys::stats_syselem
sem	net/lwip/include/lwip/tcpip.h	/^  sys_sem_t *sem;$/;"	m	struct:tcpip_msg
sem_signalled	net/lwip/api/sockets.c	/^  int sem_signalled;$/;"	m	struct:lwip_select_cb	file:
sems	net/lwip/jos/arch/sys_arch.c	/^static struct sys_sem_entry sems[NSEM];$/;"	v	typeref:struct:sys_sem_entry	file:
send	inc/ns.h	/^	} send;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_send
send	net/lwip/include/lwip/sockets.h	338;"	d
send_content_type	user/httpd.c	/^send_content_type(struct http_request *req)$/;"	f	file:
send_data	user/httpd.c	/^send_data(struct http_request *req, int fd)$/;"	f	file:
send_error	user/httpd.c	/^send_error(struct http_request *req, int code)$/;"	f	file:
send_file	user/httpd.c	/^send_file(struct http_request *req)$/;"	f	file:
send_header	user/httpd.c	/^send_header(struct http_request *req, int code)$/;"	f	file:
send_header_fin	user/httpd.c	/^send_header_fin(struct http_request *req)$/;"	f	file:
send_packets	grade-lab6	/^    def send_packets():$/;"	f	function:test_testinput_helper
send_size	user/httpd.c	/^send_size(struct http_request *req, off_t size)$/;"	f	file:
sendevent	net/lwip/api/sockets.c	/^  u16_t sendevent;$/;"	m	struct:lwip_socket	file:
sendmss	obj/net/ns.asm	/^    sendmss = LWIP_MIN(sendmss, mss_s);$/;"	d
sendto	net/lwip/include/lwip/sockets.h	339;"	d
sent	net/lwip/include/lwip/tcp.h	/^  err_t (* sent)(void *arg, struct tcp_pcb *pcb, u16_t space);$/;"	m	struct:tcp_pcb
sent_num	net/lwip/include/ipv4/lwip/autoip.h	/^  u8_t sent_num;            \/* sent number of probes or announces, dependent on state *\/$/;"	m	struct:autoip
sent_tcp	net/lwip/api/api_msg.c	/^sent_tcp(void *arg, struct tcp_pcb *pcb, u16_t len)$/;"	f	file:
sep	obj/user/ls.asm	/^			sep = "";$/;"	d
sep	obj/user/ls.asm	/^			sep = "\/";$/;"	d
seqlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t seqlen;$/;"	m	struct:snmp_resp_header_lengths
seqlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t seqlen;$/;"	m	struct:snmp_trap_header_lengths
seqlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t seqlen;$/;"	m	struct:snmp_varbind
seqlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t seqlen;$/;"	m	struct:snmp_varbind_root
seqlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t seqlenlen;$/;"	m	struct:snmp_resp_header_lengths
seqlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t seqlenlen;$/;"	m	struct:snmp_trap_header_lengths
seqlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t seqlenlen;$/;"	m	struct:snmp_varbind
seqlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t seqlenlen;$/;"	m	struct:snmp_varbind_root
seqno	net/lwip/core/dns.c	/^  u8_t  seqno;$/;"	m	struct:dns_table_entry	file:
seqno	net/lwip/core/tcp_in.c	/^static u32_t seqno, ackno;$/;"	v	file:
seqno	net/lwip/include/ipv6/lwip/icmp.h	/^  u16_t seqno;$/;"	m	struct:icmp_echo_hdr
seqno	obj/net/ns.asm	/^          seqno = pcb->ooseq->tcphdr->seqno;$/;"	d
seqno	obj/net/ns.asm	/^    seqno = pcb->snd_nxt;$/;"	d
seqno	obj/net/ns.asm	/^  seqno = pcb->snd_lbb;$/;"	d
seqno	obj/net/ns.asm	/^  seqno = tcphdr->seqno = ntohl(tcphdr->seqno);$/;"	d
serial_exists	kern/console.c	/^static bool serial_exists;$/;"	v	file:
serial_exists	obj/kern/kernel.asm	/^	serial_exists = (inb(COM1+COM_LSR) != 0xFF);$/;"	d
serial_init	kern/console.c	/^serial_init(void)$/;"	f	file:
serial_intr	kern/console.c	/^serial_intr(void)$/;"	f
serial_proc_data	kern/console.c	/^serial_proc_data(void)$/;"	f	file:
serial_putc	kern/console.c	/^serial_putc(int c)$/;"	f	file:
serve	fs/serv.c	/^serve(void)$/;"	f
serve	net/serv.c	/^serve(void) {$/;"	f
serve_flush	fs/serv.c	/^serve_flush(envid_t envid, struct Fsreq_flush *req)$/;"	f
serve_init	fs/serv.c	/^serve_init(void)$/;"	f
serve_init	net/serv.c	/^serve_init(uint32_t ipaddr, uint32_t netmask, uint32_t gw)$/;"	f
serve_open	fs/serv.c	/^serve_open(envid_t envid, struct Fsreq_open *req,$/;"	f
serve_read	fs/serv.c	/^serve_read(envid_t envid, union Fsipc *ipc)$/;"	f
serve_set_size	fs/serv.c	/^serve_set_size(envid_t envid, struct Fsreq_set_size *req)$/;"	f
serve_stat	fs/serv.c	/^serve_stat(envid_t envid, union Fsipc *ipc)$/;"	f
serve_sync	fs/serv.c	/^serve_sync(envid_t envid, union Fsipc *req)$/;"	f
serve_thread	net/serv.c	/^serve_thread(uint32_t a) {$/;"	f	file:
serve_write	fs/serv.c	/^serve_write(envid_t envid, struct Fsreq_write *req)$/;"	f
server_ip_addr	net/lwip/include/lwip/dhcp.h	/^  struct ip_addr server_ip_addr; \/* dhcp server address that offered this lease *\/$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr
serverstate	net/lwip/netif/ppp/chap.h	/^  int serverstate;                        \/* Server state *\/$/;"	m	struct:chap_state
set_errno	net/lwip/api/sockets.c	153;"	d	file:
set_errno	net/lwip/api/sockets.c	155;"	d	file:
set_pgfault_handler	lib/pgfault.c	/^set_pgfault_handler(void (*handler)(struct UTrapframe *utf))$/;"	f
set_size	inc/fs.h	/^	} set_size;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_set_size
set_test	net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_array_node
set_test	net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node
set_test	net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_list_rootnode
set_test	net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_node
set_test	net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_ram_array_node
set_test_a	net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test_a)(u8_t rid, struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node
set_test_pc	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_test_pc)(u8_t rid, struct obj_def *od);$/;"	m	struct:mib_external_node
set_test_q	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_test_q)(u8_t rid, struct obj_def *od);$/;"	m	struct:mib_external_node
set_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value)(struct obj_def *od, u16_t len, void *value);  $/;"	m	struct:mib_node
set_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_array_node
set_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node
set_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_list_rootnode
set_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_ram_array_node
set_value_a	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value_a)(u8_t rid, struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node
set_value_pc	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value_pc)(u8_t rid, struct obj_def *od);$/;"	m	struct:mib_external_node
set_value_q	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value_q)(u8_t rid, struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node
setsockopt	net/lwip/include/lwip/sockets.h	333;"	d
setup_breakpoint	gradelib.py	/^    def setup_breakpoint(runner):$/;"	f	function:stop_breakpoint
setup_call_on_line	gradelib.py	/^    def setup_call_on_line(runner):$/;"	f	function:call_on_line
setup_save	gradelib.py	/^    def setup_save(runner):$/;"	f	function:save
setup_tcp	net/lwip/api/api_msg.c	/^setup_tcp(struct netconn *conn)$/;"	f	file:
sfork	lib/fork.c	/^sfork(void)$/;"	f
sh_addr	inc/elf.h	/^	uint32_t sh_addr;$/;"	m	struct:Secthdr
sh_addralign	inc/elf.h	/^	uint32_t sh_addralign;$/;"	m	struct:Secthdr
sh_entsize	inc/elf.h	/^	uint32_t sh_entsize;$/;"	m	struct:Secthdr
sh_flags	inc/elf.h	/^	uint32_t sh_flags;$/;"	m	struct:Secthdr
sh_info	inc/elf.h	/^	uint32_t sh_info;$/;"	m	struct:Secthdr
sh_link	inc/elf.h	/^	uint32_t sh_link;$/;"	m	struct:Secthdr
sh_name	inc/elf.h	/^	uint32_t sh_name;$/;"	m	struct:Secthdr
sh_offset	inc/elf.h	/^	uint32_t sh_offset;$/;"	m	struct:Secthdr
sh_size	inc/elf.h	/^	uint32_t sh_size;$/;"	m	struct:Secthdr
sh_type	inc/elf.h	/^	uint32_t sh_type;$/;"	m	struct:Secthdr
shiftcode	kern/console.c	/^static uint8_t shiftcode[256] =$/;"	v	file:
shiftmap	kern/console.c	/^static uint8_t shiftmap[256] =$/;"	v	file:
show_command	gradelib.py	/^def show_command(cmd):$/;"	f
show_part	gradelib.py	/^    def show_part():$/;"	f	function:end_part
shutdown	inc/ns.h	/^	} shutdown;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_shutdown
shutdown	lib/sockets.c	/^shutdown(int s, int how)$/;"	f
shutdown	net/lwip/include/lwip/sockets.h	328;"	d
sifaddr	net/lwip/netif/ppp/ppp.c	/^sifaddr( int pd, u32_t o, u32_t h, u32_t m, u32_t ns1, u32_t ns2)$/;"	f
sifdefaultroute	net/lwip/netif/ppp/ppp.c	/^sifdefaultroute(int pd, u32_t l, u32_t g)$/;"	f
sifdown	net/lwip/netif/ppp/ppp.c	/^sifdown(int pd)$/;"	f
sifnpmode	net/lwip/netif/ppp/ppp.c	/^sifnpmode(int u, int proto, enum NPmode mode)$/;"	f
sifup	net/lwip/netif/ppp/ppp.c	/^sifup(int pd)$/;"	f
sifvjcomp	net/lwip/netif/ppp/ppp.c	/^sifvjcomp( int pd, int vjcomp, int cidcomp, int maxcid)$/;"	f
sig_hup	net/lwip/netif/ppp/ppp.c	/^  int  sig_hup;                 \/* Carrier lost. *\/$/;"	m	struct:PPPControl_s	file:
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "PCMP"$/;"	m	struct:mpconf	file:
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "_MP_"$/;"	m	struct:mp	file:
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ CPU signature$/;"	m	struct:mpproc	file:
silent	net/lwip/netif/ppp/lcp.h	/^    u_int silent            : 1; \/* Wait for the other end to start first *\/$/;"	m	struct:lcp_options
sin_addr	net/lwip/include/lwip/sockets.h	/^  struct in_addr sin_addr;$/;"	m	struct:sockaddr_in	typeref:struct:sockaddr_in::in_addr
sin_family	net/lwip/include/lwip/sockets.h	/^  u8_t sin_family;$/;"	m	struct:sockaddr_in
sin_len	net/lwip/include/lwip/sockets.h	/^  u8_t sin_len;$/;"	m	struct:sockaddr_in
sin_port	net/lwip/include/lwip/sockets.h	/^  u16_t sin_port;$/;"	m	struct:sockaddr_in
sin_zero	net/lwip/include/lwip/sockets.h	/^  char sin_zero[8];$/;"	m	struct:sockaddr_in
sio_fd_t	net/lwip/include/lwip/sio.h	/^typedef void * sio_fd_t;$/;"	t
sip	net/lwip/include/lwip/snmp_msg.h	/^  struct ip_addr sip;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::ip_addr
sip_raw	net/lwip/include/lwip/snmp_msg.h	/^  u8_t sip_raw[4];$/;"	m	struct:snmp_msg_trap
size	obj/kern/kernel.asm	/^			size = PCI_MAPREG_IO_SIZE(rv);$/;"	d
size	obj/kern/kernel.asm	/^			size = PCI_MAPREG_MEM_SIZE(rv);$/;"	d
size	obj/kern/kernel.asm	/^	size = ROUNDUP(size, PGSIZE);$/;"	d
size	obj/net/ns.asm	/^    size = MIN_SIZE_ALIGNED;$/;"	d
size	obj/net/ns.asm	/^  size = LWIP_MEM_ALIGN_SIZE(size);$/;"	d
size	obj/net/ns.asm	/^  size = mem->next - ptr - SIZEOF_STRUCT_MEM;$/;"	d
size_t	inc/types.h	/^typedef uint32_t size_t;$/;"	t
size_t	obj/fs/fs.asm	/^size_t$/;"	l
size_t	obj/kern/kernel.asm	/^size_t$/;"	l
size_t	obj/net/ns.asm	/^size_t$/;"	l
size_t	obj/net/testinput.asm	/^size_t$/;"	l
size_t	obj/net/testoutput.asm	/^size_t$/;"	l
size_t	obj/user/badsegment.asm	/^size_t$/;"	l
size_t	obj/user/breakpoint.asm	/^size_t$/;"	l
size_t	obj/user/buggyhello.asm	/^size_t$/;"	l
size_t	obj/user/buggyhello2.asm	/^size_t$/;"	l
size_t	obj/user/cat.asm	/^size_t$/;"	l
size_t	obj/user/divzero.asm	/^size_t$/;"	l
size_t	obj/user/dumbfork.asm	/^size_t$/;"	l
size_t	obj/user/echo.asm	/^size_t$/;"	l
size_t	obj/user/echosrv.asm	/^size_t$/;"	l
size_t	obj/user/echotest.asm	/^size_t$/;"	l
size_t	obj/user/evilhello.asm	/^size_t$/;"	l
size_t	obj/user/fairness.asm	/^size_t$/;"	l
size_t	obj/user/faultalloc.asm	/^size_t$/;"	l
size_t	obj/user/faultallocbad.asm	/^size_t$/;"	l
size_t	obj/user/faultbadhandler.asm	/^size_t$/;"	l
size_t	obj/user/faultdie.asm	/^size_t$/;"	l
size_t	obj/user/faultevilhandler.asm	/^size_t$/;"	l
size_t	obj/user/faultnostack.asm	/^size_t$/;"	l
size_t	obj/user/faultread.asm	/^size_t$/;"	l
size_t	obj/user/faultreadkernel.asm	/^size_t$/;"	l
size_t	obj/user/faultregs.asm	/^size_t$/;"	l
size_t	obj/user/faultwrite.asm	/^size_t$/;"	l
size_t	obj/user/faultwritekernel.asm	/^size_t$/;"	l
size_t	obj/user/forktree.asm	/^size_t$/;"	l
size_t	obj/user/hello.asm	/^size_t$/;"	l
size_t	obj/user/httpd.asm	/^size_t$/;"	l
size_t	obj/user/icode.asm	/^size_t$/;"	l
size_t	obj/user/idle.asm	/^size_t$/;"	l
size_t	obj/user/init.asm	/^size_t$/;"	l
size_t	obj/user/ls.asm	/^size_t$/;"	l
size_t	obj/user/lsfd.asm	/^size_t$/;"	l
size_t	obj/user/num.asm	/^size_t$/;"	l
size_t	obj/user/pingpong.asm	/^size_t$/;"	l
size_t	obj/user/pingpongs.asm	/^size_t$/;"	l
size_t	obj/user/primes.asm	/^size_t$/;"	l
size_t	obj/user/primespipe.asm	/^size_t$/;"	l
size_t	obj/user/sendpage.asm	/^size_t$/;"	l
size_t	obj/user/sh.asm	/^size_t$/;"	l
size_t	obj/user/softint.asm	/^size_t$/;"	l
size_t	obj/user/spawnhello.asm	/^size_t$/;"	l
size_t	obj/user/spin.asm	/^size_t$/;"	l
size_t	obj/user/stresssched.asm	/^size_t$/;"	l
size_t	obj/user/testbss.asm	/^size_t$/;"	l
size_t	obj/user/testfdsharing.asm	/^size_t$/;"	l
size_t	obj/user/testfile.asm	/^size_t$/;"	l
size_t	obj/user/testkbd.asm	/^size_t$/;"	l
size_t	obj/user/testpipe.asm	/^size_t$/;"	l
size_t	obj/user/testpiperace.asm	/^size_t$/;"	l
size_t	obj/user/testpiperace2.asm	/^size_t$/;"	l
size_t	obj/user/testpteshare.asm	/^size_t$/;"	l
size_t	obj/user/testshell.asm	/^size_t$/;"	l
size_t	obj/user/testtime.asm	/^size_t$/;"	l
size_t	obj/user/yield.asm	/^size_t$/;"	l
skip_slash	fs/fs.c	/^skip_slash(const char *p)$/;"	f	file:
sleep	user/testtime.c	/^sleep(int sec)$/;"	f
slipif_init	net/lwip/netif/slipif.c	/^slipif_init(struct netif *netif)$/;"	f
slipif_input	net/lwip/netif/slipif.c	/^slipif_input(struct netif *netif)$/;"	f	file:
slipif_loop	net/lwip/netif/slipif.c	/^slipif_loop(void *nf)$/;"	f	file:
slipif_output	net/lwip/netif/slipif.c	/^slipif_output(struct netif *netif, struct pbuf *p, struct ip_addr *ipaddr)$/;"	f
snd_buf	net/lwip/include/lwip/tcp.h	/^  u16_t snd_buf;   \/* Available buffer space for sending (in bytes). *\/$/;"	m	struct:tcp_pcb
snd_lbb	net/lwip/include/lwip/tcp.h	/^    snd_lbb;       \/* Sequence number of next byte to be buffered. *\/$/;"	m	struct:tcp_pcb
snd_max	net/lwip/include/lwip/tcp.h	/^    snd_max;       \/* Highest seqno sent. *\/$/;"	m	struct:tcp_pcb
snd_nxt	net/lwip/include/lwip/tcp.h	/^  u32_t snd_nxt,   \/* next seqno to be sent *\/$/;"	m	struct:tcp_pcb
snd_queuelen	net/lwip/include/lwip/tcp.h	/^  u16_t snd_queuelen; \/* Available buffer space for sending (in tcp_segs). *\/$/;"	m	struct:tcp_pcb
snd_wl1	net/lwip/include/lwip/tcp.h	/^  u32_t snd_wl1, snd_wl2, \/* Sequence and acknowledgement numbers of last$/;"	m	struct:tcp_pcb
snd_wl2	net/lwip/include/lwip/tcp.h	/^  u32_t snd_wl1, snd_wl2, \/* Sequence and acknowledgement numbers of last$/;"	m	struct:tcp_pcb
snd_wnd	net/lwip/include/lwip/tcp.h	/^  u16_t snd_wnd;   \/* sender window *\/$/;"	m	struct:tcp_pcb
snmp	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node snmp = {$/;"	v	typeref:struct:mib_array_node
snmp1_pcb	net/lwip/core/snmp/msg_in.c	/^struct udp_pcb *snmp1_pcb;$/;"	v	typeref:struct:udp_pcb
snmp_add_ifinoctets	net/lwip/core/snmp/mib2.c	/^void snmp_add_ifinoctets(struct netif *ni, u32_t value)$/;"	f
snmp_add_ifinoctets	net/lwip/include/lwip/snmp.h	242;"	d
snmp_add_ifoutoctets	net/lwip/core/snmp/mib2.c	/^void snmp_add_ifoutoctets(struct netif *ni, u32_t value)$/;"	f
snmp_add_ifoutoctets	net/lwip/include/lwip/snmp.h	246;"	d
snmp_add_snmpintotalreqvars	net/lwip/core/snmp/mib2.c	/^void snmp_add_snmpintotalreqvars(u8_t value)$/;"	f
snmp_add_snmpintotalreqvars	net/lwip/include/lwip/snmp.h	338;"	d
snmp_add_snmpintotalsetvars	net/lwip/core/snmp/mib2.c	/^void snmp_add_snmpintotalsetvars(u8_t value)$/;"	f
snmp_add_snmpintotalsetvars	net/lwip/include/lwip/snmp.h	339;"	d
snmp_add_sysuptime	net/lwip/core/snmp/mib2.c	/^void snmp_add_sysuptime(u32_t value)$/;"	f
snmp_add_sysuptime	net/lwip/include/lwip/snmp.h	235;"	d
snmp_asn1_dec_length	net/lwip/core/snmp/asn1_dec.c	/^snmp_asn1_dec_length(struct pbuf *p, u16_t ofs, u8_t *octets_used, u16_t *length)$/;"	f
snmp_asn1_dec_oid	net/lwip/core/snmp/asn1_dec.c	/^snmp_asn1_dec_oid(struct pbuf *p, u16_t ofs, u16_t len, struct snmp_obj_id *oid)$/;"	f
snmp_asn1_dec_raw	net/lwip/core/snmp/asn1_dec.c	/^snmp_asn1_dec_raw(struct pbuf *p, u16_t ofs, u16_t len, u16_t raw_len, u8_t *raw)$/;"	f
snmp_asn1_dec_s32t	net/lwip/core/snmp/asn1_dec.c	/^snmp_asn1_dec_s32t(struct pbuf *p, u16_t ofs, u16_t len, s32_t *value)$/;"	f
snmp_asn1_dec_type	net/lwip/core/snmp/asn1_dec.c	/^snmp_asn1_dec_type(struct pbuf *p, u16_t ofs, u8_t *type)$/;"	f
snmp_asn1_dec_u32t	net/lwip/core/snmp/asn1_dec.c	/^snmp_asn1_dec_u32t(struct pbuf *p, u16_t ofs, u16_t len, u32_t *value)$/;"	f
snmp_asn1_enc_length	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_length(struct pbuf *p, u16_t ofs, u16_t length)$/;"	f
snmp_asn1_enc_length_cnt	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_length_cnt(u16_t length, u8_t *octets_needed)$/;"	f
snmp_asn1_enc_oid	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_oid(struct pbuf *p, u16_t ofs, u8_t ident_len, s32_t *ident)$/;"	f
snmp_asn1_enc_oid_cnt	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_oid_cnt(u8_t ident_len, s32_t *ident, u16_t *octets_needed)$/;"	f
snmp_asn1_enc_raw	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_raw(struct pbuf *p, u16_t ofs, u8_t raw_len, u8_t *raw)$/;"	f
snmp_asn1_enc_s32t	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_s32t(struct pbuf *p, u16_t ofs, u8_t octets_needed, s32_t value)$/;"	f
snmp_asn1_enc_s32t_cnt	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_s32t_cnt(s32_t value, u16_t *octets_needed)$/;"	f
snmp_asn1_enc_type	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_type(struct pbuf *p, u16_t ofs, u8_t type)$/;"	f
snmp_asn1_enc_u32t	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_u32t(struct pbuf *p, u16_t ofs, u8_t octets_needed, u32_t value)$/;"	f
snmp_asn1_enc_u32t_cnt	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_u32t_cnt(u32_t value, u16_t *octets_needed)$/;"	f
snmp_authfail_trap	net/lwip/core/snmp/msg_out.c	/^snmp_authfail_trap(void)$/;"	f
snmp_coldstart_trap	net/lwip/core/snmp/msg_out.c	/^snmp_coldstart_trap(void)$/;"	f
snmp_dec_iflist	net/lwip/core/snmp/mib2.c	/^void snmp_dec_iflist(void)$/;"	f
snmp_dec_iflist	net/lwip/include/lwip/snmp.h	251;"	d
snmp_delete_arpidx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_delete_arpidx_tree(struct netif *ni, struct ip_addr *ip)$/;"	f
snmp_delete_arpidx_tree	net/lwip/include/lwip/snmp.h	255;"	d
snmp_delete_ipaddridx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_delete_ipaddridx_tree(struct netif *ni)$/;"	f
snmp_delete_ipaddridx_tree	net/lwip/include/lwip/snmp.h	276;"	d
snmp_delete_iprteidx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_delete_iprteidx_tree(u8_t dflt, struct netif *ni)$/;"	f
snmp_delete_iprteidx_tree	net/lwip/include/lwip/snmp.h	278;"	d
snmp_delete_udpidx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_delete_udpidx_tree(struct udp_pcb *pcb)$/;"	f
snmp_delete_udpidx_tree	net/lwip/include/lwip/snmp.h	324;"	d
snmp_error_response	net/lwip/core/snmp/msg_in.c	/^snmp_error_response(struct snmp_msg_pstat *msg_ps, u8_t error)$/;"	f	file:
snmp_expand_tree	net/lwip/core/snmp/mib_structs.c	/^snmp_expand_tree(struct mib_node *node, u8_t ident_len, s32_t *ident, struct snmp_obj_id *oidret)$/;"	f
snmp_get_object_def	net/lwip/core/snmp/mib2.c	/^snmp_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
snmp_get_snmpenableauthentraps	net/lwip/core/snmp/mib2.c	/^void snmp_get_snmpenableauthentraps(u8_t *value)$/;"	f
snmp_get_snmpenableauthentraps	net/lwip/include/lwip/snmp.h	356;"	d
snmp_get_snmpgrpid_ptr	net/lwip/core/snmp/mib2.c	/^void snmp_get_snmpgrpid_ptr(struct snmp_obj_id **oid)$/;"	f
snmp_get_snmpgrpid_ptr	net/lwip/include/lwip/snmp.h	354;"	d
snmp_get_sysobjid_ptr	net/lwip/core/snmp/mib2.c	/^void snmp_get_sysobjid_ptr(struct snmp_obj_id **oid)$/;"	f
snmp_get_sysobjid_ptr	net/lwip/include/lwip/snmp.h	233;"	d
snmp_get_sysuptime	net/lwip/core/snmp/mib2.c	/^void snmp_get_sysuptime(u32_t *value)$/;"	f
snmp_get_sysuptime	net/lwip/include/lwip/snmp.h	236;"	d
snmp_get_value	net/lwip/core/snmp/mib2.c	/^snmp_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
snmp_ids	net/lwip/core/snmp/mib2.c	/^const s32_t snmp_ids[28] = {$/;"	v
snmp_ifType	net/lwip/include/lwip/snmp.h	/^enum snmp_ifType {$/;"	g
snmp_ifType_basicISDN	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_basicISDN,$/;"	e	enum:snmp_ifType
snmp_ifType_ddn_x25	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ddn_x25,$/;"	e	enum:snmp_ifType
snmp_ifType_ds1	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ds1,                    \/* T-1 *\/$/;"	e	enum:snmp_ifType
snmp_ifType_ds3	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ds3,                    \/* T-3 *\/$/;"	e	enum:snmp_ifType
snmp_ifType_e1	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_e1,                     \/* european equiv. of T-1 *\/$/;"	e	enum:snmp_ifType
snmp_ifType_eon	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_eon,                    \/* CLNP over IP [11] *\/$/;"	e	enum:snmp_ifType
snmp_ifType_ethernet_3Mbit	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ethernet_3Mbit,$/;"	e	enum:snmp_ifType
snmp_ifType_ethernet_csmacd	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ethernet_csmacd,$/;"	e	enum:snmp_ifType
snmp_ifType_fddi	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_fddi,$/;"	e	enum:snmp_ifType
snmp_ifType_frame_relay	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_frame_relay$/;"	e	enum:snmp_ifType
snmp_ifType_hdh1822	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_hdh1822,$/;"	e	enum:snmp_ifType
snmp_ifType_hyperchannel	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_hyperchannel,$/;"	e	enum:snmp_ifType
snmp_ifType_iso88023_csmacd	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_iso88023_csmacd,$/;"	e	enum:snmp_ifType
snmp_ifType_iso88024_tokenBus	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_iso88024_tokenBus,$/;"	e	enum:snmp_ifType
snmp_ifType_iso88025_tokenRing	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_iso88025_tokenRing,$/;"	e	enum:snmp_ifType
snmp_ifType_iso88026_man	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_iso88026_man,$/;"	e	enum:snmp_ifType
snmp_ifType_lapb	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_lapb,$/;"	e	enum:snmp_ifType
snmp_ifType_nsip	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_nsip,                   \/* XNS over IP *\/$/;"	e	enum:snmp_ifType
snmp_ifType_other	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_other=1,                \/* none of the following *\/$/;"	e	enum:snmp_ifType
snmp_ifType_ppp	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ppp,$/;"	e	enum:snmp_ifType
snmp_ifType_primaryISDN	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_primaryISDN,            \/* proprietary serial *\/$/;"	e	enum:snmp_ifType
snmp_ifType_propPointToPointSerial	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_propPointToPointSerial,$/;"	e	enum:snmp_ifType
snmp_ifType_proteon_10Mbit	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_proteon_10Mbit,$/;"	e	enum:snmp_ifType
snmp_ifType_proteon_80Mbit	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_proteon_80Mbit,$/;"	e	enum:snmp_ifType
snmp_ifType_regular1822	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_regular1822,$/;"	e	enum:snmp_ifType
snmp_ifType_rfc877_x25	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_rfc877_x25,$/;"	e	enum:snmp_ifType
snmp_ifType_sdlc	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_sdlc,$/;"	e	enum:snmp_ifType
snmp_ifType_sip	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_sip,                    \/* SMDS *\/$/;"	e	enum:snmp_ifType
snmp_ifType_slip	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_slip,                   \/* generic SLIP *\/$/;"	e	enum:snmp_ifType
snmp_ifType_softwareLoopback	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_softwareLoopback,$/;"	e	enum:snmp_ifType
snmp_ifType_starLan	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_starLan,$/;"	e	enum:snmp_ifType
snmp_ifType_ultra	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ultra,                  \/* ULTRA technologies *\/$/;"	e	enum:snmp_ifType
snmp_ifindextonetif	net/lwip/core/snmp/mib_structs.c	/^snmp_ifindextonetif(s32_t ifindex, struct netif **netif)$/;"	f
snmp_inc_icmpinaddrmaskreps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinaddrmaskreps(void)$/;"	f
snmp_inc_icmpinaddrmaskreps	net/lwip/include/lwip/snmp.h	293;"	d
snmp_inc_icmpinaddrmasks	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinaddrmasks(void)$/;"	f
snmp_inc_icmpinaddrmasks	net/lwip/include/lwip/snmp.h	292;"	d
snmp_inc_icmpindestunreachs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpindestunreachs(void)$/;"	f
snmp_inc_icmpindestunreachs	net/lwip/include/lwip/snmp.h	283;"	d
snmp_inc_icmpinechoreps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinechoreps(void)$/;"	f
snmp_inc_icmpinechoreps	net/lwip/include/lwip/snmp.h	289;"	d
snmp_inc_icmpinechos	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinechos(void)$/;"	f
snmp_inc_icmpinechos	net/lwip/include/lwip/snmp.h	288;"	d
snmp_inc_icmpinerrors	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinerrors(void)$/;"	f
snmp_inc_icmpinerrors	net/lwip/include/lwip/snmp.h	282;"	d
snmp_inc_icmpinmsgs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinmsgs(void)$/;"	f
snmp_inc_icmpinmsgs	net/lwip/include/lwip/snmp.h	281;"	d
snmp_inc_icmpinparmprobs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinparmprobs(void)$/;"	f
snmp_inc_icmpinparmprobs	net/lwip/include/lwip/snmp.h	285;"	d
snmp_inc_icmpinredirects	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinredirects(void)$/;"	f
snmp_inc_icmpinredirects	net/lwip/include/lwip/snmp.h	287;"	d
snmp_inc_icmpinsrcquenchs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinsrcquenchs(void)$/;"	f
snmp_inc_icmpinsrcquenchs	net/lwip/include/lwip/snmp.h	286;"	d
snmp_inc_icmpintimeexcds	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpintimeexcds(void)$/;"	f
snmp_inc_icmpintimeexcds	net/lwip/include/lwip/snmp.h	284;"	d
snmp_inc_icmpintimestampreps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpintimestampreps(void)$/;"	f
snmp_inc_icmpintimestampreps	net/lwip/include/lwip/snmp.h	291;"	d
snmp_inc_icmpintimestamps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpintimestamps(void)$/;"	f
snmp_inc_icmpintimestamps	net/lwip/include/lwip/snmp.h	290;"	d
snmp_inc_icmpoutaddrmaskreps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutaddrmaskreps(void)$/;"	f
snmp_inc_icmpoutaddrmaskreps	net/lwip/include/lwip/snmp.h	306;"	d
snmp_inc_icmpoutaddrmasks	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutaddrmasks(void)$/;"	f
snmp_inc_icmpoutaddrmasks	net/lwip/include/lwip/snmp.h	305;"	d
snmp_inc_icmpoutdestunreachs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutdestunreachs(void)$/;"	f
snmp_inc_icmpoutdestunreachs	net/lwip/include/lwip/snmp.h	296;"	d
snmp_inc_icmpoutechoreps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutechoreps(void)$/;"	f
snmp_inc_icmpoutechoreps	net/lwip/include/lwip/snmp.h	302;"	d
snmp_inc_icmpoutechos	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutechos(void)$/;"	f
snmp_inc_icmpoutechos	net/lwip/include/lwip/snmp.h	301;"	d
snmp_inc_icmpouterrors	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpouterrors(void)$/;"	f
snmp_inc_icmpouterrors	net/lwip/include/lwip/snmp.h	295;"	d
snmp_inc_icmpoutmsgs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutmsgs(void)$/;"	f
snmp_inc_icmpoutmsgs	net/lwip/include/lwip/snmp.h	294;"	d
snmp_inc_icmpoutparmprobs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutparmprobs(void)$/;"	f
snmp_inc_icmpoutparmprobs	net/lwip/include/lwip/snmp.h	298;"	d
snmp_inc_icmpoutredirects	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutredirects(void)$/;"	f
snmp_inc_icmpoutredirects	net/lwip/include/lwip/snmp.h	300;"	d
snmp_inc_icmpoutsrcquenchs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutsrcquenchs(void)$/;"	f
snmp_inc_icmpoutsrcquenchs	net/lwip/include/lwip/snmp.h	299;"	d
snmp_inc_icmpouttimeexcds	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpouttimeexcds(void)$/;"	f
snmp_inc_icmpouttimeexcds	net/lwip/include/lwip/snmp.h	297;"	d
snmp_inc_icmpouttimestampreps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpouttimestampreps(void)$/;"	f
snmp_inc_icmpouttimestampreps	net/lwip/include/lwip/snmp.h	304;"	d
snmp_inc_icmpouttimestamps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpouttimestamps(void)$/;"	f
snmp_inc_icmpouttimestamps	net/lwip/include/lwip/snmp.h	303;"	d
snmp_inc_ifindiscards	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ifindiscards(struct netif *ni)$/;"	f
snmp_inc_ifindiscards	net/lwip/include/lwip/snmp.h	245;"	d
snmp_inc_ifinnucastpkts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ifinnucastpkts(struct netif *ni)$/;"	f
snmp_inc_ifinnucastpkts	net/lwip/include/lwip/snmp.h	244;"	d
snmp_inc_ifinucastpkts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ifinucastpkts(struct netif *ni)$/;"	f
snmp_inc_ifinucastpkts	net/lwip/include/lwip/snmp.h	243;"	d
snmp_inc_iflist	net/lwip/core/snmp/mib2.c	/^void snmp_inc_iflist(void)$/;"	f
snmp_inc_iflist	net/lwip/include/lwip/snmp.h	250;"	d
snmp_inc_ifoutdiscards	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ifoutdiscards(struct netif *ni)$/;"	f
snmp_inc_ifoutdiscards	net/lwip/include/lwip/snmp.h	249;"	d
snmp_inc_ifoutnucastpkts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ifoutnucastpkts(struct netif *ni)$/;"	f
snmp_inc_ifoutnucastpkts	net/lwip/include/lwip/snmp.h	248;"	d
snmp_inc_ifoutucastpkts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ifoutucastpkts(struct netif *ni)$/;"	f
snmp_inc_ifoutucastpkts	net/lwip/include/lwip/snmp.h	247;"	d
snmp_inc_ipforwdatagrams	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipforwdatagrams(void)$/;"	f
snmp_inc_ipforwdatagrams	net/lwip/include/lwip/snmp.h	261;"	d
snmp_inc_ipfragcreates	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipfragcreates(void)$/;"	f
snmp_inc_ipfragcreates	net/lwip/include/lwip/snmp.h	273;"	d
snmp_inc_ipfragfails	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipfragfails(void)$/;"	f
snmp_inc_ipfragfails	net/lwip/include/lwip/snmp.h	272;"	d
snmp_inc_ipfragoks	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipfragoks(void)$/;"	f
snmp_inc_ipfragoks	net/lwip/include/lwip/snmp.h	271;"	d
snmp_inc_ipinaddrerrors	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipinaddrerrors(void)$/;"	f
snmp_inc_ipinaddrerrors	net/lwip/include/lwip/snmp.h	260;"	d
snmp_inc_ipindelivers	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipindelivers(void)$/;"	f
snmp_inc_ipindelivers	net/lwip/include/lwip/snmp.h	264;"	d
snmp_inc_ipindiscards	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipindiscards(void)$/;"	f
snmp_inc_ipindiscards	net/lwip/include/lwip/snmp.h	263;"	d
snmp_inc_ipinhdrerrors	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipinhdrerrors(void)$/;"	f
snmp_inc_ipinhdrerrors	net/lwip/include/lwip/snmp.h	259;"	d
snmp_inc_ipinreceives	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipinreceives(void)$/;"	f
snmp_inc_ipinreceives	net/lwip/include/lwip/snmp.h	258;"	d
snmp_inc_ipinunknownprotos	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipinunknownprotos(void)$/;"	f
snmp_inc_ipinunknownprotos	net/lwip/include/lwip/snmp.h	262;"	d
snmp_inc_ipoutdiscards	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipoutdiscards(void)$/;"	f
snmp_inc_ipoutdiscards	net/lwip/include/lwip/snmp.h	266;"	d
snmp_inc_ipoutnoroutes	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipoutnoroutes(void)$/;"	f
snmp_inc_ipoutnoroutes	net/lwip/include/lwip/snmp.h	267;"	d
snmp_inc_ipoutrequests	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipoutrequests(void)$/;"	f
snmp_inc_ipoutrequests	net/lwip/include/lwip/snmp.h	265;"	d
snmp_inc_ipreasmfails	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipreasmfails(void)$/;"	f
snmp_inc_ipreasmfails	net/lwip/include/lwip/snmp.h	270;"	d
snmp_inc_ipreasmoks	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipreasmoks(void)$/;"	f
snmp_inc_ipreasmoks	net/lwip/include/lwip/snmp.h	269;"	d
snmp_inc_ipreasmreqds	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipreasmreqds(void)$/;"	f
snmp_inc_ipreasmreqds	net/lwip/include/lwip/snmp.h	268;"	d
snmp_inc_iproutingdiscards	net/lwip/core/snmp/mib2.c	/^void snmp_inc_iproutingdiscards(void)$/;"	f
snmp_inc_iproutingdiscards	net/lwip/include/lwip/snmp.h	274;"	d
snmp_inc_snmpinasnparseerrs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinasnparseerrs(void)$/;"	f
snmp_inc_snmpinasnparseerrs	net/lwip/include/lwip/snmp.h	332;"	d
snmp_inc_snmpinbadcommunitynames	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinbadcommunitynames(void)$/;"	f
snmp_inc_snmpinbadcommunitynames	net/lwip/include/lwip/snmp.h	330;"	d
snmp_inc_snmpinbadcommunityuses	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinbadcommunityuses(void)$/;"	f
snmp_inc_snmpinbadcommunityuses	net/lwip/include/lwip/snmp.h	331;"	d
snmp_inc_snmpinbadvalues	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinbadvalues(void)$/;"	f
snmp_inc_snmpinbadvalues	net/lwip/include/lwip/snmp.h	335;"	d
snmp_inc_snmpinbadversions	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinbadversions(void)$/;"	f
snmp_inc_snmpinbadversions	net/lwip/include/lwip/snmp.h	329;"	d
snmp_inc_snmpingenerrs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpingenerrs(void)$/;"	f
snmp_inc_snmpingenerrs	net/lwip/include/lwip/snmp.h	337;"	d
snmp_inc_snmpingetnexts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpingetnexts(void)$/;"	f
snmp_inc_snmpingetnexts	net/lwip/include/lwip/snmp.h	341;"	d
snmp_inc_snmpingetrequests	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpingetrequests(void)$/;"	f
snmp_inc_snmpingetrequests	net/lwip/include/lwip/snmp.h	340;"	d
snmp_inc_snmpingetresponses	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpingetresponses(void)$/;"	f
snmp_inc_snmpingetresponses	net/lwip/include/lwip/snmp.h	343;"	d
snmp_inc_snmpinnosuchnames	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinnosuchnames(void)$/;"	f
snmp_inc_snmpinnosuchnames	net/lwip/include/lwip/snmp.h	334;"	d
snmp_inc_snmpinpkts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinpkts(void)$/;"	f
snmp_inc_snmpinpkts	net/lwip/include/lwip/snmp.h	327;"	d
snmp_inc_snmpinreadonlys	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinreadonlys(void)$/;"	f
snmp_inc_snmpinreadonlys	net/lwip/include/lwip/snmp.h	336;"	d
snmp_inc_snmpinsetrequests	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinsetrequests(void)$/;"	f
snmp_inc_snmpinsetrequests	net/lwip/include/lwip/snmp.h	342;"	d
snmp_inc_snmpintoobigs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpintoobigs(void)$/;"	f
snmp_inc_snmpintoobigs	net/lwip/include/lwip/snmp.h	333;"	d
snmp_inc_snmpintraps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpintraps(void)$/;"	f
snmp_inc_snmpintraps	net/lwip/include/lwip/snmp.h	344;"	d
snmp_inc_snmpoutbadvalues	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutbadvalues(void)$/;"	f
snmp_inc_snmpoutbadvalues	net/lwip/include/lwip/snmp.h	347;"	d
snmp_inc_snmpoutgenerrs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutgenerrs(void)$/;"	f
snmp_inc_snmpoutgenerrs	net/lwip/include/lwip/snmp.h	348;"	d
snmp_inc_snmpoutgetnexts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutgetnexts(void)$/;"	f
snmp_inc_snmpoutgetnexts	net/lwip/include/lwip/snmp.h	350;"	d
snmp_inc_snmpoutgetrequests	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutgetrequests(void)$/;"	f
snmp_inc_snmpoutgetrequests	net/lwip/include/lwip/snmp.h	349;"	d
snmp_inc_snmpoutgetresponses	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutgetresponses(void)$/;"	f
snmp_inc_snmpoutgetresponses	net/lwip/include/lwip/snmp.h	352;"	d
snmp_inc_snmpoutnosuchnames	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutnosuchnames(void)$/;"	f
snmp_inc_snmpoutnosuchnames	net/lwip/include/lwip/snmp.h	346;"	d
snmp_inc_snmpoutpkts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutpkts(void)$/;"	f
snmp_inc_snmpoutpkts	net/lwip/include/lwip/snmp.h	328;"	d
snmp_inc_snmpoutsetrequests	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutsetrequests(void)$/;"	f
snmp_inc_snmpoutsetrequests	net/lwip/include/lwip/snmp.h	351;"	d
snmp_inc_snmpouttoobigs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpouttoobigs(void)$/;"	f
snmp_inc_snmpouttoobigs	net/lwip/include/lwip/snmp.h	345;"	d
snmp_inc_snmpouttraps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpouttraps(void)$/;"	f
snmp_inc_snmpouttraps	net/lwip/include/lwip/snmp.h	353;"	d
snmp_inc_sysuptime	net/lwip/core/snmp/mib2.c	/^void snmp_inc_sysuptime(void)$/;"	f
snmp_inc_sysuptime	net/lwip/include/lwip/snmp.h	234;"	d
snmp_inc_tcpactiveopens	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpactiveopens(void)$/;"	f
snmp_inc_tcpactiveopens	net/lwip/include/lwip/snmp.h	308;"	d
snmp_inc_tcpattemptfails	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpattemptfails(void)$/;"	f
snmp_inc_tcpattemptfails	net/lwip/include/lwip/snmp.h	310;"	d
snmp_inc_tcpestabresets	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpestabresets(void)$/;"	f
snmp_inc_tcpestabresets	net/lwip/include/lwip/snmp.h	311;"	d
snmp_inc_tcpinerrs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpinerrs(void)$/;"	f
snmp_inc_tcpinerrs	net/lwip/include/lwip/snmp.h	315;"	d
snmp_inc_tcpinsegs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpinsegs(void)$/;"	f
snmp_inc_tcpinsegs	net/lwip/include/lwip/snmp.h	312;"	d
snmp_inc_tcpoutrsts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpoutrsts(void)$/;"	f
snmp_inc_tcpoutrsts	net/lwip/include/lwip/snmp.h	316;"	d
snmp_inc_tcpoutsegs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpoutsegs(void)$/;"	f
snmp_inc_tcpoutsegs	net/lwip/include/lwip/snmp.h	313;"	d
snmp_inc_tcppassiveopens	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcppassiveopens(void)$/;"	f
snmp_inc_tcppassiveopens	net/lwip/include/lwip/snmp.h	309;"	d
snmp_inc_tcpretranssegs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpretranssegs(void)$/;"	f
snmp_inc_tcpretranssegs	net/lwip/include/lwip/snmp.h	314;"	d
snmp_inc_udpindatagrams	net/lwip/core/snmp/mib2.c	/^void snmp_inc_udpindatagrams(void)$/;"	f
snmp_inc_udpindatagrams	net/lwip/include/lwip/snmp.h	319;"	d
snmp_inc_udpinerrors	net/lwip/core/snmp/mib2.c	/^void snmp_inc_udpinerrors(void)$/;"	f
snmp_inc_udpinerrors	net/lwip/include/lwip/snmp.h	321;"	d
snmp_inc_udpnoports	net/lwip/core/snmp/mib2.c	/^void snmp_inc_udpnoports(void)$/;"	f
snmp_inc_udpnoports	net/lwip/include/lwip/snmp.h	320;"	d
snmp_inc_udpoutdatagrams	net/lwip/core/snmp/mib2.c	/^void snmp_inc_udpoutdatagrams(void)$/;"	f
snmp_inc_udpoutdatagrams	net/lwip/include/lwip/snmp.h	322;"	d
snmp_init	net/lwip/core/snmp/msg_in.c	/^snmp_init(void)$/;"	f
snmp_insert_arpidx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_insert_arpidx_tree(struct netif *ni, struct ip_addr *ip)$/;"	f
snmp_insert_arpidx_tree	net/lwip/include/lwip/snmp.h	254;"	d
snmp_insert_ipaddridx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_insert_ipaddridx_tree(struct netif *ni)$/;"	f
snmp_insert_ipaddridx_tree	net/lwip/include/lwip/snmp.h	275;"	d
snmp_insert_iprteidx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_insert_iprteidx_tree(u8_t dflt, struct netif *ni)$/;"	f
snmp_insert_iprteidx_tree	net/lwip/include/lwip/snmp.h	277;"	d
snmp_insert_udpidx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_insert_udpidx_tree(struct udp_pcb *pcb)$/;"	f
snmp_insert_udpidx_tree	net/lwip/include/lwip/snmp.h	323;"	d
snmp_iptooid	net/lwip/core/snmp/mib_structs.c	/^snmp_iptooid(struct ip_addr *ip, s32_t *ident)$/;"	f
snmp_iso_prefix_expand	net/lwip/core/snmp/mib_structs.c	/^snmp_iso_prefix_expand(u8_t ident_len, s32_t *ident, struct snmp_obj_id *oidret)$/;"	f
snmp_iso_prefix_tst	net/lwip/core/snmp/mib_structs.c	/^snmp_iso_prefix_tst(u8_t ident_len, s32_t *ident)$/;"	f
snmp_mib_ln_alloc	net/lwip/core/snmp/mib_structs.c	/^snmp_mib_ln_alloc(s32_t id)$/;"	f
snmp_mib_ln_free	net/lwip/core/snmp/mib_structs.c	/^snmp_mib_ln_free(struct mib_list_node *ln)$/;"	f
snmp_mib_lrn_alloc	net/lwip/core/snmp/mib_structs.c	/^snmp_mib_lrn_alloc(void)$/;"	f
snmp_mib_lrn_free	net/lwip/core/snmp/mib_structs.c	/^snmp_mib_lrn_free(struct mib_list_rootnode *lrn)$/;"	f
snmp_mib_node_delete	net/lwip/core/snmp/mib_structs.c	/^snmp_mib_node_delete(struct mib_list_rootnode *rn, struct mib_list_node *n)$/;"	f
snmp_mib_node_find	net/lwip/core/snmp/mib_structs.c	/^snmp_mib_node_find(struct mib_list_rootnode *rn, s32_t objid, struct mib_list_node **fn)$/;"	f
snmp_mib_node_insert	net/lwip/core/snmp/mib_structs.c	/^snmp_mib_node_insert(struct mib_list_rootnode *rn, s32_t objid, struct mib_list_node **insn)$/;"	f
snmp_msg_event	net/lwip/core/snmp/msg_in.c	/^snmp_msg_event(u8_t request_id)$/;"	f
snmp_msg_get_event	net/lwip/core/snmp/msg_in.c	/^snmp_msg_get_event(u8_t request_id, struct snmp_msg_pstat *msg_ps)$/;"	f	file:
snmp_msg_getnext_event	net/lwip/core/snmp/msg_in.c	/^snmp_msg_getnext_event(u8_t request_id, struct snmp_msg_pstat *msg_ps)$/;"	f	file:
snmp_msg_pstat	net/lwip/include/lwip/snmp_msg.h	/^struct snmp_msg_pstat$/;"	s
snmp_msg_set_event	net/lwip/core/snmp/msg_in.c	/^snmp_msg_set_event(u8_t request_id, struct snmp_msg_pstat *msg_ps)$/;"	f	file:
snmp_msg_trap	net/lwip/include/lwip/snmp_msg.h	/^struct snmp_msg_trap$/;"	s
snmp_name_ptr	net/lwip/include/lwip/snmp_structs.h	/^struct snmp_name_ptr$/;"	s
snmp_netiftoifindex	net/lwip/core/snmp/mib_structs.c	/^snmp_netiftoifindex(struct netif *netif, s32_t *ifidx)$/;"	f
snmp_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const snmp_nodes[28] = {$/;"	v
snmp_obj_id	net/lwip/include/lwip/snmp.h	/^struct snmp_obj_id$/;"	s
snmp_oidtoip	net/lwip/core/snmp/mib_structs.c	/^snmp_oidtoip(s32_t *ident, struct ip_addr *ip)$/;"	f
snmp_ok_response	net/lwip/core/snmp/msg_in.c	/^snmp_ok_response(struct snmp_msg_pstat *msg_ps)$/;"	f	file:
snmp_pdu_dec_varbindlist	net/lwip/core/snmp/msg_in.c	/^snmp_pdu_dec_varbindlist(struct pbuf *p, u16_t ofs, u16_t *ofs_ret, struct snmp_msg_pstat *m_stat)$/;"	f	file:
snmp_pdu_header_check	net/lwip/core/snmp/msg_in.c	/^snmp_pdu_header_check(struct pbuf *p, u16_t ofs, u16_t pdu_len, u16_t *ofs_ret, struct snmp_msg_pstat *m_stat)$/;"	f	file:
snmp_publiccommunity	net/lwip/core/snmp/msg_in.c	/^const char snmp_publiccommunity[7] = "public";$/;"	v
snmp_recv	net/lwip/core/snmp/msg_in.c	/^snmp_recv(void *arg, struct udp_pcb *pcb, struct pbuf *p, struct ip_addr *addr, u16_t port)$/;"	f	file:
snmp_resp_header_enc	net/lwip/core/snmp/msg_out.c	/^snmp_resp_header_enc(struct snmp_msg_pstat *m_stat, struct pbuf *p)$/;"	f	file:
snmp_resp_header_lengths	net/lwip/include/lwip/snmp_msg.h	/^struct snmp_resp_header_lengths$/;"	s
snmp_resp_header_sum	net/lwip/core/snmp/msg_out.c	/^snmp_resp_header_sum(struct snmp_msg_pstat *m_stat, u16_t vb_len)$/;"	f	file:
snmp_scalar	net/lwip/core/snmp/mib2.c	/^const mib_scalar_node snmp_scalar = {$/;"	v
snmp_search_tree	net/lwip/core/snmp/mib_structs.c	/^snmp_search_tree(struct mib_node *node, u8_t ident_len, s32_t *ident, struct snmp_name_ptr *np)$/;"	f
snmp_send_response	net/lwip/core/snmp/msg_out.c	/^snmp_send_response(struct snmp_msg_pstat *m_stat)$/;"	f
snmp_send_trap	net/lwip/core/snmp/msg_out.c	/^snmp_send_trap(s8_t generic_trap, struct snmp_obj_id *eoid, s32_t specific_trap)$/;"	f
snmp_set_snmpenableauthentraps	net/lwip/core/snmp/mib2.c	/^void snmp_set_snmpenableauthentraps(u8_t *value)$/;"	f
snmp_set_snmpenableauthentraps	net/lwip/include/lwip/snmp.h	355;"	d
snmp_set_syscontact	net/lwip/core/snmp/mib2.c	/^void snmp_set_syscontact(u8_t *ocstr, u8_t *ocstrlen)$/;"	f
snmp_set_syscontact	net/lwip/include/lwip/snmp.h	237;"	d
snmp_set_sysdesr	net/lwip/core/snmp/mib2.c	/^void snmp_set_sysdesr(u8_t *str, u8_t *len)$/;"	f
snmp_set_sysdesr	net/lwip/include/lwip/snmp.h	231;"	d
snmp_set_syslocation	net/lwip/core/snmp/mib2.c	/^void snmp_set_syslocation(u8_t *ocstr, u8_t *ocstrlen)$/;"	f
snmp_set_syslocation	net/lwip/include/lwip/snmp.h	239;"	d
snmp_set_sysname	net/lwip/core/snmp/mib2.c	/^void snmp_set_sysname(u8_t *ocstr, u8_t *ocstrlen)$/;"	f
snmp_set_sysname	net/lwip/include/lwip/snmp.h	238;"	d
snmp_set_sysobjid	net/lwip/core/snmp/mib2.c	/^void snmp_set_sysobjid(struct snmp_obj_id *oid)$/;"	f
snmp_set_sysobjid	net/lwip/include/lwip/snmp.h	232;"	d
snmp_set_test	net/lwip/core/snmp/mib2.c	/^snmp_set_test(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
snmp_set_value	net/lwip/core/snmp/mib2.c	/^snmp_set_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
snmp_trap_dst	net/lwip/core/snmp/msg_out.c	/^struct snmp_trap_dst$/;"	s	file:
snmp_trap_dst_enable	net/lwip/core/snmp/msg_out.c	/^snmp_trap_dst_enable(u8_t dst_idx, u8_t enable)$/;"	f
snmp_trap_dst_ip_set	net/lwip/core/snmp/msg_out.c	/^snmp_trap_dst_ip_set(u8_t dst_idx, struct ip_addr *dst)$/;"	f
snmp_trap_header_enc	net/lwip/core/snmp/msg_out.c	/^snmp_trap_header_enc(struct snmp_msg_trap *m_trap, struct pbuf *p)$/;"	f	file:
snmp_trap_header_lengths	net/lwip/include/lwip/snmp_msg.h	/^struct snmp_trap_header_lengths$/;"	s
snmp_trap_header_sum	net/lwip/core/snmp/msg_out.c	/^snmp_trap_header_sum(struct snmp_msg_trap *m_trap, u16_t vb_len)$/;"	f	file:
snmp_varbind	net/lwip/include/lwip/snmp_msg.h	/^struct snmp_varbind$/;"	s
snmp_varbind_alloc	net/lwip/core/snmp/msg_in.c	/^snmp_varbind_alloc(struct snmp_obj_id *oid, u8_t type, u8_t len)$/;"	f
snmp_varbind_free	net/lwip/core/snmp/msg_in.c	/^snmp_varbind_free(struct snmp_varbind *vb)$/;"	f
snmp_varbind_list_enc	net/lwip/core/snmp/msg_out.c	/^snmp_varbind_list_enc(struct snmp_varbind_root *root, struct pbuf *p, u16_t ofs)$/;"	f	file:
snmp_varbind_list_free	net/lwip/core/snmp/msg_in.c	/^snmp_varbind_list_free(struct snmp_varbind_root *root)$/;"	f
snmp_varbind_list_sum	net/lwip/core/snmp/msg_out.c	/^snmp_varbind_list_sum(struct snmp_varbind_root *root)$/;"	f	file:
snmp_varbind_root	net/lwip/include/lwip/snmp_msg.h	/^struct snmp_varbind_root$/;"	s
snmp_varbind_tail_add	net/lwip/core/snmp/msg_in.c	/^snmp_varbind_tail_add(struct snmp_varbind_root *root, struct snmp_varbind *vb)$/;"	f
snmp_varbind_tail_remove	net/lwip/core/snmp/msg_in.c	/^snmp_varbind_tail_remove(struct snmp_varbind_root *root)$/;"	f
snmp_version	net/lwip/core/snmp/msg_in.c	/^const s32_t snmp_version = 0;$/;"	v
snmpenableauthentraps_default	net/lwip/core/snmp/mib2.c	/^static const u8_t snmpenableauthentraps_default = 2; \/* disabled *\/$/;"	v	file:
snmpenableauthentraps_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* snmpenableauthentraps_ptr = (u8_t*)&snmpenableauthentraps_default;$/;"	v	file:
snmpgrp_id	net/lwip/core/snmp/mib2.c	/^static struct snmp_obj_id snmpgrp_id = {7,{1,3,6,1,2,1,11}};$/;"	v	typeref:struct:snmp_obj_id	file:
snmpinasnparseerrs	net/lwip/core/snmp/mib2.c	/^             snmpinasnparseerrs = 0,$/;"	v	file:
snmpinbadcommunitynames	net/lwip/core/snmp/mib2.c	/^             snmpinbadcommunitynames = 0,$/;"	v	file:
snmpinbadcommunityuses	net/lwip/core/snmp/mib2.c	/^             snmpinbadcommunityuses = 0,$/;"	v	file:
snmpinbadvalues	net/lwip/core/snmp/mib2.c	/^             snmpinbadvalues = 0,$/;"	v	file:
snmpinbadversions	net/lwip/core/snmp/mib2.c	/^             snmpinbadversions = 0,$/;"	v	file:
snmpingenerrs	net/lwip/core/snmp/mib2.c	/^             snmpingenerrs = 0,$/;"	v	file:
snmpingetnexts	net/lwip/core/snmp/mib2.c	/^             snmpingetnexts = 0,$/;"	v	file:
snmpingetrequests	net/lwip/core/snmp/mib2.c	/^             snmpingetrequests = 0,$/;"	v	file:
snmpingetresponses	net/lwip/core/snmp/mib2.c	/^             snmpingetresponses = 0,$/;"	v	file:
snmpinnosuchnames	net/lwip/core/snmp/mib2.c	/^             snmpinnosuchnames = 0,$/;"	v	file:
snmpinpkts	net/lwip/core/snmp/mib2.c	/^static u32_t snmpinpkts = 0,$/;"	v	file:
snmpinreadonlys	net/lwip/core/snmp/mib2.c	/^             snmpinreadonlys = 0,$/;"	v	file:
snmpinsetrequests	net/lwip/core/snmp/mib2.c	/^             snmpinsetrequests = 0,$/;"	v	file:
snmpintoobigs	net/lwip/core/snmp/mib2.c	/^             snmpintoobigs = 0,$/;"	v	file:
snmpintotalreqvars	net/lwip/core/snmp/mib2.c	/^             snmpintotalreqvars = 0,$/;"	v	file:
snmpintotalsetvars	net/lwip/core/snmp/mib2.c	/^             snmpintotalsetvars = 0,$/;"	v	file:
snmpintraps	net/lwip/core/snmp/mib2.c	/^             snmpintraps = 0,$/;"	v	file:
snmpoutbadvalues	net/lwip/core/snmp/mib2.c	/^             snmpoutbadvalues = 0,$/;"	v	file:
snmpoutgenerrs	net/lwip/core/snmp/mib2.c	/^             snmpoutgenerrs = 0,$/;"	v	file:
snmpoutgetnexts	net/lwip/core/snmp/mib2.c	/^             snmpoutgetnexts = 0,$/;"	v	file:
snmpoutgetrequests	net/lwip/core/snmp/mib2.c	/^             snmpoutgetrequests = 0,$/;"	v	file:
snmpoutgetresponses	net/lwip/core/snmp/mib2.c	/^             snmpoutgetresponses = 0,$/;"	v	file:
snmpoutnosuchnames	net/lwip/core/snmp/mib2.c	/^             snmpoutnosuchnames = 0,$/;"	v	file:
snmpoutpkts	net/lwip/core/snmp/mib2.c	/^             snmpoutpkts = 0,$/;"	v	file:
snmpoutsetrequests	net/lwip/core/snmp/mib2.c	/^             snmpoutsetrequests = 0,$/;"	v	file:
snmpouttoobigs	net/lwip/core/snmp/mib2.c	/^             snmpouttoobigs = 0,$/;"	v	file:
snmpouttraps	net/lwip/core/snmp/mib2.c	/^             snmpouttraps = 0;$/;"	v	file:
snprintf	lib/printfmt.c	/^snprintf(char *buf, int n, const char *fmt, ...)$/;"	f
so	obj/net/ns.asm	/^       so do nothing here! *\/$/;"	d
sock	net/lwip/api/sockets.c	/^  struct lwip_socket *sock;$/;"	m	struct:lwip_setgetsockopt_data	typeref:struct:lwip_setgetsockopt_data::lwip_socket	file:
sock	obj/net/ns.asm	/^    sock = get_socket(s);$/;"	d
sock	obj/net/ns.asm	/^  sock = &sockets[s];$/;"	d
sock	obj/net/ns.asm	/^  sock = data->sock;$/;"	d
sock	obj/net/ns.asm	/^  sock = get_socket(s);$/;"	d
sock	user/httpd.c	/^	int sock;$/;"	m	struct:http_request	file:
sock_set_errno	net/lwip/api/sockets.c	158;"	d	file:
sockaddr	net/lwip/include/lwip/sockets.h	/^struct sockaddr {$/;"	s
sockaddr_in	net/lwip/include/lwip/sockets.h	/^struct sockaddr_in {$/;"	s
socket	inc/ns.h	/^	} socket;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_socket
socket	lib/sockets.c	/^socket(int domain, int type, int protocol)$/;"	f
socket	net/lwip/include/lwip/api.h	/^  int socket;$/;"	m	struct:netconn
socket	net/lwip/include/lwip/sockets.h	340;"	d
sockets	net/lwip/api/sockets.c	/^static struct lwip_socket sockets[NUM_SOCKETS];$/;"	v	typeref:struct:lwip_socket	file:
sockid	inc/fd.h	/^	int sockid;$/;"	m	struct:FdSock
socklen_t	net/lwip/include/lwip/sockets.h	64;"	d
socksem	net/lwip/api/sockets.c	/^static sys_sem_t socksem;$/;"	v	file:
socksem	obj/net/ns.asm	/^  socksem   = sys_sem_new(1);$/;"	d
sp	net/lwip/include/lwip/snmp_msg.h	/^  u16_t sp;$/;"	m	struct:snmp_msg_pstat
spawn	lib/spawn.c	/^spawn(const char *prog, const char **argv)$/;"	f
spawnl	lib/spawn.c	/^spawnl(const char *prog, const char *arg0, ...)$/;"	f
spc_trap	net/lwip/include/lwip/snmp_msg.h	/^  u32_t spc_trap;$/;"	m	struct:snmp_msg_trap
special	kern/e1000.h	/^            uint16_t special;$/;"	m	struct:e1000_tx_desc::__anon39::__anon40
special	kern/e1000.h	/^    uint16_t special;$/;"	m	struct:e1000_rx_desc
specrev	kern/mpconfig.c	/^	uint8_t specrev;                \/\/ [14]$/;"	m	struct:mp	file:
spin	boot/boot.S	/^spin:$/;"	l
spin	kern/entry.S	/^spin:	jmp	spin$/;"	l
spin	kern/mpentry.S	/^spin:$/;"	l
spin	obj/boot/boot.asm	/^spin:$/;"	l
spin	obj/kern/kernel.asm	/^spin:	jmp	spin$/;"	l
spin	obj/kern/kernel.asm	/^spin:$/;"	l
spin_initlock	kern/spinlock.h	26;"	d
spin_lock	kern/spinlock.c	/^spin_lock(struct spinlock *lk)$/;"	f
spin_unlock	kern/spinlock.c	/^spin_unlock(struct spinlock *lk)$/;"	f
spinlock	kern/spinlock.h	/^struct spinlock {$/;"	s
sprintbuf	lib/printfmt.c	/^struct sprintbuf {$/;"	s	file:
sprintputch	lib/printfmt.c	/^sprintputch(int ch, struct sprintbuf *b)$/;"	f	file:
src	net/lwip/include/ipv6/lwip/ip.h	/^  struct ip_addr src, dest;          \/* source and destination IP addresses *\/$/;"	m	struct:ip_hdr	typeref:struct:ip_hdr::ip_addr
src	obj/net/ns.asm	/^    src = (*octetptr) << 8;$/;"	d
src	obj/net/ns.asm	/^  src = ntohs(udphdr->src);$/;"	d
src_ip	obj/net/ns.asm	/^    src_ip = &(netif->ip_addr);$/;"	d
ssize_t	inc/types.h	/^typedef int32_t ssize_t;$/;"	t
ssize_t	obj/fs/fs.asm	/^ssize_t$/;"	l
ssize_t	obj/net/ns.asm	/^ssize_t$/;"	l
ssize_t	obj/net/testinput.asm	/^ssize_t$/;"	l
ssize_t	obj/net/testoutput.asm	/^ssize_t$/;"	l
ssize_t	obj/user/badsegment.asm	/^ssize_t$/;"	l
ssize_t	obj/user/breakpoint.asm	/^ssize_t$/;"	l
ssize_t	obj/user/buggyhello.asm	/^ssize_t$/;"	l
ssize_t	obj/user/buggyhello2.asm	/^ssize_t$/;"	l
ssize_t	obj/user/cat.asm	/^ssize_t$/;"	l
ssize_t	obj/user/divzero.asm	/^ssize_t$/;"	l
ssize_t	obj/user/dumbfork.asm	/^ssize_t$/;"	l
ssize_t	obj/user/echo.asm	/^ssize_t$/;"	l
ssize_t	obj/user/echosrv.asm	/^ssize_t$/;"	l
ssize_t	obj/user/echotest.asm	/^ssize_t$/;"	l
ssize_t	obj/user/evilhello.asm	/^ssize_t$/;"	l
ssize_t	obj/user/fairness.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultalloc.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultallocbad.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultbadhandler.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultdie.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultevilhandler.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultnostack.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultread.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultreadkernel.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultregs.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultwrite.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultwritekernel.asm	/^ssize_t$/;"	l
ssize_t	obj/user/forktree.asm	/^ssize_t$/;"	l
ssize_t	obj/user/hello.asm	/^ssize_t$/;"	l
ssize_t	obj/user/httpd.asm	/^ssize_t$/;"	l
ssize_t	obj/user/icode.asm	/^ssize_t$/;"	l
ssize_t	obj/user/idle.asm	/^ssize_t$/;"	l
ssize_t	obj/user/init.asm	/^ssize_t$/;"	l
ssize_t	obj/user/ls.asm	/^ssize_t$/;"	l
ssize_t	obj/user/lsfd.asm	/^ssize_t$/;"	l
ssize_t	obj/user/num.asm	/^ssize_t$/;"	l
ssize_t	obj/user/pingpong.asm	/^ssize_t$/;"	l
ssize_t	obj/user/pingpongs.asm	/^ssize_t$/;"	l
ssize_t	obj/user/primes.asm	/^ssize_t$/;"	l
ssize_t	obj/user/primespipe.asm	/^ssize_t$/;"	l
ssize_t	obj/user/sendpage.asm	/^ssize_t$/;"	l
ssize_t	obj/user/sh.asm	/^ssize_t$/;"	l
ssize_t	obj/user/softint.asm	/^ssize_t$/;"	l
ssize_t	obj/user/spawnhello.asm	/^ssize_t$/;"	l
ssize_t	obj/user/spin.asm	/^ssize_t$/;"	l
ssize_t	obj/user/stresssched.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testbss.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testfdsharing.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testfile.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testkbd.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testpipe.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testpiperace.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testpiperace2.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testpteshare.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testshell.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testtime.asm	/^ssize_t$/;"	l
ssize_t	obj/user/yield.asm	/^ssize_t$/;"	l
ssthresh	net/lwip/include/lwip/tcp.h	/^  u16_t ssthresh;$/;"	m	struct:tcp_pcb
sswt_cb	net/lwip/core/sys.c	/^struct sswt_cb$/;"	s	file:
sswt_handler	net/lwip/core/sys.c	/^sswt_handler(void *arg)$/;"	f	file:
st_args	net/serv.c	/^struct st_args {$/;"	s	file:
st_dev	inc/fd.h	/^	struct Dev *st_dev;$/;"	m	struct:Stat	typeref:struct:Stat::Dev
st_isdir	inc/fd.h	/^	int st_isdir;$/;"	m	struct:Stat
st_name	inc/fd.h	/^	char st_name[MAXNAMELEN];$/;"	m	struct:Stat
st_size	inc/fd.h	/^	off_t st_size;$/;"	m	struct:Stat
stab_binsearch	kern/kdebug.c	/^stab_binsearch(const struct Stab *stabs, int *region_left, int *region_right,$/;"	f	file:
stab_end	kern/kdebug.c	/^	const struct Stab *stab_end;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:
stab_end	obj/kern/kernel.asm	/^		stab_end = __STAB_END__;$/;"	d
stab_end	obj/kern/kernel.asm	/^		stab_end = usd->stab_end;$/;"	d
stabs	kern/kdebug.c	/^	const struct Stab *stabs;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:
stabs	obj/kern/kernel.asm	/^		stabs = __STAB_BEGIN__;$/;"	d
stabs	obj/kern/kernel.asm	/^		stabs = usd->stabs;$/;"	d
stabstr	kern/kdebug.c	/^	const char *stabstr;$/;"	m	struct:UserStabData	file:
stabstr	obj/kern/kernel.asm	/^		stabstr = __STABSTR_BEGIN__;$/;"	d
stabstr	obj/kern/kernel.asm	/^		stabstr = usd->stabstr;$/;"	d
stabstr_end	kern/kdebug.c	/^	const char *stabstr_end;$/;"	m	struct:UserStabData	file:
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = __STABSTR_END__;$/;"	d
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = usd->stabstr_end;$/;"	d
stack_size	net/lwip/jos/arch/threadq.h	/^enum { stack_size = PGSIZE };$/;"	e	enum:__anon12
stacktop	obj/net/ns.asm	/^    stacktop = stacktop - 4;$/;"	d
start	boot/boot.S	/^start:$/;"	l
start	net/lwip/core/ipv4/ip_frag.c	/^  u16_t start;$/;"	m	struct:ip_reass_helper	file:
start	obj/boot/boot.asm	/^start:$/;"	l
start	obj/kern/kernel.asm	/^	start = PGNUM(ROUNDDOWN(IOPHYSMEM, PGSIZE));$/;"	d
start	obj/net/ns.asm	/^	start = sys_time_msec();$/;"	d
start32	kern/mpentry.S	/^start32:$/;"	l
start32	obj/kern/kernel.asm	/^start32:$/;"	l
start_timer	net/serv.c	/^start_timer(struct timer_thread *t, void (*func)(void), const char *name, int msec)$/;"	f	file:
startdir	fs/fsformat.c	/^startdir(struct File *f, struct Dir *dout)$/;"	f
starting	net/lwip/netif/ppp/fsm.h	/^  void (*starting)(fsm*);                           \/* Called when we want the lower layer *\/$/;"	m	struct:fsm_callbacks
stat	inc/fs.h	/^	} stat;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_stat
stat	lib/fd.c	/^stat(const char *path, struct Stat *stat)$/;"	f
statRet	inc/fs.h	/^	} statRet;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsret_stat
state	net/lwip/core/dns.c	/^  u8_t  state;$/;"	m	struct:dns_table_entry	file:
state	net/lwip/include/ipv4/lwip/autoip.h	/^  u8_t state;               \/* current AutoIP state machine state *\/$/;"	m	struct:autoip
state	net/lwip/include/lwip/api.h	/^  enum netconn_state state;$/;"	m	struct:netconn	typeref:enum:netconn::netconn_state
state	net/lwip/include/lwip/dhcp.h	/^  u8_t state;$/;"	m	struct:dhcp
state	net/lwip/include/lwip/netif.h	/^  void *state;$/;"	m	struct:netif
state	net/lwip/include/lwip/netifapi.h	/^      void *state;$/;"	m	struct:netifapi_msg_msg::__anon22::__anon23
state	net/lwip/include/lwip/snmp_msg.h	/^  u8_t state;$/;"	m	struct:snmp_msg_pstat
state	net/lwip/netif/etharp.c	/^  enum etharp_state state;$/;"	m	struct:etharp_entry	typeref:enum:etharp_entry::etharp_state	file:
state	net/lwip/netif/ppp/fsm.h	/^  int state;                       \/* State *\/$/;"	m	struct:fsm
static	obj/boot/boot.asm	/^static __inline uint8_t$/;"	l
static	obj/boot/boot.asm	/^static __inline void$/;"	l
static	obj/fs/fs.asm	/^static __inline uint8_t$/;"	l
static	obj/fs/fs.asm	/^static __inline void$/;"	l
static	obj/fs/fs.asm	/^static char *msg = "This is the NEW message of the day!\\n\\n";$/;"	l
static	obj/fs/fs.asm	/^static const char*$/;"	l
static	obj/fs/fs.asm	/^static int diskno = 1;$/;"	l
static	obj/fs/fs.asm	/^static int$/;"	l
static	obj/fs/fs.asm	/^static long long$/;"	l
static	obj/fs/fs.asm	/^static ssize_t$/;"	l
static	obj/fs/fs.asm	/^static unsigned long long$/;"	l
static	obj/fs/fs.asm	/^static void$/;"	l
static	obj/kern/kernel.asm	/^	static struct pci_bus root_bus;$/;"	t
static	obj/kern/kernel.asm	/^static __inline uint32_t$/;"	l
static	obj/kern/kernel.asm	/^static __inline uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static __inline void$/;"	l
static	obj/kern/kernel.asm	/^static bool didinit;$/;"	l
static	obj/kern/kernel.asm	/^static bool serial_exists;$/;"	l
static	obj/kern/kernel.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/kern/kernel.asm	/^static envid_t$/;"	l
static	obj/kern/kernel.asm	/^static inline physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static inline struct PageInfo*$/;"	l
static	obj/kern/kernel.asm	/^static inline void$/;"	l
static	obj/kern/kernel.asm	/^static inline void*$/;"	l
static	obj/kern/kernel.asm	/^static int __attribute__((warn_unused_result))$/;"	l
static	obj/kern/kernel.asm	/^static int$/;"	l
static	obj/kern/kernel.asm	/^static long long$/;"	l
static	obj/kern/kernel.asm	/^static physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static struct mp *$/;"	t
static	obj/kern/kernel.asm	/^static uint32_t$/;"	l
static	obj/kern/kernel.asm	/^static uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static unsigned int ticks;$/;"	l
static	obj/kern/kernel.asm	/^static unsigned long long$/;"	l
static	obj/kern/kernel.asm	/^static void *$/;"	l
static	obj/kern/kernel.asm	/^static void boot_aps(void);$/;"	l
static	obj/kern/kernel.asm	/^static void$/;"	l
static	obj/net/ns.asm	/^static LIST_HEAD(thread_list, sys_thread) threads[thread_hash_size];$/;"	l
static	obj/net/ns.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/net/ns.asm	/^static err_t$/;"	l
static	obj/net/ns.asm	/^static inline struct thread_context *$/;"	l
static	obj/net/ns.asm	/^static inline void $/;"	l
static	obj/net/ns.asm	/^static inline void$/;"	l
static	obj/net/ns.asm	/^static int$/;"	l
static	obj/net/ns.asm	/^static long long$/;"	l
static	obj/net/ns.asm	/^static ssize_t$/;"	l
static	obj/net/ns.asm	/^static struct ip_reassdata*$/;"	t
static	obj/net/ns.asm	/^static struct lwip_socket *$/;"	t
static	obj/net/ns.asm	/^static struct pbuf *$/;"	t
static	obj/net/ns.asm	/^static struct thread_queue kill_queue;$/;"	t
static	obj/net/ns.asm	/^static struct thread_queue thread_queue;$/;"	t
static	obj/net/ns.asm	/^static thread_id_t$/;"	l
static	obj/net/ns.asm	/^static u16_t$/;"	l
static	obj/net/ns.asm	/^static u32_t dhcp_get_option_long(u8_t *ptr)$/;"	l
static	obj/net/ns.asm	/^static u8_t *dhcp_get_option_ptr(struct dhcp *dhcp, u8_t option_type)$/;"	l
static	obj/net/ns.asm	/^static u8_t$/;"	l
static	obj/net/ns.asm	/^static unsigned long long$/;"	l
static	obj/net/ns.asm	/^static void *$/;"	l
static	obj/net/ns.asm	/^static void __attribute__((noreturn))$/;"	l
static	obj/net/ns.asm	/^static void dhcp_free_reply(struct dhcp *dhcp)$/;"	l
static	obj/net/ns.asm	/^static void dhcp_recv(void *arg, struct udp_pcb *pcb, struct pbuf *p, struct ip_addr *addr, u16_t port)$/;"	l
static	obj/net/ns.asm	/^static void$/;"	l
static	obj/net/testinput.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/net/testinput.asm	/^static int$/;"	l
static	obj/net/testinput.asm	/^static long long$/;"	l
static	obj/net/testinput.asm	/^static ssize_t$/;"	l
static	obj/net/testinput.asm	/^static unsigned long long$/;"	l
static	obj/net/testinput.asm	/^static void$/;"	l
static	obj/net/testoutput.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/net/testoutput.asm	/^static int$/;"	l
static	obj/net/testoutput.asm	/^static long long$/;"	l
static	obj/net/testoutput.asm	/^static ssize_t$/;"	l
static	obj/net/testoutput.asm	/^static struct jif_pkt *pkt = (struct jif_pkt*)REQVA;$/;"	t
static	obj/net/testoutput.asm	/^static unsigned long long$/;"	l
static	obj/net/testoutput.asm	/^static void$/;"	l
static	obj/user/badsegment.asm	/^static int$/;"	l
static	obj/user/badsegment.asm	/^static long long$/;"	l
static	obj/user/badsegment.asm	/^static ssize_t$/;"	l
static	obj/user/badsegment.asm	/^static unsigned long long$/;"	l
static	obj/user/badsegment.asm	/^static void$/;"	l
static	obj/user/breakpoint.asm	/^static int$/;"	l
static	obj/user/breakpoint.asm	/^static long long$/;"	l
static	obj/user/breakpoint.asm	/^static ssize_t$/;"	l
static	obj/user/breakpoint.asm	/^static unsigned long long$/;"	l
static	obj/user/breakpoint.asm	/^static void$/;"	l
static	obj/user/buggyhello.asm	/^static int$/;"	l
static	obj/user/buggyhello.asm	/^static long long$/;"	l
static	obj/user/buggyhello.asm	/^static ssize_t$/;"	l
static	obj/user/buggyhello.asm	/^static unsigned long long$/;"	l
static	obj/user/buggyhello.asm	/^static void$/;"	l
static	obj/user/buggyhello2.asm	/^static int$/;"	l
static	obj/user/buggyhello2.asm	/^static long long$/;"	l
static	obj/user/buggyhello2.asm	/^static ssize_t$/;"	l
static	obj/user/buggyhello2.asm	/^static unsigned long long$/;"	l
static	obj/user/buggyhello2.asm	/^static void$/;"	l
static	obj/user/cat.asm	/^static int$/;"	l
static	obj/user/cat.asm	/^static long long$/;"	l
static	obj/user/cat.asm	/^static ssize_t$/;"	l
static	obj/user/cat.asm	/^static unsigned long long$/;"	l
static	obj/user/cat.asm	/^static void$/;"	l
static	obj/user/divzero.asm	/^static int$/;"	l
static	obj/user/divzero.asm	/^static long long$/;"	l
static	obj/user/divzero.asm	/^static ssize_t$/;"	l
static	obj/user/divzero.asm	/^static unsigned long long$/;"	l
static	obj/user/divzero.asm	/^static void$/;"	l
static	obj/user/dumbfork.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/dumbfork.asm	/^static int$/;"	l
static	obj/user/dumbfork.asm	/^static long long$/;"	l
static	obj/user/dumbfork.asm	/^static ssize_t$/;"	l
static	obj/user/dumbfork.asm	/^static unsigned long long$/;"	l
static	obj/user/dumbfork.asm	/^static void$/;"	l
static	obj/user/echo.asm	/^static int$/;"	l
static	obj/user/echo.asm	/^static long long$/;"	l
static	obj/user/echo.asm	/^static ssize_t$/;"	l
static	obj/user/echo.asm	/^static unsigned long long$/;"	l
static	obj/user/echo.asm	/^static void$/;"	l
static	obj/user/echosrv.asm	/^static int$/;"	l
static	obj/user/echosrv.asm	/^static long long$/;"	l
static	obj/user/echosrv.asm	/^static ssize_t$/;"	l
static	obj/user/echosrv.asm	/^static unsigned long long$/;"	l
static	obj/user/echosrv.asm	/^static void$/;"	l
static	obj/user/echotest.asm	/^static int$/;"	l
static	obj/user/echotest.asm	/^static long long$/;"	l
static	obj/user/echotest.asm	/^static ssize_t$/;"	l
static	obj/user/echotest.asm	/^static unsigned long long$/;"	l
static	obj/user/echotest.asm	/^static void$/;"	l
static	obj/user/evilhello.asm	/^static int$/;"	l
static	obj/user/evilhello.asm	/^static long long$/;"	l
static	obj/user/evilhello.asm	/^static ssize_t$/;"	l
static	obj/user/evilhello.asm	/^static unsigned long long$/;"	l
static	obj/user/evilhello.asm	/^static void$/;"	l
static	obj/user/fairness.asm	/^static int$/;"	l
static	obj/user/fairness.asm	/^static long long$/;"	l
static	obj/user/fairness.asm	/^static ssize_t$/;"	l
static	obj/user/fairness.asm	/^static unsigned long long$/;"	l
static	obj/user/fairness.asm	/^static void$/;"	l
static	obj/user/faultalloc.asm	/^static int$/;"	l
static	obj/user/faultalloc.asm	/^static long long$/;"	l
static	obj/user/faultalloc.asm	/^static ssize_t$/;"	l
static	obj/user/faultalloc.asm	/^static unsigned long long$/;"	l
static	obj/user/faultalloc.asm	/^static void$/;"	l
static	obj/user/faultallocbad.asm	/^static int$/;"	l
static	obj/user/faultallocbad.asm	/^static long long$/;"	l
static	obj/user/faultallocbad.asm	/^static ssize_t$/;"	l
static	obj/user/faultallocbad.asm	/^static unsigned long long$/;"	l
static	obj/user/faultallocbad.asm	/^static void$/;"	l
static	obj/user/faultbadhandler.asm	/^static int$/;"	l
static	obj/user/faultbadhandler.asm	/^static long long$/;"	l
static	obj/user/faultbadhandler.asm	/^static ssize_t$/;"	l
static	obj/user/faultbadhandler.asm	/^static unsigned long long$/;"	l
static	obj/user/faultbadhandler.asm	/^static void$/;"	l
static	obj/user/faultdie.asm	/^static int$/;"	l
static	obj/user/faultdie.asm	/^static long long$/;"	l
static	obj/user/faultdie.asm	/^static ssize_t$/;"	l
static	obj/user/faultdie.asm	/^static unsigned long long$/;"	l
static	obj/user/faultdie.asm	/^static void$/;"	l
static	obj/user/faultevilhandler.asm	/^static int$/;"	l
static	obj/user/faultevilhandler.asm	/^static long long$/;"	l
static	obj/user/faultevilhandler.asm	/^static ssize_t$/;"	l
static	obj/user/faultevilhandler.asm	/^static unsigned long long$/;"	l
static	obj/user/faultevilhandler.asm	/^static void$/;"	l
static	obj/user/faultnostack.asm	/^static int$/;"	l
static	obj/user/faultnostack.asm	/^static long long$/;"	l
static	obj/user/faultnostack.asm	/^static ssize_t$/;"	l
static	obj/user/faultnostack.asm	/^static unsigned long long$/;"	l
static	obj/user/faultnostack.asm	/^static void$/;"	l
static	obj/user/faultread.asm	/^static int$/;"	l
static	obj/user/faultread.asm	/^static long long$/;"	l
static	obj/user/faultread.asm	/^static ssize_t$/;"	l
static	obj/user/faultread.asm	/^static unsigned long long$/;"	l
static	obj/user/faultread.asm	/^static void$/;"	l
static	obj/user/faultreadkernel.asm	/^static int$/;"	l
static	obj/user/faultreadkernel.asm	/^static long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static ssize_t$/;"	l
static	obj/user/faultreadkernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static void$/;"	l
static	obj/user/faultregs.asm	/^static int$/;"	l
static	obj/user/faultregs.asm	/^static long long$/;"	l
static	obj/user/faultregs.asm	/^static ssize_t$/;"	l
static	obj/user/faultregs.asm	/^static struct regs before, during, after;$/;"	t
static	obj/user/faultregs.asm	/^static unsigned long long$/;"	l
static	obj/user/faultregs.asm	/^static void$/;"	l
static	obj/user/faultwrite.asm	/^static int$/;"	l
static	obj/user/faultwrite.asm	/^static long long$/;"	l
static	obj/user/faultwrite.asm	/^static ssize_t$/;"	l
static	obj/user/faultwrite.asm	/^static unsigned long long$/;"	l
static	obj/user/faultwrite.asm	/^static void$/;"	l
static	obj/user/faultwritekernel.asm	/^static int$/;"	l
static	obj/user/faultwritekernel.asm	/^static long long$/;"	l
static	obj/user/faultwritekernel.asm	/^static ssize_t$/;"	l
static	obj/user/faultwritekernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultwritekernel.asm	/^static void$/;"	l
static	obj/user/forktree.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/forktree.asm	/^static int$/;"	l
static	obj/user/forktree.asm	/^static long long$/;"	l
static	obj/user/forktree.asm	/^static ssize_t$/;"	l
static	obj/user/forktree.asm	/^static unsigned long long$/;"	l
static	obj/user/forktree.asm	/^static void$/;"	l
static	obj/user/hello.asm	/^static int$/;"	l
static	obj/user/hello.asm	/^static long long$/;"	l
static	obj/user/hello.asm	/^static ssize_t$/;"	l
static	obj/user/hello.asm	/^static unsigned long long$/;"	l
static	obj/user/hello.asm	/^static void$/;"	l
static	obj/user/httpd.asm	/^static int$/;"	l
static	obj/user/httpd.asm	/^static long long$/;"	l
static	obj/user/httpd.asm	/^static ssize_t$/;"	l
static	obj/user/httpd.asm	/^static unsigned long long$/;"	l
static	obj/user/httpd.asm	/^static void$/;"	l
static	obj/user/icode.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/icode.asm	/^static int$/;"	l
static	obj/user/icode.asm	/^static long long$/;"	l
static	obj/user/icode.asm	/^static ssize_t$/;"	l
static	obj/user/icode.asm	/^static unsigned long long$/;"	l
static	obj/user/icode.asm	/^static void$/;"	l
static	obj/user/idle.asm	/^static int$/;"	l
static	obj/user/idle.asm	/^static long long$/;"	l
static	obj/user/idle.asm	/^static ssize_t$/;"	l
static	obj/user/idle.asm	/^static unsigned long long$/;"	l
static	obj/user/idle.asm	/^static void$/;"	l
static	obj/user/init.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/init.asm	/^static int$/;"	l
static	obj/user/init.asm	/^static long long$/;"	l
static	obj/user/init.asm	/^static ssize_t$/;"	l
static	obj/user/init.asm	/^static unsigned long long$/;"	l
static	obj/user/init.asm	/^static void$/;"	l
static	obj/user/ls.asm	/^static int$/;"	l
static	obj/user/ls.asm	/^static long long$/;"	l
static	obj/user/ls.asm	/^static ssize_t$/;"	l
static	obj/user/ls.asm	/^static unsigned long long$/;"	l
static	obj/user/ls.asm	/^static void$/;"	l
static	obj/user/lsfd.asm	/^static int$/;"	l
static	obj/user/lsfd.asm	/^static long long$/;"	l
static	obj/user/lsfd.asm	/^static ssize_t$/;"	l
static	obj/user/lsfd.asm	/^static unsigned long long$/;"	l
static	obj/user/lsfd.asm	/^static void$/;"	l
static	obj/user/num.asm	/^static int$/;"	l
static	obj/user/num.asm	/^static long long$/;"	l
static	obj/user/num.asm	/^static ssize_t$/;"	l
static	obj/user/num.asm	/^static unsigned long long$/;"	l
static	obj/user/num.asm	/^static void$/;"	l
static	obj/user/pingpong.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/pingpong.asm	/^static int$/;"	l
static	obj/user/pingpong.asm	/^static long long$/;"	l
static	obj/user/pingpong.asm	/^static ssize_t$/;"	l
static	obj/user/pingpong.asm	/^static unsigned long long$/;"	l
static	obj/user/pingpong.asm	/^static void$/;"	l
static	obj/user/pingpongs.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/pingpongs.asm	/^static int$/;"	l
static	obj/user/pingpongs.asm	/^static long long$/;"	l
static	obj/user/pingpongs.asm	/^static ssize_t$/;"	l
static	obj/user/pingpongs.asm	/^static unsigned long long$/;"	l
static	obj/user/pingpongs.asm	/^static void$/;"	l
static	obj/user/primes.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/primes.asm	/^static int$/;"	l
static	obj/user/primes.asm	/^static long long$/;"	l
static	obj/user/primes.asm	/^static ssize_t$/;"	l
static	obj/user/primes.asm	/^static unsigned long long$/;"	l
static	obj/user/primes.asm	/^static void$/;"	l
static	obj/user/primespipe.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/primespipe.asm	/^static int$/;"	l
static	obj/user/primespipe.asm	/^static long long$/;"	l
static	obj/user/primespipe.asm	/^static ssize_t$/;"	l
static	obj/user/primespipe.asm	/^static unsigned long long$/;"	l
static	obj/user/primespipe.asm	/^static void$/;"	l
static	obj/user/sendpage.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/sendpage.asm	/^static int$/;"	l
static	obj/user/sendpage.asm	/^static long long$/;"	l
static	obj/user/sendpage.asm	/^static ssize_t$/;"	l
static	obj/user/sendpage.asm	/^static unsigned long long$/;"	l
static	obj/user/sendpage.asm	/^static void$/;"	l
static	obj/user/sh.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/sh.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/user/sh.asm	/^static int$/;"	l
static	obj/user/sh.asm	/^static long long$/;"	l
static	obj/user/sh.asm	/^static ssize_t$/;"	l
static	obj/user/sh.asm	/^static unsigned long long$/;"	l
static	obj/user/sh.asm	/^static void$/;"	l
static	obj/user/softint.asm	/^static int$/;"	l
static	obj/user/softint.asm	/^static long long$/;"	l
static	obj/user/softint.asm	/^static ssize_t$/;"	l
static	obj/user/softint.asm	/^static unsigned long long$/;"	l
static	obj/user/softint.asm	/^static void$/;"	l
static	obj/user/spawnhello.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/spawnhello.asm	/^static int$/;"	l
static	obj/user/spawnhello.asm	/^static long long$/;"	l
static	obj/user/spawnhello.asm	/^static ssize_t$/;"	l
static	obj/user/spawnhello.asm	/^static unsigned long long$/;"	l
static	obj/user/spawnhello.asm	/^static void$/;"	l
static	obj/user/spin.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/spin.asm	/^static int$/;"	l
static	obj/user/spin.asm	/^static long long$/;"	l
static	obj/user/spin.asm	/^static ssize_t$/;"	l
static	obj/user/spin.asm	/^static unsigned long long$/;"	l
static	obj/user/spin.asm	/^static void$/;"	l
static	obj/user/stresssched.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/stresssched.asm	/^static int$/;"	l
static	obj/user/stresssched.asm	/^static long long$/;"	l
static	obj/user/stresssched.asm	/^static ssize_t$/;"	l
static	obj/user/stresssched.asm	/^static unsigned long long$/;"	l
static	obj/user/stresssched.asm	/^static void$/;"	l
static	obj/user/testbss.asm	/^static int$/;"	l
static	obj/user/testbss.asm	/^static long long$/;"	l
static	obj/user/testbss.asm	/^static ssize_t$/;"	l
static	obj/user/testbss.asm	/^static unsigned long long$/;"	l
static	obj/user/testbss.asm	/^static void$/;"	l
static	obj/user/testfdsharing.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testfdsharing.asm	/^static __inline uint64_t read_tsc(void) __attribute__((always_inline));$/;"	l
static	obj/user/testfdsharing.asm	/^static __inline void$/;"	l
static	obj/user/testfdsharing.asm	/^static int$/;"	l
static	obj/user/testfdsharing.asm	/^static long long$/;"	l
static	obj/user/testfdsharing.asm	/^static ssize_t$/;"	l
static	obj/user/testfdsharing.asm	/^static unsigned long long$/;"	l
static	obj/user/testfdsharing.asm	/^static void$/;"	l
static	obj/user/testfile.asm	/^static int$/;"	l
static	obj/user/testfile.asm	/^static long long$/;"	l
static	obj/user/testfile.asm	/^static ssize_t$/;"	l
static	obj/user/testfile.asm	/^static unsigned long long$/;"	l
static	obj/user/testfile.asm	/^static void$/;"	l
static	obj/user/testkbd.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/user/testkbd.asm	/^static int$/;"	l
static	obj/user/testkbd.asm	/^static long long$/;"	l
static	obj/user/testkbd.asm	/^static ssize_t$/;"	l
static	obj/user/testkbd.asm	/^static unsigned long long$/;"	l
static	obj/user/testkbd.asm	/^static void$/;"	l
static	obj/user/testpipe.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testpipe.asm	/^static int$/;"	l
static	obj/user/testpipe.asm	/^static long long$/;"	l
static	obj/user/testpipe.asm	/^static ssize_t$/;"	l
static	obj/user/testpipe.asm	/^static unsigned long long$/;"	l
static	obj/user/testpipe.asm	/^static void$/;"	l
static	obj/user/testpiperace.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testpiperace.asm	/^static int$/;"	l
static	obj/user/testpiperace.asm	/^static long long$/;"	l
static	obj/user/testpiperace.asm	/^static ssize_t$/;"	l
static	obj/user/testpiperace.asm	/^static unsigned long long$/;"	l
static	obj/user/testpiperace.asm	/^static void$/;"	l
static	obj/user/testpiperace2.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testpiperace2.asm	/^static int$/;"	l
static	obj/user/testpiperace2.asm	/^static long long$/;"	l
static	obj/user/testpiperace2.asm	/^static ssize_t$/;"	l
static	obj/user/testpiperace2.asm	/^static unsigned long long$/;"	l
static	obj/user/testpiperace2.asm	/^static void$/;"	l
static	obj/user/testpteshare.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testpteshare.asm	/^static __inline uint64_t read_tsc(void) __attribute__((always_inline));$/;"	l
static	obj/user/testpteshare.asm	/^static __inline void$/;"	l
static	obj/user/testpteshare.asm	/^static int$/;"	l
static	obj/user/testpteshare.asm	/^static long long$/;"	l
static	obj/user/testpteshare.asm	/^static ssize_t$/;"	l
static	obj/user/testpteshare.asm	/^static unsigned long long$/;"	l
static	obj/user/testpteshare.asm	/^static void$/;"	l
static	obj/user/testshell.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testshell.asm	/^static __inline uint64_t read_tsc(void) __attribute__((always_inline));$/;"	l
static	obj/user/testshell.asm	/^static __inline void$/;"	l
static	obj/user/testshell.asm	/^static int$/;"	l
static	obj/user/testshell.asm	/^static long long$/;"	l
static	obj/user/testshell.asm	/^static ssize_t$/;"	l
static	obj/user/testshell.asm	/^static unsigned long long$/;"	l
static	obj/user/testshell.asm	/^static void$/;"	l
static	obj/user/testtime.asm	/^static __inline uint64_t read_tsc(void) __attribute__((always_inline));$/;"	l
static	obj/user/testtime.asm	/^static __inline void$/;"	l
static	obj/user/testtime.asm	/^static int$/;"	l
static	obj/user/testtime.asm	/^static long long$/;"	l
static	obj/user/testtime.asm	/^static ssize_t$/;"	l
static	obj/user/testtime.asm	/^static unsigned long long$/;"	l
static	obj/user/testtime.asm	/^static void$/;"	l
static	obj/user/yield.asm	/^static int$/;"	l
static	obj/user/yield.asm	/^static long long$/;"	l
static	obj/user/yield.asm	/^static ssize_t$/;"	l
static	obj/user/yield.asm	/^static unsigned long long$/;"	l
static	obj/user/yield.asm	/^static void$/;"	l
static_assert	inc/assert.h	18;"	d
stats	net/lwip/netif/ppp/vj.h	/^  struct vjstat stats;$/;"	m	struct:vjcompress	typeref:struct:vjcompress::vjstat
stats_	net/lwip/include/lwip/stats.h	/^struct stats_ {$/;"	s
stats_display	net/lwip/core/stats.c	/^stats_display(void)$/;"	f
stats_display	net/lwip/include/lwip/stats.h	271;"	d
stats_display_igmp	net/lwip/core/stats.c	/^stats_display_igmp(struct stats_igmp *igmp)$/;"	f
stats_display_igmp	net/lwip/include/lwip/stats.h	273;"	d
stats_display_mem	net/lwip/core/stats.c	/^stats_display_mem(struct stats_mem *mem, char *name)$/;"	f
stats_display_mem	net/lwip/include/lwip/stats.h	274;"	d
stats_display_memp	net/lwip/core/stats.c	/^stats_display_memp(struct stats_mem *mem, int index)$/;"	f
stats_display_memp	net/lwip/include/lwip/stats.h	275;"	d
stats_display_proto	net/lwip/core/stats.c	/^stats_display_proto(struct stats_proto *proto, char *name)$/;"	f
stats_display_proto	net/lwip/include/lwip/stats.h	272;"	d
stats_display_sys	net/lwip/core/stats.c	/^stats_display_sys(struct stats_sys *sys)$/;"	f
stats_display_sys	net/lwip/include/lwip/stats.h	276;"	d
stats_igmp	net/lwip/include/lwip/stats.h	/^struct stats_igmp {$/;"	s
stats_init	net/lwip/include/lwip/stats.h	142;"	d
stats_init	net/lwip/include/lwip/stats.h	147;"	d
stats_mem	net/lwip/include/lwip/stats.h	/^struct stats_mem {$/;"	s
stats_proto	net/lwip/include/lwip/stats.h	/^struct stats_proto {$/;"	s
stats_sys	net/lwip/include/lwip/stats.h	/^struct stats_sys {$/;"	s
stats_syselem	net/lwip/include/lwip/stats.h	/^struct stats_syselem {$/;"	s
status	kern/e1000.h	/^            uint8_t status;     \/* Descriptor status *\/$/;"	m	struct:e1000_tx_desc::__anon39::__anon40
status	kern/e1000.h	/^    uint8_t status;      \/* Descriptor status *\/$/;"	m	struct:e1000_rx_desc
status_callback	net/lwip/include/lwip/netif.h	/^  void (* status_callback)(struct netif *netif);$/;"	m	struct:netif
stop	gradelib.py	/^    def stop(line):$/;"	f	function:stop_on_line
stop	obj/net/ns.asm	/^			stop = sys_time_msec() + to;$/;"	d
stop	obj/net/testinput.asm	/^			stop = sys_time_msec() + to;$/;"	d
stop	obj/net/testoutput.asm	/^			stop = sys_time_msec() + to;$/;"	d
stop_breakpoint	gradelib.py	/^def stop_breakpoint(addr):$/;"	f
stop_on_line	gradelib.py	/^def stop_on_line(regexp):$/;"	f
str1	user/sendpage.c	/^const char *str1 = "hello child environment! how are you?";$/;"	v
str2	user/sendpage.c	/^const char *str2 = "hello parent environment! I'm good.";$/;"	v
strcat	lib/string.c	/^strcat(char *dst, const char *src)$/;"	f
strchr	lib/string.c	/^strchr(const char *s, char c)$/;"	f
strcmp	lib/string.c	/^strcmp(const char *p, const char *q)$/;"	f
strcpy	lib/string.c	/^strcpy(char *dst, const char *src)$/;"	f
strfind	lib/string.c	/^strfind(const char *s, char c)$/;"	f
string_size	obj/user/icode.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/init.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/sh.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/spawnhello.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/testpteshare.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/testshell.asm	/^	string_size = 0;$/;"	d
string_store	obj/user/icode.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/init.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/sh.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/spawnhello.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/testpteshare.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/testshell.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
strlcpy	lib/string.c	/^strlcpy(char *dst, const char *src, size_t size)$/;"	f
strlen	lib/string.c	/^strlen(const char *s)$/;"	f
strncmp	lib/string.c	/^strncmp(const char *p, const char *q, size_t n)$/;"	f
strncpy	lib/string.c	/^strncpy(char *dst, const char *src, size_t size) {$/;"	f
strnlen	lib/string.c	/^strnlen(const char *s, size_t size)$/;"	f
strplen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t strplen;$/;"	m	struct:snmp_trap_header_lengths
strplenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t strplenlen;$/;"	m	struct:snmp_trap_header_lengths
strtol	lib/string.c	/^strtol(const char *s, char **endptr, int base)$/;"	f
subnetMask	net/lwip/netif/ppp/ppp.c	/^u_long subnetMask;$/;"	v
sum	kern/mpconfig.c	/^sum(void *addr, int len)$/;"	f	file:
sum	obj/kern/kernel.asm	/^	sum = 0;$/;"	d
sum	user/init.c	/^sum(const char *s, int n)$/;"	f
super	fs/fs.h	/^struct Super *super;		\/\/ superblock$/;"	v	typeref:struct:Super
super	fs/fsformat.c	/^struct Super *super;$/;"	v	typeref:struct:Super
super	obj/fs/fs.asm	/^	super = diskaddr(1);$/;"	d
sv	net/lwip/include/lwip/tcp.h	/^  s16_t sa, sv; \/* @todo document this *\/$/;"	m	struct:tcp_pcb
swapped	obj/net/ns.asm	/^      swapped = 1 - swapped;$/;"	d
swapped	obj/net/ns.asm	/^  swapped = 0;$/;"	d
sync	lib/file.c	/^sync(void)$/;"	f
sys	net/lwip/include/lwip/stats.h	/^  struct stats_sys sys;$/;"	m	struct:stats_	typeref:struct:stats_::stats_sys
sys_arch_mbox_fetch	net/lwip/jos/arch/sys_arch.c	/^sys_arch_mbox_fetch(sys_mbox_t mbox, void **msg, u32_t tm_msec)$/;"	f
sys_arch_mbox_tryfetch	net/lwip/jos/arch/sys_arch.c	/^sys_arch_mbox_tryfetch(sys_mbox_t mbox, void **msg)$/;"	f
sys_arch_sem_wait	net/lwip/include/lwip/sys.h	57;"	d
sys_arch_sem_wait	net/lwip/jos/arch/sys_arch.c	/^sys_arch_sem_wait(sys_sem_t sem, u32_t tm_msec)$/;"	f
sys_arch_timeouts	net/lwip/jos/arch/sys_arch.c	/^sys_arch_timeouts(void)$/;"	f
sys_cgetc	kern/syscall.c	/^sys_cgetc(void)$/;"	f	file:
sys_cgetc	lib/syscall.c	/^sys_cgetc(void)$/;"	f
sys_cputs	kern/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f	file:
sys_cputs	lib/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f
sys_env_destroy	kern/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f	file:
sys_env_destroy	lib/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f
sys_env_set_pgfault_upcall	kern/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *func)$/;"	f	file:
sys_env_set_pgfault_upcall	lib/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *upcall)$/;"	f
sys_env_set_status	kern/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f	file:
sys_env_set_status	lib/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f
sys_env_set_trapframe	kern/syscall.c	/^sys_env_set_trapframe(envid_t envid, struct Trapframe *tf)$/;"	f	file:
sys_env_set_trapframe	lib/syscall.c	/^sys_env_set_trapframe(envid_t envid, struct Trapframe *tf)$/;"	f
sys_errlist	net/lwip/jos/arch/perror.c	/^const char *sys_errlist[] = {$/;"	v
sys_exofork	inc/lib.h	/^sys_exofork(void)$/;"	f
sys_exofork	kern/syscall.c	/^sys_exofork(void)$/;"	f	file:
sys_getenvid	kern/syscall.c	/^sys_getenvid(void)$/;"	f	file:
sys_getenvid	lib/syscall.c	/^sys_getenvid(void)$/;"	f
sys_init	net/lwip/include/lwip/sys.h	50;"	d
sys_init	net/lwip/jos/arch/sys_arch.c	/^sys_init(void)$/;"	f
sys_ipc_recv	kern/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f	file:
sys_ipc_recv	lib/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f
sys_ipc_try_send	kern/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, unsigned perm)$/;"	f	file:
sys_ipc_try_send	lib/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, int perm)$/;"	f
sys_mbox_entry	net/lwip/jos/arch/sys_arch.c	/^struct sys_mbox_entry {$/;"	s	file:
sys_mbox_fetch	net/lwip/core/sys.c	/^sys_mbox_fetch(sys_mbox_t mbox, void **msg)$/;"	f
sys_mbox_fetch	net/lwip/include/lwip/sys.h	60;"	d
sys_mbox_free	net/lwip/include/lwip/sys.h	64;"	d
sys_mbox_free	net/lwip/jos/arch/sys_arch.c	/^sys_mbox_free(sys_mbox_t mbox)$/;"	f
sys_mbox_new	net/lwip/include/lwip/sys.h	59;"	d
sys_mbox_new	net/lwip/jos/arch/sys_arch.c	/^sys_mbox_new(int size)$/;"	f
sys_mbox_post	net/lwip/include/lwip/sys.h	62;"	d
sys_mbox_post	net/lwip/jos/arch/sys_arch.c	/^sys_mbox_post(sys_mbox_t mbox, void *msg)$/;"	f
sys_mbox_t	net/lwip/include/lwip/sys.h	/^typedef u8_t sys_mbox_t;$/;"	t
sys_mbox_t	net/lwip/jos/arch/sys_arch.h	/^typedef int sys_mbox_t;$/;"	t
sys_mbox_t	obj/net/ns.asm	/^sys_mbox_t$/;"	l
sys_mbox_tryfetch	net/lwip/include/lwip/sys.h	135;"	d
sys_mbox_tryfetch	net/lwip/include/lwip/sys.h	61;"	d
sys_mbox_trypost	net/lwip/include/lwip/sys.h	63;"	d
sys_mbox_trypost	net/lwip/jos/arch/sys_arch.c	/^sys_mbox_trypost(sys_mbox_t mbox, void *msg)$/;"	f
sys_msleep	net/lwip/core/sys.c	/^sys_msleep(u32_t ms)$/;"	f
sys_page_alloc	kern/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f	file:
sys_page_alloc	lib/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f
sys_page_map	kern/syscall.c	/^sys_page_map(envid_t srcenvid, void *srcva,$/;"	f	file:
sys_page_map	lib/syscall.c	/^sys_page_map(envid_t srcenv, void *srcva, envid_t dstenv, void *dstva, int perm)$/;"	f
sys_page_unmap	kern/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f	file:
sys_page_unmap	lib/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f
sys_prot_t	net/lwip/include/lwip/sys.h	/^typedef u8_t sys_prot_t;$/;"	t
sys_receive_packet	kern/syscall.c	/^sys_receive_packet(void *va, uint32_t *len)$/;"	f	file:
sys_receive_packet	lib/syscall.c	/^sys_receive_packet(void *va)$/;"	f
sys_sem_entry	net/lwip/jos/arch/sys_arch.c	/^struct sys_sem_entry {$/;"	s	file:
sys_sem_free	net/lwip/include/lwip/sys.h	58;"	d
sys_sem_free	net/lwip/jos/arch/sys_arch.c	/^sys_sem_free(sys_sem_t sem)$/;"	f
sys_sem_new	net/lwip/include/lwip/sys.h	53;"	d
sys_sem_new	net/lwip/jos/arch/sys_arch.c	/^sys_sem_new(u8_t count)$/;"	f
sys_sem_signal	net/lwip/include/lwip/sys.h	54;"	d
sys_sem_signal	net/lwip/jos/arch/sys_arch.c	/^sys_sem_signal(sys_sem_t sem)$/;"	f
sys_sem_t	net/lwip/include/lwip/sys.h	/^typedef u8_t sys_sem_t;$/;"	t
sys_sem_t	net/lwip/jos/arch/sys_arch.h	/^typedef	int sys_sem_t;$/;"	t
sys_sem_t	obj/net/ns.asm	/^sys_sem_t$/;"	l
sys_sem_wait	net/lwip/core/sys.c	/^sys_sem_wait(sys_sem_t sem)$/;"	f
sys_sem_wait	net/lwip/include/lwip/sys.h	55;"	d
sys_sem_wait_timeout	net/lwip/core/sys.c	/^sys_sem_wait_timeout(sys_sem_t sem, u32_t timeout)$/;"	f
sys_sem_wait_timeout	net/lwip/include/lwip/sys.h	56;"	d
sys_tem	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node sys_tem = {$/;"	v	typeref:struct:mib_array_node
sys_tem_ids	net/lwip/core/snmp/mib2.c	/^const s32_t sys_tem_ids[7] = { 1, 2, 3, 4, 5, 6, 7 };$/;"	v
sys_tem_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const sys_tem_nodes[7] = {$/;"	v
sys_tem_scalar	net/lwip/core/snmp/mib2.c	/^const mib_scalar_node sys_tem_scalar = {$/;"	v
sys_thread	net/lwip/jos/arch/sys_arch.c	/^struct sys_thread {$/;"	s	file:
sys_thread_new	net/lwip/include/lwip/sys.h	66;"	d
sys_thread_new	net/lwip/jos/arch/sys_arch.c	/^sys_thread_new(char *name, void (* thread)(void *arg), void *arg, $/;"	f
sys_thread_t	net/lwip/jos/arch/sys_arch.h	/^typedef int sys_thread_t;$/;"	t
sys_thread_t	obj/net/ns.asm	/^sys_thread_t$/;"	l
sys_time_msec	kern/syscall.c	/^sys_time_msec(void)$/;"	f	file:
sys_time_msec	lib/syscall.c	/^sys_time_msec(void)$/;"	f
sys_timeo	net/lwip/include/lwip/sys.h	/^struct sys_timeo {$/;"	s
sys_timeo	net/lwip/include/lwip/sys.h	/^struct sys_timeo {u8_t dummy;};$/;"	s
sys_timeout	net/lwip/core/sys.c	/^sys_timeout(u32_t msecs, sys_timeout_handler h, void *arg)$/;"	f
sys_timeout	net/lwip/include/lwip/sys.h	51;"	d
sys_timeout_handler	net/lwip/include/lwip/sys.h	/^typedef void (* sys_timeout_handler)(void *arg);$/;"	t
sys_timeouts	net/lwip/include/lwip/sys.h	/^struct sys_timeouts {$/;"	s
sys_transmit_packet	kern/syscall.c	/^sys_transmit_packet(void *va, size_t len)$/;"	f	file:
sys_transmit_packet	lib/syscall.c	/^sys_transmit_packet(void *va, size_t len)$/;"	f
sys_untimeout	net/lwip/core/sys.c	/^sys_untimeout(sys_timeout_handler h, void *arg)$/;"	f
sys_untimeout	net/lwip/include/lwip/sys.h	52;"	d
sys_yield	kern/syscall.c	/^sys_yield(void)$/;"	f	file:
sys_yield	lib/syscall.c	/^sys_yield(void)$/;"	f
syscall	kern/syscall.c	/^syscall(uint32_t syscallno, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f
syscall	lib/syscall.c	/^syscall(int num, int check, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f	file:
syscontact_default	net/lwip/core/snmp/mib2.c	/^static const u8_t syscontact_default[] = "";$/;"	v	file:
syscontact_len_default	net/lwip/core/snmp/mib2.c	/^static const u8_t syscontact_len_default = 0;$/;"	v	file:
syscontact_len_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* syscontact_len_ptr = (u8_t*)&syscontact_len_default;$/;"	v	file:
syscontact_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* syscontact_ptr = (u8_t*)&syscontact_default[0];$/;"	v	file:
sysdescr_default	net/lwip/core/snmp/mib2.c	/^static const u8_t sysdescr_default[] = "lwIP";$/;"	v	file:
sysdescr_len_default	net/lwip/core/snmp/mib2.c	/^static const u8_t sysdescr_len_default = 4;$/;"	v	file:
sysdescr_len_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* sysdescr_len_ptr = (u8_t*)&sysdescr_len_default;$/;"	v	file:
sysdescr_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* sysdescr_ptr = (u8_t*)&sysdescr_default[0];$/;"	v	file:
syslocation_default	net/lwip/core/snmp/mib2.c	/^static const u8_t syslocation_default[] = "";$/;"	v	file:
syslocation_len_default	net/lwip/core/snmp/mib2.c	/^static const u8_t syslocation_len_default = 0;$/;"	v	file:
syslocation_len_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* syslocation_len_ptr = (u8_t*)&syslocation_len_default;$/;"	v	file:
syslocation_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* syslocation_ptr = (u8_t*)&syslocation_default[0];$/;"	v	file:
sysname_default	net/lwip/core/snmp/mib2.c	/^static const u8_t sysname_default[] = "FQDN-unk";$/;"	v	file:
sysname_len_default	net/lwip/core/snmp/mib2.c	/^static const u8_t sysname_len_default = 8;$/;"	v	file:
sysname_len_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* sysname_len_ptr = (u8_t*)&sysname_len_default;$/;"	v	file:
sysname_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* sysname_ptr = (u8_t*)&sysname_default[0];$/;"	v	file:
sysobjid	net/lwip/core/snmp/mib2.c	/^static struct snmp_obj_id sysobjid = {SNMP_SYSOBJID_LEN, SNMP_SYSOBJID};$/;"	v	typeref:struct:snmp_obj_id	file:
sysservices	net/lwip/core/snmp/mib2.c	/^static const s32_t sysservices = SNMP_SYSSERVICES;$/;"	v	file:
system_get_object_def	net/lwip/core/snmp/mib2.c	/^system_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
system_get_value	net/lwip/core/snmp/mib2.c	/^system_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
system_set_test	net/lwip/core/snmp/mib2.c	/^system_set_test(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
system_set_value	net/lwip/core/snmp/mib2.c	/^system_set_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
sysuptime	net/lwip/core/snmp/mib2.c	/^static u32_t sysuptime = 0;$/;"	v	file:
t	obj/net/ns.asm	/^    t = malloc(sizeof(*t));$/;"	d
t	obj/user/sh.asm	/^		t = **p2;$/;"	d
t	obj/user/sh.asm	/^		t = *s;$/;"	d
t1_timeout	net/lwip/include/lwip/dhcp.h	/^  u16_t t1_timeout;  \/* #ticks with period DHCP_COARSE_TIMER_SECS for renewal time *\/$/;"	m	struct:dhcp
t2_timeout	net/lwip/include/lwip/dhcp.h	/^  u16_t t2_timeout;  \/* #ticks with period DHCP_COARSE_TIMER_SECS for rebind time *\/$/;"	m	struct:dhcp
t_arp	net/serv.c	/^static struct timer_thread t_arp;$/;"	v	typeref:struct:timer_thread	file:
t_tcpf	net/serv.c	/^static struct timer_thread t_tcpf;$/;"	v	typeref:struct:timer_thread	file:
t_tcps	net/serv.c	/^static struct timer_thread t_tcps;$/;"	v	typeref:struct:timer_thread	file:
tail	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind *tail;$/;"	m	struct:snmp_varbind_root	typeref:struct:snmp_varbind_root::snmp_varbind
tail	net/lwip/include/lwip/snmp_structs.h	/^  struct mib_list_node *tail;$/;"	m	struct:mib_list_rootnode	typeref:struct:mib_list_rootnode::mib_list_node
tail_gone	obj/net/ns.asm	/^    tail_gone = pbuf_free(q);$/;"	d
tc	obj/net/ns.asm	/^	tc = tc->tc_queue_link;$/;"	d
tc_arg	net/lwip/jos/arch/threadq.h	/^    uint32_t		tc_arg;$/;"	m	struct:thread_context
tc_entry	net/lwip/jos/arch/threadq.h	/^    void		(*tc_entry)(uint32_t);$/;"	m	struct:thread_context
tc_jb	net/lwip/jos/arch/threadq.h	/^    struct jos_jmp_buf	tc_jb;$/;"	m	struct:thread_context	typeref:struct:thread_context::jos_jmp_buf
tc_name	net/lwip/jos/arch/threadq.h	/^    char 		tc_name[name_size];$/;"	m	struct:thread_context
tc_nonhalt	net/lwip/jos/arch/threadq.h	/^    int			tc_nonhalt;$/;"	m	struct:thread_context
tc_onhalt	net/lwip/jos/arch/threadq.h	/^    void		(*tc_onhalt[THREAD_NUM_ONHALT])(thread_id_t);$/;"	m	struct:thread_context
tc_queue_link	net/lwip/jos/arch/threadq.h	/^    struct thread_context *tc_queue_link;$/;"	m	struct:thread_context	typeref:struct:thread_context::thread_context
tc_stack_bottom	net/lwip/jos/arch/threadq.h	/^    void		*tc_stack_bottom;$/;"	m	struct:thread_context
tc_tid	net/lwip/jos/arch/threadq.h	/^    thread_id_t		tc_tid;$/;"	m	struct:thread_context
tc_wait_addr	net/lwip/jos/arch/threadq.h	/^    volatile uint32_t	*tc_wait_addr;$/;"	m	struct:thread_context
tc_wakeup	net/lwip/jos/arch/threadq.h	/^    volatile char	tc_wakeup;$/;"	m	struct:thread_context
tclass1	net/lwip/include/ipv6/lwip/ip.h	/^  u8_t tclass1:4, v:4;$/;"	m	struct:ip_hdr
tclass2	net/lwip/include/ipv6/lwip/ip.h	/^  u8_t flow1:4, tclass2:4;  $/;"	m	struct:ip_hdr
tcp	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node tcp = {$/;"	v	typeref:struct:mib_array_node
tcp	net/lwip/include/lwip/api.h	/^    struct tcp_pcb *tcp;$/;"	m	union:netconn::__anon21	typeref:struct:netconn::__anon21::tcp_pcb
tcp	net/lwip/include/lwip/stats.h	/^  struct stats_proto tcp;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
tcp_abort	net/lwip/core/tcp.c	/^tcp_abort(struct tcp_pcb *pcb)$/;"	f
tcp_accept	net/lwip/core/tcp.c	/^tcp_accept(struct tcp_pcb *pcb,$/;"	f
tcp_accept_null	net/lwip/core/tcp.c	/^tcp_accept_null(void *arg, struct tcp_pcb *pcb, err_t err)$/;"	f	file:
tcp_accepted	net/lwip/include/lwip/tcp.h	83;"	d
tcp_accepted	net/lwip/include/lwip/tcp.h	85;"	d
tcp_ack	net/lwip/include/lwip/tcp.h	509;"	d
tcp_ack_now	net/lwip/include/lwip/tcp.h	517;"	d
tcp_active_pcbs	net/lwip/core/tcp.c	/^struct tcp_pcb *tcp_active_pcbs;  $/;"	v	typeref:struct:tcp_pcb
tcp_active_pcbs	obj/net/ns.asm	/^        tcp_active_pcbs = pcb->next;$/;"	d
tcp_active_pcbs	obj/net/ns.asm	/^        tcp_active_pcbs = pcb;$/;"	d
tcp_alloc	net/lwip/core/tcp.c	/^tcp_alloc(u8_t prio)$/;"	f
tcp_arg	net/lwip/core/tcp.c	/^tcp_arg(struct tcp_pcb *pcb, void *arg)$/;"	f
tcp_backoff	net/lwip/core/tcp.c	/^const u8_t tcp_backoff[13] =$/;"	v
tcp_bind	net/lwip/core/tcp.c	/^tcp_bind(struct tcp_pcb *pcb, struct ip_addr *ipaddr, u16_t port)$/;"	f
tcp_bound_pcbs	net/lwip/core/tcp.c	/^struct tcp_pcb *tcp_bound_pcbs;  $/;"	v	typeref:struct:tcp_pcb
tcp_close	net/lwip/core/tcp.c	/^tcp_close(struct tcp_pcb *pcb)$/;"	f
tcp_connect	net/lwip/core/tcp.c	/^tcp_connect(struct tcp_pcb *pcb, struct ip_addr *ipaddr, u16_t port,$/;"	f
tcp_debug_print	net/lwip/core/tcp.c	/^tcp_debug_print(struct tcp_hdr *tcphdr)$/;"	f
tcp_debug_print	net/lwip/include/lwip/tcp.h	550;"	d
tcp_debug_print_flags	net/lwip/core/tcp.c	/^tcp_debug_print_flags(u8_t flags)$/;"	f
tcp_debug_print_flags	net/lwip/include/lwip/tcp.h	551;"	d
tcp_debug_print_pcbs	net/lwip/core/tcp.c	/^tcp_debug_print_pcbs(void)$/;"	f
tcp_debug_print_pcbs	net/lwip/include/lwip/tcp.h	553;"	d
tcp_debug_print_state	net/lwip/core/tcp.c	/^tcp_debug_print_state(enum tcp_state s)$/;"	f
tcp_debug_print_state	net/lwip/include/lwip/tcp.h	552;"	d
tcp_do_output_nagle	net/lwip/include/lwip/tcp.h	134;"	d
tcp_eff_send_mss	net/lwip/core/tcp.c	/^tcp_eff_send_mss(u16_t sendmss, struct ip_addr *addr)$/;"	f
tcp_enqueue	net/lwip/core/tcp_out.c	/^tcp_enqueue(struct tcp_pcb *pcb, void *arg, u16_t len,$/;"	f
tcp_err	net/lwip/core/tcp.c	/^tcp_err(struct tcp_pcb *pcb,$/;"	f
tcp_fasttmr	net/lwip/core/tcp.c	/^tcp_fasttmr(void)$/;"	f
tcp_get_object_def	net/lwip/core/snmp/mib2.c	/^tcp_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
tcp_get_value	net/lwip/core/snmp/mib2.c	/^tcp_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
tcp_hdr	net/lwip/include/lwip/tcp.h	/^struct tcp_hdr {$/;"	s
tcp_ids	net/lwip/core/snmp/mib2.c	/^const s32_t tcp_ids[15] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 };$/;"	v
tcp_init	net/lwip/include/lwip/tcp.h	55;"	d
tcp_input	net/lwip/core/tcp_in.c	/^tcp_input(struct pbuf *p, struct netif *inp)$/;"	f
tcp_input_pcb	net/lwip/core/tcp_in.c	/^struct tcp_pcb *tcp_input_pcb;$/;"	v	typeref:struct:tcp_pcb
tcp_input_pcb	obj/net/ns.asm	/^    tcp_input_pcb = NULL;$/;"	d
tcp_input_pcb	obj/net/ns.asm	/^    tcp_input_pcb = pcb;$/;"	d
tcp_keepalive	net/lwip/core/tcp_out.c	/^tcp_keepalive(struct tcp_pcb *pcb)$/;"	f
tcp_kill_prio	net/lwip/core/tcp.c	/^tcp_kill_prio(u8_t prio)$/;"	f	file:
tcp_kill_timewait	net/lwip/core/tcp.c	/^tcp_kill_timewait(void)$/;"	f	file:
tcp_listen	net/lwip/include/lwip/tcp.h	97;"	d
tcp_listen_input	net/lwip/core/tcp_in.c	/^tcp_listen_input(struct tcp_pcb_listen *pcb)$/;"	f	file:
tcp_listen_pcbs	net/lwip/core/tcp.c	/^union tcp_listen_pcbs_t tcp_listen_pcbs;$/;"	v	typeref:union:tcp_listen_pcbs_t
tcp_listen_pcbs_t	net/lwip/include/lwip/tcp.h	/^union tcp_listen_pcbs_t { \/* List of all TCP PCBs in LISTEN state. *\/$/;"	u
tcp_listen_with_backlog	net/lwip/core/tcp.c	/^tcp_listen_with_backlog(struct tcp_pcb *pcb, u8_t backlog)$/;"	f
tcp_mss	net/lwip/include/lwip/tcp.h	79;"	d
tcp_new	net/lwip/core/tcp.c	/^tcp_new(void)$/;"	f
tcp_new_port	net/lwip/core/tcp.c	/^tcp_new_port(void)$/;"	f	file:
tcp_next_iss	net/lwip/core/tcp.c	/^tcp_next_iss(void)$/;"	f
tcp_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const tcp_nodes[15] = {$/;"	v
tcp_output	net/lwip/core/tcp_out.c	/^tcp_output(struct tcp_pcb *pcb)$/;"	f
tcp_output_nagle	net/lwip/include/lwip/tcp.h	138;"	d
tcp_output_segment	net/lwip/core/tcp_out.c	/^tcp_output_segment(struct tcp_seg *seg, struct tcp_pcb *pcb)$/;"	f	file:
tcp_parseopt	net/lwip/core/tcp_in.c	/^tcp_parseopt(struct tcp_pcb *pcb)$/;"	f	file:
tcp_pcb	net/lwip/include/lwip/tcp.h	/^struct tcp_pcb {$/;"	s
tcp_pcb_listen	net/lwip/include/lwip/tcp.h	/^struct tcp_pcb_listen {  $/;"	s
tcp_pcb_purge	net/lwip/core/tcp.c	/^tcp_pcb_purge(struct tcp_pcb *pcb)$/;"	f
tcp_pcb_remove	net/lwip/core/tcp.c	/^tcp_pcb_remove(struct tcp_pcb **pcblist, struct tcp_pcb *pcb)$/;"	f
tcp_pcbs_sane	net/lwip/core/tcp.c	/^tcp_pcbs_sane(void)$/;"	f
tcp_pcbs_sane	net/lwip/include/lwip/tcp.h	554;"	d
tcp_persist_backoff	net/lwip/core/tcp.c	/^const u8_t tcp_persist_backoff[7] = { 3, 6, 12, 24, 48, 96, 120 };$/;"	v
tcp_poll	net/lwip/core/tcp.c	/^tcp_poll(struct tcp_pcb *pcb,$/;"	f
tcp_process	net/lwip/core/tcp_in.c	/^tcp_process(struct tcp_pcb *pcb)$/;"	f	file:
tcp_receive	net/lwip/core/tcp_in.c	/^tcp_receive(struct tcp_pcb *pcb)$/;"	f	file:
tcp_recv	net/lwip/core/tcp.c	/^tcp_recv(struct tcp_pcb *pcb,$/;"	f
tcp_recv_null	net/lwip/core/tcp.c	/^tcp_recv_null(void *arg, struct tcp_pcb *pcb, struct pbuf *p, err_t err)$/;"	f	file:
tcp_recved	net/lwip/core/tcp.c	/^tcp_recved(struct tcp_pcb *pcb, u16_t len)$/;"	f
tcp_rexmit	net/lwip/core/tcp_out.c	/^tcp_rexmit(struct tcp_pcb *pcb)$/;"	f
tcp_rexmit_rto	net/lwip/core/tcp_out.c	/^tcp_rexmit_rto(struct tcp_pcb *pcb)$/;"	f
tcp_rst	net/lwip/core/tcp_out.c	/^tcp_rst(u32_t seqno, u32_t ackno,$/;"	f
tcp_scalar	net/lwip/core/snmp/mib2.c	/^const mib_scalar_node tcp_scalar = {$/;"	v
tcp_seg	net/lwip/include/lwip/tcp.h	/^struct tcp_seg {$/;"	s
tcp_seg_copy	net/lwip/core/tcp.c	/^tcp_seg_copy(struct tcp_seg *seg)$/;"	f
tcp_seg_free	net/lwip/core/tcp.c	/^tcp_seg_free(struct tcp_seg *seg)$/;"	f
tcp_segs_free	net/lwip/core/tcp.c	/^tcp_segs_free(struct tcp_seg *seg)$/;"	f
tcp_send_ctrl	net/lwip/core/tcp_out.c	/^tcp_send_ctrl(struct tcp_pcb *pcb, u8_t flags)$/;"	f
tcp_sent	net/lwip/core/tcp.c	/^tcp_sent(struct tcp_pcb *pcb,$/;"	f
tcp_seq	net/lwip/netif/ppp/vjbsdhdr.h	/^typedef u32_t tcp_seq;$/;"	t
tcp_setprio	net/lwip/core/tcp.c	/^tcp_setprio(struct tcp_pcb *pcb, u8_t prio)$/;"	f
tcp_slowtmr	net/lwip/core/tcp.c	/^tcp_slowtmr(void)$/;"	f
tcp_sndbuf	net/lwip/include/lwip/tcp.h	80;"	d
tcp_state	net/lwip/include/lwip/tcp.h	/^enum tcp_state {$/;"	g
tcp_ticks	net/lwip/core/tcp.c	/^u32_t tcp_ticks;$/;"	v
tcp_timer	net/lwip/core/tcp.c	/^static u8_t tcp_timer;$/;"	v	file:
tcp_timer_needed	net/lwip/api/tcpip.c	/^tcp_timer_needed(void)$/;"	f
tcp_timer_needed	net/lwip/include/lwip/tcp.h	558;"	d
tcp_timewait_input	net/lwip/core/tcp_in.c	/^tcp_timewait_input(struct tcp_pcb *pcb)$/;"	f	file:
tcp_tmp_pcb	net/lwip/core/tcp.c	/^struct tcp_pcb *tcp_tmp_pcb;$/;"	v	typeref:struct:tcp_pcb
tcp_tmr	net/lwip/core/tcp.c	/^tcp_tmr(void)$/;"	f
tcp_tw_pcbs	net/lwip/core/tcp.c	/^struct tcp_pcb *tcp_tw_pcbs;$/;"	v	typeref:struct:tcp_pcb
tcp_tw_pcbs	obj/net/ns.asm	/^        tcp_tw_pcbs = pcb->next;$/;"	d
tcp_write	net/lwip/core/tcp_out.c	/^tcp_write(struct tcp_pcb *pcb, const void *data, u16_t len, u8_t apiflags)$/;"	f
tcp_zero_window_probe	net/lwip/core/tcp_out.c	/^tcp_zero_window_probe(struct tcp_pcb *pcb)$/;"	f
tcpactiveopens	net/lwip/core/snmp/mib2.c	/^static u32_t tcpactiveopens = 0,$/;"	v	file:
tcpattemptfails	net/lwip/core/snmp/mib2.c	/^             tcpattemptfails = 0,$/;"	v	file:
tcpconnentry	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node tcpconnentry = {$/;"	v	typeref:struct:mib_array_node
tcpconnentry_get_object_def	net/lwip/core/snmp/mib2.c	/^tcpconnentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
tcpconnentry_get_value	net/lwip/core/snmp/mib2.c	/^tcpconnentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
tcpconnentry_ids	net/lwip/core/snmp/mib2.c	/^const s32_t tcpconnentry_ids[5] = { 1, 2, 3, 4, 5 };$/;"	v
tcpconnentry_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const tcpconnentry_nodes[5] = {$/;"	v
tcpconntable	net/lwip/core/snmp/mib2.c	/^struct mib_ram_array_node tcpconntable = {$/;"	v	typeref:struct:mib_ram_array_node
tcpconntable_id	net/lwip/core/snmp/mib2.c	/^s32_t tcpconntable_id = 1;$/;"	v
tcpconntable_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* tcpconntable_node = (struct mib_node* const)&tcpconnentry;$/;"	v	typeref:struct:mib_node
tcpconntree_root	net/lwip/core/snmp/mib2.c	/^struct mib_list_rootnode tcpconntree_root = {$/;"	v	typeref:struct:mib_list_rootnode
tcpestabresets	net/lwip/core/snmp/mib2.c	/^             tcpestabresets = 0,$/;"	v	file:
tcphdr	net/lwip/core/tcp_in.c	/^static struct tcp_hdr *tcphdr;$/;"	v	typeref:struct:tcp_hdr	file:
tcphdr	net/lwip/include/lwip/tcp.h	/^  struct tcp_hdr *tcphdr;  \/* the TCP header *\/$/;"	m	struct:tcp_seg	typeref:struct:tcp_seg::tcp_hdr
tcphdr	net/lwip/netif/ppp/vjbsdhdr.h	/^struct tcphdr  $/;"	s
tcphdr	obj/net/ns.asm	/^    tcphdr = p->payload;$/;"	d
tcphdr	obj/net/ns.asm	/^  tcphdr = (struct tcp_hdr *)((u8_t *)p->payload + IPH_HL(iphdr) * 4);$/;"	d
tcphdr	obj/net/ns.asm	/^  tcphdr = p->payload;$/;"	d
tcpinerrs	net/lwip/core/snmp/mib2.c	/^             tcpinerrs = 0,$/;"	v	file:
tcpinsegs	net/lwip/core/snmp/mib2.c	/^             tcpinsegs = 0,$/;"	v	file:
tcpip_apimsg	net/lwip/api/tcpip.c	/^tcpip_apimsg(struct api_msg *apimsg)$/;"	f
tcpip_apimsg_lock	net/lwip/api/tcpip.c	/^tcpip_apimsg_lock(struct api_msg *apimsg)$/;"	f
tcpip_callback	net/lwip/include/lwip/tcpip.h	86;"	d
tcpip_callback_with_block	net/lwip/api/tcpip.c	/^tcpip_callback_with_block(void (*f)(void *ctx), void *ctx, u8_t block)$/;"	f
tcpip_init	net/lwip/api/tcpip.c	/^tcpip_init(void (* initfunc)(void *), void *arg)$/;"	f
tcpip_init_done	net/lwip/api/tcpip.c	/^static void (* tcpip_init_done)(void *arg);$/;"	v	file:
tcpip_init_done	net/serv.c	/^tcpip_init_done(void *arg)$/;"	f	file:
tcpip_init_done	obj/net/ns.asm	/^  tcpip_init_done = initfunc;$/;"	d
tcpip_init_done_arg	net/lwip/api/tcpip.c	/^static void *tcpip_init_done_arg;$/;"	v	file:
tcpip_init_done_arg	obj/net/ns.asm	/^  tcpip_init_done_arg = arg;$/;"	d
tcpip_input	net/lwip/api/tcpip.c	/^tcpip_input(struct pbuf *p, struct netif *inp)$/;"	f
tcpip_msg	net/lwip/include/lwip/tcpip.h	/^struct tcpip_msg {$/;"	s
tcpip_msg_type	net/lwip/include/lwip/tcpip.h	/^enum tcpip_msg_type {$/;"	g
tcpip_netifapi	net/lwip/api/tcpip.c	/^tcpip_netifapi(struct netifapi_msg* netifapimsg)$/;"	f
tcpip_netifapi_lock	net/lwip/api/tcpip.c	/^tcpip_netifapi_lock(struct netifapi_msg* netifapimsg)$/;"	f
tcpip_tcp_timer	net/lwip/api/tcpip.c	/^tcpip_tcp_timer(void *arg)$/;"	f	file:
tcpip_tcp_timer_active	net/lwip/api/tcpip.c	/^static int tcpip_tcp_timer_active;$/;"	v	file:
tcpip_tcp_timer_active	obj/net/ns.asm	/^    tcpip_tcp_timer_active = 0;$/;"	d
tcpip_tcp_timer_active	obj/net/ns.asm	/^    tcpip_tcp_timer_active = 1;$/;"	d
tcpip_thread	net/lwip/api/tcpip.c	/^tcpip_thread(void *arg)$/;"	f	file:
tcpip_timeout	net/lwip/api/tcpip.c	/^tcpip_timeout(u32_t msecs, sys_timeout_handler h, void *arg)$/;"	f
tcpip_untimeout	net/lwip/include/lwip/tcpip.h	93;"	d
tcplen	net/lwip/core/tcp_in.c	/^static u16_t tcplen;$/;"	v	file:
tcplen	obj/net/ns.asm	/^        tcplen = TCP_TCPLEN(&inseg);$/;"	d
tcplen	obj/net/ns.asm	/^  tcplen = p->tot_len + ((flags & TCP_FIN || flags & TCP_SYN)? 1: 0);$/;"	d
tcpoutrsts	net/lwip/core/snmp/mib2.c	/^             tcpoutrsts = 0;$/;"	v	file:
tcpoutsegs	net/lwip/core/snmp/mib2.c	/^             tcpoutsegs = 0,$/;"	v	file:
tcppassiveopens	net/lwip/core/snmp/mib2.c	/^             tcppassiveopens = 0,$/;"	v	file:
tcpretranssegs	net/lwip/core/snmp/mib2.c	/^             tcpretranssegs = 0,$/;"	v	file:
tehdr	obj/net/ns.asm	/^  tehdr = q->payload;$/;"	d
term_reason	net/lwip/netif/ppp/fsm.h	/^  char* term_reason;               \/* Reason for closing protocol *\/$/;"	m	struct:fsm
term_reason_len	net/lwip/netif/ppp/fsm.h	/^  int term_reason_len;             \/* Length of term_reason *\/$/;"	m	struct:fsm
test	gradelib.py	/^def test(points, title=None, parent=None):$/;"	f
test	kern/e1000.c	3;"	d	file:
test_backtrace	init.s	/^test_backtrace:$/;"	l
test_backtrace_arguments	grade-lab1	/^def test_backtrace_arguments():$/;"	f
test_backtrace_count	grade-lab1	/^def test_backtrace_count():$/;"	f
test_backtrace_lines	grade-lab1	/^def test_backtrace_lines():$/;"	f
test_backtrace_symbols	grade-lab1	/^def test_backtrace_symbols():$/;"	f
test_badsegment	grade-lab3	/^def test_badsegment():$/;"	f
test_breakpoint	grade-lab3	/^def test_breakpoint():$/;"	f
test_buggyhello	grade-lab3	/^def test_buggyhello():$/;"	f
test_buggyhello2	grade-lab3	/^def test_buggyhello2():$/;"	f
test_check_kern_pgdir	grade-lab2	/^def test_check_kern_pgdir():$/;"	f
test_check_page	grade-lab2	/^def test_check_page():$/;"	f
test_check_page_alloc	grade-lab2	/^def test_check_page_alloc():$/;"	f
test_check_page_installed_pgdir	grade-lab2	/^def test_check_page_installed_pgdir():$/;"	f
test_divzero	grade-lab3	/^def test_divzero():$/;"	f
test_dumbfork	grade-lab4	/^def test_dumbfork():$/;"	f
test_echosrv	grade-lab6	/^def test_echosrv():$/;"	f
test_evilhello	grade-lab3	/^def test_evilhello():$/;"	f
test_faultalloc	grade-lab4	/^def test_faultalloc():$/;"	f
test_faultallocbad	grade-lab4	/^def test_faultallocbad():$/;"	f
test_faultbadhandler	grade-lab4	/^def test_faultbadhandler():$/;"	f
test_faultdie	grade-lab4	/^def test_faultdie():$/;"	f
test_faultevilhandler	grade-lab4	/^def test_faultevilhandler():$/;"	f
test_faultnostack	grade-lab4	/^def test_faultnostack():$/;"	f
test_faultread	grade-lab3	/^def test_faultread():$/;"	f
test_faultread	grade-lab4	/^def test_faultread():$/;"	f
test_faultreadkernel	grade-lab3	/^def test_faultreadkernel():$/;"	f
test_faultregs	grade-lab4	/^def test_faultregs():$/;"	f
test_faultwrite	grade-lab3	/^def test_faultwrite():$/;"	f
test_faultwrite	grade-lab4	/^def test_faultwrite():$/;"	f
test_faultwritekernel	grade-lab3	/^def test_faultwritekernel():$/;"	f
test_fd_share	grade-lab5	/^def test_fd_share():$/;"	f
test_forktree	grade-lab4	/^def test_forktree():$/;"	f
test_fs	grade-lab5	/^def test_fs():$/;"	f
test_hello	grade-lab3	/^def test_hello():$/;"	f
test_httpd	grade-lab6	/^def test_httpd():$/;"	f
test_httpd_test	grade-lab6	/^    def test_httpd_test():$/;"	f	function:mk_test_httpd
test_icode	grade-lab5	/^def test_icode():$/;"	f
test_jos	grade-lab1	/^def test_jos():$/;"	f
test_jos	grade-lab2	/^def test_jos():$/;"	f
test_pci_attach	grade-lab6	/^def test_pci_attach():$/;"	f
test_pingpong	grade-lab4	/^def test_pingpong():$/;"	f
test_primes	grade-lab4	/^def test_primes():$/;"	f
test_primespipe	grade-lab5	/^def test_primespipe():$/;"	f
test_printf	grade-lab1	/^def test_printf():$/;"	f
test_pte_share	grade-lab5	/^def test_pte_share():$/;"	f
test_sendpage	grade-lab4	/^def test_sendpage():$/;"	f
test_softint	grade-lab3	/^def test_softint():$/;"	f
test_spawn	grade-lab5	/^def test_spawn():$/;"	f
test_spin	grade-lab4	/^def test_spin():$/;"	f
test_stresssched	grade-lab4	/^def test_stresssched():$/;"	f
test_testbss	grade-lab3	/^def test_testbss():$/;"	f
test_testfile	grade-lab5	/^def test_testfile():$/;"	f
test_testinput_100	grade-lab6	/^def test_testinput_100():$/;"	f
test_testinput_5	grade-lab6	/^def test_testinput_5():$/;"	f
test_testinput_helper	grade-lab6	/^def test_testinput_helper(count):$/;"	f
test_testoutput_100	grade-lab6	/^def test_testoutput_100():$/;"	f
test_testoutput_5	grade-lab6	/^def test_testoutput_5():$/;"	f
test_testoutput_helper	grade-lab6	/^def test_testoutput_helper(count):$/;"	f
test_testshell	grade-lab5	/^def test_testshell():$/;"	f
test_testtime	grade-lab6	/^def test_testtime():$/;"	f
tf	obj/kern/kernel.asm	/^		tf = &curenv->env_tf;$/;"	d
tf_cs	inc/trap.h	/^	uint16_t tf_cs;$/;"	m	struct:Trapframe
tf_ds	inc/trap.h	/^	uint16_t tf_ds;$/;"	m	struct:Trapframe
tf_eflags	inc/trap.h	/^	uint32_t tf_eflags;$/;"	m	struct:Trapframe
tf_eip	inc/trap.h	/^	uintptr_t tf_eip;$/;"	m	struct:Trapframe
tf_err	inc/trap.h	/^	uint32_t tf_err;$/;"	m	struct:Trapframe
tf_es	inc/trap.h	/^	uint16_t tf_es;$/;"	m	struct:Trapframe
tf_esp	inc/trap.h	/^	uintptr_t tf_esp;$/;"	m	struct:Trapframe
tf_padding1	inc/trap.h	/^	uint16_t tf_padding1;$/;"	m	struct:Trapframe
tf_padding2	inc/trap.h	/^	uint16_t tf_padding2;$/;"	m	struct:Trapframe
tf_padding3	inc/trap.h	/^	uint16_t tf_padding3;$/;"	m	struct:Trapframe
tf_padding4	inc/trap.h	/^	uint16_t tf_padding4;$/;"	m	struct:Trapframe
tf_regs	inc/trap.h	/^	struct PushRegs tf_regs;$/;"	m	struct:Trapframe	typeref:struct:Trapframe::PushRegs
tf_ss	inc/trap.h	/^	uint16_t tf_ss;$/;"	m	struct:Trapframe
tf_trapno	inc/trap.h	/^	uint32_t tf_trapno;$/;"	m	struct:Trapframe
th_ack	net/lwip/netif/ppp/vjbsdhdr.h	/^  tcp_seq  th_ack;      \/* acknowledgement number *\/$/;"	m	struct:tcphdr
th_dport	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short  th_dport;    \/* destination port *\/$/;"	m	struct:tcphdr
th_flags	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char   th_flags;$/;"	m	struct:tcphdr
th_off	net/lwip/netif/ppp/vjbsdhdr.h	/^           th_off:4;    \/* data offset *\/$/;"	m	struct:tcphdr
th_off	net/lwip/netif/ppp/vjbsdhdr.h	/^  unsigned th_off:4,    \/* data offset *\/$/;"	m	struct:tcphdr
th_seq	net/lwip/netif/ppp/vjbsdhdr.h	/^  tcp_seq  th_seq;      \/* sequence number *\/$/;"	m	struct:tcphdr
th_sport	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short  th_sport;    \/* source port *\/$/;"	m	struct:tcphdr
th_sum	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short  th_sum;      \/* checksum *\/$/;"	m	struct:tcphdr
th_urp	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short  th_urp;      \/* urgent pointer *\/$/;"	m	struct:tcphdr
th_win	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short  th_win;      \/* window *\/$/;"	m	struct:tcphdr
th_x2	net/lwip/netif/ppp/vjbsdhdr.h	/^           th_x2 :4;    \/* (unused) *\/$/;"	m	struct:tcphdr
th_x2	net/lwip/netif/ppp/vjbsdhdr.h	/^  unsigned th_x2 :4,    \/* (unused) *\/$/;"	m	struct:tcphdr
th_x2_off	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char   th_x2_off;$/;"	m	struct:tcphdr
thiscpu	kern/cpu.h	38;"	d
thisenv	lib/libmain.c	/^const volatile struct Env *thisenv;$/;"	v	typeref:struct:Env
thisenv	obj/fs/fs.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/net/ns.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/net/ns.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/net/testinput.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/net/testinput.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/net/testoutput.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/net/testoutput.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/badsegment.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/breakpoint.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/buggyhello.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/buggyhello2.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/cat.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/divzero.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/dumbfork.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/dumbfork.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/echo.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/echosrv.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/echotest.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/evilhello.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/fairness.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultalloc.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultallocbad.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultbadhandler.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultdie.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultevilhandler.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultnostack.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultread.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultreadkernel.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultregs.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultwrite.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultwritekernel.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/forktree.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/forktree.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/hello.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/httpd.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/icode.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/idle.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/init.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/ls.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/lsfd.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/num.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/pingpong.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpong.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/pingpongs.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpongs.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/primes.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/primes.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/primespipe.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/primespipe.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/sendpage.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/sendpage.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/sh.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/sh.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/softint.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/spawnhello.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/spin.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/spin.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/stresssched.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/stresssched.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/testbss.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/testfdsharing.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testfdsharing.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/testfile.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/testkbd.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/testpipe.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpipe.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/testpiperace.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpiperace.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/testpiperace2.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpiperace2.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/testpteshare.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpteshare.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/testshell.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testshell.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/testtime.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/yield.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thl	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_trap_header_lengths thl;$/;"	m	struct:snmp_msg_trap	typeref:struct:snmp_msg_trap::snmp_trap_header_lengths
thread_clean	net/lwip/jos/arch/thread.c	/^thread_clean(struct thread_context *tc) {$/;"	f	file:
thread_context	net/lwip/jos/arch/threadq.h	/^struct thread_context {$/;"	s
thread_create	net/lwip/jos/arch/thread.c	/^thread_create(thread_id_t *tid, const char *name, $/;"	f
thread_entry	net/lwip/jos/arch/thread.c	/^thread_entry(void) {$/;"	f	file:
thread_halt	net/lwip/jos/arch/thread.c	/^thread_halt() {$/;"	f
thread_hash_size	net/lwip/jos/arch/sys_arch.c	/^enum { thread_hash_size = 257 };$/;"	e	enum:__anon10	file:
thread_id	net/lwip/jos/arch/thread.c	/^thread_id(void) {$/;"	f
thread_id_t	net/lwip/jos/arch/thread.h	/^typedef uint32_t thread_id_t;$/;"	t
thread_init	net/lwip/jos/arch/thread.c	/^thread_init(void) {$/;"	f
thread_onhalt	net/lwip/jos/arch/thread.c	/^thread_onhalt(void (*fun)(thread_id_t)) {$/;"	f
thread_queue	net/lwip/jos/arch/thread.c	/^static struct thread_queue thread_queue;$/;"	v	typeref:struct:thread_queue	file:
thread_queue	net/lwip/jos/arch/threadq.h	/^struct thread_queue$/;"	s
thread_set_name	net/lwip/jos/arch/thread.c	/^thread_set_name(struct thread_context *tc, const char *name)$/;"	f	file:
thread_wait	net/lwip/jos/arch/thread.c	/^thread_wait(volatile uint32_t *addr, uint32_t val, uint32_t msec) {$/;"	f
thread_wakeup	net/lwip/jos/arch/thread.c	/^thread_wakeup(volatile uint32_t *addr) {$/;"	f
thread_wakeups_pending	net/lwip/jos/arch/thread.c	/^thread_wakeups_pending(void)$/;"	f
thread_yield	net/lwip/jos/arch/thread.c	/^thread_yield(void) {$/;"	f
threadq_init	net/lwip/jos/arch/threadq.h	/^threadq_init(struct thread_queue *tq)$/;"	f
threadq_pop	net/lwip/jos/arch/threadq.h	/^threadq_pop(struct thread_queue *tq)$/;"	f
threadq_push	net/lwip/jos/arch/threadq.h	/^threadq_push(struct thread_queue *tq, struct thread_context *tc)$/;"	f
ticks	kern/time.c	/^static unsigned int ticks;$/;"	v	file:
ticks	obj/kern/kernel.asm	/^	ticks = 0;$/;"	d
tid	net/lwip/jos/arch/sys_arch.c	/^    thread_id_t tid;$/;"	m	struct:sys_thread	file:
time	net/lwip/include/lwip/sys.h	/^  u32_t time;$/;"	m	struct:sys_timeo
time_init	kern/time.c	/^time_init(void)$/;"	f
time_msec	kern/time.c	/^time_msec(void)$/;"	f
time_needed	obj/net/ns.asm	/^      time_needed = SYS_ARCH_TIMEOUT;$/;"	d
time_needed	obj/net/ns.asm	/^      time_needed = sys_arch_mbox_fetch(mbox, msg, timeouts->next->time);$/;"	d
time_needed	obj/net/ns.asm	/^      time_needed = sys_arch_sem_wait(sem, timeouts->next->time);$/;"	d
time_needed	obj/net/ns.asm	/^    time_needed = sys_arch_mbox_fetch(mbox, msg, 0);$/;"	d
time_tick	kern/time.c	/^time_tick(void)$/;"	f
timeflag	net/lwip/core/sys.c	/^  s16_t timeflag;$/;"	m	struct:sswt_cb	file:
timeout	obj/net/ns.asm	/^      timeout = 0xffff;$/;"	d
timeout	obj/net/ns.asm	/^    timeout = (dhcp->offered_t1_renew + DHCP_COARSE_TIMER_SECS \/ 2) \/ DHCP_COARSE_TIMER_SECS;$/;"	d
timeout	obj/net/ns.asm	/^    timeout = (dhcp->offered_t2_rebind + DHCP_COARSE_TIMER_SECS \/ 2) \/ DHCP_COARSE_TIMER_SECS;$/;"	d
timeout	obj/net/ns.asm	/^  timeout = memp_malloc(MEMP_SYS_TIMEOUT);$/;"	d
timeout_cleanup	net/lwip/jos/arch/sys_arch.c	/^timeout_cleanup(thread_id_t tid)$/;"	f	file:
timeouts	obj/net/ns.asm	/^  timeouts = sys_arch_timeouts();$/;"	d
timeouttime	net/lwip/netif/ppp/chap.h	/^  int timeouttime;                        \/* Timeout time in seconds *\/$/;"	m	struct:chap_state
timeouttime	net/lwip/netif/ppp/fsm.h	/^  int timeouttime;                 \/* Timeout time in milliseconds *\/$/;"	m	struct:fsm
timer	net/lwip/include/ipv4/lwip/igmp.h	/^  u16_t              timer;$/;"	m	struct:igmp_group
timer	net/lwip/include/ipv4/lwip/ip_frag.h	/^  u8_t timer;$/;"	m	struct:ip_reassdata
timer	net/timer.c	/^timer(envid_t ns_envid, uint32_t initial_to) {$/;"	f
timer_envid	net/serv.c	/^static envid_t timer_envid;$/;"	v	file:
timer_envid	obj/net/ns.asm	/^	timer_envid = fork();$/;"	d
timer_thread	net/serv.c	/^struct timer_thread {$/;"	s	file:
timeval	net/lwip/include/lwip/sockets.h	/^struct timeval {$/;"	s
tlb_invalidate	kern/pmap.c	/^tlb_invalidate(pde_t *pgdir, void *va)$/;"	f
tlbflush	inc/x86.h	/^tlbflush(void)$/;"	f
tmain	net/serv.c	/^tmain(uint32_t arg) {$/;"	f	file:
tmo	net/lwip/include/lwip/tcpip.h	/^    } tmo;$/;"	m	union:tcpip_msg::__anon17	typeref:struct:tcpip_msg::__anon17::__anon20
tmo	net/lwip/jos/arch/sys_arch.c	/^    struct sys_timeouts tmo;$/;"	m	struct:sys_thread	typeref:struct:sys_thread::sys_timeouts	file:
tmp	obj/net/ns.asm	/^      tmp = r;$/;"	d
tmp	obj/net/ns.asm	/^      tmp = tmp | IP_MF;$/;"	d
tmp	obj/net/ns.asm	/^    tmp = omf | (IP_OFFMASK & (ofo));$/;"	d
tmp	obj/net/ns.asm	/^  tmp = ntohs(IPH_OFFSET(iphdr));$/;"	d
tmptimeout	obj/net/ns.asm	/^      tmptimeout = timeouts->next;$/;"	d
tmr	net/lwip/core/dns.c	/^  u8_t  tmr;$/;"	m	struct:dns_table_entry	file:
tmr	net/lwip/include/lwip/tcp.h	/^  u32_t tmr;$/;"	m	struct:tcp_pcb
to	obj/net/ns.asm	/^			to = ipc_recv((int32_t *) &whom, 0, 0);$/;"	d
to	obj/net/ns.asm	/^	to = TIMER_INTERVAL - (now - start);$/;"	d
to	obj/net/testinput.asm	/^			to = ipc_recv((int32_t *) &whom, 0, 0);$/;"	d
to	obj/net/testoutput.asm	/^			to = ipc_recv((int32_t *) &whom, 0, 0);$/;"	d
togglecode	kern/console.c	/^static uint8_t togglecode[256] =$/;"	v	file:
top	obj/user/primes.asm	/^top:$/;"	l
top	obj/user/primespipe.asm	/^top:$/;"	l
tot_len	net/lwip/include/lwip/pbuf.h	/^  u16_t tot_len;$/;"	m	struct:pbuf
tq_first	net/lwip/jos/arch/threadq.h	/^    struct thread_context *tq_first;$/;"	m	struct:thread_queue	typeref:struct:thread_queue::thread_context
tq_last	net/lwip/jos/arch/threadq.h	/^    struct thread_context *tq_last;$/;"	m	struct:thread_queue	typeref:struct:thread_queue::thread_context
transmit_packet	kern/e1000.c	/^transmit_packet(uint32_t pa, uint32_t len)$/;"	f
trap	kern/trap.c	/^trap(struct Trapframe *tf)$/;"	f
trap_dispatch	kern/trap.c	/^trap_dispatch(struct Trapframe *tf)$/;"	f	file:
trap_dst	net/lwip/core/snmp/msg_out.c	/^struct snmp_trap_dst trap_dst[SNMP_TRAP_DESTINATIONS];$/;"	v	typeref:struct:snmp_trap_dst
trap_init	kern/trap.c	/^trap_init(void)$/;"	f
trap_init_percpu	kern/trap.c	/^trap_init_percpu(void)$/;"	f
trap_msg	net/lwip/core/snmp/msg_out.c	/^struct snmp_msg_trap trap_msg;$/;"	v	typeref:struct:snmp_msg_trap
trapname	kern/trap.c	/^static const char *trapname(int trapno)$/;"	f	file:
tree_levels	net/lwip/include/lwip/snmp_structs.h	/^  u8_t tree_levels;$/;"	m	struct:mib_external_node
tried_llipaddr	net/lwip/include/ipv4/lwip/autoip.h	/^  u8_t tried_llipaddr;      \/* total number of probed\/used Link Local IP-Addresses *\/$/;"	m	struct:autoip
tries	net/lwip/include/lwip/dhcp.h	/^  u8_t tries;$/;"	m	struct:dhcp
true	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon46
try_open	obj/fs/fs.asm	/^try_open:$/;"	l
ts	kern/trap.c	/^static struct Taskstate ts;$/;"	v	typeref:struct:Taskstate	file:
ts	net/lwip/include/lwip/netif.h	/^  u32_t ts;$/;"	m	struct:netif
ts	net/lwip/include/lwip/snmp_msg.h	/^  u32_t ts;$/;"	m	struct:snmp_msg_trap
ts_cr3	inc/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:Taskstate
ts_cs	inc/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:Taskstate
ts_ds	inc/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:Taskstate
ts_eax	inc/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:Taskstate
ts_ebp	inc/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:Taskstate
ts_ebx	inc/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:Taskstate
ts_ecx	inc/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:Taskstate
ts_edi	inc/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:Taskstate
ts_edx	inc/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:Taskstate
ts_eflags	inc/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:Taskstate
ts_eip	inc/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:Taskstate
ts_es	inc/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:Taskstate
ts_esi	inc/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:Taskstate
ts_esp	inc/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:Taskstate
ts_esp0	inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:Taskstate
ts_esp1	inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:Taskstate
ts_esp2	inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:Taskstate
ts_fs	inc/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:Taskstate
ts_gs	inc/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:Taskstate
ts_iomb	inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:Taskstate
ts_ldt	inc/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:Taskstate
ts_link	inc/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:Taskstate
ts_padding1	inc/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:Taskstate
ts_padding10	inc/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:Taskstate
ts_padding2	inc/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:Taskstate
ts_padding3	inc/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:Taskstate
ts_padding4	inc/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:Taskstate
ts_padding5	inc/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:Taskstate
ts_padding6	inc/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:Taskstate
ts_padding7	inc/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:Taskstate
ts_padding8	inc/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:Taskstate
ts_padding9	inc/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:Taskstate
ts_ss	inc/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:Taskstate
ts_ss0	inc/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:Taskstate
ts_ss1	inc/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:Taskstate
ts_ss2	inc/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:Taskstate
ts_t	inc/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:Taskstate
tslen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t tslen;$/;"	m	struct:snmp_trap_header_lengths
tslenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t tslenlen;$/;"	m	struct:snmp_trap_header_lengths
tsmitqueue	kern/e1000.c	/^struct e1000_tx_desc *tsmitqueue;$/;"	v	typeref:struct:e1000_tx_desc
tsmitqueue	obj/kern/kernel.asm	/^	tsmitqueue = (struct e1000_tx_desc *)page2kva(pp);$/;"	d
tstate	net/lwip/netif/ppp/vj.h	/^  struct cstate tstate[MAX_SLOTS]; \/* xmit connection states *\/$/;"	m	struct:vjcompress	typeref:struct:vjcompress::cstate
ttl	net/lwip/core/dns.c	/^  u32_t ttl;$/;"	m	struct:dns_answer	file:
ttl	net/lwip/core/dns.c	/^  u32_t ttl;$/;"	m	struct:dns_table_entry	file:
ttw	net/lwip/include/ipv4/lwip/autoip.h	/^  u16_t ttw;                \/* ticks to wait, tick is AUTOIP_TMR_INTERVAL long *\/$/;"	m	struct:autoip
tv_sec	net/lwip/include/lwip/sockets.h	/^  long    tv_sec;         \/* seconds *\/$/;"	m	struct:timeval
tv_usec	net/lwip/include/lwip/sockets.h	/^  long    tv_usec;        \/* and microseconds *\/$/;"	m	struct:timeval
type	inc/partition.h	/^	uint8_t type;$/;"	m	struct:Partitiondesc
type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ MP system config type$/;"	m	struct:mp	file:
type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ entry type (0)$/;"	m	struct:mpproc	file:
type	net/lwip/core/dns.c	/^  u16_t type;$/;"	m	struct:dns_answer	file:
type	net/lwip/core/dns.c	/^  u16_t type;$/;"	m	struct:dns_query	file:
type	net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t type;$/;"	m	struct:icmp_dur_hdr
type	net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t type;$/;"	m	struct:icmp_echo_hdr
type	net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t type;$/;"	m	struct:icmp_te_hdr
type	net/lwip/include/lwip/api.h	/^  enum netconn_type type;$/;"	m	struct:netconn	typeref:enum:netconn::netconn_type
type	net/lwip/include/lwip/pbuf.h	/^  u8_t \/*pbuf_type*\/ type;$/;"	m	struct:pbuf
type	net/lwip/include/lwip/tcpip.h	/^  enum tcpip_msg_type type;$/;"	m	struct:tcpip_msg	typeref:enum:tcpip_msg::tcpip_msg_type
type	obj/net/ns.asm	/^      type = p->type;$/;"	d
type	obj/net/ns.asm	/^  type = *((u8_t *)p->payload);$/;"	d
type	obj/net/ns.asm	/^  type = p->type;$/;"	d
u16_t	net/lwip/jos/arch/cc.h	/^typedef uint16_t u16_t;$/;"	t
u16_t	obj/net/ns.asm	/^u16_t$/;"	l
u16_t	obj/net/testinput.asm	/^u16_t$/;"	l
u16_t	obj/user/echosrv.asm	/^u16_t$/;"	l
u16_t	obj/user/echotest.asm	/^u16_t$/;"	l
u16_t	obj/user/httpd.asm	/^u16_t$/;"	l
u32_t	net/lwip/jos/arch/cc.h	/^typedef uint32_t u32_t;$/;"	t
u32_t	obj/net/ns.asm	/^u32_t $/;"	l
u32_t	obj/net/ns.asm	/^u32_t$/;"	l
u32_t	obj/net/testinput.asm	/^u32_t$/;"	l
u32_t	obj/user/echosrv.asm	/^u32_t$/;"	l
u32_t	obj/user/echotest.asm	/^u32_t$/;"	l
u32_t	obj/user/httpd.asm	/^u32_t$/;"	l
u64_t	net/lwip/jos/arch/cc.h	/^typedef uint64_t u64_t;$/;"	t
u8_t	net/lwip/jos/arch/cc.h	/^typedef uint8_t u8_t;$/;"	t
u8_t	obj/net/ns.asm	/^u8_t ip_addr_isbroadcast(struct ip_addr *addr, struct netif *netif)$/;"	l
u8_t	obj/net/ns.asm	/^u8_t netif_is_up(struct netif *netif)$/;"	l
u8_t	obj/net/ns.asm	/^u8_t$/;"	l
u_char	net/lwip/netif/ppp/ppp.h	/^typedef unsigned char  u_char;$/;"	t
u_int	net/lwip/netif/ppp/ppp.h	/^typedef unsigned int   u_int;$/;"	t
u_long	net/lwip/netif/ppp/ppp.h	/^typedef unsigned long  u_long;$/;"	t
u_short	net/lwip/netif/ppp/ppp.h	/^typedef unsigned short u_short;$/;"	t
udp	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node udp = {$/;"	v	typeref:struct:mib_array_node
udp	net/lwip/include/lwip/api.h	/^    struct udp_pcb *udp;$/;"	m	union:netconn::__anon21	typeref:struct:netconn::__anon21::udp_pcb
udp	net/lwip/include/lwip/stats.h	/^  struct stats_proto udp;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
udp_bind	net/lwip/core/udp.c	/^udp_bind(struct udp_pcb *pcb, struct ip_addr *ipaddr, u16_t port)$/;"	f
udp_connect	net/lwip/core/udp.c	/^udp_connect(struct udp_pcb *pcb, struct ip_addr *ipaddr, u16_t port)$/;"	f
udp_debug_print	net/lwip/core/udp.c	/^udp_debug_print(struct udp_hdr *udphdr)$/;"	f
udp_debug_print	net/lwip/include/lwip/udp.h	141;"	d
udp_disconnect	net/lwip/core/udp.c	/^udp_disconnect(struct udp_pcb *pcb)$/;"	f
udp_flags	net/lwip/include/lwip/udp.h	130;"	d
udp_get_object_def	net/lwip/core/snmp/mib2.c	/^udp_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
udp_get_value	net/lwip/core/snmp/mib2.c	/^udp_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
udp_hdr	net/lwip/include/lwip/udp.h	/^struct udp_hdr {$/;"	s
udp_ids	net/lwip/core/snmp/mib2.c	/^const s32_t udp_ids[5] = { 1, 2, 3, 4, 5 };$/;"	v
udp_init	net/lwip/include/lwip/udp.h	136;"	d
udp_input	net/lwip/core/udp.c	/^udp_input(struct pbuf *p, struct netif *inp)$/;"	f
udp_new	net/lwip/core/udp.c	/^udp_new(void)$/;"	f
udp_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const udp_nodes[5] = {$/;"	v
udp_pcb	net/lwip/include/lwip/udp.h	/^struct udp_pcb {$/;"	s
udp_pcbs	net/lwip/core/udp.c	/^struct udp_pcb *udp_pcbs;$/;"	v	typeref:struct:udp_pcb
udp_pcbs	obj/net/ns.asm	/^          udp_pcbs = pcb;$/;"	d
udp_pcbs	obj/net/ns.asm	/^    udp_pcbs = pcb;$/;"	d
udp_pcbs	obj/net/ns.asm	/^    udp_pcbs = udp_pcbs->next;$/;"	d
udp_pcbs	obj/net/ns.asm	/^  udp_pcbs = pcb;$/;"	d
udp_recv	net/lwip/core/udp.c	/^udp_recv(struct udp_pcb *pcb,$/;"	f
udp_remove	net/lwip/core/udp.c	/^udp_remove(struct udp_pcb *pcb)$/;"	f
udp_root	net/lwip/core/snmp/mib2.c	/^struct mib_list_rootnode udp_root = {$/;"	v	typeref:struct:mib_list_rootnode
udp_scalar	net/lwip/core/snmp/mib2.c	/^const mib_scalar_node udp_scalar = {$/;"	v
udp_send	net/lwip/core/udp.c	/^udp_send(struct udp_pcb *pcb, struct pbuf *p)$/;"	f
udp_sendto	net/lwip/core/udp.c	/^udp_sendto(struct udp_pcb *pcb, struct pbuf *p,$/;"	f
udp_sendto_if	net/lwip/core/udp.c	/^udp_sendto_if(struct udp_pcb *pcb, struct pbuf *p,$/;"	f
udp_setflags	net/lwip/include/lwip/udp.h	131;"	d
udpentry	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node udpentry = {$/;"	v	typeref:struct:mib_array_node
udpentry_get_object_def	net/lwip/core/snmp/mib2.c	/^udpentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
udpentry_get_value	net/lwip/core/snmp/mib2.c	/^udpentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
udpentry_ids	net/lwip/core/snmp/mib2.c	/^const s32_t udpentry_ids[2] = { 1, 2 };$/;"	v
udpentry_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const udpentry_nodes[2] = {$/;"	v
udphdr	obj/net/ns.asm	/^  udphdr = (struct udp_hdr *)p->payload;$/;"	d
udphdr	obj/net/ns.asm	/^  udphdr = q->payload;$/;"	d
udpindatagrams	net/lwip/core/snmp/mib2.c	/^static u32_t udpindatagrams = 0,$/;"	v	file:
udpinerrors	net/lwip/core/snmp/mib2.c	/^             udpinerrors = 0,$/;"	v	file:
udpnoports	net/lwip/core/snmp/mib2.c	/^             udpnoports = 0,$/;"	v	file:
udpoutdatagrams	net/lwip/core/snmp/mib2.c	/^             udpoutdatagrams = 0;$/;"	v	file:
udptable	net/lwip/core/snmp/mib2.c	/^struct mib_ram_array_node udptable = {$/;"	v	typeref:struct:mib_ram_array_node
udptable_id	net/lwip/core/snmp/mib2.c	/^s32_t udptable_id = 1;$/;"	v
udptable_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* udptable_node = (struct mib_node* const)&udpentry;$/;"	v	typeref:struct:mib_node
uint16_t	inc/types.h	/^typedef unsigned short uint16_t;$/;"	t
uint32_t	inc/types.h	/^typedef unsigned int uint32_t;$/;"	t
uint32_t	obj/kern/kernel.asm	/^uint32_t receive_buf[PGSIZE\/sizeof(struct e1000_rx_desc)];$/;"	l
uint32_t	obj/net/ns.asm	/^uint32_t$/;"	l
uint32_t	obj/user/pingpongs.asm	/^uint32_t val;$/;"	l
uint32_t	obj/user/testbss.asm	/^uint32_t bigarray[ARRAYSIZE];$/;"	l
uint64_t	inc/types.h	/^typedef unsigned long long uint64_t;$/;"	t
uint8_t	inc/types.h	/^typedef unsigned char uint8_t;$/;"	t
uintptr_t	inc/types.h	/^typedef uint32_t uintptr_t;$/;"	t
umain	fs/serv.c	/^umain(int argc, char **argv)$/;"	f
umain	net/serv.c	/^umain(int argc, char **argv)$/;"	f
umain	net/testinput.c	/^umain(int argc, char **argv)$/;"	f
umain	net/testoutput.c	/^umain(int argc, char **argv)$/;"	f
umain	user/badsegment.c	/^umain(int argc, char **argv)$/;"	f
umain	user/breakpoint.c	/^umain(int argc, char **argv)$/;"	f
umain	user/buggyhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/buggyhello2.c	/^umain(int argc, char **argv)$/;"	f
umain	user/cat.c	/^umain(int argc, char **argv)$/;"	f
umain	user/divzero.c	/^umain(int argc, char **argv)$/;"	f
umain	user/dumbfork.c	/^umain(int argc, char **argv)$/;"	f
umain	user/echo.c	/^umain(int argc, char **argv)$/;"	f
umain	user/echosrv.c	/^umain(int argc, char **argv)$/;"	f
umain	user/echotest.c	/^void umain(int argc, char **argv)$/;"	f
umain	user/evilhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/fairness.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultalloc.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultallocbad.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultbadhandler.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultdie.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultevilhandler.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultnostack.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultread.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultreadkernel.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultregs.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultwrite.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultwritekernel.c	/^umain(int argc, char **argv)$/;"	f
umain	user/forktree.c	/^umain(int argc, char **argv)$/;"	f
umain	user/hello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/httpd.c	/^umain(int argc, char **argv)$/;"	f
umain	user/icode.c	/^umain(int argc, char **argv)$/;"	f
umain	user/idle.c	/^umain(int argc, char **argv)$/;"	f
umain	user/init.c	/^umain(int argc, char **argv)$/;"	f
umain	user/initsh.c	/^umain(int argc, char **argv)$/;"	f
umain	user/ls.c	/^umain(int argc, char **argv)$/;"	f
umain	user/lsfd.c	/^umain(int argc, char **argv)$/;"	f
umain	user/num.c	/^umain(int argc, char **argv)$/;"	f
umain	user/pingpong.c	/^umain(int argc, char **argv)$/;"	f
umain	user/pingpongs.c	/^umain(int argc, char **argv)$/;"	f
umain	user/primes.c	/^umain(int argc, char **argv)$/;"	f
umain	user/primespipe.c	/^umain(int argc, char **argv)$/;"	f
umain	user/sendpage.c	/^umain(int argc, char **argv)$/;"	f
umain	user/sh.c	/^umain(int argc, char **argv)$/;"	f
umain	user/softint.c	/^umain(int argc, char **argv)$/;"	f
umain	user/spawnhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/spawninit.c	/^umain(int argc, char **argv)$/;"	f
umain	user/spin.c	/^umain(int argc, char **argv)$/;"	f
umain	user/stresssched.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testbss.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testfdsharing.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testfile.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testkbd.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testmalloc.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testpipe.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testpiperace.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testpiperace2.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testptelibrary.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testpteshare.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testshell.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testtime.c	/^umain(int argc, char **argv)$/;"	f
umain	user/writemotd.c	/^umain(int argc, char **argv)$/;"	f
umain	user/yield.c	/^umain(int argc, char **argv)$/;"	f
unacked	net/lwip/include/lwip/tcp.h	/^  struct tcp_seg *unacked;  \/* Sent but unacknowledged segments. *\/$/;"	m	struct:tcp_pcb	typeref:struct:tcp_pcb::tcp_seg
uncon_pcb	obj/net/ns.asm	/^          uncon_pcb = pcb;$/;"	d
uncon_pcb	obj/net/ns.asm	/^    uncon_pcb = NULL;$/;"	d
unicast_query	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER unicast_query;    \/* *\/$/;"	m	struct:stats_igmp
union	obj/fs/fs.asm	/^union Fsipc *fsreq = (union Fsipc *)0x0ffff000;$/;"	l
union	obj/net/ns.asm	/^union Nsipc *ipcbuf;$/;"	l
union	obj/net/ns.asm	/^union Nsipc *nsoutreq = (union Nsipc *)0x0ffff000;$/;"	l
union	obj/net/testinput.asm	/^union Nsipc *ipcbuf;$/;"	l
union	obj/net/testinput.asm	/^union Nsipc *nsoutreq = (union Nsipc *)0x0ffff000;$/;"	l
union	obj/net/testoutput.asm	/^union Nsipc *ipcbuf;$/;"	l
union	obj/net/testoutput.asm	/^union Nsipc *nsoutreq = (union Nsipc *)0x0ffff000;$/;"	l
unit	net/lwip/netif/ppp/chap.h	/^  int unit;                               \/* Interface unit number *\/$/;"	m	struct:chap_state
unit	net/lwip/netif/ppp/fsm.h	/^  int unit;                        \/* Interface unit number *\/$/;"	m	struct:fsm
unit	net/lwip/netif/ppp/ppp.c	/^  int unit;$/;"	m	struct:pppInputHeader	file:
unlock_kernel	kern/spinlock.h	/^unlock_kernel(void)$/;"	f
unsent	net/lwip/include/lwip/tcp.h	/^  struct tcp_seg *unsent;   \/* Unsent (queued) segments. *\/$/;"	m	struct:tcp_pcb	typeref:struct:tcp_pcb::tcp_seg
unsigned	obj/fs/fs.asm	/^unsigned int$/;"	l
unsigned	obj/kern/kernel.asm	/^unsigned int$/;"	l
unsigned	obj/kern/kernel.asm	/^unsigned$/;"	l
unsigned	obj/net/ns.asm	/^unsigned int$/;"	l
unsigned	obj/net/testinput.asm	/^unsigned int$/;"	l
unsigned	obj/net/testoutput.asm	/^unsigned int$/;"	l
unsigned	obj/user/badsegment.asm	/^unsigned int$/;"	l
unsigned	obj/user/breakpoint.asm	/^unsigned int$/;"	l
unsigned	obj/user/buggyhello.asm	/^unsigned int$/;"	l
unsigned	obj/user/buggyhello2.asm	/^unsigned int$/;"	l
unsigned	obj/user/cat.asm	/^unsigned int$/;"	l
unsigned	obj/user/divzero.asm	/^unsigned int$/;"	l
unsigned	obj/user/dumbfork.asm	/^unsigned int$/;"	l
unsigned	obj/user/echo.asm	/^unsigned int$/;"	l
unsigned	obj/user/echosrv.asm	/^unsigned int$/;"	l
unsigned	obj/user/echotest.asm	/^unsigned int$/;"	l
unsigned	obj/user/evilhello.asm	/^unsigned int$/;"	l
unsigned	obj/user/fairness.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultalloc.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultallocbad.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultbadhandler.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultdie.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultevilhandler.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultnostack.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultread.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultreadkernel.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultregs.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultwrite.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultwritekernel.asm	/^unsigned int$/;"	l
unsigned	obj/user/forktree.asm	/^unsigned int$/;"	l
unsigned	obj/user/hello.asm	/^unsigned int$/;"	l
unsigned	obj/user/httpd.asm	/^unsigned int$/;"	l
unsigned	obj/user/icode.asm	/^unsigned int$/;"	l
unsigned	obj/user/idle.asm	/^unsigned int$/;"	l
unsigned	obj/user/init.asm	/^unsigned int$/;"	l
unsigned	obj/user/ls.asm	/^unsigned int$/;"	l
unsigned	obj/user/lsfd.asm	/^unsigned int$/;"	l
unsigned	obj/user/num.asm	/^unsigned int$/;"	l
unsigned	obj/user/pingpong.asm	/^unsigned int$/;"	l
unsigned	obj/user/pingpongs.asm	/^unsigned int$/;"	l
unsigned	obj/user/primes.asm	/^unsigned int$/;"	l
unsigned	obj/user/primes.asm	/^unsigned$/;"	l
unsigned	obj/user/primespipe.asm	/^unsigned int$/;"	l
unsigned	obj/user/primespipe.asm	/^unsigned$/;"	l
unsigned	obj/user/sendpage.asm	/^unsigned int$/;"	l
unsigned	obj/user/sh.asm	/^unsigned int$/;"	l
unsigned	obj/user/softint.asm	/^unsigned int$/;"	l
unsigned	obj/user/spawnhello.asm	/^unsigned int$/;"	l
unsigned	obj/user/spin.asm	/^unsigned int$/;"	l
unsigned	obj/user/stresssched.asm	/^unsigned int$/;"	l
unsigned	obj/user/testbss.asm	/^unsigned int$/;"	l
unsigned	obj/user/testfdsharing.asm	/^unsigned int$/;"	l
unsigned	obj/user/testfile.asm	/^unsigned int$/;"	l
unsigned	obj/user/testkbd.asm	/^unsigned int$/;"	l
unsigned	obj/user/testpipe.asm	/^unsigned int$/;"	l
unsigned	obj/user/testpiperace.asm	/^unsigned int$/;"	l
unsigned	obj/user/testpiperace2.asm	/^unsigned int$/;"	l
unsigned	obj/user/testpteshare.asm	/^unsigned int$/;"	l
unsigned	obj/user/testshell.asm	/^unsigned int$/;"	l
unsigned	obj/user/testtime.asm	/^unsigned int$/;"	l
unsigned	obj/user/yield.asm	/^unsigned int$/;"	l
unused	net/lwip/include/ipv6/lwip/icmp.h	/^  u32_t unused;$/;"	m	struct:icmp_dur_hdr
unused	net/lwip/include/ipv6/lwip/icmp.h	/^  u32_t unused;$/;"	m	struct:icmp_te_hdr
up	net/lwip/netif/ppp/fsm.h	/^  void (*up)(fsm*);                                 \/* Called when fsm reaches LS_OPENED state *\/$/;"	m	struct:fsm_callbacks
upap	net/lwip/netif/ppp/pap.c	/^upap_state upap[NUM_PPP]; \/* UPAP state; one for each unit *\/$/;"	v
upap_authpeer	net/lwip/netif/ppp/pap.c	/^upap_authpeer(int unit)$/;"	f
upap_authwithpeer	net/lwip/netif/ppp/pap.c	/^upap_authwithpeer(int unit, char *user, char *password)$/;"	f
upap_init	net/lwip/netif/ppp/pap.c	/^upap_init(int unit)$/;"	f	file:
upap_input	net/lwip/netif/ppp/pap.c	/^upap_input(int unit, u_char *inpacket, int l)$/;"	f	file:
upap_lowerdown	net/lwip/netif/ppp/pap.c	/^upap_lowerdown(int unit)$/;"	f	file:
upap_lowerup	net/lwip/netif/ppp/pap.c	/^upap_lowerup(int unit)$/;"	f	file:
upap_protrej	net/lwip/netif/ppp/pap.c	/^upap_protrej(int unit)$/;"	f	file:
upap_rauthack	net/lwip/netif/ppp/pap.c	/^upap_rauthack(upap_state *u, u_char *inp, int id, int len)$/;"	f	file:
upap_rauthnak	net/lwip/netif/ppp/pap.c	/^upap_rauthnak(upap_state *u, u_char *inp, int id, int len)$/;"	f	file:
upap_rauthreq	net/lwip/netif/ppp/pap.c	/^upap_rauthreq(upap_state *u, u_char *inp, int id, int len)$/;"	f	file:
upap_reqtimeout	net/lwip/netif/ppp/pap.c	/^upap_reqtimeout(void *arg)$/;"	f	file:
upap_sauthreq	net/lwip/netif/ppp/pap.c	/^upap_sauthreq(upap_state *u)$/;"	f	file:
upap_setloginpasswd	net/lwip/netif/ppp/pap.c	/^upap_setloginpasswd(int unit, const char *luser, const char *lpassword)$/;"	f
upap_sresp	net/lwip/netif/ppp/pap.c	/^upap_sresp(upap_state *u, u_char code, u_char id, char *msg, int msglen)$/;"	f	file:
upap_state	net/lwip/netif/ppp/pap.h	/^typedef struct upap_state {$/;"	s
upap_state	net/lwip/netif/ppp/pap.h	/^} upap_state;$/;"	t	typeref:struct:upap_state
upap_timeout	net/lwip/netif/ppp/pap.c	/^upap_timeout(void *arg)$/;"	f	file:
update_arp_entry	net/lwip/netif/etharp.c	/^update_arp_entry(struct netif *netif, struct ip_addr *ipaddr, struct eth_addr *ethaddr, u8_t flags)$/;"	f	file:
upper	kern/e1000.h	/^    } upper;$/;"	m	struct:e1000_tx_desc	typeref:union:e1000_tx_desc::__anon39
url	obj/user/httpd.asm	/^	url = request;$/;"	d
url	user/httpd.c	/^	char *url;$/;"	m	struct:http_request	file:
url_len	obj/user/httpd.asm	/^	url_len = request - url;$/;"	d
us_clientstate	net/lwip/netif/ppp/pap.h	/^  int us_clientstate;    \/* Client state *\/$/;"	m	struct:upap_state
us_id	net/lwip/netif/ppp/pap.h	/^  u_char us_id;          \/* Current id *\/$/;"	m	struct:upap_state
us_maxtransmits	net/lwip/netif/ppp/pap.h	/^  int us_maxtransmits;   \/* Maximum number of auth-reqs to send *\/$/;"	m	struct:upap_state
us_passwd	net/lwip/netif/ppp/pap.h	/^  const char *us_passwd; \/* Password *\/$/;"	m	struct:upap_state
us_passwdlen	net/lwip/netif/ppp/pap.h	/^  int us_passwdlen;      \/* Password length *\/$/;"	m	struct:upap_state
us_reqtimeout	net/lwip/netif/ppp/pap.h	/^  int us_reqtimeout;     \/* Time to wait for auth-req from peer *\/$/;"	m	struct:upap_state
us_serverstate	net/lwip/netif/ppp/pap.h	/^  int us_serverstate;    \/* Server state *\/$/;"	m	struct:upap_state
us_timeouttime	net/lwip/netif/ppp/pap.h	/^  int us_timeouttime;    \/* Timeout (seconds) for auth-req retrans. *\/$/;"	m	struct:upap_state
us_transmits	net/lwip/netif/ppp/pap.h	/^  int us_transmits;      \/* Number of auth-reqs sent *\/$/;"	m	struct:upap_state
us_unit	net/lwip/netif/ppp/pap.h	/^  int us_unit;           \/* Interface unit number *\/$/;"	m	struct:upap_state
us_user	net/lwip/netif/ppp/pap.h	/^  const char *us_user;   \/* User *\/$/;"	m	struct:upap_state
us_userlen	net/lwip/netif/ppp/pap.h	/^  int us_userlen;        \/* User length *\/$/;"	m	struct:upap_state
usage	fs/fsformat.c	/^usage(void)$/;"	f
usage	user/ls.c	/^usage(void)$/;"	f
usage	user/lsfd.c	/^usage(void)$/;"	f
usage	user/sh.c	/^usage(void)$/;"	f
use	net/lwip/include/ipv4/lwip/igmp.h	/^  u8_t               use; \/* counter of simultaneous uses *\/$/;"	m	struct:igmp_group
used	net/lwip/core/mem.c	/^  u8_t used;$/;"	m	struct:mem	file:
used	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER used;$/;"	m	struct:stats_syselem
used	net/lwip/include/lwip/stats.h	/^  mem_size_t used;$/;"	m	struct:stats_mem
usefprint	obj/user/lsfd.asm	/^			usefprint = 1;$/;"	d
useg	obj/net/ns.asm	/^          useg = useg->next;$/;"	d
useg	obj/net/ns.asm	/^    useg = NULL;$/;"	d
useg	obj/net/ns.asm	/^  useg = pcb->unacked;$/;"	d
useg	obj/net/ns.asm	/^  useg = queue = seg = NULL;$/;"	d
usehostname	net/lwip/netif/ppp/ppp.h	/^  u_int  usehostname       : 1;       \/* Use hostname for our_name *\/$/;"	m	struct:ppp_settings
usepeerdns	net/lwip/netif/ppp/ppp.h	/^  u_int  usepeerdns        : 1;       \/* Ask peer for DNS adds *\/$/;"	m	struct:ppp_settings
user	net/lwip/netif/ppp/ppp.h	/^  char user       [MAXNAMELEN   + 1]; \/* Username for PAP *\/$/;"	m	struct:ppp_settings
user_mem_assert	kern/pmap.c	/^user_mem_assert(struct Env *env, const void *va, size_t len, int perm)$/;"	f
user_mem_check	kern/pmap.c	/^user_mem_check(struct Env *env, const void *va, size_t len, int perm)$/;"	f
user_mem_check_addr	kern/pmap.c	/^static uintptr_t user_mem_check_addr;$/;"	v	file:
user_mem_check_addr	obj/kern/kernel.asm	/^	user_mem_check_addr = (start == ROUNDDOWN((uint32_t)va, PGSIZE)) ? (uint32_t)va : start;$/;"	d
user_test	gradelib.py	/^    def user_test(self, binary, *monitors, **kw):$/;"	m	class:Runner
utf	obj/kern/kernel.asm	/^			utf = (struct UTrapframe *)((uint32_t)(tf->tf_esp) - 4 - sizeof(struct UTrapframe));$/;"	d
utf	obj/kern/kernel.asm	/^			utf = (struct UTrapframe *)(UXSTACKTOP - sizeof(struct UTrapframe));$/;"	d
utf_eflags	inc/trap.h	/^	uint32_t utf_eflags;$/;"	m	struct:UTrapframe
utf_eip	inc/trap.h	/^	uintptr_t utf_eip;$/;"	m	struct:UTrapframe
utf_err	inc/trap.h	/^	uint32_t utf_err;$/;"	m	struct:UTrapframe
utf_esp	inc/trap.h	/^	uintptr_t utf_esp;$/;"	m	struct:UTrapframe
utf_fault_va	inc/trap.h	/^	uint32_t utf_fault_va;	\/* va for T_PGFLT, 0 otherwise *\/$/;"	m	struct:UTrapframe
utf_regs	inc/trap.h	/^	struct PushRegs utf_regs;$/;"	m	struct:UTrapframe	typeref:struct:UTrapframe::PushRegs
v	net/lwip/include/ipv6/lwip/ip.h	/^  u8_t tclass1:4, v:4;$/;"	m	struct:ip_hdr
v	net/lwip/jos/arch/sys_arch.c	/^	uint32_t v;$/;"	m	union:sys_sem_entry::__anon8	file:
v	obj/net/ns.asm	/^			v = mptr;$/;"	d
v	obj/net/ns.asm	/^	v = mptr;$/;"	d
v	obj/user/httpd.asm	/^			v = mptr;$/;"	d
v	obj/user/httpd.asm	/^	v = mptr;$/;"	d
v1_rxed	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER v1_rxed;          \/* *\/$/;"	m	struct:stats_igmp
v_len	net/lwip/include/lwip/snmp_structs.h	/^  u16_t v_len;$/;"	m	struct:obj_def
va	net/input.c	/^uint32_t va = 0x0fffa000;$/;"	v
va	obj/fs/fs.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/kern/kernel.asm	/^	va = (void*)(PGSIZE * NPDENTRIES + PGSIZE);$/;"	d
va	obj/net/ns.asm	/^				va = nsoutreq->pkt.jp_data;$/;"	d
va	obj/net/ns.asm	/^		va = get_buffer();$/;"	d
va	obj/net/ns.asm	/^	va = (void *)(REQVA + i * PGSIZE);$/;"	d
va	obj/net/ns.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/net/testinput.asm	/^				va = nsoutreq->pkt.jp_data;$/;"	d
va	obj/net/testinput.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/net/testoutput.asm	/^				va = nsoutreq->pkt.jp_data;$/;"	d
va	obj/net/testoutput.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/badsegment.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/breakpoint.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/buggyhello.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/buggyhello2.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/cat.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/divzero.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/dumbfork.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/echo.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/echosrv.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/echotest.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/evilhello.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/fairness.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultalloc.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultallocbad.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultbadhandler.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultdie.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultevilhandler.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultnostack.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultread.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultreadkernel.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultregs.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultwrite.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultwritekernel.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/forktree.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/hello.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/httpd.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/icode.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/idle.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/init.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/ls.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/lsfd.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/num.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/pingpong.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/pingpongs.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/primes.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/primespipe.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/sendpage.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/sh.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/softint.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/spawnhello.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/spin.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/stresssched.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testbss.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testfdsharing.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testfile.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testkbd.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testpipe.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testpiperace.asm	/^	va = 0;$/;"	d
va	obj/user/testpiperace.asm	/^	va = fd2data(fd);$/;"	d
va	obj/user/testpiperace.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testpiperace2.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testpteshare.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testshell.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testtime.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/yield.asm	/^	va = fd2data(fd0);$/;"	d
va_arg	inc/stdarg.h	10;"	d
va_end	inc/stdarg.h	12;"	d
va_is_dirty	fs/bc.c	/^va_is_dirty(void *va)$/;"	f
va_is_mapped	fs/bc.c	/^va_is_mapped(void *va)$/;"	f
va_list	inc/stdarg.h	/^typedef __builtin_va_list va_list;$/;"	t
va_start	inc/stdarg.h	8;"	d
val	obj/net/ns.asm	/^        val = (val * base) + (int)(c - '0');$/;"	d
val	obj/net/ns.asm	/^        val = (val << 4) | (int)(c + 10 - (islower(c) ? 'a' : 'A'));$/;"	d
val	obj/net/ns.asm	/^    val = 0;$/;"	d
val	obj/net/testinput.asm	/^        val = (val * base) + (int)(c - '0');$/;"	d
val	obj/net/testinput.asm	/^        val = (val << 4) | (int)(c + 10 - (islower(c) ? 'a' : 'A'));$/;"	d
val	obj/net/testinput.asm	/^    val = 0;$/;"	d
val	obj/user/echosrv.asm	/^        val = (val * base) + (int)(c - '0');$/;"	d
val	obj/user/echosrv.asm	/^        val = (val << 4) | (int)(c + 10 - (islower(c) ? 'a' : 'A'));$/;"	d
val	obj/user/echosrv.asm	/^    val = 0;$/;"	d
val	obj/user/echotest.asm	/^        val = (val * base) + (int)(c - '0');$/;"	d
val	obj/user/echotest.asm	/^        val = (val << 4) | (int)(c + 10 - (islower(c) ? 'a' : 'A'));$/;"	d
val	obj/user/echotest.asm	/^    val = 0;$/;"	d
val	obj/user/httpd.asm	/^        val = (val * base) + (int)(c - '0');$/;"	d
val	obj/user/httpd.asm	/^        val = (val << 4) | (int)(c + 10 - (islower(c) ? 'a' : 'A'));$/;"	d
val	obj/user/httpd.asm	/^    val = 0;$/;"	d
val	user/pingpongs.c	/^uint32_t val;$/;"	v
valid	obj/net/ns.asm	/^            valid = 0;$/;"	d
valid	obj/net/ns.asm	/^          valid = 0;$/;"	d
valid	obj/net/ns.asm	/^        valid = 0;$/;"	d
value	net/lwip/include/lwip/snmp_msg.h	/^  void *value;$/;"	m	struct:snmp_varbind
value	obj/net/ns.asm	/^  value = (u32_t)(*ptr++) << 24;$/;"	d
value_len	net/lwip/include/lwip/snmp_msg.h	/^  u8_t value_len;$/;"	m	struct:snmp_varbind
value_type	net/lwip/include/lwip/snmp_msg.h	/^  u8_t value_type;$/;"	m	struct:snmp_varbind
vb_idx	net/lwip/include/lwip/snmp_msg.h	/^  u8_t vb_idx;$/;"	m	struct:snmp_msg_pstat
vb_ptr	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind *vb_ptr;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_varbind
vcprintf	kern/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f
vcprintf	lib/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f
verlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t verlen;$/;"	m	struct:snmp_resp_header_lengths
verlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t verlen;$/;"	m	struct:snmp_trap_header_lengths
verlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t verlenlen;$/;"	m	struct:snmp_resp_header_lengths
verlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t verlenlen;$/;"	m	struct:snmp_trap_header_lengths
version	kern/mpconfig.c	/^	uint8_t version;                \/\/ [14]$/;"	m	struct:mpconf	file:
version	kern/mpconfig.c	/^	uint8_t version;                \/\/ local APIC version$/;"	m	struct:mpproc	file:
version	obj/user/httpd.asm	/^	version = request;$/;"	d
version	user/httpd.c	/^	char *version;$/;"	m	struct:http_request	file:
version_len	obj/user/httpd.asm	/^	version_len = request - version;$/;"	d
vfprintf	lib/fprintf.c	/^vfprintf(int fd, const char *fmt, va_list ap)$/;"	f
vjComp	net/lwip/netif/ppp/ppp.c	/^  struct vjcompress vjComp;     \/* Van Jabobsen compression header. *\/$/;"	m	struct:PPPControl_s	typeref:struct:PPPControl_s::vjcompress	file:
vjEnabled	net/lwip/netif/ppp/ppp.c	/^  int  vjEnabled;               \/* Flag indicating VJ compression enabled. *\/$/;"	m	struct:PPPControl_s	file:
vj_compress_init	net/lwip/netif/ppp/vj.c	/^vj_compress_init(struct vjcompress *comp)$/;"	f
vj_compress_tcp	net/lwip/netif/ppp/vj.c	/^vj_compress_tcp(struct vjcompress *comp, struct pbuf *pb)$/;"	f
vj_protocol	net/lwip/netif/ppp/ipcp.h	/^  u_short vj_protocol;       \/* protocol value to use in VJ option *\/$/;"	m	struct:ipcp_options
vj_uncompress_err	net/lwip/netif/ppp/vj.c	/^vj_uncompress_err(struct vjcompress *comp)$/;"	f
vj_uncompress_tcp	net/lwip/netif/ppp/vj.c	/^vj_uncompress_tcp(struct pbuf **nb, struct vjcompress *comp)$/;"	f
vj_uncompress_uncomp	net/lwip/netif/ppp/vj.c	/^vj_uncompress_uncomp(struct pbuf *nb, struct vjcompress *comp)$/;"	f
vjcompress	net/lwip/netif/ppp/vj.h	/^struct vjcompress {$/;"	s
vjcs_u	net/lwip/netif/ppp/vj.h	/^  } vjcs_u;$/;"	m	struct:cstate	typeref:union:cstate::__anon2
vjs_compressed	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_compressed;     \/* outbound compressed packets *\/$/;"	m	struct:vjstat
vjs_compressedin	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_compressedin;   \/* inbound compressed packets *\/$/;"	m	struct:vjstat
vjs_errorin	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_errorin;        \/* inbound unknown type packets *\/$/;"	m	struct:vjstat
vjs_misses	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_misses;         \/* times couldn't find conn. state *\/$/;"	m	struct:vjstat
vjs_packets	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_packets;        \/* outbound packets *\/$/;"	m	struct:vjstat
vjs_searches	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_searches;       \/* searches for connection state *\/$/;"	m	struct:vjstat
vjs_tossed	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_tossed;         \/* inbound packets tossed because of error *\/$/;"	m	struct:vjstat
vjs_uncompressedin	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_uncompressedin; \/* inbound uncompressed packets *\/$/;"	m	struct:vjstat
vjstat	net/lwip/netif/ppp/vj.h	/^struct vjstat {$/;"	s
vlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t vlen;$/;"	m	struct:snmp_varbind
vlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t vlenlen;$/;"	m	struct:snmp_varbind
void	obj/boot/boot.asm	/^void readsect(void*, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void readseg(uint32_t, uint32_t, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void$/;"	l
void	obj/fs/fs.asm	/^void *$/;"	l
void	obj/fs/fs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/fs/fs.asm	/^void$/;"	l
void	obj/kern/kernel.asm	/^void	user_mem_assert(struct Env *env, const void *va, size_t len, int perm);$/;"	l
void	obj/kern/kernel.asm	/^void $/;"	l
void	obj/kern/kernel.asm	/^void *$/;"	l
void	obj/kern/kernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/kern/kernel.asm	/^void sched_halt(void);$/;"	l
void	obj/kern/kernel.asm	/^void$/;"	l
void	obj/net/ns.asm	/^void *$/;"	l
void	obj/net/ns.asm	/^void *mem_calloc(mem_size_t count, mem_size_t size)$/;"	l
void	obj/net/ns.asm	/^void dhcp_arp_reply(struct netif *netif, struct ip_addr *addr)$/;"	l
void	obj/net/ns.asm	/^void netif_remove(struct netif * netif)$/;"	l
void	obj/net/ns.asm	/^void netif_set_down(struct netif *netif)$/;"	l
void	obj/net/ns.asm	/^void netif_set_up(struct netif *netif)$/;"	l
void	obj/net/ns.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/net/ns.asm	/^void$/;"	l
void	obj/net/testinput.asm	/^void *$/;"	l
void	obj/net/testinput.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/net/testinput.asm	/^void$/;"	l
void	obj/net/testoutput.asm	/^void *$/;"	l
void	obj/net/testoutput.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/net/testoutput.asm	/^void$/;"	l
void	obj/user/badsegment.asm	/^void *$/;"	l
void	obj/user/badsegment.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/badsegment.asm	/^void$/;"	l
void	obj/user/breakpoint.asm	/^void *$/;"	l
void	obj/user/breakpoint.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/breakpoint.asm	/^void$/;"	l
void	obj/user/buggyhello.asm	/^void *$/;"	l
void	obj/user/buggyhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/buggyhello.asm	/^void$/;"	l
void	obj/user/buggyhello2.asm	/^void *$/;"	l
void	obj/user/buggyhello2.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/buggyhello2.asm	/^void$/;"	l
void	obj/user/cat.asm	/^void *$/;"	l
void	obj/user/cat.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/cat.asm	/^void$/;"	l
void	obj/user/divzero.asm	/^void *$/;"	l
void	obj/user/divzero.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/divzero.asm	/^void$/;"	l
void	obj/user/dumbfork.asm	/^void *$/;"	l
void	obj/user/dumbfork.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/dumbfork.asm	/^void$/;"	l
void	obj/user/echo.asm	/^void *$/;"	l
void	obj/user/echo.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/echo.asm	/^void$/;"	l
void	obj/user/echosrv.asm	/^void *$/;"	l
void	obj/user/echosrv.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/echosrv.asm	/^void$/;"	l
void	obj/user/echotest.asm	/^void *$/;"	l
void	obj/user/echotest.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/echotest.asm	/^void umain(int argc, char **argv)$/;"	l
void	obj/user/echotest.asm	/^void$/;"	l
void	obj/user/evilhello.asm	/^void *$/;"	l
void	obj/user/evilhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/evilhello.asm	/^void$/;"	l
void	obj/user/fairness.asm	/^void *$/;"	l
void	obj/user/fairness.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/fairness.asm	/^void$/;"	l
void	obj/user/faultalloc.asm	/^void *$/;"	l
void	obj/user/faultalloc.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultalloc.asm	/^void$/;"	l
void	obj/user/faultallocbad.asm	/^void *$/;"	l
void	obj/user/faultallocbad.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultallocbad.asm	/^void$/;"	l
void	obj/user/faultbadhandler.asm	/^void *$/;"	l
void	obj/user/faultbadhandler.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultbadhandler.asm	/^void$/;"	l
void	obj/user/faultdie.asm	/^void *$/;"	l
void	obj/user/faultdie.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultdie.asm	/^void$/;"	l
void	obj/user/faultevilhandler.asm	/^void *$/;"	l
void	obj/user/faultevilhandler.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultevilhandler.asm	/^void$/;"	l
void	obj/user/faultnostack.asm	/^void *$/;"	l
void	obj/user/faultnostack.asm	/^void _pgfault_upcall();$/;"	l
void	obj/user/faultnostack.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultnostack.asm	/^void$/;"	l
void	obj/user/faultread.asm	/^void *$/;"	l
void	obj/user/faultread.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultread.asm	/^void$/;"	l
void	obj/user/faultreadkernel.asm	/^void *$/;"	l
void	obj/user/faultreadkernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultreadkernel.asm	/^void$/;"	l
void	obj/user/faultregs.asm	/^void *$/;"	l
void	obj/user/faultregs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultregs.asm	/^void$/;"	l
void	obj/user/faultwrite.asm	/^void *$/;"	l
void	obj/user/faultwrite.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultwrite.asm	/^void$/;"	l
void	obj/user/faultwritekernel.asm	/^void *$/;"	l
void	obj/user/faultwritekernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultwritekernel.asm	/^void$/;"	l
void	obj/user/forktree.asm	/^void *$/;"	l
void	obj/user/forktree.asm	/^void forktree(const char *cur);$/;"	l
void	obj/user/forktree.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/forktree.asm	/^void$/;"	l
void	obj/user/hello.asm	/^void *$/;"	l
void	obj/user/hello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/hello.asm	/^void$/;"	l
void	obj/user/httpd.asm	/^void *$/;"	l
void	obj/user/httpd.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/httpd.asm	/^void$/;"	l
void	obj/user/icode.asm	/^void *$/;"	l
void	obj/user/icode.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/icode.asm	/^void$/;"	l
void	obj/user/idle.asm	/^void *$/;"	l
void	obj/user/idle.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/idle.asm	/^void$/;"	l
void	obj/user/init.asm	/^void *$/;"	l
void	obj/user/init.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/init.asm	/^void$/;"	l
void	obj/user/ls.asm	/^void *$/;"	l
void	obj/user/ls.asm	/^void ls1(const char*, bool, off_t, const char*);$/;"	l
void	obj/user/ls.asm	/^void lsdir(const char*, const char*);$/;"	l
void	obj/user/ls.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/ls.asm	/^void$/;"	l
void	obj/user/lsfd.asm	/^void *$/;"	l
void	obj/user/lsfd.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/lsfd.asm	/^void$/;"	l
void	obj/user/num.asm	/^void *$/;"	l
void	obj/user/num.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/num.asm	/^void$/;"	l
void	obj/user/pingpong.asm	/^void *$/;"	l
void	obj/user/pingpong.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/pingpong.asm	/^void$/;"	l
void	obj/user/pingpongs.asm	/^void *$/;"	l
void	obj/user/pingpongs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/pingpongs.asm	/^void$/;"	l
void	obj/user/primes.asm	/^void *$/;"	l
void	obj/user/primes.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/primes.asm	/^void$/;"	l
void	obj/user/primespipe.asm	/^void *$/;"	l
void	obj/user/primespipe.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/primespipe.asm	/^void$/;"	l
void	obj/user/sendpage.asm	/^void *$/;"	l
void	obj/user/sendpage.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/sendpage.asm	/^void$/;"	l
void	obj/user/sh.asm	/^void *$/;"	l
void	obj/user/sh.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/sh.asm	/^void$/;"	l
void	obj/user/softint.asm	/^void *$/;"	l
void	obj/user/softint.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/softint.asm	/^void$/;"	l
void	obj/user/spawnhello.asm	/^void *$/;"	l
void	obj/user/spawnhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/spawnhello.asm	/^void$/;"	l
void	obj/user/spin.asm	/^void *$/;"	l
void	obj/user/spin.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/spin.asm	/^void$/;"	l
void	obj/user/stresssched.asm	/^void *$/;"	l
void	obj/user/stresssched.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/stresssched.asm	/^void$/;"	l
void	obj/user/testbss.asm	/^void *$/;"	l
void	obj/user/testbss.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testbss.asm	/^void$/;"	l
void	obj/user/testfdsharing.asm	/^void *$/;"	l
void	obj/user/testfdsharing.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testfdsharing.asm	/^void$/;"	l
void	obj/user/testfile.asm	/^void *$/;"	l
void	obj/user/testfile.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testfile.asm	/^void$/;"	l
void	obj/user/testkbd.asm	/^void *$/;"	l
void	obj/user/testkbd.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testkbd.asm	/^void$/;"	l
void	obj/user/testpipe.asm	/^void *$/;"	l
void	obj/user/testpipe.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testpipe.asm	/^void$/;"	l
void	obj/user/testpiperace.asm	/^void *$/;"	l
void	obj/user/testpiperace.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testpiperace.asm	/^void$/;"	l
void	obj/user/testpiperace2.asm	/^void *$/;"	l
void	obj/user/testpiperace2.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testpiperace2.asm	/^void$/;"	l
void	obj/user/testpteshare.asm	/^void *$/;"	l
void	obj/user/testpteshare.asm	/^void childofspawn(void);$/;"	l
void	obj/user/testpteshare.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testpteshare.asm	/^void$/;"	l
void	obj/user/testshell.asm	/^void *$/;"	l
void	obj/user/testshell.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testshell.asm	/^void wrong(int, int, int);$/;"	l
void	obj/user/testshell.asm	/^void$/;"	l
void	obj/user/testtime.asm	/^void *$/;"	l
void	obj/user/testtime.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testtime.asm	/^void$/;"	l
void	obj/user/yield.asm	/^void *$/;"	l
void	obj/user/yield.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/yield.asm	/^void$/;"	l
voidfunc	net/lwip/include/lwip/netifapi.h	/^      void  (* voidfunc)(struct netif *netif);$/;"	m	struct:netifapi_msg_msg::__anon22::__anon24
volatile	obj/kern/kernel.asm	/^volatile uint32_t *lapic;$/;"	l
volatile	obj/user/stresssched.asm	/^volatile int counter;$/;"	l
vpd_key0	kern/pcireg.h	/^	uint8_t		vpd_key0;$/;"	m	struct:pci_vpd
vpd_key1	kern/pcireg.h	/^	uint8_t		vpd_key1;$/;"	m	struct:pci_vpd
vpd_len	kern/pcireg.h	/^	uint8_t		vpd_len;		\/* length of data only *\/$/;"	m	struct:pci_vpd
vpdres_byte0	kern/pcireg.h	/^	uint8_t		vpdres_byte0;		\/* length of data + tag *\/$/;"	m	struct:pci_vpd_smallres
vpdres_byte0	kern/pcireg.h	/^	uint8_t		vpdres_byte0;$/;"	m	struct:pci_vpd_largeres
vpdres_len_lsb	kern/pcireg.h	/^	uint8_t		vpdres_len_lsb;		\/* length of data only *\/$/;"	m	struct:pci_vpd_largeres
vpdres_len_msb	kern/pcireg.h	/^	uint8_t		vpdres_len_msb;$/;"	m	struct:pci_vpd_largeres
vprintfmt	lib/printfmt.c	/^vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)$/;"	f
vsnprintf	lib/printfmt.c	/^vsnprintf(char *buf, int n, const char *fmt, va_list ap)$/;"	f
w	net/lwip/include/lwip/api_msg.h	/^    } w;$/;"	m	union:api_msg_msg::__anon25	typeref:struct:api_msg_msg::__anon25::__anon29
wait	gradelib.py	/^    def wait(self):$/;"	f
wait	lib/wait.c	/^wait(envid_t envid)$/;"	f
waitdisk	boot/main.c	/^waitdisk(void)$/;"	f
waiters	net/lwip/jos/arch/sys_arch.c	/^	    uint16_t waiters;$/;"	m	struct:sys_sem_entry::__anon8::__anon9	file:
walk_path	fs/fs.c	/^walk_path(const char *path, struct File **pdir, struct File **pf, char *lastelem)$/;"	f	file:
want	obj/user/init.asm	/^	want = 0xf989e;$/;"	d
warn	inc/assert.h	11;"	d
was	obj/kern/kernel.asm	/^	was = *cp;$/;"	d
we	obj/net/ns.asm	/^       we do NOT return to the application thread, since ERR_MEM is$/;"	d
wfd	obj/user/primespipe.asm	/^	wfd = pfd[1];$/;"	d
wfd	obj/user/testshell.asm	/^	wfd = pfds[1];$/;"	d
who	obj/user/dumbfork.asm	/^	who = dumbfork();$/;"	d
whom	net/serv.c	/^	uint32_t whom;$/;"	m	struct:st_args	file:
width	obj/fs/fs.asm	/^				width = 0;$/;"	d
width	obj/fs/fs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/kern/kernel.asm	/^				width = 0;$/;"	d
width	obj/kern/kernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/net/ns.asm	/^				width = 0;$/;"	d
width	obj/net/ns.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/net/testinput.asm	/^				width = 0;$/;"	d
width	obj/net/testinput.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/net/testoutput.asm	/^				width = 0;$/;"	d
width	obj/net/testoutput.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/badsegment.asm	/^				width = 0;$/;"	d
width	obj/user/badsegment.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/breakpoint.asm	/^				width = 0;$/;"	d
width	obj/user/breakpoint.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/buggyhello.asm	/^				width = 0;$/;"	d
width	obj/user/buggyhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/buggyhello2.asm	/^				width = 0;$/;"	d
width	obj/user/buggyhello2.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/cat.asm	/^				width = 0;$/;"	d
width	obj/user/cat.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/divzero.asm	/^				width = 0;$/;"	d
width	obj/user/divzero.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/dumbfork.asm	/^				width = 0;$/;"	d
width	obj/user/dumbfork.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/echo.asm	/^				width = 0;$/;"	d
width	obj/user/echo.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/echosrv.asm	/^				width = 0;$/;"	d
width	obj/user/echosrv.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/echotest.asm	/^				width = 0;$/;"	d
width	obj/user/echotest.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/evilhello.asm	/^				width = 0;$/;"	d
width	obj/user/evilhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/fairness.asm	/^				width = 0;$/;"	d
width	obj/user/fairness.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultalloc.asm	/^				width = 0;$/;"	d
width	obj/user/faultalloc.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultallocbad.asm	/^				width = 0;$/;"	d
width	obj/user/faultallocbad.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultbadhandler.asm	/^				width = 0;$/;"	d
width	obj/user/faultbadhandler.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultdie.asm	/^				width = 0;$/;"	d
width	obj/user/faultdie.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultevilhandler.asm	/^				width = 0;$/;"	d
width	obj/user/faultevilhandler.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultnostack.asm	/^				width = 0;$/;"	d
width	obj/user/faultnostack.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultread.asm	/^				width = 0;$/;"	d
width	obj/user/faultread.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^				width = 0;$/;"	d
width	obj/user/faultreadkernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultregs.asm	/^				width = 0;$/;"	d
width	obj/user/faultregs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultwrite.asm	/^				width = 0;$/;"	d
width	obj/user/faultwrite.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultwritekernel.asm	/^				width = 0;$/;"	d
width	obj/user/faultwritekernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/forktree.asm	/^				width = 0;$/;"	d
width	obj/user/forktree.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/hello.asm	/^				width = 0;$/;"	d
width	obj/user/hello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/httpd.asm	/^				width = 0;$/;"	d
width	obj/user/httpd.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/icode.asm	/^				width = 0;$/;"	d
width	obj/user/icode.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/idle.asm	/^				width = 0;$/;"	d
width	obj/user/idle.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/init.asm	/^				width = 0;$/;"	d
width	obj/user/init.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/ls.asm	/^				width = 0;$/;"	d
width	obj/user/ls.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/lsfd.asm	/^				width = 0;$/;"	d
width	obj/user/lsfd.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/num.asm	/^				width = 0;$/;"	d
width	obj/user/num.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/pingpong.asm	/^				width = 0;$/;"	d
width	obj/user/pingpong.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/pingpongs.asm	/^				width = 0;$/;"	d
width	obj/user/pingpongs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/primes.asm	/^				width = 0;$/;"	d
width	obj/user/primes.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/primespipe.asm	/^				width = 0;$/;"	d
width	obj/user/primespipe.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/sendpage.asm	/^				width = 0;$/;"	d
width	obj/user/sendpage.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/sh.asm	/^				width = 0;$/;"	d
width	obj/user/sh.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/softint.asm	/^				width = 0;$/;"	d
width	obj/user/softint.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/spawnhello.asm	/^				width = 0;$/;"	d
width	obj/user/spawnhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/spin.asm	/^				width = 0;$/;"	d
width	obj/user/spin.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/stresssched.asm	/^				width = 0;$/;"	d
width	obj/user/stresssched.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testbss.asm	/^				width = 0;$/;"	d
width	obj/user/testbss.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testfdsharing.asm	/^				width = 0;$/;"	d
width	obj/user/testfdsharing.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testfile.asm	/^				width = 0;$/;"	d
width	obj/user/testfile.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testkbd.asm	/^				width = 0;$/;"	d
width	obj/user/testkbd.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testpipe.asm	/^				width = 0;$/;"	d
width	obj/user/testpipe.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testpiperace.asm	/^				width = 0;$/;"	d
width	obj/user/testpiperace.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testpiperace2.asm	/^				width = 0;$/;"	d
width	obj/user/testpiperace2.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testpteshare.asm	/^				width = 0;$/;"	d
width	obj/user/testpteshare.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testshell.asm	/^				width = 0;$/;"	d
width	obj/user/testshell.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testtime.asm	/^				width = 0;$/;"	d
width	obj/user/testtime.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/yield.asm	/^				width = 0;$/;"	d
width	obj/user/yield.asm	/^				width = precision, precision = -1;$/;"	d
winsaddr	net/lwip/netif/ppp/ipcp.h	/^  u32_t   winsaddr[2];       \/* Primary and secondary MS WINS entries *\/$/;"	m	struct:ipcp_options
wnd	obj/net/ns.asm	/^  wnd = LWIP_MIN(pcb->snd_wnd, pcb->cwnd);$/;"	d
word	net/lwip/netif/ppp/auth.c	/^  char        word[1];$/;"	m	struct:wordlist	file:
wordlist	net/lwip/netif/ppp/auth.c	/^struct wordlist {$/;"	s	file:
wpos	kern/console.c	/^	uint32_t wpos;$/;"	m	struct:__anon34	file:
write	inc/fs.h	/^	} write;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_write
write	lib/fd.c	/^write(int fdnum, const void *buf, size_t n)$/;"	f
write	net/lwip/include/lwip/sockets.h	346;"	d
write_delayed	net/lwip/include/lwip/api.h	/^  u8_t write_delayed;$/;"	m	struct:netconn
write_eflags	inc/x86.h	/^write_eflags(uint32_t eflags)$/;"	f
write_finished	obj/net/ns.asm	/^      write_finished = 1;$/;"	d
write_finished	obj/net/ns.asm	/^    write_finished = 1;$/;"	d
write_msg	net/lwip/include/lwip/api.h	/^  struct api_msg_msg *write_msg;$/;"	m	struct:netconn	typeref:struct:netconn::api_msg_msg
write_offset	net/lwip/include/lwip/api.h	/^  int write_offset;$/;"	m	struct:netconn
writebuf	lib/fprintf.c	/^writebuf(struct printbuf *b)$/;"	f	file:
writefile	fs/fsformat.c	/^writefile(struct Dir *dir, const char *name)$/;"	f
writeset	net/lwip/api/sockets.c	/^  fd_set *writeset;$/;"	m	struct:lwip_select_cb	file:
wrong	user/testshell.c	/^wrong(int rfd, int kfd, int off)$/;"	f
wrv	obj/kern/kernel.asm	/^	wrv = (uint16_t *)KADDR((0x40 << 4 | 0x67));  \/\/ Warm reset vector$/;"	d
xchecksum	kern/mpconfig.c	/^	uint8_t xchecksum;              \/\/ extended table checksum$/;"	m	struct:mpconf	file:
xchg	inc/x86.h	/^xchg(volatile uint32_t *addr, uint32_t newval)$/;"	f
xid	net/lwip/core/dhcp.c	/^static u32_t xid = 0xABCD0000;$/;"	v	file:
xid	net/lwip/include/lwip/dhcp.h	/^  u32_t xid;$/;"	m	struct:dhcp
xlength	kern/mpconfig.c	/^	uint16_t xlength;               \/\/ extended table length$/;"	m	struct:mpconf	file:
xmit	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER xmit;             \/* Transmitted packets. *\/$/;"	m	struct:stats_proto
xmit_accm	net/lwip/netif/ppp/lcp.c	/^ext_accm xmit_accm[NUM_PPP];           \/* extended transmit ACCM *\/$/;"	v
xmit_idle	net/lwip/netif/ppp/ppp.h	/^  u_short xmit_idle;      \/* seconds since last NP packet sent *\/$/;"	m	struct:ppp_idle
xopen	user/testfile.c	/^xopen(const char *path, int mode)$/;"	f	file:
zero	obj/user/divzero.asm	/^	zero = 0;$/;"	d
zero	user/divzero.c	/^int zero;$/;"	v
